{"buggy_code": ["MANIFEST for xterm, version xterm-365c\n--------------------------------------------------------------------------------\nMANIFEST                        this file\n256colres.h                     resource-definitions for 256-color mode\n256colres.pl                    script to generate 256colres.h\n88colres.h                      resource definitions for 88-color mode\n88colres.pl                     script to generate 88colres.h\nAAA_README_VMS.txt              note for VMS port of 'xterm'\nCOPYING                         license for this program\nINSTALL                         configure script: options and related install instructions\nImakefile                       imake template for Makefile\nKOI8RXTerm.ad                   resources for koi8rxterm\nMakefile.in                     configure script template for Makefile\nREADME                          overview & caveats for 'xterm'\nREADME.i18n                     i18n readme:\nREADME.os390                    overview for os390 (EBCDIC) port of 'xterm'\nTHANKS                          list of direct contributors\nTekPrsTbl.c                     Tek4014 parser state tables\nTekparse.def                    template for generating Tekparse.h\nTekparse.h                      Tek4014 parser-state definitions\nTekproc.c                       Tek4014 parser-state functions\nTests                           Useful tests for xterm-developers\nUXTerm.ad                       alternate resources for UTF-8\nVTPrsTbl.c                      VT100 parser state tables\nVTparse.def                     template for generating VTparse.h\nVTparse.h                       VT100 parser-state definitions\nXTerm-col.ad                    color resource definitions for XTerm class\nXTerm.ad                        resource definitions for XTerm class\naclocal.m4                      configure script: custom macros\nbutton.c                        mouse button and selection processing\ncachedGCs.c                     maintain cache of GC's\ncharclass.c                     compact character-class module\ncharclass.h                     interface of charclass.c\ncharproc.c                      VT100 parser functions\ncharsets.c                      module to translate character-sets\nconfig.guess                    configure script: guess the system type\nconfig.sub                      configure script: validate system type\nconfigure                       generated\nconfigure.in                    template for generating configure script\nctlseqs.ms                      documentation: Xterm Control Sequences\nctlseqs.txt                     generated rendition of ctlseqs.ms\ncursor.c                        VT100 low-level cursor movement\ndata.c                          global data declarations\ndata.h                          global data external-definitions\ndf-install.in                   utility script for desktop-files\ndoublechr.c                     VT100 double-size character support\nerror.h                         error-code definitions for 'xterm'\nfontutils.c                     xterm functions for (re)loading fonts\nfontutils.h                     interface of fontutils.c\ngen-charsets.pl                 script to convert codepages into code\ngen-pc-fkeys.pl                 script to generate extended function-key terminfo\ngraphics.c                      graphics support functions for 'xterm'\ngraphics.h                      interface of graphics.c\ngraphics_regis.c                support for ReGIS\ngraphics_regis.h                interface of graphics_regis.c\ngraphics_sixel.c                support for Sixels\ngraphics_sixel.h                interface of graphics_sixel.c\nhtml.c                          format HTML-screendumps\ninput.c                         VT100 key-symbol and function-key translation\ninstall-sh                      install-script (needed by configure)\nkeysym2ucs.c                    lookup-table for UTF-8 to keysyms\nkeysym2ucs.h                    interface of keysym2ucs.c\nkoi8rxterm                      KOI-8 wrapper from Debian (originally me)\nkoi8rxterm.man                  manpage for koi8rxterm\nlinedata.c                      manage all line-data for VT100 widget\nlink_axp.com                    build-script for VMS port of xterm\nmain.c                          main program of 'xterm'\nmain.h                          default definitions for 'xterm'\nmake.com                        build-script for VMS port of 'xterm'\nmenu.c                          popup/pulldown menus for 'xterm'\nmenu.h                          interface of menu.c\nminstall.in                     script for installing manpages\nmisc.c                          miscellaneous utility functions for 'xterm'\nplink.sh                        script to prune unneeded libraries from link\nprecompose.c                    table of precompose sequences\nprecompose.h                    interface of precompose.c\nprint.c                         VT100+ print support functions\nptydata.c                       functions to manipulate data read from pty\nptyx.h                          structure-definitions for 'xterm'\nresize.c                        program to compute/modify xterm's window size\nresize.man                      manual page for 'resize'\nrun-tic.sh                      run tic, filtering out harmless messages\nscreen.c                        VT100 screen update functions\nscrollback.c                    manage scrollback (a big FIFO)\nscrollbar.c                     VT100 scrollbar support functions\nsinstall.sh                     install setuid if existing program was\nsvg.c                           format SVG-screendumps\ntabs.c                          VT100 tabstop support-functions\ntermcap                         termcap entries for 'xterm'\nterminfo                        terminfo entries for 'xterm'\ntestxmc.c                       testing: xmc/magic-cookies\ntrace.c                         debugging trace functions for 'xterm'\ntrace.h                         interface of trace.c\nutil.c                          miscellaneous utility functions for 'xterm'\nuxterm                          wrapper script to make unicode-xterm\nuxterm.desktop                  sample desktop file for uxterm\nuxterm.man                      manpage for uxterm, from Debian\nversion.c                       xterm package version, used also in resize\nversion.h                       version of xterm\nvms.c                           VMS version of xterm's spawn(), etc.\nvms.h                           system headers and definitions for vms.c\nwcwidth.c                       wide-character utility functions\nwcwidth.h                       interface of wcwidth.c\nxcharmouse.h                    Jason Bacon's mouse-defs, cleaned up a little\nxstrings.c                      a few common string functions\nxstrings.h                      interface of xstrings.c\nxterm.appdata.xml               sample \"appdata.xml\" file\nxterm.dat                       application defaults for VMS port of 'xterm'\nxterm.desktop                   sample desktop file for xterm.\nxterm.h                         common includes, definitions and prototypes for 'xterm'\nxterm.log.html                  changelog for xterm\nxterm.man                       manual page for 'xterm'\nxterm_axp.opt                   linker options file for VMS port of 'xterm'\nxterm_io.h                      split-out definitions of termio/termios/sgtty and winsize from main.c, os2main.c, screen.c and resize.c\nxtermcap.c                      termcap-related functions.\nxtermcap.h                      interface of xtermcap.c\nxtermcfg.hin                    configure script: template for xtermcfg.h\nxutf8.c                         JC's cleanup of UTF8\nxutf8.h                         JC's cleanup of UTF8\nicons                           subdirectory\nicons/filled-xterm.png          filled-xterm variants\nicons/filled-xterm.svg          filled-xterm variants\nicons/filled-xterm.xpms         filled-xterm variants\nicons/filled-xterm_16x16.xpm    filled-xterm variants\nicons/filled-xterm_32x32.xpm    filled-xterm variants\nicons/filled-xterm_48x48.xpm    filled-xterm variants\nicons/make-xpms                 script to make combined xpm-icons\nicons/mini.xterm.svg            svg format for mini-icon\nicons/mini.xterm.xpms           collection of mini-icons\nicons/mini.xterm_16x16.png      mini-icon 16x16 png\nicons/mini.xterm_16x16.xpm      mini-icon 16x16 pixmap\nicons/mini.xterm_256x256.png    mini-icon 256x256 png\nicons/mini.xterm_32x32.png      mini-icon 32x32 png\nicons/mini.xterm_32x32.xpm      mini-icon 32x32 pixmap\nicons/mini.xterm_48x48.png      mini-icon 48x48 png\nicons/mini.xterm_48x48.xpm      mini-icon 48x48 pixmap\nicons/terminal_48x48.svg        svg-format of \"terminal\"\nicons/terminal_48x48.xpm        xpm-format of \"terminal\"\nicons/xterm-color.png           xterm-color 48x48, in png-format\nicons/xterm-color.svg           xterm-color icon\nicons/xterm-color.xpms          collection of color icons\nicons/xterm-color_16x16.xpm     16x16 color icon\nicons/xterm-color_32x32.xpm     32x32 color icon\nicons/xterm-color_48x48.xpm     48x48 color icon\nicons/xterm.png                 xterm 48x48, in png-format\nicons/xterm.svg                 xterm icon\nicons/xterm.xpms                collection of icons\nicons/xterm_16x16.xpm           normal icon 16x16 pixmap\nicons/xterm_32x32.xpm           32x32 monochrome icon\nicons/xterm_48x48.xpm           48x48 monochrome icon\npackage/debian                  subdirectory\npackage/debian/changelog        build-script\npackage/debian/color.sed        build-script\npackage/debian/compat           build-script\npackage/debian/control          build-script\npackage/debian/copyright        build-script\npackage/debian/postinst         post-install script for update-alternatives\npackage/debian/prerm            pre-remove script for update-alternatives\npackage/debian/rules            build-script\npackage/debian/source           subdirectory\npackage/debian/source/format    build-script\npackage/debian                  subdirectory\npackage/debian/watch            build-script\npackage/debian/xterm-dev.docs   build-script\npackage/debian/xterm-dev.lintian-overrides  ignore useless warnings from lintian\npackage/debian/xterm-dev.menu   Debian menu-file for xterm-dev package.\npackage/debian/xterm-xres.sed   build-script\npackage/freebsd                 subdirectory\npackage/freebsd/Makefile        build-script\npackage/freebsd/distinfo        generated sums\npackage/freebsd/pkg-descr       build-script\npackage/freebsd/pkg-message     build-script\npackage/freebsd/pkg-message.wchar  build-script\npackage/freebsd/pkg-plist       build-script\npackage/pkgsrc                  subdirectory\npackage/pkgsrc/DESCR            build-script\npackage/pkgsrc/Makefile         build-script\npackage/pkgsrc/PLIST            build-script\npackage/pkgsrc/distinfo         build-script\npackage/pkgsrc/options.mk       build-script\npackage                         subdirectory\npackage/xterm.spec              build-script\ntektests                        subdirectory\ntektests/aitest.tek             tek4014 demo: draw a globe\ntektests/dmerc.tek              tek4014 demo: draws a Mercator projection with orbit\ntektests/fotest.tek             tek4014 demo: draw a scatterplot on log scale\ntektests/imtest.tek             tek4014 demo: draw a test pattern\ntektests/imtesth.tek            tek4014 demo: draw a test pattern\ntektests/ocpred.tek             tek4014 demo: an occultation prediction\ntektests/usmap.tek              tek4014 demo: a US map\nunicode                         subdirectory\nunicode/README                  description of files in ./unicode\nunicode/convmap.pl              perl script for generating the lookup table for UTF-8 to keysym\nunicode/keysym.map              keysym mapping from UTF-8\nunicode/make-precompose.sh      make precompose.c\nunicode/precompose.c.head       header of precompose.c\nunicode/precompose.c.tail       tail of precompose.c\nvttests                         subdirectory\nvttests/16colors.sh             test-script to show 16-colors\nvttests/256colors.pl            script to illustrate 256-colors\nvttests/256colors2.pl           fancy test-script for 256-colors\nvttests/88colors.pl             sample script showing 88-colors\nvttests/88colors2.pl            sample script showing 88-colors\nvttests/8colors.sh              test-script to illustrate 8-colors\nvttests/acolors.sh              demonstrate changing the ANSI colors\nvttests/closest-rgb.pl          demo of color-distances\nvttests/doublechars.sh          test script to demonstrate doublesize chars\nvttests/dynamic.pl              demo for dynamic colors\nvttests/dynamic.sh              script to illustrate the dynamic colors control sequence\nvttests/dynamic2.sh             complete example of dynamic colors\nvttests/fonts.sh                script to demonstrate font-switching sequences\nvttests/modify-keys.pl          illustrate modifyOtherKeys with a table\nvttests/mouse-codes             demo script for mouse-codes\nvttests/other-sgr.sh            demonstrate non-VTxx SGRs\nvttests/paste64.pl              script to test base64-selection option\nvttests/print-vt-chars.pl       demo-script\nvttests/query-color.pl          demonstrate OSC 4\nvttests/query-dynamic.pl        demonstrate OSC 10 to OSC 19\nvttests/query-fonts.pl          script to demo/test font-querying\nvttests/query-status.pl         query DECRQSS status\nvttests/query-xres.pl           test/demo for DCS+Q\nvttests/report-sgr.pl           demonstrate report-sgr\nvttests/resize.pl               translated resize.sh to perl since it is easy to test, and I needed\nvttests/resize.sh               script to demonstrate resizing\nvttests/sgrPushPop.pl           demonstrate xterm SGR push/pop\nvttests/sgrPushPop2.pl          demonstrate xterm SGR push/pop for colors\nvttests/tcapquery.pl            script to test tcap-query option\nvttests/title.sh                test-script to show title of xterm in action\n", "/* $XTermId: button.c,v 1.631 2021/02/04 01:00:26 tom Exp $ */\n\n/*\n * Copyright 1999-2020,2021 by Thomas E. Dickey\n *\n *                         All Rights Reserved\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Except as contained in this notice, the name(s) of the above copyright\n * holders shall not be used in advertising or otherwise to promote the\n * sale, use or other dealings in this Software without prior written\n * authorization.\n *\n *\n * Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts.\n *\n *                         All Rights Reserved\n *\n * Permission to use, copy, modify, and distribute this software and its\n * documentation for any purpose and without fee is hereby granted,\n * provided that the above copyright notice appear in all copies and that\n * both that copyright notice and this permission notice appear in\n * supporting documentation, and that the name of Digital Equipment\n * Corporation not be used in advertising or publicity pertaining to\n * distribution of the software without specific, written prior permission.\n *\n *\n * DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING\n * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL\n * DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR\n * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n * SOFTWARE.\n */\n\n/*\nbutton.c\tHandles button events in the terminal emulator.\n\t\tdoes cut/paste operations, change modes via menu,\n\t\tpasses button events through to some applications.\n\t\t\t\tJ. Gettys.\n*/\n\n#include <xterm.h>\n\n#include <stdio.h>\n#include <ctype.h>\n#include <assert.h>\n\n#include <X11/Xatom.h>\n#include <X11/Xmu/Atoms.h>\n#include <X11/Xmu/StdSel.h>\n\n#include <xutf8.h>\n#include <fontutils.h>\n\n#include <data.h>\n#include <error.h>\n#include <menu.h>\n#include <charclass.h>\n#include <xstrings.h>\n\n#if OPT_SELECT_REGEX\n#ifdef HAVE_PCRE2POSIX_H\n#include <pcre2posix.h>\n#else\n#ifdef HAVE_PCREPOSIX_H\n#include <pcreposix.h>\n#else /* POSIX regex.h */\n#include <sys/types.h>\n#include <regex.h>\n#endif\n#endif\n#endif\n\n#ifdef HAVE_X11_TRANSLATEI_H\n#include <X11/ConvertI.h>\n#include <X11/TranslateI.h>\n#else\nextern String _XtPrintXlations(Widget w,\n\t\t\t       XtTranslations xlations,\n\t\t\t       Widget accelWidget,\n\t\t\t       _XtBoolean includeRHS);\n#endif\n\n#define PRIMARY_NAME    \"PRIMARY\"\n#define CLIPBOARD_NAME  \"CLIPBOARD\"\n#define SECONDARY_NAME  \"SECONDARY\"\n\n#define AtomToSelection(d,n) \\\n\t\t (((n) == XA_CLIPBOARD(d)) \\\n\t\t  ? CLIPBOARD_CODE \\\n\t\t  : (((n) == XA_SECONDARY) \\\n\t\t     ? SECONDARY_CODE \\\n\t\t     : PRIMARY_CODE))\n\n#define isSelectionCode(n) ((n) >= PRIMARY_CODE)\n#define CutBufferToCode(n) ((n) +  MAX_SELECTION_CODES)\n#define okSelectionCode(n) (isSelectionCode(n) ? (n) : PRIMARY_CODE)\n\n#if OPT_WIDE_CHARS\n#include <ctype.h>\n#include <wcwidth.h>\n#else\n#define CharacterClass(value) \\\n\tcharClass[(value) & (int)((sizeof(charClass)/sizeof(charClass[0]))-1)]\n#endif\n\n    /*\n     * We'll generally map rows to indices when doing selection.\n     * Simplify that with a macro.\n     *\n     * Note that ROW2INX() is safe to use with auto increment/decrement for\n     * the row expression since that is evaluated once.\n     */\n#define GET_LINEDATA(screen, row) \\\n\tgetLineData(screen, ROW2INX(screen, row))\n\n#define MaxMouseBtn  5\n\n#define IsBtnEvent(event) ((event)->type == ButtonPress || (event)->type == ButtonRelease)\n#define IsKeyEvent(event) ((event)->type == KeyPress    || (event)->type == KeyRelease)\n\n#define\tCoordinate(s,c)\t((c)->row * MaxCols(s) + (c)->col)\n\nstatic const CELL zeroCELL =\n{0, 0};\n\n#if OPT_DEC_LOCATOR\nstatic Bool SendLocatorPosition(XtermWidget xw, XButtonEvent *event);\nstatic void CheckLocatorPosition(XtermWidget xw, XButtonEvent *event);\n#endif /* OPT_DEC_LOCATOR */\n\n/* Multi-click handling */\n#if OPT_READLINE\nstatic Time lastButtonDownTime = 0;\nstatic int ExtendingSelection = 0;\nstatic Time lastButton3UpTime = 0;\nstatic Time lastButton3DoubleDownTime = 0;\nstatic CELL lastButton3;\t/* At the release time */\n#endif /* OPT_READLINE */\n\nstatic Char *SaveText(TScreen *screen, int row, int scol, int ecol,\n\t\t      Char *lp, int *eol);\nstatic int Length(TScreen *screen, int row, int scol, int ecol);\nstatic void ComputeSelect(XtermWidget xw, CELL *startc, CELL *endc, Bool\n\t\t\t  extend, Bool normal);\nstatic void EditorButton(XtermWidget xw, XButtonEvent *event);\nstatic void EndExtend(XtermWidget w, XEvent *event, String *params, Cardinal\n\t\t      num_params, Bool use_cursor_loc);\nstatic void ExtendExtend(XtermWidget xw, const CELL *cell);\nstatic void PointToCELL(TScreen *screen, int y, int x, CELL *cell);\nstatic void ReHiliteText(XtermWidget xw, CELL *first, CELL *last);\nstatic void SaltTextAway(XtermWidget xw, int which, CELL *cellc, CELL *cell);\nstatic void SelectSet(XtermWidget xw, XEvent *event, String *params, Cardinal num_params);\nstatic void SelectionReceived PROTO_XT_SEL_CB_ARGS;\nstatic void StartSelect(XtermWidget xw, const CELL *cell);\nstatic void TrackDown(XtermWidget xw, XButtonEvent *event);\nstatic void TrackText(XtermWidget xw, const CELL *first, const CELL *last);\nstatic void UnHiliteText(XtermWidget xw);\nstatic void _OwnSelection(XtermWidget xw, String *selections, Cardinal count);\nstatic void do_select_end(XtermWidget xw, XEvent *event, String *params,\n\t\t\t  Cardinal *num_params, Bool use_cursor_loc);\n\n#define MOUSE_LIMIT (255 - 32)\n\n/* Send SET_EXT_SIZE_MOUSE to enable offsets up to EXT_MOUSE_LIMIT */\n#define EXT_MOUSE_LIMIT (2047 - 32)\n#define EXT_MOUSE_START (127 - 32)\n\nstatic int\nMouseLimit(TScreen *screen)\n{\n    int mouse_limit;\n\n    switch (screen->extend_coords) {\n    default:\n\tmouse_limit = MOUSE_LIMIT;\n\tbreak;\n    case SET_EXT_MODE_MOUSE:\n\tmouse_limit = EXT_MOUSE_LIMIT;\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_URXVT_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tmouse_limit = -1;\n\tbreak;\n    }\n    return mouse_limit;\n}\n\nstatic unsigned\nEmitMousePosition(TScreen *screen, Char line[], unsigned count, int value)\n{\n    int mouse_limit = MouseLimit(screen);\n\n    /*\n     * Add pointer position to key sequence\n     *\n     * In extended mode we encode large positions as two-byte UTF-8.\n     *\n     * NOTE: historically, it was possible to emit 256, which became\n     * zero by truncation to 8 bits. While this was arguably a bug,\n     * it's also somewhat useful as a past-end marker. We preserve\n     * this behavior for both normal and extended mouse modes.\n     */\n    switch (screen->extend_coords) {\n    default:\n\tif (value == mouse_limit) {\n\t    line[count++] = CharOf(0);\n\t} else {\n\t    line[count++] = CharOf(' ' + value + 1);\n\t}\n\tbreak;\n    case SET_EXT_MODE_MOUSE:\n\tif (value == mouse_limit) {\n\t    line[count++] = CharOf(0);\n\t} else if (value < EXT_MOUSE_START) {\n\t    line[count++] = CharOf(' ' + value + 1);\n\t} else {\n\t    value += ' ' + 1;\n\t    line[count++] = CharOf(0xC0 + (value >> 6));\n\t    line[count++] = CharOf(0x80 + (value & 0x3F));\n\t}\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_URXVT_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tcount += (unsigned) sprintf((char *) line + count, \"%d\", value + 1);\n\tbreak;\n    }\n    return count;\n}\n\nstatic unsigned\nEmitMousePositionSeparator(TScreen *screen, Char line[], unsigned count)\n{\n    switch (screen->extend_coords) {\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_URXVT_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tline[count++] = ';';\n\tbreak;\n    }\n    return count;\n}\n\nenum {\n    scanMods,\n    scanKey,\n    scanColon,\n    scanFunc,\n    scanArgs\n};\n\n#if OPT_TRACE > 1\nstatic const char *\nvisibleScan(int mode)\n{\n    const char *result = \"?\";\n#define DATA(name) case name: result = #name; break\n    switch (mode) {\n\tDATA(scanMods);\n\tDATA(scanKey);\n\tDATA(scanColon);\n\tDATA(scanFunc);\n\tDATA(scanArgs);\n    }\n#undef DATA\n    return result;\n}\n#endif\n\n#define L_BRACK '<'\n#define R_BRACK '>'\n#define L_PAREN '('\n#define R_PAREN ')'\n\nstatic char *\nscanTrans(char *source, int *this_is, int *next_is, unsigned *first, unsigned *last)\n{\n    char ch;\n    char *target = source;\n\n    *first = *last = 0;\n    if (IsEmpty(target)) {\n\ttarget = 0;\n    } else {\n\tdo {\n\t    while (IsSpace(*target))\n\t\ttarget++;\n\t    *first = (unsigned) (target - source);\n\t    switch (*this_is = *next_is) {\n\t    case scanMods:\n\t\twhile ((ch = *target)) {\n\t\t    if (IsSpace(ch)) {\n\t\t\tbreak;\n\t\t    } else if (ch == L_BRACK) {\n\t\t\t*next_is = scanKey;\n\t\t\tbreak;\n\t\t    } else if (ch == ':') {\n\t\t\t*next_is = scanColon;\n\t\t\tbreak;\n\t\t    } else if (ch == '~' && target != source) {\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t}\n\t\tbreak;\n\t    case scanKey:\n\t\twhile ((ch = *target)) {\n\t\t    if (IsSpace(ch)) {\n\t\t\tbreak;\n\t\t    } else if (ch == ':') {\n\t\t\t*next_is = scanColon;\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t    if (ch == R_BRACK)\n\t\t\tbreak;\n\t\t}\n\t\tbreak;\n\t    case scanColon:\n\t\t*next_is = scanFunc;\n\t\ttarget++;\n\t\tbreak;\n\t    case scanFunc:\n\t\twhile ((ch = *target)) {\n\t\t    if (IsSpace(ch)) {\n\t\t\tbreak;\n\t\t    } else if (ch == L_PAREN) {\n\t\t\t*next_is = scanArgs;\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t}\n\t\tbreak;\n\t    case scanArgs:\n\t\twhile ((ch = *target)) {\n\t\t    if (ch == R_PAREN) {\n\t\t\ttarget++;\n\t\t\t*next_is = scanFunc;\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t}\n\t\tbreak;\n\t    }\n\t    *last = (unsigned) (target - source);\n\t    if (*target == '\\n') {\n\t\t*next_is = scanMods;\n\t\ttarget++;\n\t    }\n\t} while (*first == *last);\n    }\n    return target;\n}\n\nvoid\nxtermButtonInit(XtermWidget xw)\n{\n    Widget w = (Widget) xw;\n    XErrorHandler save = XSetErrorHandler(ignore_x11_error);\n    XtTranslations xlations;\n    Widget xcelerat;\n    String result;\n\n    XtVaGetValues(w,\n\t\t  XtNtranslations, &xlations,\n\t\t  XtNaccelerators, &xcelerat,\n\t\t  (XtPointer) 0);\n    result = _XtPrintXlations(w, xlations, xcelerat, True);\n    if (result) {\n\tstatic const char *table[] =\n\t{\n\t    \"insert-selection\",\n\t    \"select-end\",\n\t    \"select-extend\",\n\t    \"select-start\",\n\t    \"start-extend\",\n\t};\n\tchar *data = x_strdup(result);\n\tchar *next;\n\tint state = scanMods;\n\tint state2 = scanMods;\n\tunsigned first;\n\tunsigned last;\n\tint have_button = -1;\n\tBool want_button = False;\n\tBool have_shift = False;\n\tunsigned allowed = 0;\n\tunsigned disallow = 0;\n\n\tTRACE((\"xtermButtonInit length %ld\\n\", strlen(result)));\n\txw->keyboard.print_translations = data;\n\twhile ((next = scanTrans(data, &state, &state2, &first, &last)) != 0) {\n\t    unsigned len = (last - first);\n\t    TRACE2((\"parse %s:%d..%d '%.*s'\\n\",\n\t\t    visibleScan(state), first, last,\n\t\t    len, data + first));\n\t    if (state == scanMods) {\n\t\tif (len > 1 && data[first] == '~') {\n\t\t    len--;\n\t\t    first++;\n\t\t}\n\t\tif (len == 7 && !x_strncasecmp(data + first, \"button\", len - 1)) {\n\t\t    have_button = data[first + 6] - '0';\n\t\t} else if (len == 5 && !x_strncasecmp(data + first, \"shift\", len)) {\n\t\t    have_shift = True;\n\t\t}\n\t    } else if (state == scanKey) {\n\t\tif (!x_strncasecmp(data + first, \"<buttonpress>\", len) ||\n\t\t    !x_strncasecmp(data + first, \"<buttonrelease>\", len)) {\n\t\t    want_button = True;\n\t\t} else if (want_button) {\n\t\t    have_button = data[first] - '0';\n\t\t    want_button = False;\n\t\t}\n\t    } else if (state == scanFunc && have_button > 0) {\n\t\tCardinal n;\n\t\tunsigned bmask = 1U << (have_button - 1);\n\t\tfor (n = 0; n < XtNumber(table); ++n) {\n\t\t    if (!x_strncasecmp(table[n], data + first, len)) {\n\t\t\tTRACE((\"...button %d: %s%s\\n\",\n\t\t\t       have_button, table[n],\n\t\t\t       have_shift ? \" (disallow)\" : \"\"));\n\t\t\tif (have_shift)\n\t\t\t    disallow |= bmask;\n\t\t\telse\n\t\t\t    allowed |= bmask;\n\t\t\tbreak;\n\t\t    }\n\t\t}\n\t    }\n\t    if (state2 == scanMods && state >= scanColon) {\n\t\thave_button = -1;\n\t\twant_button = False;\n\t\thave_shift = False;\n\t    }\n\t    state = state2;\n\t    data = next;\n\t}\n\tXFree((char *) result);\n\txw->keyboard.shift_buttons = allowed & ~disallow;\n#if OPT_TRACE\n\tif (xw->keyboard.shift_buttons) {\n\t    int button = 0;\n\t    unsigned mask = xw->keyboard.shift_buttons;\n\t    TRACE((\"...Buttons used for selection that can be overridden:\"));\n\t    while (mask != 0) {\n\t\t++button;\n\t\tif ((mask & 1) != 0)\n\t\t    TRACE((\" %d\", button));\n\t\tmask >>= 1;\n\t    }\n\t    TRACE((\"\\n\"));\n\t} else {\n\t    TRACE((\"...No buttons used with selection can be overridden\\n\"));\n\t}\n#endif\n    }\n    XSetErrorHandler(save);\n}\n\n/*\n * Shift and control are regular X11 modifiers, but meta is not:\n * + X10 (which had no xmodmap utility) had a meta mask, but X11 did not.\n * + X11R1 introduced xmodmap, along with the current set of modifier masks.\n *   The meta key has been assumed to be mod1 since X11R1.\n *   The initial xterm logic in X11 was different, but gave the same result.\n * + X11R2 modified xterm was to eliminate the X10 table which provided part of\n *   the meta logic.\n * + X11R3 modified Xt, making Meta_L and Meta_R assignable via xmodmap, and\n *   equating Alt with Meta.  Neither Alt/Meta are modifiers, but Alt is more\n *   likely to be on the keyboard.  This release also added keymap tables for\n *   the server; Meta was used frequently in HP keymaps, which were the most\n *   extensive set of keymaps.\n * + X11R4 mentions Meta in the ICCCM, stating that if Meta_L or Meta_R are\n *   found in the keysyms for a given modifier, that the client should use\n *   that modifier.\n *\n * This function follows the ICCCM, picking the modifier which contains the\n * Meta_L/Meta_R keysyms (if available), falling back to the Alt_L/Alt_R\n * (as per X11R3), and ultimately to mod1 (per X11R1).\n */\nstatic unsigned\nMetaMask(XtermWidget xw)\n{\n#if OPT_NUM_LOCK\n    unsigned meta = xw->work.meta_mods;\n    if (meta == 0)\n\tmeta = xw->work.alt_mods;\n    if (meta == 0)\n\tmeta = Mod1Mask;\n#else\n    unsigned meta = Mod1Mask;\n    (void) xw;\n#endif\n    return meta;\n}\n\n/*\n * Returns a mask of the modifiers we may use for modifying the mouse protocol\n * response strings.\n */\nstatic unsigned\nOurModifiers(XtermWidget xw)\n{\n    return (ShiftMask\n\t    | ControlMask\n\t    | MetaMask(xw));\n}\n\n/*\n * The actual check for the shift-mask, to see if it should tell xterm to\n * override mouse-protocol in favor of select/paste actions depends upon\n * whether the shiftEscape resource is set to true/always vs false/never.\n */\nstatic Boolean\nShiftOverride(XtermWidget xw, unsigned state, int button)\n{\n    unsigned check = (state & OurModifiers(xw));\n    Boolean result = False;\n\n    if (check & ShiftMask) {\n\tif (xw->keyboard.shift_escape == ssFalse ||\n\t    xw->keyboard.shift_escape == ssNever) {\n\t    result = True;\n\t} else if (xw->keyboard.shift_escape == ssTrue) {\n\t    /*\n\t     * Check if the button is one that we found does not directly use\n\t     * the shift-modifier in its bindings to select/copy actions.\n\t     */\n\t    if (button > 0 && button <= MaxMouseBtn) {\n\t\tif (xw->keyboard.shift_buttons & (1U << (button - 1))) {\n\t\t    result = True;\n\t\t}\n\t    } else {\n\t\tresult = True;\t/* unlikely, and we don't care */\n\t    }\n\t}\n    }\n    TRACE2((\"ShiftOverride ( %#x -> %#x ) %d\\n\", state, check, result));\n    return result;\n}\n\n/*\n * Normally xterm treats the shift-modifier specially when the mouse protocol\n * is active.  The translations resource binds otherwise unmodified button\n * for these mouse-related events:\n *\n *         ~Meta <Btn1Down>:select-start() \\n\\\n *       ~Meta <Btn1Motion>:select-extend() \\n\\\n *     ~Ctrl ~Meta <Btn2Up>:insert-selection(SELECT, CUT_BUFFER0) \\n\\\n *   ~Ctrl ~Meta <Btn3Down>:start-extend() \\n\\\n *       ~Meta <Btn3Motion>:select-extend() \\n\\\n *                  <BtnUp>:select-end(SELECT, CUT_BUFFER0) \\n\\\n *\n * There is no API in the X libraries which would tell us if a given mouse\n * button is bound to one of these actions.  These functions make the choice\n * configurable.\n */\nstatic Bool\nInterpretButton(XtermWidget xw, XButtonEvent *event)\n{\n    Bool result = False;\n\n    if (ShiftOverride(xw, event->state, (int) event->button)) {\n\tTRACE((\"...shift-button #%d overrides mouse-protocol\\n\", event->button));\n\tresult = True;\n    }\n    return result;\n}\n\n#define Button1Index 8\t\t/* X.h should have done this */\n\nstatic int\nMotionButton(unsigned state)\n{\n    unsigned bmask = state >> Button1Index;\n    int result = 1;\n\n    if (bmask != 0) {\n\twhile (!(bmask & 1)) {\n\t    ++result;\n\t    bmask >>= 1;\n\t}\n    }\n    return result;\n}\n\nstatic Bool\nInterpretEvent(XtermWidget xw, XEvent *event)\n{\n    Bool result = False;\t/* if not a button, is motion */\n\n    if (IsBtnEvent(event)) {\n\tresult = InterpretButton(xw, (XButtonEvent *) event);\n    } else if (event->type == MotionNotify) {\n\tunsigned state = event->xmotion.state;\n\tint button = MotionButton(state);\n\n\tif (ShiftOverride(xw, state, button)) {\n\t    TRACE((\"...shift-motion #%d (%d,%d) overrides mouse-protocol\\n\",\n\t\t   button,\n\t\t   event->xmotion.y,\n\t\t   event->xmotion.x));\n\t    result = True;\n\t}\n    }\n    return result;\n}\n\n#define OverrideEvent(event)  InterpretEvent(xw, event)\n#define OverrideButton(event) InterpretButton(xw, event)\n\n/*\n * Returns true if we handled the event here, and nothing more is needed.\n */\nBool\nSendMousePosition(XtermWidget xw, XEvent *event)\n{\n    XButtonEvent *my_event = (XButtonEvent *) event;\n    Bool result = False;\n\n    switch (okSendMousePos(xw)) {\n    case MOUSE_OFF:\n\t/* If send_mouse_pos mode isn't on, we shouldn't be here */\n\tbreak;\n\n    case BTN_EVENT_MOUSE:\n    case ANY_EVENT_MOUSE:\n\tif (!OverrideEvent(event)) {\n\t    /* xterm extension for motion reporting. June 1998 */\n\t    /* EditorButton() will distinguish between the modes */\n\t    switch (event->type) {\n\t    case MotionNotify:\n\t\tmy_event->button = 0;\n\t\t/* FALLTHRU */\n\t    case ButtonPress:\n\t\t/* FALLTHRU */\n\t    case ButtonRelease:\n\t\tEditorButton(xw, my_event);\n\t\tresult = True;\n\t\tbreak;\n\t    }\n\t}\n\tbreak;\n\n    case X10_MOUSE:\t\t/* X10 compatibility sequences */\n\tif (IsBtnEvent(event)) {\n\t    if (!OverrideButton(my_event)) {\n\t\tif (my_event->type == ButtonPress)\n\t\t    EditorButton(xw, my_event);\n\t\tresult = True;\n\t    }\n\t}\n\tbreak;\n\n    case VT200_HIGHLIGHT_MOUSE:\t/* DEC vt200 hilite tracking */\n\tif (IsBtnEvent(event)) {\n\t    if (!OverrideButton(my_event)) {\n\t\tif (my_event->type == ButtonPress &&\n\t\t    my_event->button == Button1) {\n\t\t    TrackDown(xw, my_event);\n\t\t} else {\n\t\t    EditorButton(xw, my_event);\n\t\t}\n\t\tresult = True;\n\t    }\n\t}\n\tbreak;\n\n    case VT200_MOUSE:\t\t/* DEC vt200 compatible */\n\tif (IsBtnEvent(event)) {\n\t    if (!OverrideButton(my_event)) {\n\t\tEditorButton(xw, my_event);\n\t\tresult = True;\n\t    }\n\t}\n\tbreak;\n\n    case DEC_LOCATOR:\n#if OPT_DEC_LOCATOR\n\tif (IsBtnEvent(event) || event->type == MotionNotify) {\n\t    result = SendLocatorPosition(xw, my_event);\n\t}\n#endif /* OPT_DEC_LOCATOR */\n\tbreak;\n    }\n    return result;\n}\n\n#if OPT_DEC_LOCATOR\n\n#define\tLocatorCoords( row, col, x, y, oor )\t\t\t\\\n    if( screen->locator_pixels ) {\t\t\t\t\\\n\t(oor)=False; (row) = (y)+1; (col) = (x)+1;\t\t\\\n\t/* Limit to screen dimensions */\t\t\t\\\n\tif ((row) < 1) (row) = 1,(oor)=True;\t\t\t\\\n\telse if ((row) > screen->border*2+Height(screen))\t\\\n\t    (row) = screen->border*2+Height(screen),(oor)=True;\t\\\n\tif ((col) < 1) (col) = 1,(oor)=True;\t\t\t\\\n\telse if ((col) > OriginX(screen)*2+Width(screen))\t\\\n\t    (col) = OriginX(screen)*2+Width(screen),(oor)=True;\t\\\n    } else {\t\t\t\t\t\t\t\\\n\t(oor)=False;\t\t\t\t\t\t\\\n\t/* Compute character position of mouse pointer */\t\\\n\t(row) = ((y) - screen->border) / FontHeight(screen);\t\\\n\t(col) = ((x) - OriginX(screen)) / FontWidth(screen);\t\\\n\t/* Limit to screen dimensions */\t\t\t\\\n\tif ((row) < 0) (row) = 0,(oor)=True;\t\t\t\\\n\telse if ((row) > screen->max_row)\t\t\t\\\n\t    (row) = screen->max_row,(oor)=True;\t\t\t\\\n\tif ((col) < 0) (col) = 0,(oor)=True;\t\t\t\\\n\telse if ((col) > screen->max_col)\t\t\t\\\n\t    (col) = screen->max_col,(oor)=True;\t\t\t\\\n\t(row)++; (col)++;\t\t\t\t\t\\\n    }\n\nstatic Bool\nSendLocatorPosition(XtermWidget xw, XButtonEvent *event)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    int row, col;\n    Bool oor;\n    int button;\n    unsigned state;\n\n    /* Make sure the event is an appropriate type */\n    if (IsBtnEvent(event)) {\n\tif (OverrideButton(event))\n\t    return (False);\n    } else {\n\tif (!screen->loc_filter)\n\t    return (False);\n    }\n\n    if ((event->type == ButtonPress &&\n\t !(screen->locator_events & LOC_BTNS_DN)) ||\n\t(event->type == ButtonRelease &&\n\t !(screen->locator_events & LOC_BTNS_UP)))\n\treturn (True);\n\n    if (event->type == MotionNotify) {\n\tCheckLocatorPosition(xw, event);\n\treturn (True);\n    }\n\n    /* get button # */\n    button = (int) event->button - 1;\n\n    LocatorCoords(row, col, event->x, event->y, oor);\n\n    /*\n     * DECterm mouse:\n     *\n     * ESCAPE '[' event ; mask ; row ; column '&' 'w'\n     */\n    memset(&reply, 0, sizeof(reply));\n    reply.a_type = ANSI_CSI;\n\n    if (oor) {\n\treply.a_nparam = 1;\n\treply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n\treturn (True);\n    }\n\n    /*\n     * event:\n     *        1       no buttons\n     *        2       left button down\n     *        3       left button up\n     *        4       middle button down\n     *        5       middle button up\n     *        6       right button down\n     *        7       right button up\n     *        8       M4 down\n     *        9       M4 up\n     */\n    reply.a_nparam = 4;\n    switch (event->type) {\n    case ButtonPress:\n\treply.a_param[0] = (ParmType) (2 + (button << 1));\n\tbreak;\n    case ButtonRelease:\n\treply.a_param[0] = (ParmType) (3 + (button << 1));\n\tbreak;\n    default:\n\treturn (True);\n    }\n    /*\n     * mask:\n     * bit7   bit6   bit5   bit4   bit3     bit2       bit1         bit0\n     *                             M4 down  left down  middle down  right down\n     *\n     * Notice that Button1 (left) and Button3 (right) are swapped in the mask.\n     * Also, mask should be the state after the button press/release,\n     * X provides the state not including the button press/release.\n     */\n    state = (event->state\n\t     & (Button1Mask | Button2Mask | Button3Mask | Button4Mask)) >> 8;\n    /* update mask to \"after\" state */\n    state ^= ((unsigned) (1 << button));\n    /* swap Button1 & Button3 */\n    state = ((state & (unsigned) ~(4 | 1))\n\t     | ((state & 1) ? 4 : 0)\n\t     | ((state & 4) ? 1 : 0));\n\n    reply.a_param[1] = (ParmType) state;\n    reply.a_param[2] = (ParmType) row;\n    reply.a_param[3] = (ParmType) col;\n    reply.a_inters = '&';\n    reply.a_final = 'w';\n\n    unparseseq(xw, &reply);\n\n    if (screen->locator_reset) {\n\tMotionOff(screen, xw);\n\tscreen->send_mouse_pos = MOUSE_OFF;\n    }\n\n    /*\n     * DECterm turns the Locator off if a button is pressed while a filter\n     * rectangle is active.  This might be a bug, but I don't know, so I'll\n     * emulate it anyway.\n     */\n    if (screen->loc_filter) {\n\tscreen->send_mouse_pos = MOUSE_OFF;\n\tscreen->loc_filter = False;\n\tscreen->locator_events = 0;\n\tMotionOff(screen, xw);\n    }\n\n    return (True);\n}\n\n/*\n * mask:\n * bit 7   bit 6   bit 5   bit 4   bit 3   bit 2       bit 1         bit 0\n *                                 M4 down left down   middle down   right down\n *\n * Button1 (left) and Button3 (right) are swapped in the mask relative to X.\n */\n#define\tButtonState(state, mask)\t\\\n{ int stemp = (int) (((mask) & (Button1Mask | Button2Mask | Button3Mask | Button4Mask)) >> 8);\t\\\n  /* swap Button1 & Button3 */\t\t\t\t\t\t\t\t\\\n  (state) = (stemp & ~(4|1)) | ((stemp & 1) ? 4 : 0) | ((stemp & 4) ? 1 : 0);\t\t\t\\\n}\n\nvoid\nGetLocatorPosition(XtermWidget xw)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    Window root, child;\n    int rx, ry, x, y;\n    unsigned int mask = 0;\n    int row = 0, col = 0;\n    Bool oor = False;\n    Bool ret = False;\n    int state;\n\n    /*\n     * DECterm turns the Locator off if the position is requested while a\n     * filter rectangle is active.  This might be a bug, but I don't know, so\n     * I'll emulate it anyways.\n     */\n    if (screen->loc_filter) {\n\tscreen->send_mouse_pos = MOUSE_OFF;\n\tscreen->loc_filter = False;\n\tscreen->locator_events = 0;\n\tMotionOff(screen, xw);\n    }\n\n    memset(&reply, 0, sizeof(reply));\n    reply.a_type = ANSI_CSI;\n\n    if (okSendMousePos(xw) == DEC_LOCATOR) {\n\tret = XQueryPointer(screen->display, VWindow(screen), &root,\n\t\t\t    &child, &rx, &ry, &x, &y, &mask);\n\tif (ret) {\n\t    LocatorCoords(row, col, x, y, oor);\n\t}\n    }\n    if (ret == False || oor) {\n\treply.a_nparam = 1;\n\treply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n\treturn;\n    }\n\n    ButtonState(state, mask);\n\n    reply.a_nparam = 4;\n    reply.a_param[0] = 1;\t/* Event - 1 = response to locator request */\n    reply.a_param[1] = (ParmType) state;\n    reply.a_param[2] = (ParmType) row;\n    reply.a_param[3] = (ParmType) col;\n    reply.a_inters = '&';\n    reply.a_final = 'w';\n    unparseseq(xw, &reply);\n\n    if (screen->locator_reset) {\n\tMotionOff(screen, xw);\n\tscreen->send_mouse_pos = MOUSE_OFF;\n    }\n}\n\nvoid\nInitLocatorFilter(XtermWidget xw)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    Window root, child;\n    int rx, ry, x, y;\n    unsigned int mask;\n    int row = 0, col = 0;\n    Bool oor = 0;\n    Bool ret;\n\n    ret = XQueryPointer(screen->display, VWindow(screen),\n\t\t\t&root, &child, &rx, &ry, &x, &y, &mask);\n    if (ret) {\n\tLocatorCoords(row, col, x, y, oor);\n    }\n    if (ret == False || oor) {\n\t/* Locator is unavailable */\n\n\tif (screen->loc_filter_top != LOC_FILTER_POS ||\n\t    screen->loc_filter_left != LOC_FILTER_POS ||\n\t    screen->loc_filter_bottom != LOC_FILTER_POS ||\n\t    screen->loc_filter_right != LOC_FILTER_POS) {\n\t    /*\n\t     * If any explicit coordinates were received,\n\t     * report immediately with no coordinates.\n\t     */\n\t    memset(&reply, 0, sizeof(reply));\n\t    reply.a_type = ANSI_CSI;\n\t    reply.a_nparam = 1;\n\t    reply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\t    reply.a_inters = '&';\n\t    reply.a_final = 'w';\n\t    unparseseq(xw, &reply);\n\n\t    if (screen->locator_reset) {\n\t\tMotionOff(screen, xw);\n\t\tscreen->send_mouse_pos = MOUSE_OFF;\n\t    }\n\t} else {\n\t    /*\n\t     * No explicit coordinates were received, and the pointer is\n\t     * unavailable.  Report when the pointer re-enters the window.\n\t     */\n\t    screen->loc_filter = True;\n\t    MotionOn(screen, xw);\n\t}\n\treturn;\n    }\n\n    /*\n     * Adjust rectangle coordinates:\n     *  1. Replace \"LOC_FILTER_POS\" with current coordinates\n     *  2. Limit coordinates to screen size\n     *  3. make sure top and left are less than bottom and right, resp.\n     */\n    if (screen->locator_pixels) {\n\trx = OriginX(screen) * 2 + Width(screen);\n\try = screen->border * 2 + Height(screen);\n    } else {\n\trx = screen->max_col;\n\try = screen->max_row;\n    }\n\n#define\tAdjust( coord, def, max )\t\t\t\t\\\n\tif( (coord) == LOC_FILTER_POS )\t(coord) = (def);\t\\\n\telse if ((coord) < 1)\t\t(coord) = 1;\t\t\\\n\telse if ((coord) > (max))\t(coord) = (max)\n\n    Adjust(screen->loc_filter_top, row, ry);\n    Adjust(screen->loc_filter_left, col, rx);\n    Adjust(screen->loc_filter_bottom, row, ry);\n    Adjust(screen->loc_filter_right, col, rx);\n\n    if (screen->loc_filter_top > screen->loc_filter_bottom) {\n\try = screen->loc_filter_top;\n\tscreen->loc_filter_top = screen->loc_filter_bottom;\n\tscreen->loc_filter_bottom = ry;\n    }\n\n    if (screen->loc_filter_left > screen->loc_filter_right) {\n\trx = screen->loc_filter_left;\n\tscreen->loc_filter_left = screen->loc_filter_right;\n\tscreen->loc_filter_right = rx;\n    }\n\n    if ((col < screen->loc_filter_left) ||\n\t(col > screen->loc_filter_right) ||\n\t(row < screen->loc_filter_top) ||\n\t(row > screen->loc_filter_bottom)) {\n\tint state;\n\n\t/* Pointer is already outside the rectangle - report immediately */\n\tButtonState(state, mask);\n\n\tmemset(&reply, 0, sizeof(reply));\n\treply.a_type = ANSI_CSI;\n\treply.a_nparam = 4;\n\treply.a_param[0] = 10;\t/* Event - 10 = locator outside filter */\n\treply.a_param[1] = (ParmType) state;\n\treply.a_param[2] = (ParmType) row;\n\treply.a_param[3] = (ParmType) col;\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n\treturn;\n    }\n\n    /*\n     * Rectangle is set up.  Allow pointer tracking\n     * to detect if the mouse leaves the rectangle.\n     */\n    screen->loc_filter = True;\n    MotionOn(screen, xw);\n}\n\nstatic void\nCheckLocatorPosition(XtermWidget xw, XButtonEvent *event)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    int row, col;\n    Bool oor;\n\n    LocatorCoords(row, col, event->x, event->y, oor);\n\n    /*\n     * Send report if the pointer left the filter rectangle, if\n     * the pointer left the window, or if the filter rectangle\n     * had no coordinates and the pointer re-entered the window.\n     */\n    if (oor || (screen->loc_filter_top == LOC_FILTER_POS) ||\n\t(col < screen->loc_filter_left) ||\n\t(col > screen->loc_filter_right) ||\n\t(row < screen->loc_filter_top) ||\n\t(row > screen->loc_filter_bottom)) {\n\t/* Filter triggered - disable it */\n\tscreen->loc_filter = False;\n\tMotionOff(screen, xw);\n\n\tmemset(&reply, 0, sizeof(reply));\n\treply.a_type = ANSI_CSI;\n\tif (oor) {\n\t    reply.a_nparam = 1;\n\t    reply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\t} else {\n\t    int state;\n\n\t    ButtonState(state, event->state);\n\n\t    reply.a_nparam = 4;\n\t    reply.a_param[0] = 10;\t/* Event - 10 = locator outside filter */\n\t    reply.a_param[1] = (ParmType) state;\n\t    reply.a_param[2] = (ParmType) row;\n\t    reply.a_param[3] = (ParmType) col;\n\t}\n\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n    }\n}\n#endif /* OPT_DEC_LOCATOR */\n\n#if OPT_READLINE\nstatic int\nisClick1_clean(XtermWidget xw, XButtonEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    int delta;\n\n    /* Disable on Shift-Click-1, including the application-mouse modes */\n    if (OverrideButton(event)\n\t|| (okSendMousePos(xw) != MOUSE_OFF)\n\t|| ExtendingSelection)\t/* Was moved */\n\treturn 0;\n\n    if (event->type != ButtonRelease)\n\treturn 0;\n\n    if (lastButtonDownTime == (Time) 0) {\n\t/* first time or once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (event->time > lastButtonDownTime) {\n\t/* most of the time */\n\tdelta = (int) (event->time - lastButtonDownTime);\n    } else {\n\t/* time has rolled over since lastButtonUpTime */\n\tdelta = (int) ((((Time) ~ 0) - lastButtonDownTime) + event->time);\n    }\n\n    return delta <= screen->multiClickTime;\n}\n\nstatic int\nisDoubleClick3(XtermWidget xw, TScreen *screen, XButtonEvent *event)\n{\n    int delta;\n\n    if (event->type != ButtonRelease\n\t|| OverrideButton(event)\n\t|| event->button != Button3) {\n\tlastButton3UpTime = 0;\t/* Disable the cached info */\n\treturn 0;\n    }\n    /* Process Btn3Release. */\n    if (lastButton3DoubleDownTime == (Time) 0) {\n\t/* No previous click or once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (event->time > lastButton3DoubleDownTime) {\n\t/* most of the time */\n\tdelta = (int) (event->time - lastButton3DoubleDownTime);\n    } else {\n\t/* time has rolled over since lastButton3DoubleDownTime */\n\tdelta = (int) ((((Time) ~ 0) - lastButton3DoubleDownTime) + event->time);\n    }\n    if (delta <= screen->multiClickTime) {\n\t/* Double click */\n\tCELL cell;\n\n\t/* Cannot check ExtendingSelection, since mouse-3 always sets it */\n\tPointToCELL(screen, event->y, event->x, &cell);\n\tif (isSameCELL(&cell, &lastButton3)) {\n\t    lastButton3DoubleDownTime = 0;\t/* Disable the third click */\n\t    return 1;\n\t}\n    }\n    /* Not a double click, memorize for future check. */\n    lastButton3UpTime = event->time;\n    PointToCELL(screen, event->y, event->x, &lastButton3);\n    return 0;\n}\n\nstatic int\nCheckSecondPress3(XtermWidget xw, TScreen *screen, XEvent *event)\n{\n    int delta;\n\n    if (event->type != ButtonPress\n\t|| OverrideEvent(event)\n\t|| event->xbutton.button != Button3) {\n\tlastButton3DoubleDownTime = 0;\t/* Disable the cached info */\n\treturn 0;\n    }\n    /* Process Btn3Press. */\n    if (lastButton3UpTime == (Time) 0) {\n\t/* No previous click or once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (event->xbutton.time > lastButton3UpTime) {\n\t/* most of the time */\n\tdelta = (int) (event->xbutton.time - lastButton3UpTime);\n    } else {\n\t/* time has rolled over since lastButton3UpTime */\n\tdelta = (int) ((((Time) ~ 0) - lastButton3UpTime) + event->xbutton.time);\n    }\n    if (delta <= screen->multiClickTime) {\n\tCELL cell;\n\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n\tif (isSameCELL(&cell, &lastButton3)) {\n\t    /* A candidate for a double-click */\n\t    lastButton3DoubleDownTime = event->xbutton.time;\n\t    PointToCELL(screen, event->xbutton.y, event->xbutton.x, &lastButton3);\n\t    return 1;\n\t}\n\tlastButton3UpTime = 0;\t/* Disable the info about the previous click */\n    }\n    /* Either too long, or moved, disable. */\n    lastButton3DoubleDownTime = 0;\n    return 0;\n}\n\nstatic int\nrowOnCurrentLine(TScreen *screen,\n\t\t int line,\n\t\t int *deltap)\t/* must be XButtonEvent */\n{\n    int result = 1;\n\n    *deltap = 0;\n\n    if (line != screen->cur_row) {\n\tint l1, l2;\n\n\tif (line < screen->cur_row) {\n\t    l1 = line;\n\t    l2 = screen->cur_row;\n\t} else {\n\t    l2 = line;\n\t    l1 = screen->cur_row;\n\t}\n\tl1--;\n\twhile (++l1 < l2) {\n\t    LineData *ld = GET_LINEDATA(screen, l1);\n\t    if (!LineTstWrapped(ld)) {\n\t\tresult = 0;\n\t\tbreak;\n\t    }\n\t}\n\tif (result) {\n\t    /* Everything is on one \"wrapped line\" now */\n\t    *deltap = line - screen->cur_row;\n\t}\n    }\n    return result;\n}\n\nstatic int\neventRow(TScreen *screen, XEvent *event)\t/* must be XButtonEvent */\n{\n    return (event->xbutton.y - screen->border) / FontHeight(screen);\n}\n\nstatic int\neventColBetween(TScreen *screen, XEvent *event)\t\t/* must be XButtonEvent */\n{\n    /* Correct by half a width - we are acting on a boundary, not on a cell. */\n    return ((event->xbutton.x - OriginX(screen) + (FontWidth(screen) - 1) / 2)\n\t    / FontWidth(screen));\n}\n\nstatic int\nReadLineMovePoint(TScreen *screen, int col, int ldelta)\n{\n    Char line[6];\n    unsigned count = 0;\n\n    col += ldelta * MaxCols(screen) - screen->cur_col;\n    if (col == 0)\n\treturn 0;\n    if (screen->control_eight_bits) {\n\tline[count++] = ANSI_CSI;\n    } else {\n\tline[count++] = ANSI_ESC;\n\tline[count++] = '[';\t/* XXX maybe sometimes O is better? */\n    }\n    line[count] = CharOf(col > 0 ? 'C' : 'D');\n    if (col < 0)\n\tcol = -col;\n    while (col--)\n\tv_write(screen->respond, line, 3);\n    return 1;\n}\n\nstatic int\nReadLineDelete(TScreen *screen, CELL *cell1, CELL *cell2)\n{\n    int del;\n\n    del = (cell2->col - cell1->col) + ((cell2->row - cell1->row) * MaxCols(screen));\n    if (del <= 0)\t\t/* Just in case... */\n\treturn 0;\n    while (del--)\n\tv_write(screen->respond, (const Char *) \"\\177\", 1);\n    return 1;\n}\n\nstatic void\nreadlineExtend(XtermWidget xw, XEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    int ldelta1, ldelta2;\n\n    if (IsBtnEvent(event)) {\n\tXButtonEvent *my_event = (XButtonEvent *) event;\n\tif (isClick1_clean(xw, my_event)\n\t    && SCREEN_FLAG(screen, click1_moves)\n\t    && rowOnCurrentLine(screen, eventRow(screen, event), &ldelta1)) {\n\t    ReadLineMovePoint(screen, eventColBetween(screen, event), ldelta1);\n\t}\n\tif (isDoubleClick3(xw, screen, my_event)\n\t    && SCREEN_FLAG(screen, dclick3_deletes)\n\t    && rowOnCurrentLine(screen, screen->startSel.row, &ldelta1)\n\t    && rowOnCurrentLine(screen, screen->endSel.row, &ldelta2)) {\n\t    ReadLineMovePoint(screen, screen->endSel.col, ldelta2);\n\t    ReadLineDelete(screen, &screen->startSel, &(screen->endSel));\n\t}\n    }\n}\n#endif /* OPT_READLINE */\n\n/* ^XM-G<line+' '><col+' '> */\nvoid\nDiredButton(Widget w,\n\t    XEvent *event,\t/* must be XButtonEvent */\n\t    String *params GCC_UNUSED,\t/* selections */\n\t    Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tif (IsBtnEvent(event)\n\t    && (event->xbutton.y >= screen->border)\n\t    && (event->xbutton.x >= OriginX(screen))) {\n\t    Char Line[6];\n\t    unsigned line, col;\n\n\t    line = (unsigned) ((event->xbutton.y - screen->border)\n\t\t\t       / FontHeight(screen));\n\t    col = (unsigned) ((event->xbutton.x - OriginX(screen))\n\t\t\t      / FontWidth(screen));\n\t    Line[0] = CONTROL('X');\n\t    Line[1] = ANSI_ESC;\n\t    Line[2] = 'G';\n\t    Line[3] = CharOf(' ' + col);\n\t    Line[4] = CharOf(' ' + line);\n\t    v_write(screen->respond, Line, 5);\n\t}\n    }\n}\n\n#if OPT_READLINE\nvoid\nReadLineButton(Widget w,\n\t       XEvent *event,\t/* must be XButtonEvent */\n\t       String *params,\t/* selections */\n\t       Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tChar Line[6];\n\tint line, col, ldelta = 0;\n\n\tif (!IsBtnEvent(event)\n\t    || (okSendMousePos(xw) != MOUSE_OFF) || ExtendingSelection)\n\t    goto finish;\n\tif (event->type == ButtonRelease) {\n\t    int delta;\n\n\t    if (lastButtonDownTime == (Time) 0) {\n\t\t/* first time and once in a blue moon */\n\t\tdelta = screen->multiClickTime + 1;\n\t    } else if (event->xbutton.time > lastButtonDownTime) {\n\t\t/* most of the time */\n\t\tdelta = (int) (event->xbutton.time - lastButtonDownTime);\n\t    } else {\n\t\t/* time has rolled over since lastButtonUpTime */\n\t\tdelta = (int) ((((Time) ~ 0) - lastButtonDownTime) + event->xbutton.time);\n\t    }\n\t    if (delta > screen->multiClickTime)\n\t\tgoto finish;\t/* All this work for this... */\n\t}\n\tline = (event->xbutton.y - screen->border) / FontHeight(screen);\n\tif (!rowOnCurrentLine(screen, line, &ldelta))\n\t    goto finish;\n\t/* Correct by half a width - we are acting on a boundary, not on a cell. */\n\tcol = (event->xbutton.x - OriginX(screen) + (FontWidth(screen) - 1)\n\t       / 2)\n\t    / FontWidth(screen) - screen->cur_col + ldelta * MaxCols(screen);\n\tif (col == 0)\n\t    goto finish;\n\tLine[0] = ANSI_ESC;\n\t/* XXX: sometimes it is better to send '['? */\n\tLine[1] = 'O';\n\tLine[2] = CharOf(col > 0 ? 'C' : 'D');\n\tif (col < 0)\n\t    col = -col;\n\twhile (col--)\n\t    v_write(screen->respond, Line, 3);\n      finish:\n\tif (event->type == ButtonRelease)\n\t    do_select_end(xw, event, params, num_params, False);\n    }\n}\n#endif /* OPT_READLINE */\n\n/* repeats <ESC>n or <ESC>p */\nvoid\nViButton(Widget w,\n\t XEvent *event,\t\t/* must be XButtonEvent */\n\t String *params GCC_UNUSED,\t/* selections */\n\t Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tint pty = screen->respond;\n\n\tif (IsBtnEvent(event)) {\n\t    int line;\n\n\t    line = screen->cur_row -\n\t\t((event->xbutton.y - screen->border) / FontHeight(screen));\n\n\t    if (line != 0) {\n\t\tChar Line[6];\n\n\t\tLine[0] = ANSI_ESC;\t/* force an exit from insert-mode */\n\t\tv_write(pty, Line, 1);\n\n\t\tif (line < 0) {\n\t\t    line = -line;\n\t\t    Line[0] = CONTROL('n');\n\t\t} else {\n\t\t    Line[0] = CONTROL('p');\n\t\t}\n\t\twhile (--line >= 0)\n\t\t    v_write(pty, Line, 1);\n\t    }\n\t}\n    }\n}\n\n/*\n * This function handles button-motion events\n */\n/*ARGSUSED*/\nvoid\nHandleSelectExtend(Widget w,\n\t\t   XEvent *event,\t/* must be XMotionEvent */\n\t\t   String *params GCC_UNUSED,\n\t\t   Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tCELL cell;\n\n\tTRACE_EVENT(\"HandleSelectExtend\", event, params, num_params);\n\n\tscreen->selection_time = event->xmotion.time;\n\tswitch (screen->eventMode) {\n\t    /* If not in one of the DEC mouse-reporting modes */\n\tcase LEFTEXTENSION:\n\tcase RIGHTEXTENSION:\n\t    PointToCELL(screen, event->xmotion.y, event->xmotion.x, &cell);\n\t    ExtendExtend(xw, &cell);\n\t    break;\n\n\t    /* If in motion reporting mode, send mouse position to\n\t       character process as a key sequence \\E[M... */\n\tcase NORMAL:\n\t    /* will get here if send_mouse_pos != MOUSE_OFF */\n\t    if (okSendMousePos(xw) == BTN_EVENT_MOUSE\n\t\t|| okSendMousePos(xw) == ANY_EVENT_MOUSE) {\n\t\t(void) SendMousePosition(xw, event);\n\t    }\n\t    break;\n\t}\n    }\n}\n\nvoid\nHandleKeyboardSelectExtend(Widget w,\n\t\t\t   XEvent *event GCC_UNUSED,\t/* must be XButtonEvent */\n\t\t\t   String *params GCC_UNUSED,\n\t\t\t   Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tTRACE_EVENT(\"HandleKeyboardSelectExtend\", event, params, num_params);\n\tExtendExtend(xw, &screen->cursorp);\n    }\n}\n\nstatic void\ndo_select_end(XtermWidget xw,\n\t      XEvent *event,\t/* must be XButtonEvent */\n\t      String *params,\t/* selections */\n\t      Cardinal *num_params,\n\t      Bool use_cursor_loc)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    screen->selection_time = event->xbutton.time;\n\n    TRACE((\"do_select_end %s @%ld\\n\",\n\t   visibleEventMode(screen->eventMode),\n\t   screen->selection_time));\n\n    switch (screen->eventMode) {\n    case NORMAL:\n\t(void) SendMousePosition(xw, event);\n\tbreak;\n    case LEFTEXTENSION:\n    case RIGHTEXTENSION:\n\tEndExtend(xw, event, params, *num_params, use_cursor_loc);\n#if OPT_READLINE\n\treadlineExtend(xw, event);\n#endif /* OPT_READLINE */\n\tbreak;\n    }\n}\n\nvoid\nHandleSelectEnd(Widget w,\n\t\tXEvent *event,\t/* must be XButtonEvent */\n\t\tString *params,\t/* selections */\n\t\tCardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandleSelectEnd\\n\"));\n\tdo_select_end(xw, event, params, num_params, False);\n    }\n}\n\nvoid\nHandleKeyboardSelectEnd(Widget w,\n\t\t\tXEvent *event,\t/* must be XButtonEvent */\n\t\t\tString *params,\t\t/* selections */\n\t\t\tCardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandleKeyboardSelectEnd\\n\"));\n\tdo_select_end(xw, event, params, num_params, True);\n    }\n}\n\nvoid\nHandlePointerMotion(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* selections */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    (void) params;\n    (void) num_params;\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandlePointerMotion\\n\"));\n\tif (event->type == MotionNotify)\n\t    (void) SendMousePosition(xw, event);\n    }\n}\n\nvoid\nHandlePointerButton(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* selections */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    (void) params;\n    (void) num_params;\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandlePointerButton\\n\"));\n\tif (IsBtnEvent(event))\n\t    (void) SendMousePosition(xw, event);\n    }\n}\n\n/*\n * Copy the selection data to the given target(s).\n */\nvoid\nHandleCopySelection(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* list of targets */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleCopySelection\", event, params, num_params);\n\tSelectSet(xw, event, params, *num_params);\n    }\n}\n\nstruct _SelectionList {\n    String *params;\n    Cardinal count;\n    Atom *targets;\n    Time time;\n};\n\nstatic unsigned\nDECtoASCII(unsigned ch)\n{\n    if (xtermIsDecGraphic(ch)) {\n\tch = CharOf(\"###########+++++##-##++++|######\"[ch]);\n\t/*           01234567890123456789012345678901 */\n    }\n    return ch;\n}\n\n#if OPT_WIDE_CHARS\nstatic Cardinal\naddXtermChar(Char **buffer, Cardinal *used, Cardinal offset, unsigned value)\n{\n    if (offset + 1 >= *used) {\n\t*used = 1 + (2 * (offset + 1));\n\tallocXtermChars(buffer, *used);\n    }\n    (*buffer)[offset++] = (Char) value;\n    return offset;\n}\n#define AddChar(buffer, used, offset, value) \\\n\toffset = addXtermChar(buffer, used, offset, (unsigned) value)\n\n/*\n * Convert a UTF-8 string to Latin-1, replacing non Latin-1 characters by `#',\n * or ASCII/Latin-1 equivalents for special cases.\n */\nstatic Char *\nUTF8toLatin1(TScreen *screen, Char *s, unsigned long len, unsigned long *result)\n{\n    static Char *buffer;\n    static Cardinal used;\n\n    Cardinal offset = 0;\n\n    if (len != 0) {\n\tPtyData data;\n\n\tfakePtyData(&data, s, s + len);\n\twhile (decodeUtf8(screen, &data)) {\n\t    Bool fails = False;\n\t    Bool extra = False;\n\t    IChar value;\n\t    skipPtyData(&data, value);\n\t    if (value == UCS_REPL) {\n\t\tfails = True;\n\t    } else if (value < 256) {\n\t\tAddChar(&buffer, &used, offset, CharOf(value));\n\t    } else {\n\t\tunsigned eqv = ucs2dec(screen, value);\n\t\tif (xtermIsDecGraphic(eqv)) {\n\t\t    AddChar(&buffer, &used, offset, DECtoASCII(eqv));\n\t\t} else {\n\t\t    eqv = AsciiEquivs(value);\n\t\t    if (eqv == value) {\n\t\t\tfails = True;\n\t\t    } else {\n\t\t\tAddChar(&buffer, &used, offset, eqv);\n\t\t    }\n\t\t    if (isWide((wchar_t) value))\n\t\t\textra = True;\n\t\t}\n\t    }\n\n\t    /*\n\t     * If we're not able to plug in a single-byte result, insert the\n\t     * defaultString (which normally is a single \"#\", but could be\n\t     * whatever the user wants).\n\t     */\n\t    if (fails) {\n\t\tconst Char *p;\n\n\t\tfor (p = (const Char *) screen->default_string; *p != '\\0'; ++p) {\n\t\t    AddChar(&buffer, &used, offset, *p);\n\t\t}\n\t    }\n\t    if (extra)\n\t\tAddChar(&buffer, &used, offset, ' ');\n\t}\n\tAddChar(&buffer, &used, offset, '\\0');\n\t*result = (unsigned long) (offset - 1);\n    } else {\n\t*result = 0;\n    }\n    return buffer;\n}\n\nint\nxtermUtf8ToTextList(XtermWidget xw,\n\t\t    XTextProperty * text_prop,\n\t\t    char ***text_list,\n\t\t    int *text_list_count)\n{\n    TScreen *screen = TScreenOf(xw);\n    Display *dpy = screen->display;\n    int rc = -1;\n\n    if (text_prop->format == 8\n\t&& (rc = Xutf8TextPropertyToTextList(dpy, text_prop,\n\t\t\t\t\t     text_list,\n\t\t\t\t\t     text_list_count)) >= 0) {\n\tif (*text_list != NULL && *text_list_count != 0) {\n\t    int i;\n\t    Char *data;\n\t    char **new_text_list, *tmp;\n\t    unsigned long size, new_size;\n\n\t    TRACE((\"xtermUtf8ToTextList size %d\\n\", *text_list_count));\n\n\t    /*\n\t     * XLib StringList actually uses only two pointers, one for the\n\t     * list itself, and one for the data.  Pointer to the data is the\n\t     * first element of the list, the rest (if any) list elements point\n\t     * to the same memory block as the first element\n\t     */\n\t    new_size = 0;\n\t    for (i = 0; i < *text_list_count; ++i) {\n\t\tdata = (Char *) (*text_list)[i];\n\t\tsize = strlen((*text_list)[i]) + 1;\n\t\t(void) UTF8toLatin1(screen, data, size, &size);\n\t\tnew_size += size + 1;\n\t    }\n\t    new_text_list = TypeXtMallocN(char *, *text_list_count);\n\t    new_text_list[0] = tmp = XtMalloc((Cardinal) new_size);\n\t    for (i = 0; i < (*text_list_count); ++i) {\n\t\tdata = (Char *) (*text_list)[i];\n\t\tsize = strlen((*text_list)[i]) + 1;\n\t\tif ((data = UTF8toLatin1(screen, data, size, &size)) != 0) {\n\t\t    memcpy(tmp, data, size + 1);\n\t\t    new_text_list[i] = tmp;\n\t\t    tmp += size + 1;\n\t\t}\n\t    }\n\t    XFreeStringList((*text_list));\n\t    *text_list = new_text_list;\n\t} else {\n\t    rc = -1;\n\t}\n    }\n    return rc;\n}\n#endif /* OPT_WIDE_CHARS */\n\nstatic char *\nparseItem(char *value, char *nextc)\n{\n    char *nextp = value;\n    while (*nextp != '\\0' && *nextp != ',') {\n\t*nextp = x_toupper(*nextp);\n\t++nextp;\n    }\n    *nextc = *nextp;\n    *nextp = '\\0';\n\n    return nextp;\n}\n\n/*\n * All of the wanted strings are unique in the first character, so we can\n * use simple abbreviations.\n */\nstatic Bool\nsameItem(const char *actual, const char *wanted)\n{\n    Bool result = False;\n    size_t have = strlen(actual);\n    size_t need = strlen(wanted);\n\n    if (have != 0 && have <= need) {\n\tif (!strncmp(actual, wanted, have)) {\n\t    TRACE((\"...matched \\\"%s\\\"\\n\", wanted));\n\t    result = True;\n\t}\n    }\n\n    return result;\n}\n\n/*\n * Handle the eightBitSelectTypes or utf8SelectTypes resource values.\n */\nstatic Bool\noverrideTargets(Widget w, String value, Atom **resultp)\n{\n    Bool override = False;\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tif (!IsEmpty(value)) {\n\t    char *copied = x_strdup(value);\n\t    if (copied != 0) {\n\t\tAtom *result = 0;\n\t\tCardinal count = 1;\n\t\tint n;\n\n\t\tTRACE((\"decoding SelectTypes \\\"%s\\\"\\n\", value));\n\t\tfor (n = 0; copied[n] != '\\0'; ++n) {\n\t\t    if (copied[n] == ',')\n\t\t\t++count;\n\t\t}\n\t\tresult = TypeXtMallocN(Atom, (2 * count) + 1);\n\t\tif (result == NULL) {\n\t\t    TRACE((\"Couldn't allocate selection types\\n\"));\n\t\t} else {\n\t\t    char nextc = '?';\n\t\t    char *listp = (char *) copied;\n\t\t    count = 0;\n\t\t    do {\n\t\t\tchar *nextp = parseItem(listp, &nextc);\n\t\t\tchar *item = x_strtrim(listp);\n\t\t\tsize_t len = (item ? strlen(item) : 0);\n\n\t\t\tif (len == 0) {\n\t\t\t    /* EMPTY */ ;\n\t\t\t}\n#if OPT_WIDE_CHARS\n\t\t\telse if (sameItem(item, \"UTF8\")) {\n\t\t\t    result[count++] = XA_UTF8_STRING(XtDisplay(w));\n\t\t\t}\n#endif\n\t\t\telse if (sameItem(item, \"I18N\")) {\n\t\t\t    if (screen->i18nSelections) {\n\t\t\t\tresult[count++] = XA_TEXT(XtDisplay(w));\n\t\t\t\tresult[count++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t\t    }\n\t\t\t} else if (sameItem(item, \"TEXT\")) {\n\t\t\t    result[count++] = XA_TEXT(XtDisplay(w));\n\t\t\t} else if (sameItem(item, \"COMPOUND_TEXT\")) {\n\t\t\t    result[count++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t\t} else if (sameItem(item, \"STRING\")) {\n\t\t\t    result[count++] = XA_STRING;\n\t\t\t}\n\t\t\t*nextp++ = nextc;\n\t\t\tlistp = nextp;\n\t\t\tfree(item);\n\t\t    } while (nextc != '\\0');\n\t\t    if (count) {\n\t\t\tresult[count] = None;\n\t\t\toverride = True;\n\t\t\t*resultp = result;\n\t\t    } else {\n\t\t\tXtFree((char *) result);\n\t\t    }\n\t\t}\n\t\tfree(copied);\n\t    } else {\n\t\tTRACE((\"Couldn't allocate copy of selection types\\n\"));\n\t    }\n\t}\n    }\n    return override;\n}\n\n#if OPT_WIDE_CHARS\nstatic Atom *\nallocUtf8Targets(Widget w, TScreen *screen)\n{\n    Atom **resultp = &(screen->selection_targets_utf8);\n\n    if (*resultp == 0) {\n\tAtom *result;\n\n\tif (!overrideTargets(w, screen->utf8_select_types, &result)) {\n\t    result = TypeXtMallocN(Atom, 5);\n\t    if (result == NULL) {\n\t\tTRACE((\"Couldn't allocate utf-8 selection targets\\n\"));\n\t    } else {\n\t\tint n = 0;\n\n\t\tif (XSupportsLocale()) {\n\t\t    result[n++] = XA_UTF8_STRING(XtDisplay(w));\n#ifdef X_HAVE_UTF8_STRING\n\t\t    if (screen->i18nSelections) {\n\t\t\tresult[n++] = XA_TEXT(XtDisplay(w));\n\t\t\tresult[n++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t    }\n#endif\n\t\t}\n\t\tresult[n++] = XA_STRING;\n\t\tresult[n] = None;\n\t    }\n\t}\n\n\t*resultp = result;\n    }\n\n    return *resultp;\n}\n#endif\n\nstatic Atom *\nalloc8bitTargets(Widget w, TScreen *screen)\n{\n    Atom **resultp = &(screen->selection_targets_8bit);\n\n    if (*resultp == 0) {\n\tAtom *result = 0;\n\n\tif (!overrideTargets(w, screen->eightbit_select_types, &result)) {\n\t    result = TypeXtMallocN(Atom, 5);\n\t    if (result == NULL) {\n\t\tTRACE((\"Couldn't allocate 8bit selection targets\\n\"));\n\t    } else {\n\t\tint n = 0;\n\n\t\tif (XSupportsLocale()) {\n#ifdef X_HAVE_UTF8_STRING\n\t\t    result[n++] = XA_UTF8_STRING(XtDisplay(w));\n#endif\n\t\t    if (screen->i18nSelections) {\n\t\t\tresult[n++] = XA_TEXT(XtDisplay(w));\n\t\t\tresult[n++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t    }\n\t\t}\n\t\tresult[n++] = XA_STRING;\n\t\tresult[n] = None;\n\t    }\n\t}\n\n\t*resultp = result;\n    }\n\n    return *resultp;\n}\n\nstatic Atom *\n_SelectionTargets(Widget w)\n{\n    Atom *result;\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0) {\n\tresult = NULL;\n    } else {\n\tTScreen *screen = TScreenOf(xw);\n\n#if OPT_WIDE_CHARS\n\tif (screen->wide_chars) {\n\t    result = allocUtf8Targets(w, screen);\n\t} else\n#endif\n\t{\n\t    /* not screen->wide_chars */\n\t    result = alloc8bitTargets(w, screen);\n\t}\n    }\n\n    return result;\n}\n\n#define isSELECT(value) (!strcmp(value, \"SELECT\"))\n\nstatic int\nDefaultSelection(TScreen *screen)\n{\n    return (screen->selectToClipboard ? 1 : 0);\n}\n\nstatic int\nTargetToSelection(TScreen *screen, String name)\n{\n    int result = -1;\n    int cutb;\n\n    if (isSELECT(name)) {\n\tresult = DefaultSelection(screen);\n    } else if (!strcmp(name, PRIMARY_NAME)) {\n\tresult = PRIMARY_CODE;\n    } else if (!strcmp(name, CLIPBOARD_NAME)) {\n\tresult = CLIPBOARD_CODE;\n    } else if (!strcmp(name, SECONDARY_NAME)) {\n\tresult = SECONDARY_CODE;\n    } else if (sscanf(name, \"CUT_BUFFER%d\", &cutb) == 1) {\n\tif (cutb >= 0 && cutb < MAX_CUT_BUFFER) {\n\t    result = CutBufferToCode(cutb);\n\t} else {\n\t    xtermWarning(\"unexpected cut-buffer code: %d\\n\", cutb);\n\t}\n    } else {\n\txtermWarning(\"unexpected selection target: %s\\n\", name);\n    }\n    TRACE2((\"TargetToSelection(%s) ->%d\\n\", name, result));\n    return result;\n}\n\nvoid\nUnmapSelections(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    Cardinal n;\n\n    if (screen->mappedSelect) {\n\tfor (n = 0; screen->mappedSelect[n] != 0; ++n)\n\t    free((void *) screen->mappedSelect[n]);\n\tFreeAndNull(screen->mappedSelect);\n    }\n}\n\n/*\n * xterm generally uses the primary selection.  Some applications prefer\n * (or are limited to) the clipboard.  Since the translations resource is\n * complicated, users seldom change the way it affects selection.  But it\n * is simple to remap the choice between primary and clipboard before the\n * call to XmuInternStrings().\n */\nstatic String *\nMapSelections(XtermWidget xw, String *params, Cardinal num_params)\n{\n    String *result = params;\n\n    if (params != 0 && num_params > 0) {\n\tCardinal j;\n\tBoolean map = False;\n\n\tfor (j = 0; j < num_params; ++j) {\n\t    TRACE((\"param[%d]:%s\\n\", j, params[j]));\n\t    if (isSELECT(params[j])) {\n\t\tmap = True;\n\t\tbreak;\n\t    }\n\t}\n\tif (map) {\n\t    TScreen *screen = TScreenOf(xw);\n\t    const char *mapTo = (screen->selectToClipboard\n\t\t\t\t ? CLIPBOARD_NAME\n\t\t\t\t : PRIMARY_NAME);\n\n\t    UnmapSelections(xw);\n\t    if ((result = TypeMallocN(String, num_params + 1)) != 0) {\n\t\tresult[num_params] = 0;\n\t\tfor (j = 0; j < num_params; ++j) {\n\t\t    result[j] = x_strdup((isSELECT(params[j])\n\t\t\t\t\t  ? mapTo\n\t\t\t\t\t  : params[j]));\n\t\t    if (result[j] == 0) {\n\t\t\tUnmapSelections(xw);\n\t\t\twhile (j != 0) {\n\t\t\t    free((void *) result[--j]);\n\t\t\t}\n\t\t\tFreeAndNull(result);\n\t\t\tbreak;\n\t\t    }\n\t\t}\n\t\tscreen->mappedSelect = result;\n\t    }\n\t}\n    }\n    return result;\n}\n\n/*\n * Lookup the cut-buffer number, which will be in the range 0-7.\n * If it is not a cut-buffer, it is a type of selection, e.g., primary.\n */\nstatic int\nCutBuffer(Atom code)\n{\n    int cutbuffer;\n    switch ((unsigned) code) {\n    case XA_CUT_BUFFER0:\n\tcutbuffer = 0;\n\tbreak;\n    case XA_CUT_BUFFER1:\n\tcutbuffer = 1;\n\tbreak;\n    case XA_CUT_BUFFER2:\n\tcutbuffer = 2;\n\tbreak;\n    case XA_CUT_BUFFER3:\n\tcutbuffer = 3;\n\tbreak;\n    case XA_CUT_BUFFER4:\n\tcutbuffer = 4;\n\tbreak;\n    case XA_CUT_BUFFER5:\n\tcutbuffer = 5;\n\tbreak;\n    case XA_CUT_BUFFER6:\n\tcutbuffer = 6;\n\tbreak;\n    case XA_CUT_BUFFER7:\n\tcutbuffer = 7;\n\tbreak;\n    default:\n\tcutbuffer = -1;\n\tbreak;\n    }\n    TRACE2((\"CutBuffer(%d) = %d\\n\", (int) code, cutbuffer));\n    return cutbuffer;\n}\n\n#if OPT_PASTE64\nstatic void\nFinishPaste64(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE((\"FinishPaste64(%d)\\n\", screen->base64_paste));\n    if (screen->base64_paste) {\n\tscreen->base64_paste = 0;\n\tunparseputc1(xw, screen->base64_final);\n\tunparse_end(xw);\n    }\n}\n#endif\n\n#if !OPT_PASTE64\nstatic\n#endif\nvoid\nxtermGetSelection(Widget w,\n\t\t  Time ev_time,\n\t\t  String *params,\t/* selections in precedence order */\n\t\t  Cardinal num_params,\n\t\t  Atom *targets)\n{\n    Atom selection;\n    int cutbuffer;\n    Atom target;\n\n    XtermWidget xw;\n\n    if (num_params == 0)\n\treturn;\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn;\n\n    TRACE((\"xtermGetSelection num_params %d @%ld\\n\", num_params, ev_time));\n    params = MapSelections(xw, params, num_params);\n\n    XmuInternStrings(XtDisplay(w), params, (Cardinal) 1, &selection);\n    cutbuffer = CutBuffer(selection);\n\n    TRACE((\"Cutbuffer: %d, target: %s\\n\", cutbuffer,\n\t   (targets\n\t    ? visibleSelectionTarget(XtDisplay(w), targets[0])\n\t    : \"None\")));\n\n    if (cutbuffer >= 0) {\n\tint inbytes;\n\tunsigned long nbytes;\n\tint fmt8 = 8;\n\tAtom type = XA_STRING;\n\tchar *line;\n\n\t/* 'line' is freed in SelectionReceived */\n\tline = XFetchBuffer(XtDisplay(w), &inbytes, cutbuffer);\n\tnbytes = (unsigned long) inbytes;\n\n\tif (nbytes > 0) {\n\t    SelectionReceived(w, NULL, &selection, &type, (XtPointer) line,\n\t\t\t      &nbytes, &fmt8);\n\t} else if (num_params > 1) {\n\t    xtermGetSelection(w, ev_time, params + 1, num_params - 1, NULL);\n\t}\n#if OPT_PASTE64\n\telse {\n\t    FinishPaste64(xw);\n\t}\n#endif\n    } else {\n\n\tif (targets == NULL || targets[0] == None) {\n\t    targets = _SelectionTargets(w);\n\t}\n\n\tif (targets != 0) {\n\t    struct _SelectionList *list;\n\n\t    target = targets[0];\n\n\t    if (targets[1] == None) {\t/* last target in list */\n\t\tparams++;\n\t\tnum_params--;\n\t\ttargets = _SelectionTargets(w);\n\t    } else {\n\t\ttargets = &(targets[1]);\n\t    }\n\n\t    if (num_params) {\n\t\t/* 'list' is freed in SelectionReceived */\n\t\tlist = TypeXtMalloc(struct _SelectionList);\n\t\tif (list != 0) {\n\t\t    list->params = params;\n\t\t    list->count = num_params;\n\t\t    list->targets = targets;\n\t\t    list->time = ev_time;\n\t\t}\n\t    } else {\n\t\tlist = NULL;\n\t    }\n\n\t    XtGetSelectionValue(w, selection,\n\t\t\t\ttarget,\n\t\t\t\tSelectionReceived,\n\t\t\t\t(XtPointer) list, ev_time);\n\t}\n    }\n}\n\n#if OPT_TRACE && OPT_WIDE_CHARS\nstatic void\nGettingSelection(Display *dpy, Atom type, Char *line, unsigned long len)\n{\n    Char *cp;\n    const char *name = TraceAtomName(dpy, type);\n\n    TRACE((\"Getting %s (type=%ld, length=%ld)\\n\", name, (long int) type, len));\n    for (cp = line; cp < line + len; cp++) {\n\tTRACE((\"[%d:%lu]\", (int) (cp + 1 - line), len));\n\tif (isprint(*cp)) {\n\t    TRACE((\"%c\\n\", *cp));\n\t} else {\n\t    TRACE((\"\\\\x%02x\\n\", *cp));\n\t}\n    }\n}\n#else\n#define GettingSelection(dpy,type,line,len)\t/* nothing */\n#endif\n\n#ifdef VMS\n#  define tty_vwrite(pty,lag,l)\t\ttt_write(lag,l)\n#else /* !( VMS ) */\n#  define tty_vwrite(pty,lag,l)\t\tv_write(pty,lag,l)\n#endif /* defined VMS */\n\n#if OPT_PASTE64\n/* Return base64 code character given 6-bit number */\nstatic const char base64_code[] = \"\\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\\nabcdefghijklmnopqrstuvwxyz\\\n0123456789+/\";\nstatic void\nbase64_flush(TScreen *screen)\n{\n    Char x;\n\n    TRACE((\"base64_flush count %d, pad %d (%d)\\n\",\n\t   screen->base64_count,\n\t   screen->base64_pad,\n\t   screen->base64_pad & 3));\n\n    switch (screen->base64_count) {\n    case 0:\n\tbreak;\n    case 2:\n\tx = CharOf(base64_code[screen->base64_accu << 4]);\n\ttty_vwrite(screen->respond, &x, 1);\n\tbreak;\n    case 4:\n\tx = CharOf(base64_code[screen->base64_accu << 2]);\n\ttty_vwrite(screen->respond, &x, 1);\n\tbreak;\n    }\n    if (screen->base64_pad & 3) {\n\ttty_vwrite(screen->respond,\n\t\t   (const Char *) \"===\",\n\t\t   (unsigned) (3 - (screen->base64_pad & 3)));\n    }\n    screen->base64_count = 0;\n    screen->base64_accu = 0;\n    screen->base64_pad = 0;\n}\n#endif /* OPT_PASTE64 */\n\n/*\n * Translate ISO-8859-1 or UTF-8 data to NRCS.\n */\nstatic void\nToNational(XtermWidget xw, Char *buffer, unsigned *length)\n{\n    TScreen *screen = TScreenOf(xw);\n    DECNRCM_codes gsetL = screen->gsets[screen->curgl];\n    DECNRCM_codes gsetR = screen->gsets[screen->curgr];\n\n#if OPT_WIDE_CHARS\n    if ((screen->utf8_nrc_mode | screen->utf8_mode) != uFalse) {\n\tChar *p;\n\tPtyData *data = TypeXtMallocX(PtyData, *length);\n\n\tmemset(data, 0, sizeof(*data));\n\tdata->next = data->buffer;\n\tdata->last = data->buffer + *length;\n\tmemcpy(data->buffer, buffer, (size_t) *length);\n\tp = buffer;\n\twhile (data->next < data->last) {\n\t    unsigned chr, out, gl, gr;\n\n\t    if (!decodeUtf8(screen, data)) {\n\t\tdata->utf_size = 1;\n\t\tdata->utf_data = data->next[0];\n\t    }\n\t    data->next += data->utf_size;\n\t    chr = data->utf_data;\n\t    out = chr;\n\t    if ((gl = xtermCharSetIn(xw, chr, gsetL)) != chr) {\n\t\tout = gl;\n\t    } else if ((gr = xtermCharSetIn(xw, chr, gsetR)) != chr) {\n\t\tout = gr;\n\t    }\n\t    *p++ = (Char) ((out < 256) ? out : ' ');\n\t}\n\t*length = (unsigned) (p - buffer);\n\tfree(data);\n    } else\n#endif\n    {\n\tChar *p;\n\n\tfor (p = buffer; (int) (p - buffer) < (int) *length; ++p) {\n\t    unsigned gl, gr;\n\t    unsigned chr = *p;\n\t    unsigned out = chr;\n\t    if ((gl = xtermCharSetIn(xw, chr, gsetL)) != chr) {\n\t\tout = gl;\n\t    } else if ((gr = xtermCharSetIn(xw, chr, gsetR)) != chr) {\n\t\tout = gr;\n\t    }\n\t    *p = (Char) out;\n\t}\n    }\n}\n\nstatic void\n_qWriteSelectionData(XtermWidget xw, Char *lag, unsigned length)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    /*\n     * If we are pasting into a window which is using NRCS, we want to map\n     * the text from the normal encoding (ISO-8859-1 or UTF-8) into the coding\n     * that an application would use to write characters with NRCS.\n     *\n     * TODO: handle conversion from UTF-8, and adjust length.  This can be done\n     * in the same buffer because the target is always 8-bit.\n     */\n    if ((xw->flags & NATIONAL) && (length != 0)) {\n\tToNational(xw, lag, &length);\n    }\n#if OPT_PASTE64\n    if (screen->base64_paste) {\n\t/* Send data as base64 */\n\tChar *p = lag;\n\tChar buf[64];\n\tunsigned x = 0;\n\n\tTRACE((\"convert to base64 %d:%s\\n\", length, visibleChars(p, length)));\n\n\t/*\n\t * Handle the case where the selection is from _this_ xterm, which\n\t * puts part of the reply in the buffer before the selection callback\n\t * happens.\n\t */\n\tif (screen->base64_paste && screen->unparse_len) {\n\t    unparse_end(xw);\n\t}\n\twhile (length--) {\n\t    switch (screen->base64_count) {\n\t    case 0:\n\t\tbuf[x++] = CharOf(base64_code[*p >> 2]);\n\t\tscreen->base64_accu = (unsigned) (*p & 0x3);\n\t\tscreen->base64_count = 2;\n\t\t++p;\n\t\tbreak;\n\t    case 2:\n\t\tbuf[x++] = CharOf(base64_code[(screen->base64_accu << 4) +\n\t\t\t\t\t      (*p >> 4)]);\n\t\tscreen->base64_accu = (unsigned) (*p & 0xF);\n\t\tscreen->base64_count = 4;\n\t\t++p;\n\t\tbreak;\n\t    case 4:\n\t\tbuf[x++] = CharOf(base64_code[(screen->base64_accu << 2) +\n\t\t\t\t\t      (*p >> 6)]);\n\t\tbuf[x++] = CharOf(base64_code[*p & 0x3F]);\n\t\tscreen->base64_accu = 0;\n\t\tscreen->base64_count = 0;\n\t\t++p;\n\t\tbreak;\n\t    }\n\t    if (x >= 63) {\n\t\t/* Write 63 or 64 characters */\n\t\tscreen->base64_pad += x;\n\t\tTRACE((\"writing base64 interim %s\\n\", visibleChars(buf, x)));\n\t\ttty_vwrite(screen->respond, buf, x);\n\t\tx = 0;\n\t    }\n\t}\n\tif (x != 0) {\n\t    screen->base64_pad += x;\n\t    TRACE((\"writing base64 finish %s\\n\", visibleChars(buf, x)));\n\t    tty_vwrite(screen->respond, buf, x);\n\t}\n    } else\n#endif /* OPT_PASTE64 */\n#if OPT_READLINE\n    if (SCREEN_FLAG(screen, paste_quotes)) {\n\twhile (length--) {\n\t    tty_vwrite(screen->respond, (const Char *) \"\\026\", 1);\t/* Control-V */\n\t    tty_vwrite(screen->respond, lag++, 1);\n\t}\n    } else\n#endif\n    {\n\tTRACE((\"writing base64 padding %s\\n\", visibleChars(lag, length)));\n\ttty_vwrite(screen->respond, lag, length);\n    }\n}\n\nstatic void\n_WriteSelectionData(XtermWidget xw, Char *line, size_t length)\n{\n    /* Write data to pty a line at a time. */\n    /* Doing this one line at a time may no longer be necessary\n       because v_write has been re-written. */\n\n#if OPT_PASTE64\n    TScreen *screen = TScreenOf(xw);\n#endif\n    Char *lag, *end;\n\n    /* in the VMS version, if tt_pasting isn't set to True then qio\n       reads aren't blocked and an infinite loop is entered, where the\n       pasted text shows up as new input, goes in again, shows up\n       again, ad nauseum. */\n#ifdef VMS\n    tt_pasting = True;\n#endif\n\n    end = &line[length];\n    lag = line;\n\n#if OPT_PASTE64\n    if (screen->base64_paste) {\n\t_qWriteSelectionData(xw, lag, (unsigned) (end - lag));\n\tbase64_flush(screen);\n    } else\n#endif\n    {\n\tif (!SCREEN_FLAG(screen, paste_literal_nl)) {\n\t    Char *cp;\n\t    for (cp = line; cp != end; cp++) {\n\t\tif (*cp == '\\n') {\n\t\t    *cp = '\\r';\n\t\t    _qWriteSelectionData(xw, lag, (unsigned) (cp - lag + 1));\n\t\t    lag = cp + 1;\n\t\t}\n\t    }\n\t}\n\n\tif (lag != end) {\n\t    _qWriteSelectionData(xw, lag, (unsigned) (end - lag));\n\t}\n    }\n#ifdef VMS\n    tt_pasting = False;\n    tt_start_read();\t\t/* reenable reads or a character may be lost */\n#endif\n}\n\n#if OPT_PASTE64 || OPT_READLINE\nstatic void\n_WriteKey(TScreen *screen, const Char *in)\n{\n    Char line[16];\n    unsigned count = 0;\n    size_t length = strlen((const char *) in);\n\n    if (screen->control_eight_bits) {\n\tline[count++] = ANSI_CSI;\n    } else {\n\tline[count++] = ANSI_ESC;\n\tline[count++] = '[';\n    }\n    while (length--)\n\tline[count++] = *in++;\n    line[count++] = '~';\n    tty_vwrite(screen->respond, line, count);\n}\n#endif /* OPT_READLINE */\n\n/*\n * Unless enabled by the user, strip control characters other than formatting.\n */\nstatic size_t\nremoveControls(XtermWidget xw, char *value)\n{\n    TScreen *screen = TScreenOf(xw);\n    size_t dst = 0;\n\n    if (screen->allowPasteControls) {\n\tdst = strlen(value);\n    } else {\n\tsize_t src = 0;\n\twhile ((value[dst] = value[src]) != '\\0') {\n\t    int ch = CharOf(value[src++]);\n\n#define ReplacePaste(n) \\\n\t    if (screen->disallow_paste_controls[n]) \\\n\t\tvalue[dst] = ' '\n\n\t    if (ch < 32) {\n\t\tReplacePaste(epC0);\n\t\tReplacePaste(ch);\n\t\t++dst;\n\t    } else if (ch == ANSI_DEL) {\n\t\tReplacePaste(epDEL);\n\t\t++dst;\n\t    }\n#if OPT_WIDE_CHARS\n\t    else if (screen->utf8_inparse || screen->utf8_nrc_mode)\n\t\t++dst;\n#endif\n#if OPT_C1_PRINT || OPT_WIDE_CHARS\n\t    else if (screen->c1_printable)\n\t\t++dst;\n#endif\n\t    else if (ch >= 128 && ch < 160)\n\t\tcontinue;\n\t    else\n\t\t++dst;\n\t}\n    }\n    return dst;\n}\n\n#if OPT_SELECTION_OPS\nstatic void\nbeginInternalSelect(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    InternalSelect *mydata = &(screen->internal_select);\n\n    (void) mydata;\n    /* override flags so that SelectionReceived only updates a buffer */\n#if OPT_PASTE64\n    mydata->base64_paste = screen->base64_paste;\n    screen->base64_paste = 0;\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n    mydata->paste_brackets = screen->paste_brackets;\n    SCREEN_FLAG_unset(screen, paste_brackets);\n#endif\n}\n\nstatic void\nfinishInternalSelect(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    InternalSelect *mydata = &(screen->internal_select);\n\n    (void) mydata;\n#if OPT_PASTE64\n    screen->base64_paste = mydata->base64_paste;\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n    screen->paste_brackets = mydata->paste_brackets;\n#endif\n}\n\n#else\n#define finishInternalSelect(xw)\t/* nothing */\n#endif /* OPT_SELECTION_OPS */\n\n/* SelectionReceived: stuff received selection text into pty */\n\n/* ARGSUSED */\nstatic void\nSelectionReceived(Widget w,\n\t\t  XtPointer client_data,\n\t\t  Atom *selection GCC_UNUSED,\n\t\t  Atom *type,\n\t\t  XtPointer value,\n\t\t  unsigned long *length,\n\t\t  int *format)\n{\n    char **text_list = NULL;\n    int text_list_count = 0;\n    XTextProperty text_prop;\n    TScreen *screen;\n    Display *dpy;\n#if OPT_TRACE && OPT_WIDE_CHARS\n    Char *line = (Char *) value;\n#endif\n\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn;\n\n    screen = TScreenOf(xw);\n    dpy = XtDisplay(w);\n\n    if (*type == 0\t\t/*XT_CONVERT_FAIL */\n\t|| *length == 0\n\t|| value == NULL) {\n\tTRACE((\"...no data to convert\\n\"));\n\tgoto fail;\n    }\n\n    text_prop.value = (unsigned char *) value;\n    text_prop.encoding = *type;\n    text_prop.format = *format;\n    text_prop.nitems = *length;\n\n    TRACE((\"SelectionReceived %s %s format %d, nitems %ld\\n\",\n\t   TraceAtomName(screen->display, *selection),\n\t   visibleSelectionTarget(dpy, text_prop.encoding),\n\t   text_prop.format,\n\t   text_prop.nitems));\n\n#if OPT_WIDE_CHARS\n    if (XSupportsLocale() && screen->wide_chars) {\n\tif (*type == XA_UTF8_STRING(dpy) ||\n\t    *type == XA_STRING ||\n\t    *type == XA_COMPOUND_TEXT(dpy)) {\n\t    GettingSelection(dpy, *type, line, *length);\n\t    if (Xutf8TextPropertyToTextList(dpy, &text_prop,\n\t\t\t\t\t    &text_list,\n\t\t\t\t\t    &text_list_count) < 0) {\n\t\tTRACE((\"default Xutf8 Conversion failed\\n\"));\n\t\ttext_list = NULL;\n\t    }\n\t}\n    } else\n#endif /* OPT_WIDE_CHARS */\n    {\n\t/* Convert the selection to locale's multibyte encoding. */\n\n\tif (*type == XA_UTF8_STRING(dpy) ||\n\t    *type == XA_STRING ||\n\t    *type == XA_COMPOUND_TEXT(dpy)) {\n\t    Status rc;\n\n\t    GettingSelection(dpy, *type, line, *length);\n\n#if OPT_WIDE_CHARS\n\t    if (*type == XA_UTF8_STRING(dpy) &&\n\t\t!(screen->wide_chars || screen->c1_printable)) {\n\t\trc = xtermUtf8ToTextList(xw, &text_prop,\n\t\t\t\t\t &text_list, &text_list_count);\n\t    } else\n#endif\n\t    if (*type == XA_STRING && (!XSupportsLocale() || screen->brokenSelections)) {\n\t\trc = XTextPropertyToStringList(&text_prop,\n\t\t\t\t\t       &text_list, &text_list_count);\n\t    } else {\n\t\trc = XmbTextPropertyToTextList(dpy, &text_prop,\n\t\t\t\t\t       &text_list,\n\t\t\t\t\t       &text_list_count);\n\t    }\n\t    if (rc < 0) {\n\t\tTRACE((\"Conversion failed\\n\"));\n\t\ttext_list = NULL;\n\t    }\n\t}\n    }\n\n    if (text_list != NULL && text_list_count != 0) {\n\tint i;\n\n#if OPT_PASTE64\n\tif (screen->base64_paste) {\n\t    /* EMPTY */ ;\n\t} else\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n\tif (SCREEN_FLAG(screen, paste_brackets) && !screen->selectToBuffer) {\n\t    _WriteKey(screen, (const Char *) \"200\");\n\t}\n#endif\n\tfor (i = 0; i < text_list_count; i++) {\n\t    size_t len = removeControls(xw, text_list[i]);\n\n\t    if (screen->selectToBuffer) {\n\t\tInternalSelect *mydata = &(screen->internal_select);\n\t\tif (!mydata->done) {\n\t\t    size_t have = (mydata->buffer\n\t\t\t\t   ? strlen(mydata->buffer)\n\t\t\t\t   : 0);\n\t\t    size_t need = have + len + 1;\n\t\t    char *buffer = realloc(mydata->buffer, need);\n\n\t\t    if (buffer != 0) {\n\t\t\tstrcpy(buffer + have, text_list[i]);\n\t\t\tmydata->buffer = buffer;\n\t\t    }\n\t\t    TRACE((\"FormatSelect %d.%d .. %d.%d %s\\n\",\n\t\t\t   screen->startSel.row,\n\t\t\t   screen->startSel.col,\n\t\t\t   screen->endSel.row,\n\t\t\t   screen->endSel.col,\n\t\t\t   mydata->buffer));\n\t\t    mydata->format_select(w, mydata->format, mydata->buffer,\n\t\t\t\t\t  &(screen->startSel),\n\t\t\t\t\t  &(screen->endSel));\n\t\t    mydata->done = True;\n\t\t}\n\n\t    } else {\n\t\t_WriteSelectionData(xw, (Char *) text_list[i], len);\n\t    }\n\t}\n#if OPT_PASTE64\n\tif (screen->base64_paste) {\n\t    FinishPaste64(xw);\n\t} else\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n\tif (SCREEN_FLAG(screen, paste_brackets) && !screen->selectToBuffer) {\n\t    _WriteKey(screen, (const Char *) \"201\");\n\t}\n#endif\n\tif (screen->selectToBuffer) {\n\t    InternalSelect *mydata = &(screen->internal_select);\n\t    finishInternalSelect(xw);\n\t    if (mydata->done) {\n\t\tfree(mydata->format);\n\t\tfree(mydata->buffer);\n\t\tmemset(mydata, 0, sizeof(*mydata));\n\t    }\n\t    screen->selectToBuffer = False;\n\t}\n\tXFreeStringList(text_list);\n    } else {\n\tTRACE((\"...empty text-list\\n\"));\n\tgoto fail;\n    }\n\n    XtFree((char *) client_data);\n    XtFree((char *) value);\n\n    return;\n\n  fail:\n    if (client_data != 0) {\n\tstruct _SelectionList *list = (struct _SelectionList *) client_data;\n\n\tTRACE((\"SelectionReceived ->xtermGetSelection\\n\"));\n\txtermGetSelection(w, list->time,\n\t\t\t  list->params, list->count, list->targets);\n\tXtFree((char *) client_data);\n#if OPT_PASTE64\n    } else {\n\tFinishPaste64(xw);\n#endif\n    }\n    return;\n}\n\nvoid\nHandleInsertSelection(Widget w,\n\t\t      XEvent *event,\t/* assumed to be XButtonEvent* */\n\t\t      String *params,\t/* selections in precedence order */\n\t\t      Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleInsertSelection\", event, params, num_params);\n\tif (!SendMousePosition(xw, event)) {\n#if OPT_READLINE\n\t    int ldelta;\n\t    TScreen *screen = TScreenOf(xw);\n\t    if (IsBtnEvent(event)\n\t\t&& !OverrideEvent(event)\n\t\t&& (okSendMousePos(xw) == MOUSE_OFF)\n\t\t&& SCREEN_FLAG(screen, paste_moves)\n\t\t&& rowOnCurrentLine(screen, eventRow(screen, event), &ldelta))\n\t\tReadLineMovePoint(screen, eventColBetween(screen, event), ldelta);\n#endif /* OPT_READLINE */\n\n\t    xtermGetSelection(w, event->xbutton.time, params, *num_params, NULL);\n\t}\n    }\n}\n\nstatic SelectUnit\nEvalSelectUnit(XtermWidget xw,\n\t       Time buttonDownTime,\n\t       SelectUnit defaultUnit,\n\t       unsigned int button)\n{\n    TScreen *screen = TScreenOf(xw);\n    SelectUnit result;\n    int delta;\n\n    if (button != screen->lastButton) {\n\tdelta = screen->multiClickTime + 1;\n    } else if (screen->lastButtonUpTime == (Time) 0) {\n\t/* first time and once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (buttonDownTime > screen->lastButtonUpTime) {\n\t/* most of the time */\n\tdelta = (int) (buttonDownTime - screen->lastButtonUpTime);\n    } else {\n\t/* time has rolled over since lastButtonUpTime */\n\tdelta = (int) ((((Time) ~ 0) - screen->lastButtonUpTime) + buttonDownTime);\n    }\n\n    if (delta > screen->multiClickTime) {\n\tscreen->numberOfClicks = 1;\n\tresult = defaultUnit;\n    } else {\n\tresult = screen->selectMap[screen->numberOfClicks % screen->maxClicks];\n\tscreen->numberOfClicks += 1;\n    }\n    TRACE((\"EvalSelectUnit(%d) = %d\\n\", screen->numberOfClicks, result));\n    return result;\n}\n\nstatic void\ndo_select_start(XtermWidget xw,\n\t\tXEvent *event,\t/* must be XButtonEvent* */\n\t\tCELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    if (SendMousePosition(xw, event))\n\treturn;\n    screen->selectUnit = EvalSelectUnit(xw,\n\t\t\t\t\tevent->xbutton.time,\n\t\t\t\t\tSelect_CHAR,\n\t\t\t\t\tevent->xbutton.button);\n    screen->replyToEmacs = False;\n\n#if OPT_READLINE\n    lastButtonDownTime = event->xbutton.time;\n#endif\n\n    StartSelect(xw, cell);\n}\n\n/* ARGSUSED */\nvoid\nHandleSelectStart(Widget w,\n\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t  String *params GCC_UNUSED,\n\t\t  Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tCELL cell;\n\n\tTRACE_EVENT(\"HandleSelectStart\", event, params, num_params);\n\tscreen->firstValidRow = 0;\n\tscreen->lastValidRow = screen->max_row;\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n\n#if OPT_READLINE\n\tExtendingSelection = 0;\n#endif\n\n\tdo_select_start(xw, event, &cell);\n    }\n}\n\n/* ARGSUSED */\nvoid\nHandleKeyboardSelectStart(Widget w,\n\t\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t\t  String *params GCC_UNUSED,\n\t\t\t  Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tTRACE_EVENT(\"HandleKeyboardSelectStart\", event, params, num_params);\n\tdo_select_start(xw, event, &screen->cursorp);\n    }\n}\n\nstatic void\nTrackDown(XtermWidget xw, XButtonEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    CELL cell;\n\n    screen->selectUnit = EvalSelectUnit(xw,\n\t\t\t\t\tevent->time,\n\t\t\t\t\tSelect_CHAR,\n\t\t\t\t\tevent->button);\n    if (screen->numberOfClicks > 1) {\n\tPointToCELL(screen, event->y, event->x, &cell);\n\tscreen->replyToEmacs = True;\n\tStartSelect(xw, &cell);\n    } else {\n\tscreen->waitingForTrackInfo = True;\n\tEditorButton(xw, event);\n    }\n}\n\n#define boundsCheck(x)\tif (x < 0) \\\n\t\t\t    x = 0; \\\n\t\t\telse if (x >= screen->max_row) \\\n\t\t\t    x = screen->max_row\n\nvoid\nTrackMouse(XtermWidget xw,\n\t   int func,\n\t   CELL *start,\n\t   int firstrow,\n\t   int lastrow)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    if (screen->waitingForTrackInfo) {\t/* if Timed, ignore */\n\tscreen->waitingForTrackInfo = False;\n\n\tif (func != 0) {\n\t    CELL first = *start;\n\n\t    boundsCheck(first.row);\n\t    boundsCheck(firstrow);\n\t    boundsCheck(lastrow);\n\t    screen->firstValidRow = firstrow;\n\t    screen->lastValidRow = lastrow;\n\t    screen->replyToEmacs = True;\n\t    StartSelect(xw, &first);\n\t}\n    }\n}\n\nstatic void\nStartSelect(XtermWidget xw, const CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE((\"StartSelect row=%d, col=%d\\n\", cell->row, cell->col));\n    if (screen->cursor_state)\n\tHideCursor(xw);\n    if (screen->numberOfClicks == 1) {\n\t/* set start of selection */\n\tscreen->rawPos = *cell;\n    }\n    /* else use old values in rawPos */\n    screen->saveStartR = screen->startExt = screen->rawPos;\n    screen->saveEndR = screen->endExt = screen->rawPos;\n    if (Coordinate(screen, cell) < Coordinate(screen, &(screen->rawPos))) {\n\tscreen->eventMode = LEFTEXTENSION;\n\tscreen->startExt = *cell;\n    } else {\n\tscreen->eventMode = RIGHTEXTENSION;\n\tscreen->endExt = *cell;\n    }\n    ComputeSelect(xw, &(screen->startExt), &(screen->endExt), False, True);\n}\n\nstatic void\nEndExtend(XtermWidget xw,\n\t  XEvent *event,\t/* must be XButtonEvent */\n\t  String *params,\t/* selections */\n\t  Cardinal num_params,\n\t  Bool use_cursor_loc)\n{\n    CELL cell;\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE_EVENT(\"EndExtend\", event, params, &num_params);\n    if (use_cursor_loc) {\n\tcell = screen->cursorp;\n    } else {\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n    }\n    ExtendExtend(xw, &cell);\n\n    screen->lastButtonUpTime = event->xbutton.time;\n    screen->lastButton = event->xbutton.button;\n\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel))) {\n\tif (screen->replyToEmacs) {\n\t    Char line[64];\n\t    unsigned count = 0;\n\n\t    if (screen->control_eight_bits) {\n\t\tline[count++] = ANSI_CSI;\n\t    } else {\n\t\tline[count++] = ANSI_ESC;\n\t\tline[count++] = '[';\n\t    }\n\t    if (isSameCELL(&(screen->rawPos), &(screen->startSel))\n\t\t&& isSameCELL(&cell, &(screen->endSel))) {\n\t\t/* Use short-form emacs select */\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase 0:\n\t\tcase SET_EXT_MODE_MOUSE:\n\t\t    line[count++] = 't';\n\t\t    break;\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = '<';\n\t\t    break;\n\t\t}\n\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.row);\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_URXVT_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = 't';\n\t\t    break;\n\t\t}\n\t    } else {\n\t\t/* long-form, specify everything */\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase 0:\n\t\tcase SET_EXT_MODE_MOUSE:\n\t\t    line[count++] = 'T';\n\t\t    break;\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = '<';\n\t\t    break;\n\t\t}\n\n\t\tcount = EmitMousePosition(screen, line, count, screen->startSel.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->startSel.row);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.row);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, cell.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, cell.row);\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_URXVT_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = 'T';\n\t\t    break;\n\t\t}\n\t    }\n\t    v_write(screen->respond, line, count);\n\t    UnHiliteText(xw);\n\t}\n    }\n    SelectSet(xw, event, params, num_params);\n    screen->eventMode = NORMAL;\n}\n\nvoid\nHandleSelectSet(Widget w,\n\t\tXEvent *event,\n\t\tString *params,\n\t\tCardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleSelectSet\", event, params, num_params);\n\tSelectSet(xw, event, params, *num_params);\n    }\n}\n\n/* ARGSUSED */\nstatic void\nSelectSet(XtermWidget xw,\n\t  XEvent *event GCC_UNUSED,\n\t  String *params,\n\t  Cardinal num_params)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE((\"SelectSet\\n\"));\n    /* Only do select stuff if non-null select */\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel))) {\n\tCardinal n;\n\tfor (n = 0; n < num_params; ++n) {\n\t    SaltTextAway(xw,\n\t\t\t TargetToSelection(screen, params[n]),\n\t\t\t &(screen->startSel), &(screen->endSel));\n\t}\n\t_OwnSelection(xw, params, num_params);\n    } else {\n\tScrnDisownSelection(xw);\n    }\n}\n\n#define Abs(x)\t\t((x) < 0 ? -(x) : (x))\n\n/* ARGSUSED */\nstatic void\ndo_start_extend(XtermWidget xw,\n\t\tXEvent *event,\t/* must be XButtonEvent* */\n\t\tString *params GCC_UNUSED,\n\t\tCardinal *num_params GCC_UNUSED,\n\t\tBool use_cursor_loc)\n{\n    TScreen *screen = TScreenOf(xw);\n    int coord;\n    CELL cell;\n\n    if (SendMousePosition(xw, event))\n\treturn;\n\n    screen->firstValidRow = 0;\n    screen->lastValidRow = screen->max_row;\n#if OPT_READLINE\n    if (OverrideEvent(event)\n\t|| event->xbutton.button != Button3\n\t|| !(SCREEN_FLAG(screen, dclick3_deletes)))\n#endif\n\tscreen->selectUnit = EvalSelectUnit(xw,\n\t\t\t\t\t    event->xbutton.time,\n\t\t\t\t\t    screen->selectUnit,\n\t\t\t\t\t    event->xbutton.button);\n    screen->replyToEmacs = False;\n\n#if OPT_READLINE\n    CheckSecondPress3(xw, screen, event);\n#endif\n\n    if (screen->numberOfClicks == 1\n\t|| (SCREEN_FLAG(screen, dclick3_deletes)\n\t    && !OverrideEvent(event))) {\n\t/* Save existing selection so we can reestablish it if the guy\n\t   extends past the other end of the selection */\n\tscreen->saveStartR = screen->startExt = screen->startRaw;\n\tscreen->saveEndR = screen->endExt = screen->endRaw;\n    } else {\n\t/* He just needed the selection mode changed, use old values. */\n\tscreen->startExt = screen->startRaw = screen->saveStartR;\n\tscreen->endExt = screen->endRaw = screen->saveEndR;\n    }\n    if (use_cursor_loc) {\n\tcell = screen->cursorp;\n    } else {\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n    }\n    coord = Coordinate(screen, &cell);\n\n    if (Abs(coord - Coordinate(screen, &(screen->startSel)))\n\t< Abs(coord - Coordinate(screen, &(screen->endSel)))\n\t|| coord < Coordinate(screen, &(screen->startSel))) {\n\t/* point is close to left side of selection */\n\tscreen->eventMode = LEFTEXTENSION;\n\tscreen->startExt = cell;\n    } else {\n\t/* point is close to left side of selection */\n\tscreen->eventMode = RIGHTEXTENSION;\n\tscreen->endExt = cell;\n    }\n    ComputeSelect(xw, &(screen->startExt), &(screen->endExt), True, True);\n\n#if OPT_READLINE\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel)))\n\tExtendingSelection = 1;\n#endif\n}\n\nstatic void\nExtendExtend(XtermWidget xw, const CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n    int coord = Coordinate(screen, cell);\n\n    TRACE((\"ExtendExtend row=%d, col=%d\\n\", cell->row, cell->col));\n    if (screen->eventMode == LEFTEXTENSION\n\t&& ((coord + (screen->selectUnit != Select_CHAR))\n\t    > Coordinate(screen, &(screen->endSel)))) {\n\t/* Whoops, he's changed his mind.  Do RIGHTEXTENSION */\n\tscreen->eventMode = RIGHTEXTENSION;\n\tscreen->startExt = screen->saveStartR;\n    } else if (screen->eventMode == RIGHTEXTENSION\n\t       && coord < Coordinate(screen, &(screen->startSel))) {\n\t/* Whoops, he's changed his mind.  Do LEFTEXTENSION */\n\tscreen->eventMode = LEFTEXTENSION;\n\tscreen->endExt = screen->saveEndR;\n    }\n    if (screen->eventMode == LEFTEXTENSION) {\n\tscreen->startExt = *cell;\n    } else {\n\tscreen->endExt = *cell;\n    }\n    ComputeSelect(xw, &(screen->startExt), &(screen->endExt), False, True);\n\n#if OPT_READLINE\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel)))\n\tExtendingSelection = 1;\n#endif\n}\n\nvoid\nHandleStartExtend(Widget w,\n\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t  String *params,\t/* unused */\n\t\t  Cardinal *num_params)\t\t/* unused */\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleStartExtend\", event, params, num_params);\n\tdo_start_extend(xw, event, params, num_params, False);\n    }\n}\n\nvoid\nHandleKeyboardStartExtend(Widget w,\n\t\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t\t  String *params,\t/* unused */\n\t\t\t  Cardinal *num_params)\t\t/* unused */\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleKeyboardStartExtend\", event, params, num_params);\n\tdo_start_extend(xw, event, params, num_params, True);\n    }\n}\n\nvoid\nScrollSelection(TScreen *screen, int amount, Bool always)\n{\n    int minrow = INX2ROW(screen, -screen->savedlines);\n    int maxrow = INX2ROW(screen, screen->max_row);\n    int maxcol = screen->max_col;\n\n#define scroll_update_one(cell) \\\n\t(cell)->row += amount; \\\n\tif ((cell)->row < minrow) { \\\n\t    (cell)->row = minrow; \\\n\t    (cell)->col = 0; \\\n\t} \\\n\tif ((cell)->row > maxrow) { \\\n\t    (cell)->row = maxrow; \\\n\t    (cell)->col = maxcol; \\\n\t}\n\n    scroll_update_one(&(screen->startRaw));\n    scroll_update_one(&(screen->endRaw));\n    scroll_update_one(&(screen->startSel));\n    scroll_update_one(&(screen->endSel));\n\n    scroll_update_one(&(screen->rawPos));\n\n    /*\n     * If we are told to scroll the selection but it lies outside the scrolling\n     * margins, then that could cause the selection to move (bad).  It is not\n     * simple to fix, because this function is called both for the scrollbar\n     * actions as well as application scrolling.  The 'always' flag is set in\n     * the former case.  The rest of the logic handles the latter.\n     */\n    if (ScrnHaveSelection(screen)) {\n\tint adjust;\n\n\tadjust = ROW2INX(screen, screen->startH.row);\n\tif (always\n\t    || !ScrnHaveRowMargins(screen)\n\t    || ScrnIsRowInMargins(screen, adjust)) {\n\t    scroll_update_one(&screen->startH);\n\t}\n\tadjust = ROW2INX(screen, screen->endH.row);\n\tif (always\n\t    || !ScrnHaveRowMargins(screen)\n\t    || ScrnIsRowInMargins(screen, adjust)) {\n\t    scroll_update_one(&screen->endH);\n\t}\n    }\n\n    screen->startHCoord = Coordinate(screen, &screen->startH);\n    screen->endHCoord = Coordinate(screen, &screen->endH);\n}\n\n/*ARGSUSED*/\nvoid\nResizeSelection(TScreen *screen, int rows, int cols)\n{\n    rows--;\t\t\t/* decr to get 0-max */\n    cols--;\n\n    if (screen->startRaw.row > rows)\n\tscreen->startRaw.row = rows;\n    if (screen->startSel.row > rows)\n\tscreen->startSel.row = rows;\n    if (screen->endRaw.row > rows)\n\tscreen->endRaw.row = rows;\n    if (screen->endSel.row > rows)\n\tscreen->endSel.row = rows;\n    if (screen->rawPos.row > rows)\n\tscreen->rawPos.row = rows;\n\n    if (screen->startRaw.col > cols)\n\tscreen->startRaw.col = cols;\n    if (screen->startSel.col > cols)\n\tscreen->startSel.col = cols;\n    if (screen->endRaw.col > cols)\n\tscreen->endRaw.col = cols;\n    if (screen->endSel.col > cols)\n\tscreen->endSel.col = cols;\n    if (screen->rawPos.col > cols)\n\tscreen->rawPos.col = cols;\n}\n\n#if OPT_WIDE_CHARS\n#define isWideCell(row, col) isWideFrg((int)XTERM_CELL(row, col))\n#endif\n\nstatic void\nPointToCELL(TScreen *screen,\n\t    int y,\n\t    int x,\n\t    CELL *cell)\n/* Convert pixel coordinates to character coordinates.\n   Rows are clipped between firstValidRow and lastValidRow.\n   Columns are clipped between to be 0 or greater, but are not clipped to some\n       maximum value. */\n{\n    cell->row = (y - screen->border) / FontHeight(screen);\n    if (cell->row < screen->firstValidRow)\n\tcell->row = screen->firstValidRow;\n    else if (cell->row > screen->lastValidRow)\n\tcell->row = screen->lastValidRow;\n    cell->col = (x - OriginX(screen)) / FontWidth(screen);\n    if (cell->col < 0)\n\tcell->col = 0;\n    else if (cell->col > MaxCols(screen)) {\n\tcell->col = MaxCols(screen);\n    }\n#if OPT_WIDE_CHARS\n    /*\n     * If we got a click on the right half of a doublewidth character,\n     * pretend it happened on the left half.\n     */\n    if (cell->col > 0\n\t&& isWideCell(cell->row, cell->col - 1)\n\t&& (XTERM_CELL(cell->row, cell->col) == HIDDEN_CHAR)) {\n\tcell->col -= 1;\n    }\n#endif\n}\n\n/*\n * Find the last column at which text was drawn on the given row.\n */\nstatic int\nLastTextCol(TScreen *screen, CLineData *ld, int row)\n{\n    int i = -1;\n\n    if (ld != 0) {\n\tif (okScrnRow(screen, row)) {\n\t    const IAttr *ch;\n\t    for (i = screen->max_col,\n\t\t ch = ld->attribs + i;\n\t\t i >= 0 && !(*ch & CHARDRAWN);\n\t\t ch--, i--) {\n\t\t;\n\t    }\n#if OPT_DEC_CHRSET\n\t    if (CSET_DOUBLE(GetLineDblCS(ld))) {\n\t\ti *= 2;\n\t    }\n#endif\n\t}\n    }\n    return (i);\n}\n\n#if !OPT_WIDE_CHARS\n/*\n** double click table for cut and paste in 8 bits\n**\n** This table is divided in four parts :\n**\n**\t- control characters\t[0,0x1f] U [0x80,0x9f]\n**\t- separators\t\t[0x20,0x3f] U [0xa0,0xb9]\n**\t- binding characters\t[0x40,0x7f] U [0xc0,0xff]\n**\t- exceptions\n*/\n/* *INDENT-OFF* */\nstatic int charClass[256] =\n{\n/* NUL  SOH  STX  ETX  EOT  ENQ  ACK  BEL */\n    32,  1,    1,   1,   1,   1,   1,   1,\n/*  BS   HT   NL   VT   FF   CR   SO   SI */\n     1,  32,   1,   1,   1,   1,   1,   1,\n/* DLE  DC1  DC2  DC3  DC4  NAK  SYN  ETB */\n     1,   1,   1,   1,   1,   1,   1,   1,\n/* CAN   EM  SUB  ESC   FS   GS   RS   US */\n     1,   1,   1,   1,   1,   1,   1,   1,\n/*  SP    !    \"    #    $    %    &    ' */\n    32,  33,  34,  35,  36,  37,  38,  39,\n/*   (    )    *    +    ,    -    .    / */\n    40,  41,  42,  43,  44,  45,  46,  47,\n/*   0    1    2    3    4    5    6    7 */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   8    9    :    ;    <    =    >    ? */\n    48,  48,  58,  59,  60,  61,  62,  63,\n/*   @    A    B    C    D    E    F    G */\n    64,  48,  48,  48,  48,  48,  48,  48,\n/*   H    I    J    K    L    M    N    O */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   P    Q    R    S    T    U    V    W */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   X    Y    Z    [    \\    ]    ^    _ */\n    48,  48,  48,  91,  92,  93,  94,  48,\n/*   `    a    b    c    d    e    f    g */\n    96,  48,  48,  48,  48,  48,  48,  48,\n/*   h    i    j    k    l    m    n    o */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   p    q    r    s    t    u    v    w */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   x    y    z    {    |    }    ~  DEL */\n    48,  48,  48, 123, 124, 125, 126,   1,\n/* x80  x81  x82  x83  IND  NEL  SSA  ESA */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/* HTS  HTJ  VTS  PLD  PLU   RI  SS2  SS3 */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/* DCS  PU1  PU2  STS  CCH   MW  SPA  EPA */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/* x98  x99  x9A  CSI   ST  OSC   PM  APC */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/*   -    i   c/    L   ox   Y-    |   So */\n    160, 161, 162, 163, 164, 165, 166, 167,\n/*  ..   c0   ip   <<    _        R0    - */\n    168, 169, 170, 171, 172, 173, 174, 175,\n/*   o   +-    2    3    '    u   q|    . */\n    176, 177, 178, 179, 180, 181, 182, 183,\n/*   ,    1    2   >>  1/4  1/2  3/4    ? */\n    184, 185, 186, 187, 188, 189, 190, 191,\n/*  A`   A'   A^   A~   A:   Ao   AE   C, */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  E`   E'   E^   E:   I`   I'   I^   I: */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  D-   N~   O`   O'   O^   O~   O:    X */\n     48,  48,  48,  48,  48,  48,  48, 215,\n/*  O/   U`   U'   U^   U:   Y'    P    B */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  a`   a'   a^   a~   a:   ao   ae   c, */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  e`   e'   e^   e:    i`  i'   i^   i: */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*   d   n~   o`   o'   o^   o~   o:   -: */\n     48,  48,  48,  48,  48,  48,  48, 247,\n/*  o/   u`   u'   u^   u:   y'    P   y: */\n     48,  48,  48,  48,  48,  48,  48,  48};\n/* *INDENT-ON* */\n\nint\nSetCharacterClassRange(int low,\t/* in range of [0..255] */\n\t\t       int high,\n\t\t       int value)\t/* arbitrary */\n{\n\n    if (low < 0 || high > 255 || high < low)\n\treturn (-1);\n\n    for (; low <= high; low++)\n\tcharClass[low] = value;\n\n    return (0);\n}\n#endif\n\nstatic int\nclass_of(LineData *ld, CELL *cell)\n{\n    CELL temp = *cell;\n    int result = 0;\n\n#if OPT_DEC_CHRSET\n    if (CSET_DOUBLE(GetLineDblCS(ld))) {\n\ttemp.col /= 2;\n    }\n#endif\n    if (temp.col < (int) ld->lineSize)\n\tresult = CharacterClass((int) (ld->charData[temp.col]));\n    return result;\n}\n\n#if OPT_WIDE_CHARS\n#define CClassSelects(name, cclass) \\\n\t (CClassOf(name) == cclass \\\n\t || XTERM_CELL(screen->name.row, screen->name.col) == HIDDEN_CHAR)\n#else\n#define CClassSelects(name, cclass) \\\n\t (class_of(ld.name, &((screen->name))) == cclass)\n#endif\n\n#define CClassOf(name) class_of(ld.name, &((screen->name)))\n\n#if OPT_REPORT_CCLASS\nstatic int\nshow_cclass_range(int lo, int hi)\n{\n    int cclass = CharacterClass(lo);\n    int ident = (cclass == lo);\n    int more = 0;\n    if (ident) {\n\tint ch;\n\tfor (ch = lo + 1; ch <= hi; ch++) {\n\t    if (CharacterClass(ch) != ch) {\n\t\tident = 0;\n\t\tbreak;\n\t    }\n\t}\n\tif (ident && (hi < 255)) {\n\t    ch = hi + 1;\n\t    if (CharacterClass(ch) == ch) {\n\t\tif (ch >= 255 || CharacterClass(ch + 1) != ch) {\n\t\t    more = 1;\n\t\t}\n\t    }\n\t}\n    }\n    if (!more) {\n\tif (lo == hi) {\n\t    printf(\"\\t%d\", lo);\n\t} else {\n\t    printf(\"\\t%d-%d\", lo, hi);\n\t}\n\tif (!ident)\n\t    printf(\":%d\", cclass);\n\tif (hi < 255)\n\t    printf(\", \\\\\");\n\tprintf(\"\\n\");\n    }\n    return !more;\n}\n\nvoid\nreport_char_class(XtermWidget xw)\n{\n    /* simple table, to match documentation */\n    static const char charnames[] =\n    \"NUL\\0\" \"SOH\\0\" \"STX\\0\" \"ETX\\0\" \"EOT\\0\" \"ENQ\\0\" \"ACK\\0\" \"BEL\\0\"\n    \" BS\\0\" \" HT\\0\" \" NL\\0\" \" VT\\0\" \" NP\\0\" \" CR\\0\" \" SO\\0\" \" SI\\0\"\n    \"DLE\\0\" \"DC1\\0\" \"DC2\\0\" \"DC3\\0\" \"DC4\\0\" \"NAK\\0\" \"SYN\\0\" \"ETB\\0\"\n    \"CAN\\0\" \" EM\\0\" \"SUB\\0\" \"ESC\\0\" \" FS\\0\" \" GS\\0\" \" RS\\0\" \" US\\0\"\n    \" SP\\0\" \"  !\\0\" \"  \\\"\\0\" \"  #\\0\" \"  $\\0\" \"  %\\0\" \"  &\\0\" \"  '\\0\"\n    \"  (\\0\" \"  )\\0\" \"  *\\0\" \"  +\\0\" \"  ,\\0\" \"  -\\0\" \"  .\\0\" \"  /\\0\"\n    \"  0\\0\" \"  1\\0\" \"  2\\0\" \"  3\\0\" \"  4\\0\" \"  5\\0\" \"  6\\0\" \"  7\\0\"\n    \"  8\\0\" \"  9\\0\" \"  :\\0\" \"  ;\\0\" \"  <\\0\" \"  =\\0\" \"  >\\0\" \"  ?\\0\"\n    \"  @\\0\" \"  A\\0\" \"  B\\0\" \"  C\\0\" \"  D\\0\" \"  E\\0\" \"  F\\0\" \"  G\\0\"\n    \"  H\\0\" \"  I\\0\" \"  J\\0\" \"  K\\0\" \"  L\\0\" \"  M\\0\" \"  N\\0\" \"  O\\0\"\n    \"  P\\0\" \"  Q\\0\" \"  R\\0\" \"  S\\0\" \"  T\\0\" \"  U\\0\" \"  V\\0\" \"  W\\0\"\n    \"  X\\0\" \"  Y\\0\" \"  Z\\0\" \"  [\\0\" \"  \\\\\\0\" \"  ]\\0\" \"  ^\\0\" \"  _\\0\"\n    \"  `\\0\" \"  a\\0\" \"  b\\0\" \"  c\\0\" \"  d\\0\" \"  e\\0\" \"  f\\0\" \"  g\\0\"\n    \"  h\\0\" \"  i\\0\" \"  j\\0\" \"  k\\0\" \"  l\\0\" \"  m\\0\" \"  n\\0\" \"  o\\0\"\n    \"  p\\0\" \"  q\\0\" \"  r\\0\" \"  s\\0\" \"  t\\0\" \"  u\\0\" \"  v\\0\" \"  w\\0\"\n    \"  x\\0\" \"  y\\0\" \"  z\\0\" \"  {\\0\" \"  |\\0\" \"  }\\0\" \"  ~\\0\" \"DEL\\0\"\n    \"x80\\0\" \"x81\\0\" \"x82\\0\" \"x83\\0\" \"IND\\0\" \"NEL\\0\" \"SSA\\0\" \"ESA\\0\"\n    \"HTS\\0\" \"HTJ\\0\" \"VTS\\0\" \"PLD\\0\" \"PLU\\0\" \" RI\\0\" \"SS2\\0\" \"SS3\\0\"\n    \"DCS\\0\" \"PU1\\0\" \"PU2\\0\" \"STS\\0\" \"CCH\\0\" \" MW\\0\" \"SPA\\0\" \"EPA\\0\"\n    \"x98\\0\" \"x99\\0\" \"x9A\\0\" \"CSI\\0\" \" ST\\0\" \"OSC\\0\" \" PM\\0\" \"APC\\0\"\n    \"  -\\0\" \"  i\\0\" \" c/\\0\" \"  L\\0\" \" ox\\0\" \" Y-\\0\" \"  |\\0\" \" So\\0\"\n    \" ..\\0\" \" c0\\0\" \" ip\\0\" \" <<\\0\" \"  _\\0\" \"   \\0\" \" R0\\0\" \"  -\\0\"\n    \"  o\\0\" \" +-\\0\" \"  2\\0\" \"  3\\0\" \"  '\\0\" \"  u\\0\" \" q|\\0\" \"  .\\0\"\n    \"  ,\\0\" \"  1\\0\" \"  2\\0\" \" >>\\0\" \"1/4\\0\" \"1/2\\0\" \"3/4\\0\" \"  ?\\0\"\n    \" A`\\0\" \" A'\\0\" \" A^\\0\" \" A~\\0\" \" A:\\0\" \" Ao\\0\" \" AE\\0\" \" C,\\0\"\n    \" E`\\0\" \" E'\\0\" \" E^\\0\" \" E:\\0\" \" I`\\0\" \" I'\\0\" \" I^\\0\" \" I:\\0\"\n    \" D-\\0\" \" N~\\0\" \" O`\\0\" \" O'\\0\" \" O^\\0\" \" O~\\0\" \" O:\\0\" \"  X\\0\"\n    \" O/\\0\" \" U`\\0\" \" U'\\0\" \" U^\\0\" \" U:\\0\" \" Y'\\0\" \"  P\\0\" \"  B\\0\"\n    \" a`\\0\" \" a'\\0\" \" a^\\0\" \" a~\\0\" \" a:\\0\" \" ao\\0\" \" ae\\0\" \" c,\\0\"\n    \" e`\\0\" \" e'\\0\" \" e^\\0\" \" e:\\0\" \" i`\\0\" \" i'\\0\" \" i^\\0\" \" i:\\0\"\n    \"  d\\0\" \" n~\\0\" \" o`\\0\" \" o'\\0\" \" o^\\0\" \" o~\\0\" \" o:\\0\" \" -:\\0\"\n    \" o/\\0\" \" u`\\0\" \" u'\\0\" \" u^\\0\" \" u:\\0\" \" y'\\0\" \"  P\\0\" \" y:\\0\";\n    int ch, dh;\n    int class_p;\n\n    (void) xw;\n\n    printf(\"static int charClass[256] = {\\n\");\n    for (ch = 0; ch < 256; ++ch) {\n\tconst char *s = charnames + (ch * 4);\n\tif ((ch & 7) == 0)\n\t    printf(\"/*\");\n\tprintf(\" %s \", s);\n\tif (((ch + 1) & 7) == 0) {\n\t    printf(\"*/\\n  \");\n\t    for (dh = ch - 7; dh <= ch; ++dh) {\n\t\tprintf(\" %3d%s\", CharacterClass(dh), dh == 255 ? \"};\" : \",\");\n\t    }\n\t    printf(\"\\n\");\n\t}\n    }\n\n    /* print the table as if it were the charClass resource */\n    printf(\"\\n\");\n    printf(\"The table is equivalent to this \\\"charClass\\\" resource:\\n\");\n    class_p = CharacterClass(dh = 0);\n    for (ch = 0; ch < 256; ++ch) {\n\tint class_c = CharacterClass(ch);\n\tif (class_c != class_p) {\n\t    if (show_cclass_range(dh, ch - 1)) {\n\t\tdh = ch;\n\t\tclass_p = class_c;\n\t    }\n\t}\n    }\n    if (dh < 255) {\n\tshow_cclass_range(dh, 255);\n    }\n\n    if_OPT_WIDE_CHARS(TScreenOf(xw), {\n\t/* if this is a wide-character configuration, print all intervals */\n\treport_wide_char_class();\n    });\n}\n#endif\n\n/*\n * If the given column is past the end of text on the given row, bump to the\n * beginning of the next line.\n */\nstatic Boolean\nokPosition(TScreen *screen,\n\t   LineData **ld,\n\t   CELL *cell)\n{\n    Boolean result = True;\n\n    if (cell->row > screen->max_row) {\n\tresult = False;\n\tTRACE((\"okPosition cell row %d > screen max %d\\n\", cell->row, screen->max_row));\n    } else if (cell->col > (LastTextCol(screen, *ld, cell->row) + 1)) {\n\tTRACE((\"okPosition cell col %d > screen max %d\\n\", cell->col,\n\t       (LastTextCol(screen, *ld, cell->row) + 1)));\n\tif (cell->row < screen->max_row) {\n\t    TRACE((\"okPosition cell row %d < screen max %d\\n\", cell->row, screen->max_row));\n\t    cell->col = 0;\n\t    *ld = GET_LINEDATA(screen, ++cell->row);\n\t    result = False;\n\t}\n    }\n    return result;\n}\n\nstatic void\ntrimLastLine(TScreen *screen,\n\t     LineData **ld,\n\t     CELL *last)\n{\n    if (screen->cutNewline && last->row < screen->max_row) {\n\tlast->col = 0;\n\t*ld = GET_LINEDATA(screen, ++last->row);\n    } else {\n\tlast->col = LastTextCol(screen, *ld, last->row) + 1;\n    }\n}\n\n#if OPT_SELECT_REGEX\n/*\n * Returns the first row of a wrapped line.\n */\nstatic int\nfirstRowOfLine(TScreen *screen, int row, Bool visible)\n{\n    LineData *ld = 0;\n    int limit = visible ? 0 : -screen->savedlines;\n\n    while (row > limit &&\n\t   (ld = GET_LINEDATA(screen, row - 1)) != 0 &&\n\t   LineTstWrapped(ld)) {\n\t--row;\n    }\n    return row;\n}\n\n/*\n * Returns the last row of a wrapped line.\n */\nstatic int\nlastRowOfLine(TScreen *screen, int row)\n{\n    LineData *ld;\n\n    while (row < screen->max_row &&\n\t   (ld = GET_LINEDATA(screen, row)) != 0 &&\n\t   LineTstWrapped(ld)) {\n\t++row;\n    }\n    return row;\n}\n\n/*\n * Returns the number of cells on the range of rows.\n */\nstatic unsigned\nlengthOfLines(TScreen *screen, int firstRow, int lastRow)\n{\n    unsigned length = 0;\n    int n;\n\n    for (n = firstRow; n <= lastRow; ++n) {\n\tLineData *ld = GET_LINEDATA(screen, n);\n\tint value = LastTextCol(screen, ld, n);\n\tif (value >= 0)\n\t    length += (unsigned) (value + 1);\n    }\n    return length;\n}\n\n/*\n * Make a copy of the wrapped-line which corresponds to the given row as a\n * string of bytes.  Construct an index for the columns from the beginning of\n * the line.\n */\nstatic char *\nmake_indexed_text(TScreen *screen, int row, unsigned length, int *indexed)\n{\n    Char *result = 0;\n    size_t need = (length + 1);\n\n    /*\n     * Get a quick upper bound to the number of bytes needed, if the whole\n     * string were UTF-8.\n     */\n    if_OPT_WIDE_CHARS(screen, {\n\tneed *= ((screen->lineExtra + 1) * 6);\n    });\n\n    if ((result = TypeCallocN(Char, need + 1)) != 0) {\n\tLineData *ld = GET_LINEDATA(screen, row);\n\tunsigned used = 0;\n\tChar *last = result;\n\n\tdo {\n\t    int col = 0;\n\t    int limit = LastTextCol(screen, ld, row);\n\n\t    while (col <= limit) {\n\t\tChar *next = last;\n\t\tunsigned data = ld->charData[col];\n\n\t\tassert(col < (int) ld->lineSize);\n\t\t/* some internal points may not be drawn */\n\t\tif (data == 0)\n\t\t    data = ' ';\n\n\t\tif_WIDE_OR_NARROW(screen, {\n\t\t    next = convertToUTF8(last, data);\n\t\t}\n\t\t, {\n\t\t    *next++ = CharOf(data);\n\t\t});\n\n\t\tif_OPT_WIDE_CHARS(screen, {\n\t\t    size_t off;\n\t\t    for_each_combData(off, ld) {\n\t\t\tdata = ld->combData[off][col];\n\t\t\tif (data == 0)\n\t\t\t    break;\n\t\t\tnext = convertToUTF8(next, data);\n\t\t    }\n\t\t});\n\n\t\tindexed[used] = (int) (last - result);\n\t\t*next = 0;\n\t\t/* TRACE((\"index[%d.%d] %d:%s\\n\", row, used, indexed[used], last)); */\n\t\tlast = next;\n\t\t++used;\n\t\t++col;\n\t\tindexed[used] = (int) (next - result);\n\t    }\n\t} while (used < length &&\n\t\t LineTstWrapped(ld) &&\n\t\t (ld = GET_LINEDATA(screen, ++row)) != 0 &&\n\t\t row < screen->max_row);\n    }\n    /* TRACE((\"result:%s\\n\", result)); */\n    return (char *) result;\n}\n\n/*\n * Find the column given an offset into the character string by using the\n * index constructed in make_indexed_text().\n */\nstatic int\nindexToCol(int *indexed, int len, int off)\n{\n    int col = 0;\n    while (indexed[col] < len) {\n\tif (indexed[col] >= off)\n\t    break;\n\t++col;\n    }\n    return col;\n}\n\n/*\n * Given a row number, and a column offset from that (which may be wrapped),\n * set the cell to the actual row/column values.\n */\nstatic void\ncolumnToCell(TScreen *screen, int row, int col, CELL *cell)\n{\n    while (row < screen->max_row) {\n\tCLineData *ld = GET_LINEDATA(screen, row);\n\tint last = LastTextCol(screen, ld, row);\n\n\t/* TRACE((\"last(%d) = %d, have %d\\n\", row, last, col)); */\n\tif (col <= last) {\n\t    break;\n\t}\n\t/*\n\t * Stop if the current row does not wrap (does not continue the current\n\t * line).\n\t */\n\tif (!LineTstWrapped(ld)) {\n\t    col = last + 1;\n\t    break;\n\t}\n\tcol -= (last + 1);\n\t++row;\n    }\n    if (col < 0)\n\tcol = 0;\n    cell->row = row;\n    cell->col = col;\n}\n\n/*\n * Given a cell, find the corresponding column offset.\n */\nstatic int\ncellToColumn(TScreen *screen, CELL *cell)\n{\n    CLineData *ld = 0;\n    int col = cell->col;\n    int row = firstRowOfLine(screen, cell->row, False);\n    while (row < cell->row) {\n\tld = GET_LINEDATA(screen, row);\n\tcol += LastTextCol(screen, ld, row++);\n    }\n#if OPT_DEC_CHRSET\n    if (ld == 0)\n\tld = GET_LINEDATA(screen, row);\n    if (CSET_DOUBLE(GetLineDblCS(ld)))\n\tcol /= 2;\n#endif\n    return col;\n}\n\nstatic void\ndo_select_regex(TScreen *screen, CELL *startc, CELL *endc)\n{\n    LineData *ld = GET_LINEDATA(screen, startc->row);\n    int inx = ((screen->numberOfClicks - 1) % screen->maxClicks);\n    char *expr = screen->selectExpr[inx];\n    regex_t preg;\n    regmatch_t match;\n\n    TRACE((\"Select_REGEX[%d]:%s\\n\", inx, NonNull(expr)));\n    if (okPosition(screen, &ld, startc) && expr != 0) {\n\tif (regcomp(&preg, expr, REG_EXTENDED) == 0) {\n\t    int firstRow = firstRowOfLine(screen, startc->row, True);\n\t    int lastRow = lastRowOfLine(screen, firstRow);\n\t    unsigned size = lengthOfLines(screen, firstRow, lastRow);\n\t    int actual = cellToColumn(screen, startc);\n\t    int *indexed;\n\n\t    TRACE((\"regcomp ok rows %d..%d bytes %d\\n\",\n\t\t   firstRow, lastRow, size));\n\n\t    if ((indexed = TypeCallocN(int, size + 1)) != 0) {\n\t\tchar *search;\n\t\tif ((search = make_indexed_text(screen,\n\t\t\t\t\t\tfirstRow,\n\t\t\t\t\t\tsize,\n\t\t\t\t\t\tindexed)) != 0) {\n\t\t    int len = (int) strlen(search);\n\t\t    int col;\n\t\t    int best_col = -1;\n\t\t    int best_len = -1;\n\n\t\t    startc->row = 0;\n\t\t    startc->col = 0;\n\t\t    endc->row = 0;\n\t\t    endc->col = 0;\n\n\t\t    for (col = 0; indexed[col] < len; ++col) {\n\t\t\tif (regexec(&preg,\n\t\t\t\t    search + indexed[col],\n\t\t\t\t    (size_t) 1, &match, 0) == 0) {\n\t\t\t    int start_inx = (int) (match.rm_so + indexed[col]);\n\t\t\t    int finis_inx = (int) (match.rm_eo + indexed[col]);\n\t\t\t    int start_col = indexToCol(indexed, len, start_inx);\n\t\t\t    int finis_col = indexToCol(indexed, len, finis_inx);\n\n\t\t\t    if (start_col <= actual &&\n\t\t\t\tactual <= finis_col) {\n\t\t\t\tint test = finis_col - start_col;\n\t\t\t\tif (best_len < test) {\n\t\t\t\t    best_len = test;\n\t\t\t\t    best_col = start_col;\n\t\t\t\t    TRACE((\"match column %d len %d\\n\",\n\t\t\t\t\t   best_col,\n\t\t\t\t\t   best_len));\n\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t    if (best_col >= 0) {\n\t\t\tint best_nxt = best_col + best_len;\n\t\t\tcolumnToCell(screen, firstRow, best_col, startc);\n\t\t\tcolumnToCell(screen, firstRow, best_nxt, endc);\n\t\t\tTRACE((\"search::%s\\n\", search));\n\t\t\tTRACE((\"indexed:%d..%d -> %d..%d\\n\",\n\t\t\t       best_col, best_nxt,\n\t\t\t       indexed[best_col],\n\t\t\t       indexed[best_nxt]));\n\t\t\tTRACE((\"matched:%d:%s\\n\",\n\t\t\t       indexed[best_nxt] + 1 -\n\t\t\t       indexed[best_col],\n\t\t\t       visibleChars((Char *) (search + indexed[best_col]),\n\t\t\t\t\t    (unsigned) (indexed[best_nxt] +\n\t\t\t\t\t\t\t1 -\n\t\t\t\t\t\t\tindexed[best_col]))));\n\t\t    }\n\t\t    free(search);\n\t\t}\n\t\tfree(indexed);\n#if OPT_DEC_CHRSET\n\t\tif ((ld = GET_LINEDATA(screen, startc->row)) != 0) {\n\t\t    if (CSET_DOUBLE(GetLineDblCS(ld)))\n\t\t\tstartc->col *= 2;\n\t\t}\n\t\tif ((ld = GET_LINEDATA(screen, endc->row)) != 0) {\n\t\t    if (CSET_DOUBLE(GetLineDblCS(ld)))\n\t\t\tendc->col *= 2;\n\t\t}\n#endif\n\t    }\n\t    regfree(&preg);\n\t}\n    }\n}\n#endif /* OPT_SELECT_REGEX */\n\n#define InitRow(name) \\\n\tld.name = GET_LINEDATA(screen, screen->name.row)\n\n#define NextRow(name) \\\n\tld.name = GET_LINEDATA(screen, ++screen->name.row)\n\n#define PrevRow(name) \\\n\tld.name = GET_LINEDATA(screen, --screen->name.row)\n\n#define MoreRows(name) \\\n\t(screen->name.row < screen->max_row)\n\n#define isPrevWrapped(name) \\\n\t(screen->name.row > 0 \\\n\t   && (ltmp = GET_LINEDATA(screen, screen->name.row - 1)) != 0 \\\n\t   && LineTstWrapped(ltmp))\n\n/*\n * sets startSel endSel\n * ensuring that they have legal values\n */\nstatic void\nComputeSelect(XtermWidget xw,\n\t      CELL *startc,\n\t      CELL *endc,\n\t      Bool extend,\n\t      Bool normal)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    int cclass;\n    CELL first = *startc;\n    CELL last = *endc;\n    Boolean ignored = False;\n\n    struct {\n\tLineData *startSel;\n\tLineData *endSel;\n    } ld;\n    LineData *ltmp;\n\n    TRACE((\"ComputeSelect(startRow=%d, startCol=%d, endRow=%d, endCol=%d, %sextend)\\n\",\n\t   first.row, first.col,\n\t   last.row, last.col,\n\t   extend ? \"\" : \"no\"));\n\n#if OPT_WIDE_CHARS\n    if (first.col > 1\n\t&& isWideCell(first.row, first.col - 1)\n\t&& XTERM_CELL(first.row, first.col - 0) == HIDDEN_CHAR) {\n\tTRACE((\"Adjusting start. Changing downwards from %i.\\n\", first.col));\n\tfirst.col -= 1;\n\tif (last.col == (first.col + 1))\n\t    last.col--;\n    }\n\n    if (last.col > 1\n\t&& isWideCell(last.row, last.col - 1)\n\t&& XTERM_CELL(last.row, last.col) == HIDDEN_CHAR) {\n\tlast.col += 1;\n    }\n#endif\n\n    if (Coordinate(screen, &first) <= Coordinate(screen, &last)) {\n\tscreen->startSel = screen->startRaw = first;\n\tscreen->endSel = screen->endRaw = last;\n    } else {\t\t\t/* Swap them */\n\tscreen->startSel = screen->startRaw = last;\n\tscreen->endSel = screen->endRaw = first;\n    }\n\n    InitRow(startSel);\n    InitRow(endSel);\n\n    switch (screen->selectUnit) {\n    case Select_CHAR:\n\t(void) okPosition(screen, &(ld.startSel), &(screen->startSel));\n\t(void) okPosition(screen, &(ld.endSel), &(screen->endSel));\n\tbreak;\n\n    case Select_WORD:\n\tTRACE((\"Select_WORD\\n\"));\n\tif (okPosition(screen, &(ld.startSel), &(screen->startSel))) {\n\t    CELL mark;\n\t    cclass = CClassOf(startSel);\n\t    TRACE((\"...starting with class %d\\n\", cclass));\n\t    do {\n\t\tmark = screen->startSel;\n\t\t--screen->startSel.col;\n\t\tif (screen->startSel.col < 0\n\t\t    && isPrevWrapped(startSel)) {\n\t\t    PrevRow(startSel);\n\t\t    screen->startSel.col = LastTextCol(screen, ld.startSel, screen->startSel.row);\n\t\t}\n\t    } while (screen->startSel.col >= 0\n\t\t     && CClassSelects(startSel, cclass));\n\t    if (normal)\n\t\t++screen->startSel.col;\n\t    else\n\t\tscreen->startSel = mark;\n\t}\n#if OPT_WIDE_CHARS\n#define SkipHiddenCell(mark) \\\n\tif (mark.col && XTERM_CELL(mark.row, mark.col) == HIDDEN_CHAR) \\\n\t    mark.col++\n#else\n#define SkipHiddenCell(mark)\t/* nothing */\n#endif\n\tSkipHiddenCell(screen->startSel);\n\n\tif (!normal) {\n\t    screen->endSel = screen->startSel;\n\t    ld.endSel = ld.startSel;\n\t}\n\n\tif (okPosition(screen, &(ld.endSel), &(screen->endSel))) {\n\t    int length = LastTextCol(screen, ld.endSel, screen->endSel.row);\n\t    cclass = CClassOf(endSel);\n\t    TRACE((\"...ending with class %d\\n\", cclass));\n\t    do {\n\t\t++screen->endSel.col;\n\t\tif (screen->endSel.col > length\n\t\t    && LineTstWrapped(ld.endSel)) {\n\t\t    if (!MoreRows(endSel))\n\t\t\tbreak;\n\t\t    screen->endSel.col = 0;\n\t\t    NextRow(endSel);\n\t\t    length = LastTextCol(screen, ld.endSel, screen->endSel.row);\n\t\t}\n\t    } while (screen->endSel.col <= length\n\t\t     && CClassSelects(endSel, cclass));\n\t    if (normal\n\t\t&& screen->endSel.col > length + 1\n\t\t&& MoreRows(endSel)) {\n\t\tscreen->endSel.col = 0;\n\t\tNextRow(endSel);\n\t    }\n\t}\n\tSkipHiddenCell(screen->endSel);\n\n\tscreen->saveStartW = screen->startSel;\n\tbreak;\n\n    case Select_LINE:\n\tTRACE((\"Select_LINE\\n\"));\n\twhile (LineTstWrapped(ld.endSel)\n\t       && MoreRows(endSel)) {\n\t    NextRow(endSel);\n\t}\n\tif (screen->cutToBeginningOfLine\n\t    || screen->startSel.row < screen->saveStartW.row) {\n\t    screen->startSel.col = 0;\n\t    while (isPrevWrapped(startSel)) {\n\t\tPrevRow(startSel);\n\t    }\n\t} else if (!extend) {\n\t    if ((first.row < screen->saveStartW.row)\n\t\t|| (isSameRow(&first, &(screen->saveStartW))\n\t\t    && first.col < screen->saveStartW.col)) {\n\t\tscreen->startSel.col = 0;\n\t\twhile (isPrevWrapped(startSel)) {\n\t\t    PrevRow(startSel);\n\t\t}\n\t    } else {\n\t\tscreen->startSel = screen->saveStartW;\n\t    }\n\t}\n\ttrimLastLine(screen, &(ld.endSel), &(screen->endSel));\n\tbreak;\n\n    case Select_GROUP:\t\t/* paragraph */\n\tTRACE((\"Select_GROUP\\n\"));\n\tif (okPosition(screen, &(ld.startSel), &(screen->startSel))) {\n\t    /* scan backward for beginning of group */\n\t    while (screen->startSel.row > 0 &&\n\t\t   (LastTextCol(screen, ld.startSel, screen->startSel.row -\n\t\t\t\t1) > 0 ||\n\t\t    isPrevWrapped(startSel))) {\n\t\tPrevRow(startSel);\n\t    }\n\t    screen->startSel.col = 0;\n\t    /* scan forward for end of group */\n\t    while (MoreRows(endSel) &&\n\t\t   (LastTextCol(screen, ld.endSel, screen->endSel.row + 1) >\n\t\t    0 ||\n\t\t    LineTstWrapped(ld.endSel))) {\n\t\tNextRow(endSel);\n\t    }\n\t    trimLastLine(screen, &(ld.endSel), &(screen->endSel));\n\t}\n\tbreak;\n\n    case Select_PAGE:\t\t/* everything one can see */\n\tTRACE((\"Select_PAGE\\n\"));\n\tscreen->startSel.row = 0;\n\tscreen->startSel.col = 0;\n\tscreen->endSel.row = MaxRows(screen);\n\tscreen->endSel.col = 0;\n\tbreak;\n\n    case Select_ALL:\t\t/* counts scrollback if in normal screen */\n\tTRACE((\"Select_ALL\\n\"));\n\tscreen->startSel.row = -screen->savedlines;\n\tscreen->startSel.col = 0;\n\tscreen->endSel.row = MaxRows(screen);\n\tscreen->endSel.col = 0;\n\tbreak;\n\n#if OPT_SELECT_REGEX\n    case Select_REGEX:\n\tdo_select_regex(screen, &(screen->startSel), &(screen->endSel));\n\tbreak;\n#endif\n\n    case NSELECTUNITS:\t\t/* always ignore */\n\tignored = True;\n\tbreak;\n    }\n\n    if (!ignored) {\n\t/* check boundaries */\n\tScrollSelection(screen, 0, False);\n\tTrackText(xw, &(screen->startSel), &(screen->endSel));\n    }\n\n    return;\n}\n\n/* Guaranteed (first.row, first.col) <= (last.row, last.col) */\nstatic void\nTrackText(XtermWidget xw,\n\t  const CELL *firstp,\n\t  const CELL *lastp)\n{\n    TScreen *screen = TScreenOf(xw);\n    int from, to;\n    CELL old_start, old_end;\n    CELL first = *firstp;\n    CELL last = *lastp;\n\n    TRACE((\"TrackText(first=%d,%d, last=%d,%d)\\n\",\n\t   first.row, first.col, last.row, last.col));\n\n    old_start = screen->startH;\n    old_end = screen->endH;\n    TRACE((\"...previous(first=%d,%d, last=%d,%d)\\n\",\n\t   old_start.row, old_start.col,\n\t   old_end.row, old_end.col));\n    if (isSameCELL(&first, &old_start) &&\n\tisSameCELL(&last, &old_end)) {\n\treturn;\n    }\n\n    screen->startH = first;\n    screen->endH = last;\n    from = Coordinate(screen, &screen->startH);\n    to = Coordinate(screen, &screen->endH);\n    if (to <= screen->startHCoord || from > screen->endHCoord) {\n\t/* No overlap whatsoever between old and new hilite */\n\tReHiliteText(xw, &old_start, &old_end);\n\tReHiliteText(xw, &first, &last);\n    } else {\n\tif (from < screen->startHCoord) {\n\t    /* Extend left end */\n\t    ReHiliteText(xw, &first, &old_start);\n\t} else if (from > screen->startHCoord) {\n\t    /* Shorten left end */\n\t    ReHiliteText(xw, &old_start, &first);\n\t}\n\tif (to > screen->endHCoord) {\n\t    /* Extend right end */\n\t    ReHiliteText(xw, &old_end, &last);\n\t} else if (to < screen->endHCoord) {\n\t    /* Shorten right end */\n\t    ReHiliteText(xw, &last, &old_end);\n\t}\n    }\n    screen->startHCoord = from;\n    screen->endHCoord = to;\n}\n\nstatic void\nUnHiliteText(XtermWidget xw)\n{\n    TrackText(xw, &zeroCELL, &zeroCELL);\n}\n\n/* Guaranteed that (first->row, first->col) <= (last->row, last->col) */\nstatic void\nReHiliteText(XtermWidget xw,\n\t     CELL *firstp,\n\t     CELL *lastp)\n{\n    TScreen *screen = TScreenOf(xw);\n    CELL first = *firstp;\n    CELL last = *lastp;\n\n    TRACE((\"ReHiliteText from %d.%d to %d.%d\\n\",\n\t   first.row, first.col, last.row, last.col));\n\n    if (first.row < 0)\n\tfirst.row = first.col = 0;\n    else if (first.row > screen->max_row)\n\treturn;\t\t\t/* nothing to do, since last.row >= first.row */\n\n    if (last.row < 0)\n\treturn;\t\t\t/* nothing to do, since first.row <= last.row */\n    else if (last.row > screen->max_row) {\n\tlast.row = screen->max_row;\n\tlast.col = MaxCols(screen);\n    }\n    if (isSameCELL(&first, &last))\n\treturn;\n\n    if (!isSameRow(&first, &last)) {\t/* do multiple rows */\n\tint i;\n\tif ((i = screen->max_col - first.col + 1) > 0) {\t/* first row */\n\t    ScrnRefresh(xw, first.row, first.col, 1, i, True);\n\t}\n\tif ((i = last.row - first.row - 1) > 0) {\t/* middle rows */\n\t    ScrnRefresh(xw, first.row + 1, 0, i, MaxCols(screen), True);\n\t}\n\tif (last.col > 0 && last.row <= screen->max_row) {\t/* last row */\n\t    ScrnRefresh(xw, last.row, 0, 1, last.col, True);\n\t}\n    } else {\t\t\t/* do single row */\n\tScrnRefresh(xw, first.row, first.col, 1, last.col - first.col, True);\n    }\n}\n\n/*\n * Guaranteed that (cellc->row, cellc->col) <= (cell->row, cell->col),\n * and that both points are valid\n * (may have cell->row = screen->max_row+1, cell->col = 0).\n */\nstatic void\nSaltTextAway(XtermWidget xw,\n\t     int which,\n\t     CELL *cellc,\n\t     CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n    SelectedCells *scp;\n    int i;\n    int eol;\n    int need = 0;\n    Char *line;\n    Char *lp;\n    CELL first = *cellc;\n    CELL last = *cell;\n\n    if (which < 0 || which >= MAX_SELECTIONS) {\n\tTRACE((\"SaltTextAway - which selection?\\n\"));\n\treturn;\n    }\n    scp = &(screen->selected_cells[which]);\n\n    TRACE((\"SaltTextAway which=%d, first=%d,%d, last=%d,%d\\n\",\n\t   which, first.row, first.col, last.row, last.col));\n\n    if (isSameRow(&first, &last) && first.col > last.col) {\n\tint tmp;\n\tEXCHANGE(first.col, last.col, tmp);\n    }\n\n    --last.col;\n    /* first we need to know how long the string is before we can save it */\n\n    if (isSameRow(&last, &first)) {\n\tneed = Length(screen, first.row, first.col, last.col);\n    } else {\t\t\t/* two cases, cut is on same line, cut spans multiple lines */\n\tneed += Length(screen, first.row, first.col, screen->max_col) + 1;\n\tfor (i = first.row + 1; i < last.row; i++)\n\t    need += Length(screen, i, 0, screen->max_col) + 1;\n\tif (last.col >= 0)\n\t    need += Length(screen, last.row, 0, last.col);\n    }\n\n    /* UTF-8 may require more space */\n    if_OPT_WIDE_CHARS(screen, {\n\tneed *= 4;\n    });\n\n    /* now get some memory to save it in */\n    if (need < 0)\n\treturn;\n\n    if (scp->data_limit <= (unsigned) need) {\n\tif ((line = (Char *) malloc((size_t) need + 1)) == 0)\n\t    SysError(ERROR_BMALLOC2);\n\tfree(scp->data_buffer);\n\tscp->data_buffer = line;\n\tscp->data_limit = (size_t) (need + 1);\n    } else {\n\tline = scp->data_buffer;\n    }\n\n    if (line == 0)\n\treturn;\n\n    line[need] = '\\0';\t\t/* make sure it is null terminated */\n    lp = line;\t\t\t/* lp points to where to save the text */\n    if (isSameRow(&last, &first)) {\n\tlp = SaveText(screen, last.row, first.col, last.col, lp, &eol);\n    } else {\n\tlp = SaveText(screen, first.row, first.col, screen->max_col, lp, &eol);\n\tif (eol)\n\t    *lp++ = '\\n';\t/* put in newline at end of line */\n\tfor (i = first.row + 1; i < last.row; i++) {\n\t    lp = SaveText(screen, i, 0, screen->max_col, lp, &eol);\n\t    if (eol)\n\t\t*lp++ = '\\n';\n\t}\n\tif (last.col >= 0)\n\t    lp = SaveText(screen, last.row, 0, last.col, lp, &eol);\n    }\n    *lp = '\\0';\t\t\t/* make sure we have end marked */\n\n    TRACE((\"Salted TEXT:%u:%s\\n\", (unsigned) (lp - line),\n\t   visibleChars(line, (unsigned) (lp - line))));\n\n    scp->data_length = (size_t) (lp - line);\n}\n\n#if OPT_PASTE64\nvoid\nClearSelectionBuffer(TScreen *screen, String selection)\n{\n    int which = TargetToSelection(screen, selection);\n    SelectedCells *scp = &(screen->selected_cells[okSelectionCode(which)]);\n    FreeAndNull(scp->data_buffer);\n    scp->data_limit = 0;\n    scp->data_length = 0;\n    screen->base64_count = 0;\n}\n\nstatic void\nAppendStrToSelectionBuffer(SelectedCells * scp, Char *text, size_t len)\n{\n    if (len != 0) {\n\tsize_t j = (scp->data_length + len);\n\tsize_t k = j + (j >> 2) + 80;\n\tif (j + 1 >= scp->data_limit) {\n\t    Char *line;\n\t    if (!scp->data_length) {\n\t\tline = (Char *) malloc(k);\n\t    } else {\n\t\tline = (Char *) realloc(scp->data_buffer, k);\n\t    }\n\t    if (line == 0)\n\t\tSysError(ERROR_BMALLOC2);\n\t    scp->data_buffer = line;\n\t    scp->data_limit = k;\n\t}\n\tif (scp->data_buffer != 0) {\n\t    memcpy(scp->data_buffer + scp->data_length, text, len);\n\t    scp->data_length += len;\n\t    scp->data_buffer[scp->data_length] = 0;\n\t}\n    }\n}\n\nvoid\nAppendToSelectionBuffer(TScreen *screen, unsigned c, String selection)\n{\n    int which = TargetToSelection(screen, selection);\n    SelectedCells *scp = &(screen->selected_cells[okSelectionCode(which)]);\n    unsigned six;\n    Char ch;\n\n    /* Decode base64 character */\n    if (c >= 'A' && c <= 'Z')\n\tsix = c - 'A';\n    else if (c >= 'a' && c <= 'z')\n\tsix = c - 'a' + 26;\n    else if (c >= '0' && c <= '9')\n\tsix = c - '0' + 52;\n    else if (c == '+')\n\tsix = 62;\n    else if (c == '/')\n\tsix = 63;\n    else\n\treturn;\n\n    /* Accumulate bytes */\n    switch (screen->base64_count) {\n    case 0:\n\tscreen->base64_accu = six;\n\tscreen->base64_count = 6;\n\tbreak;\n\n    case 2:\n\tch = CharOf((screen->base64_accu << 6) + six);\n\tscreen->base64_count = 0;\n\tAppendStrToSelectionBuffer(scp, &ch, (size_t) 1);\n\tbreak;\n\n    case 4:\n\tch = CharOf((screen->base64_accu << 4) + (six >> 2));\n\tscreen->base64_accu = (six & 0x3);\n\tscreen->base64_count = 2;\n\tAppendStrToSelectionBuffer(scp, &ch, (size_t) 1);\n\tbreak;\n\n    case 6:\n\tch = CharOf((screen->base64_accu << 2) + (six >> 4));\n\tscreen->base64_accu = (six & 0xF);\n\tscreen->base64_count = 4;\n\tAppendStrToSelectionBuffer(scp, &ch, (size_t) 1);\n\tbreak;\n    }\n}\n\nvoid\nCompleteSelection(XtermWidget xw, String *args, Cardinal len)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    screen->base64_count = 0;\n    screen->base64_accu = 0;\n    _OwnSelection(xw, args, len);\n}\n#endif /* OPT_PASTE64 */\n\nstatic Bool\n_ConvertSelectionHelper(Widget w,\n\t\t\tSelectedCells * scp,\n\t\t\tAtom *type,\n\t\t\tXtPointer *value,\n\t\t\tunsigned long *length,\n\t\t\tint *format,\n\t\t\tint (*conversion_function) (Display *,\n\t\t\t\t\t\t    char **, int,\n\t\t\t\t\t\t    XICCEncodingStyle,\n\t\t\t\t\t\t    XTextProperty *),\n\t\t\tXICCEncodingStyle conversion_style)\n{\n    *value = 0;\n    *length = 0;\n    *type = 0;\n    *format = 0;\n\n    if (getXtermWidget(w) != 0) {\n\tDisplay *dpy = XtDisplay(w);\n\tXTextProperty textprop;\n\tint out_n = 0;\n\tchar *result = 0;\n\tchar *the_data = (char *) scp->data_buffer;\n\tchar *the_next;\n\tunsigned long remaining = scp->data_length;\n\n\tTRACE((\"converting %ld:'%s'\\n\",\n\t       (long) scp->data_length,\n\t       visibleChars(scp->data_buffer, (unsigned) scp->data_length)));\n\t/*\n\t * For most selections, we can convert in one pass.  It is possible\n\t * that some applications contain embedded nulls, e.g., using xterm's\n\t * paste64 feature.  For those cases, we will build up the result in\n\t * parts.\n\t */\n\tif (memchr(the_data, 0, scp->data_length) != 0) {\n\t    TRACE((\"selection contains embedded nulls\\n\"));\n\t    result = calloc(scp->data_length + 1, sizeof(char));\n\t}\n\n      next_try:\n\tmemset(&textprop, 0, sizeof(textprop));\n\tif (conversion_function(dpy, &the_data, 1,\n\t\t\t\tconversion_style,\n\t\t\t\t&textprop) >= Success) {\n\t    if ((result != 0)\n\t\t&& (textprop.value != 0)\n\t\t&& (textprop.format == 8)) {\n\t\tchar *text_values = (char *) textprop.value;\n\t\tunsigned long in_n;\n\n\t\tif (out_n == 0) {\n\t\t    *value = result;\n\t\t    *type = textprop.encoding;\n\t\t    *format = textprop.format;\n\t\t}\n\t\tfor (in_n = 0; in_n < textprop.nitems; ++in_n) {\n\t\t    result[out_n++] = text_values[in_n];\n\t\t}\n\t\t*length += textprop.nitems;\n\t\tif ((the_next = memchr(the_data, 0, remaining)) != 0) {\n\t\t    unsigned long this_was = (unsigned long) (the_next - the_data);\n\t\t    this_was++;\n\t\t    the_data += this_was;\n\t\t    remaining -= this_was;\n\t\t    result[out_n++] = 0;\n\t\t    *length += 1;\n\t\t    if (remaining)\n\t\t\tgoto next_try;\n\t\t}\n\t\treturn True;\n\t    } else {\n\t\tfree(result);\n\t\t*value = (XtPointer) textprop.value;\n\t\t*length = textprop.nitems;\n\t\t*type = textprop.encoding;\n\t\t*format = textprop.format;\n\t\treturn True;\n\t    }\n\t}\n\tfree(result);\n    }\n    return False;\n}\n\nstatic Boolean\nSaveConvertedLength(XtPointer *target, unsigned long source)\n{\n    Boolean result = False;\n\n    *target = XtMalloc(4);\n    if (*target != 0) {\n\tresult = True;\n\tif (sizeof(unsigned long) == 4) {\n\t    *(unsigned long *) *target = source;\n\t} else if (sizeof(unsigned) == 4) {\n\t    *(unsigned *) *target = (unsigned) source;\n\t} else if (sizeof(unsigned short) == 4) {\n\t    *(unsigned short *) *target = (unsigned short) source;\n\t} else {\n\t    /* FIXME - does this depend on byte-order? */\n\t    unsigned long temp = source;\n\t    memcpy((char *) *target,\n\t\t   ((char *) &temp) + sizeof(temp) - 4,\n\t\t   (size_t) 4);\n\t}\n    }\n    return result;\n}\n\n#define keepClipboard(d,atom) ((screen->keepClipboard) && \\\n\t (atom == XA_CLIPBOARD(d)))\n\nstatic Boolean\nConvertSelection(Widget w,\n\t\t Atom *selection,\n\t\t Atom *target,\n\t\t Atom *type,\n\t\t XtPointer *value,\n\t\t unsigned long *length,\n\t\t int *format)\n{\n    Display *dpy = XtDisplay(w);\n    TScreen *screen;\n    SelectedCells *scp;\n    Bool result = False;\n\n    Char *data;\n    unsigned long data_length;\n\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn False;\n\n    screen = TScreenOf(xw);\n\n    TRACE((\"ConvertSelection %s -> %s\\n\",\n\t   TraceAtomName(screen->display, *selection),\n\t   visibleSelectionTarget(dpy, *target)));\n\n    if (keepClipboard(dpy, *selection)) {\n\tTRACE((\"asked for clipboard\\n\"));\n\tscp = &(screen->clipboard_data);\n    } else {\n\tTRACE((\"asked for selection\\n\"));\n\tscp = &(screen->selected_cells[AtomToSelection(dpy, *selection)]);\n    }\n\n    data = scp->data_buffer;\n    data_length = scp->data_length;\n    if (data == NULL) {\n\tTRACE((\"...no selection-data\\n\"));\n\treturn False;\n    }\n\n    if (*target == XA_TARGETS(dpy)) {\n\tAtom *targetP;\n\tXPointer std_return = 0;\n\tunsigned long std_length;\n\n\tif (XmuConvertStandardSelection(w, screen->selection_time, selection,\n\t\t\t\t\ttarget, type, &std_return,\n\t\t\t\t\t&std_length, format)) {\n\t    Atom *my_targets = _SelectionTargets(w);\n\t    Atom *allocP;\n\t    Atom *std_targets;\n\n\t    TRACE((\"XmuConvertStandardSelection - success\\n\"));\n\t    std_targets = (Atom *) (void *) (std_return);\n\t    *length = std_length + 6;\n\n\t    targetP = TypeXtMallocN(Atom, *length);\n\t    allocP = targetP;\n\n\t    *value = (XtPointer) targetP;\n\n\t    if (my_targets != 0) {\n\t\twhile (*my_targets != None) {\n\t\t    *targetP++ = *my_targets++;\n\t\t}\n\t    }\n\t    *targetP++ = XA_LENGTH(dpy);\n\t    *targetP++ = XA_LIST_LENGTH(dpy);\n\n\t    *length = std_length + (unsigned long) (targetP - allocP);\n\n\t    memcpy(targetP, std_targets, sizeof(Atom) * std_length);\n\t    XtFree((char *) std_targets);\n\t    *type = XA_ATOM;\n\t    *format = 32;\n\t    result = True;\n\t} else {\n\t    TRACE((\"XmuConvertStandardSelection - failed\\n\"));\n\t}\n    }\n#if OPT_WIDE_CHARS\n    else if (screen->wide_chars && *target == XA_STRING) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XStringStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    } else if (screen->wide_chars && *target == XA_UTF8_STRING(dpy)) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XUTF8StringStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    } else if (screen->wide_chars && *target == XA_TEXT(dpy)) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XStdICCTextStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    } else if (screen->wide_chars && *target == XA_COMPOUND_TEXT(dpy)) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XCompoundTextStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    }\n#endif\n\n    else if (*target == XA_STRING) {\t/* not wide_chars */\n\t/* We can only reach this point if the selection requestor\n\t   requested STRING before any of TEXT, COMPOUND_TEXT or\n\t   UTF8_STRING.  We therefore assume that the requestor is not\n\t   properly internationalised, and dump raw eight-bit data\n\t   with no conversion into the selection.  Yes, this breaks\n\t   the ICCCM in non-Latin-1 locales. */\n\t*type = XA_STRING;\n\t*value = (XtPointer) data;\n\t*length = data_length;\n\t*format = 8;\n\tresult = True;\n\tTRACE((\"...raw 8-bit data:%d\\n\", result));\n    } else if (*target == XA_TEXT(dpy)) {\t/* not wide_chars */\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    XmbTextListToTextProperty,\n\t\t\t\t    XStdICCTextStyle);\n\tTRACE((\"...XmbTextListToTextProperty(StdICC):%d\\n\", result));\n    } else if (*target == XA_COMPOUND_TEXT(dpy)) {\t/* not wide_chars */\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    XmbTextListToTextProperty,\n\t\t\t\t    XCompoundTextStyle);\n\tTRACE((\"...XmbTextListToTextProperty(Compound):%d\\n\", result));\n    }\n#ifdef X_HAVE_UTF8_STRING\n    else if (*target == XA_UTF8_STRING(dpy)) {\t/* not wide_chars */\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    XmbTextListToTextProperty,\n\t\t\t\t    XUTF8StringStyle);\n\tTRACE((\"...XmbTextListToTextProperty(UTF8):%d\\n\", result));\n    }\n#endif\n    else if (*target == XA_LIST_LENGTH(dpy)) {\n\tresult = SaveConvertedLength(value, (unsigned long) 1);\n\t*type = XA_INTEGER;\n\t*length = 1;\n\t*format = 32;\n\tTRACE((\"...list of values:%d\\n\", result));\n    } else if (*target == XA_LENGTH(dpy)) {\n\t/* This value is wrong if we have UTF-8 text */\n\tresult = SaveConvertedLength(value, scp->data_length);\n\t*type = XA_INTEGER;\n\t*length = 1;\n\t*format = 32;\n\tTRACE((\"...list of values:%d\\n\", result));\n    } else if (XmuConvertStandardSelection(w,\n\t\t\t\t\t   screen->selection_time, selection,\n\t\t\t\t\t   target, type, (XPointer *) value,\n\t\t\t\t\t   length, format)) {\n\tresult = True;\n\tTRACE((\"...XmuConvertStandardSelection:%d\\n\", result));\n    }\n\n    /* else */\n    return (Boolean) result;\n}\n\nstatic void\nLoseSelection(Widget w, Atom *selection)\n{\n    TScreen *screen;\n    Atom *atomP;\n    Cardinal i;\n\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn;\n\n    screen = TScreenOf(xw);\n    TRACE((\"LoseSelection %s\\n\", TraceAtomName(screen->display, *selection)));\n\n    for (i = 0, atomP = screen->selection_atoms;\n\t i < screen->selection_count; i++, atomP++) {\n\tif (*selection == *atomP)\n\t    *atomP = (Atom) 0;\n\tif (CutBuffer(*atomP) >= 0) {\n\t    *atomP = (Atom) 0;\n\t}\n    }\n\n    for (i = screen->selection_count; i; i--) {\n\tif (screen->selection_atoms[i - 1] != 0)\n\t    break;\n    }\n    screen->selection_count = i;\n\n    for (i = 0, atomP = screen->selection_atoms;\n\t i < screen->selection_count; i++, atomP++) {\n\tif (*atomP == (Atom) 0) {\n\t    *atomP = screen->selection_atoms[--screen->selection_count];\n\t}\n    }\n\n    if (screen->selection_count == 0)\n\tUnHiliteText(xw);\n}\n\n/* ARGSUSED */\nstatic void\nSelectionDone(Widget w GCC_UNUSED,\n\t      Atom *selection GCC_UNUSED,\n\t      Atom *target GCC_UNUSED)\n{\n    /* empty proc so Intrinsics know we want to keep storage */\n    TRACE((\"SelectionDone\\n\"));\n}\n\nstatic void\n_OwnSelection(XtermWidget xw,\n\t      String *selections,\n\t      Cardinal count)\n{\n    TScreen *screen = TScreenOf(xw);\n    Display *dpy = screen->display;\n    Atom *atoms = screen->selection_atoms;\n    Cardinal i;\n    Bool have_selection = False;\n    SelectedCells *scp;\n\n    if (count == 0)\n\treturn;\n\n    TRACE((\"_OwnSelection count %d\\n\", count));\n    selections = MapSelections(xw, selections, count);\n\n    if (count > screen->sel_atoms_size) {\n\tXtFree((char *) atoms);\n\tatoms = TypeXtMallocN(Atom, count);\n\tscreen->selection_atoms = atoms;\n\tscreen->sel_atoms_size = count;\n    }\n    XmuInternStrings(dpy, selections, count, atoms);\n    for (i = 0; i < count; i++) {\n\tint cutbuffer = CutBuffer(atoms[i]);\n\tif (cutbuffer >= 0) {\n\t    unsigned long limit =\n\t    (unsigned long) (4 * XMaxRequestSize(dpy) - 32);\n\t    scp = &(screen->selected_cells[CutBufferToCode(cutbuffer)]);\n\t    if (scp->data_length > limit) {\n\t\tTRACE((\"selection too big (%lu bytes), not storing in CUT_BUFFER%d\\n\",\n\t\t       scp->data_length, cutbuffer));\n\t\txtermWarning(\"selection too big (%lu bytes), not storing in CUT_BUFFER%d\\n\",\n\t\t\t     (unsigned long) scp->data_length, cutbuffer);\n\t    } else {\n\t\t/* This used to just use the UTF-8 data, which was totally\n\t\t * broken as not even the corresponding paste code in xterm\n\t\t * understood this!  So now it converts to Latin1 first.\n\t\t *   Robert Brady, 2000-09-05\n\t\t */\n\t\tunsigned long length = scp->data_length;\n\t\tChar *data = scp->data_buffer;\n\t\tif_OPT_WIDE_CHARS((screen), {\n\t\t    data = UTF8toLatin1(screen, data, length, &length);\n\t\t});\n\t\tTRACE((\"XStoreBuffer(%d)\\n\", cutbuffer));\n\t\tXStoreBuffer(dpy,\n\t\t\t     (char *) data,\n\t\t\t     (int) length,\n\t\t\t     cutbuffer);\n\t    }\n\t} else {\n\t    int which = AtomToSelection(dpy, atoms[i]);\n\t    if (keepClipboard(dpy, atoms[i])) {\n\t\tChar *buf;\n\t\tSelectedCells *tcp = &(screen->clipboard_data);\n\t\tTRACE((\"saving selection to clipboard buffer\\n\"));\n\t\tscp = &(screen->selected_cells[CLIPBOARD_CODE]);\n\t\tif ((buf = (Char *) malloc((size_t) scp->data_length)) == 0)\n\t\t    SysError(ERROR_BMALLOC2);\n\n\t\tfree(tcp->data_buffer);\n\t\tmemcpy(buf, scp->data_buffer, scp->data_length);\n\t\ttcp->data_buffer = buf;\n\t\ttcp->data_limit = scp->data_length;\n\t\ttcp->data_length = scp->data_length;\n\t    }\n\t    scp = &(screen->selected_cells[which]);\n\t    if (scp->data_length == 0) {\n\t\tTRACE((\"XtDisownSelection(%s, @%ld)\\n\",\n\t\t       TraceAtomName(screen->display, atoms[i]),\n\t\t       (long) screen->selection_time));\n\t\tXtDisownSelection((Widget) xw,\n\t\t\t\t  atoms[i],\n\t\t\t\t  screen->selection_time);\n\t    } else if (!screen->replyToEmacs && atoms[i] != 0) {\n\t\tTRACE((\"XtOwnSelection(%s, @%ld)\\n\",\n\t\t       TraceAtomName(screen->display, atoms[i]),\n\t\t       (long) screen->selection_time));\n\t\thave_selection |=\n\t\t    XtOwnSelection((Widget) xw, atoms[i],\n\t\t\t\t   screen->selection_time,\n\t\t\t\t   ConvertSelection,\n\t\t\t\t   LoseSelection,\n\t\t\t\t   SelectionDone);\n\t    }\n\t}\n\tTRACE((\"... _OwnSelection used length %ld value %s\\n\",\n\t       scp->data_length,\n\t       visibleChars(scp->data_buffer,\n\t\t\t    (unsigned) scp->data_length)));\n    }\n    if (!screen->replyToEmacs)\n\tscreen->selection_count = count;\n    if (!have_selection)\n\tUnHiliteText(xw);\n}\n\nstatic void\nResetSelectionState(TScreen *screen)\n{\n    screen->selection_count = 0;\n    screen->startH = zeroCELL;\n    screen->endH = zeroCELL;\n}\n\nvoid\nDisownSelection(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    Atom *atoms = screen->selection_atoms;\n    Cardinal count = screen->selection_count;\n    Cardinal i;\n\n    TRACE((\"DisownSelection count %d, start %d.%d, end %d.%d\\n\",\n\t   count,\n\t   screen->startH.row,\n\t   screen->startH.col,\n\t   screen->endH.row,\n\t   screen->endH.col));\n\n    for (i = 0; i < count; i++) {\n\tint cutbuffer = CutBuffer(atoms[i]);\n\tif (cutbuffer < 0) {\n\t    XtDisownSelection((Widget) xw, atoms[i],\n\t\t\t      screen->selection_time);\n\t}\n    }\n    /*\n     * If none of the callbacks via XtDisownSelection() reset highlighting\n     * do it now.\n     */\n    if (ScrnHaveSelection(screen)) {\n\t/* save data which will be reset */\n\tCELL first = screen->startH;\n\tCELL last = screen->endH;\n\n\tResetSelectionState(screen);\n\tReHiliteText(xw, &first, &last);\n    } else {\n\tResetSelectionState(screen);\n    }\n}\n\nvoid\nUnhiliteSelection(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    if (ScrnHaveSelection(screen)) {\n\tCELL first = screen->startH;\n\tCELL last = screen->endH;\n\n\tscreen->startH = zeroCELL;\n\tscreen->endH = zeroCELL;\n\tReHiliteText(xw, &first, &last);\n    }\n}\n\n/* returns number of chars in line from scol to ecol out */\n/* ARGSUSED */\nstatic int\nLength(TScreen *screen,\n       int row,\n       int scol,\n       int ecol)\n{\n    CLineData *ld = GET_LINEDATA(screen, row);\n    const int lastcol = LastTextCol(screen, ld, row);\n\n    if (ecol > lastcol)\n\tecol = lastcol;\n    return (ecol - scol + 1);\n}\n\n/* copies text into line, preallocated */\nstatic Char *\nSaveText(TScreen *screen,\n\t int row,\n\t int scol,\n\t int ecol,\n\t Char *lp,\t\t/* pointer to where to put the text */\n\t int *eol)\n{\n    LineData *ld;\n    int i = 0;\n    Char *result = lp;\n#if OPT_WIDE_CHARS\n    unsigned previous = 0;\n#endif\n\n    ld = GET_LINEDATA(screen, row);\n    i = Length(screen, row, scol, ecol);\n    ecol = scol + i;\n#if OPT_DEC_CHRSET\n    if (CSET_DOUBLE(GetLineDblCS(ld))) {\n\tscol = (scol + 0) / 2;\n\tecol = (ecol + 1) / 2;\n    }\n#endif\n    *eol = !LineTstWrapped(ld);\n    for (i = scol; i < ecol; i++) {\n\tunsigned c;\n\tassert(i < (int) ld->lineSize);\n\tc = E2A(ld->charData[i]);\n#if OPT_WIDE_CHARS\n\t/* We want to strip out every occurrence of HIDDEN_CHAR AFTER a\n\t * wide character.\n\t */\n\tif (c == HIDDEN_CHAR) {\n\t    if (isWide((int) previous)) {\n\t\tprevious = c;\n\t\t/* Combining characters attached to double-width characters\n\t\t   are in memory attached to the HIDDEN_CHAR */\n\t\tif_OPT_WIDE_CHARS(screen, {\n\t\t    if ((screen->utf8_nrc_mode | screen->utf8_mode) != uFalse) {\n\t\t\tsize_t off;\n\t\t\tfor_each_combData(off, ld) {\n\t\t\t    unsigned ch = ld->combData[off][i];\n\t\t\t    if (ch == 0)\n\t\t\t\tbreak;\n\t\t\t    lp = convertToUTF8(lp, ch);\n\t\t\t}\n\t\t    }\n\t\t});\n\t\tcontinue;\n\t    } else {\n\t\tc = ' ';\t/* should not happen, but just in case... */\n\t    }\n\t}\n\tprevious = c;\n\tif ((screen->utf8_nrc_mode | screen->utf8_mode) != uFalse) {\n\t    lp = convertToUTF8(lp, (c != 0) ? c : ' ');\n\t    if_OPT_WIDE_CHARS(screen, {\n\t\tsize_t off;\n\t\tfor_each_combData(off, ld) {\n\t\t    unsigned ch = ld->combData[off][i];\n\t\t    if (ch == 0)\n\t\t\tbreak;\n\t\t    lp = convertToUTF8(lp, ch);\n\t\t}\n\t    });\n\t} else\n#endif\n\t{\n\t    if (c == 0) {\n\t\tc = E2A(' ');\n\t    } else if (c < E2A(' ')) {\n\t\tc = DECtoASCII(c);\n\t    } else if (c == 0x7f) {\n\t\tc = 0x5f;\n\t    }\n\t    *lp++ = CharOf(A2E(c));\n\t}\n\tif (c != E2A(' '))\n\t    result = lp;\n    }\n\n    /*\n     * If requested, trim trailing blanks from selected lines.  Do not do this\n     * if the line is wrapped.\n     */\n    if (!*eol || !screen->trim_selection)\n\tresult = lp;\n\n    return (result);\n}\n\n/*\n * This adds together the bits:\n *   shift key   -> 1\n *   meta key    -> 2\n *   control key -> 4\n */\nstatic unsigned\nKeyState(XtermWidget xw, unsigned x)\n{\n    return ((((x) & (ShiftMask | ControlMask)))\n\t    + (((x) & MetaMask(xw)) ? 2 : 0));\n}\n\n/* 32 + following 8-bit word:\n\n   1:0  Button no: 0, 1, 2.  3=release.\n     2  shift\n     3  meta\n     4  ctrl\n     5  set for motion notify\n     6  set for wheel (and button 6 and 7)\n     7  set for buttons 8 to 11\n*/\n\n/* Position: 32 - 255. */\nstatic int\nBtnCode(XtermWidget xw, XButtonEvent *event, int button)\n{\n    int result = (int) (32 + (KeyState(xw, event->state) << 2));\n\n    if (event->type == MotionNotify)\n\tresult += 32;\n\n    if (button < 0) {\n\tresult += 3;\n    } else {\n\tresult += button & 3;\n\tif (button & 4)\n\t    result += 64;\n\tif (button & 8)\n\t    result += 128;\n    }\n    TRACE((\"BtnCode button %d, %s state \" FMT_MODIFIER_NAMES \" ->%#x\\n\",\n\t   button,\n\t   visibleEventType(event->type),\n\t   ARG_MODIFIER_NAMES(event->state),\n\t   result));\n    return result;\n}\n\nstatic unsigned\nEmitButtonCode(XtermWidget xw,\n\t       Char *line,\n\t       unsigned count,\n\t       XButtonEvent *event,\n\t       int button)\n{\n    TScreen *screen = TScreenOf(xw);\n    int value;\n\n    if (okSendMousePos(xw) == X10_MOUSE) {\n\tvalue = CharOf(' ' + button);\n    } else {\n\tvalue = BtnCode(xw, event, button);\n    }\n\n    switch (screen->extend_coords) {\n    default:\n\tline[count++] = CharOf(value);\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tvalue -= 32;\t\t/* encoding starts at zero */\n\t/* FALLTHRU */\n    case SET_URXVT_EXT_MODE_MOUSE:\n\tcount += (unsigned) sprintf((char *) line + count, \"%d\", value);\n\tbreak;\n    case SET_EXT_MODE_MOUSE:\n\tif (value < 128) {\n\t    line[count++] = CharOf(value);\n\t} else {\n\t    line[count++] = CharOf(0xC0 + (value >> 6));\n\t    line[count++] = CharOf(0x80 + (value & 0x3F));\n\t}\n\tbreak;\n    }\n    return count;\n}\n\nstatic int\nFirstBitN(int bits)\n{\n    int result = -1;\n    if (bits > 0) {\n\tresult = 0;\n\twhile (!(bits & 1)) {\n\t    bits /= 2;\n\t    ++result;\n\t}\n    }\n    return result;\n}\n\n#define ButtonBit(button) ((button >= 0) ? (1 << (button)) : 0)\n\n#define EMIT_BUTTON(button) EmitButtonCode(xw, line, count, event, button)\n\nstatic void\nEditorButton(XtermWidget xw, XButtonEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    int pty = screen->respond;\n    int mouse_limit = MouseLimit(screen);\n    Char line[32];\n    Char final = 'M';\n    int row, col;\n    int button;\n    unsigned count = 0;\n    Boolean changed = True;\n\n    /* If button event, get button # adjusted for DEC compatibility */\n    button = (int) (event->button - 1);\n    if (button >= 3)\n\tbutton++;\n\n    /* Ignore buttons that cannot be encoded */\n    if (screen->send_mouse_pos == X10_MOUSE) {\n\tif (button > 3)\n\t    return;\n    } else if (screen->extend_coords == SET_SGR_EXT_MODE_MOUSE\n\t       || screen->extend_coords == SET_URXVT_EXT_MODE_MOUSE\n\t       || screen->extend_coords == SET_PIXEL_POSITION_MOUSE) {\n\tif (button > 15) {\n\t    return;\n\t}\n    } else {\n\tif (button > 11) {\n\t    return;\n\t}\n    }\n\n    if (screen->extend_coords == SET_PIXEL_POSITION_MOUSE) {\n\trow = event->y - OriginY(screen);\n\tcol = event->x - OriginX(screen);\n    } else {\n\t/* Compute character position of mouse pointer */\n\trow = (event->y - screen->border) / FontHeight(screen);\n\tcol = (event->x - OriginX(screen)) / FontWidth(screen);\n\n\t/* Limit to screen dimensions */\n\tif (row < 0)\n\t    row = 0;\n\telse if (row > screen->max_row)\n\t    row = screen->max_row;\n\n\tif (col < 0)\n\t    col = 0;\n\telse if (col > screen->max_col)\n\t    col = screen->max_col;\n\n\tif (mouse_limit > 0) {\n\t    /* Limit to representable mouse dimensions */\n\t    if (row > mouse_limit)\n\t\trow = mouse_limit;\n\t    if (col > mouse_limit)\n\t\tcol = mouse_limit;\n\t}\n    }\n\n    /* Build key sequence starting with \\E[M */\n    if (screen->control_eight_bits) {\n\tline[count++] = ANSI_CSI;\n    } else {\n\tline[count++] = ANSI_ESC;\n\tline[count++] = '[';\n    }\n    switch (screen->extend_coords) {\n    case 0:\n    case SET_EXT_MODE_MOUSE:\n#if OPT_SCO_FUNC_KEYS\n\tif (xw->keyboard.type == keyboardIsSCO) {\n\t    /*\n\t     * SCO function key F1 is \\E[M, which would conflict with xterm's\n\t     * normal kmous.\n\t     */\n\t    line[count++] = '>';\n\t}\n#endif\n\tline[count++] = final;\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tline[count++] = '<';\n\tbreak;\n    }\n\n    /* Add event code to key sequence */\n    if (okSendMousePos(xw) == X10_MOUSE) {\n\tcount = EMIT_BUTTON(button);\n    } else {\n\t/* Button-Motion events */\n\tswitch (event->type) {\n\tcase ButtonPress:\n\t    screen->mouse_button |= ButtonBit(button);\n\t    count = EMIT_BUTTON(button);\n\t    break;\n\tcase ButtonRelease:\n\t    /*\n\t     * The (vertical) wheel mouse interface generates release-events\n\t     * for buttons 4 and 5.\n\t     *\n\t     * The X10/X11 xterm protocol maps the release for buttons 1..3 to\n\t     * a -1, which will be later mapped into a \"0\" (some button was\n\t     * released),  At this point, buttons 1..3 are encoded 0..2 (the\n\t     * code 3 is unused).\n\t     *\n\t     * The SGR (extended) xterm mouse protocol keeps the button number\n\t     * and uses a \"m\" to indicate button release.\n\t     *\n\t     * The behavior for mice with more buttons is unclear, and may be\n\t     * revised -TD\n\t     */\n\t    screen->mouse_button &= ~ButtonBit(button);\n\t    if (button < 3 || button > 5) {\n\t\tswitch (screen->extend_coords) {\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    final = 'm';\n\t\t    break;\n\t\tdefault:\n\t\t    button = -1;\n\t\t    break;\n\t\t}\n\t    }\n\t    count = EMIT_BUTTON(button);\n\t    break;\n\tcase MotionNotify:\n\t    /* BTN_EVENT_MOUSE and ANY_EVENT_MOUSE modes send motion\n\t     * events only if character cell has changed.\n\t     */\n\t    if ((row == screen->mouse_row)\n\t\t&& (col == screen->mouse_col)) {\n\t\tchanged = False;\n\t    } else {\n\t\tcount = EMIT_BUTTON(FirstBitN(screen->mouse_button));\n\t    }\n\t    break;\n\tdefault:\n\t    changed = False;\n\t    break;\n\t}\n    }\n\n    if (changed) {\n\tscreen->mouse_row = row;\n\tscreen->mouse_col = col;\n\n\tTRACE((\"mouse at %d,%d button+mask = %#x\\n\", row, col, line[count - 1]));\n\n\t/* Add pointer position to key sequence */\n\tcount = EmitMousePositionSeparator(screen, line, count);\n\tcount = EmitMousePosition(screen, line, count, col);\n\tcount = EmitMousePositionSeparator(screen, line, count);\n\tcount = EmitMousePosition(screen, line, count, row);\n\n\tswitch (screen->extend_coords) {\n\tcase SET_SGR_EXT_MODE_MOUSE:\n\tcase SET_URXVT_EXT_MODE_MOUSE:\n\tcase SET_PIXEL_POSITION_MOUSE:\n\t    line[count++] = final;\n\t    break;\n\t}\n\n\t/* Transmit key sequence to process running under xterm */\n\tTRACE((\"EditorButton -> %s\\n\", visibleChars(line, count)));\n\tv_write(pty, line, count);\n    }\n    return;\n}\n\n/*\n * Check the current send_mouse_pos against allowed mouse-operations, returning\n * none if it is disallowed.\n */\nXtermMouseModes\nokSendMousePos(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    XtermMouseModes result = (XtermMouseModes) screen->send_mouse_pos;\n\n    switch ((int) result) {\n    case MOUSE_OFF:\n\tbreak;\n    case X10_MOUSE:\n\tif (!AllowMouseOps(xw, emX10))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case VT200_MOUSE:\n\tif (!AllowMouseOps(xw, emVT200Click))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case VT200_HIGHLIGHT_MOUSE:\n\tif (!AllowMouseOps(xw, emVT200Hilite))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case BTN_EVENT_MOUSE:\n\tif (!AllowMouseOps(xw, emAnyButton))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case ANY_EVENT_MOUSE:\n\tif (!AllowMouseOps(xw, emAnyEvent))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case DEC_LOCATOR:\n\tif (!AllowMouseOps(xw, emLocator))\n\t    result = MOUSE_OFF;\n\tbreak;\n    }\n    return result;\n}\n\n#if OPT_FOCUS_EVENT\n/*\n * Check the current send_focus_pos against allowed mouse-operations, returning\n * none if it is disallowed.\n */\nstatic int\nokSendFocusPos(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    int result = screen->send_focus_pos;\n\n    if (!AllowMouseOps(xw, emFocusEvent)) {\n\tresult = False;\n    }\n    return result;\n}\n\nvoid\nSendFocusButton(XtermWidget xw, XFocusChangeEvent *event)\n{\n    if (okSendFocusPos(xw)) {\n\tANSI reply;\n\n\tmemset(&reply, 0, sizeof(reply));\n\treply.a_type = ANSI_CSI;\n\n#if OPT_SCO_FUNC_KEYS\n\tif (xw->keyboard.type == keyboardIsSCO) {\n\t    reply.a_pintro = '>';\n\t}\n#endif\n\treply.a_final = CharOf((event->type == FocusIn) ? 'I' : 'O');\n\tunparseseq(xw, &reply);\n    }\n    return;\n}\n#endif /* OPT_FOCUS_EVENT */\n\n#if OPT_SELECTION_OPS\n/*\n * Get the event-time, needed to process selections.\n */\nstatic Time\ngetEventTime(XEvent *event)\n{\n    Time result;\n\n    if (IsBtnEvent(event)) {\n\tresult = ((XButtonEvent *) event)->time;\n    } else if (IsKeyEvent(event)) {\n\tresult = ((XKeyEvent *) event)->time;\n    } else {\n\tresult = 0;\n    }\n\n    return result;\n}\n\n/* obtain the selection string, passing the endpoints to caller's parameters */\nstatic void\ndoSelectionFormat(XtermWidget xw,\n\t\t  Widget w,\n\t\t  XEvent *event,\n\t\t  String *params,\n\t\t  Cardinal *num_params,\n\t\t  FormatSelect format_select)\n{\n    TScreen *screen = TScreenOf(xw);\n    InternalSelect *mydata = &(screen->internal_select);\n\n    memset(mydata, 0, sizeof(*mydata));\n    mydata->format = x_strdup(params[0]);\n    mydata->format_select = format_select;\n\n    screen->selectToBuffer = True;\n    beginInternalSelect(xw);\n\n    xtermGetSelection(w, getEventTime(event), params + 1, *num_params - 1, NULL);\n\n    if (screen->selectToBuffer)\n\tfinishInternalSelect(xw);\n}\n\n/* obtain data from the screen, passing the endpoints to caller's parameters */\nstatic char *\ngetDataFromScreen(XtermWidget xw, XEvent *event, String method, CELL *start, CELL *finish)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    CELL save_old_start = screen->startH;\n    CELL save_old_end = screen->endH;\n\n    CELL save_startSel = screen->startSel;\n    CELL save_startRaw = screen->startRaw;\n    CELL save_finishSel = screen->endSel;\n    CELL save_finishRaw = screen->endRaw;\n\n    int save_firstValidRow = screen->firstValidRow;\n    int save_lastValidRow = screen->lastValidRow;\n\n    const Cardinal noClick = 0;\n    int save_numberOfClicks = screen->numberOfClicks;\n\n    SelectUnit saveUnits = screen->selectUnit;\n    SelectUnit saveMap = screen->selectMap[noClick];\n#if OPT_SELECT_REGEX\n    char *saveExpr = screen->selectExpr[noClick];\n#endif\n    SelectedCells *scp = &(screen->selected_cells[PRIMARY_CODE]);\n    SelectedCells save_selection = *scp;\n\n    char *result = 0;\n\n    TRACE((\"getDataFromScreen %s\\n\", method));\n\n    memset(scp, 0, sizeof(*scp));\n\n    screen->numberOfClicks = 1;\n    lookupSelectUnit(xw, noClick, method);\n    screen->selectUnit = screen->selectMap[noClick];\n\n    memset(start, 0, sizeof(*start));\n    if (IsBtnEvent(event)) {\n\tXButtonEvent *btn_event = (XButtonEvent *) event;\n\tCELL cell;\n\tscreen->firstValidRow = 0;\n\tscreen->lastValidRow = screen->max_row;\n\tPointToCELL(screen, btn_event->y, btn_event->x, &cell);\n\tstart->row = cell.row;\n\tstart->col = cell.col;\n\tfinish->row = cell.row;\n\tfinish->col = screen->max_col;\n    } else {\n\tstart->row = screen->cur_row;\n\tstart->col = screen->cur_col;\n\tfinish->row = screen->cur_row;\n\tfinish->col = screen->max_col;\n    }\n\n    ComputeSelect(xw, start, finish, False, False);\n    SaltTextAway(xw,\n\t\t TargetToSelection(screen, PRIMARY_NAME),\n\t\t &(screen->startSel), &(screen->endSel));\n\n    if (scp->data_limit && scp->data_buffer) {\n\tTRACE((\"...getDataFromScreen selection-data %.*s\\n\",\n\t       (int) scp->data_limit,\n\t       scp->data_buffer));\n\tresult = malloc(scp->data_limit + 1);\n\tif (result) {\n\t    memcpy(result, scp->data_buffer, scp->data_limit);\n\t    result[scp->data_limit] = 0;\n\t}\n\tfree(scp->data_buffer);\n\tscp->data_limit = 0;\n    }\n\n    TRACE((\"...getDataFromScreen restoring previous selection\\n\"));\n\n    screen->startSel = save_startSel;\n    screen->startRaw = save_startRaw;\n    screen->endSel = save_finishSel;\n    screen->endRaw = save_finishRaw;\n\n    screen->firstValidRow = save_firstValidRow;\n    screen->lastValidRow = save_lastValidRow;\n\n    screen->numberOfClicks = save_numberOfClicks;\n    screen->selectUnit = saveUnits;\n    screen->selectMap[noClick] = saveMap;\n#if OPT_SELECT_REGEX\n    screen->selectExpr[noClick] = saveExpr;\n#endif\n\n    screen->selected_cells[0] = save_selection;\n\n    TrackText(xw, &save_old_start, &save_old_end);\n\n    TRACE((\"...getDataFromScreen done\\n\"));\n    return result;\n}\n\n/*\n * Split-up the format before substituting data, to avoid quoting issues.\n * The resource mechanism has a limited ability to handle escapes.  We take\n * the result as if it were an sh-type string and parse it into a regular\n * argv array.\n */\nstatic char **\ntokenizeFormat(String format)\n{\n    char **result = 0;\n\n    format = x_skip_blanks(format);\n    if (*format != '\\0') {\n\tchar *blob = x_strdup(format);\n\tint pass;\n\n\tfor (pass = 0; pass < 2; ++pass) {\n\t    int used = 0;\n\t    int first = 1;\n\t    int escaped = 0;\n\t    int squoted = 0;\n\t    int dquoted = 0;\n\t    int n;\n\t    int argc = 0;\n\n\t    for (n = 0; format[n] != '\\0'; ++n) {\n\t\tif (escaped) {\n\t\t    blob[used++] = format[n];\n\t\t    escaped = 0;\n\t\t} else if (format[n] == '\"') {\n\t\t    if (!squoted) {\n\t\t\tif (!dquoted)\n\t\t\t    blob[used++] = format[n];\n\t\t\tdquoted = !dquoted;\n\t\t    }\n\t\t} else if (format[n] == '\\'') {\n\t\t    if (!dquoted) {\n\t\t\tif (!squoted)\n\t\t\t    blob[used++] = format[n];\n\t\t\tsquoted = !squoted;\n\t\t    }\n\t\t} else if (format[n] == '\\\\') {\n\t\t    blob[used++] = format[n];\n\t\t    escaped = 1;\n\t\t} else {\n\t\t    if (first) {\n\t\t\tfirst = 0;\n\t\t\tif (pass) {\n\t\t\t    result[argc] = &blob[n];\n\t\t\t}\n\t\t\t++argc;\n\t\t    }\n\t\t    if (isspace((Char) format[n])) {\n\t\t\tfirst = !isspace((Char) format[n + 1]);\n\t\t\tif (squoted || dquoted) {\n\t\t\t    blob[used++] = format[n];\n\t\t\t} else if (first) {\n\t\t\t    blob[used++] = '\\0';\n\t\t\t}\n\t\t    } else {\n\t\t\tblob[used++] = format[n];\n\t\t    }\n\t\t}\n\t    }\n\t    blob[used] = '\\0';\n\t    assert(strlen(blob) <= strlen(format));\n\t    if (!pass) {\n\t\tresult = TypeCallocN(char *, argc + 1);\n\t\tif (result == 0) {\n\t\t    free(blob);\n\t\t    break;\n\t\t}\n\t    }\n\t}\n    }\n#if OPT_TRACE\n    if (result) {\n\tint n;\n\tTRACE((\"tokenizeFormat %s\\n\", format));\n\tfor (n = 0; result[n]; ++n) {\n\t    TRACE((\"argv[%d] = %s\\n\", n, result[n]));\n\t}\n    }\n#endif\n\n    return result;\n}\n\nstatic void\nformatVideoAttrs(XtermWidget xw, char *buffer, CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n    LineData *ld = GET_LINEDATA(screen, cell->row);\n\n    *buffer = '\\0';\n    if (ld != 0 && cell->col < (int) ld->lineSize) {\n\tIAttr attribs = ld->attribs[cell->col];\n\tconst char *delim = \"\";\n\n\tif (attribs & INVERSE) {\n\t    buffer += sprintf(buffer, \"7\");\n\t    delim = \";\";\n\t}\n\tif (attribs & UNDERLINE) {\n\t    buffer += sprintf(buffer, \"%s4\", delim);\n\t    delim = \";\";\n\t}\n\tif (attribs & BOLD) {\n\t    buffer += sprintf(buffer, \"%s1\", delim);\n\t    delim = \";\";\n\t}\n\tif (attribs & BLINK) {\n\t    buffer += sprintf(buffer, \"%s5\", delim);\n\t    delim = \";\";\n\t}\n#if OPT_ISO_COLORS\n\tif (attribs & FG_COLOR) {\n\t    Pixel fg = extract_fg(xw, ld->color[cell->col], attribs);\n\t    if (fg < 8) {\n\t\tfg += 30;\n\t    } else if (fg < 16) {\n\t\tfg += 90;\n\t    } else {\n\t\tbuffer += sprintf(buffer, \"%s38;5\", delim);\n\t\tdelim = \";\";\n\t    }\n\t    buffer += sprintf(buffer, \"%s%lu\", delim, fg);\n\t    delim = \";\";\n\t}\n\tif (attribs & BG_COLOR) {\n\t    Pixel bg = extract_bg(xw, ld->color[cell->col], attribs);\n\t    if (bg < 8) {\n\t\tbg += 40;\n\t    } else if (bg < 16) {\n\t\tbg += 100;\n\t    } else {\n\t\tbuffer += sprintf(buffer, \"%s48;5\", delim);\n\t\tdelim = \";\";\n\t    }\n\t    (void) sprintf(buffer, \"%s%lu\", delim, bg);\n\t}\n#endif\n    }\n}\n\nstatic char *\nformatStrlen(char *target, char *source, int freeit)\n{\n    if (source != 0) {\n\tsprintf(target, \"%u\", (unsigned) strlen(source));\n\tif (freeit) {\n\t    free(source);\n\t}\n    } else {\n\tstrcpy(target, \"0\");\n    }\n    return target;\n}\n\n/* substitute data into format, reallocating the result */\nstatic char *\nexpandFormat(XtermWidget xw,\n\t     const char *format,\n\t     char *data,\n\t     CELL *start,\n\t     CELL *finish)\n{\n    char *result = 0;\n    if (!IsEmpty(format)) {\n\tstatic char empty[1];\n\tint pass;\n\tint n;\n\tchar numbers[80];\n\n\tif (data == 0)\n\t    data = empty;\n\n\tfor (pass = 0; pass < 2; ++pass) {\n\t    size_t need = 0;\n\n\t    for (n = 0; format[n] != '\\0'; ++n) {\n\n\t\tif (format[n] == '%') {\n\t\t    char *value = 0;\n\n\t\t    switch (format[++n]) {\n\t\t    case '%':\n\t\t\tif (pass) {\n\t\t\t    result[need] = format[n];\n\t\t\t}\n\t\t\t++need;\n\t\t\tbreak;\n\t\t    case 'P':\n\t\t\tsprintf(numbers, \"%d;%d\",\n\t\t\t\tTScreenOf(xw)->topline + start->row + 1,\n\t\t\t\tstart->col + 1);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    case 'p':\n\t\t\tsprintf(numbers, \"%d;%d\",\n\t\t\t\tTScreenOf(xw)->topline + finish->row + 1,\n\t\t\t\tfinish->col + 1);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    case 'R':\n\t\t\tvalue = formatStrlen(numbers, x_strrtrim(data), 1);\n\t\t\tbreak;\n\t\t    case 'r':\n\t\t\tvalue = x_strrtrim(data);\n\t\t\tbreak;\n\t\t    case 'S':\n\t\t\tvalue = formatStrlen(numbers, data, 0);\n\t\t\tbreak;\n\t\t    case 's':\n\t\t\tvalue = data;\n\t\t\tbreak;\n\t\t    case 'T':\n\t\t\tvalue = formatStrlen(numbers, x_strtrim(data), 1);\n\t\t\tbreak;\n\t\t    case 't':\n\t\t\tvalue = x_strtrim(data);\n\t\t\tbreak;\n\t\t    case 'V':\n\t\t\tformatVideoAttrs(xw, numbers, start);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    case 'v':\n\t\t\tformatVideoAttrs(xw, numbers, finish);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    default:\n\t\t\tif (pass) {\n\t\t\t    result[need] = format[n];\n\t\t\t}\n\t\t\t--n;\n\t\t\t++need;\n\t\t\tbreak;\n\t\t    }\n\t\t    if (value != 0) {\n\t\t\tif (pass) {\n\t\t\t    strcpy(result + need, value);\n\t\t\t}\n\t\t\tneed += strlen(value);\n\t\t\tif (value != numbers && value != data) {\n\t\t\t    free(value);\n\t\t\t}\n\t\t    }\n\t\t} else {\n\t\t    if (pass) {\n\t\t\tresult[need] = format[n];\n\t\t    }\n\t\t    ++need;\n\t\t}\n\t    }\n\t    if (pass) {\n\t\tresult[need] = '\\0';\n\t    } else {\n\t\t++need;\n\t\tresult = malloc(need);\n\t\tif (result == 0) {\n\t\t    break;\n\t\t}\n\t    }\n\t}\n    }\n    TRACE((\"expandFormat(%s) = %s\\n\", NonNull(format), NonNull(result)));\n    return result;\n}\n\n/* execute the command after forking.  The main process frees its data */\nstatic void\nexecuteCommand(pid_t pid, char **argv)\n{\n    (void) pid;\n    if (argv != 0 && argv[0] != 0) {\n\tchar *child_cwd = ProcGetCWD(pid);\n\n\tif (fork() == 0) {\n\t    if (child_cwd) {\n\t\tIGNORE_RC(chdir(child_cwd));\t/* We don't care if this fails */\n\t    }\n\t    execvp(argv[0], argv);\n\t    exit(EXIT_FAILURE);\n\t}\n\tfree(child_cwd);\n    }\n}\n\nstatic void\nfreeArgv(char *blob, char **argv)\n{\n    if (blob) {\n\tfree(blob);\n\tif (argv) {\n\t    int n;\n\t    for (n = 0; argv[n]; ++n)\n\t\tfree(argv[n]);\n\t    free(argv);\n\t}\n    }\n}\n\nstatic void\nreallyExecFormatted(Widget w, char *format, char *data, CELL *start, CELL *finish)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tchar **argv;\n\n\tif ((argv = tokenizeFormat(format)) != 0) {\n\t    char *blob = argv[0];\n\t    int argc;\n\n\t    for (argc = 0; argv[argc] != 0; ++argc) {\n\t\targv[argc] = expandFormat(xw, argv[argc], data, start, finish);\n\t    }\n\t    executeCommand(TScreenOf(xw)->pid, argv);\n\t    freeArgv(blob, argv);\n\t}\n    }\n}\n\nvoid\nHandleExecFormatted(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* selections */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    TRACE_EVENT(\"HandleExecFormatted\", event, params, num_params);\n    if ((xw = getXtermWidget(w)) != 0 &&\n\t(*num_params > 1)) {\n\tdoSelectionFormat(xw, w, event, params, num_params, reallyExecFormatted);\n    }\n}\n\nvoid\nHandleExecSelectable(Widget w,\n\t\t     XEvent *event,\n\t\t     String *params,\t/* selections */\n\t\t     Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleExecSelectable\", event, params, num_params);\n\n\tif (*num_params == 2) {\n\t    CELL start, finish;\n\t    char *data;\n\t    char **argv;\n\n\t    data = getDataFromScreen(xw, event, params[1], &start, &finish);\n\t    if (data != 0) {\n\t\tif ((argv = tokenizeFormat(params[0])) != 0) {\n\t\t    char *blob = argv[0];\n\t\t    int argc;\n\n\t\t    for (argc = 0; argv[argc] != 0; ++argc) {\n\t\t\targv[argc] = expandFormat(xw, argv[argc], data,\n\t\t\t\t\t\t  &start, &finish);\n\t\t    }\n\t\t    executeCommand(TScreenOf(xw)->pid, argv);\n\t\t    freeArgv(blob, argv);\n\t\t}\n\t\tfree(data);\n\t    }\n\t}\n    }\n}\n\nstatic void\nreallyInsertFormatted(Widget w, char *format, char *data, CELL *start, CELL *finish)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tchar *exps;\n\n\tif ((exps = expandFormat(xw, format, data, start, finish)) != 0) {\n\t    unparseputs(xw, exps);\n\t    unparse_end(xw);\n\t    free(exps);\n\t}\n    }\n}\n\nvoid\nHandleInsertFormatted(Widget w,\n\t\t      XEvent *event,\n\t\t      String *params,\t/* selections */\n\t\t      Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    TRACE_EVENT(\"HandleInsertFormatted\", event, params, num_params);\n    if ((xw = getXtermWidget(w)) != 0 &&\n\t(*num_params > 1)) {\n\tdoSelectionFormat(xw, w, event, params, num_params, reallyInsertFormatted);\n    }\n}\n\nvoid\nHandleInsertSelectable(Widget w,\n\t\t       XEvent *event,\n\t\t       String *params,\t/* selections */\n\t\t       Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleInsertSelectable\", event, params, num_params);\n\n\tif (*num_params == 2) {\n\t    CELL start, finish;\n\t    char *data;\n\t    char *temp = x_strdup(params[0]);\n\n\t    data = getDataFromScreen(xw, event, params[1], &start, &finish);\n\t    if (data != 0) {\n\t\tchar *exps = expandFormat(xw, temp, data, &start, &finish);\n\t\tif (exps != 0) {\n\t\t    unparseputs(xw, exps);\n\t\t    unparse_end(xw);\n\t\t    free(exps);\n\t\t}\n\t\tfree(data);\n\t    }\n\t    free(temp);\n\t}\n    }\n}\n#endif /* OPT_SELECTION_OPS */\n", "<!--\n *****************************************************************************\n * this file is part of xterm                                                *\n *                                                                           *\n * Copyright 1997-2020,2021 by Thomas E. Dickey                              *\n *                                                                           *\n * All Rights Reserved                                                       *\n *                                                                           *\n * Permission is hereby granted, free of charge, to any person obtaining a   *\n * copy of this software and associated documentation files (the             *\n * \"Software\"), to deal in the Software without restriction, including       *\n * without limitation the rights to use, copy, modify, merge, publish,       *\n * distribute, sublicense, and/or sell copies of the Software, and to        *\n * permit persons to whom the Software is furnished to do so, subject to     *\n * the following conditions:                                                 *\n *                                                                           *\n * The above copyright notice and this permission notice shall be included   *\n * in all copies or substantial portions of the Software.                    *\n *                                                                           *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS   *\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                *\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.    *\n * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY  *\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,      *\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE         *\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                    *\n *                                                                           *\n * Except as contained in this notice, the name(s) of the above copyright    *\n * holders shall not be used in advertising or otherwise to promote the      *\n * sale, use or other dealings in this Software without prior written        *\n * authorization.                                                            *\n *****************************************************************************\n  $XTermId: xterm.log.html,v 1.2309 2021/02/09 01:30:44 tom Exp $\n  -->\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\">\n<html>\n<head>\n  <meta name=\"generator\" content=\n  \"HTML Tidy for HTML5 for Linux version 5.6.0\">\n  <title>XTERM - Change Log</title>\n  <link rel=\"author\" href=\"mailto:dickey@invisible-island.net\">\n  <meta http-equiv=\"Content-Type\" content=\n  \"text/html; charset=us-ascii\">\n  <meta name=\"keywords\" content=\"xterm, change log\">\n  <meta name=\"description\" content=\n  \"This is the xterm change-log, distributed with xterm, with items listed by patch-number and date\">\n  <link rel=\"SHORTCUT ICON\" href=\"/img/icons/xterm.ico\" type=\n  \"image/x-icon\">\n</head>\n<body>\n  <hr>\n\n  <p>Copyright &copy; 1997-2020,2021 by <a href=\n  \"mailto:dickey@invisible-island.net\">Thomas E. Dickey</a></p>\n\n  <hr>\n\n  <h1>Contents</h1>\n\n  <p><a href=\n  \"https://invisible-island.net/xterm/xterm.log.html\">Here</a> is\n  the latest version of this file.</p>\n\n  <p>It began as a list of the changes that I made for xterm, using\n  the notes that I added when submitting a patch. You should note\n  that other changes were made as well, by other people, to fix\n  bugs and correct ifdef's for portability. Until mid-2006, most of\n  these were summarized in the XFree86 <a href=\n  \"https://web.archive.org/web/20070101220948/http://cvsweb.xfree86.org/cvsweb/xc/programs/Xserver/hw/xfree86/CHANGELOG\">\n  CHANGELOG</a>).</p>\n\n  <ul>\n    <li><a href=\"#xterm_dev\">Development</a></li>\n\n    <li><a href=\"#xterm_365\">Patch #365 - 2021/02/03</a></li>\n\n    <li><a href=\"#xterm_364\">Patch #364 - 2021/02/02</a></li>\n\n    <li><a href=\"#xterm_363\">Patch #363 - 2020/12/26</a></li>\n\n    <li><a href=\"#xterm_362\">Patch #362 - 2020/11/11</a></li>\n\n    <li><a href=\"#xterm_361\">Patch #361 - 2020/10/14</a></li>\n\n    <li><a href=\"#xterm_360\">Patch #360 - 2020/09/20</a></li>\n\n    <li><a href=\"#xterm_359\">Patch #359 - 2020/08/17</a></li>\n\n    <li><a href=\"#xterm_358\">Patch #358 - 2020/07/12</a></li>\n\n    <li><a href=\"#xterm_357\">Patch #357 - 2020/07/05</a></li>\n\n    <li><a href=\"#xterm_356\">Patch #356 - 2020/05/02</a></li>\n\n    <li><a href=\"#xterm_355\">Patch #355 - 2020/05/01</a></li>\n\n    <li><a href=\"#xterm_354\">Patch #354 - 2020/04/26</a></li>\n\n    <li><a href=\"#xterm_353\">Patch #353 - 2020/02/01</a></li>\n\n    <li><a href=\"#xterm_352\">Patch #352 - 2020/01/16</a></li>\n\n    <li><a href=\"#xterm_351\">Patch #351 - 2019/11/17</a></li>\n\n    <li><a href=\"#xterm_350\">Patch #350 - 2019/11/02</a></li>\n\n    <li><a href=\"#xterm_349\">Patch #349 - 2019/09/22</a></li>\n\n    <li><a href=\"#xterm_348\">Patch #348 - 2019/07/22</a></li>\n\n    <li><a href=\"#xterm_347\">Patch #347 - 2019/06/30</a></li>\n\n    <li><a href=\"#xterm_346\">Patch #346 - 2019/05/27</a></li>\n\n    <li><a href=\"#xterm_345\">Patch #345 - 2019/05/14</a></li>\n\n    <li><a href=\"#xterm_344\">Patch #344 - 2019/02/12</a></li>\n\n    <li><a href=\"#xterm_343\">Patch #343 - 2019/01/13</a></li>\n\n    <li><a href=\"#xterm_342\">Patch #342 - 2019/01/03</a></li>\n\n    <li><a href=\"#xterm_341\">Patch #341 - 2018/12/24</a></li>\n\n    <li><a href=\"#xterm_340\">Patch #340 - 2018/12/16</a></li>\n\n    <li><a href=\"#xterm_339\">Patch #339 - 2018/12/12</a></li>\n\n    <li><a href=\"#xterm_338\">Patch #338 - 2018/12/09</a></li>\n\n    <li><a href=\"#xterm_337\">Patch #337 - 2018/09/21</a></li>\n\n    <li><a href=\"#xterm_336\">Patch #336 - 2018/09/19</a></li>\n\n    <li><a href=\"#xterm_335\">Patch #335 - 2018/08/14</a></li>\n\n    <li><a href=\"#xterm_334\">Patch #334 - 2018/08/12</a></li>\n\n    <li><a href=\"#xterm_333\">Patch #333 - 2018/05/03</a></li>\n\n    <li><a href=\"#xterm_332\">Patch #332 - 2018/04/15</a></li>\n\n    <li><a href=\"#xterm_331\">Patch #331 - 2017/12/30</a></li>\n\n    <li><a href=\"#xterm_330\">Patch #330 - 2017/06/20</a></li>\n\n    <li><a href=\"#xterm_329\">Patch #329 - 2017/06/12</a></li>\n\n    <li><a href=\"#xterm_328\">Patch #328 - 2017/06/01</a></li>\n\n    <li><a href=\"#xterm_327\">Patch #327 - 2016/10/07</a></li>\n\n    <li><a href=\"#xterm_326\">Patch #326 - 2016/09/25</a></li>\n\n    <li><a href=\"#xterm_325\">Patch #325 - 2016/06/05</a></li>\n\n    <li><a href=\"#xterm_324\">Patch #324 - 2016/03/10</a></li>\n\n    <li><a href=\"#xterm_323\">Patch #323 - 2016/03/07</a></li>\n\n    <li><a href=\"#xterm_322\">Patch #322 - 2016/01/02</a></li>\n\n    <li><a href=\"#xterm_321\">Patch #321 - 2015/12/31</a></li>\n\n    <li><a href=\"#xterm_320\">Patch #320 - 2015/08/28</a></li>\n\n    <li><a href=\"#xterm_319\">Patch #319 - 2015/08/19</a></li>\n\n    <li><a href=\"#xterm_318\">Patch #318 - 2015/04/12</a></li>\n\n    <li><a href=\"#xterm_317\">Patch #317 - 2015/03/27</a></li>\n\n    <li><a href=\"#xterm_316\">Patch #316 - 2015/03/07</a></li>\n\n    <li><a href=\"#xterm_315\">Patch #315 - 2015/03/02</a></li>\n\n    <li><a href=\"#xterm_314\">Patch #314 - 2014/12/28</a></li>\n\n    <li><a href=\"#xterm_313\">Patch #313 - 2014/11/28</a></li>\n\n    <li><a href=\"#xterm_312\">Patch #312 - 2014/09/28</a></li>\n\n    <li><a href=\"#xterm_311\">Patch #311 - 2014/09/18</a></li>\n\n    <li><a href=\"#xterm_310\">Patch #310 - 2014/07/25</a></li>\n\n    <li><a href=\"#xterm_309\">Patch #309 - 2014/07/13</a></li>\n\n    <li><a href=\"#xterm_308\">Patch #308 - 2014/06/19</a></li>\n\n    <li><a href=\"#xterm_307\">Patch #307 - 2014/06/17</a></li>\n\n    <li><a href=\"#xterm_306\">Patch #306 - 2014/06/03</a></li>\n\n    <li><a href=\"#xterm_305\">Patch #305 - 2014/06/02</a></li>\n\n    <li><a href=\"#xterm_304\">Patch #304 - 2014/05/03</a></li>\n\n    <li><a href=\"#xterm_303\">Patch #303 - 2014/03/06</a></li>\n\n    <li><a href=\"#xterm_302\">Patch #302 - 2014/03/02</a></li>\n\n    <li><a href=\"#xterm_301\">Patch #301 - 2014/01/19</a></li>\n\n    <li><a href=\"#xterm_300\">Patch #300 - 2013/12/03</a></li>\n\n    <li><a href=\"#xterm_299\">Patch #299 - 2013/12/01</a></li>\n\n    <li><a href=\"#xterm_298\">Patch #298 - 2013/11/27</a></li>\n\n    <li><a href=\"#xterm_297\">Patch #297 - 2013/09/10</a></li>\n\n    <li><a href=\"#xterm_296\">Patch #296 - 2013/07/10</a></li>\n\n    <li><a href=\"#xterm_295\">Patch #295 - 2013/07/06</a></li>\n\n    <li><a href=\"#xterm_294\">Patch #294 - 2013/07/05</a></li>\n\n    <li><a href=\"#xterm_293\">Patch #293 - 2013/05/27</a></li>\n\n    <li><a href=\"#xterm_292\">Patch #292 - 2013/04/25</a></li>\n\n    <li><a href=\"#xterm_291\">Patch #291 - 2013/02/26</a></li>\n\n    <li><a href=\"#xterm_290\">Patch #290 - 2013/02/12</a></li>\n\n    <li><a href=\"#xterm_289\">Patch #289 - 2013/02/08</a></li>\n\n    <li><a href=\"#xterm_288\">Patch #288 - 2013/01/09</a></li>\n\n    <li><a href=\"#xterm_287\">Patch #287 - 2012/11/25</a></li>\n\n    <li><a href=\"#xterm_286\">Patch #286 - 2012/10/29</a></li>\n\n    <li><a href=\"#xterm_285\">Patch #285 - 2012/10/23</a></li>\n\n    <li><a href=\"#xterm_284\">Patch #284 - 2012/10/14</a></li>\n\n    <li><a href=\"#xterm_283\">Patch #283 - 2012/10/09</a></li>\n\n    <li><a href=\"#xterm_282\">Patch #282 - 2012/09/28</a></li>\n\n    <li><a href=\"#xterm_281\">Patch #281 - 2012/06/26</a></li>\n\n    <li><a href=\"#xterm_280\">Patch #280 - 2012/06/24</a></li>\n\n    <li><a href=\"#xterm_279\">Patch #279 - 2012/05/10</a></li>\n\n    <li><a href=\"#xterm_278\">Patch #278 - 2012/01/18</a></li>\n\n    <li><a href=\"#xterm_277\">Patch #277 - 2012/01/07</a></li>\n\n    <li><a href=\"#xterm_276\">Patch #276 - 2011/10/10</a></li>\n\n    <li><a href=\"#xterm_275\">Patch #275 - 2011/09/11</a></li>\n\n    <li><a href=\"#xterm_274\">Patch #274 - 2011/09/05</a></li>\n\n    <li><a href=\"#xterm_273\">Patch #273 - 2011/08/25</a></li>\n\n    <li><a href=\"#xterm_272\">Patch #272 - 2011/08/24</a></li>\n\n    <li><a href=\"#xterm_271\">Patch #271 - 2011/07/14</a></li>\n\n    <li><a href=\"#xterm_270\">Patch #270 - 2011/04/26</a></li>\n\n    <li><a href=\"#xterm_269\">Patch #269 - 2011/02/19</a></li>\n\n    <li><a href=\"#xterm_268\">Patch #268 - 2011/02/10</a></li>\n\n    <li><a href=\"#xterm_267\">Patch #267 - 2010/11/20</a></li>\n\n    <li><a href=\"#xterm_266\">Patch #266 - 2010/10/24</a></li>\n\n    <li><a href=\"#xterm_265\">Patch #265 - 2010/10/22</a></li>\n\n    <li><a href=\"#xterm_264\">Patch #264 - 2010/10/14</a></li>\n\n    <li><a href=\"#xterm_263\">Patch #263 - 2010/10/13</a></li>\n\n    <li><a href=\"#xterm_262\">Patch #262 - 2010/8/30</a></li>\n\n    <li><a href=\"#xterm_261\">Patch #261 - 2010/6/28</a></li>\n\n    <li><a href=\"#xterm_260\">Patch #260 - 2010/6/20</a></li>\n\n    <li><a href=\"#xterm_259\">Patch #259 - 2010/6/5</a></li>\n\n    <li><a href=\"#xterm_258\">Patch #258 - 2010/5/1</a></li>\n\n    <li><a href=\"#xterm_257\">Patch #257 - 2010/4/22</a></li>\n\n    <li><a href=\"#xterm_256\">Patch #256 - 2010/3/6</a></li>\n\n    <li><a href=\"#xterm_255\">Patch #255 - 2010/1/21</a></li>\n\n    <li><a href=\"#xterm_254\">Patch #254 - 2010/1/6</a></li>\n\n    <li><a href=\"#xterm_253\">Patch #253 - 2009/12/10</a></li>\n\n    <li><a href=\"#xterm_252\">Patch #252 - 2009/12/7</a></li>\n\n    <li><a href=\"#xterm_251\">Patch #251 - 2009/11/11</a></li>\n\n    <li><a href=\"#xterm_250\">Patch #250 - 2009/10/13</a></li>\n\n    <li><a href=\"#xterm_249\">Patch #249 - 2009/10/1</a></li>\n\n    <li><a href=\"#xterm_248\">Patch #248 - 2009/9/11</a></li>\n\n    <li><a href=\"#xterm_247\">Patch #247 - 2009/8/30</a></li>\n\n    <li><a href=\"#xterm_246\">Patch #246 - 2009/8/16</a></li>\n\n    <li><a href=\"#xterm_245\">Patch #245 - 2009/8/12</a></li>\n\n    <li><a href=\"#xterm_244\">Patch #244 - 2009/8/9</a></li>\n\n    <li><a href=\"#xterm_243\">Patch #243 - 2009/3/28</a></li>\n\n    <li><a href=\"#xterm_242\">Patch #242 - 2009/2/15</a></li>\n\n    <li><a href=\"#xterm_241\">Patch #241 - 2009/1/26</a></li>\n\n    <li><a href=\"#xterm_240\">Patch #240 - 2009/1/25</a></li>\n\n    <li><a href=\"#xterm_239\">Patch #239 - 2009/1/8</a></li>\n\n    <li><a href=\"#xterm_238\">Patch #238 - 2008/12/30</a></li>\n\n    <li><a href=\"#xterm_237\">Patch #237 - 2008/09/14</a></li>\n\n    <li><a href=\"#xterm_236\">Patch #236 - 2008/07/27</a></li>\n\n    <li><a href=\"#xterm_235\">Patch #235 - 2008/04/20</a></li>\n\n    <li><a href=\"#xterm_234\">Patch #234 - 2008/03/02</a></li>\n\n    <li><a href=\"#xterm_233\">Patch #233 - 2008/02/24</a></li>\n\n    <li><a href=\"#xterm_232\">Patch #232 - 2008/01/30</a></li>\n\n    <li><a href=\"#xterm_231\">Patch #231 - 2008/01/05</a></li>\n\n    <li><a href=\"#xterm_230\">Patch #230 - 2007/12/31</a></li>\n\n    <li><a href=\"#xterm_229\">Patch #229 - 2007/8/12</a></li>\n\n    <li><a href=\"#xterm_228\">Patch #228 - 2007/7/22</a></li>\n\n    <li><a href=\"#xterm_227\">Patch #227 - 2007/6/27</a></li>\n\n    <li><a href=\"#xterm_226\">Patch #226 - 2007/6/17</a></li>\n\n    <li><a href=\"#xterm_225\">Patch #225 - 2007/3/24</a></li>\n\n    <li><a href=\"#xterm_224\">Patch #224 - 2007/2/11</a></li>\n\n    <li><a href=\"#xterm_223\">Patch #223 - 2006/11/30</a></li>\n\n    <li><a href=\"#xterm_222\">Patch #222 - 2006/10/17</a></li>\n\n    <li><a href=\"#xterm_221\">Patch #221 - 2006/10/1</a></li>\n\n    <li><a href=\"#xterm_220\">Patch #220 - 2006/9/10</a></li>\n\n    <li><a href=\"#xterm_219\">Patch #219 - 2006/9/4</a></li>\n\n    <li><a href=\"#xterm_218\">Patch #218 - 2006/8/27</a></li>\n\n    <li><a href=\"#xterm_217\">Patch #217 - 2006/8/20</a></li>\n\n    <li><a href=\"#xterm_216\">Patch #216 - 2006/8/3</a></li>\n\n    <li><a href=\"#xterm_215\">Patch #215 - 2006/6/19 - XFree86\n    4.6.99.2</a></li>\n\n    <li><a href=\"#xterm_214\">Patch #214 - 2006/6/18 - XFree86\n    4.6.99.2</a></li>\n\n    <li><a href=\"#xterm_213\">Patch #213 - 2006/4/30 - XFree86\n    4.5.99.905</a></li>\n\n    <li><a href=\"#xterm_212\">Patch #212 - 2006/4/9 - XFree86\n    4.5.99.904</a></li>\n\n    <li><a href=\"#xterm_211\">Patch #211 - 2006/3/19 - XFree86\n    4.5.99.902</a></li>\n\n    <li><a href=\"#xterm_210\">Patch #210 - 2006/3/12 - XFree86\n    4.5.99.902</a></li>\n\n    <li><a href=\"#xterm_209\">Patch #209 - 2006/2/12 - XFree86\n    4.5.99.22</a></li>\n\n    <li><a href=\"#xterm_208\">Patch #208 - 2006/1/3 - XFree86\n    4.5.99.19</a></li>\n\n    <li><a href=\"#xterm_207\">Patch #207 - 2005/11/13 - XFree86\n    4.5.99.16</a></li>\n\n    <li><a href=\"#xterm_206\">Patch #206 - 2005/11/3 - XFree86\n    4.5.99.15</a></li>\n\n    <li><a href=\"#xterm_205\">Patch #205 - 2005/9/18 - XFree86\n    4.5.99.12</a></li>\n\n    <li><a href=\"#xterm_204\">Patch #204 - 2005/8/4 - XFree86\n    4.5.99.9</a></li>\n\n    <li><a href=\"#xterm_203\">Patch #203 - 2005/7/6 - XFree86\n    4.5.99.7</a></li>\n\n    <li><a href=\"#xterm_202\">Patch #202 - 2005/5/2 - XFree86\n    4.5.99.3</a></li>\n\n    <li><a href=\"#xterm_201\">Patch #201 - 2005/4/21 - XFree86\n    4.5.99.2</a></li>\n\n    <li><a href=\"#xterm_200\">Patch #200 - 2005/2/6 - XFree86\n    4.4.99.23</a></li>\n\n    <li><a href=\"#xterm_199\">Patch #199 - 2005/1/17 - XFree86\n    4.4.99.22</a></li>\n\n    <li><a href=\"#xterm_198\">Patch #198 - 2005/1/13 - XFree86\n    4.4.99.21</a></li>\n\n    <li><a href=\"#xterm_197\">Patch #197 - 2004/11/30 - XFree86\n    4.4.99.19</a></li>\n\n    <li><a href=\"#xterm_196\">Patch #196 - 2004/8/15 - XFree86\n    4.4.99.12</a></li>\n\n    <li><a href=\"#xterm_195\">Patch #195 - 2004/8/8 - XFree86\n    4.4.99.11</a></li>\n\n    <li><a href=\"#xterm_194\">Patch #194 - 2004/7/27 - XFree86\n    4.4.99.11</a></li>\n\n    <li><a href=\"#xterm_193\">Patch #193 - 2004/7/19 - XFree86\n    4.4.99.10</a></li>\n\n    <li><a href=\"#xterm_192\">Patch #192 - 2004/7/12 - XFree86\n    4.4.99.9</a></li>\n\n    <li><a href=\"#xterm_191\">Patch #191 - 2004/6/6 - XFree86\n    4.4.99.7</a></li>\n\n    <li><a href=\"#xterm_190\">Patch #190 - 2004/5/25 - XFree86\n    4.4.99.6</a></li>\n\n    <li><a href=\"#xterm_189\">Patch #189 - 2004/5/16 - XFree86\n    4.4.99.6</a></li>\n\n    <li><a href=\"#xterm_188\">Patch #188 - 2004/5/12 - XFree86\n    4.4.99.6</a></li>\n\n    <li><a href=\"#xterm_187\">Patch #187 - 2004/4/27 - XFree86\n    4.4.99.4</a></li>\n\n    <li><a href=\"#xterm_186\">Patch #186 - 2004/4/18 - XFree86\n    4.4.99.4</a></li>\n\n    <li><a href=\"#xterm_185\">Patch #185 - 2004/3/3 - XFree86\n    4.4</a></li>\n\n    <li><a href=\"#xterm_184\">Patch #184 - 2003/12/31 - XFree86\n    4.3.99.903</a></li>\n\n    <li><a href=\"#xterm_183\">Patch #183 - 2003/12/26 - XFree86\n    4.3.99.903</a></li>\n\n    <li><a href=\"#xterm_182\">Patch #182 - 2003/12/2 - XFree86\n    4.3.99.901</a></li>\n\n    <li><a href=\"#xterm_181\">Patch #181 - 2003/10/26 - XFree86\n    4.3.99.15</a></li>\n\n    <li><a href=\"#xterm_180\">Patch #180 - 2003/10/12 - XFree86\n    4.3.99.15</a></li>\n\n    <li><a href=\"#xterm_179\">Patch #179 - 2003/5/21 - XFree86\n    4.3.99.5</a></li>\n\n    <li><a href=\"#xterm_178\">Patch #178 - 2003/5/18 - XFree86\n    4.3.99.5</a></li>\n\n    <li><a href=\"#xterm_177\">Patch #177 - 2003/3/23 - XFree86\n    4.3.0</a></li>\n\n    <li><a href=\"#xterm_176\">Patch #176 - 2003/3/22 - XFree86\n    4.3.0</a></li>\n\n    <li><a href=\"#xterm_175\">Patch #175 - 2003/3/9 - XFree86\n    4.3.0</a></li>\n\n    <li><a href=\"#xterm_174\">Patch #174 - 2003/2/25 - XFree86\n    4.2.99.903</a></li>\n\n    <li><a href=\"#xterm_173\">Patch #173 - 2003/2/6 - XFree86\n    4.2.99.902</a></li>\n\n    <li><a href=\"#xterm_172\">Patch #172 - 2002/12/27 - XFree86\n    4.2.99.3</a></li>\n\n    <li><a href=\"#xterm_171\">Patch #171 - 2002/12/12 - XFree86\n    4.2.99.3</a></li>\n\n    <li><a href=\"#xterm_170\">Patch #170 - 2002/10/13 - XFree86\n    4.2.1</a></li>\n\n    <li><a href=\"#xterm_169\">Patch #169 - 2002/10/5 - XFree86\n    4.2.1</a></li>\n\n    <li><a href=\"#xterm_168\">Patch #168 - 2002/9/29 - XFree86\n    4.2.1</a></li>\n\n    <li><a href=\"#xterm_167\">Patch #167 - 2002/8/24 - XFree86\n    4.2.0</a></li>\n\n    <li><a href=\"#xterm_166\">Patch #166 - 2002/3/25 - XFree86\n    4.2.0</a></li>\n\n    <li><a href=\"#xterm_165\">Patch #165 - 2002/1/5 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_164\">Patch #164 - 2001/11/13 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_163\">Patch #163 - 2001/11/04 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_162\">Patch #162 - 2001/10/23 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_161\">Patch #161 - 2001/10/10 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_160\">Patch #160 - 2001/10/7 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_159\">Patch #159 - 2001/9/19 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_158\">Patch #158 - 2001/9/8 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_157\">Patch #157 - 2001/6/18 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_156\">Patch #156 - 2001/4/28 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_155\">Patch #155 - 2001/4/20 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_154\">Patch #154 - 2001/4/11 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_153\">Patch #153 - 2001/3/29 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_152\">Patch #152 - 2001/3/13 - XFree86\n    4.0.2</a></li>\n\n    <li><a href=\"#xterm_151\">Patch #151 - 2001/3/10 - XFree86\n    4.0.2</a></li>\n\n    <li><a href=\"#xterm_150\">Patch #150 - 2000/12/29 - XFree86\n    4.0.2</a></li>\n\n    <li><a href=\"#xterm_149\">Patch #149 - 2000/12/6 - XFree86\n    4.0.1h</a></li>\n\n    <li><a href=\"#xterm_148\">Patch #148 - 2000/10/31 - XFree86\n    4.0.1d</a></li>\n\n    <li><a href=\"#xterm_147\">Patch #147 - 2000/10/26 - XFree86\n    4.0.1c</a></li>\n\n    <li><a href=\"#xterm_146\">Patch #146 - 2000/9/12 - XFree86\n    4.0.1c</a></li>\n\n    <li><a href=\"#xterm_145\">Patch #145 - 2000/9/11 - XFree86\n    4.0.1c</a></li>\n\n    <li><a href=\"#xterm_144\">Patch #144 - 2000/8/23 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_143\">Patch #143 - 2000/8/19 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_142\">Patch #142 - 2000/8/18 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_141\">Patch #141 - 2000/8/14 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_140\">Patch #140 - 2000/7/23 - XFree86\n    4.0.1</a></li>\n\n    <li><a href=\"#xterm_139\">Patch #139 - 2000/6/17 - XFree86\n    4.0d</a></li>\n\n    <li><a href=\"#xterm_138\">Patch #138 - 2000/6/15 - XFree86\n    4.0c</a></li>\n\n    <li><a href=\"#xterm_137\">Patch #137 - 2000/6/10 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_136\">Patch #136 - 2000/6/3 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_135\">Patch #135 - 2000/5/29 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_134\">Patch #134 - 2000/5/28 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_133\">Patch #133 - 2000/5/2 - XFree86\n    4.0a</a></li>\n\n    <li><a href=\"#xterm_132\">Patch #132 - 2000/4/11 - XFree86\n    4.0a</a></li>\n\n    <li><a href=\"#xterm_131\">Patch #131 - 2000/3/3 - XFree86\n    3.9.18b</a></li>\n\n    <li><a href=\"#xterm_130\">Patch #130 - 2000/3/1 - XFree86\n    3.9.18a</a></li>\n\n    <li><a href=\"#xterm_129\">Patch #129 - 2000/2/26 - XFree86\n    3.9.18a</a></li>\n\n    <li><a href=\"#xterm_128\">Patch #128 - 2000/2/17 - XFree86\n    3.9.18</a></li>\n\n    <li><a href=\"#xterm_127\">Patch #127 - 2000/2/12 - XFree86\n    3.9.17e</a></li>\n\n    <li><a href=\"#xterm_126\">Patch #126 - 2000/2/8 - XFree86\n    3.9.17c</a></li>\n\n    <li><a href=\"#xterm_125\">Patch #125 - 2000/1/31 - XFree86\n    3.9.17c</a></li>\n\n    <li><a href=\"#xterm_124\">Patch #124 - 2000/1/27 - XFree86\n    3.9.17b</a></li>\n\n    <li><a href=\"#xterm_123\">Patch #123 - 2000/1/22 - XFree86\n    3.9.17a</a></li>\n\n    <li><a href=\"#xterm_122\">Patch #122 - 1999/12/28 - XFree86\n    3.9.16f</a></li>\n\n    <li><a href=\"#xterm_121\">Patch #121 - 1999/11/14 - XFree86\n    3.9.16c</a></li>\n\n    <li><a href=\"#xterm_120\">Patch #120 - 1999/10/28 - XFree86\n    3.9.16c</a></li>\n\n    <li><a href=\"#xterm_119\">Patch #119 - 1999/10/16 - XFree86\n    3.9.16c</a></li>\n\n    <li><a href=\"#xterm_118\">Patch #118 - 1999/10/5 - XFree86\n    3.9.16b</a></li>\n\n    <li><a href=\"#xterm_117\">Patch #117 - 1999/9/29 - XFree86\n    3.9.16b</a></li>\n\n    <li><a href=\"#xterm_116\">Patch #116 - 1999/9/25 - XFree86\n    3.9.16a</a></li>\n\n    <li><a href=\"#xterm_115\">Patch #115 - 1999/9/18 - XFree86\n    3.9.16a</a></li>\n\n    <li><a href=\"#xterm_114\">Patch #114 - 1999/9/15 - XFree86\n    3.9.16</a></li>\n\n    <li><a href=\"#xterm_113\">Patch #113 - 1999/8/15 - XFree86\n    3.9.15b</a></li>\n\n    <li><a href=\"#xterm_112\">Patch #112 - 1999/7/17 - XFree86\n    3.9Pw</a></li>\n\n    <li><a href=\"#xterm_111\">Patch #111 - 1999/7/10 - XFree86\n    3.9Pw</a></li>\n\n    <li><a href=\"#xterm_110\">Patch #110 - 1999/6/29 - XFree86\n    3.9Pu</a></li>\n\n    <li><a href=\"#xterm_109\">Patch #109 - 1999/6/23 - XFree86\n    3.9Pt</a></li>\n\n    <li><a href=\"#xterm_108\">Patch #108 - 1999/6/19 - XFree86\n    3.9Ps</a></li>\n\n    <li><a href=\"#xterm_107\">Patch #107 - 1999/6/12 - XFree86\n    3.9Pq</a></li>\n\n    <li><a href=\"#xterm_106\">Patch #106 - 1999/6/9 - XFree86\n    3.9Pq</a></li>\n\n    <li><a href=\"#xterm_105\">Patch #105 - 1999/6/5 - XFree86\n    3.9Pp</a></li>\n\n    <li><a href=\"#xterm_104\">Patch #104 - 1999/5/30 - XFree86\n    3.9Pn</a></li>\n\n    <li><a href=\"#xterm_103\">Patch #103 - 1999/5/14 - XFree86\n    3.9Pm</a></li>\n\n    <li><a href=\"#xterm_102\">Patch #102 - 1999/5/12 - XFree86\n    3.9Pm</a></li>\n\n    <li><a href=\"#xterm_101\">Patch #101 - 1999/5/10 - XFree86\n    3.9Pm</a></li>\n\n    <li><a href=\"#xterm_100\">Patch #100 - 1999/5/3 - XFree86\n    3.9Pl</a></li>\n\n    <li><a href=\"#xterm_99\">Patch #99 - 1999/5/2 - XFree86\n    3.9Pk</a></li>\n\n    <li><a href=\"#xterm_98\">Patch #98 - 1999/4/26 - XFree86\n    3.9Pk</a></li>\n\n    <li><a href=\"#xterm_97\">Patch #97 - 1999/4/25 - XFree86\n    3.9Pk</a></li>\n\n    <li><a href=\"#xterm_96\">Patch #96 - 1999/4/19 - XFree86\n    3.9Pj</a></li>\n\n    <li><a href=\"#xterm_95\">Patch #95 - 1999/4/5 - XFree86\n    3.9Ph</a></li>\n\n    <li><a href=\"#xterm_94\">Patch #94 - 1999/3/27 - XFree86\n    3.9Pf</a></li>\n\n    <li><a href=\"#xterm_93\">Patch #93 - 1999/3/14 - XFree86\n    3.9Pd</a></li>\n\n    <li><a href=\"#xterm_92\">Patch #92 - 1999/2/5 - XFree86\n    3.9Nz</a></li>\n\n    <li><a href=\"#xterm_91\">Patch #91 - 1999/1/21 - XFree86\n    3.9Nw</a></li>\n\n    <li><a href=\"#xterm_90\">Patch #90 - 1998/12/13 - XFree86\n    3.9Nq</a></li>\n\n    <li><a href=\"#xterm_89\">Patch #89 - 1998/11/20 - XFree86\n    3.9Nm</a></li>\n\n    <li><a href=\"#xterm_88\">Patch #88 - 1998/10/31 - XFree86 3.9Nk\n    and 3.3.2h</a></li>\n\n    <li><a href=\"#xterm_87\">Patch #87 - 1998/10/21 - XFree86 3.9Nj\n    and 3.3.2f</a></li>\n\n    <li><a href=\"#xterm_86\">Patch #86 - 1998/10/14 - XFree86 3.9Nj\n    and 3.3.2e</a></li>\n\n    <li><a href=\"#xterm_85\">Patch #85 - 1998/10/12 - XFree86 3.9Nj\n    and 3.3.2e</a></li>\n\n    <li><a href=\"#xterm_84\">Patch #84 - 1998/10/9 - XFree86 3.9Ni\n    and 3.3.2e</a></li>\n\n    <li><a href=\"#sync_83\">Resync #83 - 1998/10/7 - XFree86\n    3.3.2e</a></li>\n\n    <li><a href=\"#xterm_83\">Patch #83 - 1998/8/25 - XFree86\n    3.9Nb</a></li>\n\n    <li><a href=\"#xterm_82\">Patch #82 - 1998/7/15 - XFree86\n    3.9Aj</a></li>\n\n    <li><a href=\"#xterm_81\">Patch #81 - 1998/7/14 - XFree86\n    3.9Aj</a></li>\n\n    <li><a href=\"#xterm_80\">Patch #80 - 1998/6/29 - XFree86\n    3.9Ai</a></li>\n\n    <li><a href=\"#xterm_79\">Patch #79 - 1998/6/28 - XFree86\n    3.9Ai</a></li>\n\n    <li><a href=\"#xterm_78\">Patch #78 - 1998/6/3 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_77\">Patch #77 - 1998/5/26 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_76\">Patch #76 - 1998/5/8 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_75\">Patch #75 - 1998/5/7 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_74\">Patch #74 - 1998/4/27 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_73\">Patch #73 - 1998/4/25 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_72\">Patch #72 - 1998/4/17 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_71\">Patch #71 - 1998/4/12 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_70\">Patch #70 - 1998/3/29 - XFree86 3.9Af\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_69\">Patch #69 - 1998/3/16 - XFree86 3.9Ad\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_68\">Patch #68 - 1998/3/4 - XFree86 3.9Ad\n    and 3.3.1z</a></li>\n\n    <li><a href=\"#xterm_67\">Patch #67 - 1998/2/23 - XFree86 3.9Ad\n    and 3.3.1e</a></li>\n\n    <li><a href=\"#xterm_66\">Patch #66 - 1998/2/16 - XFree86 3.9Ad\n    and 3.3.1d</a></li>\n\n    <li><a href=\"#xterm_65\">Patch #65 - 1998/2/14 - XFree86 3.9Ad\n    and 3.3.1c</a></li>\n\n    <li><a href=\"#xterm_64\">Patch #64 - 1998/2/8 - XFree86\n    3.9Ad</a></li>\n\n    <li><a href=\"#xterm_63\">Patch #63 - 1998/2/5 - XFree86\n    3.9Ad</a></li>\n\n    <li><a href=\"#xterm_62\">Patch #62 - 1998/1/23 - XFree86\n    3.9Ac</a></li>\n\n    <li><a href=\"#xterm_61\">Patch #61 - 1998/1/17 - XFree86\n    3.9Ac</a></li>\n\n    <li><a href=\"#xterm_60\">Patch #60 - 1998/1/10 - XFree86\n    3.9Ab</a></li>\n\n    <li><a href=\"#xterm_59\">Patch #59 - 1998/1/5 - XFree86\n    3.9Ab</a></li>\n\n    <li><a href=\"#xterm_58\">Patch #58 - 1998/1/3 - XFree86\n    3.9Ab</a></li>\n\n    <li><a href=\"#xterm_57\">Patch #57 - 1997/12/26 - XFree86\n    3.9Aa</a></li>\n\n    <li><a href=\"#xterm_56\">Patch #56 - 1997/11/28 - XFree86\n    3.9x</a></li>\n\n    <li><a href=\"#xterm_55\">Patch #55 - 1997/11/25 - XFree86\n    3.9x</a></li>\n\n    <li><a href=\"#xterm_54\">Patch #54 - 1997/10/17 - XFree86\n    3.9s</a></li>\n\n    <li><a href=\"#xterm_53\">Patch #53 - 1997/10/12 - XFree86\n    3.9r</a></li>\n\n    <li><a href=\"#xterm_52\">Patch #52 - 1997/9/29 - XFree86\n    3.9q</a></li>\n\n    <li><a href=\"#xterm_51\">Patch #51 - 1997/9/15 - XFree86\n    3.9p</a></li>\n\n    <li><a href=\"#xterm_50\">Patch #50 - 1997/8/22 - XFree86\n    3.9m</a></li>\n\n    <li><a href=\"#xterm_49\">Patch #49 - 1997/8/10 - XFree86\n    3.9k</a></li>\n\n    <li><a href=\"#xterm_48\">Patch #48 - 1997/7/26 - XFree86\n    3.9j</a></li>\n\n    <li><a href=\"#xterm_47\">Patch #47 - 1997/7/13 - XFree86\n    3.9i</a></li>\n\n    <li><a href=\"#xterm_46\">Patch #46 - 1997/7/4 - XFree86 3.9h</a></li>\n\n    <li><a href=\"#xterm_45\">Patch #45 - 1997/7/2 - XFree86 3.9h</a></li>\n\n    <li><a href=\"#xterm_44\">Patch #44 - 1997/6/22 - XFree86\n    3.9g</a></li>\n\n    <li><a href=\"#xterm_43\">Patch #43 - 1997/6/10 - XFree86\n    3.9d</a></li>\n\n    <li><a href=\"#xterm_42\">Patch #42 - 1997/6/8 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_41\">Patch #41 - 1997/5/28 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_40\">Patch #40 - 1997/5/26 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_39\">Patch #39 - 1997/5/24 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_38\">Patch #38 - 1997/5/22 - XFree86\n    3.2Xh</a></li>\n\n    <li><a href=\"#xterm_37\">Patch #37 - 1997/5/7 - XFree86 3.9a</a></li>\n\n    <li><a href=\"#xterm_36\">Patch #36 - 1997/1/16 - XFree86\n    3.2r</a></li>\n\n    <li><a href=\"#xterm_35\">Patch #35 - 1997/1/7 - XFree86 3.2o</a></li>\n\n    <li><a href=\"#xterm_34\">Patch #34 - 1997/1/5 - XFree86 3.2o</a></li>\n\n    <li><a href=\"#xterm_33\">Patch #33 - 1996/11/24 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_32\">Patch #32 - 1996/11/21 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_31\">Patch #31 - 1996/11/16 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_30\">Patch #30 - 1996/11/16 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_29\">Patch #29 - 1996/9/15 - XFree86\n    3.1.2Gb</a></li>\n\n    <li><a href=\"#xterm_28\">Patch #28 - 1996/8/31 - XFree86\n    3.1.2F</a></li>\n\n    <li><a href=\"#xterm_27\">Patch #27 - 1996/8/21 - XFree86\n    3.1.2Ek</a></li>\n\n    <li><a href=\"#xterm_26\">Patch #26 - 1996/8/20 - XFree86\n    3.1.2Ei</a></li>\n\n    <li><a href=\"#xterm_25\">Patch #25 - 1996/8/18 - XFree86\n    3.1.2Ei</a></li>\n\n    <li><a href=\"#xterm_24\">Patch #24 - 1996/8/11 - XFree86\n    3.1.2Ee</a></li>\n\n    <li><a href=\"#xterm_23\">Patch #23 - 1996/7/31 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_22\">Patch #22 - 1996/7/26 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_21\">Patch #21 - 1996/7/24 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_20\">Patch #20 - 1996/7/24 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_19\">Patch #19 - 1996/7/21 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_18\">Patch #18 - 1996/7/18 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_17\">Patch #17 - 1996/7/2 - XFree86\n    3.1.2Eb</a></li>\n\n    <li><a href=\"#xterm_16\">Patch #16 - 1996/6/25 - XFree86\n    3.1.2Ea</a></li>\n\n    <li><a href=\"#xterm_15\">Patch #15 - 1996/5/29 - XFree86\n    3.1.2E</a></li>\n\n    <li><a href=\"#xterm_14\">Patch #14 - 1996/5/12 - XFree86\n    3.1.2Dj</a></li>\n\n    <li><a href=\"#xterm_13\">Patch #13 - 1996/4/23 - XFree86\n    3.1.2Df</a></li>\n\n    <li><a href=\"#xterm_12\">Patch #12 - 1996/3/16 - XFree86\n    3.1.2Dc</a></li>\n\n    <li><a href=\"#xterm_11\">Patch #11 - 1996/3/5 - XFree86\n    3.1.2Db</a></li>\n\n    <li><a href=\"#xterm_10\">Patch #10 - 1996/2/14 - XFree86\n    3.1.2Cd</a></li>\n\n    <li><a href=\"#xterm_09\">Patch #9 - 1996/2/10 - XFree86\n    3.1.2Cb</a></li>\n\n    <li><a href=\"#xterm_08\">Patch #8 - 1996/2/9 - XFree86\n    3.1.2Cb</a></li>\n\n    <li><a href=\"#xterm_07\">Patch #7 - 1996/1/28 - XFree86\n    3.1.2n</a></li>\n\n    <li><a href=\"#xterm_06\">Patch #6 - 1996/1/8</a></li>\n\n    <li><a href=\"#xterm_05\">Patch #5 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_04\">Patch #4 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_03\">Patch #3 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_02\">Patch #2 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_01\">Patch #1 - 1996/1/6</a></li>\n  </ul>\n\n  <h1><a name=\"xterm_dev\" id=\"xterm_dev\">Development</a></h1>\n\n  <ul>\n    <li>with <code>alwaysHighlight</code> true, xterm does not\n    properly track focus. The <em>screen-&gt;select</em>\n    <code>FOCUS</code> flag remains always on, which prevents\n    <code>bellIsUrgent</code> from working, as the urgent\n    <code>WM_HINT</code> flag is only set in\n    <code>setXUrgency()</code> when the window is not focused. Fix\n    this by updating <em>screen-&gt;select</em> in\n    <code>unselectwindow()</code> regardless of the value of\n    <code>always_highlight</code> (patch by Jiri Bohac).</li>\n\n    <li>improve fix for interaction between SRM and ENQ (report by\n    Grant Taylor).</li>\n\n    <li>build-fix for <code>--with-Xaw3dxft</code>, needed when\n    <code>--with-toolbar</code> is omitted (report by Jimmy Olgeni,\n    Emanuel Haupt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_365\" id=\"xterm_365\">Patch #365 -\n  2021/02/03</a></h1>\n\n  <ul>\n    <li>amend fix for &ldquo;word&rdquo; selection in <a href=\n    \"#xterm_364\">patch #364</a> to limit that to the\n    <code>insert-selectable</code> <em>action</em>, which reads\n    data from the screen. This restores the interactive behavior\n    where double-clicking on a &ldquo;word&rdquo; would make\n    subsequent selection extensions by words as well as suppressing\n    some boundary-checks (report by David Wolfskill, FreeBSD\n    #253225).</li>\n  </ul>\n\n  <h1><a name=\"xterm_364\" id=\"xterm_364\">Patch #364 -\n  2021/02/02</a></h1>\n\n  <ul>\n    <li>add <code>-fc</code> option.</li>\n\n    <li>correct/improve limit-checks for SRM versus ENQ from\n    <a href=\"#xterm_344\">patch #344</a> (report by Tom\n    Szilagyi).</li>\n\n    <li>enable <code>XftFont</code> resource in Xaw3dxft\n    configuration (patch by Tavis Ormandy).</li>\n\n    <li>improve quoting/escaping in build-scripts per\n    shellcheck.</li>\n\n    <li>add <code>libpcre2-posix</code> to the packages tested for\n    <code>--with-pcre2</code> option, needed with Fedora (report by\n    Tomas Korbar).</li>\n\n    <li>correct a typo in manual page, and note that\n    <code>KeepClipboard</code> may not be compiled-in (report/patch\n    by Sean C Farley).</li>\n\n    <li>corrected boundary-checks for &ldquo;word&rdquo; selection\n    used in <code>on<em>N</em>Clicks</code> resources (report by\n    Tavis Ormandy).</li>\n\n    <li>update to autoconf-2.52-20210101, to improve shellcheck\n    warnings.</li>\n\n    <li>improve configure check for desktop categories.</li>\n  </ul>\n\n  <h1><a name=\"xterm_363\" id=\"xterm_363\">Patch #363 -\n  2020/12/26</a></h1>\n\n  <ul>\n    <li>disable groff hyphenation in generated html when using\n    man2html.</li>\n\n    <li>change SCS &ldquo;<code>&amp;4</code>&rdquo; Cyrillic to\n    non-NRCS, per VT520 manual.</li>\n\n    <li>amend fix for SCS in <a href=\"#xterm_198\">patch #198</a> to\n    remove <code>DEL</code> rather than converting it to a space\n    (report by Thomas Wolff).</li>\n\n    <li>modify state transitions for selecting character sets to\n    eliminate an ambiguity between the &ldquo;A&rdquo; used in\n    VT220 versus VT320.</li>\n\n    <li>improve error recovery when selecting characters by\n    resetting to US ASCII when no suitable encoding is found, e.g.,\n    attempting to use an NRCS sequence when NRCS is not\n    enabled.</li>\n\n    <li>turn off hyphenation in &ldquo;<code>.txt</code>&rdquo;\n    conversion, prompted by groff changes.</li>\n\n    <li>add VT5xx ISO Latin-2 (prompted by discussion with Thomas\n    Wolff).</li>\n\n    <li>amend change from <a href=\"#xterm_361\">patch #361</a> to\n    event-handling in <code>CopyWait</code> to handle active-icon\n    as a special case (Debian #975687).</li>\n\n    <li>add call to <code>loadColorTable</code> to get the visual\n    information needed to decode BE RGBA32 color format (patch by\n    Leandro Lupori).</li>\n\n    <li>modify the resource-parsing for\n    <code>disallowedPasteControls</code> and similar lists of\n    names/numbers to recognize &ldquo;~;&rdquo; (tilde) for\n    cancelling a given name/number.</li>\n\n    <li>add ENQ, EOT and NUL to default for\n    <code>disallowedPasteControls</code>.</li>\n\n    <li>change default for <code>disallowedPasteControls</code> to\n    omit the tab character (suggested by Harald Dunkel).</li>\n\n    <li>fix swapped height/width in <code>regisScreenSize</code>\n    and <code>maxGraphicSize</code> resources using \"auto\" value,\n    from <a href=\"#xterm_314\">patch #314</a> (report by Anton\n    Lavrentiev)</li>\n\n    <li>revise <a href=\"#xterm_362\">patch #362</a> change for\n    shift-modifier versus mouse protocol and select/paste by adding\n    resource <code>shiftEscape</code>, which can be enabled via a\n    control sequence (prompted by discussion with Matthijs van\n    Duin).</li>\n\n    <li>simplify/improve ifdef in trace code for using a separate\n    set of files for each run of xterm.</li>\n\n    <li>add options <code>-r</code> and <code>-t</code> to\n    <code>vttests/query-color.pl</code> to show the 6-digit RGB\n    code and actual colors.</li>\n\n    <li>add <code>nel</code> to <code>xterm-basic</code>\n    terminfo.</li>\n\n    <li>alter <code>vttests/modify-keys.pl</code> to omit HTML\n    reference links to the modified-keys table where no keycode was\n    available.</li>\n  </ul>\n\n  <h1><a name=\"xterm_362\" id=\"xterm_362\">Patch #362 -\n  2020/11/11</a></h1>\n\n  <ul>\n    <li>cleanup of calls to <code>free</code>, removing checks for\n    null (Walter Harms).</li>\n\n    <li>improved mouse-button reporting (prompted by discussion\n    with Stephane Chazelas)\n      <ul>\n        <li>narrow the scope of the change for shift-key in\n        <a href=\"#xterm_361\">patch #361</a> to make it apply only\n        when the <code>modifyOtherKeys</code> resource is set to 2\n        (i.e., &ldquo;program mode&rdquo;). Also, when checking the\n        shift-key, ignore modifiers other than shift, control and\n        &ldquo;meta&rdquo;</li>\n\n        <li>use the alt/meta modifier information obtained in\n        <code>VTInitModifiers</code> to replace a hard-coded\n        <em>mod1</em> used to detect &ldquo;Meta&rdquo; for\n        mouse-button responses.</li>\n      </ul>\n    </li>\n\n    <li>reduce <code>SIGWINCH</code>'s sent to the client by\n    filtering out duplicates.</li>\n\n    <li>improve display when <code>scaleHeight</code> is greater\n    than 1:\n      <ul>\n        <li>the text-cursor is vertically-centered on the current\n        line, rather than only extending below the current line\n        (report by Manu Chaturvedi).</li>\n\n        <li>the built-in line-drawing characters extend to the\n        scaled cell-height.</li>\n      </ul>\n    </li>\n\n    <li>fill-in special case for motion-events to match the changes\n    for shift-key in pointer-button events from <a href=\n    \"#xterm_361\">patch #361</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_361\" id=\"xterm_361\">Patch #361 -\n  2020/10/14</a></h1>\n\n  <ul>\n    <li>treat the return value of <code>strerror</code> as readonly\n    (patch by Philipp Klaus Krause).</li>\n\n    <li>modify event-handling in <code>CopyWait</code> to work\n    around hanging while writing large amounts of text to an active\n    icon and at the same time iconifying/deiconifying (report by\n    Dave Kemper).</li>\n\n    <li>initialize double-buffer for active-icon window.</li>\n\n    <li>improve manual page description of scrollbar resources\n    (report by Brian Lindholm).</li>\n\n    <li>correct ifdef for menu entry for active-icon, when\n    initializing it with toolbar configuration.</li>\n\n    <li>add preprocessor option to makefile to set internal\n    definition of pixmaps directory to match the\n    install-configuration (FreeBSD #250036).</li>\n\n    <li>cleanup of calls to <code>free</code>, removing checks for\n    null (Walter Harms).</li>\n\n    <li>add fallback actions <code>pointer-button</code> and\n    <code>pointer-motion</code> which handle events for the mouse\n    control-sequences protocol if the <em>select</em>-related\n    translations are omitted with\n    <code>*omitTranslation:select</code> (prompted by discussion\n    with \"Ergus\")</li>\n\n    <li>amend rule for using shift-key to override mouse-protocol\n    for select/paste to limit that feature to mouse-buttons which\n    are actually bound to select/paste actions (prompted by\n    discussion with \"Ergus\").</li>\n\n    <li>corrected mapping in special case for repainting wrap-marks\n    when viewing the scrollback area.</li>\n\n    <li>use separate <em>GCs</em> for <code>showWrapMarks</code>\n    feature, to work around cursor coloring change in <a href=\n    \"#xterm_345\">patch #345</a> (report by Paulo Silva de\n    Al&iacute;bano).</li>\n  </ul>\n\n  <h1><a name=\"xterm_360\" id=\"xterm_360\">Patch #360 -\n  2020/09/20</a></h1>\n\n  <ul>\n    <li>mention <code>decGraphicsID</code> in\n    <code>ctlseqs.ms</code> (suggested by Thomas Wolff).</li>\n\n    <li>modify pixel-coordinate mouse reponse to use as origin the\n    VT100-window rather than the underlying widget, which includes\n    the scrollbar (report by Thomas Wolff).</li>\n\n    <li>add configure option <code>--disable-print-graphics</code>\n    (Ross Combs).</li>\n\n    <li>add <code>test_ptydata</code> to &ldquo;make check&rdquo;\n    rule.</li>\n\n    <li>minor fixes for <code>ctlseqs.ms</code> (report by\n    Jean-Marc Bourguet).</li>\n\n    <li>minor fixes for manpage style (report/patch by\n    \"a1346054\").</li>\n\n    <li>correct cleanup from switch between italics/normal font in\n    the show/hide cursor functions (report/testcase by Peter\n    Fabinski).</li>\n\n    <li>integrated patch by Ross Combs:\n      <ul>\n        <li>internal renaming of GraphicsID symbols, for\n        readability.</li>\n\n        <li>adjust logic for VT125, treating it as a ReGIS\n        terminal.</li>\n      </ul>\n    </li>\n\n    <li>update configure macros, for compiler-warning fixes.</li>\n\n    <li>integrated patch by Ross Combs:\n      <ul>\n        <li>add control sequence modes for graphics printing.</li>\n\n        <li>improve conversion to bitmaps for TrueType fonts in\n        ReGIS</li>\n\n        <li>add <code>font7</code> resource, for an\n        &ldquo;enormous&rdquo; bitmap font.</li>\n\n        <li>do not reset graphics in a soft-reset.</li>\n\n        <li>add <code>pointerFont</code> resource, and\n        <code>-pf</code> command-line option.</li>\n      </ul>\n    </li>\n\n    <li>improve typography of manual page (patch by Branden\n    Robinson).</li>\n\n    <li>amend <a href=\"#xterm_359\">patch #359</a> change to\n    <code>df-install.in</code> to ignore a command-line assignment\n    to <code>DESTDIR</code> if followed by an explicit\n    <code>--dir</code> (report by Sven Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_359\" id=\"xterm_359\">Patch #359 -\n  2020/08/17</a></h1>\n\n  <ul>\n    <li>add special case in <code>WriteText</code> to allow colors\n    8-15 to override <code>colorBDMode</code> (patch by Ingo\n    Br&uuml;ckl).</li>\n\n    <li>add <code>utf8Weblike</code> resource, to provide an\n    alternate scheme for handling ill-formed UTF-8 sequences\n    (adapted from patch by Dan Gohman).</li>\n\n    <li>improve computation for the number of lines needed to\n    scroll-up a SIXEL graphic (report/patch by Ben Wong).</li>\n\n    <li>correct manpage description for default value of\n    <code>disallowWindowOps</code> from changes in <a href=\n    \"#xterm_331\">xterm #331</a> (patch by Ben Wong).</li>\n\n    <li>correct a loop starting-point in\n    <code>refresh_graphics</code> from optimization in <a href=\n    \"#xterm_358\">patch #358</a> changes (report by Ben Wong).</li>\n\n    <li>add a new mouse mode 1016, which uses the same format as\n    mode 1006, but sends the mouse's position in pixels (suggested\n    by Igor van den Hoven).</li>\n\n    <li>fix an issue from <a href=\"#xterm_338\">patch #338</a>\n    changes where only the first selection buffer specified in the\n    request would be updated using OSC 52 (patch by Michael\n    Gulick).</li>\n\n    <li>modify makefile/scripts to allow <code>DESTDIR</code> to\n    prefix the target directory for desktop-file-install (report by\n    Fred Heitkamp).</li>\n\n    <li>enable SIXEL feature by default.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_358\" id=\"xterm_358\">Patch #358 -\n  2020/07/12</a></h1>\n\n  <ul>\n    <li>correct logic for decodeTerminalID changes in <a href=\n    \"#xterm_357\">patch #357</a> (report by \"Chartreuse\").</li>\n\n    <li>modify makefile to use <code>plink.sh</code> when linking\n    test-programs, to fix build when using pcre (report by H Merijn\n    Brand)</li>\n\n    <li>build-fix for test_ptydata program (patch by H Merijn\n    Brand)</li>\n  </ul>\n\n  <h1><a name=\"xterm_357\" id=\"xterm_357\">Patch #357 -\n  2020/07/05</a></h1>\n\n  <ul>\n    <li>several minor optimizations for the ReGIS and SIXEL\n    features, improving performance by 10%.</li>\n\n    <li>add resource <code>decGraphicsID</code> to allow displaying\n    graphics when the emulation level would ordinarily disallow\n    this (prompted by discussion with Thomas Wolff).</li>\n\n    <li>add control sequences for fast switching of color palettes:\n    <code>XTPUSHCOLORS</code>, <code>XTPOPCOLORS</code>,\n    <code>XTREPORTCOLORS</code></li>\n\n    <li>amend change for soft-hyphen from <a href=\n    \"#xterm_328\">patch #328</a> to avoid stripping\n    replacement-characters which would be shown with malformed or\n    overlong UTF-8 input.</li>\n\n    <li>corrected an error-handling case in\n    <code>decodeUtf8</code>, matching a similar fix in <a href=\n    \"#xterm_268\">patch #268</a> (report/patch by Dan Gohman).</li>\n\n    <li>add a test-driver for <code>ptydata.c</code></li>\n\n    <li>minor cleanup of macros (adapted from patch by Walter\n    Harms).</li>\n\n    <li>fix some errata in <code>ctlseqs.ms</code> (report by\n    Thomas Wolff).</li>\n\n    <li>allow immediate repaint-on-palette-changed if\n    double-buffering is enabled.</li>\n\n    <li>deprecate codes 10/11 in sgr push controls, changing those\n    to 30/31, to avoid confusion with sgr 10-19.</li>\n\n    <li>modify <code>SGR</code> parameter handling to stop if an\n    unrecognized parameter is encountered, to guard against\n    malformed or nonstandard sequences (report by Bram\n    Moolenaar).</li>\n\n    <li>modify <code>DECERA</code> color for consistency with other\n    erasures/clearing (report by Thomas Wolff).</li>\n\n    <li><code>ECH</code> should not be masked by\n    <code>DECSCA</code> (report by Thomas Wolff).</li>\n\n    <li>extend <code>DECFRA</code> and <code>REP</code> to accept\n    any &ldquo;graphic&rdquo; character rather than just Latin1,\n    etc. (report by Thomas Wolff).</li>\n\n    <li>add <code>-C</code> option to 256colors2.pl and\n    88colors2.pl, to demonstrate mixed semicolon/colon separators\n    which are implied by ECMA-48.</li>\n\n    <li>update sample terminfo to reflect the documentation\n    improvements.</li>\n\n    <li>update description of 88/256/direct color in\n    <code>ctlseqs.ms</code> to point out that using semicolons is a\n    deprecated legacy feature, and standard terminal applications\n    should use colons (prompted by discussion with Bram\n    Moolenaar).</li>\n\n    <li>modify configure-check for <code>tgetent</code> to\n    conditionally include <code>termcap.h</code>, enabling\n    configuration using <code>clang</code>'s pedantic-errors option\n    (report by Dennis Clarke). See <a href=\n    \"https://invisible-island.net/ncurses/man/curs_termcap.3x.html#h3-Other-Compatibility\">\n    <em>Other Compatibility</em></a> in ncurses'\n    <em>curs_termcap(3X)</em>.</li>\n\n    <li>remove some unnecessary pointer checks (patch by Walter\n    Harms).</li>\n\n    <li>accept terminal-id and add DA response for VT131,\n    VT132.</li>\n  </ul>\n\n  <h1><a name=\"xterm_356\" id=\"xterm_356\">Patch #356 -\n  2020/05/02</a></h1>\n\n  <ul>\n    <li>revise fix for Debian #954730, which interfered with wheel\n    mouse events (report by Gabriele Balducci).</li>\n  </ul>\n\n  <h1><a name=\"xterm_355\" id=\"xterm_355\">Patch #355 -\n  2020/05/01</a></h1>\n\n  <ul>\n    <li>revise fix for Debian #954730, which interfered with wheel\n    mouse events (report by Henri Menke).</li>\n\n    <li>fix typos in documentation (reports by Stephen Hurd, Stefan\n    Assmann).</li>\n\n    <li>add mapping for <code>decTerminalID</code> for\n    &ldquo;100&rdquo; overlooked in <a href=\"#xterm_354\">patch\n    #354</a>.</li>\n\n    <li>update tables in wcwidth.c based on Unicode 13.0.0</li>\n\n    <li>build-fix for &ldquo;make check&rdquo; when building\n    out-of-tree (report by Sven Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_354\" id=\"xterm_354\">Patch #354 -\n  2020/04/26</a></h1>\n\n  <ul>\n    <li>work around performance problems of\n    <code>XDrawImageString</code> and\n    <code>XDrawImageString16</code> functions (Debian\n    #954845).</li>\n\n    <li>add a control sequence which reports xterm's version (patch\n    by Nicholas Marriott, mintty #881).</li>\n\n    <li>temporarily set numeric locale category to \"C\" when parsing\n    resources, so that <code>scaleHeight</code> and\n    <code>faceSize</code> settings do not depend on locale (Debian\n    #820803).</li>\n\n    <li>improve DA/DA2 response by ensuring that the\n    <code>decTerminalID</code> maps to one of the known\n    identifiers, as well as providing DA2 response for VT241 and\n    VT382.</li>\n\n    <li>terminfo improvements:\n      <ul>\n        <li>add (my) comments from ncurses which explain the keypad\n        layouts.</li>\n\n        <li>add <code>vt52+keypad</code> from ncurses</li>\n\n        <li>use improved <code>xm</code> example for\n        <code>xterm+x11mouse</code>, <code>xterm+sm+1006</code>\n        from ncurses 6.2 terminfo.src</li>\n      </ul>\n    </li>\n\n    <li>two fixes for left/right wheel mouse event reporting\n    (Debian #954730):\n      <ul>\n        <li>filter identical button-events</li>\n\n        <li>correct order of button-range versus protocol type (see\n        <a href=\"#xterm_345\">patch #345</a>)</li>\n      </ul>\n    </li>\n\n    <li>change &ldquo;make check&rdquo; makefile-rule to use\n    test-drivers for charclass and wcwidth data.</li>\n\n    <li>quiet &ldquo;did not find a usable <em>xxx</em> TrueType\n    font&rdquo; warnings by making <code>fontWarnings</code> apply\n    to these messages (report by Jim Rees).</li>\n\n    <li>improve reinitialization of parameter list (report/testcase\n    by James Holderness).</li>\n\n    <li>temporarily set numeric locale category to \"C\" when\n    formatting SVG or XHTML screendumps, to make the radix\n    separator used in RGB values consistent (adapted from patch by\n    George Kouryachy).</li>\n\n    <li>add resource <code>forceXftHeight</code> to control whether\n    workaround from Debian #880407 is used.</li>\n\n    <li>apply updated ascent/descent in workaround from Debian\n    #880407 to fix a 1-pixel gap in built-in vertical lines\n    (report/testcase by Stefan Assmann).</li>\n\n    <li>improve round-off of scaling for built-in line-drawing\n    (prompted by discussion with Stefan Assmann).</li>\n\n    <li>adjust fonts in svg-icon files to accommodate reduced\n    functionality of new pango (report/analysis by YOKOTA\n    Hiroshi).</li>\n\n    <li>improve configure check for X Toolkit library.</li>\n\n    <li>correct Y-coordinate transformation in\n    <code>ClearCurBackground</code>, overlooked in changes for\n    <a href=\"#xterm_334\">patch #334</a> (report/analysis by Chuck\n    Silvers).</li>\n\n    <li>remove <code>--vendor</code> option from test-packages'\n    install of desktop files; the feature is badly broken in\n    <em>gnome-shell</em>.</li>\n\n    <li>modify <code>uxterm</code> to make it possible to select\n    nonstandard locale <em>C.UTF-8</em>, e.g, if the user's locale\n    is set to &ldquo;C&rdquo; (Debian #940626).</li>\n\n    <li>re-save/tweak &ldquo;.svg&rdquo; icon-files to work around\n    breakage in toolset since the files were created in <a href=\n    \"#xterm_283\">patch #283</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_353\" id=\"xterm_353\">Patch #353 -\n  2020/02/01</a></h1>\n\n  <ul>\n    <li>amend change in <a href=\"#xterm_352\">patch #352</a> for\n    button-events to fix a case where some followup events were not\n    processed soon enough (report/patch by Jimmy Aguilar\n    Mena).</li>\n\n    <li>handle <em>MappingNotify</em> X event, to improve recovery\n    when switching keyboard configurations using\n    <code>xkbcomp</code> (prompted by discussion with Frank Mosch,\n    Debian #661295). There is more work needed here, possibly in\n    the X libraries.</li>\n\n    <li>improve discussion of mouse-mode in <code>ctlseqs.ms</code>\n    (suggested by Igor van den Hoven).</li>\n\n    <li>further improve checks for Xft <em>max-advance-width</em>\n    to take into account fonts which use two cells for ambiguous\n    width characters. Also improve the time used for these checks\n    (reports by Yuri Pankov, Frank Mosch).</li>\n\n    <li>fix a few spelling errors reported by codespell (report by\n    Jens Schleusener).</li>\n\n    <li>modify <code>run-tic.sh</code> to prefer development\n    version of ncurses since changes to terminfo file in <a href=\n    \"#xterm_345\">patch #345</a> rely upon bug-fixes in ncurses\n    (prompted by discussion with Will Senn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_352\" id=\"xterm_352\">Patch #352 -\n  2020/01/16</a></h1>\n\n  <ul>\n    <li>adjust fontsize data to handle a minor inconsistency from\n    recent Xft versions (Debian #880407, adapted from patch by\n    Vincent Lef&egrave;vre).</li>\n\n    <li>add a table to the manual page description of\n    <code>forceBoxChars</code> to alert the reader to the special\n    characters aside from &ldquo;line-drawing&rdquo; which are\n    drawn directly when this resource is set (Debian #931305).</li>\n\n    <li>improve <code>checkXft</code> logic which attempts to\n    detect fonts whose <em>max-advance-width</em> is inconsistent\n    with the actual glyph widths. For some fonts, it is necessary\n    to check additional characters (report/analysis by Jan\n    Engelhardt).</li>\n\n    <li>improve configure-checks for X headers and libraries on\n    recent MacOS, which has moved those files under\n    <code>/usr/X11</code>.</li>\n\n    <li>improve portability of iconify/deiconify feature by taking\n    into account some window managers which manipulate the EWMH\n    <code>_NET_WM_STATE</code> property, adding/removing\n    <code>_NET_WM_STATE_HIDDEN</code> rather than actually\n    <em>minimizing</em> the window (prompted by discussion with\n    J&ouml;rg Breitbart).</li>\n\n    <li>improve workaround from <a href=\"#xterm_287\">patch #287</a>\n    for the <code>-iconic</code> option when configured with\n    toolbar by postponing the extra request for minimizing the\n    window to the end of menu-initialization.</li>\n\n    <li>modify <code>xevents</code> special-case for mouse-events\n    to include button-events so that the meta key by itself can\n    generate button-events (report/analysis by Mattias\n    Engdeg&aring;rd).</li>\n\n    <li>amend SGR-stack change from <a href=\"#xterm_348\">patch\n    #348</a> to not associate bold attribute with background color\n    (report by Nicholas Marriott).</li>\n\n    <li>fix copy/paste error in manual page (patch by Larry\n    Hynes).</li>\n\n    <li>add definitions in <code>xterm_io.h</code> so that GNU/Hurd\n    will use <code>posix_openpty</code> (patch by Samuel\n    Thibault).</li>\n\n    <li>build-fix in debug-tracing, for <code>esctest</code>.</li>\n\n    <li>updated autoconf macros</li>\n\n    <li>update config.guess</li>\n  </ul>\n\n  <h1><a name=\"xterm_351\" id=\"xterm_351\">Patch #351 -\n  2019/11/17</a></h1>\n\n  <ul>\n    <li>correct logic in <code>property_to_string</code> for\n    deciding when to fallback from UTF-8 decoding to ISO-8859-1\n    decoding, broken in <a href=\"#xterm_350\">xterm #350</a>\n    (FreeBSD #241961).</li>\n\n    <li>add <code>-report-icons</code> to help-message.</li>\n\n    <li>improved autoconf macros:\n      <ul>\n        <li><code>CF_ADD_LIBS</code>: the change to filter out\n        duplicates caused this to append rather than prepend.\n        revise to fix that.</li>\n\n        <li><code>CF_GCC_VERSION</code> and\n        <code>CF_GCC_WARNINGS</code>: move checks to distinguish\n        icc/clang from gcc from the macro which handles the\n        --enable-warnings option, to make this work\n        without-warnings for the inline-checks.</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>correct status in <code>XTGETXRES</code> replies when the\n    resource was not found.</li>\n\n    <li>fix some gcc, cppcheck, clang and coverity warnings.</li>\n\n    <li>guard call to <code>RequestResize</code> from the\n    struct-notify event handler to prevent recursion in the\n    Xft+buffered workaround in some cases when doing manual\n    resizing rather than resizing via escape sequences (reports by\n    Stefan Assmann, Mike Thornburg).</li>\n\n    <li>amend the workaround for Xft+buffered blanking by moving\n    the switch to bitmap-fonts to account for differences in font\n    metrics between bitmap- and TrueType-fonts (report by Stefan\n    Assmann).</li>\n\n    <li>improve the note on the <code>xterm-rep</code> terminfo\n    entry (prompted by discussion with Sven Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_350\" id=\"xterm_350\">Patch #350 -\n  2019/11/02</a></h1>\n\n  <ul>\n    <li>modify html/svg dump to not ignore zero'd/blank cells.</li>\n\n    <li>align terminfo file with ncurses, e.g., add\n    <code>xterm+osc104</code> block.</li>\n\n    <li>improve discussion of <code>modifyOtherKeys</code> in\n    manual page and in <code>ctlseqs.ms</code>.</li>\n\n    <li>add <code>vttests/modify-keys.pl</code> script to\n    illustrate the <code>modifyOtherKeys</code> resource (prompted\n    by discussion with Bram Moolenaar).</li>\n\n    <li>various improvements to <code>ctlseqs.ms</code>, as part of\n    autogenerating links for the website.</li>\n\n    <li>update manual page default for <code>saveLines</code>\n    resource default value (Branden Robinson, Debian #913815).</li>\n\n    <li>add command-line option <code>-report-xres</code> to show\n    the values of the VT100 widget X resources when initialization\n    is complete.</li>\n\n    <li>add a control sequence which, like tcap-query, allows an\n    application to inspect most X resource settings of the VT100\n    widget.</li>\n\n    <li>adjust some optional features to enable them in the imake\n    configuration as they would be by default via the configure\n    script.</li>\n\n    <li>add null-pointer checks to improve error recovery when\n    bitmap fonts are missing or corrupt (report by Jonne\n    Ransijn).</li>\n\n    <li>correct the condition for deleting the EWMH window-title\n    property, i.e., if UTF-8 titles are disabled, rather than if an\n    update to the EWHM property found no change (report by Sven\n    Joachim).</li>\n\n    <li>build-fix for the case when configure\n    <code>--enable-trace</code> is used without\n    <code>--enable-warnings</code> (report by Sven Joachim).</li>\n\n    <li>fix a few minor bugs found with Coverity.</li>\n\n    <li>add a check in <code>property_to_string</code> to avoid\n    translating <code>UTF8_STRING</code> or\n    <code>COMPOUND_TEXT</code> into Latin-1 when UTF-8 encoding is\n    active, e.g., when pushing onto the title-stack while switching\n    to the alternate screen.</li>\n\n    <li>build-fix for the <code>--disable-doublechars</code>\n    configure option (report by Brian Lindholm).</li>\n  </ul>\n\n  <h1><a name=\"xterm_349\" id=\"xterm_349\">Patch #349 -\n  2019/09/22</a></h1>\n\n  <ul>\n    <li>add graphic context to support bold+italics (patch by Quinn\n    Strahl).</li>\n\n    <li>document window properties in the manual page.</li>\n\n    <li>improve title-string feature:\n      <ul>\n        <li>if any of <code>allowC1Printable</code>,\n        <code>utf8Title</code> or <code>titleModes</code> hint that\n        an application might send a title-string encoded in UTF-8,\n        check if that is the case, and if it is recodable into\n        ISO-8859-1, use that for the ICCCM-style title.</li>\n\n        <li>check if the title given by a control sequence happens\n        to be already encoded in UTF-8, to avoid double-encoding\n        (FreeBSD #240393).</li>\n\n        <li>Make <code>sameName</code> resource work for the EWMH\n        titles.</li>\n\n        <li>Modify menu-state of <code>utf8Title</code> to be\n        consistent with the <code>utf8</code> source, i.e., setting\n        the EWMH properties automatically when UTF-8 is\n        active.</li>\n      </ul>\n    </li>\n\n    <li>reorganize text-drawing to make it possible to investigate\n    using Xft to implement VT100-style double-sized characters.\n    While doing this, made a workaround for apparent Xft bug which\n    loses its drawable state when switching from 132 to 80\n    columns.</li>\n\n    <li>improve font-warning messages by showing which are\n    <em>derived</em> rather than directly from resource settings\n    (suggested by Tomas Korbar). Also filter repeated font-warning\n    messages, to accommodate broken X configurations.</li>\n\n    <li>fix an inconsistency between failure to load derived wide\n    font versus failure to load derived wide-bold font (Redhat\n    #1679790). That relies upon the &ldquo;:unscaled&rdquo;\n    property which is broken in some distributions (however, recent\n    Debian and the BSDs such as MacOS work).</li>\n\n    <li>updated autoconf-252 to check X11R7 include/lib directories\n    found on some older configurations.</li>\n\n    <li>set a graphic-context for border when double-buffering is\n    active; to prevent the border color from changing when\n    switching to reverse-video.</li>\n\n    <li>build-fix for <code>--disable-ziconbeep</code>, which\n    conflicted with the new double-buffer configuration (report by\n    Brian Lindholm).</li>\n\n    <li>fix loop-limit for lookup of <code>fullscreen</code>\n    resource broken in <a href=\"#xterm_347\">xterm #347</a> (report\n    by Scott Bertilson).</li>\n  </ul>\n\n  <h1><a name=\"xterm_348\" id=\"xterm_348\">Patch #348 -\n  2019/07/22</a></h1>\n\n  <ul>\n    <li>update window-manager hints when exiting Tek4014 mode\n    (Debian #932569, patch by Jonathan Irwin).</li>\n\n    <li>fix a misformatted printf in\n    <code>report-sgr.pl</code>.</li>\n\n    <li>add configure check for termios types, to improve\n    compiler-warnings.</li>\n\n    <li>ensure that when resetting margins, to also reset\n    <code>DECLRMM</code>. This affects <code>DECCOLM</code>,\n    <code>DECALN</code> (although DEC STD 070 mentions only\n    top/bottom margins), and <code>DECSTR</code>.</li>\n\n    <li>corrected order of reset/move when setting\n    <code>DECCOLM</code>, and make it more consistent by always\n    resetting margins, rather than only when the mode is changed\n    (report by James Holderness).</li>\n\n    <li>compile-in double-buffer support by default, changing the\n    configure option to set the default resource value for\n    <code>buffered</code> to true or false.</li>\n\n    <li>take in account the reverse-video state when computing the\n    filler-color used when clearing the screen in double-buffering\n    configuration.</li>\n\n    <li>correct logic for filtering scrollbar-updates when\n    <code>buffered</code> resource is compiled-in but not enabled\n    (report by Paul Lampert).</li>\n\n    <li>improve state saved/restored for cursor-save and SGR stack\n    features.</li>\n\n    <li>improve description of 1006 and 1005 mouse modes, to avoid\n    implying that they use character-parameters (report by Bryan\n    Christ).</li>\n\n    <li>explain in <code>ctlseqs.ms</code> that some of the numeric\n    keypad keys were xterm extensions rather than VT100/VT220\n    terminal features (prompted by discussion with Thomas\n    Wolff).</li>\n\n    <li>explain in <code>ctlseqs.ms</code> how the DEC windowing\n    extension is supported by xterm.</li>\n\n    <li>add 28 rectangular editing to the primary response\n    (suggested by Thomas Wolff).</li>\n\n    <li>fix a typo, improve wording in <code>ctlseqs.ms</code>\n    (Thomas Wolff).</li>\n\n    <li>fix internal column-parameter when <code>SL</code> or\n    <code>SR</code> is used with left/right margins (patch by\n    Thomas Wolff).</li>\n\n    <li>fix off-by-one in VT52 graphics character mapping (patch by\n    Thomas Wolff).</li>\n\n    <li>use <code>_X_UNUSED</code>, etc., when available as a\n    fallback for <code>GCC_UNUSED</code>, etc., to reduce compiler\n    warnings when building with <code><em>imake</em></code>.</li>\n\n    <li>update config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_347\" id=\"xterm_347\">Patch #347 -\n  2019/06/30</a></h1>\n\n  <ul>\n    <li>fix a few minor bugs found with Coverity.</li>\n\n    <li>improve double-buffering for scrollbars combined with\n    scrolled text; add <code>bufferedFPS</code> resource to control\n    the maximum rate of screen updates (report by Mike\n    Thornburg).</li>\n\n    <li>improve fixes for <code>DECCRA</code> handling of\n    double-width characters (patch by Martin Hostettler).</li>\n\n    <li>improve discussion of ECMA-48's typographical error for\n    <code>SD</code> in <code>ctlseqs.ms</code> (prompted by report\n    by Martin Hostettler).</li>\n\n    <li>correct off-by-one in parameter limit-check for\n    <code>DECCRA</code> (report by Martin Hostettler).</li>\n\n    <li>modify <code>saveCellData</code> to handle case where\n    double-width character is partially copied; that should be\n    blanked (report/testcase by Thomas Wolff).</li>\n\n    <li>add resource <code>buffered</code> to allow\n    enabling/disabling double-buffered mode.</li>\n\n    <li>two fixes for the double-buffer configuration, prompted by\n    MacPorts' switch to double-buffering (patch by Mike Thornburg,\n    MacPorts #58313):\n      <ul>\n        <li>ensure that the needSwap flag is set after drawing\n        TrueType text</li>\n\n        <li>corrected the drawable-parameter used for the\n        bar-cursor</li>\n      </ul>\n    </li>\n\n    <li>modify <code>ScrnRefresh</code> to ignore a case where the\n    left/right halves of a double-width character have been set to\n    different video attributes. The attribute to use is in the\n    left-half (report/testcase by Thomas Wolff).</li>\n\n    <li>correct a limit-check for <code>DECCRA</code> in case the\n    target lies off-screen (report/testcase by Thomas Wolff).</li>\n\n    <li>documentation errata (report by Thomas Wolff).</li>\n\n    <li>reset flags including wraparound and reverse-wrap when\n    switching to VT52 mode, while noting that DEC's standard\n    documentation leaves that behavior <em>undefined</em> (report\n    by Thomas Wolff).</li>\n\n    <li>ensure that italic font is turned off on hard/soft resets\n    (report by Martin Hostettler).</li>\n\n    <li>improve responsiveness to X events while processing HTML or\n    SVG dumps (report by Martin Hostettler).</li>\n\n    <li>replace logic in <code>wcwidth.c</code> for detecting\n    double-width characters with binary-search table generated\n    using updated <code>uniset</code> (report by Robert Ross).</li>\n\n    <li>add test-driver for <code>wcwidth.c</code> to simplify\n    comparison with system's <code>wcwidth</code>.</li>\n\n    <li>ensure that window-manager name comparisons work when\n    active-icon is enabled, since <code><em>CSI</em>13t</code> uses\n    the window-manager name (report by Glenn Golden, Arch\n    #62818).</li>\n\n    <li>trim a stray &ldquo;experimental&rdquo; in one of the\n    comments about the tcap-query feature, which has been a\n    supported feature since 2008 (see <a href=\"#xterm_238\">patch\n    #238</a>).</li>\n  </ul>\n\n  <h1><a name=\"xterm_346\" id=\"xterm_346\">Patch #346 -\n  2019/05/27</a></h1>\n\n  <ul>\n    <li>update description of the &ldquo;default&rdquo; setting for\n    the <code>renderFont</code> resource to match the behavior in\n    <a href=\"#xterm_261\">patch #261</a> (Debian #862042).</li>\n\n    <li>account for <code>internalBorder</code> in\n    <code>useBorderClipping</code> (report by Robert Ross).</li>\n\n    <li>update table of unknown-width characters in wcwidth.c based\n    on Unicode 12.1.0 (prompted by discussion with Robert\n    Ross).</li>\n\n    <li>improve description of DECSCL versus S7C1T and S8C1T in\n    <code>ctlseqs.ms</code>.</li>\n\n    <li>improve consistency between <code><em>CSI</em>3t</code> and\n    <code><em>CSI</em>13t</code>, accounting for differences\n    between some window managers' handling of EMWH extents (report\n    by Bram Moolenaar).</li>\n\n    <li>fix a sign-extension when reporting offscreen window\n    position (report by Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_345\" id=\"xterm_345\">Patch #345 -\n  2019/05/14</a></h1>\n\n  <ul>\n    <li>updated FreeBSD test-package from recent /usr/ports\n    scripts.</li>\n\n    <li>workaround in <code>run-tic.sh</code> for HPUX, whose\n    <code>mktemp</code> prints the name of a temporary directory\n    without creating it.</li>\n\n    <li>add left/right margin capabilities to terminfo, since the\n    default terminal emulation is VT420 (suggested by Thomas\n    Wolff).</li>\n\n    <li>modify treatment of <code>reverseVideo</code> for dynamic\n    colors to make text foreground/background consistent with the\n    cursor color (prompted by discussion with Ben Wong, lsix\n    #20).</li>\n\n    <li>modify button-handling to make SGR button-release distinct\n    from button-press for button-codes starting with 8 (patch by\n    Mikulas Patocka).</li>\n\n    <li>add aliases for the sgr push/pop controls to work around\n    language limitations of C# (request by Dan Thompson).</li>\n\n    <li>correct a typo in <code>setDirectFG</code>, which could\n    cause setting of indexed-color after a direct-color to be\n    ignored.</li>\n\n    <li>add resource <code>useBorderClipping</code> as an\n    alternative to <code>useClipping</code> (request by Robert\n    Ross).</li>\n\n    <li>improve logic for displaying xterm's built-in line-drawing\n    characters vs missing glyphs, e.g., for U+2409 to U+240D (patch\n    by Robert Ross).</li>\n\n    <li>add <code>vttests/sgrPushPop2.pl</code> to illustrate how\n    selective pushes work, as well as to demonstrate push/pop of\n    the various color types supported by xterm.</li>\n\n    <li>fix a special case in <code>XTPOPSGR</code> where\n    direct-colors were not checked as a dependency of\n    indexed-colors, contrary to documentation.</li>\n\n    <li>reduce buffer-flushes for <code>OSC&nbsp;4</code> and\n    <code>OSC&nbsp;5</code> color-queries, as well as in the\n    queries for dynamic colors.<br>\n    <strong>Note:</strong> this change makes the reply for\n    <code>OSC&nbsp;5</code> use the &ldquo;5&rdquo; in the\n    response; formerly it was mapped to &rdquo;4&rdquo; after\n    adding the maximum number of colors.</li>\n\n    <li>modify <code>vttests/query-color.pl</code> to demonstrate\n    multiple queries in one request.</li>\n\n    <li>update tables of combining and unknown-width characters in\n    wcwidth.c based on Unicode 12.0.0.</li>\n\n    <li>modify response for <code>OSC&nbsp;5</code> to be\n    consistent with documentation.</li>\n\n    <li>add <code>vttests/query-dynamic.pl</code></li>\n\n    <li>modify <code>vttests/query-color.pl</code> to accept bold,\n    underline, etc., keywords to decide whether to use\n    <code>OSC&nbsp;5</code> rather than\n    <code>OSC&nbsp;4</code>.</li>\n\n    <li>modify cursor coloring to avoid a case where the cursor\n    matched the foreground color while the text was displayed in\n    reverse-video (report by Nuno Silva).</li>\n\n    <li>fix an inconsistency in X10 mouse responses from <a href=\n    \"#xterm_342\">patch #342</a> changes; the legacy protocol\n    supports only buttons 1-3.</li>\n\n    <li>reduce the number of buffer-flushes for tcap-query\n    batches.</li>\n\n    <li>modify <code>tcapquery.pl</code> to demonstrate batch\n    queries with <code>-q</code> option.</li>\n\n    <li>increase response-buffer size, and make it configurable as\n    <code>limitResponse</code> (prompted by discussion with Stephen\n    P Wall).</li>\n\n    <li>modified configure script:\n      <ul>\n        <li>check/workaround for non-POSIX manipulation of\n        predefined symbols</li>\n\n        <li>check for updated X Toolkit, which uses\n        <code>const</code>.</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>provide for secondary-selection, overlooked in <a href=\n    \"#xterm_338\">patch #338</a> (report by Emile LeBlanc).</li>\n\n    <li>documentation errata (patch by Larry Hynes).</li>\n\n    <li>improve pointer-checks in <code>Tekproc.c</code></li>\n\n    <li>revise solution for Debian #919475, to allow for\n    struct-notify events occurring as a side-effect of toggling\n    to/from full-screen mode.</li>\n\n    <li>window's border-size was incorrectly added to position when\n    maximizing window (report by Gary Langshaw).</li>\n  </ul>\n\n  <h1><a name=\"xterm_344\" id=\"xterm_344\">Patch #344 -\n  2019/02/12</a></h1>\n\n  <ul>\n    <li>add ASCII escape to default for\n    <code>disallowedPasteControls</code> (prompted by discussion\n    with Martin Hostettler).</li>\n\n    <li>fix typo in <code>ctlseqs.ms</code> (Robert Ross).</li>\n\n    <li>implement DEC Cyrillic NRCS (based on screenshots of vttest\n    provided by Markus Schmidt).</li>\n\n    <li>correct control returning sixel geometry maximum versus\n    actual size (patch by Ben Wong).</li>\n\n    <li>improve manual page for <code>resize</code> to clarify that\n    <code>resize</code> does not execute the shell commands which\n    it generates for setting environment variables.</li>\n\n    <li>improve memory-management for parser, to handle response\n    strings that might occur with <code>ENQ</code> or when\n    <code>SRM</code> mode is active (patch by Martin\n    Hostettler).</li>\n\n    <li>change <code>Comment</code> text in uxterm's desktop file\n    to work around a limitation of GNOME's GIO application\n      (<a href=\"https://gitlab.gnome.org/GNOME/gnome-shell/issues/940#note_427334\">issue\n      #940</a>). The <a href=\n      \"https://developer.gnome.org/gio/stable/gio-Desktop-file-based-GAppInfo.html#g-desktop-app-info-search\">\n      documentation</a> reads:\n      <blockquote>\n        <p>Searches desktop files for ones that match\n        <em><code>search_string</code></em>.</p>\n\n        <p>The return value is an array of <em>strv</em>s. Each\n        <em>strv</em> contains a list of applications that matched\n        search_string with an equal score. The outer list is sorted\n        by score so that the first <em>strv</em> contains the\n        best-matching applications, and so on. The algorithm for\n        determining matches is undefined and may change at any\n        time.</p>\n      </blockquote>\n    </li>\n\n    <li>a check of <code>zIconBeep</code> resource was removed in\n    double-buffer fix in <a href=\"#xterm_334\">patch #334</a>. That\n    is used to decide whether to handle struct-notify events. When\n    xterm does handle the events, it may negotiate a new\n    window-size with the window manager. In that case, the\n    <code>limitResize</code> resource setting limited the new\n    window-size to the screen-size. Amended that by eliminating the\n    limit for this special case when double-buffer is configured,\n    and restoring the check for <code>zIconBeep</code> when\n    double-buffer is not configured (Debian #919475).</li>\n\n    <li>disallow recursion which could happen if a user configures\n    the <code>answerbackString</code> resource with the\n    <code>ENQ</code> code and experiments with that code when\n    <code>SRM</code> is enabled (report by by Martin\n    Hostettler).</li>\n\n    <li>add remaining credits in <code>COPYING</code> file.</li>\n\n    <li>modify <code>run-tic.sh</code> to check if it is using an\n    older version of ncurses which does not support large terminal\n    descriptions, and if so, remove a non-essential feature to keep\n    within the 4096-byte legacy limit.</li>\n  </ul>\n\n  <h1><a name=\"xterm_343\" id=\"xterm_343\">Patch #343 -\n  2019/01/13</a></h1>\n\n  <ul>\n    <li>modify <code>run-tic.sh</code> to prefer ncurses6 over\n    ncurses5, when available.</li>\n\n    <li>add <code>COPYING</code> file, and dummy \"check\" makefile\n    rule for testing Arch packages.</li>\n\n    <li>add/update package scripts for FreeBSD and NetBSD, for\n    testing.</li>\n\n    <li>update tables of combining and ambiguous-width characters\n    in wcwidth.c based on Unicode 11.0.0.</li>\n\n    <li>modify <code>xterm-new</code> sample terminfo entry to\n    correspond to ncurses 6.1, using the SGR 1006 mouse\n    protocol.</li>\n\n    <li>improve manual page discussion of selection ownership\n    versus highlighting (prompted by discussion with Martin\n    Hostettler).</li>\n\n    <li>restore/repair <code>keepClipboard</code> feature which was\n    broken by changes in <a href=\"#xterm_338\">patch #338</a>\n    (report by Martin Hostettler).</li>\n\n    <li>improve documentation for <code>deleteIsDEL</code>\n    resource.</li>\n\n    <li>modify DECRQM response for private mode 1037 to account for\n    cases where the resource <code>deleteIsDEL</code> is initially\n    neither true nor false, but dependent upon the keyboard type\n    (report/analysis by Martin Hostettler).</li>\n\n    <li>clear pointers for pattern/fontset after destroying their\n    data when switching facename with an escape sequence (report by\n    Robert Ross).</li>\n\n    <li>modify logic for TrueType fallback fonts to match the\n    sort-order used by <code>fc-match</code> (report by Robert\n    Ross).</li>\n\n    <li>add resource setting <code>limitFontsets</code> which can\n    be used to limit or disable the new TrueType fontset feature\n    (request by Robert Ross).</li>\n  </ul>\n\n  <h1><a name=\"xterm_342\" id=\"xterm_342\">Patch #342 -\n  2019/01/03</a></h1>\n\n  <ul>\n    <li>limit mouse-button events to 11 buttons in the original\n    protocol, and 15 in the extended mouse-protocol (patch by\n    Martin Hostettler).</li>\n\n    <li>correct calculation for buttons past 11 in\n    <code>mouse-codes</code> sample script (patch by Martin\n    Hostettler).</li>\n\n    <li>disable a supplementary check added in <a href=\n    \"#xterm_341\">patch #341</a> which interferes with using\n    fontconfig to select different-sized bitmap fonts (Arch\n    #61237).</li>\n  </ul>\n\n  <h1><a name=\"xterm_341\" id=\"xterm_341\">Patch #341 -\n  2018/12/24</a></h1>\n\n  <ul>\n    <li>add options to <code>mouse-codes</code> script to\n    demonstrate that the encoding used for mouse events limits\n    button numbers to 11.</li>\n\n    <li>allow mouse button numbers up to 11 using an offset of 128\n    for button numbers 8-11 rather than the offset of 64 used for\n    wheel-mouse, etc., buttons 4-7 in <a href=\"#xterm_338\">patch\n    #338</a> (adapted from patch by Martin Hostettler).</li>\n\n    <li>correct off-by-one right-margin checks for double-width\n    character adjustments in DECERA/DECFRA (patch by Martin\n    Hostettler).</li>\n\n    <li>allocated size of selection buffer was not reset when\n    freeing the buffer in <a href=\"#xterm_338\">patch #338</a>\n    (report/analysis by Stefan Assmann).</li>\n\n    <li>modify the initial pattern passed to fontconfig to disallow\n    color bitmap fonts.</li>\n\n    <li>improve error recovery for a case where fontconfig ignores\n    the requested pattern due to override in the user's font\n    configuration (report/testcase by Stefan Assmann).</li>\n  </ul>\n\n  <h1><a name=\"xterm_340\" id=\"xterm_340\">Patch #340 -\n  2018/12/16</a></h1>\n\n  <ul>\n    <li>suppress a spurious warning about fontsets when\n    initializing menus for the toolbar configuration.</li>\n\n    <li>fix some strict compiler warnings.</li>\n\n    <li>improve checks for TrueType font, to help with the case of\n    color bitmap fonts, which fontconfig misrepresents (Arch Linux\n    #58706).</li>\n  </ul>\n\n  <h1><a name=\"xterm_339\" id=\"xterm_339\">Patch #339 -\n  2018/12/12</a></h1>\n\n  <ul>\n    <li>modify <code>CF_GNU_SOURCE</code> macro to treat\n    <em>newlib</em> as similar to <em>glibc</em>, fixing a problem\n    with the configure checks for pseudoterminals in Cygwin\n    overlooked in <a href=\"#xterm_334\">patch #334</a> updates for\n    configure-macros.</li>\n  </ul>\n\n  <h1><a name=\"xterm_338\" id=\"xterm_338\">Patch #338 -\n  2018/12/09</a></h1>\n\n  <ul>\n    <li>ignore <code>$TERMINFO</code> in the configure script if it\n    is set to a non-directory value.</li>\n\n    <li>updated configure macros:\n      <ul>\n        <li><code>CF_WITH_PCRE2</code>, modified to work with\n        Debian's (mis-numbered) pcre3 package.</li>\n\n        <li><code>CF_CC_ENV_FLAGS</code> , report preprocessor\n        options in <code>CFLAGS</code></li>\n\n        <li><code>CF_LD_RPATH_OPT</code> , suppress check if\n        <code>--disable-rpath</code> option was given.</li>\n\n        <li><code>CF_XOPEN_SOURCE</code>, add case for\n        midnightbsd</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>add a check to ensure that the filename parameter passed to\n    <code>XpmReadFileToPixmap</code> is actually a file, since that\n    function does not check (report by Ben Nott).</li>\n\n    <li>amend solution for Debian #758633 to ensure that replies\n    for bracketed paste are not sent while processing a selection\n    for <code>exec-formatted</code> (Debian #913237).</li>\n\n    <li>improve adjustments/clearing for double-width characters in\n    <code>DECERA</code>, <code>DECFRA</code>,\n    <code>DECSERA</code>.</li>\n\n    <li>improve adjustments/clearing for double-width characters\n    when doing vertical scrolling within left/right margins (patch\n    by Martin Hostettler).</li>\n\n    <li>modify wcwidth to encode a few spacing combining marks as\n    regular combining characters.</li>\n\n    <li>change compiled-in default for <code>saveLines</code> to\n    match the resource-file changed in <a href=\"#xterm_192\">patch\n    #192</a> (Debian #913815).</li>\n\n    <li>change default <code>faceSize</code> to 8.0, to simplify\n    switching back/forth between bitmap fonts and TrueType. This\n    was originally (mis)set to 14.0 in <a href=\"#xterm_148\">patch\n    #148</a>.</li>\n\n    <li>add fallback support in Xft configuration for missing\n    glyphs (prompted by discussion with Mike Burns).</li>\n\n    <li>fix a problem with using direct-colors for the background\n    color when clearing/scrolling (report by Nicholas\n    Marriott).</li>\n\n    <li>add a \"sources\" rule for the makefile's generated\n    source.</li>\n\n    <li>add a short explanation in <code>ctlseqs.ms</code>\n    discussing the differences in error-recovery for malformed\n    sequences versus unimplemented features, and amend one case for\n    consistency (prompted by discussion with Martin\n    Hostettler).</li>\n\n    <li>adjusted ifdef's so that the paste64 configure option does\n    not automatically enable the readline-mouse configure\n    option.</li>\n\n    <li>revert the change which prevented concurrent ownership of\n    different selection targets, and instead modify selection\n    storage so that different concurrent requests for different\n    selection targets will be stored/retrieved independently\n    (Debian #901249).</li>\n\n    <li>remove a check which prevented returning button-codes past\n    the documented 4/5 for wheel mouse, and add a script\n    <code>mouse-codes</code> which makes a report showing the\n    various mouse codes for different button/modifier combinations\n    (discussion with P&#345;emysl Janouch).</li>\n\n    <li>improve display and checksum for DEC Special Graphics by\n    mapping 0x5f to 0.</li>\n\n    <li>add a null-pointer check for table-ending in the\n    extended-boolean resource-handling (report by Felix von\n    Leitner).</li>\n\n    <li>remove stray <code>]</code>'s from INSTALL-file (Larry\n    Hynes).</li>\n  </ul>\n\n  <h1><a name=\"xterm_337\" id=\"xterm_337\">Patch #337 -\n  2018/09/21</a></h1>\n\n  <ul>\n    <li>regenerated configure script (report by Sven Joachim).</li>\n\n    <li>revise/improve fix for scrolling in margins\n    (report/analysis by Martin Hostettler):</li>\n\n    <li>amend change to default-translations \"select\" subset to\n    ensure that specific key-press actions are listed before\n    generic key-press actions (reports by H Merijn Brand, Sven\n    Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_336\" id=\"xterm_336\">Patch #336 -\n  2018/09/19</a></h1>\n\n  <ul>\n    <li>ensure that only one of PRIMARY and CLIPBOARD is owned by\n    xterm at a given time (Debian #901249).</li>\n\n    <li>documentation fixes (report by Lars Krueger):\n      <ul>\n        <li>document <code>SL</code> and <code>SR</code>.</li>\n\n        <li>document <code>DECRPTUI</code>, change number of digits\n        to match VT420.</li>\n      </ul>\n    </li>\n\n    <li>revise <code>omitTranslation</code> resource, e.g.,\n    splitting &ldquo;default&rdquo; into several more useful\n    categories.</li>\n\n    <li>modify mask-logic to permit <em>control-</em> and\n    <em>meta-</em> modifiers to be used in mouse protocol.</li>\n\n    <li>several fixes for parsing/state (report/testcases by Martin\n    Hostettler):\n      <ul>\n        <li>remove an old/unimplemented entry for xterm-title from\n        state table.</li>\n\n        <li>save/restore wrap-flag when scrolling, to fix an\n        inconsistency between jump-scrolling and\n        normal-scrolling.</li>\n\n        <li>improve a special case of wrapping where the cursor\n        starts beyond the right-margin, and wraps at the terminal's\n        last-column before the settable-margins can take\n        effect.</li>\n\n        <li>if origin mode is set, adjust a restored cursor column\n        relative to the left margin.</li>\n\n        <li>when scrolling a line within left/right margins,\n        correct order of the fixups needed when a double-width\n        character crosses the margin boundary.</li>\n      </ul>\n    </li>\n\n    <li>review/fix a few cases where the parsing state was not\n    reset after completing a control sequence (prompted by report\n    by Martin Hostettler).</li>\n\n    <li>disallow <code>XTCHECKSUM</code> if the corresponding\n    window-ops \"SetChecksum\" is unset.</li>\n\n    <li>add <code>print-vt-chars.pl</code> script to illustrate the\n    NRCS and codepages supported by xterm.</li>\n\n    <li>add <code>other-sgr.sh</code> script to demonstrate the\n    non-VT100 video attributes implemented in <a href=\n    \"#xterm_305\">patch #305</a>, and added a summary of their\n    introduction in ECMA-48 to the control sequences document.</li>\n\n    <li>add <code>tabs</code> and <code>-tabs</code> keywords to\n    <code>ttyModes</code> resource to simplify workaround for\n    terminal drivers which are not aware of UTF-8 (FreeBSD\n    #229682).</li>\n\n    <li>add VT5xx NRCS 7-bit Turkish and DEC Turkish.</li>\n\n    <li>add VT5xx NRCS 7-bit Hebrew and DEC Hebrew.</li>\n\n    <li>add VT5xx NRCS 7-bit Greek and DEC Greek.</li>\n\n    <li>correct a few post-VT220 codepages to make them display\n    without setting the NRCS state.</li>\n\n    <li>extend <code>vt100Graphics</code> resource to include other\n    character-sets such as the VT500 codepages in UTF-8 mode.</li>\n\n    <li>add some VT5xx codepages to help with the discussion of\n    96-character sets: <em>ISO Greek Supplemental</em>, <em>ISO\n    Hebrew Supplemental</em>, <em>ISO Latin&ndash;5\n    Supplemental</em>, and <em>ISO Latin&ndash;Cyrillic</em>.</li>\n\n    <li>improve description of the VT300-controls for designating\n    character sets, and fix a typo which indicated that some were\n    used for 94-character sets (prompted by discussion with Lars\n    Krueger).</li>\n\n    <li>add private control <code>XTCHECKSUM</code> for modifying\n    <code>checksumExtension</code>.</li>\n\n    <li>factor out xterm's <code>DECRQCRA</code> checksum\n    extensions as a resource setting\n    <code>checksumExtension</code>.</li>\n\n    <li>revise calculation of checksum for <code>DECRQCRA</code> to\n    match DEC's terminals (using screenshots of vttest provided by\n    Markus Schmidt).</li>\n\n    <li>restore a fix for memory-checksum setup of\n    <code>DECCKSR</code> from <a href=\"#xterm_315\">patch #315</a>\n    incorrectly reverted in <a href=\"#xterm_334\">patch #334</a> as\n    part of fix for <code>DECRQCRA</code>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_335\" id=\"xterm_335\">Patch #335 -\n  2018/08/14</a></h1>\n\n  <ul>\n    <li>add <code>colorInnerBorder</code> resource to make a change\n    from <a href=\"#xterm_334\">patch #334</a> configurable (reports\n    by H Merijn Brand, Gabriele Balducci).</li>\n  </ul>\n\n  <h1><a name=\"xterm_334\" id=\"xterm_334\">Patch #334 -\n  2018/08/12</a></h1>\n\n  <ul>\n    <li>modify <code>Imakefile</code> to reflect the fact that\n    NetBSD no longer has a working termcap emulation.</li>\n\n    <li>add resource-setting <code>validShells</code> which can be\n    used to augment the system's <code>/etc/shell</code> (prompted\n    by discussion with Paul Lampert).</li>\n\n    <li>stifle some useless warnings from lintian in\n    test-packages.</li>\n\n    <li>add the ncurses extension &ldquo;RGB&rdquo; to the\n    responses for the termcap-query feature.</li>\n\n    <li>improved getopts-handling in sample scripts.</li>\n\n    <li>fix some warnings from gcc8 and clang --analyze.</li>\n\n    <li>update note about incorrect documentation for\n    <code>DECRQSS</code> to include VT525 (report by Markus\n    Schmidt).</li>\n\n    <li>correct check for default-values in rectangular parsing; a\n    zero counts as a missing or default parameter (report/testcase\n    by Markus Schmidt).</li>\n\n    <li>correct some ranges in the <code>ambiguous[]</code> table\n    in wcwidth (adapted from patch by KUGA Tsutomu).</li>\n\n    <li>fix a special case with faint video attribute incorrectly\n    combined with default color.</li>\n\n    <li>add private control <code>XTREPORTSGR</code> for reporting\n    video-attributes and color on a rectangle, and script\n    <code>report-sgr.pl</code> to demonstrate it.</li>\n\n    <li>modify some of the markup in <code>ctlseqs.ms</code> to\n    work around groff's reassignment of ASCII punctuation\n    characters as documented in <em>groff_char(7)</em>.</li>\n\n    <li>treat ECMA-48 SGR 6 the same as SGR 5.</li>\n\n    <li>add private controls <code>XTPUSHSGR</code> and\n    <code>XTPOPSGR</code> for saving/restoring the current\n    video-attributes on a stack (adapted from patch by Dan\n    Thompson).</li>\n\n    <li>modify <code>DECRPM</code> response for logging enable to\n    indicate its state even when enabling/disabling it is not\n    allowed.</li>\n\n    <li>implement <code>DECSNLS</code></li>\n\n    <li>implement <code>DECRSPS</code></li>\n\n    <li>improve fill-color for double-buffer configuration, which\n    was sharing a graphic context with the cursor.</li>\n\n    <li>fix a couple of cases where double-sized VT100 characters\n    were not clipped, seen in Joe Smith's <a href=\n    \"http://www.inwap.com/pdp10/#Tymnet\">VT100 torture\n    test</a>.</li>\n\n    <li>color the inner border using the same\n    <code>borderColor</code> as the outer border, rather than\n    filling with the VT100's default background.</li>\n\n    <li>change encoding of &ldquo;THANKS&rdquo; to UTF-8.</li>\n\n    <li>modify handling of <code>DECELR</code> to recognize\n    <code>MotionNotify</code> events again, amending a check for\n    <code>allowMouseOps</code> which limited that to button-events\n    in <a href=\"#xterm_328\">patch #328</a> (Olaf Rogalsky).</li>\n\n    <li>fix some screen-painting problems with left/right margins\n    when using insert-line or delete-line (report/testcase by\n    Martin Hostettler). also fix similar case with\n    index/reverse-index.</li>\n\n    <li>several minor performance improvements using macros, e.g.,\n    inline checks for character width.</li>\n\n    <li>add <code>DECSCPP</code> and <code>DECSLPP</code> to\n    <code>DECRQSS</code>.</li>\n\n    <li>implement <code>DECSCPP</code>.</li>\n\n    <li>implement <code>DECCIR</code> and <code>DECTABSR</code>\n    presentation reports.</li>\n\n    <li>modify checksum computation for <code>DECRQCRA</code> to\n    treat uninitialized cells as blanks rather than nulls.</li>\n\n    <li>drop custom-entity from HTML-dump, use UTF-8 for &amp;nbsp;\n    (Debian #902381).</li>\n\n    <li>modify display of non-BMP characters when using bitmap\n    fonts to show a null/empty box rather than the replacement\n    character which was used in cleanup changes for <a href=\n    \"#xterm_233\">patch #233</a> (report by Christian\n    Weisgerber).</li>\n\n    <li>when setting up clipping rectangle for Xft, allow for the\n    case where xterm is only displaying a combining character,\n    where the base was already written (report by Joshua\n    Crowgey).</li>\n\n    <li>allow reset Xft's state if switching font-sizes when\n    double-buffering is used.</li>\n\n    <li>fix repainting, e.g., on resize, when double-buffering is\n    used with Xft (patch by Daniel Colascione).</li>\n\n    <li>correct some interchanged pairs of symbols in\n    <code>unicode/keysym.map</code> (Brad Town).</li>\n\n    <li>improve configure macros CF_GCC_WARNINGS, CF_GNU_SOURCE,\n    CF_POSIX_C_SOURCE, CF_TRY_XOPEN_SOURCE, CF_XOPEN_SOURCE,\n    CF_X_ATHENA_CPPFLAGS.</li>\n\n    <li>modify <code>logFile</code> resource to interpret\n    &ldquo;<code>-</code>&rdquo; as the standard output (adapted\n    patch by Colum Paget).</li>\n\n    <li>improve documentation of Tek4014 menu options; fix a case\n    where the Tek4014 window was not displayed before switching\n    modes.</li>\n\n    <li>re-correct parameter for <em>pid</em> used for DECCKSR,\n    DECRQCSR (see <a href=\"#xterm_315\">xterm #315</a>).</li>\n\n    <li>hard/soft reset now resets the cursor-blinking state that\n    may have been set via escape sequences; the cursor-blinking\n    menu-entry feature is unmodified (report by Matthieu\n    Herrb).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_333\" id=\"xterm_333\">Patch #333 -\n  2018/05/03</a></h1>\n\n  <ul>\n    <li>ensure that i18n is enabled if input-method is\n    enabled.</li>\n\n    <li>modify logic for pre-edit to update spot-location while the\n    cursor is invisible (Kakoune #1940).</li>\n\n    <li>change default icon to newer one, \"mini.xterm\".</li>\n\n    <li>install a complete set of icons, to simplify post-install\n    customization.</li>\n\n    <li>add resource <code>disallowedPasteControls</code> to extend\n    filtering of control characters from pastes.</li>\n\n    <li>add <code>print-on-error</code> action-hook, and document\n    action-hooks for dump-html, dump-svg.</li>\n\n    <li>provide action-hook for <code>print-immediate</code>, which\n    was available only as a menu-item (report by Rastislav\n    Barlik).</li>\n\n    <li>continue to improve notes in <code>ctlseqs.ms</code> which\n    mention where various controls originated.</li>\n\n    <li>add case to accept ECMA-48's bogus <code>SD</code>, but\n    document the issue in <code>ctlseqs.ms</code>.</li>\n\n    <li>add control sequence for loading XPM-icon file, using the\n    analogous control sequence from shelltool/dtterm.</li>\n\n    <li>add <code>-report-icons</code> option, to report on\n    XPM-icon and title-bar updates.</li>\n\n    <li>correct a discrepancy between locator-reports for VT220 vs\n    VT330.</li>\n\n    <li>add window-ops control sequences to complement existing\n    ones for reporting window-position and text-area size with\n    reports for text-area position and window-size.</li>\n\n    <li>display vt52 graphics mode characters.</li>\n\n    <li>correct case-statement for window-ops 10, overlooked since\n    some window managers equate vertical-maximize and\n    horizontal-maximize window hints with full-screen\n    maximize.</li>\n  </ul>\n\n  <h1><a name=\"xterm_332\" id=\"xterm_332\">Patch #332 -\n  2018/04/15</a></h1>\n\n  <ul>\n    <li>add a <code>GetChecksum</code> item to\n    <code>disallowedWindowOps</code></li>\n\n    <li>improve notes in <code>ctlseqs.ms</code> which mention\n    where various controls originated.</li>\n\n    <li>add control sequences for querying the X display size and\n    the character size, both in pixels to help eliminate some of\n    the constants in <code>esctest</code>.</li>\n\n    <li>fixes prompted by review of George Nachman's\n    <code>esctest</code> script:\n      <ul>\n        <li>add a null-pointer check and a limit-check in\n        <code>xtermCheckRect</code>.</li>\n\n        <li>correct limit-check for right-margin when processing\n        autowrapping if xterm is not built for\n        wide-characters.</li>\n\n        <li>repair logic in <code>RIS</code> to reset 132-column\n        mode when an escape sequence is used to enable\n        80/132-column switching.</li>\n\n        <li>correct array-limit for EWMH working state.</li>\n\n        <li>further improve limit-checks versus assert's (see\n        <a href=\"#xterm_315\">patch #315</a>).</li>\n\n        <li>correct order of check-margins and move-to-left margin\n        for <code>DL</code> and <code>IL</code>.</li>\n\n        <li>modify reverse-wrap to pay attention to top/bottom\n        margins as it has done for left/right margins since\n        <a href=\"#xterm_279\">patch #279</a>.</li>\n\n        <li>modify behavior of <code>DECFI</code> and\n        <code>DECBI</code> to not index the screen at the\n        left/right edge of the display unless those happen to be\n        the left/right margins.</li>\n\n        <li>add case for VT320 DSR response for keyboard\n        status.</li>\n      </ul>\n    </li>\n\n    <li>improve check for valid shell path using\n    <code>getusershell</code> and <code>endusershell</code> if\n    available, in case <code>/etc/shells</code> does not exist\n    (suggested by Rainer Orth).</li>\n\n    <li>modified configure checks for groff and man2html, to use\n    the latter by default, but allowing mandoc as a partial\n    replacement for former.</li>\n\n    <li>revisited the inconsistent copyright notices mentioned in\n    <a href=\"#xterm_165\">patch #165</a>, and eliminate the issue as\n    mentioned in this <a href=\n    \"https://invisible-island.net/personal/copyrights.html\">copyright\n    discussion</a>.</li>\n\n    <li>fix typo in this change-log (report by Sven Joachim)</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_331\" id=\"xterm_331\">Patch #331 -\n  2017/12/30</a></h1>\n\n  <ul>\n    <li>add workaround for improper grayscale adjustments made in\n    FreeType library, exposed by changes to rounding in 2.8.1,\n    which shows up as a gap in line-drawing characters (Debian\n    #880407).</li>\n\n    <li>improve a special case where a non-Unicode font's\n    line-drawing characters were not used, when specifying it via\n    the <code>utf8Fonts</code> resource, e.g.,\n      <blockquote>\n        <pre>\n        -fs 15 \\\n        -xrm '*VT100.font:12x24' \\\n        -xrm '*VT100.boldFont:12x24' \\\n        -xrm '*VT100.utf8Fonts.font: 12x24' \\\n        -xrm '*VT100.utf8Fonts.boldFont: 12x24' \\\n</pre>\n      </blockquote>\n    </li>\n\n    <li>replace constant 10msec delay for next X event with new\n    resource <code>nextEventDelay</code>, and reduce that to 1msec\n    to accommodate faster machines than used when\n    <code>-hold</code> was implemented in <a href=\n    \"#xterm_116\">1999</a> (Debian #877628).</li>\n\n    <li>add <code>scroll-to</code> action, which simplifies binding\n    a key to scroll to the beginning or end of the saved-lines\n    (Debian #880120).</li>\n\n    <li>add building blocks for alternate screen and/or title-stack\n    features in the <code>terminfo</code> file.</li>\n\n    <li>improve calculations for cell-data size.</li>\n\n    <li>change configure script to enable XHTML/SVG screen dumps by\n    default.</li>\n\n    <li>change configure script to enable 256-colors by\n    default.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>change configure script option for\n    <code>--with-man2html</code> to use improved script by\n    default.</li>\n\n    <li>add case for private mode 1044 in DECRQM, to report the\n    keepClipboard resource setting and corresponding menu\n    entry.</li>\n\n    <li>fix an inconsistency between private mode 12 (the AT&amp;T\n    610 cursor blink) and <code>DECSCUSR</code>: the former relied\n    on having the <code>cursorBlink</code> resource set initially\n    to enable the escape sequence, while the latter does not.</li>\n\n    <li>add private modes 13 and 14, as well as resource\n    <code>cursorBlinkXOR</code> to allow better control over the\n    cursor-blinking state (discussion with Bram Moolenaar).</li>\n\n    <li>modify the html and svg screen dumps to support direct\n    color</li>\n\n    <li>modify media copy (screen-printing) to support the same SGR\n    codes as <code>DECRQSS</code>, including 88/256 indexed color\n    as well as direct color.</li>\n\n    <li>improve options-parsing for query-status.pl script.</li>\n\n    <li>modify parsing of <code>SGR</code> direct-color control\n    making <em>color space identitier</em> optional. The\n    corresponding <code>DECRQSS</code> reply always returns an\n    empty (default) field for the identifier.</li>\n\n    <li>add wide-attributes to <code>DECRQSS</code> reply for\n    <code>SGR</code>.</li>\n\n    <li>add private mode 1046 to help with scripting\n    applications.</li>\n\n    <li>correct expression used for readline-flags in DECRQM; to\n    test the current flag rather than information <em>stacked</em>\n    within the same variable.</li>\n\n    <li>correct typo in <code>ctlseqs.ms</code> reference to\n    ISO-8613-6 (patch by Mike Frysinger).</li>\n\n    <li>fix lintian warning for test-package.</li>\n\n    <li>fix typo in <code>DECRQSS</code> for <code>SGR</code> 48,\n    which printed the foreground value for colors past 15. Also use\n    colon delimiter for codes 38/48 in response (report by Paul\n    LeoNerd Evans).</li>\n\n    <li>improve workaround for Debian #542434 by using the font's\n    maximum width when no ISO-8859-1 glyphs are provided (Debian\n    #879936).</li>\n\n    <li>work around a special case of <em>Xft</em>'s mismanagement\n    of its cached data by adding a check before the\n    <code>-report-fonts</code> option to ensure that it does not\n    use an <code>XftPattern</code> which may have been freed during\n    a call to <code>XftFontOpenPattern</code>.</li>\n\n    <li>improve manual page description of <code>regex</code>\n    option for <code>on<em>X</em>Clicks</code> resources (report by\n    Lukas Mai).</li>\n\n    <li>add <code>directColor</code> resource.</li>\n\n    <li>additional manpage macro cleanup (Branden Robinson, Debian\n    #880551).</li>\n\n    <li>add optional support for direct-colors (adapted from patch\n    by anonymous &ldquo;Nibby Nebbulous&rdquo;).</li>\n\n    <li>improve legacy/NRC character set mapping (patch by Thomas\n    Wolff), e.g.,\n      <ul>\n        <li>enable alternate NRC set designators for French and\n        French Canadian, &lsquo;9&rsquo; and &lsquo;f&rsquo;\n        respectively, as documented in ctlseqs. (&lsquo;9&rsquo; is\n        documented for VT510, &lsquo;f&rsquo; is a Kermit\n        feature).</li>\n\n        <li>correct the Unicode value in the <em>DEC Technical</em>\n        table to show capital delta.</li>\n\n        <li>referring to\n          <blockquote>\n            <p><a href=\n            \"http://vt100.net/docs/vt220-rm/table2-3b.html\">http://vt100.net/docs/vt220-rm/table2-3b.html</a><br>\n\n            <a href=\n            \"http://vt100.net/docs/vt320-uu/appendixe.html\">http://vt100.net/docs/vt320-uu/appendixe.html</a></p>\n          </blockquote>\n\n          <p>add entries for the <em>DEC Supplemental Graphics</em>\n          table to display 0x28/0xa8 as &curren; and 0x5d/0xdd as\n          &Yuml;.</p>\n        </li>\n\n        <li>referring to\n          <blockquote>\n            <p><a href=\n            \"http://www.vt100.net/charsets/technical.html\">http://www.vt100.net/charsets/technical.html</a></p>\n          </blockquote>\n\n          <p>alter the Unicode values used for 0x2b through 0x2c to\n          use <em>curly braces</em> to work with the\n          &ldquo;middle&rdquo; parts displayed with 0x2f and\n          0x30.</p>\n        </li>\n\n        <li>modify the VT220 &ldquo;Supplemental&rdquo; table,\n        giving a hint that it was probably meant to be\n        &ldquo;Supplemental Graphics&rdquo; and is the same as\n        VT320's table.</li>\n      </ul>\n    </li>\n\n    <li>quiet a few font-warnings when a derived fontname cannot be\n    opened, overlooked in refactoring of font resources in <a href=\n    \"#xterm_328\">patch #328</a> (initially reported on <a href=\n    \"https://cygwin.com/ml/cygwin/2017-06/msg00255.html\">Cygwin\n    mailing list</a>, with <a href=\n    \"https://cygwin.com/ml/cygwin/2017-07/msg00216.html\">followup</a>).</li>\n\n    <li>correct error response for <code>DECRQSS</code> broken in\n    cleanup of Coverity reports in <a href=\"#xterm_288\">patch\n    #288</a> (reports by Bram Moolenaar and IWAMOTO Kouichi).</li>\n\n    <li>improve <code>DECRPM</code> responses by returning <em>mode\n    not recognized</em> for modes which may not be settable due to\n    the selected <code>decTerminalID</code> resource (report by\n    IWAMOTO Kouichi).</li>\n\n    <li>correct logic for <code>print-immediate</code> action, and\n    enable corresponding menu entry (patch by Lauri\n    Tirkkonen).</li>\n\n    <li>add configure option <code>--with-pcre2</code> (patch by\n    David Michael).</li>\n\n    <li>fix a misspelled subsection title in ctlseqs.ms and add a\n    note regarding blink which was rendered as bold in X11R6.\n    Blinking text was implemented in <a href=\"#xterm_60\">Patch\n    #60</a>.</li>\n\n    <li>fix typos in <code>xterm.man</code> (patches by Sven\n    Joachim, Larry Hynes).</li>\n\n    <li>fix typography in <code>xterm.man</code> (patch by Bjarni\n    Ingi Gislason, Debian #869248).</li>\n\n    <li>fix typo in <code>INSTALL</code> (Larry Hynes).</li>\n\n    <li>add <code>xterm-direct</code> terminal description based on\n    changes introduced in <a href=\"#xterm_277\">patch #277</a>, and\n    relying upon ncurses <code><strong>RGB</strong></code>\n    extension.</li>\n\n    <li>modify <code>xterm-new</code> terminal description to use\n    ECMA-48 <code>REP</code>, reflecting its use in xterm since\n    <a href=\"#xterm_32\">patch #32</a> (1996).</li>\n\n    <li>clarify comment in ctlseqs.ms regarding blink: it has been\n    part of xterm since <a href=\"#xterm_60\">patch #60</a>\n    (1998).</li>\n\n    <li>update ftp URLs in documentation.</li>\n  </ul>\n\n  <h1><a name=\"xterm_330\" id=\"xterm_330\">Patch #330 -\n  2017/06/20</a></h1>\n\n  <ul>\n    <li>updates for ReGIS (Ross Combs):\n      <ul>\n        <li>remove redundant text command error check which broke\n        <code>T(B)</code> and <code>T(E)</code>.</li>\n\n        <li>retain the loading alphabet number across multiple\n        &ldquo;L&rdquo; commands.</li>\n\n        <li>add <code>S(T)</code> delay handler.</li>\n\n        <li>fix some color handling error messages.</li>\n\n        <li>add stubbed-out macrograph handling.</li>\n\n        <li>use <code>fragment_remaining()</code> and\n        <code>fragment_consumed()</code> instead of manually\n        checking position / length in various places.</li>\n\n        <li>rename some local variables in string / extent / option\n        parsing</li>\n\n        <li>wrap some long lines.</li>\n\n        <li>move macrograph command handling out of the\n        top-level.</li>\n      </ul>\n    </li>\n\n    <li>add a summary of the italic fonts loaded to\n    <code>-report-fonts</code> option.</li>\n\n    <li>modify the font-lookup for italics to allow for\n    &ldquo;<code>-i-</code>&rdquo; if no match is found with slant\n    &ldquo;<code>-o-</code>&rdquo; (prompted by patch by Ben\n    Wong).</li>\n\n    <li>change default values for <code>mkSamplePass</code> and\n    <code>mkSampleSize</code> to reflect generally-improved locale\n    support in various operating systems (FreeBSD #219800).</li>\n\n    <li>modify <code>wcwidth.c</code> to return -1 for non-Unicode\n    values, and adjust a couple of blocks to better match\n    assumptions about ambiguous-width characters in other\n    implementations. Also modify <code>wcwidth.c</code> to support\n    configurable soft-hyphen, so there is no drawback to using this\n    version rather than a system <code>wcwidth</code>.</li>\n\n    <li>amend change made in <a href=\"#xterm_328\">patch #328</a>\n    for cursor-visibility to handle case where an application is\n    updating the reverse-video state (FreeBSD #219800).</li>\n\n    <li>update tables of combining and ambiguous-width characters\n    in wcwidth.c based on Unicode 10.0.0.</li>\n\n    <li>build-fix for <code>--enable-sixel-graphics</code> without\n    <code>--enable-regis-graphics</code> (reports by Sven Joachim,\n    FreeBSD #219945).</li>\n  </ul>\n\n  <h1><a name=\"xterm_329\" id=\"xterm_329\">Patch #329 -\n  2017/06/12</a></h1>\n\n  <ul>\n    <li>add control sequences for reading the Sixel and ReGIS\n    graphics sizes (suggested by Ben Wong).</li>\n\n    <li>add a workaround for <code>wcwidth</code> returning -1 for\n    characters which should have been printable (FreeBSD\n    #219800).</li>\n\n    <li>fix a bug in font initialization from <a href=\n    \"#xterm_328\">patch #328</a> (FreeBSD #219800).</li>\n\n    <li>fix a special case in <code>HideCursor</code> which\n    assigned a bold font to the slot used for normal font in\n    changes for italics in <a href=\"#xterm_307\">patch #307</a>\n    (Debian #858304).</li>\n\n    <li>updates for ReGIS (Ross Combs):\n      <ul>\n        <li>Strings specified with no command are used as\n        \"comments\". Print these in the log when tracing.</li>\n\n        <li>Catch attempts to use \"alternate display\" mode (AKA\n        \"blink\") from the GIGI, but do not implement it.</li>\n\n        <li>The <code>T(M)</code> command should only multiply the\n        height by 10, not 20.</li>\n\n        <li>Make the <code>S(E)</code> command reset more state\n        than just the screen contents.</li>\n\n        <li>Remove two rotation variables which were only being\n        printed.</li>\n\n        <li>Numerous minor fixes and comment updates in the\n        <code>R</code> command.</li>\n\n        <li>Unknown <code>R</code> command option names trigger an\n        empty response.</li>\n\n        <li>Fix the output position after printing rotated text (it\n        was missing the the sign before).</li>\n\n        <li>Fix the position change with pixelvectors and rotated\n        text (the rotation transform was not being applied).</li>\n\n        <li>Update the <em>TODO</em> list and remove a verification\n        <em>FIXME</em> (slanted text positioning is correct as\n        is).</li>\n\n        <li>Emulate the approximately 1.4x enlargement for text\n        which isn't rotated at right angles.</li>\n\n        <li>Only update the color planes specified in the plane\n        mask (the <code>W</code> command's <code>F</code>\n        option).</li>\n      </ul>\n    </li>\n\n    <li>fix a bug introduced by the changes to font information in\n    <a href=\"#xterm_328\">patch #328</a>. When processing the\n    \"checkfont\" option of the <code>locale</code> resource, the\n    program referred to the <em>request</em> data, to an array\n    which was only allocated in the <em>new/result</em> widget\n    (report by H Merijn Brand).</li>\n\n    <li>fix a missing assignment initialization to make the\n    <code>utf8</code> resource control whether escape sequences to\n    enable/disable UTF-8 mode are allowed.</li>\n  </ul>\n\n  <h1><a name=\"xterm_328\" id=\"xterm_328\">Patch #328 -\n  2017/06/01</a></h1>\n\n  <ul>\n    <li>revise parser for <code>charClass</code> resource, making\n    these improvements:\n      <ul>\n        <li>accept octal and hexadecimal values</li>\n\n        <li>allow embedded whitespace</li>\n\n        <li>allow the class after colon to be optional, e.g., to\n        clear class settings for a range of characters.</li>\n      </ul>\n    </li>\n\n    <li>add command-line option\n    <code>-report-charclass</code>.</li>\n\n    <li>fix most lintian warnings about test-package</li>\n\n    <li>add <code>eraseSavedLines</code> resource.</li>\n\n    <li>document <code>DECSED&nbsp;3</code> in\n    <code>ctlseqs.ms</code> (report by Ben Longmans).</li>\n\n    <li>improve integration between configure-events and updates\n    for reported screensize, in particular when switching between\n    vt100 and tek4014 modes.</li>\n\n    <li>modify selection-highlighting of reverse-video text to keep\n    that distinct, e.g., by reversing the selection foreground and\n    background colors as one would expect. This fixes a \"useless\"\n    case in the description of\n    <code>highlightColorMode</code>.</li>\n\n    <li>improve fix for Debian #759734, addressing a case where\n    non-colored cursor would be invisible against reverse-video\n    (see <a href=\"#xterm_311\">patch #311</a>).</li>\n\n    <li>updates for ReGIS (Ross Combs):\n      <ul>\n        <li>the \"H\" option of the \"T\" command should multiply by\n        10, not 20.</li>\n\n        <li>display unknown glyphs as a solid block.</li>\n\n        <li>given a succession of text-direction options, use the\n        last.</li>\n\n        <li>fix the direction of ReGIS slanted text so that\n        negative values produce oblique output .</li>\n\n        <li>fix the ReGIS text direction option to only rotate\n        characters when no following size option is used.</li>\n      </ul>\n    </li>\n\n    <li>update terminfo to better match corresponding entries in\n    ncurses, e.g., <code>u8</code> pattern to match the VT220,\n    VT420, etc., primary responses, as well as adding\n    <code>smxx</code> and <code>rmxx</code>.</li>\n\n    <li>fixes from J&ouml;rg Sommer:\n      <ul>\n        <li>corrected a trace-message regarding maximum\n        graphics-size; it used the similar ReGIS maximum size which\n        might not be configured.</li>\n\n        <li>in <code>do_select_regex</code>, clear selection if\n        there is no match. If the regex does not match anything\n        around the cursor, the selection returned must be empty,\n        otherwise the whole line is treated as a match. This way\n        the command defined by <code>exec-selectable</code> will\n        not be executed if there is no match.</li>\n\n        <li>modify limit in <code>do_select_regex</code> to include\n        the character at the cursor in the match, making it easier\n        to type something and then hit the key to trigger\n        <code>exec-selectable</code>.</li>\n\n        <li>If <code>exec-selectable</code> or\n        <code>insert-selection</code> is triggered by a mouse\n        button click, the position of the mouse pointer should be\n        used. This makes it easier to address any position on the\n        window and it makes it possible to use the mouse, e.g., for\n        applications such as mutt where you cannot move the\n        cursor.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>DECRC</code> to save/restore xterm's\n    last-column flag used to control wrapping behavior rather than\n    manipulating <code>DECAWM</code> (report/analysis by Mattias\n    Engdeg&aring;rd).</li>\n\n    <li>add configure option <code>--enable-terminfo-env</code> to\n    use the value set by <code>--with-own-terminfo</code> for the\n    <code>$TERMINFO</code> environment variable. That variable was\n    set automatically for HPUX, but would be useful in other\n    systems, e.g., for Solaris (request by Jeff Wieland).</li>\n\n    <li>fix a race condition when setting up a signal handler to\n    timeout if opening <code>/dev/tty</code> hangs (patch by Tobias\n    Stoeckmann).</li>\n\n    <li>review/cleanup resources which were not in the manual page\n    (report by Maxwell Anselm):\n      <ul>\n        <li>add manual page description as needed.</li>\n\n        <li>drop resource name for <code>menuBar</code>, as\n        unnecessary.</li>\n\n        <li>modify fallback numeric value for\n        <code>regisScreenSize</code> resource to match that for\n        <code>maxGraphicSize</code>.</li>\n      </ul>\n    </li>\n\n    <li>updated configure macros <code>CF_ADD_CFLAGS</code>,\n    <code>CF_CC_ENV_FLAGS</code>, <code>CF_GNU_SOURCE</code>,\n    <code>CF_MATH_LIB</code>, and <code>CF_XOPEN_SOURCE</code> from\n    other program-changes.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>change &ldquo;maximum screensize&rdquo; assumed by\n    <code>resize</code> to 9999x9999, to accommodate people using\n    the <em><code>Unreadable</code></em> font.</li>\n\n    <li>drop <code>Utility</code> from default value of\n    <code>--with-desktop-category</code> (Debian #780176).</li>\n\n    <li>widen the configure script pattern used for finding related\n    \".desktop\" files, including &ldquo;Terminal&rdquo;</li>\n\n    <li>several minor improvements to font utility functions:\n      <ul>\n        <li>provide for later modification to implement font-sets\n        by parsing the font resources as comma-separated\n        lists.</li>\n\n        <li>parse <code>-fn</code> and <code>-fa</code> similarly,\n        using &ldquo;x:&rdquo; and &ldquo;xft:&rdquo; prefixes for\n        font name/family strings to distinguish between XLFD and\n        Xft font specifications.</li>\n\n        <li>use loops to iterate over font classes</li>\n\n        <li>use getters/setters for font data to allow for\n        on-demand lookups.</li>\n\n        <li>make the debugging trace for missing glyph less verbose\n        since that interferes with the <code>-report-fonts</code>\n        option.</li>\n\n        <li>refactor <code>xtermLoadFont</code> to make it clearer\n        how some fonts are derived from others, e.g., bold,\n        wide.</li>\n\n        <li>make the triggering and suppressing of font-warnings\n        more consistent by storing the last state in the\n        widget.</li>\n\n        <li>reduce font-warnings by checking for repeated\n        warnings.</li>\n      </ul>\n    </li>\n\n    <li>add <code>vttests/query-status.pl</code></li>\n\n    <li>add <code>vttests/closest-rgb</code></li>\n\n    <li>add special case for displaying soft-hyphen if it happens\n    to fall at the right margin, and omitting similar case such as\n    the BIDI markers, where a zero-width character is neither a\n    control character nor a combining character (Debian\n    #844325).</li>\n\n    <li>modify logic for <code>OSC&nbsp;52</code>, <em>manipulate\n    selection data</em>, to update the selection-time to include\n    the latest X events. This fixes some cases where the selection\n    was invalid, e.g., after an event due to focus-follows-mouse\n    (report/testcase by Stephane Chauveau).</li>\n\n    <li>revise macro <code>CastMallocN</code> as new macro\n    <code>TextAlloc</code> to make explicit use of\n    <code>sizeof(char)</code> (prompted by patch by Cade\n    Foster).</li>\n\n    <li>add <em>&ldquo;Mouse Ops&rdquo;</em> menu entry and related\n    resources to allow runtime disabling/enabling of the mouse\n    protocol escape sequences (discussion with Bob Proulx).</li>\n\n    <li>improve discussion of mouse actions versus protocol in the\n    manual (discussion with Bob Proulx).</li>\n\n    <li>improve discussion of environment variables in the manual,\n    pointing out where some features (such as termcap and the\n    System5 <code>COLUMNS</code> and <code>LINES</code> variables)\n    are used rarely, mainly to support legacy applications.</li>\n\n    <li>add examples of <code>translations</code> resource for\n    select/paste, and for font-size changes to the manual.</li>\n\n    <li>minor reordering of some entries in <code>ctlseqs.ms</code>\n    for consistency (report by Arran Ubels).</li>\n\n    <li>add <code>-s</code> option to <code>256colors2.pl</code>\n    and <code>88colors2.pl</code>, to demonstrate modifying the\n    &ldquo;system&rdquo; colors 0&ndash;15.</li>\n\n    <li>omit <code>XFT_SPACING</code> property from call to <code>\n      XftPatternBuild</code>, to work around a bug in\n      <em>fontconfig</em> for handling Google Go fonts, whose names\n      sort in an order not expected by <em>fontconfig</em>, causing\n      the request for a monospaced font to return <em>italics</em>,\n      e.g.,\n      <blockquote>\n        <pre>\n$ fc-match 'Go Mono:spacing=monospace'\nGo-Mono-Italic.ttf: \"Go Mono\" \"Italic\"\n(report by Giacomo Boffi on <a href=\n\"http://unix.stackexchange.com/questions/324941/xterm-displays-an-italic-face-instead-of-regular\">Stackoverflow</a>).\n\n</pre>\n      </blockquote>\n    </li>\n\n    <li>modify <code>minstall.in</code> to improve a workaround\n    added to the manual page in <a href=\"#xterm_182\">patch #182</a>\n    to avoid having the C preprocessor used in the imake\n    configuration strip out the comments in the character classes\n    section (reports by Ted Unangst, Anthony J Bentley).</li>\n  </ul>\n\n  <h1><a name=\"xterm_327\" id=\"xterm_327\">Patch #327 -\n  2016/10/07</a></h1>\n\n  <ul>\n    <li>add a check in the function which handles end-of-line\n    wrapping to ensure that C1 controls are allocated one column\n    when <code>allowC1Printable</code> is set (Debian\n    #738794).</li>\n\n    <li>use consistent error-checking after <code>strtol</code>\n    calls, fixes a case where a query with OSC 6 did not ensure\n    there was a valid color number (report by Alex Smith).</li>\n\n    <li>add <code>-baudrate</code> option, for testing\n    ncurses.</li>\n\n    <li>always generate the <code>CASE_<em>xxx</em></code> symbols\n    in <code>VTparse.h</code> and <code>Tekparse.h</code>, as part\n    of a change to improve debug-logging. This makes the build\n    always depend upon <code>awk</code>.</li>\n\n    <li>modify <code>allowC1Printable</code> to disallow codes\n    160-254 as being equivalent to codes 32-126 when parsing escape\n    sequences (Debian #839220).</li>\n\n    <li>amend fix from <a href=\"#xterm_326\">patch #326</a> for\n    TrueType fonts to exclude the hidden character used for\n    double-width cells (report by Grady Martin).</li>\n\n    <li>fix a typo in <code>ctlseqs.ms</code></li>\n  </ul>\n\n  <h1><a name=\"xterm_326\" id=\"xterm_326\">Patch #326 -\n  2016/09/25</a></h1>\n\n  <ul>\n    <li>updated appdata file (report by Richard Hughes).</li>\n\n    <li>improve discussion of the different terminal emulations\n    provided by xterm in the manual page.</li>\n\n    <li>add examples of setting the icon title with/without the\n    window title in the manual (Debian #833984).</li>\n\n    <li>correct a limit-check when using a numeric value for\n    extended Booleans e.g., <code>*fullscreen:3</code> rather than\n    a name such as <code>*fullscreen:never</code>.</li>\n\n    <li>add action <code>allow-bold-fonts</code></li>\n\n    <li>improved formatting fixes for manual page, using script to\n    find mismatches in spelling of resources, actions and menu\n    entries.</li>\n\n    <li>improve documentation of logging resources.</li>\n\n    <li>fix a special case of flickering cursor by adding\n    <code>GraphicsExpose</code> to the list of event types that\n    should not trigger making the mouse cursor visible (patch by\n    Joe Peterson).</li>\n\n    <li>correct initialization of line-drawing in VT52-mode,\n    overlooked in changes for <a href=\"#xterm_297\">patch #297</a>\n    (report/patch by Ben Wiley Sittler).</li>\n\n    <li>minor clarification of form-feed versus line-feed in\n    <code>ctlseqs.ms</code> (suggested by David Kemper).</li>\n\n    <li>amend fix for Debian #738794 to restore a check for missing\n    characters which are <em>not</em> combining characters. Also\n    fill in a corresponding special case for TrueType fonts (Debian\n    #827905).</li>\n  </ul>\n\n  <h1><a name=\"xterm_325\" id=\"xterm_325\">Patch #325 -\n  2016/06/05</a></h1>\n\n  <ul>\n    <li>improve manual page discussion of function keys (discussion\n    with Ross Combs).</li>\n\n    <li>further improve fix for Debian #545220 in <a href=\n    \"#xterm_248\">patch #248</a>, to avoid conflict with combining\n    characters (Debian #738794).</li>\n\n    <li>improve <code>-hold</code> option to avoid 100% CPU usage\n    with NetBSD after closing the shell, which makes subsequent\n    checks for X input events fail (prompted by patch by Pierre\n    Pronchery).</li>\n\n    <li>review <code>#ifdef</code> statements, listed those which\n    do not have a configure option in\n    <code>xtermcfg.hin</code>.</li>\n\n    <li>fixed one case where the menu sensistivity for\n    <em>Print-All Immediately</em> and <em>Print-All on Error</em>\n    was not properly ifdef'd.</li>\n\n    <li>modify terminfo entries for 16-, 88- and 256-color to reset\n    palette with <code>rs1</code> capability.</li>\n\n    <li>accept <code>legacy</code> value of <code>-kt</code> as\n    synonym for the <code>oldXtermFKeys</code> resource, and extend\n    the full-reset logic to use the keyboard type set via\n    <code>-kt</code>.</li>\n\n    <li>modify <code>ioctl</code> calls for <code>I_PUSH</code> to\n    first check if the module has been added, using\n    <code>I_FIND</code>. This is needed for newer Solaris libraries\n    with c11 support (adapted from patch by Alan Coopersmith).</li>\n\n    <li>add check in <code>getXtermCombining</code> to ensure that\n    combining characters were allocated (report by Tor\n    Andersson).</li>\n\n    <li>add configure option <code>--without-xinerama</code> to\n    allow suppressing the extension (Gentoo #580936).</li>\n\n    <li>update keysym2ucs.c based on Unicode 9.0</li>\n\n    <li>fixed most <code>cppcheck --enable=all</code> warnings,\n    including for style (prompted by report by David Binderman).\n    There was one bug-fix:\n      <ul>\n        <li>RGB least-squares computation in\n        <code>allocateClosestRGB</code> used only one ordinate</li>\n      </ul>\n    </li>\n\n    <li>add <code>cppcheck</code> to lint-like programs in\n    configure script and makefile.</li>\n\n    <li>fix some const correctness issues and point out an array\n    lifetime issue (Ross Combs).</li>\n\n    <li>updates for SIXEL and ReGIS (Ross Combs):\n      <ul>\n        <li>Sixel drawing should still happen after an error if\n        some commands have been processed</li>\n\n        <li>Tiny steps toward reporting ReGIS input</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_324\" id=\"xterm_324\">Patch #324 -\n  2016/03/10</a></h1>\n\n  <ul>\n    <li>updated configure macro <code>CF_LD_RPATH_OPT</code> from\n    ncurses changes.</li>\n\n    <li>provide alternate fix for Juha Nurmela's report by turning\n    on POSIX signals if <code>_POSIX_C_SOURCE</code> is at least\n    one. This is done to improve the behavior if a direct child\n    process receives a <code>STOP</code> signal.</li>\n\n    <li>revert change to <code>CF_POSIX_C_SOURCE</code> from\n    <a href=\"#xterm_323\">patch #323</a> (reports by Ashish Shukla,\n    Christian Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_323\" id=\"xterm_323\">Patch #323 -\n  2016/03/07</a></h1>\n\n  <ul>\n    <li>updated appdata and desktop files to add keywords (report\n    by Richard Hughes).</li>\n\n    <li>modify configure macro <code>CF_POSIX_C_SOURCE</code> to\n    accommodate some systems, e.g., FreeBSD, which have separated\n    their implementation specific preprocessor symbols from the\n    POSIX ones, requiring both to be defined (report by Juha\n    Nurmela).</li>\n\n    <li>change the directory to the current working dir of the\n    child process in exec-formatted and exec-selectable actions\n    (patch by Alexander Pohoyda).</li>\n\n    <li>correct typo in xterm.man (patch by Larry Hynes).</li>\n\n    <li>correct typo in ctlseqs.ms (report by Shriramana\n    Sharma).</li>\n\n    <li>add feature to support XHTML and SVG screen dumps (patch by\n    Jens Schweikhardt).</li>\n\n    <li>correct response to DECRQSS when terminal id is less than\n    400 (patch by Iwamoto Kouichi).</li>\n  </ul>\n\n  <h1><a name=\"xterm_322\" id=\"xterm_322\">Patch #322 -\n  2016/01/02</a></h1>\n\n  <ul>\n    <li>fix regression due to incorrect fix for compiler warning\n    when allocating storage for <code>/etc/shells</code> (reports\n    by Ashish Shukla, Debian #809646).</li>\n  </ul>\n\n  <h1><a name=\"xterm_321\" id=\"xterm_321\">Patch #321 -\n  2015/12/31</a></h1>\n\n  <ul>\n    <li>add resource <code>keepClipboard</code>, escape sequence\n    and action <code>keep-clipboard</code>.</li>\n\n    <li>add optional feature to capture text copied to clipboard at\n    the time of copying rather than at the time the clipboard\n    contents are requested for pasting (patch by Milan\n    Mehner).</li>\n\n    <li>improve a special case where the <code>-e</code> option was\n    used to pass a single-quoted command via <code>luit</code>, by\n    wrapping it in a &ldquo;sh -c&rdquo; (report by Keith\n    Hedger).</li>\n\n    <li>minor fix for type-cleanliness when allocating storage for\n    <code>/etc/shells</code> (Tobias Stoeckmann).</li>\n\n    <li>fix a typo in manual page (Dan Church).</li>\n\n    <li>fix minor file-descriptor leak; after calling\n    <code>openpty</code>, the slave's file descriptor is not needed\n    (report by Juha Nurmela).</li>\n\n    <li>editorial change to ctlseqs.ms (report by David\n    Gomboc).</li>\n\n    <li>minor updates for autoconf macros.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_320\" id=\"xterm_320\">Patch #320 -\n  2015/08/28</a></h1>\n\n  <ul>\n    <li>correct documentation for <code>%t</code> format (report by\n    Martin Tournoij).</li>\n\n    <li>add <code>%R</code> for consistency to\n    <code>exec-formatted()</code> and\n    <code>insert-formatted()</code> actions.</li>\n\n    <li>add <code>%r</code> format to <code>exec-formatted()</code>\n    and <code>insert-formatted()</code> actions (patch by Martin\n    Tournoij).</li>\n\n    <li>Amend fix for Debian #794201 (report forwarded from\n    Christian Jachmann by Emanuel Haupt, Debian #797008).</li>\n  </ul>\n\n  <h1><a name=\"xterm_319\" id=\"xterm_319\">Patch #319 -\n  2015/08/19</a></h1>\n\n  <ul>\n    <li>add a section to <code>ctlseqs.ms</code> discussing control\n    sequences and ECMA-48, to explain why C1 controls do not occur\n    in the decoded characters from UTF-8 byte streams (prompted by\n    discussion with Poul-Henning Kamp).</li>\n\n    <li>modify check for cursor-theme from <a href=\n    \"#xterm_301\">patch #301</a> to also check if the resource\n    <code>Xcursor.theme</code> is set to a nonempty value before\n    fallback to xterm's own dummy theme (request by Robert\n    Kloefkorn).</li>\n\n    <li>explain in <code>ctlseqs.ms</code> that some keys which\n    normally send SS3-prefixes are changed to CSI-prefixes if\n    key-modifiers are passed as parameters (report by George\n    Nachman).</li>\n\n    <li>correct double-free of font information when multiple\n    problems are found, particularly for the wide fonts loaded via\n    the <code>-wc</code> option (report/testcase by Nelson\n    Beebe).</li>\n\n    <li>make configure option <code>--enable-builtin-xpms</code>\n    actually work (report by William Bulley).</li>\n\n    <li>correct combination of <code>-ls</code> and <code>-e</code>\n    options for utempter configuration (Debian #794201).</li>\n\n    <li>NetBSD build-fix for OPT_RENDERFONT versus OPT_SHIFT_FONTS\n    (patch by Matthew Green, forwarded by Thomas Klausner).</li>\n\n    <li>fix a few minor bugs found with Coverity.</li>\n\n    <li>update pixelvector handling (Ross Combs):\n      <ul>\n        <li>split pixel-based and coord-based functions with common\n        parts factored out to a \"raw\" function</li>\n\n        <li>add a \"step\" variant which loads a single PV digit</li>\n      </ul>\n    </li>\n\n    <li>make the graphic dirty upon resize or clear, fixing some\n    missing refreshes (patch by Ross Combs)</li>\n\n    <li>fixes scrolling to use user coordinates and move in the\n    correct direction (patch by Ross Combs)</li>\n\n    <li>several fixes/improvements for ReGIS whitespace and\n    page-handling (patch by Ross Combs).</li>\n  </ul>\n\n  <h1><a name=\"xterm_318\" id=\"xterm_318\">Patch #318 -\n  2015/04/12</a></h1>\n\n  <ul>\n    <li>rename new(er) configure option\n    <code>--enable-initial-erase</code> to\n    <code>--enable-pty-erase</code>, since that conflicted with an\n    existing option (report by Jens Schweikhardt).</li>\n\n    <li>fix cut/paste error in <code>--with-builtin-xpms</code>\n    configure option (reports by Jens Schweikhardt, Ross\n    Combs).</li>\n\n    <li>fix minor formatting issue in xterm manual (report by Jens\n    Schweikhardt).</li>\n\n    <li>eliminate unnecessary \"#(vi\" markers in autoconf macros by\n    using \"(\" to begin case-statement cases (suggested by Jens\n    Schweikhardt).</li>\n\n    <li>minor fixes to improve <code>const</code> usage (Ross\n    Combs).</li>\n  </ul>\n\n  <h1><a name=\"xterm_317\" id=\"xterm_317\">Patch #317 -\n  2015/03/27</a></h1>\n\n  <ul>\n    <li>adapt example for <code>exec-formatted</code> from <a href=\n    \"http://lukas.zapletalovi.com/2013/07/hidden-gems-of-xterm.html\">\n    Luk&aacute;&scaron; Zapletal's</a> webpage to manual (Debian\n    #780008).</li>\n\n    <li>add a short usage section to the xterm manual, including\n    notes on setting the window title (Debian #742477).</li>\n\n    <li>revise a change made to <code>ICH</code> in <a href=\n    \"#xterm_314\">patch #314</a> to address limit-checks\n    (reports/testcases by Zolt&aacute;n K&eacute;ri and Joe\n    Peterson, also reported by Christian Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_316\" id=\"xterm_316\">Patch #316 -\n  2015/03/07</a></h1>\n\n  <ul>\n    <li>revert change to make <code>DCH</code> honor top/bottom\n    scrolling margins. For the record, both the VT420 and VT520\n    reference manuals incorrectly state that <em>\"DCH has no effect\n    outside the scrolling margins.\"</em></li>\n\n    <li>fix regression in <code>DCH</code> introduced in adjustment\n    for limit-check in <a href=\"#xterm_314\">patch #315</a>\n    (report/testcase by Zolt&aacute;n K&eacute;ri, also reported by\n    Christian Weisgerber).</li>\n\n    <li>correct default value for configure option\n    <code>--enable-initial-erase</code>; it should be \"False\", but\n    in <a href=\"#xterm_315\">patch #315</a> it was \"Maybe\", which\n    differed from default set in <a href=\"#xterm_192\">patch\n    #192</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_315\" id=\"xterm_315\">Patch #315 -\n  2015/03/02</a></h1>\n\n  <ul>\n    <li>change default for <code>--enable-narrowproto</code> for\n    Cygwin to \"no\" to better match contemporary configurations\n    (report by Jens Schweikhardt, prompted by <a href=\n    \"http://stackoverflow.com/questions/28137618/what-is-a-narrow-prototype-and-why-would-i-need-one/28334574?noredirect=1#comment45022128_28334574\">\n    discussion</a>).</li>\n\n    <li>provide <code>OSC&nbsp;106</code> as an alternative to\n    <code>OSC&nbsp;6</code>, avoiding conflict with one of\n    Terminal.app's undocumented escape sequences (report by Egmont\n    Koblinger).</li>\n\n    <li>fix an off-by-one in comparison when autowrap and\n    left/right margins are combined (report by George\n    Nachman).</li>\n\n    <li>modify <code>DECBI</code> and <code>DECFI</code> to work\n    outside the left/right margins, since the vague VT520 reference\n    manual could support that interpretation (suggested by George\n    Nachman).</li>\n\n    <li>correct response for <code>DECSCUSR</code> in\n    <code>DECRQSS</code> (report/analysis by George Nachman).</li>\n\n    <li>add <code>DECSLRM</code> to list for <code>DECRQSS</code>\n    in ctlseqs.ms (report by George Nachman).</li>\n\n    <li>improve limit-checks versus assert's in the debugging\n    version (reports by George Nachman).</li>\n\n    <li>correct a problem with multiple writes to the right-margin\n    when autowrap is turned off (report by George Nachman, also\n    reported in Gnome #744819 by Ulf Magnusson).</li>\n\n    <li>modify <code>DCH</code> to honor top/bottom and left/right\n    margins (report by George Nachman).</li>\n\n    <li>correct off-by-one in comparison so that <code>DL</code>\n    honors left/right margins (report by George Nachman).</li>\n\n    <li>correct logic of <code>DECSCL</code>, which always set\n    8-bit controls as a side-effect (report by George\n    Nachman).</li>\n\n    <li>correct loop limit for <code>DECSED&nbsp;1</code>, when\n    <code>DECSCA</code> is enabled (report by George Nachman).</li>\n\n    <li>fix a entry in csi_table for &ldquo;<code>$</code>&rdquo;,\n    needed for <code><em>CSI</em>&nbsp;[&nbsp;$&nbsp;z</code>\n    (report by George Nachman).</li>\n\n    <li>remove restriction from <a href=\"#xterm_279\">patch #279</a>\n    changes on <code>DECIC</code> and <code>DECDC</code> to\n    left-right mode (report by George Nachman).</li>\n\n    <li>correct PID value returned in response to DECRQCRA\n    (report/analysis by George Nachman).</li>\n\n    <li>fix an ifdef'ing problem, where\n    <code>--disable-dec-locator</code> would turn off logic needed\n    for <code>DECIC</code> and <code>DECDC</code> (report by George\n    Nachman).</li>\n\n    <li>correct order of parameters in report for\n    <code><em>CSI</em>&nbsp;1&nbsp;9&nbsp;t</code>, which gives the\n    screensize in characters (report by George Nachman).</li>\n\n    <li>add null pointer checks for a case in DECCRA where part of\n    the target rectangle lies outside the screen limits (report by\n    George Nachman).</li>\n\n    <li>remove extra \"6\" for selective erase from DA1 response\n    (report by George Nachman).</li>\n\n    <li>support Xinerama screen specification in geometry parsing\n    (patch by Nicolas George).</li>\n\n    <li>add configure option <code>--enable-initial-erase</code> to\n    set <code>ptyInitialErase</code> consistently with manpage, as\n    well as adding a table in manpage to clarify the relationship\n    between the resources related to the backarrow key (Debian\n    #775952).</li>\n\n    <li>add configure <code>--enable-builtin-xpms</code> to\n    simplify compiling-in the icons introduced in <a href=\n    \"#xterm_284\">patch #284</a> (prompted by discussion with\n    William Bulley).</li>\n\n    <li>fix/improve autoconf macros:\n      <ul>\n        <li>CF_WITH_APP_DEFAULTS, add paths for OSX</li>\n\n        <li>CF_WITH_MAN2HTML, configure option \"--with-man2html\"\n        provides \"man2html\" as alternative to groff's man/html\n        conversion</li>\n      </ul>\n    </li>\n\n    <li>fix some minor issues in manpage (Jens Schweikhardt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_314\" id=\"xterm_314\">Patch #314 -\n  2014/12/28</a></h1>\n\n  <ul>\n    <li>fix a minor bug in the termcap-specific version of\n    <code>resize</code> when the lines or columns values are at the\n    very end of an incomplete termcap string (prompted by coverity\n    report).</li>\n\n    <li>improve paste64 feature (report by Olaf Rogalsky)\n      <ul>\n        <li>fix &ldquo;<code>p</code>;&rdquo; command in\n        <code>paste64.pl</code> example.</li>\n\n        <li>modify <code>_OwnSelection</code> to allow the paste64\n        control to cause primary/clipboard selections to be\n        disowned and cleared.</li>\n\n        <li>omit an extra \"=\" used in padding, to make the base64\n        response a multiple of four characters.</li>\n\n        <li>modify <code>_ConvertSelectionHelper</code> to not stop\n        converting on embedded nulls in the primary or clipboard\n        selection. That makes the behavior consistent with\n        cut-buffers. Nulls are not passed on to the application\n        because they are used for separators in the X library calls\n        that convert <code>XTextProperty</code> values.</li>\n      </ul>\n    </li>\n\n    <li>add configure option <code>--with-man2html</code> to allow\n    an alternative to groff's man/html conversion.</li>\n\n    <li>review and modify resource-settings which can be set via\n    control sequences, etc:\n      <ul>\n        <li>add <code>OSC&nbsp;6</code>, to enable/disable colors\n        set via <code>OSC&nbsp;5</code>, without changing the color\n        assignments (prompted by patch by Ingo Br&uuml;ckl).</li>\n\n        <li>add command-line option <code>-itc</code> for\n        italics.</li>\n\n        <li>add <code>colorIT</code> and <code>colorITMode</code>\n        for italics, like <code>colorBD</code>, etc.</li>\n\n        <li>guard <code>allowPasteControls</code> against\n        modification by <code>editres</code>.</li>\n      </ul>\n    </li>\n\n    <li>change <code>passedPty</code> from fixed-length to\n    allocated to ensure that it is long enough to hold the\n    <code>-S</code> option value (report by Ben Longbons).</li>\n\n    <li>improve ReGIS graphics initialization (Ross Combs):\n      <ul>\n        <li>add a new string resource to set the default ReGIS\n        font.</li>\n\n        <li>fix a caching problem where the font name wasn't taken\n        into consideration when looking up cached metrics.</li>\n\n        <li>enables use of fractional values in coordinates (which\n        in turn allows setting the coordinates to something like\n        [0,1][1,0])</li>\n\n        <li>doubles the minimum ReGIS graphic to 200x200</li>\n\n        <li>set the default ReGIS image size to \"auto\"</li>\n\n        <li>fix some swapped width/height parameters in TRACE\n        messages</li>\n\n        <li>add support for scaling and mirrored coordinate systems\n        to the screen address command</li>\n\n        <li>sets a minimum ReGIS graphics size of 100x100 --\n        smaller address ranges will be scaled up</li>\n\n        <li>reset the image if either the width or height is zero\n        (which should happen together or not at all, but switching\n        the logic gets rid of some parentheses)</li>\n\n        <li>adds support for alternate screen coordinates (just\n        offsets, not inverted coordinates or scaling)</li>\n\n        <li>keeps the graphics state across ReGIS calls unless P1\n        or P3 entry codes are used</li>\n\n        <li>changes loops to continue after parsing whitespace to\n        allow trailing whitespace</li>\n\n        <li>fixes some incorrect character casts</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_313\" id=\"xterm_313\">Patch #313 -\n  2014/11/28</a></h1>\n\n  <ul>\n    <li>add <code>regisScreenSize</code> resource setting to allow\n    custom screensizes for ReGIS graphics (prompted by discussion\n    with Scott Froebe).</li>\n\n    <li>fix some minor issues in manpage (Jens Schweikhardt).</li>\n\n    <li>improve ReGIS font-handling (Ross Combs):\n      <ul>\n        <li>remove \"random junk\" generation for unknown\n        characters</li>\n\n        <li>add xterm extension to load user glyphs for alphabet\n        0</li>\n\n        <li>add xterm extension to specify loading an alphabet from\n        a font by name</li>\n\n        <li>fix bug with use of empty alphabet slots which caused\n        slot 0 to be clobbered</li>\n\n        <li>update/clarify ReGIS-related comments</li>\n\n        <li>add DECprint extension for printing/clearing the screen\n        (only clearing is performed)</li>\n      </ul>\n    </li>\n\n    <li>improve ReGIS colorspec conversion (Ross Combs):\n      <ul>\n        <li>avoid some floating point math for colorspace\n        conversion</li>\n\n        <li>move two copies of colorspec parsing to a single\n        function</li>\n\n        <li>change colorspec parsing to handle components being out\n        of order or with spaces and commas between them</li>\n\n        <li>add support for an extension where RGB components can\n        be given instead of HLS</li>\n      </ul>\n    </li>\n\n    <li>improve use of const, e.g., for the <code>LineData</code>\n    pointers (patch by Ross Combs).</li>\n\n    <li>clip of graphics that overlap the scrollback buffer and alt\n    screen (patch by Ross Combs).</li>\n\n    <li>amend change to focus-change events in <a href=\n    \"#xterm_287\">patch #287</a> to limit it to suppressing the\n    reset of the urgency-hint, because some useful\n    <code>FocusOut</code> events were lost (report by Joe\n    Peterson).</li>\n\n    <li>modify dpkg build-script to configure xterm-dev as an\n    <code>x-terminal-emulator</code> alternative.</li>\n\n    <li>extend the <code>--with-xterm-symlink</code> feature to\n    make symbolic links for the other programs and scripts.</li>\n\n    <li>minor fix to <code>vttests/resize.pl</code> to avoid\n    undefined variable when receiving broken/missing response,\n    e.g., from mrxvt.</li>\n\n    <li>change the way that ReGIS graphics are refreshed (patch by\n    Ross Combs):\n      <ul>\n        <li>it pre-composes any overlapping graphics to avoid\n        unnecessary and flickering draws</li>\n\n        <li>it adds a three-dimensional lookup table for RGB -&gt;\n        pixel values and uses this across all graphics</li>\n\n        <li>it draws in line segments when there is a run of the\n        same color</li>\n\n        <li>in cases where there are no transparent parts, it uses\n        an XImage to draw</li>\n\n        <li>it hooks into the double-buffering support if it is\n        enabled (though this doesn't seem to get rid of all\n        flicker).</li>\n      </ul>\n      This has the effect of reducing flicker and speeding up\n      redraws.\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_312\" id=\"xterm_312\">Patch #312 -\n  2014/09/28</a></h1>\n\n  <ul>\n    <li>undo change to <code>do_select_regex()</code> in <a href=\n    \"#xterm_311\">patch #311</a> (reports by H Merijn Brand,\n    Sven-Haegar Koch, Debian #762978).</li>\n  </ul>\n\n  <h1><a name=\"xterm_311\" id=\"xterm_311\">Patch #311 -\n  2014/09/18</a></h1>\n\n  <ul>\n    <li>mention <code>xclip</code> in manpage as an alternative\n    workaround for copying clipboard data, noting that\n    <code>selectToClipboard</code> (see <a href=\"#xterm_209\">patch\n    #209</a>) is the recommended approach (Debian #639094).</li>\n\n    <li>correct comparison in do_select_regex() of working position\n    against starting column.</li>\n\n    <li>correct initialization for regular-expression feature of\n    <code>exec-selectable</code> and <code>insert-selectable</code>\n    actions (Debian #758633).</li>\n\n    <li>modify logic for <code>exec-formatted</code> and\n    <code>insert-formatted</code> actions to ensure that the\n    formatting occurs just after the selection is received (Debian\n    #758633).</li>\n\n    <li>account for state of reverse-video in special case of\n    cursor coloring (Debian #759734).</li>\n\n    <li>fix a sign-extension problem in ReGIS support, as well as\n    correcting a case where ignored-characters were not really\n    ignored (patch by Ross Combs).</li>\n\n    <li>Enable the \"Escape Sequence\" menu entry when an OSC&nbsp;50\n    is received. Also disable it if the escape sequence specifies\n    no font (Debian #760208).</li>\n\n    <li>improve fix for the <code>fontsel</code> menu entry from\n    <a href=\"#xterm_304\">patch #304</a>: because the recovery used\n    the \"current font\", it would fail if one first selected a valid\n    font, then an invalid font (Debian #760207).</li>\n\n    <li>correct an off-by-one in limit-check for\n    <code>ScrnLimitChar</code> function (report by Egmont\n    Koblinger).</li>\n  </ul>\n\n  <h1><a name=\"xterm_310\" id=\"xterm_310\">Patch #310 -\n  2014/07/25</a></h1>\n\n  <ul>\n    <li>update package/freebsd files based on xterm #309 port.</li>\n\n    <li>adapt changes from Minux3.2 which ported <a href=\n    \"#xterm_197\">xterm #197</a>, to allow building on that platform\n    both using <code>imake</code> as well as using the configure\n    script.</li>\n\n    <li>update precompose.c based on Unicode 7.0</li>\n\n    <li>build-fix for <code>--with-Xaw3dxft</code> option (report\n    by Emanuel Haupt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_309\" id=\"xterm_309\">Patch #309 -\n  2014/07/13</a></h1>\n\n  <ul>\n    <li>modify configure script to work around debris left by\n    XQuartz upgrades.</li>\n\n    <li>modify test-package scripts to enable ReGIS graphics.</li>\n\n    <li>improvements/additions to ReGIS graphics, e.g., drawing\n    text (Ross Combs).</li>\n\n    <li>add <code>--with-Xaw3dxft</code>, to link with Xaw 3d xft\n    library (Stephen P Wall).</li>\n\n    <li>amend reset for cursor-shape to take into account\n    <code>cursorUnderline</code> resource (report by Christian\n    Weisgerber).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_308\" id=\"xterm_308\">Patch #308 -\n  2014/06/19</a></h1>\n\n  <ul>\n    <li>corrected font used for clipping double-width bitmap fonts\n    from <a href=\"#xterm_307\">patch #307</a> changes to work around\n    mis-scaled fonts (Debian #752947).</li>\n\n    <li>improve wording of a warning message.</li>\n  </ul>\n\n  <h1><a name=\"xterm_307\" id=\"xterm_307\">Patch #307 -\n  2014/06/17</a></h1>\n\n  <ul>\n    <li>fill background for top/bottom parts of\n    double-width/double-height characters, to cover occasional gaps\n    due to bitmap font-scaling (report by Egmont Koblinger).</li>\n\n    <li>amend resets for keyboard-type, pointer-mode and\n    title-modes from <a href=\"#xterm_305\">xterm #305</a> changes to\n    account for resource settings (Debian #751351).</li>\n\n    <li>modify <em>printAttributes</em> feature to include new SGR\n    codes.</li>\n\n    <li>modify cursor show/hide logic to work with italic\n    fonts.</li>\n\n    <li>do clipping and filling for a case with bitmap-fonts and\n    italics when the font server returns only a \"close\" match\n    (report/testcase by Egmont Koblinger).</li>\n\n    <li>adjust loop comparison for underlining to display\n    underlines on 5x8 font as in <a href=\"#xterm_304\">patch\n    #304</a> (Debian #750733).</li>\n\n    <li>amend fix for Freedesktop #15979 (Debian #750733).</li>\n\n    <li>amend xterm.appdata.xml, making it validate with current\n    schema.</li>\n  </ul>\n\n  <h1><a name=\"xterm_306\" id=\"xterm_306\">Patch #306 -\n  2014/06/03</a></h1>\n\n  <ul>\n    <li>fixes for display-errors in new SGR codes (report by Egmont\n    Koblinger).</li>\n  </ul>\n\n  <h1><a name=\"xterm_305\" id=\"xterm_305\">Patch #305 -\n  2014/06/02</a></h1>\n\n  <ul>\n    <li>add <code>xterm.appdata.xml</code> (request by Richard\n    Hughes). By the way, none of the <em>released</em> validators\n    yet handle <code>&lt;licence&gt;</code> tags (or\n    <code>&lt;metadata_license&gt;</code>, etc).</li>\n\n    <li>fix memory leaks in bitmap font-name caching.</li>\n\n    <li>other changes to hard-reset behavior:\n      <ul>\n        <li>reset keyboard-type on hard-reset.</li>\n\n        <li>reset pointer-mode (<code>pointerMode</code>) on\n        hard-reset</li>\n\n        <li>reset title-modes (<code>titleModes</code>) on\n        hard-reset</li>\n\n        <li>reset cursor-shape on hard or soft-reset</li>\n\n        <li>reset LEDs on hard-reset.</li>\n\n        <li>reset DECSACE on hard-reset.</li>\n      </ul>\n    </li>\n\n    <li>reset bracketed-paste mode on hard-reset (suggested by\n    Egmont Koblinger).</li>\n\n    <li>modify UTF-8 decoder to account for\n    <code>allowC1Printable</code> resource.</li>\n\n    <li>revise <code>getXftColor</code> to ensure that its sequence\n    number will not overflow in long-running sessions.</li>\n\n    <li>minor fix to selection to prevent hidden character from\n    being returned in selection data (report by Egmont\n    Koblinger).</li>\n\n    <li>add <code>-sh</code> to help-message.</li>\n\n    <li>amend check for incomplete fonts to always decide that a\n    character is missing if the font lacks per-character metrics\n    (prompted by Freedesktop #15979).</li>\n\n    <li>minor reorganization to implement &ldquo;filler&rdquo; SGR\n    features. There are no established applications which rely upon\n    these; some people find them amusing.\n      <ul>\n        <li>separate bits used to manage drawing state from\n        attribute-bits.</li>\n\n        <li>implement SGR codes 2, 3, 9, 21 and their corresponding\n        resets.</li>\n\n        <li>add configure option <code>--disable-wide-attrs</code>\n        to disable the feature.</li>\n      </ul>\n    </li>\n\n    <li>additional changes for ReGIS support (Ross Combs):\n      <ul>\n        <li>fix some arc drawing bugs and add support for pattern\n        shading.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_304\" id=\"xterm_304\">Patch #304 -\n  2014/05/03</a></h1>\n\n  <ul>\n    <li>add debugging check for parsing table entries, fixed a few\n    inconsistencies.</li>\n\n    <li>handle utmp/utmpx strings consistently with new function\n    that null-pads unused locations.</li>\n\n    <li>build-fix for imake configuration with FreeBSD 9 and later,\n    to account for replacing <code>utmp</code> with\n    <code>utmpx</code>.</li>\n\n    <li>improve handling of the <code>fontsel</code>\n    (font-selection) menu item:\n      <ul>\n        <li>initialize the menu entry differently if the toolbar\n        configuration is used, i.e., enabling it without attempting\n        to use the current selection as a font name. Because of the\n        way in which the toolbar is setup, this attempt usually\n        failed, and would result in a warning.</li>\n\n        <li>if the menu action fails, e.g., no font can be loaded\n        for the given selected name, then recover by resuming with\n        the current font. Before, the recovery went to the default\n        font. That was done to work around missing bitmap font in\n        <a href=\"#xterm_276\">patch #276</a>.</li>\n      </ul>\n    </li>\n\n    <li>document OSC&nbsp;119 in the control sequences listing\n    (report by Egmont Koblinger).</li>\n\n    <li>modify special handling of <code>XF86Paste</code> or\n    <code>SunPaste</code> keysyms (see <a href=\"#xterm_227\">patch\n    #227</a>) to use the standard shift/lock modifiers in case\n    those are, for example, used in level 3 in an XKB file (patch\n    by Matthieu Herrb).</li>\n\n    <li>configure macro updates:\n      <ul>\n        <li>drop the <code>-no-gcc</code> option from\n        CF_INTEL_COMPILER</li>\n\n        <li>modify CF_XOPEN_SOURCE to suppress the check for\n        defining _XOPEN_SOURCE on Solaris</li>\n      </ul>\n    </li>\n\n    <li>reduce bss storage used for ReGIS/Sixel modules, as well as\n    cleanup storage usage in other modules.</li>\n\n    <li>initial changes for ReGIS support (Ross Combs):\n      <ul>\n        <li>document control-sequences</li>\n\n        <li>separate ifdef's for sixel and color-register\n        features</li>\n\n        <li>add configuration for VT382</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_303\" id=\"xterm_303\">Patch #303 -\n  2014/03/06</a></h1>\n\n  <ul>\n    <li>improve check for <code>/etc/shells</code> to allow its\n    entries to be symbolic links.</li>\n\n    <li>fix a regression in <a href=\"#xterm_302\">patch #302</a>\n    fixes relating to interaction of <code>SHELL</code> and\n    <code>XTERM_SHELL</code> variables (Debian #740919).</li>\n\n    <li>improve manpage discussion of use of\n    <code>/etc/shells</code> for validating the <code>SHELL</code>\n    environment variable.</li>\n\n    <li>further improve the approximation for color map by ignoring\n    bits which would not be applied by the rgb masks for the\n    current visual (report by Joe Peterson).</li>\n\n    <li>add <code>-report-colors</code> to usage-message (report by\n    Joe Peterson).</li>\n  </ul>\n\n  <h1><a name=\"xterm_302\" id=\"xterm_302\">Patch #302 -\n  2014/03/02</a></h1>\n\n  <ul>\n    <li>amend approximation for color map introduced in <a href=\n    \"#xterm_277\">patch #277</a> to make that apply only to\n    <code>TrueColor</code> (adapted from patch by Joe\n    Peterson).</li>\n\n    <li>add <code>-report-colors</code> option, to show colors as\n    they are allocated.</li>\n\n    <li>fix some gcc <code>-Wcast-qual</code> warnings.</li>\n\n    <li>correct app-defaults location for CentOS-4 in\n    xterm.spec</li>\n\n    <li>improve check in <code>minstall.sh</code> for X manpage's\n    section number; add sample dependencies for the relevant\n    documentation package to packaging test-scripts (prompted by\n    Novell #779474).</li>\n\n    <li>modify sample build-scripts for dpkg and rpm to ensure that\n    <code>vttests</code> scripts are uncompressed and\n    executable.</li>\n\n    <li>modify Perl scripts in <code>vttests</code> to use\n    <code>env</code> to find Perl rather than relying on\n    <code>/usr/bin/perl</code> This makes the sample scripts usable\n    with NetBSD and other systems using <em>pkgsrc</em>.</li>\n\n    <li>amend check from <a href=\"#xterm_301\">patch #301</a> for\n    valid shell to permit existing <code>SHELL</code> value to\n    specify the shell; clarify the behavior in the manpage (report\n    by Emmanuel Thom&eacute;).</li>\n\n    <li>amend change to wide-character processing from <a href=\n    \"#xterm_257\">patch #257</a> to allow switching to/from UTF-8\n    encoding if the <code>utf8</code> resource was not set to\n    &ldquo;always&rdquo; (report by Honza Maly).</li>\n\n    <li>fix incorrect free from <a href=\"#xterm_301\">patch #301</a>\n    changes, if explicit program without <code>-e</code> option is\n    a valid shell (patch by Romain Francoise).</li>\n  </ul>\n\n  <h1><a name=\"xterm_301\" id=\"xterm_301\">Patch #301 -\n  2014/01/19</a></h1>\n\n  <ul>\n    <li>OSC&nbsp;104 and 105 did not accept parameter to reset a\n    specific color (patch by Egmont Koblinger).</li>\n\n    <li>add configure check for <code>initgroups</code>, and use\n    that function to complement its use of <code>setgid</code>\n    (prompted by patch by Miroslav Lichvar).</li>\n\n    <li>improve manpage description of scrollbar translations\n    versus the vt100 translations (Debian #723573).</li>\n\n    <li>add a few paragraphs to manpage explaining the implications\n    of xterm's reliance on X Toolkit for command-line parsing.</li>\n\n    <li>modify cursor-theme logic to check if the environment\n    variable <code>XCURSOR_THEME</code> is set to a nonempty value\n    before constructing a dummy them (prompted by similar check\n    added in OpenBSD CVS).</li>\n\n    <li>add check for a case where TrueType bold font is missing a\n    glyph where the non-bold font has it. Temporarily switch to the\n    non-bold font to draw the glyph (report by David\n    Demelier).</li>\n\n    <li>minor documentation fixes for ctlseqs.ms</li>\n\n    <li>only set <code>SHELL</code> environment variable to\n    programs found in <code>/etc/shells</code> (prompted by\n    patch/report by Al Poole).</li>\n\n    <li>build-fix, when <code>--disable-wide-chars</code>\n    <code>--disable-boxchar</code> is used (prompted by patch by\n    Andrey Panov).</li>\n  </ul>\n\n  <h1><a name=\"xterm_300\" id=\"xterm_300\">Patch #300 -\n  2013/12/03</a></h1>\n\n  <ul>\n    <li>amend workaround for <code>Xcursor</code> library from\n    <a href=\"#xterm_298\">patch #298</a>; the suggested solution for\n    Debian #466704 fell afoul of a bug in <code>Xcursor</code>\n    which treated an empty value for <code>Inherits=</code> as a\n    valid theme&mdash;and resulted in a stack overflow due to\n    unbounded recursion. Certain environments such as XFCE4 exposed\n    the bug. A related report in Debian #531679 was closed without\n    following the recommendation to limit stack recursion in this\n    library (reported by Sergey V Dyatko, Debian #731269).</li>\n  </ul>\n\n  <h1><a name=\"xterm_299\" id=\"xterm_299\">Patch #299 -\n  2013/12/01</a></h1>\n\n  <ul>\n    <li>fix regression in line-drawing from <a href=\n    \"#xterm_297\">patch #297</a> changes for NRCS exposed by change\n    to <code>assumeAllChars</code> resource in <a href=\n    \"#xterm_298\">patch #298</a> (report by Markus Waldeck).</li>\n  </ul>\n\n  <h1><a name=\"xterm_298\" id=\"xterm_298\">Patch #298 -\n  2013/11/27</a></h1>\n\n  <ul>\n    <li>quiet a warning about ambiguity when <code>-h</code>\n    command-line option is parsed, since <code>-help</code> is used\n    rather than the options mentioned in the message. This warning\n    was caused by fixes in <a href=\"#xterm_272\">patch\n    #272</a>.</li>\n\n    <li>remove an extra check for keypad-mode which interfered with\n    the <a href=\"#xterm_280\">patch #280</a>\n    <code>modifyKeyboard</code> feature for the numeric keypad\n    (report by David Conners).</li>\n\n    <li>change default for <code>assumeAllChars</code> resource\n    (Debian #725682). There are unresolved issues with Terminus\n    fonts, e.g., Debian #722017.</li>\n\n    <li>add <code>-report-fonts</code> command-line option and\n    <code>reportFonts</code> resource to optionally report the\n    fonts which are loaded, and their metrics such as the number of\n    missing glyphs.</li>\n\n    <li>work around <code>Xcursor</code> library to make\n    <code>pointerColor</code> resource work as documented (Debian\n    #466704, analysis by Vincent Lef&egrave;vre).</li>\n\n    <li>amend change from <a href=\"#xterm_297\">patch #297</a> for\n    ASCII-equivalents to ensure that missing characters which\n    happen to be double-width are padded to the expected number of\n    columns. Also, correct the choice between normal/wide Xft fonts\n    used when checking for missing characters (reported by WU Yue,\n    Debian #728949, Gentoo #491334).</li>\n\n    <li>modify sixel-graphics drawing to account for scrollbar\n    width (report by Mario Edelmann).</li>\n\n    <li>fix remaining issue with <code>DECNRCM</code>; the British\n    character set was confused with ISO Latin-1 (report by Hayaki\n    Saito).</li>\n\n    <li>build-fix for <code>--disable-boxchars</code> configure\n    option.</li>\n\n    <li>updated configure macros, from ongoing work on lynx and\n    ncurses.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_297\" id=\"xterm_297\">Patch #297 -\n  2013/09/10</a></h1>\n\n  <ul>\n    <li>modify check for missing cells in bitmap font to work\n    around terminus 10646 encoding, which is mostly missing, add\n    <code>assumeAllChars</code> resource to provide the older\n    behavior.</li>\n\n    <li>modify macros used to check for missing cells in bitmap\n    fonts to pick up a long-overlooked improvement made to xfd in\n    XFree86.</li>\n\n    <li>improve workaround for groff versus ASCII-equivalents;\n    <a href=\"#xterm_185\">patch #185</a> had overlooked Xft\n    configuration (reported by anonymous user on Arch Linux\n    forum).</li>\n\n    <li>review/extend <code>DECNRCM</code> support (prompted by\n    report by Hayaki Saito asking about the two \"A\" codes).\n      <ul>\n        <li>make pasting of DECNRCM data work by translating the\n        pasted data into the selected encoding.</li>\n\n        <li>limit mode changes to VT220 and up.</li>\n\n        <li>ignore SCS for National Replacement Characters if\n        <code>DECNRCM</code> is not set.</li>\n\n        <li>add tables and logic to decode SCS controls ending with\n        \"%\" and one additional character. This expects the parsing\n        of SCS to VT320.</li>\n\n        <li>also added parsing for SCS of DEC Supplemental and DEC\n        Technical, which are for VT2xx and VT3xx respectively.</li>\n\n        <li>implement VT220 Multinational character set \"GR\" aka\n        \"DEC Supplemental Graphic\".</li>\n\n        <li>DEC Technical character set based on <a href=\n        \"http://www.vt100.net/charsets/technical.html\">vt100.net\n        description</a>.</li>\n\n        <li>implement Portuguese NRC.</li>\n\n        <li>provide for temporarily switching to/from NRC mode from\n        UTF-8 mode when <code>DECNRCM</code> is set or reset.</li>\n      </ul>\n    </li>\n\n    <li>minor fix to assert's found while testing examples from\n    <a href=\"https://gist.github.com/ttdoda\">ttdoda's\n    slrm-test1.txt</a>.</li>\n\n    <li>modify <code>DECLRMM</code> to not update the cursor\n    position (report by Iwamoto Kouichi forwarded by Hayaki\n    Saito).</li>\n\n    <li>modify cursor-position report to take origin-mode into\n    account (report by Hayaki Saito, see also <a href=\n    \"https://github.com/gnachman/iTerm2/pull/129\">iTerm2 pull\n    request 129</a>).</li>\n\n    <li>correct off-by-one comparison in when handling\n    carriage-return at left margin (patch by Iwamoto Kouichi,\n    forwarded by Hayaki Saito).</li>\n\n    <li>improve handling of <code>faceName</code> resource when a\n    \"size=\" property is embedded in it, by using that size to\n    replace the default <code>faceSize</code> resource. This lets\n    xterm honor the other faceSize resources (report by Jens\n    Schweikhardt).</li>\n\n    <li>improve OSC&nbsp;52 selection-data by setting its timestamp\n    to correspond to the most-recent event received by xterm, to\n    ensure that calls to <code>XtOwnSelect</code> succeed even if\n    the selection is manipulated solely through the keyboard\n    (prompted by patch by Richard Tollerton).</li>\n\n    <li>change configure-script defaults for \"luit\" and\n    \"wide-chars\" options to match the values used in the imake\n    configuration, to lessen user surprise if they are accustomed\n    to building xterm using imake(report by Andries E\n    Brouwer).</li>\n\n    <li>improve the imake-related configuration's check if xterm is\n    started in a locale that uses UTF-8 encoding. Before, this\n    checked the locale settings only for \"UTF-8\", now it checks\n    ignoring case for \"UTF-8\" and \"UTF-8\" (report by Andries E\n    Brouwer).</li>\n  </ul>\n\n  <h1><a name=\"xterm_296\" id=\"xterm_296\">Patch #296 -\n  2013/07/10</a></h1>\n\n  <ul>\n    <li>improve experimental sixel feature (Ross Combs).</li>\n\n    <li>modify delimiter in configure macro used to add a library\n    after a given library to avoid confusion with <code>-Wl</code>\n    pass-through options to linker (NetBSD #48031).</li>\n\n    <li>fix quoting in expression used to trim extra libraries from\n    <a href=\"#xterm_295\">patch #295</a> changes (report by Thomas\n    Klausner).</li>\n  </ul>\n\n  <h1><a name=\"xterm_295\" id=\"xterm_295\">Patch #295 -\n  2013/07/06</a></h1>\n\n  <ul>\n    <li>adjust order of libraries to work around incomplete symbol\n    resolution when using <code>--as-needed</code> option\n    (ArchLinux #36047).</li>\n\n    <li>minor fix for <code>plink.sh</code>, for IRIX64.</li>\n  </ul>\n\n  <h1><a name=\"xterm_294\" id=\"xterm_294\">Patch #294 -\n  2013/07/05</a></h1>\n\n  <ul>\n    <li>add note in ctlseqs.ms for CPR response pointing out a\n    potential point of confusion with the string sent by a modified\n    F1 key (suggested by Bram Moolenaar).</li>\n\n    <li>improve <code>plink.sh</code> by checking if the linker\n    supports the <code>--as-needed</code> option (suggested by\n    David Philippi).</li>\n\n    <li>improve clearing for private mode 1049 when switching to\n    the alternate screen (Debian #711758).</li>\n\n    <li>amend fix from <a href=\"#xterm_292\">patch #292</a> by\n    removing now-unneeded chunk which introduced problem in\n    selection (Debian #714527).</li>\n\n    <li>add definition to optionally override compiled-in class for\n    xterm from makefile, needed for test-packages.</li>\n\n    <li>add configure option\n    <code>--enable-sixel-graphics</code></li>\n\n    <li>add experimental support for sixel graphics (Ross\n    Combs).</li>\n  </ul>\n\n  <h1><a name=\"xterm_293\" id=\"xterm_293\">Patch #293 -\n  2013/05/27</a></h1>\n\n  <ul>\n    <li>modify sample xterm.spec to use newer icon</li>\n\n    <li>add configure option <code>--with-icon-symlink</code> to\n    work around systems which map icon requests for to a single\n    \"xterm\" icon, but neglect to install the icon needed for window\n    decorations (report by H Merijn Brand).</li>\n\n    <li>improve parameterizing of sample xterm.spec</li>\n\n    <li>amend fix for printer from <a href=\"#xterm_280\">patch\n    #280</a>, removing a reset of the signal handler for\n    <code>SIGCHLD</code> (report by Joe Julian).</li>\n\n    <li>set environment variable <code>XTERM_FILTER</code> if a\n    locale-filter is used.</li>\n\n    <li>enable <code>DEBUG</code> logic when\n    <code>--enable-trace</code> configure option is given.</li>\n\n    <li>improve description of <code>initialFont</code>,\n    <code>set-vt-font</code> and <code>set-tex-text</code> in\n    manpage (Debian #707899).</li>\n\n    <li>fix regression from <a href=\"#xterm_292\">patch #292</a>;\n    selecting a word that ended at the right margin without\n    wrapping would not select the last cell (report by Christian\n    Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_292\" id=\"xterm_292\">Patch #292 -\n  2013/04/25</a></h1>\n\n  <ul>\n    <li>add limit-check when double-click selects a word; if the\n    saved-lines were scrolled back and the word selected wrapped at\n    the screen's lower right corner, an assertion was triggered\n    (patch by Taketo Kabe).</li>\n\n    <li>correct limit-check in <code>unsaveEditBufLines</code>,\n    fixing a case where enlarging the terminal size could show a\n    blank line where there actually is available text (patch by\n    Bertram Felgenhauer).</li>\n\n    <li>add <code>PasteControls</code> feature to\n    <code>allowWindowOps</code> which by default disallows pasting\n    control characters other than formatting such as carriage\n    return (discussion with Hayaki Saito).</li>\n\n    <li>fix typo in ctlseqs.ms for DECRQM response (patch by\n    Emanuele Giaquinta).</li>\n\n    <li>update default shown in configure <code>--help</code>\n    message for <code>--with-terminal-id</code> option (patch by\n    Andres Perera).</li>\n\n    <li>rename script/preprocessor variables used for substituting\n    the <code>backarrowKey</code> default value for consistency\n    (patch by Andres Perera).</li>\n\n    <li>set umask to 077 before creating debugging-trace\n    files.</li>\n\n    <li>add configure option <code>--disable-openpty</code> to\n    control whether openpty() may be used in preference to\n    posix_openpt().</li>\n\n    <li>improve workaround from <a href=\"#xterm_279\">patch #279</a>\n    for BSD systems which do not complete initialization until both\n    sides of the pseudoterminal are opened, by preferring openpty()\n    function over posix_openpt() when available (report by\n    Christian Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_291\" id=\"xterm_291\">Patch #291 -\n  2013/02/26</a></h1>\n\n  <ul>\n    <li>add validity check for xterm widget parameter to\n    <code>AlternateScroll</code> function, needed to handle wheel\n    mouse events in the scrollbar area since <a href=\n    \"#xterm_282\">patch #282</a> changes which introduced\n    <code>alternateScroll</code> feature (Redhat #874327).</li>\n  </ul>\n\n  <h1><a name=\"xterm_290\" id=\"xterm_290\">Patch #290 -\n  2013/02/12</a></h1>\n\n  <ul>\n    <li>revert of <a href=\"#xterm_282\">patch #282</a> change was\n    incomplete (report by Jim Reisert).</li>\n\n    <li>fix typo in manpage (report by Vincent\n    Lef&egrave;vre).</li>\n  </ul>\n\n  <h1><a name=\"xterm_289\" id=\"xterm_289\">Patch #289 -\n  2013/02/08</a></h1>\n\n  <ul>\n    <li>revert the <a href=\"#xterm_282\">patch #282</a> change which\n    restored \"lost\" text after shrinking/growing the screen size.\n    If the screen was updated between the two resizing operations,\n    unexpected text might be shown at the end (report/testcase by\n    Joe Peterson).</li>\n\n    <li>reverse the arrow-keys sent for\n    <code>alternateScroll</code> to match the usage in browsers\n    (suggested by Dieter Roelants).</li>\n\n    <li>modify mouse reports to consistently indicate motion events\n    whether or not a button is pressed. Old behavior (since\n    <a href=\"#xterm_127\">patch #127</a> modified encoding for wheel\n    mouse) showed only that the button was released if no button\n    had been pressed (report by Andy Koppe).</li>\n\n    <li>correct and improve behavior for SGR 1006 mouse protocol on\n    button release in any-event mode. Initial implementation in\n    <a href=\"#xterm_277\">patch #277</a> left internal state showing\n    the last button pressed when reporting motion events. It now\n    keeps track of all buttons which have been pressed and\n    released, showing the lowest remaining button by number in the\n    response (reports by Hayaki Saito, Andy Koppe).</li>\n\n    <li>fix inconsistency between <code>TermColors</code> and\n    <code>OscTextColors</code> enums which interchanged values for\n    tektronix cursor color and highlight foreground in control\n    sequences in <a href=\"#xterm_225\">patch #225</a> (report/patch\n    by Peder Stray).</li>\n\n    <li>fix inconsistent use of noreturn-attribute in\n    <code>Exit</code> function which interfered with clang\n    --analyze.</li>\n\n    <li>remove incorrect <code>free</code> used in computation of\n    <code>XTERM_SHELL</code> variable, from Coverity fixes in\n    <a href=\"#xterm_288\">patch #288</a> (FreeBSD #175782).</li>\n\n    <li>add <code>--with-valgrind</code> option to configure script\n    for consistency with my other programs.</li>\n\n    <li>update table of ambiguous width characters in wcwidth.c\n    based on Unicode 6.2.0</li>\n\n    <li>update table of combining characters in wcwidth.c based on\n    Unicode 6.2.0</li>\n\n    <li>update precompose.c based on Unicode 6.2.0</li>\n  </ul>\n\n  <h1><a name=\"xterm_288\" id=\"xterm_288\">Patch #288 -\n  2013/01/09</a></h1>\n\n  <ul>\n    <li>fix a special case in <code>ShowCursor</code> where the\n    foreground and background colors of the current position are\n    the same. In that case, choose the further of the window's\n    foreground and background colors for the cursor color.</li>\n\n    <li>modify <code>alternateScroll</code> feature added in\n    <a href=\"#xterm_282\">patch #282</a> to use either\n    <code>CSI</code> or <code>SS3</code> according to the cursor\n    keys application mode setting, to simplify using it in vi, etc.\n    (suggested by Dietar Roelants).</li>\n\n    <li>revise manpage for <code>resize</code> to clarify the\n    changes which <code>resize</code> may make to the terminal\n    settings as well as to the terminal itself.</li>\n\n    <li>remove code such as <code>struct ttysize</code>, used for\n    SunOS 3 and 4.</li>\n\n    <li>modify configure script and makefile to check for\n    <code>groff</code> and suppress groff-specific rules if groff\n    is not found.</li>\n\n    <li>modify ctlseqs.ms and makefile to work around bugs in\n    <code>grohtml</code> which cause \".png\" files to be truncated\n    when producing html documentation.</li>\n\n    <li>modify suffix rules for \"make docs\" to make the names of\n    the generated \".png\" files predictable, helping to work around\n    longstanding problems with this feature of groff&mdash;none of\n    its releases work for <em>all</em> of xterm's tables..</li>\n\n    <li>correct typo in ctlseqs.ms for DECIC and DECDC; the\n    character preceding the final \"<code>~</code>\" is an ASCII\n    single-quote \"<code>'</code>\" rather than a space (report by\n    Paul LeoNerd Evans).</li>\n\n    <li>update CF_GCC_VERSION macro, handling both Debian and\n    Darwin.</li>\n\n    <li>improve configure script checks for the\n    <code>--with-desktop-category</code> option. After <a href=\n    \"#xterm_280\">patch #280</a> changes, if no value was given for\n    this option, and no existing desktop files found for\n    comparison, the incorrect \"auto\" value was passed into the\n    generated desktop file (report by Julien Cristau).</li>\n\n    <li>modify sample build-scripts to disable check for\n    <code>imake</code> due to code-rot in Xorg.</li>\n\n    <li>add <code>-v</code> command-line option to\n    <code>resize</code>, reporting the same version string as\n    <code>xterm</code> and the two shell-wrappers.</li>\n\n    <li>make name-transformation apply to other occurrences of\n    <code>resize</code>, other manpages.</li>\n\n    <li>special-case the name-transformation in xterm's manpage in\n    the NAME section so that the result works with\n    <code>makewhatis</code> (report by Julien Cristau).</li>\n\n    <li>modify install-rules for manpages to put each program's\n    respective transformed name into the header rather than\n    xterm's.</li>\n\n    <li>remove deprecated files: proto.h, os2main.c</li>\n\n    <li>minor fixes based on Coverity scan, including:\n      <ul>\n        <li>correct caching of Atom value for the font menu's\n        \"Selection\" entry.</li>\n\n        <li>ensure that utmp/utmpx calls do not depend upon\n        trailing nulls in the <code>ut_id</code> and\n        <code>ut_line</code> values.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_287\" id=\"xterm_287\">Patch #287 -\n  2012/11/25</a></h1>\n\n  <ul>\n    <li>fix a case where in_put() loop could continue when it has\n    found an X event rather than the pty, causing the pty-read to\n    be delayed (patch by Balazs Kezes).</li>\n\n    <li>add option to <code>pointerMode</code> resource and\n    corresponding control sequences to allow text-cursor to remain\n    hidden if the pointer leaves/enters the window via accelerator\n    keys. Ordinary motion within the window restores the pointer\n    (prompted by patch by Balazs Kezes).</li>\n\n    <li>remove special case of modifiers for the\n    <code>Mode_switch</code> and <code>XK_ISO_Level3_Shift</code>\n    from <a href=\"#xterm_223\">patch #223</a>. Verified that the\n    conflict which this was intended to resolve does not happen for\n    normal compose- or modeswitch-handling (prompted by patch by\n    Balazs Kezes, Debian #638694).</li>\n\n    <li>modify the handling of focus-change events to ignore those\n    whose detail is <code>NotifyPointer</code>, since those are\n    sent in addition to focus-change events directed to the old/new\n    windows having focus. In particular, this prevents the\n    urgency-hint from being reset inadvertently (prompted by patch\n    by Balazs Kezes).</li>\n\n    <li>modify description of <code>iconName</code> in manpage to\n    make it clearer that this resource does not specify the\n    filename of an icon (discussion with Ian Collier).</li>\n\n    <li>modify <code>iconHint</code> resource to allow suppressing\n    the built-in icon by setting this to \"none\" (discussion with\n    Ian Collier).</li>\n\n    <li>make <code>-iconic</code> option work with the toolbar\n    configuration.</li>\n\n    <li>correct initialization of window manager hints used to set\n    the icon-pixmap. That detail from <a href=\"#xterm_282\">patch\n    #282</a> overwrote state used to control the\n    <code>-iconic</code> command-line option (report by Ian\n    Collier).</li>\n\n    <li>fix paste64 feature for the case where the selection comes\n    from the current terminal. The selection callback can happen\n    after the reply is partly built, making it necessary to flush\n    the reply-buffer to keep things in the proper order (report by\n    Ailin Nemui).</li>\n\n    <li>reject command-line options which are longer than the\n    options in xterm's table, to avoid mismatches (Redhat\n    #875305).</li>\n\n    <li>correct attribution for <a href=\"#xterm_282\">patch #282</a>\n    changes.</li>\n  </ul>\n\n  <h1><a name=\"xterm_286\" id=\"xterm_286\">Patch #286 -\n  2012/10/29</a></h1>\n\n  <ul>\n    <li>fix <code>minstall.in</code> to work with \"make docs\" rule,\n    so that patch number appears in the corresponding generated\n    documentation.</li>\n\n    <li>modify <code>minstall.in</code> to keep the name shown in\n    the heading consistent with any renaming, e.g., for\n    test-builds.</li>\n\n    <li>check for misconfigured <code>printerCommand</code>\n    resource on the first use, warn and disable it if it does not\n    specify an executable command (Debian #691642).</li>\n\n    <li>improve check for window-manager name needed to establish\n    usable default for activeIcon resource. This works around a\n    scenario where <code>gdm</code> does incomplete cleanup,\n    leaving window properties that refer to windows which no longer\n    exist (Redhat #869959).</li>\n  </ul>\n\n  <h1><a name=\"xterm_285\" id=\"xterm_285\">Patch #285 -\n  2012/10/23</a></h1>\n\n  <ul>\n    <li>add/adapt FreeBSD ports files for test-building.</li>\n\n    <li>modify <code>minstall.sh</code> to use the patch-number and\n    date in the manpage footer.</li>\n\n    <li>add check for failure to allocate the fg/bg colors at\n    startup, e.g., misconfiguration. Work around by setting both to\n    the default colors (suggested by Scott Bertilson).</li>\n\n    <li>amend change for <a href=\"#xterm_280\">patch #280</a> which\n    added <code>modifyKeyboard</code>, to make\n    <code>modifyOtherKeys</code> work (report by Ailin Nemui).</li>\n\n    <li>add <code>query-colors.pl</code> example for\n    OSC&nbsp;4.</li>\n\n    <li>correct mis-applied fix for minstall.sh (report by Miroslav\n    Lichvar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_284\" id=\"xterm_284\">Patch #284 -\n  2012/10/14</a></h1>\n\n  <ul>\n    <li>amend configurability changes for icons from <a href=\n    \"#xterm_283\">patch #283</a>, moving the new functionality to\n    the <code>iconHint</code> resource to avoid conflict with\n    existing uses of the <code>iconName</code> resource in the\n    <code>Shell</code> widget (report by Emanuel Haupt).</li>\n\n    <li>fix documentation errata reported by Miroslav Lichvar:\n      <ul>\n        <li>correct manpage default for <code>allowTcapOps</code>\n        (see <a href=\"#xterm_243\">patch #243</a></li>\n\n        <li>modify documentation for configure\n        <code>--enable-backarrow-key</code> to match the script\n        (see <a href=\"#xterm_280\">patch #280</a>).</li>\n\n        <li>fix typo in <code>minstall.sh</code> in <a href=\n        \"#xterm_283\">patch #283</a>, which made the leading-cap\n        \"Xterm\" become \"xterm\" (patch by Miroslav).</li>\n      </ul>\n    </li>\n\n    <li>fix two typos in configure.in from <a href=\n    \"#xterm_283\">patch #283</a> changes; one broke the\n    <code>--regex</code> configure option (report by H Merijn\n    Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_283\" id=\"xterm_283\">Patch #283 -\n  2012/10/09</a></h1>\n\n  <ul>\n    <li>modify makefile and script to generate appropriate renaming\n    s/xterm/xterm-dev/ for test-package's manpage.</li>\n\n    <li>improve makefile rules for installing/uninstalling pixmap\n    files, to include the newer mini- and filled- variants.</li>\n\n    <li>clarify change in manpage regarding <a href=\n    \"#xterm_282\">patch #282</a> change to always set a\n    window-decoration icon, even if <code>iconName</code> is not\n    set.</li>\n\n    <li>add a fourth flavor of window-decoration icons,\n    \"filled-xterm\" for a monochrome xterm with filled\n    interior.</li>\n\n    <li>use shape-mask to improve contrast of the window-decoration\n    icons.</li>\n\n    <li>minor changes to icon colors to improve contrast on\n    bright-mud backgrounds.</li>\n\n    <li>drop configure checks for memmove versus bcopy, and\n    strerror function; all currently tested platforms support\n    these.</li>\n\n    <li>cleanup configure macros, as done in byacc 20121003.</li>\n\n    <li>improve configurability of the built-in icon selectable via\n    the <code>iconName</code> resource.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_282\" id=\"xterm_282\">Patch #282 -\n  2012/09/28</a></h1>\n\n  <ul>\n    <li>improve configure check for\n    <code>XkbKeycodeToKeysym</code>, fixing a regression on some\n    older systems in the <a href=\"#xterm_280\">patch #280</a>\n    changes.</li>\n\n    <li>add clarification in manpage for\n    <code>alwaysBoldMode</code> and <code>veryBoldColors</code>\n    resources (prompted by Derek Martin question about using the\n    former with TrueType fonts).</li>\n\n    <li>add <code>alternateScroll</code> resource and corresponding\n    control sequences which modify the <code>scroll-forw</code> and\n    <code>scroll-back</code> actions: when the alternate screen is\n    displayed, wheel mouse up/down will send cursor keys (Debian\n    #683942).</li>\n\n    <li>improve rendering for the case when a Unicode character is\n    absent in the bold font but present in the normal font by\n    temporarily falling back to the normal font (Debian #359006,\n    Debian #408666).</li>\n\n    <li>provide configure option\n    <code>--enable-double-buffer</code> and ifdef's to allow\n    comparisons with/without double-buffering. The default uses\n    normal buffering.</li>\n\n    <li>add feature to optionally scroll current page before\n    clearing, controlled by resource setting\n    <code>cdXtraScroll</code> (prompted by patch by Balazs\n    Kezes):</li>\n\n    <li>integrated patches from Arch Linux forum posting (patches\n    by Balazs Kezes):\n      <ul>\n        <li>modify reallocation limit of line-data when resizing\n        screen so that \"lost\" text will be restored if the screen\n        is first shrunk and then grown.</li>\n\n        <li>modify output to use double-buffering to reduce\n        flicker.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>scroll-lock</code> action to handle\n    on/off/toggle keywords like other actions. Previously the\n    optional parameter was interpreted as an integer.</li>\n\n    <li>extend <code>DECSCUSR</code> to provide a way to set the\n    cursor to a vertical bar (patch by Paul Bolle).</li>\n\n    <li>add <code>-8</code>, <code>-c</code>, <code>-d</code> and\n    <code>-u</code> options to <code>88colors2.pl</code> and\n    <code>256colors2.pl</code> scripts. No current terminal\n    emulator recognizes C1 controls while handling UTF-8\n    encoding&mdash;see notes in <a href=\"#xterm_119\">patch #119</a>\n    and <a href=\"#xterm_109\">patch #109</a> regarding\n    <code>utf8controls</code>&mdash;but the <code>-u</code> and\n    <code>-8</code> options are useful for demonstrating this\n    point.</li>\n\n    <li>improve speed when changing color palettes using OSC\n    controls by deferring repaint while followup controls might be\n    additional color palette changes.</li>\n\n    <li>modify <code>SGR&nbsp;38</code> and\n    <code>SGR&nbsp;48</code> to accept RGB index, matching the\n    closest entry in xterm's palette.</li>\n\n    <li>extend <code>SGR&nbsp;38</code> and\n    <code>SGR&nbsp;48</code> to accept colon as parameter separator\n    (request by Paul LeoNerd Evans).</li>\n\n    <li>modify <code>fullscreen</code> action to allow it to toggle\n    the full-screen mode rather than only set or unset it (prompted\n    by Eeri Kask's suggestion to support\n    <code>_NET_WM_TOGGLE</code>). This implementation does not yet\n    use <code>_NET_WM_TOGGLE</code>.</li>\n\n    <li>add support for <code>_NET_WM_STATE_MAXIMIZED_VERT</code>\n    and <code>_NET_WM_STATE_MAXIMIZED_HORZ</code> EWMH properties\n    (suggested by Eeri Kask).</li>\n\n    <li>make fullscreen mode work with the tek4014 window. This\n    change makes only the currently active window to be changed to\n    fullscreen rather than changing both windows.</li>\n\n    <li>modify <code>TekClear</code> function to discard pending\n    output before clearing the tek4014 display (patch by Kevin\n    Ryde).</li>\n\n    <li>fix <code>deleteIsDEL</code> feature, broken in <a href=\n    \"#xterm_280\">patch #280</a> changes (report by Mike Thornburg,\n    forwarded by Jeremy Huddleston).</li>\n\n    <li>fix a special case of wrapping double-width characters\n    (report/test-case by Ken Winstein).</li>\n\n    <li>add <code>E3</code> extended capability to\n    <code>xterm-basic</code> to match ncurses <a href=\n    \"https://invisible-island.net/ncurses/NEWS.html#t20120728\">20120728</a>\n    patch.</li>\n\n    <li>fix incorrect transformation of row-parameter for\n    <code>ClearCurBackground</code> in <a href=\"#xterm_279\">patch\n    #279</a> which caused incorrect painting in some scrolling\n    scenarios (report by Chuck Silvers).</li>\n\n    <li>fix typo in manpage description of <code>+maximized</code>\n    option (Paul Maier).</li>\n\n    <li>change default for configure option\n    <code>--with-xpm</code>, turning it on unless requested\n    otherwise.</li>\n\n    <li>add configure option <code>--with-icon-name</code> which\n    can be used to override the default icon used in\n    icon-themes.</li>\n\n    <li>extend <code>activeIcon</code> resource to provide\n    <code>default</code> value which tells xterm to determine the\n    window manager's name and automatically enable the feature for\n    fvwm and window maker. The explicit true/false values can be\n    used to override this behavior.</li>\n\n    <li>add \"mini\" xterm icon, which scales better than the\n    standard xterm icon, e.g., for the gnome/kde \"panel\"\n    feature.</li>\n\n    <li>extend <code>iconName</code> resource to search for icon\n    named according to resource value and use that if found. If not\n    found, use compiled-in pixmap. Both set the WM_ICON_NAME\n    property which is used by various window managers, usually for\n    window decoration.</li>\n\n    <li>updated autoconf patch, adding support for --datarootdir,\n    which changes the default location of manpages.</li>\n\n    <li>further improved autoconf macros for configuring icons,\n    from vile 9.8h</li>\n  </ul>\n\n  <h1><a name=\"xterm_281\" id=\"xterm_281\">Patch #281 -\n  2012/06/26</a></h1>\n\n  <ul>\n    <li>remove \"$(srcdir)/\" from install-icon rule to fix builds\n    when --srcdir configuration option is used.</li>\n\n    <li>fix for configure script's search for icon file when it is\n    not found in the current directory, e.g., when building out of\n    tree (patch by Thierry Reding).</li>\n\n    <li>undo the XK_Home / XK_End change from <a href=\n    \"#xterm_280\">patch #280</a> which broke the non-VT220 keyboard\n    for those keys (report by H Merijn Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_280\" id=\"xterm_280\">Patch #280 -\n  2012/06/24</a></h1>\n\n  <ul>\n    <li>add configure check to work around warning from\n    desktop-file-install for \"Encoding\", noting that it emits\n    deprecation warnings without providing its version\n    information.</li>\n\n    <li>add configure option <code>--with-icon-theme</code> to tell\n    xterm whether to install into an icon theme, defaulting to\n    \"hicolor\" (Redhat #755206, Redhat #799614 and Redhat\n    #804279).</li>\n\n    <li>change <code>--with-icondir</code> to look for \"icons\"\n    directory rather than \"pixmaps\" by default. Add new option\n    <code>--with-pixmapdir</code> to allow these two uses to be\n    installed concurrently.</li>\n\n    <li>modify configure options <code>--with-app-defaults</code>\n    and <code>--with-icondir</code> to accept \"auto\" as value to\n    look for existing directory from well-known locations.</li>\n\n    <li>add missing codes for secondary DA response which tell the\n    type of terminal as in the primary DA response.</li>\n\n    <li>update primary DA response for VT420 to include user\n    windows and horizontal scrolling.</li>\n\n    <li>add <code>modifyKeyboard</code> resource to support\n    keypad-modifier changes per request by Thomas Wolff.</li>\n\n    <li>add XK_Home / XK_End to editing-keypad checks</li>\n\n    <li>add back-tab key <code>kB</code> to termcap entries to\n    match the terminfo.</li>\n\n    <li>update terminfo to match corresponding entries in ncurses,\n    e.g., add <code>XT</code> and adjust <code>sgr</code> string\n    for xterm-bold entry.</li>\n\n    <li>add configure options to predefine the most commonly\n    customized resources for terminal-settings, use those to\n    substitute into the manpage the corresponding compiled-in\n    values: <code>altSendsEscape</code>, <code>backarrowKey</code>,\n    <code>backarrowKeyIsErase</code>, <code>deleteIsDEL</code>,\n    <code>metaSendsEscape</code> (Redhat #819588).</li>\n\n    <li>change default emulation level to VT420 (discussion with\n    Ailin Nemui).</li>\n\n    <li>improve logic for DECSCL; <a href=\"#xterm_279\">patch\n    279</a> partly enforced limitation of this to higher-level\n    emulations. This patch finishes that change.</li>\n\n    <li>improve check for base of combining characters, preventing\n    combination when cursor movement has intervened. Mosh's webpage\n    gives two different examples of this, with other causes\n    ascribed to the behavior.</li>\n\n    <li>modify IL/DL to set cursor to first column on row for\n    better VT102/VT220 compatibility (prompted by code review of\n    mosh).</li>\n\n    <li>separate state-table entries for DECSC/DECRC from the\n    ANSI.SYS save/restore cursor, since the latter conflicts with\n    DECSLRM when DECLRMM is enabled since <a href=\n    \"#xterm_279\">patch #279</a> (report/analysis by Ailin\n    Nemui).</li>\n\n    <li>fixes to avoid using <code>SIGCHLD</code> handler of main\n    program in printer's subprocess (report by Joe Julian).</li>\n\n    <li>correct restore-parameter for mouse-modes from <a href=\n    \"#xterm_279\">patch #279</a> changes.</li>\n\n    <li>add null-pointer checks to input-method caching added in\n    <a href=\"#xterm_277\">patch #277</a> to fix a problem in the\n    exposure code, when deselecting a window (report by Kriston\n    Rehberg).</li>\n\n    <li>unset <code>DESKTOP_STARTUP_ID</code> environment variable\n    to lessen confusion on the part of GTK applications which use\n    the variable without checking it (report by John Little).</li>\n  </ul>\n\n  <h1><a name=\"xterm_279\" id=\"xterm_279\">Patch #279 -\n  2012/05/10</a></h1>\n\n  <ul>\n    <li>fill in missing cases in the save/restore modes feature\n    (report by Thomas Wolff).</li>\n\n    <li>add check to ensure that combining characters are\n    precomposed in the order given (report/analysis by Andries E\n    Brouwer).</li>\n\n    <li>improve workability check for posix_openpt(), to take into\n    account BSD systems which do not complete initialization until\n    both sides of the pseudoterminal are opened (report by\n    Christian Weisgerber).</li>\n\n    <li>amend fix for Debian #650291 in <a href=\"#xterm_277\">patch\n    #277</a> changes to account for different data returned by\n    vnc4server (Debian #670638).</li>\n\n    <li>add check in DECCRA operation to make copies of blinking\n    text also blink by updating a line-level flag.</li>\n\n    <li>modify rectangle operations to work with DECOM.</li>\n\n    <li>modify DECSERA to use the current protected state rather\n    than preserving it.</li>\n\n    <li>add <code>precompose</code> resource to allow storing\n    character data in Normalized Form D as described in <a href=\n    \"http://unicode.org/reports/tr15/\">http://unicode.org/reports/tr15/</a>\n    (report/discussion with Andries E Brouwer).</li>\n\n    <li>modify CBT, other ISO-6429 controls which are used by VT520\n    to work with DECOM.</li>\n\n    <li>add HPR and VPR controls, ISO 6429 cursor movement used in\n    VT520.</li>\n\n    <li>remove \"linux\" restriction for IUTF8 ifdef in main.c\n    (prompted by Matthew Dempsky posting on\n    mailing.openbsd.tech).</li>\n\n    <li>implement the remaining VT420-level device status\n    reports.</li>\n\n    <li>change DECXCPR to return page 1, rather than 0.</li>\n\n    <li>improve VT-level checks on reporting functions, such as\n    DECXCPR.</li>\n\n    <li>change limit on <code>decTerminalID</code> to 525.</li>\n\n    <li>fixes to improve vttest vt52 screen when running as a\n    VT420:\n      <ul>\n        <li>add checks for some VT2xx and up controls for\n        consistency: DECSCL, S1C8T, S1C7T.</li>\n\n        <li>modify DECRQSS return for DECSCL to only return that\n        when running as VT2xx and up.</li>\n\n        <li>when exiting from VT52-mode, resume in VT100 level\n        rather than the level before starting VT52-mode.</li>\n      </ul>\n    </li>\n\n    <li>implement DECLRMM, DECSLRMM and DECNCSM (prompted by\n    discussions with Ailin Nemui and Paul LeoNerd Evans). This\n    modifies several controls to obey top/bottom and left/right\n    margins.</li>\n\n    <li>correct macro definition used for testing modes used in\n    ANSI/DEC request-mode controls introduced in <a href=\n    \"#xterm_262\">patch #262</a>.</li>\n\n    <li>modify <code>x_getlogin</code> to check $LOGNAME and $USER\n    before fallback to <code>getlogin</code>, so that user's choice\n    for these variables can be carried forward to the xterm process\n    (Debian #611487).</li>\n\n    <li>document DECSCUSR response for DECRQSS in ctlseqs.ms</li>\n\n    <li>add <code>zIconTitleFormat</code> resource to allow\n    customizing the \"***&nbsp;\" prefixed to the icon title when the\n    <code>zIconBeep</code> feature is activated (request by Thomas\n    Adam).</li>\n\n    <li>modify DECSCUSR to update the same internal variable as\n    RM/SM 12, and document in manpage the two variables used for\n    controlling blinking cursor (report by Paul LeoNerd\n    Evans).</li>\n\n    <li>correct response data for DECSCUSR in reply for DECRQSS\n    response, which had inverted the blink-value (reports by Ailin\n    Nemui, Paul LeoNerd Evans).</li>\n\n    <li>add a null-pointer check in <code>OkPasswd</code> macro to\n    fix a problem in <code>resize</code> with Fedora 17 and a\n    serial console (report/patch by Daniel Drake).</li>\n\n    <li>add workaround for Mac OS X, which loses the window size of\n    a pseudo-terminal when the tty device is opened\n    (report/analysis by Egmont Koblinger).</li>\n\n    <li>updated configure check for workable\n    <code>posix_openpt</code> versus <code>grantpt</code>, from\n    <code>luit</code> fixes.</li>\n\n    <li>modify DECIC/DECDC/DECBI/DECFI implemented in <a href=\n    \"#xterm_277\">patch #277</a> to enable them only in VT4xx mode\n    and up (report by Ailin Nemui).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_278\" id=\"xterm_278\">Patch #278 -\n  2012/01/18</a></h1>\n\n  <ul>\n    <li>correct initialization for <code>eightBitMeta</code>\n    resource (FreeBSD #164101).</li>\n\n    <li>make special check for Darwin 9 (and lower) to <em>not</em>\n    use <code>posix_openpt</code> (report by Christian Ebert).</li>\n\n    <li>minor fixes (adding \".ne\" directives) to reduce the cases\n    where groff's utility for generating images for tables dumps\n    core. Most versions of groff (I've found 1.19.2 to be the most\n    stable) dump core when attempting to report that there are too\n    few lines on a page for a table to be shown.</li>\n  </ul>\n\n  <h1><a name=\"xterm_277\" id=\"xterm_277\">Patch #277 -\n  2012/01/07</a></h1>\n\n  <ul>\n    <li>remove special case for ISC pseudo-terminals which attempts\n    to open the pty in two different ways.</li>\n\n    <li>move call to <code>grantpt</code> before asking utempter to\n    add a record, to work with kFreeBSD which does not update the\n    terminal's ownership until this point (Debian #652907).</li>\n\n    <li>document limitation of XIM interface in manpage (Debian\n    #230787).</li>\n\n    <li>cleanup error reporting with new xtermWarning\n    function.</li>\n\n    <li>add configure option <code>--disable-selection-ops</code>\n    to make the new actions optional.</li>\n\n    <li>add four new actions for making the selection or data\n    directly copied from the screen (prompted by discussion in\n    Debian #637001, as well as report by Arjen van Tol):\n      <ul>\n        <li>exec-formatted</li>\n\n        <li>exec-selectable</li>\n\n        <li>insert-formatted</li>\n\n        <li>insert-selectable</li>\n      </ul>\n    </li>\n\n    <li>add <code>visualBellLine</code> resource to allow\n    <code>visualBell</code> to flash only the current line\n    (prompted by patch by Gertjan Halkes).</li>\n\n    <li>add <code>eightBitMeta</code> resource to control the\n    features which modify or interpret the eighth bit of a key when\n    the meta modifier key is pressed (prompted by Debian\n    #326200).</li>\n\n    <li>improve discussion of <code>eightBitInput</code> in the\n    manpage (prompted by Debian #326200).</li>\n\n    <li>correct logic for <code>alt-sends-escape</code> action,\n    overlooked when implementing <code>altSendsEscape</code>\n    resource, which still used <code>eightBitInput</code> resource\n    value.</li>\n\n    <li>add a workaround for <code>XAllocColor()</code>, which does\n    not actually allocate \"a read-only colormap entry corresponding\n    to the closest RGB value supported by the hardware\", but rather\n    a rough approximation (Debian #650291).</li>\n\n    <li>undo parameter checks for <code>RequestResize()</code>\n    added in <a href=\"#xterm_251\">patch #251</a> and amended in\n    <a href=\"#xterm_270\">patch #270</a>, because zeros also are\n    special cases (report by John S Urban).</li>\n\n    <li>modify some test-scripts to use <code>/bin/echo</code>\n    rather than the shell's possibly-builtin <code>echo</code>, to\n    work around broken configuration on Mac OS X, i.e., neither\n    honoring the option nor flagging an error.</li>\n\n    <li>add SGR 1006, as a better technical solution than SGR 1015:\n      <ul>\n        <li>the responses will not be confused with line-deletion\n        and scrolling controls.</li>\n\n        <li>the button encoding is a little simpler, since it does\n        not add an unnecessary 32 because the integer parameter\n        does not have to be represented as a printable\n        character.</li>\n\n        <li>the control responses for pressing and releasing a\n        mouse button differ, allowing an application to tell which\n        button was released.</li>\n      </ul>\n\n      <p>Besides these improvements, in discussion, it was noted\n      that urxvt's implementation of 1005 is incorrect, relying\n      upon a locale that provides UTF-8 encoding. In contrast,\n      vttest demonstrates a correct decoding, independent of\n      locale.</p>\n    </li>\n\n    <li>add support for urxvt SGR 1015 to address shortcoming of\n    SGR 1005 with luit (patch by Egmont Koblinger).</li>\n\n    <li>add ISO and DEC controls useful for left/right\n    scrolling.</li>\n\n    <li>add some changes for OpenBSD and MirBSD (adapted from patch\n    by Thorsten Glaser):\n      <ul>\n        <li>disable search for non-Unix96 ptys.</li>\n\n        <li>fix a gcc warning in\n        <code>timestamp_filename</code></li>\n\n        <li>modify <code>Imakefile</code> to install xterm setgid\n        to utmp.</li>\n      </ul>\n    </li>\n\n    <li>add/use/prefer <code>posix_openpt()</code> for opening\n    pseudo-terminal.</li>\n\n    <li>modify special errno handling case in ptydata.c from\n    <a href=\"#xterm_158\">patch #158</a> to allow for the\n    possibility that any platform may have special cases where\n    \"/dev/tty\" is absent. For example, this can happen in a FreeBSD\n    jail (patch by David Wolfskill).</li>\n\n    <li>add keyboard logic to map shift-tab into XK_ISO_Left_Tab,\n    which is usually, not always, done by the X keyboard\n    configuration.</li>\n\n    <li>portability fixes for some configure macros:\n    <code>CF_XOPEN_SOURCE</code></li>\n  </ul>\n\n  <h1><a name=\"xterm_276\" id=\"xterm_276\">Patch #276 -\n  2011/10/10</a></h1>\n\n  <ul>\n    <li>modify clipping limits for TrueType fonts to account for\n    the <code>scaleHeight</code> resource setting, to work around\n    another problem due to recent FreeType changes. In this case,\n    the <code>DejaVu Sans Mono</code> set to pixelsize=13.5 is\n    truncated because the font descent is reduced by FreeType to\n    match an incorrect height metric (report by Adam Lee).</li>\n\n    <li>improve recovery when bitmap fonts are not installed, e.g.,\n    so that switching font-sizes works for TrueType fonts.</li>\n\n    <li>modify lookup for <code>XTERM_SHELL</code> feature to allow\n    relative pathnames.</li>\n\n    <li>modify abbreviation disambiguation check for command-line\n    parameters to account for <code>-geometry</code>, whose\n    parameter may begin with \"+\" or \"-\" (report by Scott\n    Bertilson).</li>\n  </ul>\n\n  <h1><a name=\"xterm_275\" id=\"xterm_275\">Patch #275 -\n  2011/09/11</a></h1>\n\n  <ul>\n    <li>add <code>ash</code>, <code>zsh</code> to known shells for\n    <code>resize</code>.</li>\n\n    <li>modify <code>resize</code> to reuse the logic from\n    <code>xterm</code> which determines the actual logon-user's\n    shell if <code>$SHELL</code> is not set.</li>\n\n    <li>revert the <code>unsetenv(\"SHELL\")</code> added in <a href=\n    \"#xterm_272\">patch #272</a>.</li>\n\n    <li>an <code>unsetenv(\"SHELL\")</code> added in <a href=\n    \"#xterm_272\">patch #272</a> to help ensure that\n    <code>luit</code> would get the user's shell consistently did\n    not work as expected for cases where multiple names are in the\n    password-file for a given uid. That was because changes in\n    <a href=\"#xterm_157\">patch #157</a> to handle this situation\n    did not take into account that repeated calls to\n    <code>getpwnam</code> and <code>getpwuid</code> return a\n    pointer to the same static buffer. Fixed the older logic to\n    work as intended, by ensuring that the passwd-data from each\n    call is stored separately (report by Paul Keusemann).</li>\n\n    <li>adjust ifdef's for <code>putenv</code> and\n    <code>unsetenv</code> in case only one of those is provided on\n    a given platform.</li>\n\n    <li>correct comparison used in <code>ExposeContains</code>\n    macro from <a href=\"#xterm_274\">patch #274</a> changes, to\n    handle window-dragging (patch by Todd Eigenschink).</li>\n  </ul>\n\n  <h1><a name=\"xterm_274\" id=\"xterm_274\">Patch #274 -\n  2011/09/05</a></h1>\n\n  <ul>\n    <li>portability fixes for cygwin: do not define\n    <code>SVR4</code>, and work around nonstandard header\n    location.</li>\n\n    <li>ifdef'd use of <code>unsetenv</code> from <a href=\n    \"#xterm_273\">patch #273</a> changes to work with Solaris 9\n    (report by Waldemar Rachwal).</li>\n\n    <li>modify logic for <code>XtAppPending</code> to merge\n    adjacent <code>Expose</code> and <code>ConfigureNotify</code>\n    events which are redundant (report by Edward McGuire).</li>\n\n    <li>fix an unneeded warning message when <code>-r</code> option\n    is given.</li>\n\n    <li>remove a few redundant entries from table used for helping\n    abbreviation-checking of command-line options, makes\n    <code>-geom</code> work again after <a href=\"#xterm_272\">patch\n    #272</a> changes as an abbreviation of\n    <code>-geometry</code>.</li>\n\n    <li>add <code>scaleHeight</code> resource and command-line\n    option <code>-sh</code> as workaround for some\n    font-configurations broken by changes in FreeType 2.4.6 (report\n    by Miroslav Hodak).</li>\n\n    <li>portability fixes for some configure macros:\n    <code>CF_FUNC_TGETENT</code>, <code>CF_XOPEN_SOURCE</code>,\n    <code>CF_X_ATHENA_LIBS</code>.</li>\n\n    <li>add configure option <code>--with-freetype-config</code> to\n    improve selection over the plethora of configuration options\n    which freetype has so far provided.</li>\n\n    <li>build-fix for configure <code>--enable-load-vt-fonts</code>\n    when <code>--enable-widec</code> is not specified.</li>\n\n    <li>build-fixes for suppressing various features, needed after\n    changes in patches 270, 271 and 272 (report by Brian\n    Lindholm)</li>\n  </ul>\n\n  <h1><a name=\"xterm_273\" id=\"xterm_273\">Patch #273 -\n  2011/08/25</a></h1>\n\n  <ul>\n    <li>build-fix for out-of-tree \"make docs\" rule.</li>\n\n    <li>correct a typo in <code>x_strdup</code>, from <a href=\n    \"#xterm_198\">patch #198</a> changes.</li>\n\n    <li>correct initialization for <code>-e</code> option, broken\n    in <a href=\"#xterm_272\">patch #272</a> changes (report by\n    Gabriele Balducci).</li>\n\n    <li>build-fix for out-of-tree builds to address\n    <code>minstall</code> script changes in <a href=\n    \"#xterm_272\">patch #272</a> (patch by Thierry Reding).</li>\n  </ul>\n\n  <h1><a name=\"xterm_272\" id=\"xterm_272\">Patch #272 -\n  2011/08/24</a></h1>\n\n  <ul>\n    <li>document limitation of <code>Gtk</code> in connection with\n    xterm's <code>-into</code> option, in the manpage (Ubuntu\n    #806969).</li>\n\n    <li>improve <code>-into</code> by checking for and using the\n    size of the window within which xterm is embedded, overriding\n    other clues.</li>\n\n    <li>modify logic for <code>localeFilter</code> resource to\n    allow that to include command-line options of luit.</li>\n\n    <li>improve <code>-into</code> by checking for invalid\n    window-id, and allowing hexadecimal/decimal/octal values.</li>\n\n    <li>improve <code>keepSelection</code>, adding the case where\n    the highlighting is cleared, overlooked in <a href=\n    \"#xterm_230\">patch #230</a> (patch by Marco Peereboom).</li>\n\n    <li>improve command-line parsing to make abbreviate options\n    work consistently across xterm-specific versus standard X\n    toolkit options, and report cases where an abbreviated option\n    happens to be ambiguous. In particular, <code>-d</code> now\n    works as an abbreviation for <code>-display</code>.</li>\n\n    <li>fix regression in command-line parsing introduced in\n    <a href=\"#xterm_271\">patch #271</a> changes for Debian #629358,\n    (Debian #637910).</li>\n\n    <li>split-out new termcap/terminfo building block\n    <code>xterm+kbs</code> for configurability.</li>\n\n    <li>modify <code>terminfo</code> file to reflect changes in\n    ncurses for <code>xterm-16color</code> and\n    <code>xterm-256color</code>.</li>\n\n    <li>modify <code>minstall.sh</code>, etc., to reflect the\n    default default class, <code>$TERM</code> and\n    <code>decTerminalID</code> values.</li>\n\n    <li>reword <code>resize</code> manpage to reflect the fact that\n    <code>$TERMCAP</code> is not set on all systems (patch by Alan\n    Coopersmith).</li>\n\n    <li>work around combined Xaw6/Xaw7 package in DragonFlyBSD\n    which omits the usual symbolic link to the preferred library\n    name.</li>\n\n    <li>further improve build-fix for termcap systems by checking\n    for some which are only partial implementations, e.g., termcap\n    2.08 in CentOS 5.2</li>\n  </ul>\n\n  <h1><a name=\"xterm_271\" id=\"xterm_271\">Patch #271 -\n  2011/07/14</a></h1>\n\n  <ul>\n    <li>omit permissions adjustments to pty on exit except for\n    pre-Unix98 ptys, since modern implementations handle this\n    (report by Sean C Farley).</li>\n\n    <li>modify logic for switching fonts between UTF-8 and\n    non-UTF-8 encoding to not merge the derivable bold-, wide- and\n    widebold values from the VT100 fonts. Also suppress warning\n    when not using UTF-8 fonts if wide- and widebold-fonts cannot\n    be derived or otherwise loaded (report by Werner\n    Scheinast).</li>\n\n    <li>modify menu-creation to suppress entries which will never\n    be used in the current configuration, rather than simply\n    disabling them.</li>\n\n    <li>add resource <code>printModeImmediate</code> and menu item\n    to allow print of screen plus saved lines to a file.</li>\n\n    <li>add menu item to allow runtime enable/disable of the\n    <code>printFileOnXError</code> feature.</li>\n\n    <li>append a timestamp to filename used in\n    <code>printFileOnXError</code> feature, and restrict its\n    permissions (request by Vincent Lef&egrave;vre).</li>\n\n    <li>add a check when cancelling cursor-blinking, in case the\n    cursor is blinked off. Fix so that the cursor is repainted\n    without waiting for other events, e.g., keypress (report by\n    Ailin Nemui).</li>\n\n    <li>add configure <code>--with-app-class</code> option, to\n    simplify building \"xterm-dev\" packages with filenames that do\n    not conflict with conventional \"xterm\" packages.</li>\n\n    <li>corrected logic flow for DECSCL, which prevented the\n    updated operating level from being reported via DECRQSS (report\n    by Ailin Nemui).</li>\n\n    <li>corrected default for <code>brokenStringTerm</code>\n    resource to match manpage.</li>\n\n    <li>add vttests/dynamic.pl</li>\n\n    <li>add runtime check for locale not supported by X libraries,\n    and fallback to XA_STRING in this case (request by Bryan\n    Henderson).</li>\n\n    <li>fix a special case in configure script after no FreeType\n    libraries are found. The script was proceeding to check for a\n    usable configuration.</li>\n\n    <li>add <code>xterm+tmux</code> building block to terminfo\n    (adapted from changes proposed by Ailin Nemui and Nicholas\n    Marriott).</li>\n\n    <li>improve discussion of <code>faceName</code> resource in\n    manpage (adapted from suggestions by Jens Schweikhardt).</li>\n\n    <li>correct mapping of shifted up/down cursor-keys in termcap\n    function-keys mode, i.e., resource\n    <code>tcapFunctionKeys</code> (patch by Gertjan Halkes).</li>\n\n    <li>update AIX case in <code>CF_XOPEN_SOURCE</code> configure\n    macro to add release 7.x.</li>\n\n    <li>modify ifdef's in <code>xterm_io.h</code> for\n    <code>__hpux</code> to force that to use the hacked SYSV\n    support in that file. This fixes a problem with a non-blocking\n    socket call (patch by Paul Lampert).</li>\n\n    <li>improve filtering of desktop category scanning, to exclude\n    XFCE.</li>\n\n    <li>modify configure script to work with systems that have both\n    ncurses (or other terminfo) as well as a real termcap library,\n    e.g., Slackware (report by Andrew Watts).</li>\n\n    <li>modify configure script to work around special case where\n    user's environment adds compiler flags to the <code>CC</code>\n    variable (prompted by report by Paul Lampert).</li>\n\n    <li>amend change for Debian #110226 so that \"-h\" or \"-v\"\n    options cause an exit, rather than simply printing to stdout\n    while the window is displayed (Debian #629358).</li>\n\n    <li>add response for <code>DECRQSS</code> which gives the\n    setting for <code>DECSCUSR</code>.</li>\n\n    <li>modify AllocateTermColor() to handle\n    <code>XtDefaultForeground</code> and\n    <code>XtDefaultBackground</code>, which are not recognized by\n    <code>XParseColor</code>. For example, this fixes the use of\n    OSC&nbsp;112 when no explicit cursor color was set (report by\n    Ailin Nemui).</li>\n\n    <li>handle special-case of <code>KeyPress</code> translated to\n    <code>popup-menu</code> action (Ubuntu #756273).</li>\n  </ul>\n\n  <h1><a name=\"xterm_270\" id=\"xterm_270\">Patch #270 -\n  2011/04/26</a></h1>\n\n  <ul>\n    <li>build-fix, e.g., for using <code>imake</code> on platforms\n    which use the termcap library.</li>\n\n    <li>modify <code>utf8</code> resource to accept a name.</li>\n\n    <li>mention default for <code>fontWarnings</code> in manpage\n    (report by Werner Scheinast).</li>\n\n    <li>split \"UTF-8\" menu entry into \"UTF-8 Encoding\" and \"UTF-8\n    Fonts\" (prompted by discussion with Werner Scheinast).</li>\n\n    <li>gray-out font-menu entries when a font fails to load, e.g.,\n    a bitmap font is not installed.</li>\n\n    <li>improve behavior when there is no app-defaults file:\n      <ul>\n        <li>set the <code>toolBar</code> resource to false</li>\n\n        <li>gray-out the font menu entries where no resource is\n        found.</li>\n      </ul>\n    </li>\n\n    <li>add configure option <code>--with-desktop-category</code>\n    to allow customization of the \".desktop\" files.</li>\n\n    <li>build-fix for the <code>install-desktop</code>\n    makefile-rule, when the source/build directories differ (patch\n    by Lo&iuml;c Minier).</li>\n\n    <li>add menu entry and corresponding resource which can be used\n    to suppress all bold-fonts (discussion with Jan\n    Engelhardt).</li>\n\n    <li>make internal line-size value consistent with allocated\n    sizes of character and related arrays to ensure that bulk\n    copying of line data, e.g., in scrolling, accounts for the\n    padding used for pointer alignment (adapted from patch by\n    Rajesh Mandalemula, also reported by Ali Bahar).</li>\n\n    <li>widen ifdef for screen-resizing logic from <a href=\n    \"#xterm_176\">patch #176</a> changes to send\n    <code>SIGWINCH</code> to process group to include any system\n    supporting <code>ioctl(*,TIOCGPGRP,*)</code> (prompted by\n    linux-specific patch in OpenSUSE rpm package).</li>\n\n    <li>add <code>printModeOnXError</code> and\n    <code>printFileOnXError</code> resources, which allow the user\n    to specify that xterm will write the contents of its screen to\n    a file if it is exiting due to an X error (Debian\n    #280457).</li>\n\n    <li>restore logic that made reverse-video apply to the\n    scrollbar's foreground/background, broken in <a href=\n    \"#xterm_158\">patch #158</a> (report by Bryan Ischo).</li>\n\n    <li>amend some of the window operations parameter-checks added\n    in <a href=\"#xterm_251\">patch #251</a> for the push/pop title\n    feature, to allow the parameters used for window resizing to be\n    -1's, which makes the corresponding values ignored rather than\n    using the window's maximum width/height (report by Noah\n    Friedman).</li>\n\n    <li>correct order of initialization for\n    <code>translations</code> vs <code>fullscreen</code> resources\n    to enable a special case which omits the Alt-Enter translation\n    when <code>fullscreen</code> is disabled (Debian #612978).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_269\" id=\"xterm_269\">Patch #269 -\n  2011/02/19</a></h1>\n\n  <ul>\n    <li>build-fixes for <code>imake</code> (report by Heiko\n    Berges).</li>\n\n    <li>modify autoconf macro CF_PKG_CONFIG to work with\n    cross-compile environments (patch by Thierry Reding).</li>\n\n    <li>modify <code>MapToColorMode()</code> to favor bold over\n    underline, matching the precedence used before <a href=\n    \"#xterm_252\">patch #252</a> (report/analysis by Nicolas\n    George).</li>\n\n    <li>add <code>omitTranslation</code> resource, which can be\n    used to suppress the default translations for these features:\n      <ul>\n        <li>fullscreen</li>\n\n        <li>scroll-lock</li>\n\n        <li>shift-fonts</li>\n\n        <li>wheel-mouse</li>\n      </ul>\n    </li>\n\n    <li>make the fullscreen feature configurable (Debian #612978)\n      <ul>\n        <li>add it to the configurable list\n        <code>disallowedWindowOps</code>.</li>\n\n        <li>add command-line option <code>-fullscreen</code> to\n        allow the feature to be enabled at startup.</li>\n\n        <li>add resource <code>fullscreen</code> to control whether\n        the feature is active or may be enabled.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>probe_netwm_fullscreen_capability</code> for\n    64-bit machines. Contrary to <code>XGetWindowProperty</code>\n    manpage, that function returns 32-bit data packed as\n    <code>long</code>'s.</li>\n\n    <li>eliminate copy of <code>name</code> resource, which was\n    otherwise used only to give the terminal-description name for\n    the tcap-query feature. Use the actual <code>$TERM</code> value\n    instead, as derived from <code>termName</code> resource,\n    etc.</li>\n\n    <li>eliminate an old inconsistency with error messages, some\n    used the <code>-name</code> option, while others used\n    <code>argv[0]</code>. The latter is now used consistently.</li>\n\n    <li>improve configure check for rpath-hack, to improve builds\n    on systems where gcc will not search /usr/local/lib, etc.</li>\n\n    <li>build-fix for Xaw3d configuration (report by H Merijn\n    Brand).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_268\" id=\"xterm_268\">Patch #268 -\n  2011/02/10</a></h1>\n\n  <ul>\n    <li>fix an inconsistency of the \"Enable Reverse Video\" checkbox\n    in the VT Options menu. This also removes a special case added\n    in <a href=\"#xterm_217\">patch #217</a> which limited the effect\n    of the <code>reverseVideo</code> resource (Debian\n    #603808).</li>\n\n    <li>amend decoding of misformed UTF-8 sequences to avoid\n    absorbing valid characters as documented in Unicode 6.0 section\n    3.9 (report by Keith Winstein).</li>\n\n    <li>do not set urgency hint when window already has focus\n    (patch by Dimitrios Christidis).</li>\n\n    <li>amend extended mouse-coordinate mode from <a href=\n    \"#xterm_262\">patch #262</a> changes to include the <em>Cb</em>\n    button-code, which also may be greater than 127 (report by\n    Ailin Nemui).</li>\n\n    <li>ensure that underline-cursor is visible when an application\n    happens to set the background color (report by Christian\n    Weisgerber).</li>\n\n    <li>add feature for <a href=\n    \"http://www.davidsimmons.com/soft/xtermhacks/xterm-fullscreen.patch\">\n    full-screen toggling</a> using either Alt-Enter or a menu\n    selection (integrated patch by Dave Simmons).</li>\n\n    <li>add missing logic to handle reallocation of FIFO index for\n    the \"UTF-8\" menu entry (report by David Holland, NetBSD\n    #44344).</li>\n\n    <li>add makefile rules <code>docs-ctlseqs</code>,\n    <code>docs-xterm</code>, etc.</li>\n\n    <li>correct typo in description of DECRPM in control sequences\n    document (report by Ailin Nemui).</li>\n  </ul>\n\n  <h1><a name=\"xterm_267\" id=\"xterm_267\">Patch #267 -\n  2010/11/20</a></h1>\n\n  <ul>\n    <li>minor formatting changes to ctlseqs.ms to simplify a script\n    which extracts the feature information. See the results in\n    <a href=\n    \"https://invisible-island.net/xterm/xterm.faq.html#compare_versions\">\n    Comparing versions, by counting controls</a> in the xterm\n    FAQ.</li>\n\n    <li>add <code>docs-clean</code> makefile rule.</li>\n\n    <li>add <code>copy-selection</code> action (request by Timo\n    Juhani Lindfors, Debian #588785).</li>\n\n    <li>trim leading/trailing blanks from string used for\n    \"Selection\" font-menu data.</li>\n\n    <li>trim leading/trailing blanks from color resource\n    values.</li>\n\n    <li>configure script improvements:\n      <ul>\n        <li>add workaround for removal of X11 dependency from Xt's\n        package file (report by Robert Hooker).</li>\n\n        <li>add workaround for removal of fontconfig dependency\n        from Xft's package file (report by Jeremy Huddleston).</li>\n\n        <li>add workaround for removal of Xmu dependency from Xaw's\n        package file (report by Jeremy Huddleston).</li>\n\n        <li>improve workaround in <code>CF_X_TOOLKIT</code> macro,\n        checking for other possible packages where Xt's\n        dependencies may be given.</li>\n\n        <li>prefer <code>${name:=value}</code> to\n        <code>${name-value}</code>, since recent bash changes break\n        legacy support for that feature.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_266\" id=\"xterm_266\">Patch #266 -\n  2010/10/24</a></h1>\n\n  <ul>\n    <li>add rpm and dpkg scripts, for testing.</li>\n\n    <li>more fixes for Debian #600707 (report by Cyril\n    Brulebois).</li>\n  </ul>\n\n  <h1><a name=\"xterm_265\" id=\"xterm_265\">Patch #265 -\n  2010/10/22</a></h1>\n\n  <ul>\n    <li>fix a regression in fontname logic from <a href=\n    \"#xterm_263\">patch #263</a> changes (Debian #600707, reported\n    by Vincent Lef&egrave;vre).</li>\n\n    <li>revert modification of any-event/any-button protocol from\n    <a href=\"#xterm_263\">patch #263</a> changes. It interferes with\n    selection using a shifted mouse button (reports by Neil Bird,\n    Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_264\" id=\"xterm_264\">Patch #264 -\n  2010/10/14</a></h1>\n\n  <ul>\n    <li>replace a null-pointer check with check for empty string in\n    <code>xtermOpenFont</code>, to eliminate a warning message from\n    <a href=\"#xterm_263\">patch #263</a> changes.</li>\n\n    <li>build-fix for <a href=\"#xterm_263\">patch #263</a> when\n    toolbar is not configured (patch by Chris Clayton) (reports by\n    Robby Workman, David Wood).</li>\n  </ul>\n\n  <h1><a name=\"xterm_263\" id=\"xterm_263\">Patch #263 -\n  2010/10/13</a></h1>\n\n  <ul>\n    <li>corrected initialization of \"misc\" resource values, to\n    ensure that xterm has allocated a copy of strings which may not\n    have been malloc'd by the X library (Debian #600129).</li>\n\n    <li>modify handling of any-event/any-button mouse protocol; it\n    now is active with any combination of key-modifiers.</li>\n\n    <li>add debugging feature <code>showWrapMarks</code>, which\n    marks lines which xterm knows are wrapped, showing where a\n    double-click will select past the end of a line.</li>\n\n    <li>build-fix to address change in include-guards for\n    <code>Xlib.h</code> in ongoing Xorg edits (patch by Jeremy\n    Huddleston).</li>\n\n    <li>improve <code>pointerMode</code> by continuing to watch for\n    motion events after mouse tracking is disabled if the pointer\n    is hidden (Debian #594856).</li>\n\n    <li>further extend initialization for active-icon font to check\n    if the font was not loaded successfully, to retry with\n    <code>font1</code>, or as even (if TrueType fonts are used) to\n    use a TrueType font. The retries are to help with cases as in\n    <a href=\"#xterm_241\">patch #241</a> where the bitmap fonts are\n    not available.</li>\n\n    <li>fix special case of active-icon used when TrueType font is\n    specified for the xterm window, from <a href=\"#xterm_261\">patch\n    #261</a> change. In that case, the default font's size was used\n    for layout of the active icon's window (Debian #591265).</li>\n  </ul>\n\n  <h1><a name=\"xterm_262\" id=\"xterm_262\">Patch #262 - 2010/8/30</a></h1>\n\n  <ul>\n    <li>fix a case where changing the cursor color via escape\n    sequences did not immediately update the screen (report by\n    Andreas Wagner).</li>\n\n    <li>implement ANSI and DEC request-mode control sequences. The\n    latter includes the xterm-specific private modes such as the\n    mouse mode. The feature is ifdef'd with the rectangle\n    operations since its decoding overlaps that feature.</li>\n\n    <li>correct typo in ctlseqs.ms for response of OSC 21 (patch by\n    Kevin Schoedel).</li>\n\n    <li>improve discussion of mouse tracking in ctlseqs.ms</li>\n\n    <li>increase an array limit used in reporting mouse events\n    (report by Ryan Johnson).</li>\n\n    <li>add extended mouse-coordinates mode, allowing up to\n    2015x2015 windows, using UTF-8 encoding (patch by Ryan\n    Johnson).</li>\n\n    <li>modify manpage hyphens to conform with <a href=\n    \"http://lintian.debian.org/tags/hyphen-used-as-minus-sign.html\">\n    Debian</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_261\" id=\"xterm_261\">Patch #261 - 2010/6/28</a></h1>\n\n  <ul>\n    <li>fix regression in <code>renderFont</code> logic, from\n    <a href=\"#xterm_260\">patch #260</a> changes (report by Joseph\n    Quinsey).</li>\n  </ul>\n\n  <h1><a name=\"xterm_260\" id=\"xterm_260\">Patch #260 - 2010/6/20</a></h1>\n\n  <ul>\n    <li>modify <code>plink.sh</code> to work around problem linking\n    to recent PCRE libraries.</li>\n\n    <li>extend <code>renderFont</code> resource to allow deferred\n    switch to TrueType fonts without affecting existing resource\n    settings (Debian #585620).</li>\n\n    <li>modify configure macro CF_X_TOOLKIT to work around omission\n    of ICE library from \".pc\" file (report by Miroslav\n    Lichvar).</li>\n\n    <li>change configure script default for\n    <code>--enable-broken-st</code> i.e., the\n    <code>brokenStringTerm</code> feature) to normally enable it.\n    If the corresponding resource is enabled, this feature\n    eliminates an apparent freeze of xterm when sending mis-encoded\n    data to the screen (Debian #584801).</li>\n\n    <li>document in manpage some actions which were overlooked:\n      <ul>\n        <li>readline-button</li>\n\n        <li>scroll-lock</li>\n\n        <li>set-8-bit-control</li>\n      </ul>\n    </li>\n\n    <li>undo a change to limit-check in <code>ScrnRefresh</code> in\n    <a href=\"#xterm_257\">patch #257</a>, which broke\n    <code>fastScroll</code> feature (Debian #584841).</li>\n\n    <li>modify handling of <code>brokenLinuxOSC</code> and\n    <code>brokenStringTerm</code> to also sound the bell.</li>\n\n    <li>add control/D and control/Q to controls which will cause\n    early exit from control string per\n    <code>brokenStringTerm</code> resource.</li>\n\n    <li>improve documentation of <code>brokenStringTerm</code>\n    resource in manpage.</li>\n  </ul>\n\n  <h1><a name=\"xterm_259\" id=\"xterm_259\">Patch #259 - 2010/6/5</a></h1>\n\n  <ul>\n    <li>modify configure check for <a href=\n    \"https://invisible-island.net/luit/\">luit</a> to include new\n    aliases for the program (<code>xterm-filter</code> and\n    <code>bluit</code>).</li>\n\n    <li>add workaround in <code>xtermClearLEDs()</code> to account\n    for Xkb's override, making vttest's LED demo reset the scroll\n    lock.</li>\n\n    <li>filter out client-message events when deciding whether to\n    hide cursor, e.g., when using SCIM (patch/report by anonymous\n    user).</li>\n\n    <li>improve description of <code>-bd</code> option in manpage\n    (report by Guy Daniel Clotilde).</li>\n\n    <li>modify configure checks for PCRE and other libraries to use\n    <code>pkg-config</code>, if available.</li>\n\n    <li>amend change from <a href=\"#xterm_252\">patch #252</a>, to\n    take <code>veryColorColors</code> resource into account when\n    checking <code>colorBDMode</code> resource for TrueType fonts\n    (report by anonymous user).</li>\n\n    <li>add <code>vttests/query-fonts.pl</code> script for\n    demonstrating the <code>OSC&nbsp;50</code> font query.</li>\n\n    <li>improve manpage discussion of Scroll Lock feature.</li>\n\n    <li>improve configure macros CF_GCC_VERSION and\n    CF_GCC_WARNINGS.</li>\n\n    <li>fix warnings for \"clang --analyze\".</li>\n\n    <li>change default for <code>allowScrollLock</code> resource to\n    <code>false</code>, noting that the supposedly unused key has\n    been useful for various rebindings (Debian #580946).</li>\n  </ul>\n\n  <h1><a name=\"xterm_258\" id=\"xterm_258\">Patch #258 - 2010/5/1</a></h1>\n\n  <ul>\n    <li>add pointer-checks in <code>ScrnRefresh</code> to fix a\n    case in rapid scrolling where an empty record is fetched from\n    the scrollback FIFO.</li>\n  </ul>\n\n  <h1><a name=\"xterm_257\" id=\"xterm_257\">Patch #257 - 2010/4/22</a></h1>\n\n  <ul>\n    <li>correct ctlseqs.ms description of OSC 17 and OSC 19 (patch\n    by Emanuele Giaquinta).</li>\n\n    <li>corrected logic for <code>menuLocale</code> resource; the\n    <code>setlocale</code> function returns the original locale\n    only when querying.</li>\n\n    <li>improve filtering of translations resource, narrowing the\n    scope of the <code>alwaysUseMods</code> to address only the\n    translations that would cause a key to be sent to the host\n    (report by Andrew Gaylard).</li>\n\n    <li>change default value of <code>menuLocale</code> resource to\n    \"C\", to work around longstanding <a href=\n    \"https://invisible-island.net/xterm/xterm.faq.html#slow_menus\">Xorg\n    bug</a>.</li>\n\n    <li>modify handling of <code>scrollKey</code> feature to ignore\n    XON/XOFF keys.</li>\n\n    <li>implement scroll-lock feature.</li>\n\n    <li>revise memory allocation in UTF8toLatin1() to fix an\n    out-of-bounds index (Mandriva #54531).</li>\n\n    <li>compute value for first wide-character rather than assuming\n    it is 256, fixes problem with <code>-cjk_width</code>\n    introduced in patches <a href=\"#xterm_242\">242</a> and <a href=\n    \"#xterm_249\">249</a> (report by Thomas Wolff).</li>\n\n    <li>improve configure script:\n      <ul>\n        <li>corrected check for <code>_XOPEN_SOURCE</code> for\n        OpenSolaris.</li>\n\n        <li>when possible, add rpath option for libraries in\n        unusual places</li>\n\n        <li>add configure option <code>--disable-rpath-hack</code>\n        to control whether the rpath option can be added.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>AllocateTermColor()</code> to separate\n    initialization from control sequences, fixing problem from\n    <a href=\"#xterm_254\">patch #254</a> changes where enabling\n    <code>allowSendEvents</code> resource prevents setting cursor\n    color on command-line (Debian #572928).</li>\n\n    <li>amend logic from <a href=\"#xterm_185\">patch #185</a> to not\n    reallocate cell-array if processing\n    <code>ESC&nbsp;%&nbsp;G</code> to switch from UTF-8 if already\n    in ISO-8859-1 character set (report by Michael Koehne).</li>\n\n    <li>fix to avoid calling <code>XmuInternStrings()</code> with\n    zero count (report by Johan Bockg&aring;rd).</li>\n\n    <li>fix build when --disable-ansi-color configure option is\n    used.</li>\n\n    <li>fix build when neither OPT_TCAP_QUERY or OPT_TCAP_FKEYS is\n    defined (patch by Matthieu Herrb)</li>\n  </ul>\n\n  <h1><a name=\"xterm_256\" id=\"xterm_256\">Patch #256 - 2010/3/6</a></h1>\n\n  <ul>\n    <li>add TerminalEmulator to desktop category files.</li>\n\n    <li>modify <code>sinstall.sh</code> to ignore the \".\" appended\n    to permissions by selinux.</li>\n\n    <li>change app-defaults organization, installing UXTerm-color\n    and KOI8XTerm-color for consistent behavior regarding\n    <code>customization:&nbsp;color</code> (prompted by discussion\n    in Ubuntu #421261).</li>\n\n    <li>fix typo in <code>minstall.sh</code> from <a href=\n    \"#xterm_255\">patch #255</a> changes, and add case for\n    <code>/var/run</code> needed for full path of utmp (report by\n    Julien Cristau).</li>\n\n    <li>minor fix to xterm manpage, remove a comment stating that\n    margin bell can be changed via the VT Options menu. That was\n    replaced in <a href=\"#xterm_225\">patch #225</a></li>\n\n    <li>add a \"docs\" rule to makefile.</li>\n\n    <li>fix initialization of Atom used for <code>XkbBell</code>\n    feature from <a href=\"#xterm_243\">patch 243</a> changes. Unlike\n    the other calls to <code>XInternAtom()</code>, in this case the\n    flag telling X to create the Atom was unset (patch by Chris\n    Adams).</li>\n  </ul>\n\n  <h1><a name=\"xterm_255\" id=\"xterm_255\">Patch #255 - 2010/1/21</a></h1>\n\n  <ul>\n    <li>rename <code>install.sh</code> to <code>install-sh</code>\n    in case suffix-rules might interfere.</li>\n\n    <li>extend range for <code>convertToUTF8</code> function to\n    full 31-bits, to use with printing, etc.</li>\n\n    <li>improve manpage by checking for actual locations of\n    utmp/wtmp files (Debian #562640).</li>\n\n    <li>modify configure macro CF_XOPEN_SOURCE to remove -D's\n    before adding the same name rather than relying on -U's, to\n    reduce redefinition warnings for some platforms that have\n    conflicting definitions in headers.</li>\n\n    <li>correct logic used to switch to alternate screen using\n    FIFO-lines configuration (Debian #565772).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_254\" id=\"xterm_254\">Patch #254 - 2010/1/6</a></h1>\n\n  <ul>\n    <li>add a configure-check to eliminate <code>install-ti</code>\n    rule from Makefile when the system has no tic (terminfo\n    compiler) program. This lets one use the\n    <code>install-full</code> rule more consistently.</li>\n\n    <li>amend change to WriteText() function in <a href=\n    \"#xterm_252\">patch #252</a> to take into account the\n    <code>colorAttrMode</code> resource (report by Krzysztof\n    Kotlenga).</li>\n\n    <li>document <code>titleModes</code> resource in manpage, added\n    in <a href=\"#xterm_252\">patch #252</a>.</li>\n\n    <li>modify tcap-query table entries for shifted up/down cursor\n    keys to match ncurses convention.</li>\n\n    <li>improve lookup of termcap-query data, allowing for\n    duplicate keycodes versus missing entries.</li>\n\n    <li>add control sequence which can be used to modify the\n    terminal data used for the termcap-keyboard.</li>\n\n    <li>improve portability of tcap-query feature, using terminfo\n    functions in preference to termcap on systems having\n    terminfo.</li>\n\n    <li>improve font-setting/querying control\n    (<code>OSC&nbsp;50</code>):\n      <ul>\n        <li>when TrueType font is selected, the TrueType\n        <code>faceName</code> will be set, rather than the bitmap\n        font.</li>\n\n        <li>when TrueType font is selected, querying returns the\n        name of the TrueType font.</li>\n\n        <li>querying a font recognizes the relative-font convention\n        that setting a font could use.</li>\n      </ul>\n    </li>\n\n    <li>add menu-entry for allowColorOps.</li>\n\n    <li>add new resources for fine-tuning menu entries:\n    <code>allowColorOps</code>, <code>disallowedColorOps</code>,\n    <code>disallowedFontOps</code> and\n    <code>disallowedTcapOps</code>.</li>\n\n    <li>correct logic for disabling the \"TrueType Fonts\" menu item;\n    it was not ensuring that the <code>faceName</code> resource\n    value was non-empty.</li>\n\n    <li>implement VT520-style controls <code>DECSMBV</code> and\n    <code>DECSWBV</code> for setting the margin- and warning-bell\n    volume.</li>\n\n    <li>fix a minor error from <a href=\"#xterm_243\">patch #243</a>\n    which made the zIconBeep feature use a minor-error tone rather\n    than an informational tone.</li>\n\n    <li>add a null-pointer check for the case where\n    <code>renderFont</code> resource is true, but\n    <code>faceName</code> resource is unset, used in logic to strip\n    \"xft:\" prefix from <a href=\"#xterm_251\">patch #251</a> changes\n    (patch by Michael Riepe).</li>\n\n    <li>add special case to configure CF_XOPEN_SOURCE macro to use\n    extensions on Darwin (patch by Dennis Preiser).</li>\n\n    <li>improve configure checks for regular expressions header and\n    library</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_253\" id=\"xterm_253\">Patch #253 -\n  2009/12/10</a></h1>\n\n  <ul>\n    <li>add a null-pointer check in <code>getPrinterFlags()</code>\n    per changes in <a href=\"#xterm_252\">patch #252</a>.</li>\n\n    <li>add a null-pointer check, needed in UTF-8 mode for Xft\n    fonts after changes in <a href=\"#xterm_252\">patch #252</a>\n    (patch by Alan Coopersmith).</li>\n\n    <li>correct size when clearing struct for tek4014 (patch by\n    Jochen Voss).</li>\n\n    <li>parenthesize expression in <code>MoreRows</code> macro,\n    fixing a limit check added in <a href=\"#xterm_251\">patch\n    #251</a> (Debian #560039).</li>\n  </ul>\n\n  <h1><a name=\"xterm_252\" id=\"xterm_252\">Patch #252 - 2009/12/7</a></h1>\n\n  <ul>\n    <li>modify title-querying logic to support retrieval of titles\n    encoded using UTF-8.</li>\n\n    <li>add new \"title-modes\" control sequence for controlling\n    whether window/icon titles can be set or queried using UTF-8,\n    optionally encoded in a hexadecimal string.</li>\n\n    <li>use <code>mkdir&nbsp;-p</code> rather than\n    <code>mkdirs.sh</code> (prompted by discussion of mawk by\n    Aleksey Cheusov).</li>\n\n    <li>add appropriate copyright/license notices to the bulk of\n    files lacking same, and modify to use identical terms in others\n    which used different wording. The main exceptions are the files\n    contributed by Markus Kuhn, who appears to prefer public domain\n    distribution, noting that I have modified/improved several of\n    these without changing the terms of distribution (request by\n    Jari Aalto).</li>\n\n    <li>add control sequences for resetting the \"dynamic\" colors to\n    their default values.</li>\n\n    <li>add control sequences for resetting the \"special\" colors to\n    their default values.</li>\n\n    <li>add control sequences for setting the \"special\" colors such\n    as <code>colorBD</code> (bold).</li>\n\n    <li>add overlooked case for setting highlight foreground color\n    with the dynamic-colors control.</li>\n\n    <li>add <code>OSC 104</code>, for resetting ANSI/16/88/256\n    colors to default.</li>\n\n    <li>reset ANSI/16/88/256 colors to default in soft/hard reset\n    functions.</li>\n\n    <li>strip \"xft:\" prefix from <code>faceName</code> and\n    <code>faceNameDoublesize</code> resource values,</li>\n\n    <li>add <code>DECSCUSR</code> (discussion with Andy\n    Koppe).</li>\n\n    <li>add check/warning on failure to load font, to see if the\n    name looks like an Xft pattern rather than XLFD. This can\n    happen if someone happens to modify their X resource settings\n    for programs that read data from xterm's namespace.</li>\n\n    <li>modify handling of <code>print</code> and\n    <code>print-everything</code> actions to allow the various\n    printer flags to be overridden by supplying parameters.</li>\n\n    <li>add resource <code>printerNewLine</code> (request by Ovidiu\n    Gheorghioiu).</li>\n\n    <li>minor cleanup, finish using <code>TScreenOf()</code> and\n    <code>TekScreenOf()</code> macros introduced in <a href=\n    \"#xterm_224\">patch #224</a>.</li>\n\n    <li>improve checks in ShowCursor/HideCursor to get the\n    background color, particularly when\n    <code>highlightReverse</code> resource is used (reports by Jan\n    Engelhardt, Christian Weisgerber).</li>\n\n    <li>correct <code>checkVeryBoldAttr</code> to omit comparison\n    of foreground color to special color values used for\n    <code>color&lt;XX&gt;</code> resources (report by Jan\n    Engelhardt).</li>\n\n    <li>make <code>colorBDMode</code> and <code>colorULMode</code>\n    resources work with TrueType configuration (report by Jan\n    Engelhardt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_251\" id=\"xterm_251\">Patch #251 -\n  2009/11/11</a></h1>\n\n  <ul>\n    <li>add window-ops controls to push/pop icon and/or window\n    labels on a stack.</li>\n\n    <li>minor fixes to align termcap file with terminfo.</li>\n\n    <li>add resource <code>disallowedWindowOps</code>, to allow\n    fine-tuning of features to suppress with the\n    <code>allowWindowOps</code> resource (prompted by discussion\n    with Bram Moolenaar).</li>\n\n    <li>add makefile rules for resize-manpage to pdf, etc.</li>\n\n    <li>further improve limit-checks in select/paste (Mandriva\n    #54531).</li>\n  </ul>\n\n  <h1><a name=\"xterm_250\" id=\"xterm_250\">Patch #250 -\n  2009/10/13</a></h1>\n\n  <ul>\n    <li>add check and error-message for fonts that have no\n    printable values in the ISO-8859-1 range (Debian #542434).</li>\n\n    <li>some compiler-warning cleanup, in particular workaround for\n    defective implementation of gcc's attribute warn_unused_result\n    (report by Bram Moolenaar).</li>\n\n    <li>improve estimate of single-column width for packed TrueType\n    fonts by ignoring extents for codes 127 and 159.</li>\n\n    <li>improve line-drawing for TrueType fonts which happen to\n    have defined glyphs which are <em>not</em> line-drawing in\n    0..31 by assuming they're not, and just checking the existence\n    of the Unicode codepoints. This makes it more likely that the\n    user can override a misconfigured font using the \"Line-Drawing\n    Characters\" menu entry.</li>\n\n    <li>limit minimum cell-width for packed font to maximum-advance\n    reported by Xft. Some fonts are wider than that, even in the\n    Latin-1 range (Debian #550497).</li>\n\n    <li>add list of direct-contributors in \"THANKS\" file.</li>\n\n    <li>stylistic changes to this file to help scripted extraction\n    of list of contributors.</li>\n\n    <li>correct off-by-one in <code>okPosition</code> fix from\n    <a href=\"#xterm_249\">patch #249</a> limit-checks which\n    prevented double-click selection on the bottom line of the\n    screen (reports by Rajeev V. Pillai, Debian #550368).</li>\n\n    <li>add <code>-q</code> option to\n    <code>vttests/256colors2.pl</code> and\n    <code>vttests/88colors2.pl</code> to demonstrate bulk\n    initialization of color palette.</li>\n\n    <li>improve the workaround from patch #188 by enabling\n    resources for the 88-color model.</li>\n\n    <li>document in xterm manpage the limited availability of\n    resources <code>color16</code> to <code>color255</code> as\n    noted in <a href=\"#xterm_188\">patch #188</a> (Ubuntu\n    #438850).</li>\n  </ul>\n\n  <h1><a name=\"xterm_249\" id=\"xterm_249\">Patch #249 - 2009/10/1</a></h1>\n\n  <ul>\n    <li>change default for <code>allowWindowOps</code> resource to\n    false. \n    <!-- on the other hand, gnome-terminal, pterm and rxvt-unicode\n                leave most of the related functionality enabled ;-) --></li>\n\n    <li>add limit-checks for result of visual_width() function,\n    needed from <a href=\"#xterm_242\">patch #242</a> and exposed by\n    #244 changes (Debian #548321).</li>\n\n    <li>improve limit-checks in select/paste.</li>\n\n    <li>fix a remaining bug from <a href=\"#xterm_230\">patch\n    #230</a> changes for displaying multi-column characters in a\n    proportional font (report by Chris Jones).</li>\n\n    <li>add new resource forcePackedFont and menu entry \"Packed\n    Font\" to control whether to use the font's minimum (default) or\n    maximum width when those differ. The workaround which xterm\n    uses to accommodate proportional fonts is not necessary with\n    certain fonts such as unifont which happen to store a mixture\n    of multicolumn glyphs (report by Chris Jones).</li>\n\n    <li>fix an (old) bug which did not restart the timer for\n    blinking text if the only blinking text was temporarily\n    scrolled out of view, e.g., using the scrollbar.</li>\n\n    <li>fix an (old) flaw in the delete-line operation where the\n    text which is scrolled into view while the display is scrolled\n    up was not repainted.</li>\n\n    <li>improve delete-line and insert-line operations, retaining\n    selection when the selection does not intersect the\n    deleted/inserted lines.</li>\n\n    <li>fix an (old) off-by-one error when an application cleared\n    above the cursor position while the display was scrolled up,\n    that would leave an extra line of text uncleared.</li>\n\n    <li>fix a similar problem where the double-size attribute would\n    not be reset when clearing the screen while the display was\n    scrolled up.</li>\n\n    <li>fix an indexing error which would occur if an application\n    cleared a line while the display was scrolled up and was also\n    in UTF-8 mode (Redhat #524503). The error was from <a href=\n    \"#xterm_228\">patch #228</a> but more visible after changes from\n    <a href=\"#xterm_244\">patch #244</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_248\" id=\"xterm_248\">Patch #248 - 2009/9/11</a></h1>\n\n  <ul>\n    <li>fix an overlooked adjustment for selecting double-width\n    characters in the narrow-character configuration.</li>\n\n    <li>eliminate uses of <code>XTERM_CELL</code> and\n    <code>XTERM_CELLC</code> where an appropriate\n    <code>LineData</code> pointer is available.</li>\n\n    <li>correct expression in <code>okScrnRow</code> macro, making\n    selections give the length of lines below the visible screen\n    (report by Stuart Henderson).</li>\n\n    <li>correct logic used to improve performance of missing-glyph\n    check, which did not handle line-drawing characters (Debian\n    #545220).</li>\n  </ul>\n\n  <h1><a name=\"xterm_247\" id=\"xterm_247\">Patch #247 - 2009/8/30</a></h1>\n\n  <ul>\n    <li>add ifdef's and check for openpty() on DragonFly (patch by\n    Alex Hornung).</li>\n\n    <li>correct calculation for size of line's data block, which\n    was sometimes off-by-one when configured using\n    <code>--enable-16bit-chars</code> (report by H Merijn\n    Brand).</li>\n\n    <li>fix indexing error in print-everything feature from\n    <a href=\"#xterm_246\">patch #246</a> (patch by Ovidiu\n    Gheorghioiu).</li>\n  </ul>\n\n  <h1><a name=\"xterm_246\" id=\"xterm_246\">Patch #246 - 2009/8/16</a></h1>\n\n  <ul>\n    <li>remove obsolete logic for saving/restoring wrapping flags,\n    which did not work on 64-bit platform. Wrapping flags (stored\n    in the line-index) are now copied with line-data (Debian\n    #541160).</li>\n\n    <li>modify comments in app-defaults files to avoid problem with\n    C preprocessor used by <code>xrdb</code> (Debian #541603).</li>\n\n    <li>restore special case in <code>makeColorPair</code>, needed\n    for <code>colorBDMode</code> resource (Debian #541089).</li>\n\n    <li>correct <code>SetLineFlags()</code> macro, broken in\n    <a href=\"#xterm_244\">patch #244</a> when recoding to avoid\n    gcc-specific bitfields (Debian #541236).</li>\n\n    <li>modify initialization of screen buffers to ensure that\n    pointers align to int-boundaries. This fixes a problem\n    introduced in <a href=\"#xterm_244\">patch #244</a> where the\n    color- and character-arrays (stored after the video-attributes\n    in each row) might be misaligned (report by Rajeev V\n    Pillai).</li>\n\n    <li>add limit-check in <code>ScrnRefresh</code> for handling\n    saved-lines from the circular buffer which are repainted on a\n    screen whose width has increased. To improve performance,\n    circular buffer entries are not resized (report by Rajeev V\n    Pillai).</li>\n\n    <li>correct type for <code>CellColor</code> (a late change in\n    <a href=\"#xterm_244\">patch #244</a> to avoid gcc-specifc enums\n    made that unsigned rather than unsigned short, for the\n    256-color option).</li>\n\n    <li>fix typo in configure option --enable-16bit-chars (report\n    by Rajeev V. Pillai).</li>\n  </ul>\n\n  <h1><a name=\"xterm_245\" id=\"xterm_245\">Patch #245 - 2009/8/12</a></h1>\n\n  <ul>\n    <li>correct a special case in saving FIFO-lines from <a href=\n    \"#xterm_244\">patch #244</a>. If the screen was shrunk, xterm\n    used the wrong amount for copying to FIFO-lines, and then used\n    this amount to adjust the current row on the screen. That was\n    both a visible defect (Debian #541109) as well as a potential\n    addressing error (Debian #541132, Debian #541160, and Debian\n    #541236).</li>\n\n    <li>add clarification in xterm manual about the various\n    <code>allow<em>XXX</em>Ops</code> resources, which are disabled\n    when the <code>allowSendEvents</code> resource is active (patch\n    by Julien Cristau, Debian #531597).</li>\n  </ul>\n\n  <h1><a name=\"xterm_244\" id=\"xterm_244\">Patch #244 - 2009/8/9</a></h1>\n\n  <ul>\n    <li>refactored storage of saved-lines, providing a configure\n    option to manage them as a FIFO (actually a circular buffer),\n    improving performance. Added configure option\n    <code>--enable-fifo-lines</code> to enable/disable the new\n    feature (it is enabled by default).</li>\n\n    <li>added <code>fastScroll</code> resource, to amuse people who\n    measure terminal emulator performance by <code>cat</code>'ing\n    large files to the screen.</li>\n\n    <li>modify check in <code>readPtyData</code> from return values\n    to provide exit on zero-bytes read from pty for FreeBSD, or\n    eliminate high-CPU in \"xterm-hold\" processing (discussion with\n    Ulrich Spoerlein, FreeBSD ports/136686). The check was\n    originally modified to combine negative/zero values in\n    XFree86-3.1.2E, 1996/05/06.</li>\n\n    <li>add configure option <code>--enable-16bit-chars</code> to\n    provide wide-characters with 16-bits (rather than the default\n    32-bits).</li>\n\n    <li>add <code>retryInputMethod</code> resource to allow\n    configuring out the retries xterm uses to connect to\n    non-responsive XIM server, to work around defective X\n    configurations as noted in <a href=\n    \"http://mail-index.netbsd.org/tech-x11/2009/06/07/msg000511.html\">\n    NetBSD mailing list</a>.</li>\n\n    <li>make regular-expression selection work for VT100\n    double-sized characters.</li>\n\n    <li>improve layout when drawing missing characters in a\n    proportional font, e.g., as boxes, to take into account whether\n    they are double-width (report by Guilbert Stabilo on\n    comp.unix.shell).</li>\n\n    <li>add capability for keypad-center (kb2/KA2) to termcap entry\n    for xterm-new, as well as xterm-8bit, xterm-sun and xterm-vt220\n    (FreeBSD conf/136336).</li>\n\n    <li>change default for <code>keepSelection</code> resource to\n    true (prompted by discussion with David Muir Sharnoff).</li>\n\n    <li>remove a limit-check in ptydata.c, allowing Unicode values\n    past 64k to be displayed using TrueType fonts (Debian\n    #458432).</li>\n\n    <li>remove a vt52-specific ifdef to allow mapping F1-F4 to\n    PF1-PF4 when vt52 support is not compiled (report by Olaf\n    'Rhialto' Seibert).</li>\n\n    <li>save/restore line-wrapping flags when converting from\n    ISO-8859-1 encoding to UTF-8 encoding, as well as when resizing\n    screen.</li>\n\n    <li>remove extra adjustment of position in fix for Debian\n    #418324.</li>\n\n    <li>modify default check for <code>mkWidth</code> resource to\n    check for line-drawing characters, which are categorized as\n    double-width in Solaris 10 (report by Sebastian Kayser).</li>\n\n    <li>add \"print-everything\" action (patch by Ovidiu\n    Gheorghioiu).</li>\n\n    <li>start refactoring scrollback data using new getLineData()\n    function.</li>\n\n    <li>demote recent change to Debian #252873 fix to experimental,\n    ifdef'd out as <code>EXP_BOGUS_FG</code> (Debian #522141).</li>\n\n    <li>work around groff mapping of ASCII quotes using macros\n    (requested by Reuben Thomas based on Colin Watson advice, fixes\n    Debian #378700).</li>\n\n    <li>correct symbol used for default of\n    <code>allowWindowOps</code> which was\n    <code>DEF_ALLOW_FONT</code> rather than\n    <code>DEF_ALLOW_WINDOW</code> (report by Matthieu Herrb).</li>\n\n    <li>amend fix for tek4014 from <a href=\"#xterm_243\">patch\n    #243</a> to make it only apply to the Tek Options menu.</li>\n  </ul>\n\n  <h1><a name=\"xterm_243\" id=\"xterm_243\">Patch #243 - 2009/3/28</a></h1>\n\n  <ul>\n    <li>revert change to default for <code>allowTcapOps</code>\n    (request by Bram Moolenaar).</li>\n\n    <li>reallocate result returned by <code>xtermEnvLocale()</code>\n    to avoid reference to freed memory after handling\n    <code>menuLocale</code> resource.</li>\n\n    <li>fix an old (X11R5) bug in tek4014 for switching\n    fontsizes.</li>\n\n    <li>add resource <code>defaultString</code> to make\n    configurable the use of \"#\" when pastes of UTF-8 text fail due\n    to limitations in the current locale settings.</li>\n\n    <li>make the set of selection target Atom's configurable by two\n    new resources <code>eightBitSelectTypes</code> and\n    <code>utf8SelectTypes</code>, e.g., to use the\n    <code>TEXT</code> Atom in preference to\n    <code>UTF8_STRING</code> (discussion with Stanislav Sedov\n    regarding koi8rxterm and the FreeBSD port).</li>\n\n    <li>modify handling of <code>TARGETS</code> Atom by making it\n    return exactly the set of targets as those which xterm is\n    currently providing.</li>\n\n    <li>set <code>MANPAGER</code> and <code>PAGER</code> explicitly\n    to /bin/cat in <code>minstall.sh</code> to work around\n    /etc/man.conf's with those variables already set (report by\n    &#1052;&#1072;&#1088;&#1100;&#1103;&#1089;&#1080;&#1085;\n    &#1057;&#1077;&#1084;&#1105;&#1085;).</li>\n\n    <li>improve error-checking of tcap-query parser.</li>\n\n    <li>add check for keyboard <code>tcap</code>), which ensures\n    that terminal descriptions containing the same string for\n    shifted/unshifted keys will be seen by tcap-query as only the\n    unshifted key. (This would only happen with an incorrect\n    terminal description).</li>\n\n    <li>fix conversion for input event-state to modifier-parameter\n    which made tcap-query feature not work with\n    <code>tcapFunctionKeys</code> (keyboard type\n    <code>tcap</code>).</li>\n\n    <li>add \"DEF_ALLOW_<em>XXX</em>\" definitions to main.h to allow\n    overriding the default compiled-in values for\n    \"allow<em>xxx</em>\" resources.</li>\n\n    <li>remove check on bell-percentage added in <a href=\n    \"#xterm_242\">patch #242</a>, which disallowed zero/negative\n    values (Redhat Bugzilla #487829).</li>\n  </ul>\n\n  <h1><a name=\"xterm_242\" id=\"xterm_242\">Patch #242 - 2009/2/15</a></h1>\n\n  <ul>\n    <li>fix configure check for <code>XkbBell</code> and provide\n    appropriate parameter for it.</li>\n\n    <li>fix a caching problem with double-size fonts versus reverse\n    video that could cause core dump.</li>\n\n    <li>repair double-size fonts from workaround used in <a href=\n    \"#xterm_240\">patch #240</a>.</li>\n\n    <li>add new section to the VT Fonts menu which allows enabling\n    or disabling the font, termcap (tcap-query), title and window\n    operations.</li>\n\n    <li>add <code>fontWarnings</code> resource, to control whether\n    to show warnings on failure to load a font.</li>\n\n    <li>improve warnings for unloadable fonts introduced in\n    <a href=\"#xterm_240\">patch #240</a> by limiting those to the\n    cases where a font would be specified directly by a resource\n    setting rather than a derived fontname.</li>\n\n    <li>further amend fix for Debian #252873 from <a href=\n    \"#xterm_197\">patch #197</a> to treat a blank cell which does\n    not have both foreground and background colored as a\n    non-colored cell. This improves a special case where the cursor\n    is on a blank cell which had foreground color scrolled in\n    (report by Miroslav Lichvar).\n      <p>Also add the same logic when hiding cursor, so the outline\n      matches the in-focus cursor.</p>\n    </li>\n\n    <li>modify internals to reduce places PAIRED_CHARS() is used,\n    making WriteText() and ScrnWriteText() accept IChar array, as\n    well as providing a wrapper for drawXtermText().</li>\n\n    <li>change default XIM font from \"*\" to \"fixed\" to improve\n    startup time in zh_CN.UTF-8 locale (Mike Fabian, SuSE Bugzilla\n    #464930).</li>\n\n    <li>typo in #240 log (Slava Semushin)</li>\n  </ul>\n\n  <h1><a name=\"xterm_241\" id=\"xterm_241\">Patch #241 - 2009/1/26</a></h1>\n\n  <ul>\n    <li>improve checks for missing bitmap fonts, fallback to\n    \"fixed\" as needed to work around broken font-packages (report\n    by Jacek Luczak).</li>\n\n    <li>fix breakage from <a href=\"#xterm_240\">patch #240</a>\n    changes for <code>xtermAddInput()</code> (patches by Jeff Chua,\n    Julien Cristau).</li>\n  </ul>\n\n  <h1><a name=\"xterm_240\" id=\"xterm_240\">Patch #240 - 2009/1/25</a></h1>\n\n  <ul>\n    <li>use <code>plink.sh</code> for linking xterm (suggested by\n    Larry Doolittle).</li>\n\n    <li>add resource descriptions for input method to xterm\n    manpage.</li>\n\n    <li>update configure script; consistently append to $CFLAGS\n    rather than prepend.</li>\n\n    <li>add <code>install-scripts</code> rule to makefile, to allow\n    koi8rxterm and uxterm scripts to be altered independently of\n    <code>install-bin</code></li>\n\n    <li>add <code>-maximized</code> command-line option and\n    corresponding resource (prompted by alt.os.linux newsgroup\n    comment).</li>\n\n    <li>modify translations of scrollbar widget using\n    <code>xtermAddInput()</code> (see <a href=\"#xterm_181\">patch\n    #181</a>) to accept the actions that the vt100 widget accepts,\n    such as shift-insert to perform a paste operation (request by\n    Martin Zwickel).</li>\n\n    <li>change default for <code>allowTcapsOps</code> resource to\n    false, since it causes unexpected behavior for vim users with\n    <code>AltGr</code>.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_239\" id=\"xterm_239\">Patch #239 - 2009/1/8</a></h1>\n\n  <ul>\n    <li>correct a cast in input.c, which broke translation of\n    numeric keypad codes to pageup, pagedown, etc., on 64-bit\n    platform (Debian #511138, report by Larry Doolittle).</li>\n  </ul>\n\n  <h1><a name=\"xterm_238\" id=\"xterm_238\">Patch #238 -\n  2008/12/30</a></h1>\n\n  <ul>\n    <li>update configure macro CF_XOPEN_SOURCE for AIX 6.x and Mint\n    platforms.</li>\n\n    <li>reset the screen wrapping-flag at the end of\n    <code>ClearRight</code> to fix an occasional case where the\n    last character of a scrolled and wrapped line would be cleared\n    (patch by Joe Peterson).</li>\n\n    <li>modify to use POSIX coding for comparing resource settings\n    such as <code>locale</code>, to work with locales such as\n    Turkish (report by M Vefa Bicakci).</li>\n\n    <li>turn on configure <code>paste64</code> feature by default\n    (request by Jean-Philippe Bernardy). It is runtime\n    enabled/disabled with <code>allowWindowOps</code>.</li>\n\n    <li>turn on configure <code>tcap-query</code> feature by\n    default, add resource <code>allowTcapOps</code> to make this\n    runtime enabled/disabled.</li>\n\n    <li>make <code>OSC 3</code> (change X property, from <a href=\n    \"#xterm_110\">patch #110</a>) subject to\n    <code>allowWindowOps</code> resource.</li>\n\n    <li>make VT220 <code>DSR</code> responses inactive in\n    VT100-mode.</li>\n\n    <li>make <code>DECUDK</code> feature inactive in\n    VT100-mode.</li>\n\n    <li>respond to incorrectly formatted <code>DECRQSS</code> with\n    a cancel.</li>\n\n    <li>add <code>allowFontOps</code> resource to allow the\n    fontsize-switching and font query/set control sequences to be\n    enabled/disabled (prompted by Debian #510030).</li>\n\n    <li>some code cleanup based on gcc 4.x\n    <code>-Wconversion</code> warnings in button.c and\n    charproc.c</li>\n\n    <li>modify <code>tcap-query</code> feature to not return data\n    for shifted cursor-keys when the keyboard type is set to vt220,\n    since returning the same string for shifted/unshifted keys may\n    confuse some applications (Gentoo #212546).</li>\n  </ul>\n\n  <h1><a name=\"xterm_237\" id=\"xterm_237\">Patch #237 -\n  2008/09/14</a></h1>\n\n  <ul>\n    <li>improve usability of TrueType fonts by making the font-size\n    switching for shifted keypad plus/minus use the\n    <code>faceSize</code> resources to determine the order of fonts\n    (when TrueType fonts are used) rather than the bitmap fonts,\n    since their sizes may not be in the same order (report by H\n    Merijn Brand)</li>\n\n    <li>remove an optimization of <code>ConfigureNotify</code>\n    events from <a href=\"#xterm_236\">patch #236</a> which seems to\n    interfere with passing <code>SIGWINCH</code> to applications\n    (Gentoo #233836).</li>\n\n    <li>modify handling of <code>altSendsEscape</code> to reset the\n    <code>eightBitInput</code> mode, like\n    <code>metaSendsEscape</code> (patch by Ted Phelps).</li>\n\n    <li>add feature to show the text-cursor as an underline rather\n    than a box, plus command-line options <code>-uc</code> and\n    <code>+uc</code> and resource <code>cursorUnderLine</code> to\n    control the feature (patch by Paul Lampert).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_236\" id=\"xterm_236\">Patch #236 -\n  2008/07/27</a></h1>\n\n  <ul>\n    <li>correct memory reallocation when handling a paste of UTF-8\n    text from <a href=\"#xterm_225\">patch #225</a> changes\n    (report/patch by Max Mikhanosha).</li>\n\n    <li>correct allocation of temporary buffer in\n    <code>xtermFindShell</code> in case the user's\n    <code>$PATH</code> contains no \":\" (report/analysis by Victor\n    Stinner, Freedesktop.Org Bugzilla #16790).</li>\n\n    <li>modify CF_XOPEN_SOURCE to add case for DragonFly BSD, to\n    fix new compile problem exposed by fix for fd_mask (patch by\n    Hasso Tepper).</li>\n\n    <li>add configure-check for ncurses\n    <code>use_extended_names</code>, (report by Martin\n    Mokrejs).</li>\n\n    <li>correct computation for toolbar height; layout manager\n    already takes into account <code>borderWidth</code>\n    resource.</li>\n\n    <li>implement VT320-style SCS (select character set) for ISO\n    Latin-1 supplemental.</li>\n\n    <li>fixes for vt100-style character sets in UTF-8 mode (Ubuntu\n    #230919).</li>\n\n    <li>fix to make <code>luit</code> work with xterm's\n    <code>-ls</code> option (report/patch by Marius Tolzmann).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_235\" id=\"xterm_235\">Patch #235 -\n  2008/04/20</a></h1>\n\n  <ul>\n    <li>add control sequences for some of the recent resource/menu\n    settings:\n      <ul>\n        <li><code>altSendsEscape</code> (private mode 1039)</li>\n\n        <li><code>keepSelection</code> (private mode 1040)</li>\n\n        <li><code>selectToClipboard</code> (private mode 1041)</li>\n\n        <li><code>bellIsUrgent</code> (private mode 1042)</li>\n\n        <li><code>popOnBell</code> (private mode 1043)</li>\n      </ul>\n    </li>\n\n    <li>add resource <code>formatOtherKeys</code> to provide an\n    alternate escape sequence format for the\n    <code>modifyOtherKeys</code> resource (request by Paul LeoNerd\n    Evans).</li>\n\n    <li>adjust saved-cursor position if the window is resized while\n    displaying the alternate screen (Novell #196880, Debian\n    #383384).</li>\n\n    <li>improve pointer-checks to fix a bug exposed by resizing\n    during initialization under StumpWM window manager (Fedora\n    Bugzilla #437928).</li>\n\n    <li>modify <code>unselectwindow()</code> to ensure that the\n    mouse pointer is not hidden after xterm loses focus (report by\n    Jeremy Huddleston).</li>\n\n    <li>add special check for fd_mask on Mac OS X (report by Jeremy\n    Huddleston).</li>\n\n    <li>add <code>dylib</code> to autoconf's suffix list used for\n    checking the result from <code>xmkmf</code>, to work with Mac\n    OS X (report by Jeremy Huddleston).</li>\n\n    <li>correct initialization of bold- and wide-, wide-bold fonts\n    which may be set via the <code>utf8Fonts</code> subresource\n    (Debian #347790).</li>\n  </ul>\n\n  <h1><a name=\"xterm_234\" id=\"xterm_234\">Patch #234 -\n  2008/03/02</a></h1>\n\n  <ul>\n    <li>modify <code>sinstall.sh</code> to use POSIX locale to\n    bypass GNU ls changes to date-format.</li>\n\n    <li>improved/refined changes for closing bitmap font (patch by\n    Andrea Odetti).</li>\n\n    <li>improve resize computation for situations where the\n    negotiation fails, by invoking the xterm widget's core-class\n    resize method (Debian #365602, patch by Jim Paris).</li>\n\n    <li>restore initialization of terminal's <code>VMIN</code> and\n    <code>VTIME</code> settings, from <a href=\"#xterm_232\">patch\n    #232</a> changes (patch by Matthieu Herrb).</li>\n  </ul>\n\n  <h1><a name=\"xterm_233\" id=\"xterm_233\">Patch #233 -\n  2008/02/24</a></h1>\n\n  <ul>\n    <li>add configure check for <code>ttydefaults.h</code>, include\n    if needed, e.g., for systems where defining\n    <code>_POSIX_C_SOURCE</code>, etc., prevents it from being\n    included via <code>termios.h</code> (prompted by comments by\n    Robert Delius Royar and Jeremy Huddleston).</li>\n\n    <li>bug-fixes for bugs.opensolaris.org (patches from Alan\n    Coopersmith)\n      <dl>\n        <dt>4029911</dt>\n\n        <dd>fix a typo in manpage</dd>\n\n        <dt>4045962</dt>\n\n        <dd>xterm doesn't properly set ut_syslen</dd>\n\n        <dt>4192572</dt>\n\n        <dd>left-left-right misinterpreted as triple click</dd>\n      </dl>\n    </li>\n\n    <li>minor optimization to tab-initialization (patch by\n    N&eacute;meth M&aacute;rton).</li>\n\n    <li>fix a case where an incorrect font was freed during\n    initialization from <a href=\"#xterm_232\">patch #232</a> changes\n    (patch by Andrea Odetti).</li>\n\n    <li>improve comparison used in <code>SameFont</code> function\n    for GC-caching (Julien Cristau).</li>\n\n    <li>correct macro name used for default <code>CKILL</code>\n    definition to work with Mac OS X (report by Jeremy\n    Huddleston).</li>\n  </ul>\n\n  <h1><a name=\"xterm_232\" id=\"xterm_232\">Patch #232 -\n  2008/01/30</a></h1>\n\n  <ul>\n    <li>corrected logic in a font-cache used for reverse-video\n    (Debian #404079).</li>\n\n    <li>add control sequence to alter <code>pointerMode</code> at\n    runtime.</li>\n\n    <li>add limit-checks for rectangle operation parameters (report\n    by Martin Pirker).</li>\n\n    <li>modify <code>minstall.sh</code> to suppress\n    <code>$MANPAGER</code> and <code>$PAGER</code> environment\n    variables, which may interfere with redirecting output of\n    <code>man</code> to a shell variable (report/patch by Zdenek\n    Sekera).</li>\n\n    <li>do not try to hide mouse pointer in the tek4014 window,\n    fixes broken \"-t\" option at startup from <a href=\n    \"#xterm_230\">patch #230</a> changes (report by Robert K.\n    Nelson).</li>\n\n    <li>correct datatype used when drawing tek4014 data using xterm\n    compiled for wide-characters, on big-endian machines (reports\n    by Jeremy Huddleston, Harald Hanche-Olsen, Martin Costabel,\n    Merle Reinhart).</li>\n\n    <li>modify to cache the font-names along with the bitmap font\n    data, to improve comparison of fonts.</li>\n\n    <li>modify to allow building with configure options\n    <code>--disable-ansi-color</code> and\n    <code>--disable-leaks</code> (Debian #459817, report/patch by\n    N&eacute;meth M&aacute;rton).</li>\n\n    <li>modify to allow building with configure options\n    <code>--enable-wide-chars</code> and\n    <code>--disable-c1-print</code> (Debian #459816, report/patch\n    by N&eacute;meth M&aacute;rton).</li>\n\n    <li>add <code>pointerMode</code> resource to control whether\n    and when the pointer cursor is hidden as the user types.</li>\n\n    <li>simplify initialization of ttyMode- and related characters\n    using a table.</li>\n\n    <li>modify initialization-logic for stty values that correspond\n    to ltchars structure and the BSD TIOCSLTC ioctl (susp, dsusp,\n    rprnt flush, werase, lnext). These were reset to constants for\n    both termios and legacy interfaces immediately after asking the\n    system for the existing values since X11R6.1, rather than using\n    them to provide inherited values. While the legacy interface\n    has some constraints, e.g., on HPUX, the POSIX or termios\n    interface should not. Your shell may reset these anyway\n    (prompted by patch by Ed Schouten).</li>\n\n    <li>improve logic for hiding/displaying pointer-cursor (report\n    by Mark Brukhartz).</li>\n\n    <li>add limit-checks to tabs.c, increase maximum column for\n    setting tab-stops from 320 to 1024 (report by N&eacute;meth\n    M&aacute;rton).</li>\n\n    <li>correct length, i.e., number of types of selection targets,\n    computed by <code>ConvertSelection()</code> when not handling\n    wide characters for the <code>XA_TARGETS()</code> case. This\n    leaves an extra Atom on the end of the list which is not\n    handled by <a href=\n    \"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6322854\">Java\n    applications</a>. The problem was introduced in <a href=\n    \"#xterm_151\">patch #151</a> (report by David Wood).</li>\n  </ul>\n\n  <h1><a name=\"xterm_231\" id=\"xterm_231\">Patch #231 -\n  2008/01/05</a></h1>\n\n  <ul>\n    <li>undo change to <code>getXtermCell()</code> from patch #230\n    using <code>PACK_PAIR</code> macro (Debian #459014, analysis by\n    Caetano Jimenez Carezzato).</li>\n\n    <li>minor documentation fixes (patch by Slava Semushin)</li>\n\n    <li>add makefile actions to install KOI8RXTerm app-defaults\n    file (patch by Julien Cristau).</li>\n  </ul>\n\n  <h1><a name=\"xterm_230\" id=\"xterm_230\">Patch #230 -\n  2007/12/31</a></h1>\n\n  <ul>\n    <li>add <code>quietGrab</code> resource, which when true,\n    suppresses cursor repainting when <code>NotifyGrab</code> and\n    <code>NotifyUngrab</code> event types are received during\n    change of focus (request by Nicolas George).</li>\n\n    <li>do not treat Unicode BIDI control characters as combining\n    characters (Debian #457634).</li>\n\n    <li>add <code>koi8rxterm</code>, from Debian.</li>\n\n    <li>add manpage for <code>uxterm</code>, from Debian (Ubuntu\n    #128136, Debian #438645)</li>\n\n    <li>remove \".xpm\" suffixes from Icon filenames in desktop files\n    since it confuses some lookups following the <a href=\n    \"http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html\">\n    Icon Theme Specification</a> (report by Slava Semushin)</li>\n\n    <li>correct width-calculation used for adjusting proportional\n    fonts, to work with wide-characters (Debian #441354).</li>\n\n    <li>fixes/improvements for double-size characters:\n      <ul>\n        <li>correct old clipping calculation which used total\n        height of glyphs where ascent was needed.</li>\n\n        <li>if bold font is unavailable, fall back to normal\n        font</li>\n\n        <li>adjust to \"work\" with Xft (which does not support\n        double-width single-height characters).</li>\n\n        <li>restore reset of doublesize for a line when it is\n        cleared, broken in <a href=\"#xterm_228\">patch\n        #228</a>.</li>\n      </ul>\n    </li>\n\n    <li>modify logic for <code>forceBoxChars</code> resource when\n    using TrueType fonts to be consistent with bitmap fonts</li>\n\n    <li>modify logic for <code>forceBoxChars</code> resource to\n    make the \"Line-Drawing Characters\" menu entry use xterm's\n    line-drawing characters even asked to draw wide line-drawing\n    characters which are available in the font.</li>\n\n    <li>modify rectangle-support functions to preserve colors when\n    filling/erasing to match WRQ Reflection behavior (request by\n    Enzo Toscano).</li>\n\n    <li>add getopt-parsing to tcapquery.pl, including feature to\n    test the extended cursor/editing keys.</li>\n\n    <li>make missing double-width glyphs display as double-width\n    (Debian #456236).</li>\n\n    <li>change <code>tcap-fkeys</code> and <code>rectangles</code>\n    configure options to enable them by default.</li>\n\n    <li>hide the mouse pointer while user is typing (request by\n    Rodolfo Borges).</li>\n\n    <li>extend configure options <code>--enable-tcap-query</code>\n    and <code>--enable-tcap-fkeys</code> to send cursor- and\n    editing-keypad keys modified according to the keyboard (or\n    termcap) selection for shift, alt, control, meta.</li>\n\n    <li>modify <code>kdch1</code> in termcap, e.g.,\n    <code>xterm-r6</code> to match the terminfo file.</li>\n\n    <li>add <code>-hm</code> option to turn\n    <code>highlightColorMode</code> on or off.</li>\n\n    <li>add <code>highlightColorMode</code> resource to separate\n    the new (since <a href=\"#xterm_225\">patch #225</a>)\n    highlighting with both text- and background-colors (prompted by\n    report/example by Thomas Wolff).</li>\n\n    <li>add <em>Keep Selection</em> menu entry to turn the\n    <code>keepSelection</code> resource on/off at runtime.</li>\n\n    <li>add <code>keepSelection</code> resource, which when\n    enabled, tells xterm to retain the X selection even after it\n    stops highlighting it (patch by Sergey Vlasov).</li>\n\n    <li>extend the <code>CSI&nbsp;&gt;&nbsp;n</code> sequence to\n    allow disabling all types of modified-keys that the\n    <code>CSI&nbsp;&gt;&nbsp;m</code> sequence affects.</li>\n\n    <li>move include for <code>&lt;xtermcap.h&gt;</code> in\n    <code>resize.c</code> to avoid redefinition of\n    <code>termios</code> structure on OpenSolaris (report by Rahul\n    Gopinathan Nair).</li>\n\n    <li>extend terminfo building blocks for modified editing keys\n    to include all six keys.</li>\n\n    <li>synchronize terminfo with ncurses (report by Stephane\n    Chazelas)\n      <ul>\n        <li>equate <code>xterm-xfree86</code> and\n        <code>xterm-xf86-v44</code>.</li>\n\n        <li>add ncurses extensions OTbs, AX, for termcap\n        conversions.</li>\n\n        <li>make old/legacy entries such as <code>xterm-24</code>,\n        <code>xterm-65</code> and aliases <code>xterms</code>,\n        <code>vs100</code> inherit from\n        <code>xterm-old</code>.</li>\n\n        <li>make <code>xterm-r5</code> and <code>xterm-r6</code>\n        the same, ignoring historical errors in X Consortium's\n        version.</li>\n      </ul>\n    </li>\n\n    <li>fix an ifdef in logic for selecting regular expressions\n    while in a narrow-character locale (Debian #449227).</li>\n  </ul>\n\n  <h1><a name=\"xterm_229\" id=\"xterm_229\">Patch #229 - 2007/8/12</a></h1>\n\n  <ul>\n    <li>override locale in minstall.sh; change in <a href=\n    \"#xterm_226\">patch #226</a> does not work in UTF-8 locale\n    (report by Zdenek Sekera).</li>\n\n    <li>undo an incorrect fix for a memory leak in <a href=\n    \"#xterm_209\">patch #209</a> (Debian #435858).</li>\n  </ul>\n\n  <h1><a name=\"xterm_228\" id=\"xterm_228\">Patch #228 - 2007/7/22</a></h1>\n\n  <ul>\n    <li>modify configure script to permit combining\n    <code>--with-utempter</code> and <code>--enable-setuid</code>,\n    e.g., for using xterm with the utempter library on FreeBSD\n    (report by Andriy Gapon).</li>\n\n    <li>modify \"Quit\" menu entry to override the <code>-hold</code>\n    command-line option.</li>\n\n    <li>add a check in the startup error-reporting to avoid writing\n    to pipe when it has not been opened. In that case, report\n    errors directly to the standard error.</li>\n\n    <li>add OPT_READLINE definition to xtermcfg.hin, overlooked in\n    <a href=\"#xterm_205\">patch #205</a> (report by Kalle Olavi\n    Niemitalo).</li>\n\n    <li>modify <code>88colors2.pl</code> and\n    <code>256colors2.pl</code>, adding <code>-r</code> option to\n    reverse the palettes for the extended colors.</li>\n\n    <li>check for partial overwrite or deletion of multi-column\n    characters in several cases, e.g., insert-character,\n    delete-character, etc., and fill the remainder of the cells\n    used by the multi-column characters affected with blanks.</li>\n\n    <li>correct character-class codes in wide-character mode for\n    characters 215, 247 (see also <a href=\"#xterm_165\">patch\n    #165</a>).</li>\n\n    <li>fix missing assignment for UTF-8 parsing in widget\n    initialization (Debian #403360).</li>\n\n    <li>correct index expression used to set line-wrapping flag,\n    making selection from scrollback work consistently (Debian\n    #430121, report by Vincent Lef&egrave;vre).</li>\n\n    <li>amend changes to handshake in <a href=\"#xterm_226\">patch\n    #226</a> to accommodate Solaris, which relies on the extra\n    setting of the terminal size after I/O initialization. Do this\n    by adding new resource <code>ptySttySize</code>, which is false\n    for Linux and MacOS X, i.e., true for for Solaris and other\n    SVR4 platforms, as well as FreeBSD (reports by David Wood,\n    Renato Botelho).</li>\n\n    <li>check for X events after cursor-left, and carriage return,\n    consistent with indexing operations (comments by Vegard Nossum\n    and Ingo Molnar on a mailing-list).</li>\n\n    <li>initialize the <code>.keyboard</code> structure, needed for\n    some platforms (such as Solaris) after <a href=\n    \"#xterm_227\">patch #227</a> fixes for keysyms (patch by David\n    Wood).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_227\" id=\"xterm_227\">Patch #227 - 2007/6/27</a></h1>\n\n  <ul>\n    <li>exclude the Intel compiler from the extra gcc warning\n    options added in <a href=\"#xterm_226\">patch #226</a>.</li>\n\n    <li>modify change for Debian #422521 from <a href=\n    \"#xterm_226\">patch #226</a> to work with configurations where\n    the X server does not recognize the <code>XF86Paste</code> or\n    <code>SunPaste</code> keysyms (report by Paolo Pumilia).</li>\n\n    <li>fix incorrect free in fix for \"Selection\" menu entry in\n    <a href=\"#xterm_226\">patch #226</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_226\" id=\"xterm_226\">Patch #226 - 2007/6/17</a></h1>\n\n  <ul>\n    <li>add configure check to use\n    <code>-Wno-unknown-pragmas</code> for Solaris, and a few other\n    new gcc warning options to address regressions in its warning\n    options.</li>\n\n    <li>add sample desktop and icon files, along with configure\n    options for manipulating them.</li>\n\n    <li>fix an infinite loop when showing a 2-column character in a\n    1-column screen (Debian #426863).</li>\n\n    <li>add <code>XF86Paste</code> and <code>SunPaste</code> to the\n    default translations (Debian #422521, patch by Bernhard R\n    Link).</li>\n\n    <li>update wcwidth.c (partly based on/prompted by mailing list\n    comment).</li>\n\n    <li>update/improve keysym2ucs.c based on Unicode 5.0.1d3 and\n    Xorg 7.1 keysymdef.h file.</li>\n\n    <li>improve <code>gen-pc-fkeys.pl</code>, making it show all of\n    the building-block terminfo entries used by xterm.</li>\n\n    <li>correct strings used for modifiers applied to F1-F4 in\n    xterm+pcf1 terminfo entry.</li>\n\n    <li>improve session management by adding the ICE connection\n    number to the <code>select</code> call rather than waking up\n    once per second (patch by Miroslav Lichvar).</li>\n\n    <li>add environment variable <code>$XTERM_LOCALE</code> to help\n    with shell initialization, e.g., to set a specific locale for\n    xterm on systems where a global locale is set in the shell\n    startup scripts.</li>\n\n    <li>add resource settings <code>mkSampleSize</code> and\n    <code>mkSamplePass</code> to modify the <code>mkWidth</code>\n    added in <a href=\"#xterm_201\">patch #201</a>. In <a href=\n    \"#xterm_202\">patch #202</a>, xterm would also check if the\n    system's <code>wcwidth</code> matched its built-in tables \"well\n    enough\" to be used when <code>mkWidth</code> was false, and if\n    not would use the built-in tables anyway. These resources allow\n    the user to customize the decision (prompted by comments by\n    Emanuele Giaquinta)</li>\n\n    <li>modify logic which resets/updates the screensize on the\n    child process side of the pseudo-terminal to do this only if a\n    successful handshake was received, e.g., as determined by the\n    <code>waitForMap</code> resource (prompted by reports by\n    Emanuele Giaquinta and Bernhard R Link, but see also <a href=\n    \"#xterm_177\">patch #177</a> and <a href=\"#xterm_159\">patch\n    #159</a>.</li>\n\n    <li>improve permissions logic when closing pseudo-terminal\n    (Debian #12261, patch by Nathanael Nerode, analysis by Richard\n    Braakman).</li>\n\n    <li>add resource <code>highlightReverse</code> which controls\n    whether xterm will allow selection highlighting to hide\n    reverse-video or use the older behavior which inverts the\n    foreground and background colors when selected text with\n    reverse-video attribute (report by Adam M Costello, comments by\n    Victor Vaile).</li>\n\n    <li>restore a special case for cursor-color in\n    <code>ReverseVideo()</code> lost in rewrite for <a href=\n    \"#xterm_224\">patch #224</a> (report by Adam Sulmicki).</li>\n\n    <li>correct initialization for menu entry for\n    <code>bellIsUrgent</code> (patch by Emanuele Giaquinta).</li>\n\n    <li>correct length of underlining for double-width Xft fonts\n    (report by Shidai Liu \"Leo\").</li>\n\n    <li>correct clipping for double-width Xft fonts (report by\n    Shidai Liu \"Leo\").</li>\n\n    <li>modify initialization for <code>italicULMode</code> to\n    avoid <code>XftPatternBuild</code> reusing bold attributes\n    (report by Shidai Liu \"Leo\").</li>\n\n    <li>add a check in case someone tries to call the\n    <code>popup-menu()</code> action on a menu which is not\n    initialized (Debian #426364).</li>\n\n    <li>improve CF_IMAKE_CFLAGS to work with Solaris sed (report by\n    Peter Bray).</li>\n\n    <li>improve guess for X's manpage section in\n    <code>minstall.sh</code>, (prompted by comment by Miroslav\n    Lichvar).</li>\n\n    <li>modify <code>minstall.sh</code> to handle manpage patch\n    with more than one dot (patch by Miroslav Lichvar).</li>\n\n    <li>fix configure message for --disable-setgid option (patch by\n    Miroslav Lichvar).</li>\n\n    <li>add <code>allowTitleOps</code> resource to allow users to\n    prevent the title- and icon-names from changing (request by\n    John Bashinski).</li>\n\n    <li>fix \"spawn-new-terminal\" action, for the case where no\n    parameter is passed to the action (patch by Daniel\n    Colascione).</li>\n\n    <li>fix error-checking on internal font switching for\n    \"Selection\" menu entry (Debian #421523).</li>\n\n    <li>amend select/paste change from <a href=\"#xterm_225\">patch\n    #225</a> by limiting it to non-UTF-8/non-KOI8-R encoding\n    (Debian #420974).</li>\n\n    <li>add workaround for groff \".URL\" codes which are not present\n    in some commonly-used bitmap fonts (Debian #418324).</li>\n  </ul>\n\n  <h1><a name=\"xterm_225\" id=\"xterm_225\">Patch #225 - 2007/3/24</a></h1>\n\n  <ul>\n    <li>add <code>useClipping</code> resource to allow clipping to\n    be disabled.</li>\n\n    <li>use <code>XftDrawSetClipRectangles</code> to work around\n    Xft pixel-trash (report by Reuben Thomas).</li>\n\n    <li>add configure option <code>--enable-tcap-fkeys</code>, and\n    resource <code>tcapFunctionKeys</code>, which can be used to\n    tell xterm to use function-key definitions from the termcap (or\n    terminfo) which it uses to set $TERM on startup.</li>\n\n    <li>add resources <code>altIsNotMeta</code> and\n    <code>altSendsEscape</code> to allow one to use Alt-keys like\n    the meta-key even if they are bound to different keycodes\n    (prompted by discussion with Daniel Jacobowitz).</li>\n\n    <li>revert a change from <a href=\"#xterm_216\">patch #216</a>\n    that unnecessarily made the meta modifier override the\n    <code>eightBitInput</code> resource if the alt- and\n    meta-modifiers happened to overlap (report/patch by Daniel\n    Jacobowitz).</li>\n\n    <li>correct associated font for active icon for colored text\n    (broken in <a href=\"#xterm_224\">patch #224</a>).</li>\n\n    <li>correct ifdef's for Darwin (patch by Emanuele\n    Giaquinta).</li>\n\n    <li>add <code>highlightTextColor</code> resource, and options\n    <code>-selfg</code>, <code>-selbg</code> like <code>xwsh</code>\n    (adapted from patch by Victor Vaile).</li>\n\n    <li>revise <code>find_closest_color()</code> function to\n    address concern about borrowing from <code>Tcl/Tk</code>\n    (request by Dan McNichol).</li>\n\n    <li>add \"spawn-new-terminal\" action, which can be assigned to\n    key translation, allowing one to spawn a new copy of xterm\n    using the current process's working directory (adapted from\n    patch by Daniel Colascione).</li>\n\n    <li>improve select/paste between UTF-8 and Latin1 xterms by\n    adapting the translations from <a href=\"#xterm_185\">patch\n    #185</a>. Extend that to include Unicode fullwidth forms\n    FF00-FF5E. Also modify select/paste of DEC line-drawing\n    characters in Latin1 mode to use ASCII characters.</li>\n\n    <li>add \"Enable Bell Urgency\" to VT Options menu, removed\n    \"Enable Margin Bell\".</li>\n\n    <li>add <code>bellIsUrgent</code> resource to control whether\n    the Urgency hint is set/reset.</li>\n\n    <li>modify to set Urgency window manager hint on bell, reset it\n    on Focus-In event (patch by Emanuele Giaquinta).</li>\n\n    <li>add <code>--disable-setgid</code> configure option (request\n    by Miroslav Lichvar).</li>\n\n    <li>fix a possible infinite loop in last change to\n    <code>dabbrev-expand()</code> (patch by Emanuele\n    Giaquinta).</li>\n\n    <li>modify initialization to set the pty erase value if the\n    <code>erase</code> is set in the <code>ttyModes</code>\n    resource. This overrides the <code>ptyInitialErase</code>\n    setting (request by Llu&iacute;s Batlle i Rossell).</li>\n\n    <li>add <code>initialFont</code> resource to xterm widget, like\n    tek-widget (Debian #299669).</li>\n\n    <li>amend change to <code>boldMode</code> from <a href=\n    \"#xterm_223\">patch #223</a> for Debian #347790. As noted in\n    Debian #412599, that made xterm no longer match the documented\n    behavior. Add new resource <code>alwaysBoldMode</code> to allow\n    overriding the comparison between normal/bold fonts when\n    deciding whether to use overstriking to simulate bold\n    fonts.</li>\n\n    <li>restore background color in ClearCurBackground(), omitted\n    in changes for <a href=\"#xterm_223\">patch #223</a> (report by\n    Miroslav Lichvar).</li>\n\n    <li>correct logic for repainting double-width TrueType\n    characters (prompted by test-case for Novell #246573).</li>\n\n    <li>add a check to avoid trying to repeat a multibyte character\n    (report by Sami Farin).</li>\n\n    <li>modify parameter to <code>XftNameParse()</code> to select\n    wide face-name as needed, to make <code>-fd</code> option work\n    (patch by Mike Fabian, Novell #246573).</li>\n\n    <li>correct logic for mouse highlight tracking's abort\n    sequence, broken in a restructuring modification from <a href=\n    \"#xterm_224\">patch #224</a> (report by Thomas Wolff).</li>\n\n    <li>revert the simplification of blinking cursor, since that\n    broke the xor'ing introduced in <a href=\"#xterm_193\">patch\n    #193</a> (report by Thomas Wolff).</li>\n  </ul>\n\n  <h1><a name=\"xterm_224\" id=\"xterm_224\">Patch #224 - 2007/2/11</a></h1>\n\n  <ul>\n    <li>simplify code for set/reset mode for blinking cursor (patch\n    by Emanuele Giaquinta).</li>\n\n    <li>modify <code>dabbrev-expand()</code> to restart after the\n    last match (patch by Emanuele Giaquinta).</li>\n\n    <li>add control sequences for enabling/disabling focus in/out\n    event reporting (request by Bram Moolenaar).</li>\n\n    <li>improve startup performance of menus by adding resource\n    setting <code>menuLocale</code> which can be set to override\n    X's lengthy initialization of fontsets - which are seldom used\n    for the <code>Xaw</code> popup menus (adapted from patch by\n    Dave Coffin).</li>\n\n    <li>modify <code>do_precomposition()</code> function and\n    <code>make-precompose.sh</code> to handle 21-bit codes vs the\n    16-bit codes those were written for, and fix a few mis-sorted\n    codes (patch by Thomas Wolff).</li>\n\n    <li>handle special case in <code>-cjk_width</code> which\n    unexpectedly caused a character's width to change when a\n    combining character (patch by Thomas Wolff)</li>\n\n    <li>fix build for GNU/KFreeBSD (Debian #40111).</li>\n\n    <li>consolidate GC creation/updating into a single module to\n    reduce GC manipulation (prompted by Debian #389476, though a\n    complete fix would involve optimizing the scrolling\n    behavior).</li>\n\n    <li>fix ifdef of xtermCellWidth(), which broke for a case\n    without TrueType and without wide-character support (report by\n    Martin Pirker).</li>\n\n    <li>undo a comparison in\n    <code>handle_translated_exposure</code> which did not work due\n    to X server optimization. That caused the inner border to be\n    repainted with unexpected colors when handling a repaint, e.g.,\n    after switching to/from another workspace (Debian #401726,\n    Redhat Bugzilla #223027).</li>\n\n    <li>allow <code>-cr</code> option to override cursor color when\n    <code>-ah</code> option is used (Debian #406502).</li>\n\n    <li>add a note in xterm's manpage explaining that the\n    <code>-bw</code> (or <code>-w</code>) option is only used by\n    the window manager, if at all (Debian #405043).</li>\n\n    <li>make <code>Selection</code> of <code>VT&nbsp;Fonts</code>\n    work with <code>selectToClipboard</code> resource.</li>\n\n    <li>correct length calculation for <code>Selection</code> entry\n    of <code>VT&nbsp;Fonts</code> menu, broken since it ignored the\n    actual selection length since X11R4.</li>\n\n    <li>fixes for fontsize changes with <code>-fa</code> option\n    (Redhat Bugzilla #222340).</li>\n  </ul>\n\n  <h1><a name=\"xterm_223\" id=\"xterm_223\">Patch #223 -\n  2006/11/30</a></h1>\n\n  <ul>\n    <li>add <code>--enable-rectangles</code> configure option\n    (request by Martin Pirker).</li>\n\n    <li>correct default value for <code>--with-symlink</code>\n    configure option.</li>\n\n    <li>fixes configure script macros that use\n    <code>$X_EXTRA_LIBS</code>.</li>\n\n    <li>modify configure script to provide support for pre-package\n    config versions of Xft aka \"FreeType\".</li>\n\n    <li>add the Xaw scrollbar translations resource to the xterm\n    manpage, add an example showing how to change the mouse button\n    assignments (Debian #382225).</li>\n\n    <li>amend a change from <a href=\"#xterm_216\">patch #216</a>,\n    which omitted modifiers for control, meta, etc., if they were\n    mixed with any other modifiers. The intent of the change was to\n    avoid confusion with <code>XK_Mode_switch</code> and\n    <code>XK_ISO_Level3_Shift</code>; the check is now done\n    explicitly (report by Daniel Jacobowitz).</li>\n\n    <li>interpret a negative value for\n    <code>modifyCursorKeys</code> or\n    <code>modifyFunctionKeys</code> resources to disable the\n    respective features (prompted by Novell #220728).</li>\n\n    <li>amend cell-width computation for FreeType from <a href=\n    \"#xterm_217\">patch #217</a>, which did not work for VT100\n    line-drawing characters (Debian #399638, Gentoo #147111).</li>\n\n    <li>amend a change from <a href=\"#xterm_216\">patch #216</a>,\n    which made alt-modifier on a cursor-key send a modifier\n    parameter (Novell #220728).</li>\n\n    <li>correct an off-by-one that made DECCRA not work\n    (report/patch by Martin Pirker).</li>\n\n    <li>revert an optimization in SGR_Foreground() and\n    SGR_Background from <a href=\"#xterm_209\">patch #209</a> (Debian\n    #347722, analysis by Pierre Lombard).</li>\n\n    <li>fix for <code>boldMode</code> (Debian #347790, patch by Tim\n    Pope).</li>\n\n    <li>amend fix for <code>-iconic</code> in <a href=\n    \"#xterm_208\">patch #208</a>, which broke the positioning part\n    of <code>-geom</code> with toolbar configuration.</li>\n\n    <li>fix to prevent indexing error in regular expressions (patch\n    by Dennis Schneider).</li>\n\n    <li>fixes to make the <code>internalBorder</code> area not\n    change color due to reverseVideo and/or related exposure\n    events. The latter was a very old bug exposed in <a href=\n    \"#xterm_196\">patch #196</a> (report by Neil Hoggarth, also\n    Debian #397624).</li>\n  </ul>\n\n  <h1><a name=\"xterm_222\" id=\"xterm_222\">Patch #222 -\n  2006/10/17</a></h1>\n\n  <ul>\n    <li>minor optimization for recoloring cursor via dynamic\n    colors.</li>\n\n    <li>fix a bug caused by restructuring of tek4014 widget (report\n    by Paul Schenkeveld)</li>\n  </ul>\n\n  <h1><a name=\"xterm_221\" id=\"xterm_221\">Patch #221 - 2006/10/1</a></h1>\n\n  <ul>\n    <li>fix for regular expressions: the code which converted the\n    column offset within a line did not check properly for the end\n    of a line, and if allowed to match the whole line, would select\n    the beginning of the following line. If the following line were\n    empty, in turn it would select from the next, etc. (report by\n    Sean Reifschneider).</li>\n\n    <li>minor optimization of color allocation to avoid repainting\n    the screen if the corresponding color had not been\n    allocated.</li>\n\n    <li>fixes for vttests/256colors.pl (report by Egmont\n    Koblinger).</li>\n\n    <li>add terminfo building block entries for modifiers of the\n    6-key editing keypad.</li>\n\n    <li>fix for initialization of tek4014 which broke on QNX\n    6.1</li>\n  </ul>\n\n  <h1><a name=\"xterm_220\" id=\"xterm_220\">Patch #220 - 2006/9/10</a></h1>\n\n  <ul>\n    <li>make \"xterm -t -iconic\" work as expected, i.e., start in\n    tek4014 mode, but iconified.</li>\n  </ul>\n\n  <h1><a name=\"xterm_219\" id=\"xterm_219\">Patch #219 - 2006/9/4</a></h1>\n\n  <ul>\n    <li>some internal restructuring to separate data for vt100 and\n    tek4014 widgets.</li>\n\n    <li>fix a few cases where form-events would be seen by the\n    vt100 widget when built with the toolbar configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_218\" id=\"xterm_218\">Patch #218 - 2006/8/27</a></h1>\n\n  <ul>\n    <li>change behavior when encountering an illegal character in a\n    title string. Rather than reject the string, translate illegal\n    characters into \"?\" and use the string (requested by Thomas\n    Wolff).</li>\n\n    <li>improve checks for nonprinting characters in title strings\n    (report by Samuel Thibault).</li>\n\n    <li>correct typo in menu labels, changing\n    <code>print-redirect</code> to <code>print-redir</code>, making\n    it follow the manpage and match the usage for the actions table\n    (report by Samuel Thibault).</li>\n\n    <li>correct a typo that prevents building with some older\n    systems such as Solaris 2.6 (report by Julian Bridle).</li>\n  </ul>\n\n  <h1><a name=\"xterm_217\" id=\"xterm_217\">Patch #217 - 2006/8/20</a></h1>\n\n  <ul>\n    <li>minor improvements to FreeType font layout and\n    drawing.</li>\n\n    <li>add a check in the ptyInitialErase logic to ensure that the\n    termcap was read (Redhat Bugzilla #201246).</li>\n\n    <li>limit changes for reverse-video from <a href=\n    \"#xterm_216\">patch #216</a> to cases where the reverse-video\n    command-line option is used (report by Zdenek Sekera).</li>\n\n    <li>correct bitmap-derived pointsizes for TrueType fonts; they\n    should be proportional to the square root of the area of the\n    bitmap fonts.</li>\n\n    <li>add resources to specify pointsize of TrueType fonts\n    (request by Reuben Thomas).</li>\n\n    <li>improve install of terminfo by filtering out harmless\n    messages related to extended capabilities. At the same time,\n    use ncurses tic to compile the extended capabilities if\n    possible (report by Zdenek Sekera).</li>\n\n    <li>update \"xterm+pcfkeys\" terminfo entry to correspond to\n    <a href=\"#xterm_216\">patch #216</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_216\" id=\"xterm_216\">Patch #216 - 2006/8/3</a></h1>\n\n  <ul>\n    <li>improve handling of <code>ConfigureNotify</code> events by\n    checking if there are further events in the queue which\n    obsolete the current one (adapted from rxvt 2.7.5). Only the\n    normal normal (non-toolbar) configuration is addressed in this\n    patch.</li>\n\n    <li>several changes to terminfo:\n      <ul>\n        <li>incorporate some minor changes from ncurses to help\n        keep these synchronized:\n          <dl>\n            <dt>2005-02-26</dt>\n\n            <dd>modify sgr/sgr0 in xterm-new to improve tgetent's\n            derived \"me\".</dd>\n\n            <dt>2006-02-18</dt>\n\n            <dd>remove ncv flag from xterm-16color</dd>\n\n            <dt>2006-06-24</dt>\n\n            <dd>improve xterm-256color by combining the 16-color\n            setaf/setab strings with SGR 48, and cancelling the\n            setf/setb strings.</dd>\n          </dl>\n        </li>\n\n        <li>use extended function-key definitions for xterm-sun,\n        xterm-sco entries.</li>\n\n        <li>add terminfo building-blocks corresponding to the\n        <code>modifyFunctionKeys</code> and\n        <code>modifyCursorKeys</code> resources.</li>\n      </ul>\n    </li>\n\n    <li>ifdef'd Sun function-key feature to make it optional, like\n    HP and SCO.</li>\n\n    <li>extend table for termcap-query feature through F63, and\n    updated tcapquery.pl to match.</li>\n\n    <li>modify logic for function-key input processing to allow\n    function key numbers which are constructed by control- and\n    shift-modifiers to extend beyond X's hardcoded limit of\n    35.</li>\n\n    <li>add control sequence to set or reset the\n    <code>eightBitInput</code> resource.</li>\n\n    <li>change default resource <code>modifyFunctionKeys</code> to\n    2 to avoid sending SS3 with parameters (report by Kalle Olavi\n    Niemitalo).</li>\n\n    <li>add control sequences for setting and resetting the values\n    of the <code>modifyCursorKeys</code>,\n    <code>modifyFunctionKeys</code> and\n    <code>modifyOtherKeys</code> resources.</li>\n\n    <li>add <code>modifyFunctionKeys</code> resource like\n    <code>modifyCursorKeys</code>. Setting this to zero allows one\n    to use the control- and shift-modifiers to construct function\n    key strings, for terminals using many function keys, e.g., for\n    <code>xterm-sun</code> or <code>xterm-sco</code>.</li>\n\n    <li>modify screen responses and function-key logic to reduce\n    the number of writes made, to make it less likely that an\n    application would read only part of a function-key in a read\n    operation (suggested by John E Urbanczyk).</li>\n\n    <li>add <code>combiningChars</code> resource, which allows the\n    user to specify the maximum number of combining characters that\n    xterm will store for each cell in wide-character mode (prompted\n    by request by Markus Kuhn to increase the limit from 2).</li>\n\n    <li>improve logic in <code>metaSendsEscape</code> in case the\n    Alt- and Meta-keys are mapped to different modifiers. That\n    allows one to use the Alt-key for shifting in the\n    <code>eightBitInput</code> and use a Meta-key modifier to\n    prefix the result with an <code>&lt;ESC&gt;</code>.</li>\n\n    <li>improve <code>modifyCursorKeys</code> logic to prevent it\n    from modifying codes where <code>eightBitInput</code> or\n    <code>metaSendsEscape</code> are set (request by Dan\n    Nicolaescu).</li>\n\n    <li>improve <code>modifyCursorKeys</code> logic to prevent it\n    from changing the user input when other modifiers such as AltGr\n    are used (report by Thomas Wolff).</li>\n\n    <li>extend <code>modifyCursorKeys</code> to include the numeric\n    keypad when in application mode.</li>\n\n    <li>improve <code>-reverse</code> (<code>-rv</code>) option\n    (patch by Jason Vas Dias, Redhat #189161).</li>\n\n    <li>workaround for color resources on Fedora-5 which made the\n    toolbar colors inconsistent.</li>\n\n    <li>corrected calls used for <code>--disable-setuid</code>\n    option, add debugging traces to help diagnose this area.</li>\n\n    <li>modify configure script to ensure that\n    <code>USE_UTMP_SETGID</code> is defined only if the check for\n    POSIX saved-ids succeeds, or corresponds to one of the BSD\n    systems known to have a workable <code>setegid</code>\n    function.</li>\n\n    <li>extend configure check for POSIX saved-ids to include BSD\n    systems</li>\n\n    <li>modify CF_SYSV configure macro to work with gcc on HPUX\n    10.20, whose broken <code>&lt;term.h&gt;</code> relies on\n    including <code>&lt;termios.h&gt;</code>.</li>\n\n    <li>change order of setuid/setgid ifdef checks in Imakefile to\n    make it simpler to produce a setgid install, allowing the\n    latter to override the former (prompted by an XFree86\n    commit).</li>\n\n    <li>adapt a fix for setgid support from subsequent XFree86\n    changes (patch by Emanuele Giaquinta).</li>\n\n    <li>further improve setgid support (patches by Emanuele\n    Giaquinta).</li>\n  </ul>\n\n  <h1><a name=\"xterm_215\" id=\"xterm_215\">Patch #215 - 2006/6/19 -\n  XFree86 4.6.99.2</a></h1>\n\n  <ul>\n    <li>improve setgid support by exploiting the saved-ids feature\n    on which it relies (patch by Emanuele Giaquinta).</li>\n\n    <li>make the <code>modifyOtherKeys</code> resource disabled by\n    default since the intermediate setting altered some common\n    bindings (report by Emanuele Giaquinta).</li>\n  </ul>\n\n  <h1><a name=\"xterm_214\" id=\"xterm_214\">Patch #214 - 2006/6/18 -\n  XFree86 4.6.99.2</a></h1>\n\n  <ul>\n    <li>modify makefile rule for ctlseqs.txt to strip\n    backspace/overstrikes, and add a copy of ctlseqs.txt to the\n    source tarballs (requests by Bram Moolenaar, Emanuele\n    Giaquinta).</li>\n\n    <li>add <code>modifyOtherKeys</code> resource, analogous to the\n    <code>modifyCursorKeys</code> resource. This applies to keys\n    that normally would transmit nothing when a given modifier is\n    applied (request by Dan Nicolaescu).</li>\n\n    <li>add <code>default</code> to the acceptable values for the\n    <code>keyboardType</code> resource, allowing the\n    <code>-kt</code> command-line option to override app-defaults\n    resource settings of <code>sunKeyboard</code>, etc.</li>\n\n    <li>correct ifdef's for <code>XkbBell()</code> which used the\n    header file but not the corresponding function in <a href=\n    \"#xterm_175\">patch #175</a> (report by Zach Beane).</li>\n\n    <li>add xterm manpage to the <code>--with-symlink</code>\n    logic.</li>\n\n    <li>regenerated configure script to omit some debugging\n    artifacts of the SIGWINCH test.</li>\n\n    <li>fix <code>install-man</code> rule in\n    <code>Makefile.in</code> to avoid including the\n    <code>$(DESTDIR)</code> value in substitutions made on the\n    manpages (patch by Emanuele Giaquinta).</li>\n\n    <li>improved fix for cursor deallocation (Redhat #186935, patch\n    by Jason Vas Dias).</li>\n\n    <li>improve checks for setuid/setgid operation to accommodate\n    limited resource management in some kernels (Gentoo\n    #193238).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_213\" id=\"xterm_213\">Patch #213 - 2006/4/30 -\n  XFree86 4.5.99.905</a></h1>\n\n  <ul>\n    <li>minor optimization to cell layout; will use that to\n    simplify some logic and allow for more than two combining\n    characters in another patch.</li>\n\n    <li>add <code>utf8Latin1</code> resource to make optional the\n    feature from <a href=\"#xterm_209\">patch #209</a> which allowed\n    ISO-8859-1 fonts to be used in cases where a wide font was\n    given. This would only work for the special case where the user\n    normally used Latin-1 and wanted some wide characters (report\n    by Rostislav Krasny).</li>\n\n    <li>add <code>utf8Title</code> resource to manpage (Novell\n    #52655).</li>\n\n    <li>fix typo in table entry for <code>utf8Title</code> resource\n    which made it treated as an integer rather than boolean (patch\n    by Mike Fabian, Novell #52655).</li>\n  </ul>\n\n  <h1><a name=\"xterm_212\" id=\"xterm_212\">Patch #212 - 2006/4/9 -\n  XFree86 4.5.99.904</a></h1>\n\n  <ul>\n    <li>improve description of <code>forceBoxChars</code> in\n    manpage (discussion with Joe Wells).</li>\n\n    <li>set checkmark for \"Select To Clipboard\" menu entry on\n    startup, from resource setting.</li>\n\n    <li>update manpage to note that\n    <code>*customization:color</code> is not needed, though it is\n    useful (Redhat #188034).</li>\n\n    <li>add underscore to sample pattern for URL in\n    <code>XTerm.ad</code> (Redhat #188037).</li>\n\n    <li>modify install rule for manpage to use the configured\n    app-defaults directory (Redhat #188031).</li>\n\n    <li>add checks in <code>releaseCursorGCs()</code> to ensure\n    GC's are distinct, needed since memory leak changes for\n    <a href=\"#xterm_208\">patch #208</a> (Redhat #186935, patch by\n    Jason Vas Dias).</li>\n\n    <li>modify <code>Imakefile</code> definitions to allow\n    <code>imake</code> to set <code>InstallXtermSetGID</code>. Add\n    symbol <code>InstGidFlags</code>.</li>\n\n    <li>add configure script check to ensure that SIGWINCH if\n    defined even when headers undefine this as a side-effect of\n    <code>_POSIX_C_SOURCE</code>, etc.</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>ifdef-out chmod of terminal device for OS/2 (XFree86\n        #1663, Frank Giessler).</li>\n\n        <li>move new <code>Imakefile</code> chunk which defines\n        <code>$(CSGIDFLAGS)</code> before DEFINES, e.g., for IRIX64\n        (Marc La France).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_211\" id=\"xterm_211\">Patch #211 - 2006/3/19 -\n  XFree86 4.5.99.902</a></h1>\n\n  <ul>\n    <li>modify prefix/suffix transformation in makefile to make\n    <code>uxterm</code> install properly on Cygwin.</li>\n\n    <li>restore the sizeof-comparison for <code>struct\n    lastlog</code> added in <a href=\"#xterm_208\">patch #208</a>,\n    rendered (mostly) obsolete in <a href=\"#xterm_210\">patch\n    #210</a>, since an imake configuration can still turn that code\n    on (prompted by comment by David Dawes).</li>\n\n    <li>remove feature for <code>FreeBSDArchitecture</code> from\n    <code>Imakefile</code> which would install xterm using the\n    <code>utmp</code> group since a standard FreeBSD system has no\n    such group, though it would support this configuration. FreeBSD\n    packager uses the <code>configure</code> script, which can make\n    the appropriate check (prompted by comment by David\n    Dawes).</li>\n\n    <li>fixes for gcc redefinition warnings when built using imake\n    (reports by David Dawes, Marc La France).</li>\n  </ul>\n\n  <h1><a name=\"xterm_210\" id=\"xterm_210\">Patch #210 - 2006/3/12 -\n  XFree86 4.5.99.902</a></h1>\n\n  <ul>\n    <li>add configure check for workaround in <a href=\n    \"#xterm_208\">patch #208</a> for Solaris' inconsistent support\n    for struct lastlog to quiet compiler warnings (prompted by\n    David Dawes commit message for XFree86).</li>\n\n    <li>fixes for BASE64 selection manipulation, e.g., ensure that\n    the string terminator is written after cut-buffer data (report\n    by Joe Allen).</li>\n\n    <li>add vttests/paste64.pl script to test experimental option\n    for setting/getting selection data.</li>\n\n    <li>add some error-checking in fontutils.c (prompted by David\n    Dawes commit message for XFree86).</li>\n\n    <li>change xterm manpage to show the actual color resource\n    names <code>XtDefaultForeground</code> and\n    <code>XtDefaultBackground</code> rather than black and white\n    (prompted by discussion with Emanuele Giaquinta).</li>\n\n    <li>add <code>utf8Title</code> resource and menu entry,\n    allowing the user to control whether title strings are\n    interpreted as ISO-8859-1 or UTF-8 encoding (Novell #52655,\n    Novell #113206).</li>\n\n    <li>change order of ifdef's for utempter versus platforms in\n    <code>Imakefile</code> to ensure a proper value for\n    <code>InstallXtermSetGID</code> (prompted by Marc La France\n    commit message for XFree86).</li>\n\n    <li>update the cursor GCs when menu entry for reverse video is\n    toggled. (Redhat #183993).</li>\n\n    <li>a memory-leak fix for <code>set_cursor_gcs()</code> in\n    <a href=\"#xterm_208\">patch #208</a> broke the <code>-cm</code>\n    option (Redhat #182382).</li>\n  </ul>\n\n  <h1><a name=\"xterm_209\" id=\"xterm_209\">Patch #209 - 2006/2/12 -\n  XFree86 4.5.99.22</a></h1>\n\n  <ul>\n    <li>remove <code>setf</code> and <code>setb</code> from\n    <code>xterm-256color</code> terminfo entry to avoid issues with\n    applications that ignore the ANSI strings (report by Emanuele\n    Giaquinta).</li>\n\n    <li>remove obsolete references to \"Xorg\" to avoid confusion\n    with \"X.org\" (prompted by David Dawes commit message for\n    XFree86).</li>\n\n    <li>improve initial layout performance for the toolbar\n    configuration by precalculating the height of the toolbar.</li>\n\n    <li>remove menu entry for \"Enable Curses Emulation\" (to make\n    room for \"Select To Clipboard\").</li>\n\n    <li>add resource <code>selectToClipboard</code>, action\n    <code>set-select</code> and a menu entry to allow users to\n    switch between PRIMARY and CLIPBOARD for select/paste.</li>\n\n    <li>allow cursor to have the same color as foreground (text),\n    since it is rendered as reverse (Debian #350664).</li>\n\n    <li>amend change for loading <code>utf8Fonts</code> resource\n    from <a href=\"#xterm_204\">patch #204</a> to allow an ISO-8859-1\n    \"normal\" font to be combined with an ISO-10646 font if the\n    latter is given via the <code>-fw</code> option or its\n    corresponding resource value (prompted by comment in Novell\n    #49305).</li>\n\n    <li>add <code>TIOCSCTTY</code> <code>ioctl()</code> ifdef'd for\n    <code>__GNU__</code> to set the controlling terminal (Debian\n    #348457).</li>\n\n    <li>add configure option <code>--disable-leaks</code>.</li>\n\n    <li>add a check in <code>Bell</code> to ensure that the VT100\n    widget is realized, since it may be called by\n    <code>xtermLoadFont</code> given an incorrect font resource\n    (Redhat #180450).</li>\n\n    <li>improve initialization of wide-bold font by not using the\n    derived value when it happens to have few glyphs (report by\n    Mboso Sampson).</li>\n\n    <li>improve dynamic colors by not repainting the screen if only\n    the cursor color changes (request by Bram Moolenaar).</li>\n\n    <li>fix menu initialization for tek4014 window broken in\n    <a href=\"#xterm_206\">patch #206</a>.</li>\n\n    <li>typo in manpage (Debian #351425).</li>\n\n    <li>correct loop logic in <code>dotext</code> to prevent an\n    infinite loop if a wide character was just at the right margin\n    when wrapping was disabled (report by Serge van den Boom).</li>\n\n    <li>initialize the saved-cursor data so a restore-cursor\n    operation without a preceding save-cursor operation will not\n    modify the foreground color.</li>\n\n    <li>add a new selection feature: regular expressions, and new\n    resources which specify what happens on multiple mouse clicks:\n    <code>on2Clicks</code>, <code>on3Clicks</code>,\n    <code>on4Clicks</code> and <code>on5Clicks</code>.</li>\n\n    <li>revert the <code>XTerm.ad</code> change from <a href=\n    \"#xterm_208\">patch #208</a> (Debian #348384).</li>\n\n    <li>fixes for the print-window to make it handle combining\n    characters in UTF-8 mode.</li>\n\n    <li>add check to ensure that double-clicking to extend\n    selection will not extend it into the scrollback area. This\n    still allows users to scroll back and select text (Debian\n    #347415).</li>\n\n    <li>add configure option <code>--with-tty-group</code> to help\n    work around deficiencies in packager's build environment\n    (Debian #349142).</li>\n\n    <li>fix typo in configure script option\n    <code>--disable-narrowproto</code> (report by David\n    Mart&iacute;nez Moreno).</li>\n\n    <li>amend CF_X_FREETYPE changes for <code>pkg-config</code>\n    check to ensure that <code>Xft</code> is known to that tool\n    (report and patch by Emanuele Giaquinta).</li>\n\n    <li>add an ifdef to allow <code>./configure\n    --disable-active-icon</code> to work, broken by new code for\n    testing memory leaks in <a href=\"#xterm_208\">patch #208</a>\n    (report by Brian Lindholm).</li>\n  </ul>\n\n  <h1><a name=\"xterm_208\" id=\"xterm_208\">Patch #208 - 2006/1/3 -\n  XFree86 4.5.99.19</a></h1>\n\n  <ul>\n    <li>add <code>charClass</code> resource to\n    <code>XTerm.ad</code> and <code>UXTerm.ad</code> which\n    simplifies selecting URLs (prompted by Kirill Ponomarew).</li>\n\n    <li>modify install rule for <code>uxterm</code> to account for\n    the <code>--program-prefix</code>, etc., options by invoking\n    the transformed name of xterm rather than simply \"xterm\".</li>\n\n    <li>modify configure <code>--with-app-defaults</code> option to\n    allow <code>--without-app-defaults</code>.</li>\n\n    <li>add configure <code>--with-symlink</code> option to make it\n    simpler to install successive versions of <code>xterm</code>\n    renamed using the <code>--program-prefix</code>, etc., options\n    with a symbolic link pointing to the most recent.</li>\n\n    <li>make <code>-iconic</code> option work with toolbar\n    configuration (Gentoo #113604).</li>\n\n    <li>suppress <code>lastlog</code> feature for 64-bit Solaris\n    configuration since that platform provides only a 32-bit\n    interface (report by Peter Bray).</li>\n\n    <li>fix memory reallocation for the \"UTF-8\" menu entry when\n    xterm is started using the <code>+u8</code> option (reported by\n    Jan Willem Stumpel).</li>\n\n    <li>add a configure check for the actual path of\n    <code>luit</code>, to work around broken <code>imake</code>\n    configurations.</li>\n\n    <li>add a configure check for <code>pkg-config</code> (Redhat\n    Bugzilla #173541).</li>\n\n    <li>modify install-rule for <code>uxterm</code> to omit\n    executable suffix, e.g., for Cygwin.</li>\n\n    <li>modify <code>sinstall.sh</code> to work around quirks in\n    Cygwin configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_207\" id=\"xterm_207\">Patch #207 - 2005/11/13 -\n  XFree86 4.5.99.16</a></h1>\n\n  <ul>\n    <li>enable <code>lastlogx</code> support for NetBSD (was added,\n    but not enabled in <a href=\"#xterm_186\">patch #186</a>).</li>\n\n    <li>work around broken <code>lastlog.h</code> in glibc 2.3.5,\n    which includes <code>utmp.h</code>.</li>\n\n    <li>revert part of recent XFree86 Imakefile change, restoring\n    the <code>-I.</code> needed for <code>xmkmf</code> builds of\n    xterm (XFree86 Bugzilla #1633, reports by Alexander Pohoyda,\n    Matthieu Herrb).</li>\n\n    <li>change compiled-in default for <code>printerCommand</code>\n    resource to an empty string. People who want to use the printer\n    should be able to read the manual (Debian #311490).</li>\n\n    <li>modify <code>Imakefile</code> to work around old problems\n    in <code>imake</code> configuration to allow test-builds using\n    <code>xmkmf</code> on Linux. (This was not noticed since\n    several releases had broken definitions relating to Xft which\n    were harder to work around).</li>\n\n    <li>link <code>resize</code> for SCO platforms (Kean\n    Johnston).</li>\n  </ul>\n\n  <h1><a name=\"xterm_206\" id=\"xterm_206\">Patch #206 - 2005/11/3 -\n  XFree86 4.5.99.15</a></h1>\n\n  <ul>\n    <li>add configure <code>--with-app-defaults</code> option to\n    allow app-defaults directory for install-rules to be\n    customized.</li>\n\n    <li>remove default translations for\n    <code>dabbrev-expand()</code> due to conflicts with existing\n    keyboard arrangements.</li>\n\n    <li>remove redundant check for <code>_NET_WM_PID</code> (report\n    by Emanuele Giaquinta).</li>\n\n    <li>set icon border width explicitly to work around fvwm\n    problem with active icon resizing (report by Steve Morris,\n    analysis by Dominik Vogt).</li>\n\n    <li>modify resource files to make the font-resources a little\n    more specific, e.g., changing \"*VT100*\" to \"*VT100.\", to make\n    the distinction between VT100.font and VT100.utf8Fonts.font\n    sharper, in case a packager modifies one of those.</li>\n\n    <li>expanded comments in <code>UXTerm.ad</code> regarding the\n    font resources (Debian #319179).</li>\n\n    <li>add <code>--enable-narrowproto</code> configure option to\n    accommodate X.org \"modular\" build (report by Stephan Hermann,\n    Gentoo #17220).</li>\n\n    <li>fix typo in xterm.man description of <code>+wf</code>\n    (patch by Tobias Stoeckmann).</li>\n\n    <li>add <code>scrollBarBorder</code> resource (request by Floyd\n    L Davidson).</li>\n\n    <li>modify <code>xterm-new</code> terminfo entry to use\n    capabilities for shifted scroll forward/reverse as shifted\n    cursor up/down.</li>\n\n    <li>correct updating of checkmark for toolbar entry in popup\n    menu (report by Emanuele Giaquinta).</li>\n\n    <li>fix ifdef's to allow compiling with toolbar and without\n    tek4014 (patch by Emanuele Giaquinta).</li>\n\n    <li>use <code>openpty()</code> for Darwin port (patch by\n    Emanuele Giaquinta).</li>\n\n    <li>fix Gentoo #90697 a different way, postponing the logic in\n    <code>SetupToolbar</code> until the toolbar is actually needed,\n    i.e., the <code>+tb</code> option is handled as expected.</li>\n\n    <li>revert fix made in <a href=\"#xterm_203\">patch #203</a> for\n    Gentoo #90697. That introduced a problem with the control mouse\n    click-popups, while most of the performance problems can be\n    resolved by restricting the menu fonts (report by Emanuele\n    Giaquinta).</li>\n\n    <li>fix a file-descriptor leak when calling\n    <code>openpty()</code> (OpenBSD system/4561).</li>\n\n    <li>make a special case of resizing work like vt100: a hard\n    reset also resets the 132/80 mode. The code to support this was\n    present since X11R5, but not used because the corresponding\n    initial state of the <code>-132</code> option was not\n    saved.</li>\n\n    <li>restore window manager hints after\n    <code>XtMakeResizeRequest()</code> calls. One instance from\n    <a href=\"#xterm_205\">patch #205</a> resulted in the window\n    manager displaying pixels rather than than characters after\n    selecting a different font size (FreeBSD ports/87424).</li>\n\n    <li>remove special case for Darwin in CF_XOPEN_SOURCE (Emanuele\n    Giaquinta).</li>\n\n    <li>modify parsing of control sequence <code>CSI&nbsp;T</code>\n    to allow scroll-down to be sent while mouse tracking is enabled\n    (request by D Hugh Redelmeier).</li>\n\n    <li>correct termcap \"me\" (mode-end) string so it does not\n    modify the alternate character set (report by Andrey\n    Chernov).</li>\n\n    <li>correct size-comparison in HandleInterpret() broken in\n    changes from <a href=\"#xterm_201\">patch #201</a> to allocate\n    input buffer (Debian #334317).</li>\n\n    <li>amend adjustments for scrollbar layout from <a href=\n    \"#xterm_204\">patch #204</a> to make this apply only to the\n    toolbar configuration. In the non-toolbar configuration, the\n    resulting scrollbar was shifted by its borderwidth (report by\n    Matthieu Herrb).</li>\n\n    <li>add select-cursor-extend() action.</li>\n\n    <li>fix some broken href's in xterm.log.html, and typo in the\n    INSTALL file (report/patch by David Mart&iacute;nez\n    Moreno).</li>\n\n    <li>modify <code>Imakefile</code> to use setgid mode for\n    installing with Linux, OpenBSD and FreeBSD.</li>\n\n    <li>add configure --with-setuid and --with-reference options to\n    allow packagers more flexibility in customizing install\n    permissions.</li>\n\n    <li>generalize and make optional (configure --with-utmp-setgid)\n    the change made for XFree86 Bugzilla #878 in <a href=\n    \"#xterm_205\">patch #205</a> (FreeBSD bug report\n    #ports/86663).</li>\n  </ul>\n\n  <h1><a name=\"xterm_205\" id=\"xterm_205\">Patch #205 - 2005/9/18 -\n  XFree86 4.5.99.12</a></h1>\n\n  <ul>\n    <li>correct a typo in CF_FUNC_TGETENT introduced in <a href=\n    \"#xterm_198\">patch #198</a> fix for Gentoo #69926.</li>\n\n    <li>implement logic in termcap query to process multiple\n    parameters as documented in ctlseqs.ms</li>\n\n    <li>fix buffer size used for termcap query, which was not long\n    enough for the terminfo \"colors\" name (patch by Bradd W.\n    Szonye).</li>\n\n    <li>add configure option --enable-readline-mouse, which turns\n    on the experimental OPT_READLINE code (patch by Ilya\n    Zakharevich).</li>\n\n    <li>for FreeBSD, drop setuid privileges after startup (XFree86\n    Bugzilla #878, report/patch by Alexander Pohoyda)</li>\n\n    <li>add menu entry (alt-esc) and corresponding action\n    (alt-sends-esc) to toggle the <code>eightBitInput</code>\n    resource setting.</li>\n\n    <li>generate configure script with autoconf 2.52 (patched) to\n    use the feature therein which forces the script's locale to\n    POSIX (Gentoo Bugzilla #105369).</li>\n\n    <li>modify computation of rows/columns on resize to avoid\n    extending beyond the given limits, e.g., if resizing in\n    response to a \"maximize\" in Gnome or KDE which do not use the\n    window manager hints for this case (Debian #289123, Novell\n    #61153).</li>\n\n    <li>modifications to work with z/OS 1.4 (Paul Giordano).</li>\n\n    <li>improve error-reporting when chown/chmod of the\n    pseudo-terminal fails, e.g., if a copy of xterm which was\n    designed to work with old-style pseudo-terminals is not\n    installed setuid or setgid (report by Jeremy C. Reed).</li>\n\n    <li>patches from Emanuele Giaquinta:\n      <ul>\n        <li>ctlseqs.ms says that primary and secondary DA accept a\n        nonzero parameter, which is incorrect. Also modify code to\n        agree with this.</li>\n\n        <li>correct a comment in 88colres.pl</li>\n\n        <li>ctlseqs.ms says that the DEC Set/Reset control\n        sequences for the backarrow key make it send DEL/BS,\n        respectively, while it's the opposite.</li>\n\n        <li>update the menu entries for the metaSendsEscape,\n        deleteIsDEL and numLock resources when changing them with\n        the corresponding DEC Set/Reset control sequences.</li>\n      </ul>\n    </li>\n\n    <li>fixes for configure script:\n      <ul>\n        <li>add special case for QNX, defining _QNX_SOURCE.</li>\n\n        <li>check for preprocessors which do not perform -U and -D\n        options in the given order.</li>\n\n        <li>improve macro to determine gcc version</li>\n\n        <li>improve check for Intel compiler and related warning\n        options</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>improve fix from <a href=\"#xterm_198\">patch #198</a> for\n    <code>Cleanup()</code> by ensuring it is not called from the\n    SIGCHLD handler (patch by Todd Miller (OpenBSD CVS)).</li>\n\n    <li>eliminate a retry for a better-matching bold font, to work\n    around recent font server changes.</li>\n\n    <li>fixes for Novell #113277:\n      <ul>\n        <li>specify weight for wide font which may be derived from\n        normal fontname.</li>\n\n        <li>cache the derived wide- and widebolt-fontnames.</li>\n      </ul>\n    </li>\n\n    <li>workaround for Gentoo Bugzilla #100728.</li>\n\n    <li>add menubar's border width to layout computation. Normally\n    this is zero, but patterns such as\n    <code>XTerm*borderWidth:1</code> would give poor layout for the\n    toolbar configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_204\" id=\"xterm_204\">Patch #204 - 2005/8/4 -\n  XFree86 4.5.99.9</a></h1>\n\n  <ul>\n    <li>work around quirk in shell which allowed user to \"run\"\n    uxterm script when there was no UTF-8 locale installed by\n    entering \"sh -x uxterm\". Also popup an xmessage to show the\n    problem for users who run this via a GUI (Debian #318513).</li>\n\n    <li>disallow changes to fonts, toolbar and scrollbar when the\n    vt100 window is iconified, to simplify management of the active\n    icon.</li>\n\n    <li>fixes to make <code>-geom</code> option work properly with\n    the toolbar configuration (Gentoo #90717, Gentoo #91967).</li>\n\n    <li>minor improvements to scrollbar layout: ensure that the\n    scrollbar border is zero if the vt100 border is zero.</li>\n\n    <li>improve initialization due to <code>utf8</code> resource by\n    loading the <code>utf8Fonts</code> resource in the case where\n    <code>locale</code> resource is false. Also in this case, do\n    not disable switching UTF-8 mode on/off.</li>\n\n    <li>minor optimization of TrueType font-loading, loads italic\n    font only when needed.</li>\n\n    <li>correct variable used to store temporary result from lookup\n    of bold font, when initializing the wide-bold-font data and no\n    immediate match is found by asking for a bold variant of the\n    wide-font. The result was to use overstriking rather than the\n    actual bold font (Debian #318162, patch by Eugene Konev).</li>\n\n    <li>add checks to ensure vt100 widget is realized when it might\n    be updated via actions handled from a tek4014-only\n    configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_203\" id=\"xterm_203\">Patch #203 - 2005/7/6 -\n  XFree86 4.5.99.7</a></h1>\n\n  <ul>\n    <li>modify initialization of <code>allowSendEvents</code> and\n    <code>allowWindowOps</code> to prevent modification with the\n    editres protocol.</li>\n\n    <li>fix compiler warning for NetBSD by including util.h in\n    main.c (XFree86 Bugzilla #1596).</li>\n\n    <li>fix to build on Darwin 8.x, which no longer provides\n    <code>setpgrp()</code> (patch by Min Sik Kim).</li>\n\n    <li>adapted fixes for Legend (SCO) from diffs attached to\n    Freedesktop.Org Bugzilla #3180.</li>\n\n    <li>fix typo in xterm manpage description of <code>-ls</code>\n    option (Freedesktop.Org Bugzilla #3543).</li>\n\n    <li>add support for interpreting the underline attribute as an\n    italic font in Xft mode (patch by Chuck Blake).</li>\n\n    <li>improve initialization of toolbar so that individual\n    pulldown menus are initialized on demand, as they are in the\n    scenario where they are invoked as popup menus (Gentoo Bugzilla\n    #90697).</li>\n\n    <li>fix logic in <code>find_utmp</code>, which did not reset\n    result in <code>getutid()</code>, causing an infinite loop in\n    some conditions (report by Emil Mikulic).</li>\n\n    <li>set the <code>_NET_WM_PID</code> property (Gentoo Bugzilla\n    #91008).</li>\n\n    <li>modify ifdef's in ptyx.h and xterm_io.h to build with\n    DragonFly (patch by Jeroen Ruigrok).</li>\n\n    <li>change default values for <code>minBufSize</code> and\n    <code>maxBufSize</code> to 4096 and 32768 respectively so that\n    the initial read request will match the value from before\n    changes to use <code>sched_yield()</code>.</li>\n\n    <li>make paste of UTF-8 faster for Western character sets by\n    checking range of incoming data (patch by Joe Allen).</li>\n\n    <li>add experimental option to allow applications to get or set\n    the selection data as a BASE64 string (adapted from patch by\n    Joe Allen).</li>\n\n    <li>fix an off-by-one error parsing <code>-S/nn</code> option\n    (Debian #311438, report/fix by Peter Chubb).</li>\n\n    <li>fix an initialization bug from <a href=\"#xterm_201\">patch\n    #201</a> that broke logging (report by Rodney Thayer).</li>\n\n    <li>amend change to command-line processing in <a href=\n    \"#xterm_201\">patch #201</a> to avoid conflict with\n    <code>-e</code> option (report by Servatius Brandt).</li>\n\n    <li>suppress configure check for <code>_XOPEN_SOURCE</code> on\n    darwin.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_202\" id=\"xterm_202\">Patch #202 - 2005/5/2 -\n  XFree86 4.5.99.3</a></h1>\n\n  <ul>\n    <li>add extended shift- and control-modifier cursor keys to\n    \"xterm+pcfkeys\" terminfo entry to correspond to ncurses\n    20050430 patch.</li>\n\n    <li>fix a rare case where text would be written with the wrong\n    colors because output of scrolled text would reset the colors\n    and the new text would be written with the same colors\n    (report/testcase by Thomas Glanzmann).</li>\n\n    <li>rename <code>$CMD</code> variable in <code>plink.sh</code>\n    because it is a reserved symbol in bash 3.00.16 (report by Ted\n    Taylor).</li>\n\n    <li>add environment variables <code>$XTERM_SHELL</code> and\n    <code>$XTERM_VERSION</code> (request by Zdenek Sekera).</li>\n\n    <li>corrected workaround for background color of menubar, which\n    gave a too-broad expression, coloring the background of the\n    VT100 widget unless overridden by another resource\n    setting.</li>\n\n    <li>correct an error in the logic which decides when\n    <code>sched_yield()</code> is run; it would occasionally hang\n    when contending with other pseudo-terminal applications such as\n    screen (report by Kirill Ponomarew).</li>\n\n    <li>modify initialization to decide whether to default to\n    built-in <code>wcwidth()</code> versus system's version based\n    on the starting locale and whether the system's version is poor\n    quality (suggested by Bram Moolenaar).</li>\n\n    <li>update table for <code>mk_width()</code> from UnicodeData\n    4.1.0 using Markus Kuhn's <code>uniset</code> script.</li>\n  </ul>\n\n  <h1><a name=\"xterm_201\" id=\"xterm_201\">Patch #201 - 2005/4/21 -\n  XFree86 4.5.99.2</a></h1>\n\n  <ul>\n    <li>improve resource files to show how the menubar and popup\n    menus can be colored (prompted by report by Joe Wells).</li>\n\n    <li>modify parsing of OSC (and SOS, etc), strings so their\n    contents are not interpreted as UTF-8. This allows non-ASCII\n    title strings to be set, provided that the window manager\n    complies (report by Thomas Wolff).</li>\n\n    <li>improved some of the built-in line-drawing glyphs.</li>\n\n    <li>correct color of \"box\" character drawn for line-drawing\n    glyph 1 (report by Nicolas George).</li>\n\n    <li>improve behavior when switching to UTF-8 mode after startup\n    so xterm will check if the current fonts are already wide\n    (ISO10646-1). If they are not, xterm will use the\n    <code>utf8Fonts</code> subresource to load appropriate fonts\n    (request by Bram Moolenaar).</li>\n\n    <li>modify logic for setting title-string so it applies to the\n    current widget rather than the vt100 widget.</li>\n\n    <li>modify initialization for wide-bold fontname, to search for\n    one if none is given (report by Michael Schroeder).</li>\n\n    <li>add resource <code>mkWidth</code> and command-line option\n    <code>-mk_width</code> to control whether xterm uses the\n    built-in version of wcwidth().</li>\n\n    <li>add resource settings for minimum/maximum input buffer\n    size, and call to <code>sched_yield</code> to improve\n    performance with newer Linux kernels (adapted from patch by\n    Nicolas George).</li>\n\n    <li>correct computation of width for wide characters with the\n    invisible attribute (report by Thomas Wolff).</li>\n\n    <li>modify interaction between <code>+u8</code> and\n    <code>locale</code> resource to allow the command-line option\n    to override the resource (requested by Thomas Wolff).</li>\n\n    <li>add a limit check for scrolling margins in a one-line\n    screen, overlooked in fixes for <a href=\"#xterm_198\">patch\n    #198</a> (Debian #297430).</li>\n\n    <li>correct treatment of <code>iconBorderWidth</code> for\n    resizing an active-icon, and its description in manpage (Debian\n    #296592).</li>\n\n    <li>modify configure script <code>--disable-imake</code> to use\n    the script's definitions anyway if it cannot detect imake\n    (prompted by FreeBSD bug 77408).</li>\n\n    <li>ignore error in the I/O initialization that tries to set\n    the tty to 7-bit input for the case where\n    <code>eightBitInput</code> resource is false (Debian\n    #298551).</li>\n\n    <li>modify command-processing to accept an optional parameter\n    that tells xterm which shell program to use (request by Zdenek\n    Sekera).</li>\n\n    <li>add simpler resource <code>keyboardType</code> which, when\n    set, overrides the individual keyboard-type resources and\n    eliminates the possibility of conflict between them.</li>\n\n    <li>add initialization for <code>scoFunctionKeys</code>\n    resource (report by Rick K).</li>\n\n    <li>correct logic of <code>ReallocateBufOffsets()</code> which\n    did not copy the content of the old screen buffer to the proper\n    location, making a repaint clear after switching to\n    wide-character mode (report by Bram Moolenaar):</li>\n\n    <li>implement the remaining pieces to make xterm allocate cells\n    for wide-characters when the \"UTF-8\" menu entry is selected.\n    Also, load the UTF-8 font when that menu entry is selected, or\n    the escape sequence for UTF-8 mode is received (report by Bram\n    Moolenaar):</li>\n\n    <li>add command-line options (<code>-tb</code>,\n    <code>+tb</code>) and resource <code>toolBar</code> to allow\n    menu/toolbar to disabled or enabled at startup (prompted by\n    reports by Joe Wells).</li>\n\n    <li>correct typo in configure script's --enable-dec-locator\n    option (report by Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_200\" id=\"xterm_200\">Patch #200 - 2005/2/6 -\n  XFree86 4.4.99.23</a></h1>\n\n  <ul>\n    <li>increase color pairs value for xterm-256color and\n    xterm-88color to match ncurses, which has an experimental\n    option to support this.</li>\n\n    <li>modify ifdef's to make AIX use termios rather than termio;\n    the struct sizes for the two were not the same.</li>\n\n    <li>improve CF_WITH_IMAKE_CFLAGS configure macro script for\n    OSMAJORVERSION and OSMINORVERSION values, e.g., for Tru64 and\n    AIX.</li>\n\n    <li>modify ifdef to define USE_POSIX_TERMIOS for Darwin (patch\n    by Min Sik Kim).</li>\n\n    <li>modify find_utmp() to initialize the whole utmpx struct\n    (except ut_id), since that is needed for OSF1 4.0D to prevent\n    an infinite loop on exit.</li>\n\n    <li>add configure check before adding -D_POSIX_SOURCE since\n    some platforms predefine it, e.g., cygwin.</li>\n\n    <li>add simplified sed expressions in CF_IMAKE_CFLAGS configure\n    script macro to ensure value for PROJECTROOT is quoted on\n    Solaris, i.e., when nested <code>\\(</code> and <code>\\)</code>\n    are not interpreted correctly.</li>\n\n    <li>correct DEC rectangle operations to reset state after\n    completing the operations.</li>\n\n    <li>modify CASE_ST handling in charproc.c to ensure that the\n    parse state is reset even if xterm is not currently processing\n    an OSC or other string (patch by Johnny Billquist forwarded by\n    Matthias Scheler, NetBSD xsrc/29003).</li>\n\n    <li>fix OS/2 build for innotek_libc (patch by David Yeo).</li>\n\n    <li>fix a regression from <a href=\"#xterm_197\">patch #197</a>\n    fix for Debian #277832 which disowned the selection if it was\n    scrolled, e.g., by the user pressing return at the bottom of\n    the screen (Debian #291787).</li>\n\n    <li>move the warning/exit for missing $DISPLAY into the error\n    handler in case <code>-display</code> is given, and the connect\n    fails for some other reason.</li>\n  </ul>\n\n  <h1><a name=\"xterm_199\" id=\"xterm_199\">Patch #199 - 2005/1/17 -\n  XFree86 4.4.99.22</a></h1>\n\n  <ul>\n    <li>instead of setting <code>$DISPLAY</code>, check for the\n    unset variable and warn/exit on this condition (comments by H\n    Merijn Brand and Bernhard R Link).</li>\n\n    <li>fix a typo in Imakefile from <a href=\"#xterm_198\">patch\n    #198</a> (reports/patches by Stefan Dirsch, Mike Castle).</li>\n  </ul>\n\n  <h1><a name=\"xterm_198\" id=\"xterm_198\">Patch #198 - 2005/1/13 -\n  XFree86 4.4.99.21</a></h1>\n\n  <ul>\n    <li>set <code>$DISPLAY</code> to \":0\" if it is not set.</li>\n\n    <li>add <code>utmpDisplayId</code> resource to allow users to\n    control whether the display identifier (display number and\n    screen number) are retained in the connection information\n    recorded in utmp (discussion with Edoardo Tirtarahardja).</li>\n\n    <li>add <code>bellOnReset</code> resource to allow users to\n    disable bell which sounds on hard reset since <a href=\n    \"#xterm_183\">patch #183</a> changes to DECSCL (discussion with\n    Danek Duvall).</li>\n\n    <li>improve <code>$WINDOWID</code> for configuration with\n    toolbar by making it refer to the top-level shell rather than\n    the parent of the current window. For that case, the parent is\n    a form widget, which does not have a name, which made the\n    <code>$WINDOWID</code> not very useful as a parameter for\n    <code>xwininfo</code> (suggested by Dave Bodenstab).</li>\n\n    <li>fix a typo in WhichVFont() macro from <a href=\n    \"#xterm_197\">patch #197</a> changes which broke the\n    --disable-active-icon configuration (report by Ralf S.\n    Engelschall).</li>\n\n    <li>improve some limit checks (Gentoo Bugzilla #75604).</li>\n\n    <li>add --disable-setuid option to configure script (Gentoo\n    Bugzilla #76543).</li>\n\n    <li>add --disable-full-tgetent option to configure script,\n    allowing one to ignore a termcap library in favor of\n    ncurses/curses (Gentoo Bugzilla #69926).</li>\n\n    <li>modify configure script to choose useful warning options\n    for Intel version 8.0 compiler.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>make active-icon work properly when TrueType fonts are used\n    (Debian #286068).</li>\n\n    <li>correct change from <a href=\"#xterm_157\">patch #157</a>\n    which uses getlogin() to check for an alias; the storage used\n    for the related getpwuid() call was overwritten by the data\n    used for comparison (patch by Per Hedeland).</li>\n\n    <li>correct case of SCS for character set 0 (line-drawing) to\n    allow it to be selected into GR.</li>\n\n    <li>fix a file-descriptor leak (Redhat Bugzilla #139597).</li>\n\n    <li>modify <code>creat_as()</code> to only fork if xterm is\n    actually running as setuid and/or setgid. This works around a\n    Cygwin bug which hangs when logging is enabled and makes xterm\n    a little faster for systems using interfaces such as utempter\n    (report by Al Goodman).</li>\n\n    <li>modify <code>Cleanup()</code> to avoid operations such as X\n    calls that might use unsafe functions when it is called by a\n    signal handler (report by Michiel Boland).</li>\n\n    <li>fix bugs in <a href=\"#xterm_191\">patch #191</a> and in SRM\n    changes from <a href=\"#xterm_197\">patch #197</a> that broke\n    DECSET 38: switch to Tek4014 emulation (report by Dave\n    Bodenstab).</li>\n\n    <li>fix for manpage escapes (Marc La France).</li>\n\n    <li>improve on IRIX-specific change for Imakefile in XFree86\n    CVS versus resize linking against termcap library to reflect\n    definitions for USE_TERMCAP in resize.c</li>\n  </ul>\n\n  <h1><a name=\"xterm_197\" id=\"xterm_197\">Patch #197 - 2004/11/30 -\n  XFree86 4.4.99.19</a></h1>\n\n  <ul>\n    <li>modify configure script to remove empty \"-DPROJECTROOT=\"\n    definition which resulted unusable values for luit's default\n    path.</li>\n\n    <li>update precompose.c based on Unicode 4.0.1</li>\n\n    <li>several minor fixes based on Intel compiler warnings.</li>\n\n    <li>change default translations so a <code>BtnDown</code> which\n    is not recognized is simply ignored rather than emitting a\n    bell. That makes it less obtrusive when the user tries to use a\n    mouse which provides more capabilities than the X mouse driver\n    supports, e.g., one with a horizontal scroll wheel (Debian\n    #265133).</li>\n\n    <li>note in xterm's manpage that <code>translations</code> is\n    not specific to xterm (Debian #278897).</li>\n\n    <li>modify uxterm script to use locale program to verify if the\n    derived locale is installed (Debian #246398).</li>\n\n    <li>correct font handling for active icon when in UTF-8 mode\n    (report by Paolo Liberatore).</li>\n\n    <li>make active-icon and toolbar configurations work\n    together.</li>\n\n    <li>modify the criteria for disowning primary selection.\n    Previously, this happened anytime the cursor was moved before\n    the end of the selection. That would ensure that any\n    insert/delete of char or line, as well as scrolling, would\n    disown the selection. The new criteria change this to checking\n    if the operations would modify the data which is highlighted\n    (Debian #277832).</li>\n\n    <li>reimplement <code>DECALN</code> with functions for vt420\n    rectangles, fixes selection for this case.</li>\n\n    <li>implement vt420 rectangle operations.</li>\n\n    <li>add parsing, for debug/test of vt220 soft-fonts.</li>\n\n    <li>add menu entry, actions and escape sequence to allow\n    enabling/disabling toolbars at runtime.</li>\n\n    <li>improve rendering for Xft, allow it to draw non-linedrawing\n    characters such as \"pi\", which were drawn from internal tables\n    with <a href=\"#xterm_180\">patch #180</a> (Freedesktop.org\n    Bugzilla #1260).</li>\n\n    <li>add configure option <code>--enable-mini-luit</code>,\n    ifdef'd the mini-luit feature with\n    <code>OPT_MINI_LUIT</code>.</li>\n\n    <li>add mini-luit feature, which supports Latin9 directly\n    rather than via luit, provided that Unicode fonts are used\n    (Freedesktop.org Bugzilla #1571, request by Stefan Dirsch,\n    patch by Michael Schroeder).</li>\n\n    <li>for Linux, if IUTF8 is defined, e.g., on recent 2.6.x\n    kernels, set the corresponding flag for the slave pty, to\n    enable UTF-8 interpretation of backspace in cooked mode\n    (Freedesktop.org Bugzilla #1578, request by Stefan\n    Dirsch).</li>\n\n    <li>modify <code>faceSize</code> resource to use a\n    floating-point internal value (adapted from patch by Sam\n    Stephenson).</li>\n\n    <li>correct handling selection of tabs over cleared space in\n    UTF-8 mode. In this special case, xterm represents the\n    whitespace with a null rather than a space character (Debian\n    #276447).</li>\n\n    <li>amend fix for infinite loop from <a href=\"#xterm_192\">patch\n    #192</a> to check if there is wrapped text to output in a\n    following iteration (Debian #273202).</li>\n\n    <li>fixes ifdef'd with <code>__INTERIX</code> to allow building\n    with Interix (Windows Services for UNIX) 3.5 using the xlibs\n    libraries from freedesktop.org (patch by Min Sik Kim).</li>\n\n    <li>amend solution for Debian #252873, Debian #260471 from\n    <a href=\"#xterm_194\">patch #194</a> by making the cursor not\n    explicitly colored if only the foreground color is set, and the\n    cursor is on a blank space (Debian #275473).</li>\n\n    <li>correct logic for send/receive mode (SRM) with regard to\n    control characters.</li>\n\n    <li>fix masking of invisible text in wide-character mode, which\n    did not work for line-drawing characters.</li>\n\n    <li>incorporate CF_XOPEN_SOURCE into configure script,\n    replacing CF_GNU_SOURCE.</li>\n  </ul>\n\n  <h1><a name=\"xterm_196\" id=\"xterm_196\">Patch #196 - 2004/8/15 -\n  XFree86 4.4.99.12</a></h1>\n\n  <ul>\n    <li>add a special case to configure script to ignore NetBSD's\n    <code>grantpt()</code> which was recently added (but not part\n    of a release), until someone is able to ensure that xterm can\n    use it (report by Min Sik Kim).</li>\n\n    <li>clear the buffer returned by getutid(). This fixes an\n    infinite loop on some platforms introduced in <a href=\n    \"#xterm_193\">patch #193</a> by Debian #256468 fix (report by\n    David Ellement).</li>\n  </ul>\n\n  <h1><a name=\"xterm_195\" id=\"xterm_195\">Patch #195 - 2004/8/8 -\n  XFree86 4.4.99.11</a></h1>\n\n  <ul>\n    <li>correct length used for blinking text, make the last column\n    blink (patch by Alexander V Lukyanov).</li>\n\n    <li>start changes to make doublesize characters work with\n    TrueType fonts (see <a href=\"#xterm_44\">patch #44</a>).</li>\n\n    <li>trim leading/trailing blanks from color resources as done\n    for other strings in <a href=\"#xterm_167\">patch #167</a>.</li>\n\n    <li>fixes for <code>showBlinkAsBold</code> resource (report by\n    Christoph Berg).</li>\n  </ul>\n\n  <h1><a name=\"xterm_194\" id=\"xterm_194\">Patch #194 - 2004/7/27 -\n  XFree86 4.4.99.11</a></h1>\n\n  <ul>\n    <li>change clearing operations so foreground color attribute is\n    not set. Usually this is benign, but in some cases when the\n    cursor color is not set explicitly, the cursor would show this\n    color (Debian #252873, Debian #260471).</li>\n\n    <li>add extra state (cursor-moved) to guard against deciding\n    that the cursor did not require repainting after an indexing\n    operation that leaves the cursor in the same location on the\n    screen.</li>\n\n    <li>fix a case where a full-screen indexing operation would not\n    restore the cursor-busy state.</li>\n\n    <li>fix a repainting bug introduced in <a href=\n    \"#xterm_180\">patch #180</a>: when using a font lacking\n    line-drawing characters, a repaint of the screen could skip\n    horizontally an extra amount after filling in the missing\n    character (reports by Nicolas George, Hans de Goede, Redhat\n    Bugzilla #128341).</li>\n\n    <li>rename terminfo fragment \"xterm-pc-fkeys\" to\n    \"xterm+pcfkeys\" for consistency with ncurses.</li>\n  </ul>\n\n  <h1><a name=\"xterm_193\" id=\"xterm_193\">Patch #193 - 2004/7/19 -\n  XFree86 4.4.99.10</a></h1>\n\n  <ul>\n    <li>fix for wide-character selection from OpenBSD CVS\n    (report/patch by Matthieu Herrb).</li>\n\n    <li>modify initialization and cleanup of utmp data to also\n    compare the <code>ut_line</code> member (Debian #256468).</li>\n\n    <li>modify check on focus-change to ignore\n    <code>FocusOut</code> events generated by\n    <code>XGrabKeyboard</code>. This fixes a case where the text\n    cursor would act as if focus were lost when selecting the\n    \"Secure Keyboard\" menu option.</li>\n\n    <li>add <code>gen-pc-fkeys.pl</code> script, use that to\n    generate terminfo fragment corresponding to the pc-style\n    function keys.</li>\n\n    <li>fix a case where the checkmark by the \"VT220 Keyboard\" menu\n    entry was not set on startup.</li>\n\n    <li>separated two methods for making the cursor blink (menu and\n    escape sequence) by using the menu as the primary method and\n    XOR'ing the state of the escape sequence against that.</li>\n\n    <li>modify logic for enabling blinking cursor via escape\n    sequence as well as the related save/restore operations so this\n    is only available if the <code>cursorBlink</code> resource was\n    set on startup.</li>\n  </ul>\n\n  <h1><a name=\"xterm_192\" id=\"xterm_192\">Patch #192 - 2004/7/12 -\n  XFree86 4.4.99.9</a></h1>\n\n  <ul>\n    <li>change resource settings for color4 and color12, add some\n    discussion in <code>XTerm-col.ad</code> (Debian #241717).</li>\n\n    <li>add a note in xterm manpage discussing the difference\n    between alt- and meta-keys, and the way the latter is used in\n    the <code>eightBitInput</code> resource.</li>\n\n    <li>add a note in xterm manpage regarding possible conflict\n    between resource settings for <code>xterm.vt100.font</code> and\n    <code>xterm.vt100.utf8Fonts.font</code> (Debian #254650).</li>\n\n    <li>add compile-time customization of\n    <code>backarrowKeyIsErase</code> and\n    <code>ptyInitialErase</code> default resource values (adapted\n    from OpenBSD CVS).</li>\n\n    <li>change parameter of <code>FIONREAD</code>\n    <code>ioctl()</code> call from long to int (discussion on\n    tech-x11@netbsd.org regarding LP64 by John Heasley and Matthias\n    Scheler).</li>\n\n    <li>modify configure script options for Athena widgets to work\n    as expected for \"--without-Xaw3d\", etc., (Gentoo Bugzilla\n    #53455).</li>\n\n    <li>add case to uxterm to accommodate locales ending with\n    \"@euro\", e.g., fr_FR.UTF-8@euro (Debian #255197,\n    report/analysis by Matthieu Lagouge).</li>\n\n    <li>add special case for VT100 graphic's \"box\" character\n    (discussion with Ben Armstrong).</li>\n\n    <li>add missing initialization for bitmap-font sizes needed to\n    make fonts menu work with TrueType fonts (report by Ben\n    Armstrong).</li>\n\n    <li>save the fontnames for bold fonts that are derived from\n    normal fonts, or from the <code>boldFont</code> resource, so\n    the same value is restored when switching with the VT Fonts\n    menu (Debian #256086).</li>\n\n    <li>fix manpage preprocessing (Marc La France).</li>\n\n    <li>fix typo in manpage's description of character classes\n    (Debian #257073).</li>\n\n    <li>modify terminfo to accommodate luit, which relies on G1\n    being used via an ISO-2022 escape sequence (Debian #254316,\n    analysis by Juliusz Chroboczek).</li>\n\n    <li>modify Makefile.in rule for ctlseqs.txt to work around\n    groff SGR misfeature.</li>\n\n    <li>modify <code>XTerm.ad</code> to set <code>saveLines</code>\n    default to 1024 (Redhat Bugzilla #127132).</li>\n\n    <li>add a limit-check in <code>dotext()</code> to prevent\n    infinite loop in a corner case of UTF-8 configuration.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_191\" id=\"xterm_191\">Patch #191 - 2004/6/6 -\n  XFree86 4.4.99.7</a></h1>\n\n  <ul>\n    <li>correct options parsing for <code>-into</code> option so it\n    can be combined with <code>-e</code> (Redhat Bugzilla #124518,\n    report/patch by James Armstrong).</li>\n\n    <li>fix ifdef's for <code>OPT_COLOR_RES2</code> so that the\n    fake resource table introduced in <a href=\"#xterm_188\">patch\n    #188</a> is not compiled if it is empty. This happened to work\n    with gcc (report by Joel Konkle-Parker).</li>\n\n    <li>reorganize ptydata.c to use one input buffer shared between\n    the VTxxx and tek4014 emulators. In the new scheme, UTF-8\n    decoding is performed on characters as they are needed by the\n    state machine rather than on buffers as they are read.</li>\n\n    <li>work around change in quoting of PROJECTROOT symbol when\n    using configure script, from changes made in <a href=\n    \"#xterm_187\">patch #187</a> for CF_IMAKE_CFLAGS (Gentoo\n    Bugzilla #50982).</li>\n  </ul>\n\n  <h1><a name=\"xterm_190\" id=\"xterm_190\">Patch #190 - 2004/5/25 -\n  XFree86 4.4.99.6</a></h1>\n\n  <ul>\n    <li>correct state for values in the range 128-159 after\n    translating from UTF-8: this should be ignored unless the user\n    overrides it with the <code>allowC1Printable</code> resource\n    (reported by Simon Strandgaard).</li>\n\n    <li>add configure-script check for nl_langinfo(CODESET), use\n    this to replace check of environment variables for UTF-8.</li>\n\n    <li>change Makefile.in rules for 256colres.h and 88colres.h so\n    they are only made if they do not exist. The maintainer-clean\n    rule will remove these files; they require perl to be\n    made.</li>\n\n    <li>remove check in configure script --enable-toolbar that\n    suppressed this option when building with Xaw7.</li>\n\n    <li>apply fixes to Tektronix widget used for VT100 widget to\n    make toolbar work with Xaw7 (XFree86 4.x).</li>\n  </ul>\n\n  <h1><a name=\"xterm_189\" id=\"xterm_189\">Patch #189 - 2004/5/16 -\n  XFree86 4.4.99.6</a></h1>\n\n  <ul>\n    <li>do not call xim_real_init() if <code>openIm</code> resource\n    is false (Debian #249025).</li>\n\n    <li>minor improvements to built-in line-drawing.</li>\n\n    <li>fix a few portability issues with dynamic abbreviation\n    support, i.e., did not compile on Tru64.</li>\n\n    <li>modify constraints in form used to layout toolbar, to work\n    with newer Xaw in XFree86 4.x.</li>\n  </ul>\n\n  <h1><a name=\"xterm_188\" id=\"xterm_188\">Patch #188 - 2004/5/12 -\n  XFree86 4.4.99.6</a></h1>\n\n  <ul>\n    <li>correct table entry for DEL in the ground state, which\n    marked it as a printable character from <a href=\n    \"#xterm_171\">patch #171</a> (report by D Hugh Redelmeier).</li>\n\n    <li>improve fix in <a href=\"#xterm_186\">patch #186</a> for\n    failure in xim_real_init() by adding a sleep.</li>\n\n    <li>fix a typo in os2main.c (XFree86 Bugzilla #1358,\n    report/patch by Frank Giessler).</li>\n\n    <li>make escape sequence reporting dynamic colors consistent\n    with the logic that sets it; choosing the opposite color when\n    reverse video is set (XFree86 Bugzilla #1361, reported by Bradd\n    W Szonye).</li>\n\n    <li>modify initialization of 256- and 88-colors so that colors\n    beyond 16 are normally not X resources. This works around a\n    hard-coded limit in Xt which breaks xterm when 256-colors and\n    luit are both configured (report by Noah Friedman).</li>\n\n    <li>remove <code>ncv</code> from <code>xterm-256color</code>\n    terminfo entry since it is no longer needed (report by Eli\n    Zaretskii).</li>\n\n    <li>add \"erase2\" and \"eol2\" keywords to <code>ttyModes</code>\n    resource, for recent/current FreeBSD.</li>\n\n    <li>improve ifdef's for utempter library to omit direct calls\n    to <code>setutent()</code> or <code>getutent()</code> (adapted\n    from patch by Christian Biere).</li>\n\n    <li>add dynamic abbreviation support like Emacs (patch by\n    Tomasz Cholewo). This is ifdef'd with <code>OPT_DABBREV</code>,\n    and enabled via the configure script\n    <code>--enable-dabbrev</code> option.</li>\n\n    <li>fix problem responding to session management events, e.g.,\n    which would make logging out very slow (patch by Eddy De Greef,\n    Debian #233883).</li>\n\n    <li>work around a newer bug in toolbar with XFree86 by forcing\n    menus to be fully initialized at startup. In older versions of\n    XFree86 and X11R6, it was possible to delay initialization of\n    the menu contents until it was popped up. (The longstanding bug\n    with XFree86 4.x layout for toolbar still exists, though).</li>\n\n    <li>modify <code>xtermAddInput</code> to work around core dump\n    on IRIX64 when initializing scrollbar translations if toolbar\n    is compiled-in.</li>\n\n    <li>fix some minor conflicts in the 2-character entry names in\n    the termcap file.</li>\n  </ul>\n\n  <h1><a name=\"xterm_187\" id=\"xterm_187\">Patch #187 - 2004/4/27 -\n  XFree86 4.4.99.4</a></h1>\n\n  <ul>\n    <li>change xterm version string to use\n    <code>__vendorversion__</code> where that is available, and\n    \"XTerm\" otherwise.</li>\n\n    <li>improve description of <code>utf8</code> resource in\n    manpage (Debian #179407).</li>\n\n    <li>modify configure macros CF_IMAKE_CFLAGS and CF_ADD_CFLAGS\n    to handle <code>-D</code> options that define string values,\n    e.g., for <code>XVENDORNAME</code>.</li>\n\n    <li>modify configure macro CF_IMAKE_CFLAGS to allow (if\n    <code>$PATH</code> is set accordingly) to use the\n    <code>xmkmf</code> script within an X build tree.</li>\n\n    <li>add missing <code>#undef OPT_SESSION_MGT</code> to\n    xtermcfg.hin to make the configure script's\n    --disable-session-mgt option work.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_186\" id=\"xterm_186\">Patch #186 - 2004/4/18 -\n  XFree86 4.4.99.4</a></h1>\n\n  <ul>\n    <li>change reset on <code>DECSCL</code> to a soft-reset\n    (appears some DEC manuals have errors).</li>\n\n    <li>add a section to ctlseqs.ms elaborating on normal/alternate\n    screens.</li>\n\n    <li>modify initialization of Acolors[] so that any\n    XtDefaultForeground or XtDefaultBackground values are\n    translated as in the Tcolors[], to use the window's\n    foreground/background colors. This affects the\n    <code>colorBD</code> and similar resources which normally have\n    no explicit color assigned.</li>\n\n    <li>modify initialization of Tektronix window so that control\n    sequences setting its color before the window is popped up will\n    apply to its initial colors.</li>\n\n    <li>add control sequence to set Tektronix window's\n    text-cursor.</li>\n\n    <li>modify initialization of terminal colors, e.g., mouse\n    pointer and text cursor, to treat\n    <code>XtDefaultForeground</code> and\n    <code>XtDefaultBackground</code> values as the actual\n    foreground and background colors of the terminal rather than\n    white and black (Debian #241717).</li>\n\n    <li>remove an incorrect comparison against\n    <code>PTYCHARLEN</code> in parsing the <code>-S</code> option\n    (report by Michael B Taylor).</li>\n\n    <li>minor restructuring of terminfo/termcap files, having noted\n    some packager's customizations which caused the structure to be\n    confused.</li>\n\n    <li>eliminate an isolated use of MIN/MAX in charproc.c</li>\n\n    <li>replace <code>XtExtdefaultfont</code> and\n    <code>XtExtdefaultbackground</code> by their more familiar\n    equivalents <code>XtDefaultFont</code> and\n    <code>XtDefaultBackground</code>.</li>\n\n    <li>replace ifdef's using <code>SCO</code>, <code>sco</code>\n    and <code>SCO325</code> with <code>__SCO__</code> (XFree86\n    Bugzilla #1301, Kean Johnston). But ensure that it still builds\n    on platforms where this symbol is not defined.</li>\n\n    <li>add <code>scoFunctionKeys</code> resource, to match\n    manpage.</li>\n\n    <li>update manpage discussion of menus and related\n    resources.</li>\n\n    <li>enable utmpx support for NetBSD 1.6C and newer (patch by\n    Matthias Scheler).</li>\n\n    <li>add a note in the manpage discussing xterm's treatment of\n    open file-descriptors (request by Dan Shearer).</li>\n\n    <li>modify <code>Help()</code> to make \"xterm -h\" write to\n    standard output rather than standard error (patch by Bram\n    Moolenaar).</li>\n\n    <li>check for type of failure in xim_real_init() to avoid\n    looping when the problem is an unsupported input method rather\n    than a failure to connect to the XIM server. Problem was\n    introduced in <a href=\"#xterm_175\">patch #175</a> (XFree86\n    Bugzilla #1306).</li>\n\n    <li>modify <code>Imakefile</code> to remove dependency of\n    \"install\" target on the <code>xterm</code> executable to make\n    installs from tree without attempting to rebuild anything\n    (commit by David Dawes, report/patch from Lee Olsen).</li>\n\n    <li>remove call to <code>ShowCursor</code> from\n    <code>SetCursorBlink()</code> since that is redundant, and can\n    cause display glitches if the cursor is already blinking\n    (XFree86 Bugzilla #1158, patch/report by Andreas Schwab).</li>\n  </ul>\n\n  <h1><a name=\"xterm_185\" id=\"xterm_185\">Patch #185 - 2004/3/3 -\n  XFree86 4.4</a></h1>\n\n  <ul>\n    <li>fix tcap-query logic for the backspace key (XFree86\n    Bugzilla #1233, report/patch by Anton Kovalenko).</li>\n\n    <li>add test-scripts resize.pl and tcapquery.pl</li>\n\n    <li>add translation to ASCII of commonly-used characters that\n    groff translates to Unicode, when the font in use does not\n    provide the corresponding glyphs (Debian #219551).</li>\n\n    <li>modify RequestMaximize(), which performs maximize/restore\n    via control sequences, to account for window-frame (patch by\n    Jess Thrysoee).</li>\n\n    <li>improve pattern used in <code>uxterm</code> to check for\n    UTF-8 locale, e.g., for HPUX (patch by H Merijn Brand).</li>\n\n    <li>add <code>-fd</code> option and resource\n    <code>faceNameDoublesize</code> to specify double-wide fonts\n    with Xft (adapted from patch by Zarick Lau).</li>\n\n    <li>change a couple of resource classes from \"Boolean\" to\n    specific values: <code>freeBoldBox</code>,\n    <code>forceBoxChars</code>.</li>\n\n    <li>add resource <code>showMissingGlyphs</code> to outline\n    places on the screen where a font lacks the corresponding\n    glyph.</li>\n\n    <li>add resource <code>showBlinkAsBold</code> to control\n    whether blinking text should be shown as bold or actual\n    blinking text.</li>\n\n    <li>improve logic in ShowCursor() to avoid repainting the\n    cursor when it is already visible, e.g., in response to the\n    DECTCEM escape sequence. This also addresses XFree86 Bugzilla\n    #1158.</li>\n\n    <li>implement blinking text, using the timer for blinking\n    cursor.</li>\n\n    <li>modify FreeType support to allow resizing the font, in the\n    same ways the window can be resized if fixed fonts are used.\n    The relative font sizes are derived from the fixed font\n    sizes.</li>\n\n    <li>add menu items and corresponding actions for switching\n    on/off the UTF-8 mode and Xft (TrueType) support.</li>\n\n    <li>add logic to handle switching UTF-8 mode on/off. It worked\n    if the escape sequences were flushed, but if data was mixed in\n    with the same write, some were not handled properly (report by\n    Nicolas George).</li>\n\n    <li>modify to allow turning UTF-8 mode on/off via escape\n    sequence even if <code>-wc</code> option was not given at\n    startup (patch by Peter Berg Larsen).</li>\n\n    <li>amend fix for XFree86 Bugzilla #981, adjusting for\n    savedlines value (report by Tim Adye).</li>\n\n    <li>fix a typo in computing relative font size (Jess\n    Thrysoee).</li>\n  </ul>\n\n  <h1><a name=\"xterm_184\" id=\"xterm_184\">Patch #184 - 2003/12/31 -\n  XFree86 4.3.99.903</a></h1>\n\n  <ul>\n    <li>improve configure-script checks for FreeType and related\n    libraries, using <code>xft-config</code> or\n    <code>freetype-config</code> scripts when available.</li>\n\n    <li>fix configure-script check for <code>SYSV</code> definition\n    by ensuring whether <code>sys_errlist[]</code> is declared, and\n    by modifying the test program to include\n    <code>X11/Intrinsic.h</code> to check that <code>wchar_t</code>\n    is declared consistently (report by H Merijn Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_183\" id=\"xterm_183\">Patch #183 - 2003/12/26 -\n  XFree86 4.3.99.903</a></h1>\n\n  <ul>\n    <li>correct logic for configurations that may attempt to open\n    both old/new-style pseudoterminals. In this case, the old-style\n    are preferred. Logic was broken in <a href=\"#xterm_145\">patch\n    #145</a> (XFree86 Bugzilla #997, report/patch by Kean\n    Johnston).</li>\n\n    <li>modify handling of <code>eightBitInput</code> resource in\n    UTF-8 mode to translate the value into UTF-8. Otherwise an\n    illegal UTF-8 code is sent to the application (report by Bram\n    Moolenaar).</li>\n\n    <li>modify <code>uxterm</code> script to interpret help and\n    version options so xterm does not always create a window when\n    the user requests this information (Debian #223926).</li>\n\n    <li>add a limit check to ScrnTstWrapped() (XFree86 Bugzilla\n    #981).</li>\n\n    <li>modify DECSCL to perform a hard reset (RIS) as per DEC\n    manuals. Extended DECSCL to accept parameters for vt4XX and\n    vt5xx terminals.</li>\n\n    <li>correct logic for ANSI conformance level escape sequences,\n    which were confused with DEC conformance level escape\n    sequences.</li>\n\n    <li>correct state for vt52 shift-in/shift-out, which was not\n    reset properly after <a href=\"#xterm_171\">patch #171</a>.</li>\n\n    <li>correct handling of graphics characters for vt52 mode,\n    which did not display line-drawing characters after G1 fix from\n    <a href=\"#xterm_182\">patch #182</a>.</li>\n\n    <li>fixes for configure script to work with current Cygwin\n    headers and libraries.</li>\n\n    <li>modify <code>Imakefile</code> to put the current directory\n    at the beginning of the include searchpath (patch by David\n    Dawes).</li>\n  </ul>\n\n  <h1><a name=\"xterm_182\" id=\"xterm_182\">Patch #182 - 2003/12/2 -\n  XFree86 4.3.99.901</a></h1>\n\n  <ul>\n    <li>correct logic for <code>metaSendsEscape</code> resource to\n    allow for the meta-right key to be tested. Improve check for\n    meta/alt modifiers by dropping the assumption that a keysym is\n    associated with only one modifier, and by ignoring NoSymbol\n    entries in the xmodmap data (XFree86 Bugzilla #924, patch by\n    David Dawes).</li>\n\n    <li>correct wrapping logic for line-drawing characters written\n    in non-UTF-8 mode of xterm build for wide-characters (XFree86\n    Bugzilla #918, report/patch by J&uuml;rgen Keil).</li>\n\n    <li>improve manpage description of resources, in particular the\n    <code>utf8Fonts</code> class (XFree86 Bugzilla #905).</li>\n\n    <li>add definitions to compile with glibc-based GNU/Hurd,\n    GNU/KFreeBSD and GNU/KNetBSD (XFree86 Bugzilla #893).</li>\n\n    <li>compiler-warning fixes (patch by Christian Biere).</li>\n\n    <li>add README.i18n (Tomohiro Kubota).</li>\n\n    <li>correct initialization of G1 character set mapping, which\n    used line-drawing set as a result of confusion between \"DEC\n    Supplemental Graphic\" and \"DEC Special Graphic\" character sets\n    (see <a href=\"#xterm_34\">patch #34</a> regarding DECSTR).</li>\n\n    <li>correct ifdef in main.c for variable utret (patch by\n    Bernhard Rosenkraenzer).</li>\n\n    <li>document in xterm's manpage how to use XFree86 \":unscaled\"\n    keyword to suppress scaling of bold fonts.</li>\n\n    <li>when deriving bold fontname from normal fontname, use the\n    normal font's average width to avoid for example selecting\n    7x13bold from an 8x13 normal font (Debian #107769).</li>\n  </ul>\n\n  <h1><a name=\"xterm_181\" id=\"xterm_181\">Patch #181 - 2003/10/26 -\n  XFree86 4.3.99.15</a></h1>\n\n  <ul>\n    <li>implement <code>boldMode</code> for wide-character logic in\n    <code>drawXtermText()</code> (report by Michael\n    Schroeder).</li>\n\n    <li>modify <code>UXTerm.ad</code> resource file to include\n    \"XTerm-color\" rather than \"XTerm\", in case the latter file\n    contains no color resource definitions, e.g., after <a href=\n    \"#xterm_180\">patch #180</a>.</li>\n\n    <li>add action <code>load-vt-fonts()</code> and configure\n    option <code>--enable-load-vt-fonts</code> which allows users\n    to define additional sets of VT-fonts which can be loaded at\n    runtime.</li>\n\n    <li>add logic to wide-character support which attempts to load\n    fonts specified by <code>utf8Fonts</code> subresources at\n    startup. The subresources have the same names as the fonts\n    which they replace, e.g., <code>font</code>,\n    <code>font1</code>, etc., so that the ISO-10646-1 fonts can be\n    specified in the <code>XTerm</code> app-defaults file (adapted\n    from patch by Tomohiro Kubota).</li>\n\n    <li>improve Set Font escape string handling by making the\n    relative settings apply to the size of the font, as in shift\n    keypad plus/minus rather than the menu index.</li>\n\n    <li>simplify parameter passing for the <code>set-vt-font</code>\n    action and related code.</li>\n\n    <li>cleanup some include-ordering, moving some recently-added\n    hardcoded stuff into xterm.h where it will not interfere with\n    the configure script.</li>\n\n    <li>modify <code>xtermAddInput()</code> (see note on\n    augmentation in <a href=\"#xterm_158\">patch #158</a>) to use the\n    complete set of default keyboard translations so that one can\n    use shifted pageup, wheel mouse, etc., while the mouse pointer\n    is over the scrollbar. (Debian #178812).</li>\n\n    <li>make save/restore mode controls apply to show/blink cursor\n    states.</li>\n\n    <li>add escape sequence to start/stop blinking cursor, which\n    allows implementing <code>cvvis</code> terminfo capability\n    (request by Nate Bargmann).</li>\n\n    <li>add <code>indp</code> and <code>rin</code> to terminfo\n    entry.</li>\n\n    <li>fix an out-of-bounds array reference in ScrnRefresh() for\n    wide characters (report by Dan Harnett, patch by Todd Miller).\n    This bug dates from <a href=\"#xterm_141\">patch #141</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_180\" id=\"xterm_180\">Patch #180 - 2003/10/12 -\n  XFree86 4.3.99.15</a></h1>\n\n  <ul>\n    <li>several fixes for rendering using Xft via option\n    <code>-fa</code>:\n      <ul>\n        <li>translate Unicode values, i.e,. from UTF-8 output to\n        xterm, for line-drawing to xterm's internal code, etc.,\n        since TrueType fonts generally do not have either set of\n        line-drawing glyphs. xterm can draw these directly (report\n        by Abigail Brady).</li>\n\n        <li>pass 16-bit values rather than 8-bit values to\n        xtermXftDrawString() to allow for wide-characters.</li>\n\n        <li>remove spurious check for <code>colorBDMode</code>\n        resource in logic that does bold fonts.</li>\n\n        <li>implement underlining.</li>\n      </ul>\n    </li>\n\n    <li>patches by Ilya Zakharevich:\n      <ul>\n        <li>improve drawXtermText() by making the recursive calls\n        communicate through arguments, and not through\n        saving/restoring global variables.</li>\n\n        <li>make double-width characters work with <code>-u8</code>\n        option.</li>\n\n        <li>modify lookup of double-sized fonts by checking for a\n        match ignoring x/y resolution if the first check\n        fails.</li>\n      </ul>\n    </li>\n\n    <li>make height of TrueType fonts match ascent+descent (patch\n    by Keith Packard).</li>\n\n    <li>correct configure-script check for imake $CFLAGS, which did\n    not check properly if imake was not available.</li>\n\n    <li>correct install rule in Makefile.in for\n    <code>uxterm</code>, which was attempting to strip the script\n    (newsgroup posting by Fernan Aguero).</li>\n\n    <li>correct AF/AB strings in termcap for xterm-256color and\n    xterm-88color entries (report by Josh Howard).</li>\n\n    <li>update wcwidth.c to incorporate changes from Markus Kuhn's\n    2003-05-20 (Unicode 4.0) version of that file.</li>\n\n    <li>modify <code>scroll-back</code> and\n    <code>scroll-forw</code> actions to accept an adjustment value,\n    e.g.,\n\n      <pre>\n              <code>scroll-back(1, page-2)</code>\n</pre>to scroll back by 2 lines less than a page (patch by Greg\nKlanderman).\n    </li>\n\n    <li>use color resource setting from Debian package for xterm\n    VT100 widget, since the choice of blues provides better\n    contrast.</li>\n\n    <li>remove color resources from <code>XTerm.ad</code>, leaving\n    them only in <code>XTerm-col.ad</code> (prompted by Debian\n    package for xterm).</li>\n\n    <li>correct configure script option --enable-pty-handshake\n    (report by Paul Gilmartin).</li>\n\n    <li>add <code>visualBellDelay</code> resource to modify the\n    length of time used for visual bell, for very slow displays or\n    very fast computers (reports by Ingo van Lil and Doug\n    Toppin).</li>\n\n    <li>correct logic for initializing dynamic highlight color\n    (patch by Jess Thrysoee).</li>\n\n    <li>add a check for non-zero size in call to\n    <code>XCopyArea()</code> to accommodate a Solaris bug.</li>\n\n    <li>correct typo in example for character classes in xterm\n    manpage (Debian #198910).</li>\n\n    <li>link xterm with bind_on_load option on Darwin to work\n    around a deadlock in the dynamic loader when a signal is\n    received while the dynamic loader is looking up symbols\n    (patches by Rob Braun, Torrey Lyons).</li>\n\n    <li>modify configure script to avoid using \"head -1\".</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>modify ifdef's to work around inclusion of types FcChar32\n    and XftCharSpec with FreeType 2.0 (see <a href=\n    \"#xterm_175\">patch #175</a>).</li>\n\n    <li>modify the predictable version of the generated logfile\n    name (see <a href=\"#xterm_171\">patch #171</a>) to append the\n    process-id rather than a random value.</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>Enable SCO function keys in xterm</li>\n\n        <li>Make Delete key send DEL by default on SCO in\n        xterm</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_179\" id=\"xterm_179\">Patch #179 - 2003/5/21 -\n  XFree86 4.3.99.5</a></h1>\n\n  <ul>\n    <li>modify ifdef's for WTMPX_FILE to allow building on cygwin\n    again.</li>\n\n    <li>change the default of pty-handshaking configure option (and\n    related default for imake) to assume this feature is\n    needed.</li>\n\n    <li>add ifdef's so configure option for XawPlus library works\n    (patch by Pavel Roskin).</li>\n\n    <li>add <code>$(MAIN_DEFINES)</code> to the variables checked\n    by the configure script that may contain information set by\n    imake. This allows xterm to build/run properly using the\n    configure script on IRIX64.</li>\n\n    <li>add configure check for \".exe\" suffix on cygwin.</li>\n  </ul>\n\n  <h1><a name=\"xterm_178\" id=\"xterm_178\">Patch #178 - 2003/5/18 -\n  XFree86 4.3.99.5</a></h1>\n\n  <ul>\n    <li>modify default for configure\n    <code>--enable-pty-handshake</code> option to enable it for\n    Solaris (report by Nelson Beebe).</li>\n\n    <li>modify <code>in_put()</code> function to call\n    <code>PreeditPosition()</code> only when the cursor's position\n    has changed. This addresses report by Stefan Baums of high CPU\n    usage while xterm with chinput are running in the background\n    (patch by Yong Li).</li>\n\n    <li>improved explanation of <code>-ls</code> conflict with\n    <code>-e</code> option in xterm manpage (adapted from comments\n    by Henning Makholm).</li>\n\n    <li>correct comment in terminfo file regarding modifier used\n    for <code>kDC</code> (Debian #189764, report by Henning\n    Makholm).</li>\n\n    <li>correct/extend some of the keypad description in ctlseqs.ms\n    (report by Henning Makholm).</li>\n\n    <li>correct keypad-mapping table in input.c so\n    <code>XK_KP_Equal</code> works (report by Henning\n    Makholm).</li>\n\n    <li>modified to work with CJK double-width (bi-width/monospace)\n    fonts. They're similar to Roman Czbora and David Starner's\n    gnuunifonts in that Latin letters and numbers have all the same\n    width which is exactly the half of the width of East Asian\n    characters. (patch by Jungshik Shin\n    &lt;jshin@mailaps.org&gt;).</li>\n\n    <li>add configure option <code>--enable-broken-osc</code> and\n    resource <code>brokenLinuxOSC</code> to accommodate scripts\n    which do not distinguish between running in the Linux console\n    and running in X. Linux console recognizes malformed control\n    strings which start with an <code>OSC</code>, but are\n    fixed-length, with no terminator.</li>\n\n    <li>add configure option <code>--enable-broken-st</code> and\n    resource <code>brokenStringTerm</code> to allow user to revert\n    one part of the parsing table corrections from <a href=\n    \"#xterm_171\">patch #171</a>. (reports by Matthias Scheler and\n    Kirill Ponomarew indicate that someone's network firmware sends\n    an <code>&lt;escape&gt;X</code>).</li>\n\n    <li>modify configure <code>--disable-imake</code> to provide\n    values for <code>OSMAJORVERSION</code>,\n    <code>OSMINORVERSION</code>, <code>FUNCPROTO</code> and\n    <code>NARROWPROTO</code> (report by Heiko Schlichting).</li>\n\n    <li>correct <code>vttests/16colors.sh</code>, which omitted the\n    <code>$SUF</code> variable in output strings (patch by Paul\n    Gilmartin).</li>\n\n    <li>modify shell scripts in <code>vttests</code> directory to\n    attempt to use named signals in the <code>trap</code>\n    statement, making this portable to OS/390 (report by Paul\n    Gilmartin). Tested on SunOS 4.1.4, which implements only\n    numbers.</li>\n  </ul>\n\n  <h1><a name=\"xterm_177\" id=\"xterm_177\">Patch #177 - 2003/3/23 -\n  XFree86 4.3.0</a></h1>\n\n  <ul>\n    <li>fix definition of <code>USE_HANDSHAKE</code>, must be\n    numeric (reported by Jens Schleusener).</li>\n  </ul>\n\n  <h1><a name=\"xterm_176\" id=\"xterm_176\">Patch #176 - 2003/3/22 -\n  XFree86 4.3.0</a></h1>\n\n  <ul>\n    <li>add configure option <code>--enable-pty-handshake</code> to\n    allow one to compile-in support for the pty handshaking logic,\n    and resource <code>ptyHandshake</code> to enable or disable it\n    (suggested by Ian Collier).</li>\n\n    <li>restore <code>USE_HANDSHAKE</code> ifdef removed in\n    <a href=\"#xterm_159\">patch #159</a> to address Debian\n    #39964.</li>\n\n    <li>move ifdef's for ttysize/winsize into xterm_io.h</li>\n\n    <li>simplify loop on <code>tgetent</code>, check if the\n    successive entries in the lookup table are the same. That makes\n    xterm do one less lookup if there is no \"xterm\" entry in the\n    termcap file (report by Derek Martin).</li>\n\n    <li>correct manpage discussion of <code>$TERM</code> and\n    <code>$TERMCAP</code> variables, which omitted the Tektronix\n    emulation and a note of the final \"dumb\" fallback.</li>\n\n    <li>broaden ifdef for\n    <code>XRegisterIMInstantiateCallback()</code> from <a href=\n    \"#xterm_175\">patch #175</a> (XIM fix) to exclude non-XFree86\n    (report by Nelson Beebe indicates this breaks for Solaris, IRIX\n    and OSF/1).</li>\n\n    <li>correct resource-size for <code>iconFont</code> (this was\n    added by X11R6.3).</li>\n\n    <li>improve configure check for XKB bell extension, to work\n    around inconsistent implementation of this feature (reports by\n    Nelson Beebe, Kriston Rehberg and David Ellement).</li>\n\n    <li>modify configure-check for <code>tty</code> group to be\n    less strict in batch mode (report by Nelson Beebe).</li>\n\n    <li>modify to allow building with g++, to use its compiler\n    warnings (suggested by Nelson Beebe).</li>\n\n    <li>modify <code>dec2ucs[]</code> table to reflect newer codes\n    available for scanlines 1, 3, 7, 9 (report by Michael\n    Schroeder).</li>\n\n    <li>add configure option for XawPlus library.</li>\n  </ul>\n\n  <h1><a name=\"xterm_175\" id=\"xterm_175\">Patch #175 - 2003/3/9 -\n  XFree86 4.3.0</a></h1>\n\n  <ul>\n    <li>fix a SIGSEGV which could occur if xterm is connecting to\n    XIM server, and the XIM server is destroyed (patch by Nam\n    SungHyun).</li>\n\n    <li>modify to use built-in line-drawing characters for Xft\n    fonts (patch by Andrew Tipton).</li>\n\n    <li>make menu reflect the state of the <code>tekInhibit</code>\n    resource.</li>\n\n    <li>make <code>signalInhibit</code> resource work, i.e.,\n    disable the menu entries that would send signals to, or exit\n    xterm. This was probably broken in X11R5 when logging was\n    disabled (report by Sven Mascheck).</li>\n\n    <li>changed classes of <code>colorBDMode</code> and similar\n    resources that override colors when a video attribute is set to\n    <code>ColorAttrMode</code>, to make them distinct from\n    <code>ColorMode</code>. This avoids an unexpected rendering of\n    reverse video, for example (report by Paul Fox).</li>\n\n    <li>changed class of <code>veryBoldColors</code> to\n    <code>VeryBoldColors</code>, since <code>ColorMode</code> is\n    associated with boolean resources.</li>\n\n    <li>add option <code>-k8</code> and resource\n    <code>allowC1Printable</code> to allow users of non-VTxxx\n    character sets such as KOI-8 to treat the C1 control area\n    (character codes 128-159) as printable rather than control\n    characters.</li>\n\n    <li>add a null-pointer check for return-value of\n    <code>ptsname()</code> in HPUX-specific code (report by David\n    Ellement).</li>\n\n    <li>revise the ifdef's used for <code>XKB</code> bell support.\n    The code was using a nonstandard call\n    <code>XkbStdBell()</code>. Changed to use\n    <code>XkbBell()</code> (based on patch by\n    &lt;derek@signalmarketing.com&gt;).</li>\n\n    <li>add a null-pointer check in <code>xtermLoadFont()</code> in\n    case there is no wide-bold font (Nam SungHyun).</li>\n\n    <li>change <code>Makefile.in</code> to use autoconf's\n    <code>bindir</code>, <code>libdir</code> and\n    <code>mandir</code> variables (report by Nam SungHyun).</li>\n\n    <li>add <code>le</code> to termcap <code>xterm-basic</code>\n    entry. Though missing from older termcaps for xterm, some\n    applications check for it (report by Matthias Buelow).</li>\n\n    <li>modify <code>uxterm</code> script to strip modifiers such\n    as \"@euro\" from the locale setting before adding \".UTF-8\"\n    (Debian #179929).</li>\n\n    <li>modify the remaining places where tek4014 emulation uses\n    <code>XDefineCursor()</code>, to make it work as originally\n    implemented, e.g., when switching back to alpha mode. Added\n    test-screen in vttest to test this feature properly.</li>\n  </ul>\n\n  <h1><a name=\"xterm_174\" id=\"xterm_174\">Patch #174 - 2003/2/25 -\n  XFree86 4.2.99.903</a></h1>\n\n  <ul>\n    <li>work-around for XFree86 bug which made\n    <code>XDefineCursor()</code> on a shell-window no longer work.\n    The tek4014 emulation used this. Use the next lower window\n    (report by Karl Rudolf Bauchspiess).</li>\n\n    <li>add a resource setting <code>allowWindowOps</code> to\n    control whether the extended window operations should be\n    allowed, e.g., resize, iconify, report window attributes. This\n    is to accommodate people who are not capable of using a pager\n    to view log-files.</li>\n  </ul>\n\n  <h1><a name=\"xterm_173\" id=\"xterm_173\">Patch #173 - 2003/2/6 -\n  XFree86 4.2.99.902</a></h1>\n\n  <ul>\n    <li>reset mouse mode to normal on a full reset. This does not\n    apply to mouse hilite tracking mode, of course (see\n    ctlseqs.ms).</li>\n\n    <li>add a time-delay at the point where mouse hilite tracking\n    mode choses to not handle X events, to avoid runaway CPU usage\n    (report by D Hugh Redelmeier).</li>\n\n    <li>check for illegal character in DECUDK string, quit if\n    detected.</li>\n  </ul>\n\n  <h1><a name=\"xterm_172\" id=\"xterm_172\">Patch #172 - 2002/12/27 -\n  XFree86 4.2.99.3</a></h1>\n\n  <ul>\n    <li>fixes to make repainting of 256-color example work properly\n    (reports by Abigail Brady and Scott A Crosby).\n      <ul>\n        <li>set flag in <code>AllocateAnsiColor()</code> to ensure\n        the color is allocated once only.</li>\n\n        <li>fix check in <code>ScrnRefresh</code>, which was\n        comparing background colors only if the ANSI foreground\n        colors also were set.</li>\n      </ul>\n    </li>\n\n    <li>merge <code>Error()</code> calls and some\n    <code>exit()</code> calls into <code>SysError()</code>, and\n    change that to add the brief explanation for each error code\n    which is provided in the manpage. Change a few\n    <code>SysError()</code>, calls to avoid using code 1, to avoid\n    confusion with exit status from places that do not use\n    <code>SysError()</code>.</li>\n\n    <li>simplify logic used to open a debug logfile as the standard\n    error.</li>\n\n    <li>modify the <code>-e</code> option so that if it fails,\n    xterm will check if only one argument follows, e.g., it was\n    quoted, and then retry using <code>sh&nbsp;-c</code>.</li>\n\n    <li>modify parsing of DECUDK string parameter to allow a comma\n    between pairs of hexadecimal digits (Ray Neuman\n    &lt;raymond@one.com.au&gt; reports that \"real\" terminals accept\n    this; perhaps they simply ignore unexpected characters).</li>\n\n    <li>fix a few problems with the <code>$TERMCAP</code> string\n    generated by <code>resize</code>:\n      <ul>\n        <li>for Bourne shell, add an <code>export</code> command.\n        This was missing as far back as X11R5.</li>\n\n        <li>escape exclamation marks, used in xterm's reset\n        string.</li>\n\n        <li>translate literal <code>\\177\\</code> to \"^?\".</li>\n      </ul>\n    </li>\n\n    <li>improve configure check for <code>tgetent()</code> to work\n    when <code>$TERMCAP</code> has been set to a specific\n    entry.</li>\n\n    <li>modify <code>minstall.sh</code> to use \"%\" rather than \"@\",\n    to avoid problems with AFS (report by Zdenek Sekera).</li>\n\n    <li>list fatal error codes from <code>error.h</code> in the\n    manpage, remove unused codes in <code>error.h</code>.</li>\n\n    <li>use more explicit wording for manpage list of color\n    resources, since at least one user confused the generic names\n    such as \"black\" with the names in rgb.txt (the latter are now\n    used).</li>\n\n    <li>minor fix to description of 1003 mouse mode in ctlseqs.ms\n    (Larry Riedel).</li>\n  </ul>\n\n  <h1><a name=\"xterm_171\" id=\"xterm_171\">Patch #171 - 2002/12/12 -\n  XFree86 4.2.99.3</a></h1>\n\n  <ul>\n    <li>modify parser tables to improve detection of malformed\n    control sequences, making xterm behave more like a real DEC\n    terminal (patch by Paul Williams).</li>\n\n    <li>update comment in <code>input.c</code> to document\n    <code>Meta</code> as a modifier for escape sequences (patch by\n    D Roland Walker).</li>\n\n    <li>add ifdef'd code for logging option which adds the hostname\n    and a timestamp to the generated logfile name. The ifdef's are\n    setup with the configure script (patch by Nelson Beebe).</li>\n\n    <li>remove <code>xevents()</code> call from the end of\n    <code>BlinkCursor()</code>, to fix an occasional problem which\n    caused xterm to pause until a key was pressed. The reason for\n    this was that there was no check to ensure that there really\n    were events for <code>xevents()</code> to process. (patch by\n    Semen A Ustimenko &lt;semenu@FreeBSD.org&gt;).</li>\n\n    <li>remove unused mode-params from <code>open()</code> calls\n    that do not create a file.</li>\n\n    <li>modify configure script to put new items first on\n    <code>$CPPFLAGS</code> and <code>$CFLAGS</code> to avoid\n    conflict with environment's <em>-I</em> and <em>-D</em>\n    options.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>fix va_args glitches for xterm/libfontconfig: 0 ==\n        (void*)0 isn't true for all platforms (Egbert Eich).</li>\n\n        <li>initialise ProgramName in xterm's main before\n        referencing it (XFree86 #5473, Peter Valchev).</li>\n\n        <li>some cleanup of Imakefile ifdef's (Marc La\n        France).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_170\" id=\"xterm_170\">Patch #170 - 2002/10/13 -\n  XFree86 4.2.1</a></h1>\n\n  <ul>\n    <li>correct an off-by-one allocating data for sorted help\n    message.</li>\n\n    <li>modify configure script to check for Xpm library, on which\n    XFree86 Xaw library depends.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_169\" id=\"xterm_169\">Patch #169 - 2002/10/5 -\n  XFree86 4.2.1</a></h1>\n\n  <ul>\n    <li>modify wording of some options in help message to make them\n    use <code>-/+</code> consistently with respect to \"on/off\" or\n    \"off/on\".</li>\n\n    <li>sort options list which is displayed in help- and\n    syntax-messages at runtime to simplify maintenance.</li>\n\n    <li>remove support for Amoeba and Minix (Juliusz Chroboczek\n    noted it was removed from XFree86 server; there have been no\n    users since 1996).</li>\n\n    <li>add configure script option\n    <code>--disable-session-mgt</code> to control whether the\n    session management code should be compiled-in (request by H\n    Merijn Brand).</li>\n\n    <li>ifdef'd the session-management changes with\n    <code>OPT_SESSION_MGT</code>, to accommodate X11R5 which\n    predates the related definitions.</li>\n\n    <li>fix <code>decode_keyvalue()</code>, which did not properly\n    parse multiple settings as needed for the <code>ttyModes</code>\n    resource, since it did not skip over the parsed data.</li>\n\n    <li>fix an option-parsing conflict between <code>-class</code>\n    and <code>-cjk_width</code> (Nam SungHyun)</li>\n\n    <li>add a missing null in <code>XtVaSetValues()</code> call\n    used in <code>Cleanup()</code> (Nam SungHyun)</li>\n  </ul>\n\n  <h1><a name=\"xterm_168\" id=\"xterm_168\">Patch #168 - 2002/9/29 -\n  XFree86 4.2.1</a></h1>\n\n  <ul>\n    <li>improve data reported for control sequence that requests\n    window position by taking into account the window decorations,\n    e.g., border and title (patch by Jess Thrysoee\n    &lt;jess@thrysoee.dk&gt;).</li>\n\n    <li>add <code>-cjk_width</code> and corresponding resource\n    <code>cjkWidth</code> (patch by Jungshik Shin\n    &lt;jshin@mailaps.org&gt;).</li>\n\n    <li>add <code>-into</code> option, for embedding xterm in a\n    Tcl/Tk application (patch by George Peter Staplin\n    &lt;georgeps@xmission.com&gt;).</li>\n\n    <li>add simple session management (XSM) client capabilities to\n    xterm. So a session manager such as, e.g., xsm, should be able\n    to respawn or kill xterms without the help of an SM proxy (like\n    smproxy), which is a hack and almost always buggy (patch by\n    David Madore).</li>\n\n    <li>fix conflict between ifdef's for\n    <code>OPT_DEC_LOCATOR</code> and <code>OPT_READLINE</code> in\n    button.c (reported by Ilya Zakharevich).</li>\n\n    <li>fix for inconsistent use of <code>struct utmp</code> versus\n    <code>struct utmpx</code> introduced in <a href=\n    \"#xterm_167\">patch #167</a> (patches by Paul Gilmartin, Marc La\n    France).</li>\n\n    <li>modify logic for <code>metaSendsEscape</code> to allow it\n    to work in a setup where the Meta-key is not recognized as a\n    modifier by the key-translations logic (discussion of\n    eightBitInput with H.J.Lu). Note however that Vincent\n    Lef&egrave;vre reported this in January).</li>\n\n    <li>use null pointer values consistently, rather than literal\n    \"0\", for ending variable-length argument lists, e.g., for\n    <code>execlp()</code> (based on patch by Matthieu Herrb).</li>\n\n    <li>correct logic of <code>ChangeAnsiColorRequest()</code>,\n    which would do a screen repaint after replying to a request for\n    information.</li>\n\n    <li>improve scripts in vttests to work with systems whose\n    shells support <code>echo -n</code> and have, as does Debian,\n    an unrelated <code>print</code> utility.</li>\n\n    <li>add vttests/acolors.sh to demonstrate OSC 4, which queries\n    or sets ANSI colors.</li>\n\n    <li>fixes for ctlseqs.ms (Pavel Roskin, Ilya Zakharevich).</li>\n\n    <li>typos in xterm manpage (Jens Schweikhardt)</li>\n\n    <li>remove a redundant GCC_UNUSED from InitPopup() (Nam\n    SungHyun)</li>\n  </ul>\n\n  <h1><a name=\"xterm_167\" id=\"xterm_167\">Patch #167 - 2002/8/24 -\n  XFree86 4.2.0</a></h1>\n\n  <ul>\n    <li>correct ifdef's for <code>USE_TERMCAP</code> to match\n    cygwin configuration.</li>\n\n    <li>fix several places in ctlseqs.ms which had no boxes around\n    the literal text (report by Ilya Zakharevich).</li>\n\n    <li>extend mouse support for readline, ifdef'd with\n    OPT_READLINE (integrated patch from Ilya Zakharevich).</li>\n\n    <li>modify terminfo description to match default for\n    <code>modifyCursorKeys</code> resource.</li>\n\n    <li>add <code>modifyCursorKeys</code> resource to control how\n    the shift- and similar modifiers are used to make a cursor\n    escape sequence. The default makes a modified escape sequence\n    always start with CSI and puts the modifier as the second\n    parameter, to avoid confusing applications that would interpret\n    the first parameter as a repeat count. The original behavior\n    can be obtained by setting the resource to 0 (newsgroup\n    discussion with Stephen J Turnbull, Jeffrey Altman).</li>\n\n    <li>correct missing initializations for\n    <code>appdefaultCursor</code> and <code>appdefaultKeypad</code>\n    resources.</li>\n\n    <li>add configure option <code>--enable-luit</code> and ifdef'd\n    the luit-related code with OPT_LUIT_PROG.</li>\n\n    <li>modify xterm to invoke luit (integrated patch by Tomohiro\n    Kubota)</li>\n\n    <li>update wcwidth.c to match Markus Kuhn's 2002-05-18\n    version.</li>\n\n    <li>correct limit-checking in <code>ComputeSelect()</code> to\n    handle selections that extend off the visible area; rather than\n    modify the parameters to <code>TrackText()</code>, use\n    <code>ScrollSelection()</code> to update the highlighting\n    limits. (reported by Yegappan Lakshmanan and Nelson Beebe,\n    patch by Alexander V Lukyanov).</li>\n\n    <li>correct manpage description of <code>tiXtraScroll</code>\n    resource (reported by Tony Finch).</li>\n\n    <li>changes from OpenBSD:\n      <ul>\n        <li>Make xterm setgid utmp to be able to update utmp even\n        with root privileges revoked.</li>\n\n        <li>If not updating utmp, revoke group privileges totally\n        too.</li>\n      </ul>\n    </li>\n\n    <li>changes from NetBSD:\n      <ul>\n        <li>Check that the return value from ttyslot() is greater\n        than 0 before writing the utmp file. Fixes w's \"w: Stale\n        utmp entry: &lt;user&gt; &lt;tty&gt; &lt;pty&gt;\"\n        errors.</li>\n\n        <li>Use openpty() to deal with new pty naming scheme.</li>\n      </ul>\n    </li>\n\n    <li>add <code>print-redir</code> action and menu entry to allow\n    user to switch terminal in/out of printer controller mode. It\n    appears from the manual that a real vt220 would not switch back\n    to normal mode, so another mechanism is used (addresses Debian\n    #37517).</li>\n\n    <li>check if <code>printerCommand</code> resource string is\n    empty, use this to allow user to disable printer function.</li>\n\n    <li>trim trailing blanks from resource strings.</li>\n\n    <li>check return value from <code>ptsname()</code>, which may\n    return null for example if someone has changed the permissions\n    of /dev/pts to zero (Debian #121899).</li>\n\n    <li>modify OS/2 version to use <code>__UNIXOS2__</code>\n    definition rather than <code>__EMX__</code>, related cleanup\n    (patch by Holger Veit).</li>\n\n    <li>used modified indent 2.0 (patch <a href=\n    \"ftp://ftp.invisible-island.net/gnu-patches/\">20020428</a>) to\n    reformat most of the C source files, to simplify\n    maintenance.</li>\n\n    <li>fix a couple of places where there were leading tabs on\n    symbol-definition lines in Imakefile (Marc La France from\n    report by Tony Finch)</li>\n\n    <li>add imake variable (TraceXTerm) to allow building debug\n    version (Egbert Eich).</li>\n  </ul>\n\n  <h1><a name=\"xterm_166\" id=\"xterm_166\">Patch #166 - 2002/3/25 -\n  XFree86 4.2.0</a></h1>\n\n  <ul>\n    <li>correct a bug in selection: double clicking on a word which\n    was partly scrolled off the screen may select that text (report\n    by Vincent Lef&egrave;vre &lt;vincent@vinc17.org&gt;).</li>\n\n    <li>implement <code>veryBoldColors</code> resource to control\n    whether the corresponding video attribute such as\n    <code>bold</code> is displayed when using\n    <code>colorBDMode</code>, etc. (request by Josh Howard\n    &lt;jrh@vicor-nb.com&gt;).</li>\n\n    <li>define escape sequences for function keys F21-F35 (patch by\n    Stephen P Wall).</li>\n\n    <li>change the colors for the 256-color model, making them less\n    skewed toward black (patch by Stephen P Wall).</li>\n\n    <li>add <code>vt100Graphics</code> resource (see <a href=\n    \"#xterm_115\">patch #115</a>, based on discussion with Glenn\n    Maynard).</li>\n\n    <li>ifdef'd Xaw/Xaw3d/neXtaw includes separately to avoid\n    potential incompatibilities between these flavors of Athena\n    widgets.</li>\n\n    <li>add configure check for XFree86 4.x Xaw library, whose\n    geometry management is broken, to avoid trying to use it for\n    toolbar configuration.</li>\n\n    <li>updates to configure script from vile and lynx to allow\n    configure.in to be compiled with autoconf 2.5x</li>\n\n    <li>add a check for null pointer return by\n    <code>ptsname()</code> (newsgroup posting from Mike Silva\n    &lt;mikesilva@lucent.com&gt;).</li>\n\n    <li>fill in a few details needed to allow UTF-8 mode to switch\n    on/off after startup. This requires that <code>wideChars</code>\n    resource be set. (based on comments in 4 Aug 2001 by Alexey\n    Marinichev &lt;lyosha@lyosha.2y.net&gt;).</li>\n\n    <li>remove duplicate install rules that make directories, e.g.,\n    so installing manpage will not create app-defaults\n    directory.</li>\n\n    <li>add comment in in <code>do_osc()</code>, reserving cases 30\n    and 31 for for Konsole (request by Stephan Binner\n    &lt;Stephan.Binner@gmx.de&gt;).</li>\n\n    <li>fixes for ctlseqs.ms and xterm.man (patch by Werner Lemberg\n    &lt;wl@gnu.org&gt;).</li>\n\n    <li>add check for monochrome display, disabling colorMode in\n    that case (fixes Debian #134130).</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>Fix some xterm build warnings on *BSD (patch by David\n        Dawes).</li>\n\n        <li>Only use SA_RESTART in xterm when it's available (patch\n        by Frank Liu).</li>\n\n        <li>Fix incorrect code in signal handlers in most of the\n        clients, xterm and xdm not done yet (patch by Matthieu\n        Herrb).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_165\" id=\"xterm_165\">Patch #165 - 2002/1/5 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>modify <code>uxterm</code> script to strip encoding part\n    from environment variable before adding \".UTF-8\" (based on\n    Debian #125947, but using a more portable solution).</li>\n\n    <li>add an assignment statement in VTInitialize() to make\n    <code>awaitInput</code> resource work.</li>\n\n    <li>use new macros init_Bres(), etc., in VTInitialize() to add\n    trace of the initialization of resources.</li>\n\n    <li>modify checks for $LC_ALL, related environment variables to\n    ensure the resulting strings are nonempty (report by Markus\n    Kuhn).</li>\n\n    <li>add an ifdef in charproc.c for num_ptrs variable in case\n    all configure options are disabled.</li>\n\n    <li>modify definition of getXtermBackground() to avoid negative\n    array index warning on Tru64 (report by Jeremie Petit).</li>\n\n    <li>improve fix from patch #165 (still Debian #117184, report\n    by Matt Zimmerman &lt;mdz@debian.org&gt;)</li>\n\n    <li>correct install rule for uxterm in Makefile.in, to handle\n    the case where building in a different directory than xterm's\n    source (patch by Paul Gilmartin).</li>\n\n    <li>documented ANSI.SYS-style cursor save/restore escape\n    sequences in ctlseqs.ms, which are in xterm since X11R5.</li>\n\n    <li>correct two entries in the default charClass table, which\n    did not follow the manpage comment about the character number\n    corresponding to the class (patch by Marc Bevand\n    &lt;bevand_m@epita.fr&gt;).</li>\n\n    <li>fix a couple of typos in comments in the app-defaults files\n    (David Krause &lt;xfree86@davidkrause.com&gt;).</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>update language of copyrights in some files to reflect\n        the fact that they were reassigned from X Consortium to The\n        Open Group in 1998. Note that this xterm source is derived\n        from the 1996 version from X Consortium, does not\n        incorporate changes made by X Consortium or The Open Group\n        after that date, hence we do not add The Open Group's 1998\n        copyright date to related files.</li>\n\n        <li>save/restore <code>errno</code> in signal catcher\n        (patch by Matthieu Herrb).</li>\n\n        <li>modify UXTerm.ad's font5 resource so that xterm can\n        display double width characters using a font distributed\n        with XFree86 (Tomohiro Kubota).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_164\" id=\"xterm_164\">Patch #164 - 2001/11/13 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>correct a case where <code>ptyInitialErase</code> and\n    <code>backarrowKeyIsErase</code> resources combine to set\n    <code>DECBKM</code> mode, but a <code>reset</code> command\n    would not reset xterm to that state, making the erase character\n    revert to ^H (Debian #117184)</li>\n  </ul>\n\n  <h1><a name=\"xterm_163\" id=\"xterm_163\">Patch #163 - 2001/11/04 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>correct ifdef's for <code>__QNX__</code> and\n    <code>USE_SYSV_PGRP</code> in main.c call to\n    <code>tcsetpgrp</code>, which broke bash behavior around\n    <a href=\"#xterm_140\">patch #140</a> (report/patch by Frank Liu\n    &lt;fliu@mail.vipstage.com&gt;).</li>\n\n    <li>modify trace.c to fix missing definition of GCC_UNUSED for\n    compilers other than gcc when configured for trace code\n    (report/patch by Paul Gilmartin).</li>\n\n    <li>change format in TraceOptions() to use long rather than\n    int, since the latter could lose precision on 64-bit machines\n    (report/patch by Nelson Beebe).</li>\n\n    <li>modify xterm manual page and minstall.sh to allow imake\n    rules to define location of app-defaults directory (Debian\n    #87611).</li>\n\n    <li>review/update list of conflicting preprocessor symbols to\n    remove from $CPPFLAGS at the end of the configure script. In\n    particular, this allows one to configure xterm without the\n    utempter library on Redhat 7.1 (report/patch by Adam\n    Sulmicki).</li>\n  </ul>\n\n  <h1><a name=\"xterm_162\" id=\"xterm_162\">Patch #162 - 2001/10/23 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>correct logic that processes <code>-class</code> option, so\n    that a following <code>-e</code> option is handled (Debian\n    #116297).</li>\n\n    <li>improve options-decoding to allow <code>-version</code> and\n    <code>-help</code> options to be combined (Debian\n    #110226).</li>\n\n    <li>add a 10 millisecond delay in event loop when processing\n    <code>-hold</code> option, to avoid using too much CPU time\n    (Debian #116213).</li>\n\n    <li>prefix final program execution in <code>uxterm</code> with\n    \"exec\" to avoid a useless shell hanging around (Christian\n    Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_161\" id=\"xterm_161\">Patch #161 - 2001/10/10 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>modify logic that resets keypad application mode to avoid\n    doing this if there is no modifier associated with the Num_Lock\n    keysym (report by John E Davis &lt;davis@space.mit.edu&gt; and\n    Alan W Irwin &lt;irwin@beluga.phys.uvic.ca&gt;).</li>\n\n    <li>add built-in translation for Control/KP_Separator to\n    KP_Subtract, to accommodate users who wish to use xmodmap to\n    reassign the top row of the numeric keypad.</li>\n\n    <li>correct Imakefile install-rule for <code>uxname</code>\n    script (reported by Nam SungHyun &lt;namsh@lge.com&gt;).</li>\n\n    <li>resync with XFree86 CVS &ndash; correct typo in\n    <code>&lt;ncurses/term.h&gt;</code> ifdef.</li>\n  </ul>\n\n  <h1><a name=\"xterm_160\" id=\"xterm_160\">Patch #160 - 2001/10/7 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>modify logic in main.c (see <a href=\"#xterm_145\">patch\n    #145</a>) to avoid generating the same identifier, for example,\n    for /dev/tty1 and /dev/pts/1, which is used to denote an entry\n    in the utmp file (Debian bug report #84676), A similar fix was\n    also sent by Jerome Borsboom &lt;borsboom@westbrabant.net&gt;\n    in May, but I overlooked it when reviewing bug reports.</li>\n\n    <li>add configure check for <code>&lt;ncurses/term.h&gt;</code>\n    to get rid of hardcoded <code>__CYGWIN__</code> ifdef in\n    resize.c\n      <p>NOTE: The CYGWIN port should not be linking\n      <code>resize</code> with ncurses. It appears that the only\n      reason it is, is because both the ncurses and termcap ports\n      on that platform are badly misconfigured (essential pieces\n      have been removed, etc). Checking for\n      <code>&lt;ncurses/term.h&gt;</code> does not hurt anything,\n      since there are some correct installations that are set up\n      that way.</p>\n    </li>\n\n    <li>add a sample <code>uxterm</code> script, which uses the\n    <code>UXTerm</code> application defaults for UTF-8\n    environments.</li>\n\n    <li>undo change to xterm application defaults, since this\n    introduced an unnecessary incompatibility. The intended\n    functionality was already addressed by the <a href=\n    \"#xterm_141\">UXTerm</a> app-defaults file.</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>Modified xterm app default to use LFD fontnames instead\n        of old type (Michael Schroeder).</li>\n\n        <li>Fix xterm when XIM is disabled - caused a segfault\n        (Tomohiro Kubota).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_159\" id=\"xterm_159\">Patch #159 - 2001/9/19 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>remove an ifdef for <code>USE_HANDSHAKE</code> added in\n    patch #158 from the second <code>TIOCSSIZE</code> ioctl call in\n    the initialization code. Paul Gilmartin reports that for\n    Solaris 2.6 (sparc), stty does not show that xterm sets rows\n    and columns unless the second ioctl is executed.</li>\n\n    <li>correct treatment of empty parameter list for some OSC\n    strings (report by Sami Farin &lt;sfarin@ratol.fi&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_158\" id=\"xterm_158\">Patch #158 - 2001/9/8 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>augment key translations for scrollbar widget to ensure\n    that keystrokes intended for the text area are not lost if the\n    mouse pointer happens to fall on the scrollbar. This can\n    happen, for instance, if the user's <code>app-defaults</code>\n    or <code>.Xdefaults</code> file contains a translations\n    resource, though it may also happen through unrelated resource\n    settings: probably a bug in libXt (reported by Paul Fox\n    &lt;pgf@foxharp.boston.ma.us&gt; and Dmitry Yu. Bolkhovityanov\n    &lt;D.Yu.Bolkhovityanov@inp.nsk.su&gt;).</li>\n\n    <li>widen ifdef's in xterm.h to define\n    <code>__EXTENSIONS__</code> on Solaris, for compilers other\n    than gcc. This was added along <code>_POSIX_C_SOURCE</code>\n    with in <a href=\"#xterm_151\">patch #151</a>, but is not\n    sufficient since Sun's compiler does not define\n    <code>__STDC__</code> by default (report by Matthias Scheler\n    &lt;tron@zhadum.de&gt;).</li>\n\n    <li>modify xterm to obtain the closest matching color if an\n    exact color is not available, e.g., on 8-bit displays (patch by\n    Stephen P Wall)</li>\n\n    <li>implement \"OverTheSpot\" preedit type of XIM input (patch by\n    Tomohiro Kubota):\n      <ul>\n        <li>This preedit type is a reasonable compromise between\n        simpleness of implementation and usefulness. \"Root\" preedit\n        type is easy to implement but not useful; \"OnTheSpot\"\n        preedit type is the best in the point of view of user\n        interface but very complex. And more, \"OverTheSpot\" is the\n        preedit type which the most XIM servers support. Thus, to\n        achieve reasonable usability, support of \"OverTheSpot\"\n        preedit type is needed.</li>\n\n        <li>In \"OverTheSpot\" preedit type, the preedit\n        (preconversion) string is displayed at the position of the\n        cursor. On the other hand, it is XIM server's\n        responsibility to display the preedit string. Thus, it is\n        needed for XIM client (here XTerm) to inform the XIM server\n        of the cursor position. And more, to achieve good visual\n        proportion, preedit string must be written using proper\n        font. Thus, it is XIM client's responsibility to inform the\n        XIM server of the proper font. The font must be supplied by\n        \"fontset\". Fontset is a set of fonts with charsets which\n        are specified by the current locale. Since XTerm uses\n        ISO10646 fonts regardless of the current locale, the fonts\n        for XIM must be prepared separately. It is difficult to\n        prepare fonts which are similar to XTerm font. Thus, my\n        patch uses a simple way - the default font is \"*\" which\n        matches every fonts and X library will automatically choose\n        fonts with proper charsets. I added \"-fx\" command option\n        and \"ximFont\" resource to override this default font\n        setting.</li>\n\n        <li>changed the definition of \"OverTheSpot\" preedit type\n        from XIMPreeditPosition|XIMStatusArea to\n        XIMPreeditPosition|XIMStatusNothing. This matches the\n        behavior of other programs such as Rxvt, Kterm, Gedit.</li>\n\n        <li>A tiny XIM bugfix is also included. By calling\n        XSetLocaleModifiers() with parameter of \"\", it can consider\n        XMODIFIERS environmental variable which is a standard way\n        for users to specify XIM server to be used.</li>\n      </ul>\n    </li>\n\n    <li>adjust configure script to accommodate repackaging of\n    keysym2ucs.c as include-file for xutf8.c (patch by Tomohiro\n    Kubota).</li>\n\n    <li>add the <code>UXTerm</code> app-defaults file to makefile\n    install rules (request by Juliusz Chroboczek).</li>\n\n    <li>correct logic in <code>get_termcap()</code>, which returned\n    false if the <code>tgetent()</code> call indicated that xterm\n    was linked with terminfo. Although the <code>$TERMCAP</code>\n    variable cannot be adjusted in this case, xterm still needs\n    information from this call to extract data to initialize the\n    erase-mode when the <code>ptyInitialErase</code> resource is\n    false.</li>\n\n    <li>modify <code>ScrollbarReverseVideo()</code> function to\n    cache the original border color, so it can restore that when an\n    application flashes the screen (Bugzilla #38872).</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>remove ifdef's for X_NOT_STDC_ENV (patch by David\n        Dawes).</li>\n\n        <li>add Cygwin to special errno handling case in ptydata.c\n        (Alan Hourihane)</li>\n\n        <li>set screen size earlier in initialization, to address a\n        race with window manager resizing its clients (Keith\n        Packard).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_157\" id=\"xterm_157\">Patch #157 - 2001/6/18 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>clean up button.c and input.c (patch by Juliusz\n    Chroboczek). The basic idea is to use a single set of APIs in\n    the XTerm core, and put a set of workarounds in a separate\n    file. As you will notice, this drastically simplifies parts of\n    the code; in particular, the only remaining ifdefs related to\n    the differences between Xutf8 and legacy systems are related to\n    the selection provider logic. This defines two new files,\n    xutf8.h and xutf8.c, provide some half-hearted but fully\n    portable emulation for the three Xutf8* functions that XTerm\n    uses. Putting these in a separate file will allow people to\n    experiment with more complex versions without making the core\n    of XTerm more difficult to maintain. The functionality of the\n    emulation is as follows.\n      <ul>\n        <li>Xutf8TextListToTextProperty fully handles XStringstyle\n        and XUTF8StringStyle. It will only generate STRING for\n        XStdICCTextStyle, and will only generate Latin-1 in\n        XCompoundTextStyle (but label it as COMPOUND_TEXT, as the\n        spec requires). (I have hesitated to make this function\n        fail for XStdICCTextStyle and XCompoundTextStyle; this\n        might be a smart thing to do, in the hope that the\n        selection requestor will try UTF8_STRING afterwards;\n        opinions?)</li>\n\n        <li>Xutf8TextPropertyToTextList fully handles STRING and\n        UTF8_STRING. It systematically fails for\n        COMPOUND_TEXT.</li>\n\n        <li>Xutf8LookupString will properly handle single-keystroke\n        input for the keysyms covered by Markus' keysym2ucs\n        function. It will not handle either compose key input or\n        external input methods.</li>\n      </ul>\n    </li>\n\n    <li>add an ifdef for <code>SunXK_F36</code>, used in\n    <code>xtermcapKeycode()</code> (patch by Mark Waggoner\n    &lt;waggoner@ichips.intel.com&gt;).</li>\n\n    <li>modify check for login name to try <code>getlogin()</code>\n    and $LOGNAME, $USER environment variables to detect if the user\n    has logged in under an alias, i.e., an account with the same\n    user id but a different name (Debian bug report #70084).</li>\n\n    <li>add resource <code>tiXtraScroll</code>, which can be used\n    to preserve the screen contents in the scrollback rather than\n    erasing it when starting a fullscreen application such as\n    <code>vi</code> (patch by Ken Martin\n    &lt;fletcher@catsreach.org&gt;).</li>\n\n    <li>two patches by Denis Zaitsev &lt;zzz@cd-club.ru&gt;:\n      <ul>\n        <li>added <code>forceBoxChars</code> resource to control\n        the \"line-drawing characters\" option.</li>\n\n        <li>added <code>freeBoldBox</code> resource, which, when\n        set true, suppresses check in\n        <code>same_font_size()</code>, so xterm does not attempt to\n        ensure that the bold font is the same size as the normal\n        font.</li>\n      </ul>\n    </li>\n\n    <li>change the color class for ANSI colors and similar ones\n    such as bold-color, etc., to follow the convention that the\n    classname is the instance name with a leading capital (e.g.,\n    <code>color0</code> and <code>Color0</code> rather than\n    <code>color0</code> and <code>Foreground</code>). There was\n    little use for Foreground as a class other than to create\n    occasional confusion and bug reports, most recently by Nelson\n    Beebe who reports that it disables colors in xterm but not on\n    Linux, which is probably due to a difference in resource\n    evaluation order. A configure script option\n    (--disable-color-class) is provided for anyone who did use the\n    older behavior.</li>\n\n    <li>fix a signal-handling bug. When running xterm with\n    <code>ksh</code> or similar shell such as bash 2.05, xterm will\n    hang and not respond to keystrokes after the user types\n    <code>suspend</code>. Additionally the popup menus do not\n    respond, so it is not possible to send SIGCONT to the shell.\n    What is happening is that the shell is sending itself SIGSTOP,\n    and it is being stopped. Per specification it also means that\n    the operating system is sending SIGCHLD to parent to the bash\n    (XTERM). Now the issue is that xterm assumes it cannot happen\n    and it expects to receive SIGCHLD only upon\n    <em>termination</em> of its children. This causes a deadlock\n    with xterm waiting for the child to die, and the child waiting\n    for SIGCONT. (report/patch by Adam Sulmicki), analysis/testing\n    by Sven Mascheck\n    &lt;sven.mascheck@student.uni-ulm.de&gt;).</li>\n\n    <li>correct some inconsistent checks for\n    <code>XtReleaseGC()</code> calls in\n    <code>xtermLoadFont()</code> (patch by Nam SungHyun\n    &lt;namsh@lge.com&gt;).</li>\n\n    <li>updated wcwidth.c and keysym2ucs.c to versions dated\n    2001/1/12 and 2001/4/18, respectively from\n    http://www.cl.cam.ac.uk/~mgk25/ucs/</li>\n\n    <li>correction to change from <a href=\"#xterm_90\">patch\n    #90</a>, which was intended to reset the saved cursor position\n    for normal/alternate screens on a soft reset, but actually\n    wiped out all of the saved cursor information. Just reset the\n    saved position for the current screen (report by Michael\n    Schroeder).</li>\n\n    <li>modify ShowCursor() and HideCursor() so that if the cursor\n    points to the second part of a wide character, make the\n    show/hide operate on the first position of the wide character\n    (patch by Sven Verdoolaege).</li>\n\n    <li>scrolling in the alternate screen just before switching\n    back to the main screen can cause extra blank lines to be\n    inserted into the scrollback buffer (patch by Paul Vojta\n    &lt;vojta@math.berkeley.edu&gt;).</li>\n\n    <li>resync with XFree86 4.1.0:\n      <ul>\n        <li>Use TermcapLibrary as -lncurses instead of -ltermcap,\n        fixes problem building xterm/resize on Cygwin/XFree86\n        (Harold Hunt).</li>\n\n        <li>Install xterm.termcap and xterm.terminfo when\n        installing xterm (Torrey T. Lyons).</li>\n\n        <li>Fix some build issues on Cygwin/XFree86 (Suhaib\n        Siddiqi).</li>\n\n        <li>Define CBAUD, when it's missing in xterm, on LynxOS\n        (Stuart Lissaman).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_156\" id=\"xterm_156\">Patch #156 - 2001/4/28 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>change order of selection-target types to make 8-bit xterm\n    prefer UTF8_STRING to COMPOUND_TEXT (patch by Juliusz\n    Chroboczek).</li>\n\n    <li>document <code>-fa</code>, <code>-fs</code> command-line\n    options and <code>faceName</code>, <code>faceSize</code>\n    resources which are used by the freetype library support.</li>\n\n    <li>if configure script finds freetype libraries, but imake\n    definitions do not have the XRENDERFONT definition, define it\n    anyway.</li>\n\n    <li>modify configure script check for freetype libraries to\n    include <code>&lt;Xlib.h&gt;</code>, since an older version of\n    the related headers relies on this (patch by Adam\n    Sulmicki).</li>\n  </ul>\n\n  <h1><a name=\"xterm_155\" id=\"xterm_155\">Patch #155 - 2001/4/20 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>correct return type of in_put() from <a href=\n    \"#xterm_155\">patch #153</a> changes, which left it not wide\n    enough for UTF-8 (patch by Bruno Haible).</li>\n  </ul>\n\n  <h1><a name=\"xterm_154\" id=\"xterm_154\">Patch #154 - 2001/4/11 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>undo check for return value from <code>pututline</code>\n    (used for debugging) since that function does not return a\n    value on Slackware 3.6.</li>\n\n    <li>correct length in ScreenWrite, when rendering invisible\n    text (patch by Sven Verdoolaege &lt;skimo@kotnet.org&gt;).</li>\n\n    <li>fixes/improvements for the <code>i18nSelection</code>\n    resource from patch #153, by Bruno Haible:\n      <ul>\n        <li>add missing initialization for\n        <code>i18nSelection</code> resource.</li>\n\n        <li>split-out the non-ICCM aspect of the\n        <code>i18nSelection</code> resource as a new resource,\n        <code>brokenSelections</code>.</li>\n      </ul>\n    </li>\n\n    <li>add configure check for <code>&lt;time.h&gt;</code> and\n    <code>&lt;sys/time.h&gt;</code>, to allow for Unixware&nbsp;7,\n    which requires both. If the configure script is not used, only\n    <code>&lt;time.h&gt;</code> will be included as before (report\n    by Thanh Ma).</li>\n\n    <li>fix redefinition of <code>dup2</code>,\n    <code>getutent</code>, <code>getutid</code>,\n    <code>getutline</code> and <code>sleep</code> functions on\n    Unixware&nbsp;7 (report by Thanh Ma\n    &lt;Thanh.Ma@casi-rusco.com&gt;)</li>\n\n    <li>add a fall-back definition for <code>__hpux</code>, which\n    is apparently not defined in some compilers on HPUX 11.0\n    (reported by Clint Olsen).</li>\n\n    <li>change VAL_INITIAL_ERASE, which is used as a fallback for\n    the <code>\"kb\"</code> termcap string to 8, since that matches\n    the xterm terminal description (request by Alexander V\n    Lukyanov).</li>\n\n    <li>correct an off-by-one in <code>ClearInLine</code>, which\n    caused the erase-characters (ECH) control to display\n    incorrectly (patch by Alexander V Lukyanov).</li>\n\n    <li>correct escape sequences shown in terminfo for shifted\n    editing keys. The modifier code was for the control key rather\n    than the shift key.</li>\n  </ul>\n\n  <h1><a name=\"xterm_153\" id=\"xterm_153\">Patch #153 - 2001/3/29 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>increase PTYCHARLEN to 8 for os390, add some debugging\n    traces for UTMP functions (patch by Paul Gilmartin).</li>\n\n    <li>correct an misplaced brace in\n    <code>SelectionReceived()</code> (patch by Bruno Haible).</li>\n\n    <li>correct an assignment dropped in\n    <code>SelectionReceived()</code> which made it not compile for\n    wide-characters combined with debug traces.</li>\n\n    <li>correct typo, clarify description of 88- and 256-color\n    controls (report by Bram Moolenaar).</li>\n\n    <li>correct a typo in ctlseqs.ms which caused DEC Locator\n    control sequences using single quote \"'\" display grave \"`\"\n    instead (reported by Paul Williams, apparently in patch\n    #114).</li>\n  </ul>\n\n  <h1><a name=\"xterm_152\" id=\"xterm_152\">Patch #152 - 2001/3/13 -\n  XFree86 4.0.2</a></h1>\n\n  <ul>\n    <li>correct index in inner loop in <code>VTInitI18N()</code>\n    from patch #151 changes, which resulted in infinite loop under\n    some conditions (report/analysis by Paul Gilmartin).</li>\n\n    <li>remove spurious \"%|\" from terminfo sgr capabilities\n    (report/analysis by Adam M Costello, Debian #89222).</li>\n\n    <li>add shell script to adjust list of dynamic libraries linked\n    by <code>resize</code> when building with the standalone\n    configure script. Otherwise it uses the same list as for xterm,\n    which is excessive.</li>\n\n    <li>fix a few compiler warnings reported by the 20010305 gcc\n    snapshot.</li>\n  </ul>\n\n  <h1><a name=\"xterm_151\" id=\"xterm_151\">Patch #151 - 2001/3/10 -\n  XFree86 4.0.2</a></h1>\n\n  <ul>\n    <li>alter the behaviour of selections in XTerm (patch by\n    Juliusz Chroboczek). It is believed to follow the ICCCM +\n    UTF8_STRING to the letter, both in UTF-8 and in eight-bit mode.\n    From his description:\n      <ul>\n        <li>When compiled against XFree86 4.0.2, the patched XTerm\n        will make the selection available as COMPOUND_TEXT, STRING\n        or UTF8_STRING in both modes. It will request selections in\n        the following order:\n          <p>UTF-8 mode: UTF8_STRING, TEXT, COMPOUND_TEXT,\n          STRING.<br>\n          eight-bit mode: TEXT, COMPOUND_TEXT, UTF8_STRING,\n          STRING.</p>\n        </li>\n\n        <li>When compiled against an earlier version of XFree86 (or\n        compiled with OPT_UTF8_API=0), it will still obey the\n        ICCCM, but will neither request nor provide UTF8_STRING in\n        eight-bit mode, and neither TEXT nor COMPOUND_TEXT in UTF-8\n        mode.</li>\n\n        <li>For compatibility with previous versions of XTerm, a\n        resource <code>i18nSelections</code> is provided, please\n        see the manpage for details. However, due to an unexpected\n        combination of ICCCM extensions by various bits and pieces\n        of the libraries, interacting with previous versions of\n        XTerm will work in many locales even without this flag.\n        (Please do not set this resource to true by default, as\n        this would violate the ICCCM.)</li>\n      </ul>\n    </li>\n\n    <li>improved error checking/reporting in VTInitI18N(), ensuring\n    that lack of input method styles is treated distinctly from a\n    mismatch.</li>\n\n    <li>remove an incorrect ifdef from patch #141 which suppressed\n    overstriking to simulate bold font when xterm was compiled to\n    support wide characters (report/analysis by Adam M Costello\n    &lt;amc@cs.berkeley.edu&gt;, Debian #76404, Debian\n    #77575).</li>\n\n    <li>modify <code>RequestResize()</code> function to\n    save/restore window manager hints. Its call to\n    <code>XtMakeResizeRequest()</code> had the undesirable\n    side-effect of clearing window manager hints, e.g., when\n    switching to 132-columns via DECCOLM escape sequence. Window\n    manager hints make it simple to resize xterm in terms of\n    character cells rather than pixels (reports by Christian\n    Weisgerber, Debian #79939).\n      <p>This applies to the normal configuration. When built with\n      toolbar support, the hints are applied to a different widget\n      level (more work will be needed to make hints work with the\n      toolbar).</p>\n    </li>\n\n    <li>fix a redefinition warning for resize.c on OpenBSD (patch\n    by Christian Weisgerber).</li>\n\n    <li>change resource corresponding to <code>-T</code> option to\n    match Xt library's <code>-title</code>, i.e.,\n    <code>.title</code> rather than <code>*title</code> so the\n    command-line options are interchangeable as documented (Debian\n    bug report #68843).</li>\n\n    <li>add script used from autoconf'd makefile for installing\n    manpages, since recent XFree86 changing the way section numbers\n    are represented makes the install dependent on extra\n    scripts.</li>\n\n    <li>add configure check for freetype libraries and configure\n    option --disable-freetype to override this feature.</li>\n\n    <li>modify some configure script macros to avoid using\n    changequote(), which has been rendered useless in the latest\n    autoconf alpha 2.49c</li>\n\n    <li>update config.guess, config.sub to 2001-2-13</li>\n\n    <li>remove redundant/contradictory __CYGWIN__ definitions from\n    resize.c</li>\n\n    <li>correct manpage typo introduced by X11R6.5 resync.</li>\n  </ul>\n\n  <p>Changes from XFree86 4.0.2:</p>\n\n  <ul>\n    <li>add definition of <code>_POSIX_C_SOURCE</code> for Solaris\n    to make this compile with <code>gcc -ansi -pedantic</code>\n    (report by &lt;mark@zang.com&gt;.</li>\n  </ul>\n\n  <h1><a name=\"xterm_150\" id=\"xterm_150\">Patch #150 - 2000/12/29 -\n  XFree86 4.0.2</a></h1>\n\n  <ul>\n    <li>move the binding for shifted keypad plus/minus, which\n    invokes the <code>larger-vt-font()</code> and\n    <code>smaller-vt-font()</code> actions, respectively, into the\n    translations resource (suggested by Marius Gedminas\n    &lt;mgedmin@puni.osf.lt&gt;).</li>\n\n    <li>modify configure script to support the\n    <code>--program-prefix</code>, <code>--program-suffix</code>\n    and <code>--program-transform-name</code> options (request by\n    Alison Winters &lt;alison@mirrabooka.com&gt;).</li>\n\n    <li>fixes for wide/combining characters (Robert Brady):\n      <ul>\n        <li>fix a scrolling / combining characters display\n        anomaly</li>\n\n        <li>fix a problem with double-width characters where if the\n        primary font had no box-drawing characters, the right hand\n        half of double-width characters was erased (reported by Yao\n        Zhang &lt;yzhang@sharemedia.com&gt;).</li>\n\n        <li>fix special case of null byte for key handling in UTF-8\n        locales.</li>\n      </ul>\n    </li>\n\n    <li>modify logic that compares sizes of normal and bold fonts\n    to be more forgiving of the font server's choice of bold font\n    which must match the normal font's size. Now\n    <code>same_font_size()</code> compares the height of the fonts\n    rather than individually ascent and descent, and allows the\n    bold font to be one pixel smaller than the normal font\n    (addresses a report by Alan Citterman &lt;alan@mticket.com&gt;,\n    who says that something in patches #146 to #148 made xterm more\n    likely to overstrike bold fonts, and indirectly Debian bug\n    report #76404, which reports the opposite).</li>\n\n    <li>make configure script use $CFLAGS and $CPPFLAGS\n    consistently, including removing a chunk from configure.in\n    which attempted to save/restore $CPPFLAGS while processing\n    value set by the --x-includes option, but lost values set in an\n    intervening AC_CHECK_HEADERS. This change modifies macros\n    CF_ADD_CFLAGS, CF_ANSI_CC_CHECK and CF_X_TOOLKIT, as well as\n    removing variables IMAKE_CFLAGS and X_CFLAGS from the generated\n    makefile (the AC_CHECK_HEADERS problem was reported by Albert\n    Chin-A-Young &lt;china@thewrittenword.com&lt;).</li>\n\n    <li>correct a comparison in SELECTWORD case of ComputeSelect(),\n    which resulted in a word-selection wrapping past the first\n    column without checking the first column's character class\n    (reported by Christian Lacunza\n    &lt;celacunza@netscape.net&gt;</li>\n\n    <li>correct a logic in UTF-8 mode for selecting double-width\n    characters; a combining character was omitted (patch by Markus\n    Kuhn).</li>\n\n    <li>add feature to pop (raise) window when a bell is received\n    (patch by Gael Roualland\n    &lt;gael.roualland@dial.oleane.com&gt;).</li>\n\n    <li>add __NetBSD__ and __OpenBSD__ to special-case in\n    xterm_io.h for USE_POSIX_TERMIOS definition (patch by Christian\n    Weisgerber).</li>\n\n    <li>move special-case HPUX include for &lt;sys/bsdtty.h&gt; to\n    xterm_io.h to define TIOCSLTC, making HAS_LTCHARS defined for\n    HPUX 10.20 (report by Bruno Betro).</li>\n  </ul>\n\n  <h1><a name=\"xterm_149\" id=\"xterm_149\">Patch #149 - 2000/12/6 -\n  XFree86 4.0.1h</a></h1>\n\n  <ul>\n    <li>restructured includes for <code>termios.h</code>,\n    <code>termio.h</code> and related definitions for main.c,\n    os2main.c, screen.c and resize.c so they will share equivalent\n    definitions in a new header <code>xterm_io.h</code>. This is\n    intended to solve some problems mainly for HPUX which appear to\n    arise from inconsistent definitions for SIGWINCH- and\n    HAS_LTCHARS-related symbols (reports by Bruno Betro, Jeremie\n    Petit and Clint Olsen).</li>\n\n    <li>improve usability of double-width fonts by allowing normal\n    fonts to be given as double-width (from a patch by Fabrice\n    Bellard &lt;bellard@email.enst.fr&gt;).</li>\n\n    <li>correct a few compiler warnings in TRACE() macros for\n    signed/unsigned variable differences (reported by Clint\n    Olsen).</li>\n\n    <li>make configure script use $CFLAGS and $CPPFLAGS more\n    consistently, i.e., by using CF_ADD_CFLAGS in CF_ANSI_CC\n    macro.</li>\n\n    <li>expanded description of environment variables in\n    manual-page.</li>\n\n    <li>modify OPT_TCAP_QUERY feature to always return the termcap\n    or terminfo capability string in the response, and to\n    read/write the names in hexadecimal form to allow for the\n    special case of termcap's <code>k;</code> name (patch by Bram\n    Moolenaar).</li>\n\n    <li>add OPT_SAME_NAME and OPT_TCAP_QUERY to xtermcfg.hin, so\n    the corresponding configure options work (patch by Bram\n    Moolenaar).</li>\n\n    <li>resync with XFree86 4.0.1g:\n      <ul>\n        <li>Rewrite Xft library for Render extension/core text and\n        font management Change xterm to use new interface (Keith\n        Packard).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_148\" id=\"xterm_148\">Patch #148 - 2000/10/31 -\n  XFree86 4.0.1d</a></h1>\n\n  <ul>\n    <li>document logfile options in man-page.</li>\n\n    <li>correct spelling of <code>-samename</code> option in help\n    message.</li>\n\n    <li>add configure script option\n    <code>--enable-tcap-query</code> (request by Bram\n    Moolenaar).</li>\n\n    <li>add a \"Co\" or \"colors\" entry to the OPT_TCAP_QUERY feature\n    (patch by Bram Moolenaar).</li>\n\n    <li>patch by Kiyokazu Suto &lt;suto@ks-and-ks.ne.jp&gt;:\n      <ul>\n        <li>add support for bold font for double width characters.\n        The font name may be specified with the command line option\n        <code>-fwb</code> or with resource\n        <code>wideBoldFont</code> (class\n        <code>WideBoldFont</code>).</li>\n\n        <li>correct underlining of double width character string,\n        which was drawn only half width.</li>\n\n        <li>correct binary search of precomposed character table,\n        which may return wrong result when <code>int</code> is just\n        32 bits.</li>\n      </ul>\n    </li>\n\n    <li>some changes to align terminfo with ncurses 5.2:\n      <ul>\n        <li>remove xtermm description, retaining xterm-mono since\n        the former conflicts with ncurses.</li>\n\n        <li>modify initialization and reset strings to avoid\n        putting the save/restore cursor operations bracketing\n        changes to video attributes, since the changes could be\n        lost when the cursor is restored. This affects xterm-r6 and\n        xterm-8bit (the xterm-xfree86 entry uses the soft-reset\n        feature which resets scrolling margins and origin mode\n        without requiring us to save/restore the cursor\n        position).</li>\n\n        <li>make a few entries explicitly inherit from\n        xterm-xfree86 rather than xterm: xterm-rep, xterm-xmc,\n        xterm-nrc</li>\n      </ul>\n    </li>\n\n    <li>ensure that sign-extension does not affect\n    <code>ctype</code> macros by using <code>CharOf()</code> macro\n    to coerce the parameter to an unsigned char.</li>\n\n    <li>resync with XFree86 4.0.1d:\n      <ul>\n        <li>Add primitive support in xterm for Xft based fonts\n        (Keith Packard). The changes are ifdef'd with\n        <code>-DXRENDERFONT</code>.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_147\" id=\"xterm_147\">Patch #147 - 2000/10/26 -\n  XFree86 4.0.1c</a></h1>\n\n  <ul>\n    <li>correct implementation of <code>ptyInitialErase</code>: the\n    value assigned to <code>initial_erase</code> was for the\n    control terminal, which is correct as far as it goes. But there\n    was no following test for the pseudo-terminal's erase value,\n    which would overwrite the default obtained from the control\n    terminal (reported by Christian Weisgerber\n    &lt;naddy@mips.inka.de&gt;).</li>\n\n    <li>modify check for printable-characters in OSC string to use\n    xterm's ansi_table rather than isprint() macro, to isolate this\n    check from locale settings. This fixes a problem using 8-bit\n    characters to set the title (reported by Ricardas Cepas\n    &lt;rch@richard.eu.org&gt;).</li>\n\n    <li>modify sample scripts to check for printf before print,\n    since the latter is not as well standardized (e.g., on\n    Linux).</li>\n\n    <li>updated config.sub, config.guess to reflect changes on\n    subversions.gnu.org</li>\n  </ul>\n\n  <h1><a name=\"xterm_146\" id=\"xterm_146\">Patch #146 - 2000/9/12 -\n  XFree86 4.0.1c</a></h1>\n\n  <ul>\n    <li>correct two instances overlooked from patch #141 which\n    assumed UTF-8 mode without checking, causing a core dump in\n    non-UTF-8 mode (one instance was reported by Tommi Virtanen\n    &lt;tv@debian.org&gt;).</li>\n\n    <li>correct a problem selecting from the scrollback buffer in\n    UTF-8 mode by changing remaining getXtermCell() calls to\n    XTERM_CELL() as in the non-UTF-8 cases (report by Markus Kuhn,\n    patch by Robert Brady).</li>\n  </ul>\n\n  <h1><a name=\"xterm_145\" id=\"xterm_145\">Patch #145 - 2000/9/11 -\n  XFree86 4.0.1c</a></h1>\n\n  <ul>\n    <li>changes for UTF-8 configuration (Robert Brady):\n      <ul>\n        <li>doublewide characters don't lose their accents when the\n        cursor moves onto or from them (a visual bug)</li>\n\n        <li>fix logic in addXtermCombining, which mean that if the\n        low byte of a cell's first combining char was 0, a\n        following combining char would go into combining slot 1,\n        not 2.</li>\n\n        <li>modify logic for cut-buffers so UTF-8 data is first\n        converted to Latin1.</li>\n\n        <li>collapse surrogates, 0xfffe, 0xffff to UCS_REPL.</li>\n\n        <li>modify to allow xterm to to show combining characters\n        attached to doublewidth characters.</li>\n\n        <li>correct bug in linewrap with -u8 option (reported by\n        Andreas Koenig &lt;andreas.koenig@anima.de&gt;).</li>\n      </ul>\n    </li>\n\n    <li>several changes to PTY logic (based on request by Tim Ryan\n    &lt;timryan@nortelnetworks.com&gt;).\n      <ul>\n        <li>modify treatment of <code>-S</code> option to to make\n        it work with Unix98 PTY's.</li>\n\n        <li>restore sense of IsPts flag in <code>get_pty()</code>,\n        which was lost in Unix98 changes.</li>\n\n        <li>use new functions <code>my_pty_id()</code> and\n        <code>my_pty_name()</code> to simplify/fix strings used for\n        utmp, wtmp identifiers.</li>\n\n        <li>simplify <code>get_pty()</code> function, making it\n        have a single return point so its inputs/outputs can be\n        identified.</li>\n      </ul>\n    </li>\n\n    <li>update config.guess and config.sub and scripts to my\n    20000819 patch, adding cases for OS/2 EMX.</li>\n\n    <li>add special case for os390 compiler options to configure\n    script (patch by Paul Gilmartin)</li>\n\n    <li>fix some unused-variable compiler warnings (reported by\n    Zdenek Sekera).</li>\n\n    <li>split-out some string functions into xstrings.c, to use\n    them more consistently among main.c, os2main.c and\n    resize.c</li>\n\n    <li>align termcap/terminfo files, adding entries to make them\n    match. The termcap entries are necessarily less complete than\n    the terminfo, to fit within 1023 character per entry.</li>\n\n    <li>add terminfo entry for xterm-sco (SCO function keys).</li>\n\n    <li>modify <code>same_font_name()</code> to properly handle\n    wildcard introduced in <code>bold_font_name()</code>, making\n    comparison for different fonts succeed when only the normal\n    font is specified. This is needed to decide if 1-pixel offset\n    should be used. (reported in a newsgroup by Bart Oldeman\n    &lt;enbeo@enbeo.resnet.bris.ac.uk&gt;)</li>\n\n    <li>correct preprocessor line for OPT_WIDE_CHARS in\n    drawXtermText() from patch #141 which resulted in overstriking\n    for bold fonts not working.</li>\n\n    <li>correct Imakefile from 4.0.1c resync so UTF-8 modules are\n    in UTF8SRC, UTF8OBJ lists, allowing build without UTF-8\n    support.</li>\n  </ul>\n\n  <h1><a name=\"xterm_144\" id=\"xterm_144\">Patch #144 - 2000/8/23 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>remove a spurious assignment in ScreenWrite() from Robert\n    Brady's patch which set a null at the \"end\" of the buffer to be\n    written. That made the autowrap feature write a blank in the\n    first column for the non-UTF-8 configuration, rather than the\n    actual character (reported by Alan Citterman\n    &lt;alan@mticket.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_143\" id=\"xterm_143\">Patch #143 - 2000/8/19 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>add a check to ensure that <code>-class</code> command-line\n    option is not confused with <code>-c</code> (reported by Paul\n    Townsend &lt;aab@aab.cc.purdue.edu&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_142\" id=\"xterm_142\">Patch #142 - 2000/8/18 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>correction to precompose scripts, so 0061 + 0300 will now\n    be really be displayed as 00C0 (patch by Robert Brady\n    &lt;robert@susu.org.uk&gt;).</li>\n\n    <li>correct macro ClassSelects() in button.c, used to hide\n    ifdef's for OPT_WIDE_CHARS in patch #141 (reported by Andreas\n    Paul &lt;paula@informatik.tu-muenchen.de&gt;).</li>\n\n    <li>change wcwidth.h to include stddef.h rather than wchar.h,\n    which is not present on OpenBSD and FreeBSD (reported by\n    Christian Weisgerber and Bram Moolenaar).</li>\n\n    <li>newer config.sub and config.guess, from lynx\n    2.8.4dev.7</li>\n  </ul>\n\n  <h1><a name=\"xterm_141\" id=\"xterm_141\">Patch #141 - 2000/8/14 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>changes for doublewidth and combining characters, from\n    http://www.ecs.soton.ac.uk/~rwb197/xterm/ (integrated patch by\n    Robert Brady). In this context, doublewidth refers to 16-bit\n    character sets which may have glyphs occupying two cells.</li>\n\n    <li>add command-line option <code>-class</code>, which allows\n    one to override xterm's resource class. Also add resource file\n    <code>UXTerm.ad</code>, which simplifies using xterm for both\n    8-bit character sets and UTF-8.</li>\n\n    <li>fixes/improvements to OPT_TCAP_QUERY logic (patches by Bram\n    Moolenaar, Stephen P Wall).</li>\n  </ul>\n\n  <h1><a name=\"xterm_140\" id=\"xterm_140\">Patch #140 - 2000/7/23 -\n  XFree86 4.0.1</a></h1>\n\n  <ul>\n    <li>modify Makefile.in to circumvent GNU make's built-in suffix\n    rule for \".sh\" which confuses install.sh with the \"make\n    install\" target (report/patch by Paul Gilmartin).</li>\n\n    <li>implement an experimental control sequence which an\n    application may use to query the terminal to determine what\n    sequence of characters it would send for a given function key.\n    This is ifdef'd with OPT_TCAP_QUERY (request by Bram\n    Moolenaar).</li>\n\n    <li>add /usr/local to search path in CF_X_ATHENA configure\n    macro to build with Xaw3d on OpenBSD (patch by Christian\n    Weisgerber).</li>\n\n    <li>add missing <code>#undef HAVE_TERMIO_C_ISPEED</code> to\n    xtermcfg.hin, omitted in patch #133 fix for IRIX 6.5 baudrate\n    (report by Alain Filbois &lt;Alain.Filbois@loria.fr&gt;).</li>\n\n    <li>correct a few errors in xterm.man: font in filename example\n    for Tektronix emulation, and description of -nul/+nul\n    command-line options (report by Eric Fischer\n    &lt;enf@pobox.com&gt;).</li>\n\n    <li>update config.guess and config.sub, from tin and lynx.</li>\n  </ul>\n\n  <h1><a name=\"xterm_139\" id=\"xterm_139\">Patch #139 - 2000/6/17 -\n  XFree86 4.0d</a></h1>\n\n  <ul>\n    <li>back out change to <code>-name</code> command-line option,\n    restoring its original behavior (as noted by David Madore, the\n    correct interpretation of this option is the application\n    instance rather than the application class).</li>\n  </ul>\n\n  <h1><a name=\"xterm_138\" id=\"xterm_138\">Patch #138 - 2000/6/15 -\n  XFree86 4.0c</a></h1>\n\n  <ul>\n    <li>workaround for fixed fonts which are generated from Unicode\n    fonts: they omit glyphs for some xterm's less-used line-drawing\n    characters, which caused xterm to set a flag telling it to use\n    only its internal line-drawing characters. Do not set the flag\n    (it can be set from the popup menu), and xterm will generate\n    only the line-drawing glyphs which actually are missing.<br>\n    Otherwise, when used for large fonts, xterm may generate a\n    2-pixel wide line, which can leave dots on the screen.</li>\n\n    <li>restore first line of 256colres.pl, omitted in 4.0c\n    diffs.</li>\n  </ul>\n\n  <h1><a name=\"xterm_137\" id=\"xterm_137\">Patch #137 - 2000/6/10 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>make command-line <code>-name</code> option work as\n    documented. Apparently this was lost in X11R5 when coding to\n    use <code>XtAppInitialize</code>.</li>\n\n    <li>limit numeric parameters of control sequences to 65535 to\n    simplify checks for numeric overflow.</li>\n\n    <li>change index into UDK list to unsigned to guard against\n    numeric overflow making the index negative (Taneli Huuskonen\n    &lt;huuskone@cc.helsinki.fi&gt;).</li>\n\n    <li>change <code>sun&nbsp;function-keys</code> resource name to\n    <code>sunFunctionKeys</code> to work around redefinition of the\n    token <code>sun</code> by xrdb on Solaris. Similarly, renamed\n    resource <code>sun&nbsp;keyboard</code> to\n    <code>sunKeyboard</code> (Stephen P Wall).</li>\n\n    <li>change similar resource names for HP and SCO to avoid\n    potential conflict with xrdb symbols on other systems, as well\n    as for consistency.</li>\n\n    <li>reorganized the install targets in the autoconf'd Makefile,\n    adding install-app, install-bin, install-dirs and install-man.\n    The app-defaults class can be overridden by setting the make\n    variable 'CLASS', simplifying customization of xterm as a\n    Unicode terminal, e.g., CLASS=UXTerm.</li>\n\n    <li>add limit checks to <code>ClearInLine()</code>,\n    <code>ScrnInsertChar()</code>, <code>ScrnDeleteChar()</code> to\n    correct potential out-of-bounds indexing (prompted by Debian\n    bug report #64713, which reported a problem with ICH escape\n    sequences).</li>\n\n    <li>updates to config.sub and config.guess Kevin Buettner\n    &lt;kev@primenet.com&gt; for elf64_ia64 Bernd Kuemmerlen\n    &lt;bkuemmer@mevis.de&gt; and MacOS X.</li>\n\n    <li>for os390, add check for errno set to ENODEV on failure to\n    open /dev/tty when there is no controlling terminal (patch by\n    Paul Gilmartin).</li>\n\n    <li>fixes for building on Digital Unix 4.0 and AIX 4.2 (patch\n    from H Merijn Brand &lt;h.m.brand@hccnet.nl&gt;).</li>\n\n    <li>modify DECRQSS reply for DECSCL to additionally report if\n    the terminal is set for 8-bit controls.</li>\n  </ul>\n\n  <h1><a name=\"xterm_136\" id=\"xterm_136\">Patch #136 - 2000/6/3 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>add a resource (<code>limitResize</code>) limiting resizing\n    via the CSI 4 t and CSI 8 t sequences.</li>\n\n    <li>ignore out-of-bounds resize requests, i.e., where\n    sign-extension or truncation of the parameters would\n    occur.</li>\n  </ul>\n\n  <h1><a name=\"xterm_135\" id=\"xterm_135\">Patch #135 - 2000/5/29 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>remove code introduced in #134 which made some backgrounds\n    bold.</li>\n\n    <li>minor correction to format of updated $TERMCAP when adding\n    <code>kb</code> capability for <code>ptyInitialErase</code>\n    logic.</li>\n\n    <li>improved test for SVR4 definition.</li>\n  </ul>\n\n  <h1><a name=\"xterm_134\" id=\"xterm_134\">Patch #134 - 2000/5/28 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>update URL's and mailing addresses, moved to\n    http://dickey.his.com and dickey@herndon4.his.com</li>\n\n    <li>correct missing quotes in CF_TTY_GROUP configure script\n    macro in case the script is run in batch mode.</li>\n\n    <li>modify ownership-check of log file to ignore the group\n    ownership. Otherwise xterm cannot create logfiles in\n    directories with set-gid permissions.</li>\n\n    <li>simplify the logic that reads termcap data.</li>\n\n    <li>add fallback definition for B9600 in case line speed\n    definition for 38400 is missing (report by Jack J Woehr\n    &lt;jwoehr@ibm.net&gt;, for OpenBSD 2.6).</li>\n\n    <li>fix: Set highlightColor, and select a region containing the\n    text cursor. If the window loses focus, the cursor becomes\n    hollow, with the region inside the cursor being\n    background/foreground, unlike the rest of the selection, which\n    is foreground/highlight (patch by Ross Paterson\n    &lt;ross@soi.city.ac.uk&gt;).</li>\n\n    <li>add configure script tests to define SVR4, SYSV and\n    USE_POSIX_WAIT, which enables xterm to compile on Solaris 7 and\n    SCO Openserver without imake, though there are still a few\n    features for the latter which require <code>sco</code> to be\n    predefined.</li>\n\n    <li>patches from Stephen P Wall:\n      <ul>\n        <li>add support for two Sun-specific function keys. These\n        keys are labeled F11 and F12 on Sun Type 5 keyboards, but\n        return SunXK_F36 and SunXK_F37. Support will only be\n        compiled in if the header file &lt;X11/Sunkeysym.h&gt;\n        exists and contains the appropriate symbol definitions. The\n        keycodes for the DEC keycodes were arbitrary unused codes,\n        but the ones for the Sun keycodes are what cmdtool and\n        shelltool actually send.</li>\n\n        <li>add <code>colorRV</code> and <code>colorRVMode</code>\n        resources to allow specifying a color to use for reverse\n        video, similar to the existing UL, BD, and BL modes.</li>\n\n        <li>add <code>alwaysUseMods</code> resource, to override\n        check if <code>alt</code> or <code>meta</code> modifiers\n        are used in <code>translations</code> resource. Revamped\n        the code to calculate the modifier value, and included Meta\n        if alwaysUseMods is TRUE, using values 9-16.</li>\n      </ul>\n    </li>\n\n    <li>fixes for os390 (Paul Gilmartin):\n      <ul>\n        <li>regularize the definition of CONTROL() and remove an\n        acknowledged \"trial and error\" table.</li>\n\n        <li>translate \"^?\" into A2E(0177) which is the EBCDIC \"DEL\"\n        rather than plain 0177 which is the EBCDIC quotation\n        mark.</li>\n\n        <li>modify <code>xtermMissingChar()</code> so that EBCDIC\n        codes 128-159 are not rendered as blanks by X server\n        running on Solaris, which sees those as control\n        characters.</li>\n\n        <li>make debugging traces (configure --enable-trace) work\n        properly with EBCDIC.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_133\" id=\"xterm_133\">Patch #133 - 2000/5/2 -\n  XFree86 4.0a</a></h1>\n\n  <ul>\n    <li>add substitutions in autoconf'd Makefile for CPPFLAGS,\n    LDFLAGS and AWK (reported by Neil Bird).</li>\n\n    <li>correct uninitialized <code>childstat</code> variable from\n    patch #131 in <code>creat_as()</code> function, which caused\n    logging to not work on Solaris, whose <code>waitpid()</code>\n    function does not initialize its parameter. Add check for EINTR\n    on return from <code>waitpid()</code> as well (reported by Neil\n    Bird &lt;neil.bird@rdel.co.uk&gt;).</li>\n\n    <li>remove a redundant check for working <code>setuid()</code>\n    function introduced in patch #132. Greg Smith reports that this\n    does not work as intended on os390.</li>\n\n    <li>change line speed from 9600bd to 38400bd, to accommodate\n    people who mistakenly use $TERM set to <em>vt100</em>, to\n    reduce the effect of padding associated with this terminal\n    type.</li>\n\n    <li>add configure script check for IRIX 6.5's redefinition of\n    baud rates associated with <code>struct termio</code>, to\n    correct a situation where the baud rate was initialized to zero\n    (reported by Andrew Isaacson &lt;adi@lcse.umn.edu&gt;).</li>\n\n    <li>remove unused configure script check for VDISABLE.</li>\n  </ul>\n\n  <h1><a name=\"xterm_132\" id=\"xterm_132\">Patch #132 - 2000/4/11 -\n  XFree86 4.0a</a></h1>\n\n  <ul>\n    <li>undo an incorrect change from patch #113 caused the right\n    scrollbar to be positioned incorrectly when re-enabling it\n    (analysis by D Roland Walker).</li>\n\n    <li>add ctrlFKeys resource, replacing constant for adjusting\n    control-F1 to control-F12 to VT220-style F10-F20. The resource\n    changes the constant 12 to a default value of 10 (request by\n    Jim Knoble &lt;jmknoble@pobox.com&gt;).</li>\n\n    <li>correct ifdef'ing for conflict between definitions in AIX's\n    &lt;sys/select.h&gt; and &lt;X11/Xpoll.h&gt; (reported by Clint\n    Olsen).</li>\n\n    <li>add checks for return-values of getutid(), initgroups() and\n    setuid() in main.c, as well as modifying ifdef's for __osf__ to\n    include tty-group and WTMP logic (adapted from patch by Paul\n    Szabo &lt;psz@maths.usyd.edu.au&gt;)</li>\n\n    <li>modify resize.c to build and work on os390 (uses EBCDIC)\n    (adapted from patch by Phil Sidler\n    &lt;Phil.Sidler@airborne.com&gt;)</li>\n\n    <li>use Ires(), Bres() and Sres() macros to simplify resource\n    list in charproc.c</li>\n\n    <li>resync with XFree86 4.0a:\n      <ul>\n        <li>correct a typo in os2main.c (Holger Veit, from\n        4.0a).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_131\" id=\"xterm_131\">Patch #131 - 2000/3/3 -\n  XFree86 3.9.18b</a></h1>\n\n  <ul>\n    <li>improve logfile security (integrated patch by Branden\n    Robinson)\n      <ul>\n        <li>make the <code>creat_as()</code> function more strict\n        by using O_EXCL rather than O_APPEND.</li>\n\n        <li>fixes to make DEBUG ifdef's compile/run, including\n        making the debug logfile more unique by appending a\n        timestamp to its name.</li>\n\n        <li>include &lt;term.h&gt; in resize.c, to fix a\n        missing-prototype warning.</li>\n      </ul>\n    </li>\n\n    <li>modified <code>creat_as()</code> a little more, retaining\n    the ability to append to a logfile If the user specifies the\n    name. Also, check if the opened file (which patch #130 ensures\n    is owned by the effective user) is not writable by other\n    users.</li>\n\n    <li>use <code>creat_as()</code> logic to make tek4014\n    screen-copy more secure (noted by Branden Robinson).</li>\n\n    <li>ifdef'd some of Branden's changes to build/work on older\n    machines.</li>\n\n    <li>correct missing initialization of the <code>.mode</code>\n    flag in <code>ColorRes</code> struct, from patch #129. This\n    worked on Linux because <code>malloc()</code> zeroes memory on\n    that platform (reported by Christian Weisgerber).</li>\n\n    <li>modify logic for <code>deleteIsDEL</code> resource so it\n    has internally 3 states: unspecified, true and false. If\n    unspecified, the keyboard type determines whether the Delete\n    key transmits <code>&lt;ESC&gt;[3~</code> or <code>\\177</code>,\n    and the popup menu entry reflects the internal state.\n    Otherwise, the popup menu entry overrides the keyboard type\n    (suggested by Dr Werner Fink, to make it simpler to set\n    resources that imitate the legacy X11R6 xterm).</li>\n  </ul>\n\n  <h1><a name=\"xterm_130\" id=\"xterm_130\">Patch #130 - 2000/3/1 -\n  XFree86 3.9.18a</a></h1>\n\n  <ul>\n    <li>modify <code>scroll-forw()</code> and\n    <code>scroll-back()</code> actions, adding a third parameter\n    which will direct xterm to ignore the action when mouse\n    reporting is enabled. This is needed for the wheel mouse to be\n    used to report to the application rather than scroll the\n    window.</li>\n\n    <li>add menu entry and action to allow disabling xterm's\n    assumption that the current font contains line-drawing\n    characters if the font cells 1-31 are nonempty. Some fonts may\n    have other characters (reported by Bruno Betro\n    &lt;bruno@iami.mi.cnr.it&gt;).</li>\n\n    <li>add a check in <code>creat_as()</code> to ensure that the\n    user really owns the logfile that has been opened.</li>\n\n    <li>add logic to implement SCO function-keys. (This is really\n    incomplete, since I intend to revisit this and make xterm able\n    to emulate scoansi better than just the function-keys).</li>\n\n    <li>add configure script option --enable-sco-fkeys, minor\n    related fixes (patch by Dr Werner Fink).</li>\n\n    <li>fix typos in ctlseqs.ms (reported by Bram Moolenaar)</li>\n\n    <li>fix typo in sinstall.sh default for $TST_PROG (reported by\n    Paul Gilmartin &lt;pg@sweng.stortek.com&gt;)</li>\n  </ul>\n\n  <h1><a name=\"xterm_129\" id=\"xterm_129\">Patch #129 - 2000/2/26 -\n  XFree86 3.9.18a</a></h1>\n\n  <ul>\n    <li>improve initialization of ANSI colors by delaying\n    allocation until each color is first used.</li>\n\n    <li>remove ifdef that prevented colorBD/colorUL/colorBL\n    resources from working when 256-color configuration was built\n    (reported by Todd Larason).</li>\n\n    <li>fix some minor inconsistencies in terminfo (Debian\n    #58530).</li>\n  </ul>\n\n  <h1><a name=\"xterm_128\" id=\"xterm_128\">Patch #128 - 2000/2/17 -\n  XFree86 3.9.18</a></h1>\n\n  <ul>\n    <li>correct logic for <code>oldXtermFKeys</code> resource,\n    fixes a core dump when attempting to set it from the\n    command-line (reported by Dr Werner Fink).</li>\n\n    <li>correct ifdef for meta-sends-escap so configure\n    --disable-num-lock builds.</li>\n  </ul>\n\n  <h1><a name=\"xterm_127\" id=\"xterm_127\">Patch #127 - 2000/2/12 -\n  XFree86 3.9.17e</a></h1>\n\n  <ul>\n    <li>add resource, popup menu entry and control sequence to\n    allow changing the Delete key to send either DEL or the\n    VT220-style Remove escape sequence.</li>\n\n    <li>remove logic for metaSendsEscape that would allow xterm to\n    send <code>&lt;ESC&gt;[3~</code> before a function key that\n    would begin with <code>&lt;ESC&gt;[3~</code> (request by\n    Christian Weisgerber).</li>\n\n    <li>add missing action and documentation for\n    meta-sends-escape.</li>\n\n    <li>correct a few typos in ctlseqs.ms (incorrect code for Cyan\n    color)</li>\n  </ul>\n\n  <h1><a name=\"xterm_126\" id=\"xterm_126\">Patch #126 - 2000/2/8 -\n  XFree86 3.9.17c</a></h1>\n\n  <ul>\n    <li>ensure that xterm will automatically activate the UTF-8\n    mode whenever the name of the locale environment variable\n    suggests that a UTF-8 locale is in use (patch by Markus Kuhn).\n    This will help that by simply setting LC_CTYPE an entire system\n    can be switched over to UTF-8, without users having to remember\n    the UTF-8 command line options (\"-u8\", etc.) of the various\n    applications. Command line options and X resource entries can\n    still be used to override this default choice.</li>\n\n    <li>add old function-keys control sequences and popup menu\n    entry, for compatibility with legacy X11R6 xterm.</li>\n\n    <li>revert translation of editing keypad \"Delete\" key to legacy\n    \\177.</li>\n\n    <li>simplify the color-resource data expressions with macro\n    COLOR_RES, for later use in restructuring color\n    initialization.</li>\n\n    <li>change encoding of wheel mouse (buttons 4 and 5) to avoid\n    conflict with legacy mouse modifiers (suggested by Bram\n    Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_125\" id=\"xterm_125\">Patch #125 - 2000/1/31 -\n  XFree86 3.9.17c</a></h1>\n\n  <ul>\n    <li>make this work on OpenVMS (integrated patch by David\n    Mathog).</li>\n\n    <li>rename some functions, e.g., <code>Index</code> to\n    <code>xtermIndex</code> so that ports such as VMS which link\n    externals ignoring case will not have library conflicts\n    (reported by David Mathog).</li>\n\n    <li>correct logic of <code>do_reversevideo()</code>, which did\n    not update the corresponding popup menu check mark (reported by\n    David Mathog, this was a detail overlooked in patch #94).</li>\n\n    <li>change TRACE macro so semicolon is not within definition,\n    making <em>indent</em> and similar programs work better.</li>\n\n    <li>add <code>depend</code> rule to Makefile.in</li>\n\n    <li>modify logic of boldColors resource to suppress it if an\n    extended color control has been used, e.g., for 88-color or\n    256-color mode (patch by Todd Larason).</li>\n\n    <li>revise logic that handles menus and input translation for\n    keyboard type so only one can be selected at a time.</li>\n\n    <li>restore kdch1=\\177 for the Sun function-key type, and make\n    the the Delete key send DEL (\\177) if the oldXtermFKeys\n    resource is set.</li>\n\n    <li>rephrase logic and ifdef's for POSIX VDISABLE to avoid\n    preprocessor expression that will not compile on NetBSD/x86\n    1.4.1 (reported by Takaaki Nomura\n    &lt;amadeus@yk.rim.or.jp&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_124\" id=\"xterm_124\">Patch #124 - 2000/1/27 -\n  XFree86 3.9.17b</a></h1>\n\n  <ul>\n    <li>change coding of editing keypad's \"Delete\" key to\n    &lt;escape&gt;[3~, in the default (Sun/PC) keyboard mode. This\n    makes the terminfo kdch1 capability independent of the coding\n    of the backarrow key, which sends either backspace (8) or DEL\n    (127). The reason for doing this (compatibility with the\n    <em>screen</em> program) outweighs the choice of DEL (127)\n    which was used in X11R5/X11R6 xterms. The <em>screen</em>\n    program translates whatever matches kdch1 into\n    &lt;escape&gt;[3~, even if it happens to be the stty erase\n    character.</li>\n\n    <li>add encoding for control/?, to work around xmodmap or key\n    translations which may confuse backspace and delete. A\n    control/? will send DEL (127), and a control/H will of course\n    send backspace (8).</li>\n\n    <li>add encoding for kcbt to &lt;escape&gt;[Z (fixes Debian\n    #54840).</li>\n\n    <li>minor correction to logic that encodes Sun and DEC function\n    keys to avoid sending an escape sequence if the key symbol is\n    not found in xterm's lookup table.</li>\n\n    <li>simplify ifdef's in main.c for POSIX VDISABLE so the \"^-\"\n    pattern is more likely to be implemented when <em>imake</em>\n    configures xterm (fixes Debian #55105).</li>\n\n    <li>change manpage to make it clearer what codes are sent by\n    the backarrow key.</li>\n  </ul>\n\n  <h1><a name=\"xterm_123\" id=\"xterm_123\">Patch #123 - 2000/1/22 -\n  XFree86 3.9.17a</a></h1>\n\n  <ul>\n    <li>add a note reserving OSC 51 for use in Emacs shell (request\n    by Rob Mayoff &lt;mayoff@dqd.com&gt;).</li>\n\n    <li>correct a missing backslash in xterm-vt220 termcap.</li>\n\n    <li>cleanup remaining quoted includes, preferring bracketed\n    form.</li>\n\n    <li>minor configure-script macro updates from tin and\n    vile.</li>\n\n    <li>add configure-script option for using utempter library,\n    adapted from Redhat 6.1 patch for XFree86 3.3.5</li>\n\n    <li>resync with XFree86 3.9.17a:\n      <ul>\n        <li>correction to QNX support (Frank Guangxin Liu)</li>\n\n        <li>some cosmetic changes that did not correct any reported\n        problems.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_122\" id=\"xterm_122\">Patch #122 - 1999/12/28 -\n  XFree86 3.9.16f</a></h1>\n\n  <ul>\n    <li>move the suggested wheel-mouse button translations into\n    charproc.c to simplify customization. Correct some minor logic\n    errors in the support for buttons 4 and 5, used for wheel mice\n    (reported by Bram Moolenaar).</li>\n\n    <li>implement <em>metaSendsEscape</em> resource, with\n    corresponding control sequence and menu entry. Like\n    <em>eightBitInput</em>, this causes xterm to send ESC prefixing\n    the given key, but applies to all keys and is independent of\n    the 8-bit/7-bit terminal setting. (requests by Alexander V\n    Lukyanov and Marc Feeley).</li>\n\n    <li>correct potential indexing with negative subscript in\n    udk_lookup(), (reported by Ian Collier\n    &lt;Ian.Collier@comlab.ox.ac.uk&gt;).</li>\n\n    <li>modify configure script that sets TERMINFO_DIR to use\n    ${prefix} rather than /usr if the --prefix option was specified\n    (request by Zdenek Sekera &lt;zs@sgi.com&gt;).</li>\n\n    <li>modify checks for repeat-character control sequence to test\n    the character class against xterm's state table, rather than\n    the isprint() macro (patch by Alexander V Lukyanov).</li>\n\n    <li>change several functions to macros to improve speed</li>\n\n    <li>two corrections to simulation of bold font via\n    overstriking:\n      <ul>\n        <li>use clipping to avoid leaving trash at end of the text,\n        and</li>\n\n        <li>add brackets so wide-character logic does not\n        fall-through into the overstriking logic (reported by Marc\n        Feeley &lt;feeley@IRO.UMontreal.CA&gt;)</li>\n      </ul>\n    </li>\n\n    <li>add several entries to termcap file to make it have the\n    same set of aliases as the terminfo file.</li>\n\n    <li>scale the color values used for xterm-256color terminfo\n    entry to 0..1000, as expected by ncurses.</li>\n\n    <li>change xterm-r6 terminfo definitions for F1-F4 to match\n    program.</li>\n\n    <li>Add QNX/Neutrino support (Frank Guangxin Liu\n    &lt;frank@ctcqnx4.ctc.cummins.com&gt;)</li>\n  </ul>\n\n  <h1><a name=\"xterm_121\" id=\"xterm_121\">Patch #121 - 1999/11/14 -\n  XFree86 3.9.16c</a></h1>\n\n  <ul>\n    <li>change label on \"Sun/PC Keyboard\" popup menu entry to\n    \"VT220 Keyboard\", since the checked state corresponds to VT220\n    rather than Sun/PC.</li>\n\n    <li>add configure test CF_UTMP_UT_XSTATUS to handle the\n    variants of utmp exit status (reports by Dave Ellement, Jeremie\n    Petit, Tomas Vanhala).</li>\n\n    <li>amend treatment of ALT key (see <a href=\"#xterm_94\">patch\n    #94</a>) so that if ALT is used as a modifier in key\n    translations, then no parameter will be sent in escape\n    sequences for Sun/PC function keys (request by Dr Werner\n    Fink).</li>\n\n    <li>modify default for OPT_I18N_SUPPORT to assume that\n    <code>XtSetLanguageProc()</code> is available in X11R5.\n      <p>Caveat: <code>XtSetLanguageProc()</code> was added fairly\n      late in the X11R5 patches, and some vendors shipped buggy\n      versions of this function (request by Tomas Vanhala).</p>\n    </li>\n\n    <li>correct configure macro CF_SYSV_UTMP to test-link with\n    functions consistent with the header, e.g., getutent() for\n    utmp.h and getutxent() for utmpx.h (reported by Greg\n    Smith).</li>\n\n    <li>modify terminfo entry for <code>xterm-xfree86</code> to\n    reflect modifiers for shift and control (from a patch by\n    Alexander V Lukyanov).</li>\n\n    <li>modify terminfo entry for <code>xterm-sun</code> to match\n    the function-key definitions in ncurses. The pageup/pagedown\n    and related function keys correspond to the Sun keyboard, which\n    does not necessarily correspond with X's notion of those\n    keys.</li>\n\n    <li>modify treatment of XK_Delete keysym so it transmits\n    parameterized VT220-style <code>&lt;ESC&gt;[3~</code> if\n    modifiers (shift, control alt) are given (request by Alexander\n    V Lukyanov).</li>\n\n    <li>corrected misspelled resource name in command-line option\n    for HP function keys.</li>\n  </ul>\n\n  <h1><a name=\"xterm_120\" id=\"xterm_120\">Patch #120 - 1999/10/28 -\n  XFree86 3.9.16c</a></h1>\n\n  <ul>\n    <li>refine the change to <code>SGR_Background()</code> in patch\n    #119, by not flushing the pending scrolling operation if the\n    background color is not actually changing. This combination\n    occurs when using color-ls to display a long listing, since\n    each line ends with an SGR0 which affects only the foreground\n    color. The unnecessary flushing made it noticeably slower\n    (reported by D Roland Walker &lt;walker@pobox.com&gt;).</li>\n\n    <li>remove obsolete documentation about modifiers which can be\n    returned in mouse tracking mode, and modify logic to ignore\n    modifiers other than the existing ones, e.g., NumLock (prompted\n    by discussions with Christian Weisgerber and Brad Pepers\n    &lt;brad@linuxcanada.com&gt;).</li>\n\n    <li>use free bit from obsolete shift-modifier coding of mouse\n    tracking button events to encode buttons 4 and 5, e.g., for a\n    wheel mouse (requests by Brad Pepers and Bram Moolenaar).</li>\n\n    <li>correct a place where the ptyInitialErase logic did not set\n    the backarrowKey state, and modify it further to use tgetstr()\n    rather than parse the termcap data returned from tgetent() so\n    the ptyInitialErase logic will work when xterm is linked with a\n    terminfo library (based on a patch by Dr Werner Fink\n    &lt;werner@suse.de&gt;).</li>\n\n    <li>fix definition of HAVE_UTMP_UT_HOST for ISC configuration\n    (patch by Michael Rohleder).</li>\n\n    <li>improve configure script's utmp tests (based on reports by\n    Greg Smith for os390, and David Ellement for HPUX).</li>\n\n    <li>modify sinstall.sh to use uid=0 rather than 'root' to\n    determine if the installer is privileged. This is needed on\n    some systems since more than one account may be privileged\n    (report by Greg Smith).</li>\n\n    <li>add an application resource, <code>messages</code> (and a\n    corresponding -/+mesg option) which controls the initial\n    permission on the terminal: if messages is set to true (the\n    default), behavior is as without the patch; if it is set to\n    false (as per -mesg), the terminal is opened in mode 0600, thus\n    producing the effect of the <code>mesg n</code> command. This\n    is useful for users who want to redirect all their messages to\n    one particular xterm: it is more pleasant to do this with xterm\n    resources than with explicit calls to the <code>mesg</code>\n    program (patch, description by David Madore\n    &lt;david.madore@ens.fr&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_119\" id=\"xterm_119\">Patch #119 - 1999/10/16 -\n  XFree86 3.9.16c</a></h1>\n\n  <ul>\n    <li>add responses (DA and DSR) for DEC locator mode</li>\n\n    <li>add coding for ANSI color to DA response</li>\n\n    <li>implement UTF-8 translation for Media Copy (print)\n    operations.</li>\n\n    <li>implement vt320 control sequences for Print Composed Main\n    Display and for Print All Pages. The latter directs xterm to\n    print the current screen as well as the scrollback buffer.</li>\n\n    <li>correct error in _GNU_SOURCE configure test, which left it\n    always defined.</li>\n\n    <li>add more information, i.e., with strerror for some system\n    calls in the main program which may fail due to insufficient\n    permissions (prompted by a problem report for <code>-C</code>\n    by Jeremie Petit &lt;Jeremie.Petit@digital.com&gt;).</li>\n\n    <li>add workaround for conflict between &lt;X11/Xpoll.h&gt; and\n    &lt;sys/select.h&gt; on AIX 4.3 (Richard Griswold\n    &lt;griswold@acm.org&gt;).</li>\n\n    <li>add configure script test to resolve conflict between\n    between &lt;X11/Xpoll.h&gt; and &lt;sys/select.h&gt;</li>\n\n    <li>modify translation of UTF-8 sequences to reject \"overly\n    long\" variations (patch by Markus Kuhn).</li>\n\n    <li>remove <code>utf8controls</code> resource, since Markus'\n    change removes the corresponding logic.</li>\n\n    <li>correct a case where colors were not rendered properly.\n    This happened when an application inserted several lines, then\n    changed colors. If this was done all in one write, then there\n    would be no intervening refresh, and the new color was applied\n    to the pending scrolling operation which was awaiting the next\n    refresh (reported by Stephane Chazelas\n    &lt;Stephane_Chazelas@Raytheon.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_118\" id=\"xterm_118\">Patch #118 - 1999/10/5 -\n  XFree86 3.9.16b</a></h1>\n\n  <ul>\n    <li>refine configure test for utmp versus utmpx, to build on\n    HP-UX 10.x (reported by David Ellement).</li>\n\n    <li>move the configure check for <code>const</code> after the\n    check for ANSI C compiler options, since those may be required\n    to make it work properly on HP-UX.</li>\n\n    <li>add configure test for defining\n    <code>_GNU_SOURCE</code></li>\n\n    <li>correction to <em>-hold</em> option, ensure that if data is\n    already in the output buffer that it will be displayed before\n    closing the PTY.</li>\n\n    <li>move the configure checks for setuid install of xterm into\n    a script to avoid installing it setuid'd to a non-root user\n    (reported by Adam Sulmicki &lt;adam@cfar.umd.edu&gt;).</li>\n\n    <li>correct configure script's check for termcap.h to avoid\n    using ncurses' version of it on systems that have a working\n    <code>tgetent()</code> function. This is needed to make\n    <code>resize</code> work properly.</li>\n\n    <li>fix some typography in ctlseqs.ms description of DEC\n    locator events (reported by Stephen P Wall).</li>\n  </ul>\n\n  <h1><a name=\"xterm_117\" id=\"xterm_117\">Patch #117 - 1999/9/29 -\n  XFree86 3.9.16b</a></h1>\n\n  <ul>\n    <li>change order of tests in configure script for utmp and\n    utmpx to test utmpx first, to compile on Solaris (reported by\n    Leena Heino &lt;liinu@uta.fi&gt; and Patrik Hagglund\n    &lt;patha@ida.liu.se&gt;).</li>\n\n    <li>add a configure test for utmp.ut_xtime, needed for SCO\n    Openserver, and for lastlog, needed for Redhat 6.0, to refine\n    the utmp/utmpx auto-configure.</li>\n\n    <li>remove a spurious comma in an #undef (reported by David\n    Green &lt;greendjf@cvhp152.marconicomms.com&gt; and David\n    Ellement &lt;ellement@sdd.hp.com&gt; both on HP-UX, whose\n    compiler does care about syntax).</li>\n\n    <li>change ifdef's using __CYGWIN32__ to __CYGWIN__ (reported\n    by Suhaib M. Siddiqi &lt;Ssiddiqi@InspirePharm.Com&gt;, who is\n    told that the next Cygnus release will drop that symbol in\n    their next release).</li>\n\n    <li>minor cleanup of ifdef's for makeColorPair (patch by\n    Stephen P Wall).</li>\n\n    <li>work around problem observed in XFree86 3.3.5 (patch by\n    Alexander V Lukyanov, Redhat #5419). From the problem report:\n      <blockquote>\n        <p>xterm consumes cpu when selecting text with mouse\n        (holding down left mouse button) and when a program working\n        under the xterm outputs something to stdout.</p>\n\n        <p>Easy way to reproduce:<br>\n        <code>while :; do echo aaa; sleep 1; done</code><br>\n        (while this runs, select text and hold down left mouse\n        button) watch cpu load.<br>\n        release left mouse button - spinning stops.</p>\n      </blockquote>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_116\" id=\"xterm_116\">Patch #116 - 1999/9/25 -\n  XFree86 3.9.16a</a></h1>\n\n  <ul>\n    <li>modify warning if change-ownership of PTY fails; some\n    configurations may not happen to have old-style pty's (reported\n    by Bob Maynard).</li>\n\n    <li>improve check in configure script for group ownership of\n    installed xterm; some platforms use the -g option of ls to\n    toggle group off rather than on (reported by Greg Smith).</li>\n\n    <li>minor improvement to toolbar geometry, to make it not\n    resizable. This still is not satisfactory (but is usable) since\n    the toolbar overlaps the xterm widget if the window is resized\n    to make it smaller. It appears that some work is needed for the\n    xterm widget's geometry management to make it function\n    properly.</li>\n\n    <li>implement configure script tests for utmp, tty group.</li>\n\n    <li>implement <em>-hold</em> option, allowing users to retain\n    the window after a shell has exited (this is recently an FAQ,\n    but prompted by a comment by Joachim Plaettner-Hochwarth\n    &lt;plaettner@aem.umn.edu&gt; in comp.unix.programmer, that the\n    IRIX winterm provides this option).</li>\n\n    <li>add support for DEC Locator control sequences for xterm\n    (integrated patch by Stephen P Wall):\n\n      <pre>\n                DECEFR, \"Enable Filter Rectangle\"\n                DECELR, \"Enable Locator Reports\"\n                DECSLE, \"Select Locator Events\"\n                DECRQLP, \"Request Locator Position\"\n</pre>\n      <p>This allows the xterm mouse to be used with applications\n      that use the DEC Locator sequences, such as VAX Tpu, or SMG$\n      based applications.</p>\n    </li>\n\n    <li>improve print action (patch by Matthias Baake). From his\n    notes,\n      <ul>\n        <li>Bug 1<br>\n        Underlined text is preceded by ESC&nbsp;[0;2m . This should\n        be ESC&nbsp;[0;4m&nbsp;, ESC&nbsp;[2m doesn't seem to have\n        any effect. (print.c/send_SGR)</li>\n\n        <li>Bug 2<br>\n        The check for the last non-empty column (while (last &gt;\n        0) ... in print.c/printLine) omits the rightmost column of\n        the screen, the loop must start with last =\n        screen-&gt;max_col+1 instead of last =\n        screen-&gt;max_col.</li>\n\n        <li>Bug 3<br>\n        Any attributes of the first character (and of all\n        immediately following characters with the same attributes)\n        are ignored. The variable attr (print.c/printLine) should\n        be initialized with 0, not with *a &amp; SGR_MASK.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_115\" id=\"xterm_115\">Patch #115 - 1999/9/18 -\n  XFree86 3.9.16a</a></h1>\n\n  <ul>\n    <li>integrated changes by Stephen P Wall to implement an\n    88-color model for systems where 256-colors cannot be\n    allocated.</li>\n\n    <li>when 256-color configuration is compiled, colored bold and\n    underlining is not available; ifdef'd to avoid possible odd\n    effects in this case (reported by Stephen P Wall).</li>\n\n    <li>add resource <em>cacheDoublesize</em>, to limit the caching\n    of font information for double-sized characters. This addresses\n    a problem reported by Aryeh Koenigsberg for X terminals with\n    limited font memory.</li>\n\n    <li>modify treatment of line-drawing characters in UTF-8 mode\n    so that the Unicode values are used rather than the C0 codes\n    for storing the translated characters (request by Markus\n    Kuhn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_114\" id=\"xterm_114\">Patch #114 - 1999/9/15 -\n  XFree86 3.9.16</a></h1>\n\n  <ul>\n    <li>add configure script checks for Athena headers and\n    libraries under /usr/contrib to work on HPUX (reported by\n    several people: David Nixon &lt;djn@csc.liv.ac.uk&gt; Aryeh\n    Koenigsberg &lt;aryeh.koenigsberg@telrad.co.il&gt; Johannes\n    M&auml;hner &lt;johanm@camline.com&gt; Andrew Gaylard\n    &lt;andrew.gaylard@bsw.co.za&gt;).</li>\n\n    <li>add check to configure script if xterm is installed setgid\n    rather than setuid, since wtmp and utmp may be installed with\n    group-writable permissions other than root (based on Debian bug\n    report #7112 by Bo Branten &lt;bosse@ing.umu.se&gt;).</li>\n\n    <li>rewrote logic that removes data from termcap entry, e.g.,\n    for titeInhibit, to make it less likely to remove the wrong\n    data.</li>\n\n    <li>correct logic which checks for missing characters used for\n    line drawing. The 0 character was tested unnecessarily, leading\n    to some inefficiency when rendering.</li>\n\n    <li>change termcap capability which is used as input or output\n    of ptyInitialErase logic from <em>kD</em> to <em>kb</em>.\n    Christian Weisgerber &lt;naddy@mips.rhein-neckar.de&gt; pointed\n    out in effect that <em>kD</em> (in terminfo <em>kdch1</em>)\n    should correspond to the control sequence for <em>dch1</em>,\n    which deletes from the current position toward the right.</li>\n\n    <li>check for failure to change ownership of the PTY device and\n    warn when xterm is running setuid'd to root. This was reported\n    to happen on the FreeBSD/NetBSD/OpenBSD systems as a result of\n    the chflags() call.</li>\n\n    <li>add xterm-noapp terminfo entry to illustate a nominally\n    bash-compatible terminal description.</li>\n  </ul>\n\n  <h1><a name=\"xterm_113\" id=\"xterm_113\">Patch #113 - 1999/8/15 -\n  XFree86 3.9.15b</a></h1>\n\n  <p>Several fixes. The main one is a first draft of pulldown\n  menus. It's not complete (I have some minor/annoying geometry\n  problems to correct), but is usable. Once it's complete I plan to\n  add a menu to support additional selections that won't fit on the\n  current popup menus. Also, this fits into my longterm plan to\n  allow configuring with Motif libraries.</p>\n\n  <ul>\n    <li>correct error in input conversion for NRC mode (reported by\n    Stefan Traby &lt;stefan@sime.com&gt;).</li>\n\n    <li>fix initialization of num_lock data in Misc struct (since\n    those fields of the reference widget aren't initialized), and\n    add logic to deal with XVision whose NumLock key does not\n    transmit but does alter keypad state.</li>\n\n    <li>correct a missing return-value in get_pty(), for SCO</li>\n\n    <li>add E2A fix for backspace (patch by Greg Smith), i.e.,<br>\n    #define VAL_INITIAL_ERASE A2E(127)</li>\n\n    <li>correct foreground color within cursor outline when the\n    window is unfocused (reported by Stephane Chazelas).</li>\n\n    <li>corrected position of scrollbar set in ResizeScrollBar(),\n    which left it positioned incorrectly if the right scrollbar\n    were enabled from the popup menu but was not initially enabled.\n      <p>I have noticed some additional problems with\n      right-scrollbar on X11R5 which I will correct later.</p>\n    </li>\n\n    <li>integrate changes by Jean-Claude Michot for QNX from\n    XFree86 3.3.4c</li>\n\n    <li>add resources menuBar/MenuBar, menuHeight/MenuHeight for\n    later use in toolbar geometry.</li>\n\n    <li>add configure option --enable-toolbar</li>\n\n    <li>add missing definition to make ziconbeep logic not\n    compile-in when configure script disables it.</li>\n\n    <li>add configure-check for input-method support in X\n    libraries</li>\n  </ul>\n\n  <h1><a name=\"xterm_112\" id=\"xterm_112\">Patch #112 - 1999/7/17 -\n  XFree86 3.9Pw</a></h1>\n\n  <ul>\n    <li>add null-pointer check to FlushLog(), fixes a core dump\n    when both -l and -lf options are used when xterm is configured\n    with wide-character support.</li>\n\n    <li>remove \"ISO\" case for SD, which was due to a typographical\n    error in ECMA-48 (reported by Paul Williams\n    &lt;paul@celigne.co.uk&gt; for vttest).</li>\n\n    <li>add \"FILES\" section to manpage.</li>\n\n    <li>generate header file to initialize default resources for\n    colors 16-255.</li>\n\n    <li>fixes for os390 (Greg Smith):\n      <ul>\n        <li>add README.os390</li>\n\n        <li>use the pty_search() function to find an available\n        pty/tty pair.</li>\n\n        <li>move E2A() call out of getXtermCell() to SaveText()\n        function so it will be available in all\n        configurations.</li>\n      </ul>\n    </li>\n\n    <li>patches by Todd Larason:\n      <ul>\n        <li>enable SGR 48 5 in ISO color mode, not just 256 color\n        mode</li>\n\n        <li>change configure's --disable-256-color option to\n        --enable-256-color, to match its effect</li>\n\n        <li>fix OSC 4 xx ? (report ansi color) to report a string\n        which can actually be used to set the color back</li>\n\n        <li>fix OSC 4 xx yy (change ansi color) to not allow\n        setting colors &gt; 15 in 16 color mode</li>\n\n        <li>simplify the COLOR_ settings a bit in ptyx.h, along\n        with setting NUM_ANSI_COLORS needed for #1 and #4\n        above</li>\n\n        <li>correct string-terminator code passed for reference to\n        OSC responses; when in 7-bit mode, only the final byte of\n        ST was seen.</li>\n\n        <li>Allow multiple color #;name pairs in OSC 4, and\n        document changes to match.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_111\" id=\"xterm_111\">Patch #111 - 1999/7/10 -\n  XFree86 3.9Pw</a></h1>\n\n  <ul>\n    <li>add control sequences for specifying the RGB value of the\n    ANSI colors, and for configuring with 256 colors (patch by Todd\n    Larason &lt;jtl@molehill.org&gt;). I made the default\n    configuration to 16-colors, because xterm uses the default\n    color map (which has only 256 colors).</li>\n\n    <li>correct an error in DCS $ q m reporting for colors 8-15\n    (Todd Larason).</li>\n\n    <li>add test/demo script for double size characters. Used this\n    to test/correct display of double size characters that should\n    wrap, underlined double size characters.</li>\n\n    <li>increased cache size for double size fonts to 8, to allow\n    for both normal and bold fonts (discussion with Aryeh\n    Koenigsberg &lt;aryeh.koenigsberg@telrad.co.il&gt;).</li>\n\n    <li>add fixes for port to OS390 aka MVS (integrated patch from\n    Greg Smith &lt;rys@epaibm.rtpnc.epa.gov&gt;). OS390 uses EBCDIC\n    rather than ASCII.</li>\n\n    <li>correct an off-by-one in binary search limits in\n    keysym2ucs.c (Markus Kuhn).</li>\n\n    <li>implement logging for UTF-8 mode. The output is written in\n    UTF-8 form.</li>\n  </ul>\n\n  <h1><a name=\"xterm_110\" id=\"xterm_110\">Patch #110 - 1999/6/29 -\n  XFree86 3.9Pu</a></h1>\n\n  <ul>\n    <li>If colorMode is enabled by default, compile-in default\n    resources to match the colors listed in XTerm-col.ad (this\n    should fix a longstanding FAQ).</li>\n\n    <li>added new OSC&nbsp;3&nbsp;;&nbsp;PROPNAME=VALUE&nbsp;ST\n    escape sequence to set an arbitrary X property on the top level\n    xterm X11 window. Omit \"=VALUE\" to delete the X property (patch\n    by Greg Badros &lt;gjb@cs.washington.edu&gt;).</li>\n\n    <li>change internal flag used for <em>utf8controls</em>\n    resource so we allow 31-bit range of characters (suggested by\n    Thomas Wolff).</li>\n\n    <li>add check for 16-bit characters in OSC strings, change them\n    to '?' (reported by Thomas Wolff).</li>\n\n    <li>modify logic of same_font_name() to avoid trying to\n    interpret both parameters as wildcard patterns. That does not\n    (cannot) work, and in some instances the font server will\n    return unresolved wildcards for the normal or bold fontnames,\n    making them match inadvertently, triggering the fallback\n    overstrike logic (reported by Tim Adye).</li>\n  </ul>\n\n  <h1><a name=\"xterm_109\" id=\"xterm_109\">Patch #109 - 1999/6/23 -\n  XFree86 3.9Pt</a></h1>\n\n  <ul>\n    <li>correct range-check from patch #108, which resulted in not\n    being able to select from the scrollback buffer (reported by\n    Tim Adye &lt;T.J.Adye@rl.ac.uk&gt;)</li>\n\n    <li>correct \"no available ptys\" problem with Cygwin B20.1\n    (patch by Tim Adye).</li>\n\n    <li>modified install-ti rule in Makefile.in to allow override\n    of the terminfo directory when doing a \"make install\", i.e., by\n    assigning to TERMINFO_DIR (request by Zdenek Sekera\n    &lt;zs@sgi.com&gt;).</li>\n\n    <li>added install-full rule to Makefile.in</li>\n\n    <li>resync mkdirs.sh and install.sh scripts against current\n    autoconf</li>\n\n    <li>implement $(DESTDIR) in Makefile.in, making it simple to\n    install xterm and associated files into a directory just for\n    packaging a binary release (suggested by CaT\n    &lt;cat@zip.com.au&gt;).</li>\n\n    <li>change IChar type to unsigned, rather than unsigned short,\n    making room for a flag to keep with 16-bit characters to\n    prevent them from being interpreted as C0 or C1 controls\n    (reported by Thomas Wolff).</li>\n\n    <li>correct a typo from patch #107, incorrect array name, in\n    the filterUTF8 function (patch by Bruno Haible\n    &lt;haible@ilog.fr&gt;)</li>\n\n    <li>add <em>utf8controls</em> resource to specify whether xterm\n    should interpret 16-bit characters unpacked from UTF-8 form as\n    control characters if they happen to fall into that range. This\n    behavior is left unspecified by the Unicode standard (request\n    by Thomas Wolff).</li>\n\n    <li>modify handling of OSC to recover if application sends\n    16-bit characters with codes above 255. We cannot display them\n    as is, but translate out-of-range characters to a '?' (reported\n    by Thomas Wolff).</li>\n  </ul>\n\n  <h1><a name=\"xterm_108\" id=\"xterm_108\">Patch #108 - 1999/6/19 -\n  XFree86 3.9Ps</a></h1>\n\n  <ul>\n    <li>add a range-check to LastTextCol(), to guard against\n    indexing before the beginning of the scrollback buffer. This\n    appears to happen with certain fonts under X11R5 (reported by\n    Stephane Chazelas &lt;Stephane_Chazelas@Raytheon.com&gt;).</li>\n\n    <li>implement resource <em>boldMode</em>, to allow disabling\n    the simulation of bold fonts when the bold and normal fonts are\n    not different (requested by Will Day\n    &lt;willday@rom.oit.gatech.edu&gt;).</li>\n\n    <li>change the atom \"UTF-8\" to \"UTF8_STRING\", and fixes a few\n    bugs in the UTF-8 selection (patch by Juliusz Chroboczek).</li>\n\n    <li>correct logic of binary-search in keysym2ucs.c (patch by\n    Markus Kuhn).</li>\n\n    <li>add special interpretation of keysym codes above 0x1000000\n    as the corresponding UCS value plus 0x1000000 (patch by Markus\n    Kuhn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_107\" id=\"xterm_107\">Patch #107 - 1999/6/12 -\n  XFree86 3.9Pq</a></h1>\n\n  <ul>\n    <li>Two changes from Stephen P Wall. From his description:\n      <blockquote>\n        <p>The first change is simple - I added ESC[3J to erase the\n        stored lines above the screen. That's what the changes to\n        util.c and ctlseqs.ms are.</p>\n\n        <p>The second change is to get the blinking cursor working.\n        I took out the cursorBlinkTime resource, and put in\n        cursorBlink (Boolean), cursorOnTime (time cursor is on in\n        msecs) and cursorOffTime, and added a cursorblink item to\n        the vtMenu to enable/disable it.</p>\n      </blockquote>\n    </li>\n\n    <li>improve selection (integrated patch by Juliusz Chroboczek).\n    From his description:\n      <blockquote>\n        <p>With this patch, selection conversion works\n        properly:</p>\n\n        <pre>\n        ISO 8859-1 xterm -&gt; ISO 8859-1 xterm (transferred as STRING);\n        ISO 8859-1 xterm -&gt; UTF-8 xterm (transferred as STRING);\n        UTF-8 xterm -&gt; ISO 8859-1 xterm (transferred as STRING);\n        UTF-8 xterm -&gt; UTF-8 xterm (transferred as UTF-8).\n</pre>\n        <p>It will not work properly if one xterm is in, say, ISO\n        8859-2. Actually, for this case xterm breaks the ICCCM\n        routinely (sending ISO 8859-2 data as STRING), so I\n        wouldn't worry too much about it. I have not changed the\n        behaviour in eight-bit mode in any way.</p>\n      </blockquote>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_106\" id=\"xterm_106\">Patch #106 - 1999/6/9 -\n  XFree86 3.9Pq</a></h1>\n\n  <ul>\n    <li>remove duplicate fix for OpenBSD in resize.c</li>\n\n    <li>correct logic in ScreenWrite, which did not reset the high\n    bytes of 16-bit characters when overwriting them with a 8-bit\n    character string (reported by Thomas Wolff).</li>\n\n    <li>provide limited support for input of UTF-8 16-bit data by a\n    lookup table (integrated patch by Markus Kuhn).</li>\n\n    <li>correct check in non_blank_line to ensure we're in\n    wide-character mode before looking at the high bytes, for\n    InsertChar.</li>\n  </ul>\n\n  <h1><a name=\"xterm_105\" id=\"xterm_105\">Patch #105 - 1999/6/5 -\n  XFree86 3.9Pp</a></h1>\n\n  <ul>\n    <li>implement new resource <em>trimSelection</em>, which allows\n    xterm to trim trailing blanks from selected lines. This does\n    not affect the highlighting. (reported by several people using\n    <em>mutt</em>, including Hans Morten Kind &lt;edphk@uib.no&gt;,\n    Jeremy &lt;jeremy@exit109.com&gt; and (Michael Fuller\n    &lt;msf@mds.rmit.edu.au&gt;).</li>\n\n    <li>include term.h in resize for OpenBSD (patch by Matthieu\n    Herrb).</li>\n\n    <li>correct logic for UTF-8 in functions that hide and show the\n    cursor; it was displaying a space whenever the low byte of the\n    character at the cursor position was zero (reported by Thomas\n    Wolff &lt;Thomas.Wolff@icn.siemens.de&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_104\" id=\"xterm_104\">Patch #104 - 1999/5/30 -\n  XFree86 3.9Pn</a></h1>\n\n  <p>This is a resync patch against XFree86 3.9Pn, reflecting\n  changes which were submitted by Branden Robinson, who worked with\n  Wichert Akkerman &lt;wichert@cs.leidenuniv.nl&gt; to set up\n  ifdef's to handle GNU libc 2.1, and use getpt() which lets xterm\n  avoid having to know the actual PTY name.</p>\n\n  <p>I have also added a few fixes for signed/unsigned mismatches,\n  and corrected a problem in the configure script (the UTF-8 code\n  was always configured since the Imakefile defines this).</p>\n\n  <h1><a name=\"xterm_103\" id=\"xterm_103\">Patch #103 - 1999/5/14 -\n  XFree86 3.9Pm</a></h1>\n\n  <ul>\n    <li>correct selection logic: I omitted an offset that accounts\n    for the distance into the scrollback buffer when rewriting this\n    for patch #101. Also fixed a similar problem for selecting\n    double size characters from the scrollback buffer (first was\n    reported by D Roland Walker &lt;walker@pobox.com&gt;).</li>\n\n    <li>improved support for Unix98 PTY's, using patch in Debian\n    bug report #35650, by J.H.M. Dassen\n    &lt;jdassen@wi.leidenuniv.nl&gt;. From the patch description:\n      <blockquote>\n        <ul>\n          <li>No longer links xterm against libutil on a glibc2.1\n          system. libutil is a compatibility library and should\n          only be used when necessary. Rather than having get_pty()\n          use openpty() from this compatibility library, use the\n          real UNIX98 pty support in get_pty() (open()ing the\n          master pty, through getpt() if available (glibc\n          extension)). Use openpty() only under glibc2.0.</li>\n\n          <li>GNU libc2 is not Linux-specific; already it runs on\n          the Hurd. It provides the UNIX98 pty functions (plus the\n          getpt() extension), regardless of the underlying OS.\n          Changed two constructs to look for GNU libc2 only, not\n          GNU libc2 on Linux.</li>\n        </ul>\n      </blockquote>\n    </li>\n\n    <li>improve font configuration, by checking if the user's\n    resource settings for normal and bold fonts give the same font\n    sizes (fixes problem reported by Peter Waltenberg\n    &lt;peterw@dascom.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_102\" id=\"xterm_102\">Patch #102 - 1999/5/12 -\n  XFree86 3.9Pm</a></h1>\n\n  <ul>\n    <li>revert change to openpty call in patch #101; this causes\n    xterm to fail on DEC-Alpha OSF/1 4.0B (reported by H Merijn\n    Brand).</li>\n\n    <li>modify print.c to move include of stdio.h after the\n    autoconf'd xtermcfg.h since HP's ANSI C compiler otherwise sees\n    inconsistent prototype for getopt, probably due to problem with\n    const (reported by H Merijn Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_101\" id=\"xterm_101\">Patch #101 - 1999/5/10 -\n  XFree86 3.9Pm</a></h1>\n\n  <ul>\n    <li>moved includes and definitions for 'select' from data.h to\n    xterm.h to fix problem introduced by prototype for getPtyData,\n    part of UTF-8 changes (reported by Jens Schleusener\n    &lt;Jens.Schleusener@dlr.de&gt;)</li>\n\n    <li>added \"Meta &lt;Btn2Down&gt;:clear-saved-lines()\" default\n    translation (patch by H Merijn Brand)</li>\n\n    <li>fixes to configure script and ifdef's in main.c to build on\n    a HP9000/D390 (hppa-2.0w) running HP-UX 11.00 (64 bit) with\n    egcs 1.1.2 and HP's ANSI C compiler (patch by H Merijn Brand\n    &lt;PROCURA_BV@CompuServe.com&gt;)</li>\n\n    <li>add more parentheses in ifdef's (patch by Bob\n    Maynard).</li>\n\n    <li>eliminate conflicting definitions for USE_TERMINFO in\n    resize.c (reported by Jeremy Buhler).</li>\n\n    <li>change openpty call to pass NULL rather than ttydev\n    parameter, since that was used only to estimate the length of\n    the corresponding data, and may not really be long enough\n    (reported by Andreas Jaeger)</li>\n\n    <li>update description in xterm manpage for character class\n    table, which said it handles only 7-bit codes.</li>\n\n    <li>correct a typo in ScrnDeleteChar() which made it not clear\n    the high byte of wide-character data.</li>\n\n    <li>add logic to convert selection to UTF-8 form when\n    appropriate. This makes select/paste \"work\", but further work\n    is needed to make UTF-8 recognized as a locale in Xlib.</li>\n\n    <li>correct right-limit check when selecting double-width\n    characters.</li>\n\n    <li>change default answerback response to an empty string.</li>\n  </ul>\n\n  <h1><a name=\"xterm_100\" id=\"xterm_100\">Patch #100 - 1999/5/3 -\n  XFree86 3.9Pl</a></h1>\n\n  <ul>\n    <li>Correct a typo in the default resource value for\n    backarrowKeyIsErase: it was always true (reported by Bram\n    Moolenaar).</li>\n\n    <li>improve configure script's test if the installed xterm is\n    setuid, in case that is a symbolic link.</li>\n\n    <li>correct \"install-ti\" rule in Makefile.in, by not setting a\n    blank $TERMINFO value. That is interpreted as \".\" by ncurses'\n    tic.</li>\n  </ul>\n\n  <h1><a name=\"xterm_99\" id=\"xterm_99\">Patch #99 - 1999/5/2 -\n  XFree86 3.9Pk</a></h1>\n\n  <ul>\n    <li>correct logic that computes num_ptrs count of the number of\n    indices into the screen buffer. This is the maximum of the\n    colors and character-set indices; was incorrect in patch\n    #97.</li>\n\n    <li>correct argument type for sigsetjmp, incidental change in\n    patch #96's Unix88 PTY patch (reported by Bram Moolenaar).</li>\n\n    <li>correct description of secondary DA in ctlseqs.ms (reported\n    by Bram Moolenaar).</li>\n\n    <li>decouple the backarrowKey and ptyInitialErase resources by\n    adding a new resource backarrowKeyIsErase, to accommodate\n    people using applications which have hardcoded tests for\n    characters 8 and 127 rather than relying on the stty\n    settings.</li>\n\n    <li>modify the UTF-8 decoder so that all possible illegal UTF-8\n    sequences are properly represented by U+FFFD. This should be\n    very helpful for developers of code that output UTF-8 strings\n    for debugging. See the file utf-8-test.txt in\n    http://www.cl.cam.ac.uk/~mgk25/download/ucs-fonts.tar.gz for a\n    demonstration text that contains numerous illegal UTF-8 values.\n    (patch by Markus Kuhn).</li>\n\n    <li>correct a place in ScrnRefresh where I was filling the high\n    byte of a wide character with a space rather than a null\n    (reported by Markus Kuhn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_98\" id=\"xterm_98\">Patch #98 - 1999/4/26 -\n  XFree86 3.9Pk</a></h1>\n\n  <ul>\n    <li>correct data manipulation in unparseputc(), broken for\n    little-endian machines by patch #97's UTF-8 changes. This meant\n    that keyboard input on SunOS did not work, though Linux i386\n    was fine.</li>\n\n    <li>modify initialization for backarrowKey and logic for\n    initial-erase to prevent the initial-erase from overriding an\n    explicitly set backarrowKey resource (reported by Vikas\n    Agnihotri).</li>\n\n    <li>add a missing null-pointer check in ScrnRefresh, for the\n    wide-characters configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_97\" id=\"xterm_97\">Patch #97 - 1999/4/25 -\n  XFree86 3.9Pk</a></h1>\n\n  <ul>\n    <li>add configure script test for -lutil, needed for openpty\n    call when configuring xterm for Glibc-2.1 and Unix98 PTY's\n    (first reported by Martin Lorentz\"\n    &lt;m.lorentz@w12.link-goe.de&gt;).</li>\n\n    <li>completely parenthesize ifdef expressions for Glibc\n    (suggested by Bob Maynard).</li>\n\n    <li>add initial-erase options (-ie, +ie) to help message\n    (reported by Vikas Agnihotri).</li>\n\n    <li>remove duplicate definition of USE_USG_PTYS (reported by\n    Jeremy Buhler).</li>\n\n    <li>change termcap <em>kD</em> and terminfo <em>kdch1</em> to a\n    DEL (\\177). I overlooked this when separating the styles of\n    keyboard with the <em>sunKeyboard</em> resources in patch #94,\n    so that it normally matches the value of the stty erase\n    character:\n      <ul>\n        <li>Reported by Jae Gangemi\n        &lt;jgangemi@ccf.rutgers.edu&gt;, this caused emacs to not\n        process the DEL properly, combining it with succeeding\n        characters.</li>\n\n        <li>This does not appear to be related to a problem which I\n        have found with <em>screen</em>, which translates the stty\n        erase into the termcap <em>kD</em> or terminfo\n        <em>kdch1</em> value (depending on how it is linked) if the\n        $TERMCAP variable is set when <em>screen</em> is\n        invoked.</li>\n      </ul>\n    </li>\n\n    <li>add command-line options for enabling UTF-8 mode: -u8 and\n    +u8. The more obvious -utf8 and +utf8 would conflict with\n    xterm's -ut and +ut (utmp) options. The UTF-8 changes were\n    requested by Markus Kuhn &lt;Markus.Kuhn@cl.cam.ac.uk&gt;. This\n    patch does not complete UTF-8 implementation, but makes it\n    usable, i.e., display and refresh work, and I am able to\n    display the test cases which Markus provides. More work is\n    needed to complete this feature:\n      <ul>\n        <li>the control sequences for switching in/out of UTF-8\n        mode are partly implemented (don't use them). Similarly,\n        the switching between vt100 and tek4014 emulations when\n        UTF-8 mode is enabled will not work properly.\n          <p>You must use the -u8 command line option to use this\n          feature, as well as compile with the OPT_WIDE_CHARS\n          definition.</p>\n        </li>\n\n        <li>cut/paste only copies 8-bit characters.</li>\n\n        <li>logging is disabled in the wide-character\n        configuration</li>\n\n        <li>printing only writes 8-bit characters.</li>\n\n        <li>input only does 8-bit characters. This is the area that\n        I know least about.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_96\" id=\"xterm_96\">Patch #96 - 1999/4/19 -\n  XFree86 3.9Pj</a></h1>\n\n  <ul>\n    <li>modify Makefile.in to work with configure script's --srcdir\n    option. (patch by Jeremy Buhler\n    &lt;jbuhler@cs.washington.edu&gt;)</li>\n\n    <li>add checks for 'echo -n' equivalent for 8colors.sh and\n    16colors.sh scripts (reported by Vikas Agnihotri).</li>\n\n    <li>improve logic that looks for bold fonts to allow for\n    wildcards in the specification for normal fonts, and to ensure\n    that if a bold font is specified as normal, that xterm will\n    simulate a bold version of that using a one-pixel offset\n    overstrike (reported by Henrik Harmsen\n    &lt;harmsen@erv.ericsson.se&gt;).</li>\n\n    <li>correct horizontal spacing of double width line-drawing\n    characters that xterm simulates.</li>\n\n    <li>improve support for Unix98 PTY's, using patch in Debian bug\n    report #35650, by Topi Miettinen\n    &lt;Topi.Miettinen@medialab.sonera.fi&gt;. Andreas Jaeger says\n    this also corrects a permissions problem reported by\n    cat@zip.net.au</li>\n\n    <li>modify initial-erase logic to ensure that\n    <code>ttyModes</code> resource overrides it.</li>\n  </ul>\n\n  <h1><a name=\"xterm_95\" id=\"xterm_95\">Patch #95 - 1999/4/5 -\n  XFree86 3.9Ph</a></h1>\n\n  <ul>\n    <li>modify primary DA response to allow a '1' parameter.</li>\n\n    <li>add printer and national replacement character sets to\n    VT220 primary DA response.</li>\n\n    <li>document primary and secondary DA responses in\n    ctlseqs.ms</li>\n\n    <li>use the patch number (e.g., 95) in the secondary DA\n    response, providing user applications a means of determining\n    the version of xterm for feature comparison (request by Bram\n    Moolenaar).</li>\n\n    <li>make xterm respond to secondary DA when the decTerminalID\n    is set for VT100.</li>\n\n    <li>limit user-defined keys (DECUDK) to VT220-style keyboard\n    when sunKeyBoard resource is true.</li>\n\n    <li>modify ifdef's for Linux-2.2.x with Glibc-2.1 to work with\n    Glibc-2.1 and no Unix98 PTY support (patch from Andreas Jaeger\n    &lt;aj@arthur.rhein-neckar.de&gt;)</li>\n\n    <li>add optional feature (resource and command-line options) to\n    make xterm use the PTY's sense of erase character on startup,\n    rather than requiring it to be \\177, or set the PTY's erase\n    character to match xterm's configuration. Note that while\n    $TERMCAP is modified to reflect the actual configuration, the\n    terminfo kdch1 string is not (request by Dirk H Hohndel\n    &lt;hohndel@suse.de&gt;)</li>\n\n    <li>improve scripts in vttests to work with newer shells that\n    do not use 'echo -n'.</li>\n\n    <li>add fonts.sh example script</li>\n\n    <li>correct inequality in handling of \"#1\" font\n    specification.</li>\n\n    <li>correct call to XGetWMNormalHints() used for computing\n    maximum screen size; the size hints may not have been set.</li>\n\n    <li>begin implementation of support for wide-characters\n    (configure option --enable-wide-chars defines OPT_WIDE_CHARS,\n    invoke xterm with -wc option to activate this feature). This\n    patch optionally widens internal data structures, invokes the\n    16-bit text output rather than the 8-bit version and adds some\n    tables.</li>\n  </ul>\n\n  <h1><a name=\"xterm_94\" id=\"xterm_94\">Patch #94 - 1999/3/27 -\n  XFree86 3.9Pf</a></h1>\n\n  <ul>\n    <li>further fixes for terminfo: ka1, ka3, etc., differ between\n    the default xterm-xfree86 and xterm-vt220 entries.</li>\n\n    <li>change default (with sunKeyboard resource false) behavior\n    of the editing keypad \"Delete\" to send a 127, like xterm-r6.\n    The VT220-style <code>&lt;ESC&gt;[3~</code> is sent when\n    sunKeyboard is true (reported by Tomas Vanhala).</li>\n\n    <li>add parameters to function keys to indicate if shift,\n    control or alt are set. The codes are based on a description of\n    a DEC VT510 with a PC keyboard, from Jeffrey Altman\n    &lt;jaltman@watsun.cc.columbia.edu&gt;.</li>\n\n    <li>add control sequence 1035, set-num-lock action and num-lock\n    menu entry to control the use of the NumLock and Alt keys for\n    the Sun/PC and VT220 keyboard extensions.</li>\n\n    <li>implement DECSET/DECRST numeric keypad (DECNKM) mode.</li>\n\n    <li>modify terminfo and termcap to use recommended \"X Window\"\n    or \"X11\" names rather than \"X Windows\" (reported by Tomas\n    Vanhala).</li>\n\n    <li>suppress translation of shifted keypad \"+\" when sunKeyboard\n    is true.</li>\n\n    <li>workaround unexpected behavior (perhaps bug) in\n    XmbLookupString, which returns trash in the string buffer for\n    numlock and control-key combined with keypad-keys.</li>\n\n    <li>modify ScrollBarReverseVideo() to keep scrollbar border\n    visible when reverse video is toggled.</li>\n\n    <li>correct missing case for parameter 17 (set highlight color)\n    in dynamic colors control sequences.</li>\n\n    <li>extend dynamic colors control sequences to allow users to\n    determine the colors and font which are currently active.</li>\n\n    <li>minor tweak to OSC responses, to use BEL if the application\n    used that to end the request, rather than ST. This works better\n    with shell scripts, which may not handle an\n    <code>&lt;ESC&gt;backslash</code> very well.</li>\n\n    <li>separate menu settings for reverse video from that done\n    under program control.</li>\n\n    <li>corrected ifdef's for menus, which did not allow tek4014 to\n    be suppressed properly (reported by Clint Olsen).</li>\n\n    <li>changes for Linux-2.2.x with GLibc-2.1 and /dev/ptmx\n    support (integrated patch from Pavel Roskin):\n      <ul>\n        <li>main.c and resize.c were using different rules to\n        determine whether ATT should be defined (actually\n        USE_USG_PTYS is more apt).</li>\n\n        <li>copy definitions from main.c to resize.c to prevent\n        sys/stream.h and sys/ptem.h from inclusion when SYSV is not\n        defined</li>\n\n        <li>define CNUL if not already defined like other\n        variables.</li>\n\n        <li>/dev/tty does exist in Linux, but it doesn't mean, it\n        should be used. Therefore EACCES is now an acceptable\n        result.</li>\n\n        <li>ifdef'd several calls such as <code>ioctl (ptyfd,\n        I_PUSH, \"ptem\")</code> to build on Linux (I_PUSH is not\n        defined when sys/stropts.h is not included).</li>\n      </ul>\n    </li>\n\n    <li>initialize second \"ltc\" variable in main.c (reported by\n    David Dawes).</li>\n\n    <li>provide definition for USE_USG_PTYS in screen.c</li>\n\n    <li>add resource-files to install rule in standalone\n    Makefile.in</li>\n\n    <li>add sample scripts to illustrate titlebar controls,\n    resizing and colors.</li>\n  </ul>\n\n  <h1><a name=\"xterm_93\" id=\"xterm_93\">Patch #93 - 1999/3/14 -\n  XFree86 3.9Pd</a></h1>\n\n  <p>Here are several fixes and minor enhancements. The chief ones\n  are the fixes for NumLock mode and reverse video, since we had\n  become used to working around the problems.</p>\n\n  <ul>\n    <li>remove kfnd/kll/kslt strings from terminfo, because curses\n    applications do not necessarily return khome/kend pairs\n    (reported by Vikas Agnihotri).</li>\n\n    <li>implement NumLock resource which overrides the keyboard\n    tables for the special case of keypad keys. This is a problem\n    introduced in xterm by X11R6 changes, i.e., an ambiguity which\n    in effect discarded vt100 keypad support.</li>\n\n    <li>modify Sun/PC keyboard mode to extend this (emulation of\n    DEC vt100 keypad) to the remainder of the numeric keypad. Now,\n    the default operating mode of xterm uses the keyboard tables\n    as-is (except if the NumLock mode overrides), but provides good\n    vt100 keypad compatibility if the Sun/PC keyboard menu item is\n    checked.</li>\n\n    <li>separate command-line settings for reverse video from that\n    done under program control. This is a problem which was\n    introduced by X11R6. Though <em>correct</em>, most users are\n    confused by allowing the reset command to undo the effect of\n    the command-line <kbd>-rv</kbd> option.</li>\n\n    <li>add description of function keys, keypad and cursor keys to\n    ctlseqs.ms</li>\n\n    <li>add terminfo entries for xterm-vt52, xterm-sun and\n    xterm-hp</li>\n\n    <li>correct typo (missing case value) for DECSET 35,\n    enable/disable shifted keypad action and a few compiler\n    warnings (reported by Zdenek Sekera &lt;zs@sgi.com&gt;).</li>\n\n    <li>correct reporting of color values 8-15 in DECRQSS (reported\n    by Vikas Agnihotri).</li>\n\n    <li>modify parsing of ttyModes resource to recognize \"^-\" as\n    \"undef\" (requested by Tomas Vanhala).</li>\n\n    <li>integrate/extend changes to add iconify/maximize actions\n    (from Edward S. Arthur &lt;eda@ultranet.com&gt;).</li>\n\n    <li>add control sequences for maximizing/restoring window, and\n    for reporting maximum screen size.</li>\n\n    <li>add 'interpret' action, to support local function-key\n    interpretation. Used properly, this makes most of the\n    specialized actions of xterm redundant.</li>\n\n    <li>add control sequence private modes 1051, 1052 and 1052, for\n    setting the Sun and HP function key modes, and for setting the\n    Sun/PC keyboard mode.</li>\n\n    <li>add configure option --disable-maximize</li>\n\n    <li>add configure option --disable-num-lcok</li>\n\n    <li>extend descriptions of configure script options in\n    INSTALL.</li>\n  </ul>\n\n  <h1><a name=\"xterm_92\" id=\"xterm_92\">Patch #92 - 1999/2/5 -\n  XFree86 3.9Nz</a></h1>\n\n  <ul>\n    <li>increase buffer size for tgetent (i.e., termcap) to 1500.\n    This fixes a problem where <em>screen</em> is built using\n    ncurses or GNU termcap and <em>xterm</em> is built using the\n    standard termcap interface. The former does not limit the\n    termcap size, while the latter is assumed to be no longer than\n    1023 characters. The <em>screen</em> program's termcap entry is\n    about 1200 characters long.</li>\n\n    <li>change update_menu_item() to a function, to simplify\n    debugging. This also reduces the executable by 4Kb.</li>\n\n    <li>add control sequences for DECSET 30, 1010, 1011 like rxvt\n    (enable or disable some features that were only settable via\n    resources or command line arguments).</li>\n\n    <li>add control sequence for DECSET 35, which enables/disables\n    the shifted keypad functions.</li>\n\n    <li>add support for switching font sizes, by stepping through\n    the font menu using shifted keypad plus and minus.</li>\n\n    <li>correct missing initialization of tekInhibit and tekSmall\n    resources.</li>\n\n    <li>correct ifdef's in charproc.c for XtNgeometry and\n    XtCGeometry (reported by Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_91\" id=\"xterm_91\">Patch #91 - 1999/1/21 -\n  XFree86 3.9Nw</a></h1>\n\n  <ul>\n    <li>Implement logic to translate input characters which are\n    mapped when in vt220 National Replacement Character mode\n    (requested by Tomas Vanhala).</li>\n\n    <li>Resync configure scripts with my patches to autoconf\n    2.13</li>\n\n    <li>Change order of -lXmu and -lXext to accommodate cygwin32\n    (reported by Vikas Agnihotri).</li>\n\n    <li>Add \"-ti\" option to set terminal emulation level from\n    command line rather than via resource.</li>\n\n    <li>Simplify some of the preprocessor logic using #elif.</li>\n  </ul>\n\n  <h1><a name=\"xterm_90\" id=\"xterm_90\">Patch #90 - 1998/12/13 -\n  XFree86 3.9Nq</a></h1>\n\n  <p>This implements several small fixes and enhancements. The\n  chief one implements fallback support for line drawing characters\n  with fonts that do not include those characters. But I\n  implemented that last.</p>\n\n  <ul>\n    <li>If any of the glyphs in positions 0-31 (used by xterm to\n    implement the VT100 alternate character set) are zero-sized\n    (i.e., missing), xterm will reserve a normal space for the\n    glyph when drawing. I implemented a simple stroke-drawing\n    function to draw the line-drawing characters and a couple of\n    the other (simpler) characters such as diamond. (This was\n    suggested by Vikas Agnihotri).</li>\n\n    <li>Modify the computation of doublesize characters to work\n    around font servers which shift the scaled characters up/down\n    or do not give the correct width.</li>\n\n    <li>Add popup menu item and corresponding resource settings to\n    disable the font-scaling logic for doublesize characters to\n    work around (older) font servers which simply do not draw the\n    fonts scaled to the size that they said they would. I see this\n    problem on a SunOS system running X11R5; the X11R6 servers seem\n    well behaved.</li>\n\n    <li>Implement new escape sequence, private mode 1049, which\n    combines the switch to/from alternate screen mode with screen\n    clearing and cursor save/restore. Unlike the existing escape\n    sequence, this clears the alternate screen when switching to it\n    rather than when switching to the normal screen, thus retaining\n    the alternate screen contents for select/paste operations.\n      <p>When I implemented the popup menu entry to toggle between\n      the normal and alternate screens, I considered only pasting\n      from the normal screen to the alternate; this improvement\n      allows either direction.</p>\n    </li>\n\n    <li>Changed the termcap and terminfo for xterm-xfree86 and\n    xterm-8bit to use the new 1049 private mode.</li>\n\n    <li>Modify the logic which switches between normal and\n    alternate screens so that the save/restore cursor operations\n    apply only to the current screen. That means that applications\n    which use the terminfo smcur/rmcur or termcap ti/te\n    capabilities will restore the cursor to the original position\n    on the normal screen rather than to the most recent place where\n    a save-cursor operation was performed.\n      <p>I note that a real VT100 terminal would not behave in this\n      way, but it is a moot point since the VT100 does not\n      implement alternate screen, and therefore the save/restore\n      cursor sequence would not be used in this context. I reviewed\n      the logic which switches between normal and alternate screens\n      based on some recent newsgroup postings as well as a proposed\n      patch in the Debian group which attempts to do this (the\n      patch has a bug, however, so I did not use it).</p>\n    </li>\n\n    <li>Add popup menu entry for toggling the titeInhibit\n    resource.</li>\n\n    <li>Add new resource answerbackString, which overrides the\n    default \"xterm\" returned by xterm when responding to an ENQ\n    (control/E) character (request by Rajesh Vaidheeswarran\n    &lt;rv@fore.com&gt;).</li>\n\n    <li>Add new resource keyboardDialect for setting the NRC\n    display character set (request by Tomas Vanhala, who notes that\n    I should add logic to translate the keyboard as well).</li>\n\n    <li>Add new command-line option and corresponding resources for\n    making xterm generate escape sequences compatible with HP\n    terminals. Like the existing Sun escape sequences, this is\n    available as a popup menu item. It is enabled by the configure\n    script with the option --enable-hp-fkeys (requested by Toni\n    Mueller &lt;sales@oeko.net&gt;).</li>\n\n    <li>Add configure script option --disable-boxchars to disable\n    the fallback support for line drawing characters.</li>\n\n    <li>Fix ifdef's for configure script --disable-ansi-color, and\n    reviewed all configure options to ensure that all can be\n    enabled/disabled appropriately.</li>\n\n    <li>Update config.guess and config.sub, from Lynx.</li>\n  </ul>\n\n  <h1><a name=\"xterm_89\" id=\"xterm_89\">Patch #89 - 1998/11/20 -\n  XFree86 3.9Nm</a></h1>\n\n  <p>This patch completes the implementation of double-sized\n  character support for the VT100 emulation, and fixes a few minor\n  bugs:</p>\n\n  <ul>\n    <li>corrected the cursor position in HideCursor, which did not\n    multiply the column by two when in doublesize mode. This bug,\n    which did not appear in normal use, dates back to my original\n    <a href=\"#xterm_44\">changes</a> to partly implement\n    double-sized characters. I noticed it when cat'ing a typescript\n    from vttest's double-sized character test.</li>\n\n    <li>ensure that the current line is repainted when switching\n    between single and double width characters.</li>\n\n    <li>reduce the number of bits used for double-sized character\n    coding from 3 to 2, to make more room for soft-font codes.</li>\n\n    <li>copy newer ifdef's from the XFree86 3.3.3 release's main.c,\n    which address details of glibc and powerpc.</li>\n\n    <li>moved definition of DECL_ERRNO in xterm.h to match XFree86\n    3.3.3</li>\n\n    <li>modify <em>resize</em> to remove the ifdef on SVr4 that\n    suppressed printing the script for $LINES and $COLUMNS.\n    Solaris' resize utility does this; suppressing the behavior is\n    unnecessary.</li>\n  </ul>\n\n  <p>I tested the double-sized characters using vttest and the\n  xfsft patch. These fonts worked reasonably well:</p>\n\n  <pre>\n        -bitstream-courier-medium-r-normal--0-0-0-0-m-0-iso8859-1\n        9x15\n</pre>\n  <p>The iso8859 font does not include box characters, of course,\n  but looks good.</p>\n\n  <h1><a name=\"xterm_88\" id=\"xterm_88\">Patch #88 - 1998/10/31 -\n  XFree86 3.9Nk and 3.3.2h</a></h1>\n\n  <p>This refines my #85 patch by checking for a case where the\n  font server returns a bold font that does not quite correspond to\n  the normal font. When I asked for a bold version of the 6x12\n  font, the font server returned a near equivalent where the ascent\n  and descent values did not match, causing xterm to leave lines\n  across the display. This patch makes xterm reject that type of\n  mismatch, falling back to the old font behavior.</p>\n\n  <h1><a name=\"xterm_87\" id=\"xterm_87\">Patch #87 - 1998/10/21 -\n  XFree86 3.9Nj and 3.3.2f</a></h1>\n\n  <p>This corrects a problem reported by Stefan Dalibor. My table\n  entries for the <em>printerExtent</em> and\n  <em>printerFormFeed</em> resources used the wrong types for\n  sizeof, causing the printer to not work properly on some\n  platforms because the <em>printAttributes</em> resource was\n  overwritten (e.g., Digital Unix with DEC Alpha).</p>\n\n  <p>I reviewed all of the resource table entries and fixed a\n  potential problem with <em>resizeGravity</em>, which was typed as\n  <em>int</em> rather than <em>XtGravity</em>.</p>\n\n  <h1><a name=\"xterm_86\" id=\"xterm_86\">Patch #86 - 1998/10/14 -\n  XFree86 3.9Nj and 3.3.2e</a></h1>\n\n  <p>A small fix: when switching to/from the continuous mouse\n  reporting mode, the event mask was incorrect if xterm was built\n  under X11R5 because the original data was saved under an ifdef\n  for active-icon.</p>\n\n  <h1><a name=\"xterm_85\" id=\"xterm_85\">Patch #85 - 1998/10/12 -\n  XFree86 3.9Nj and 3.3.2e</a></h1>\n\n  <p>Some cleanup (I noticed the pixel droppings a few months ago\n  after getting a new 17\" monitor):</p>\n\n  <ul>\n    <li>split-out the functions that load/reload fonts for xterm as\n    new file fontutils.c to extend them to support automatic\n    loading of bold font corresponding to the normal font. Adapted\n    logic from EMU 1.3 for this purpose. This fixes most\n    occurrences of pixel droppings from bold characters.</li>\n\n    <li>modified by renaming variables and adding casts to permit\n    compile with g++.</li>\n\n    <li>modify headers so they can all be compiled without order\n    dependencies, and use bracketed rather than quoting includes to\n    allow compile from separate directory.</li>\n\n    <li>renamed xtermm terminfo entry to xterm-mono, to avoid\n    conflict with Solaris entry now in ncurses.</li>\n  </ul>\n\n  <h1><a name=\"xterm_84\" id=\"xterm_84\">Patch #84 - 1998/10/9 -\n  XFree86 3.9Ni and 3.3.2e</a></h1>\n\n  <p>Several small fixes and enhancements, including a patch from\n  Bjorn Helgaas:</p>\n\n  <ul>\n    <li>correct initialization of TERMCAP environment variable,\n    which was frequently set to garbage on non-Linux systems\n    because \"termcap\" and \"newtc\" contained random data from the\n    stack.</li>\n\n    <li>remove the LINEWRAPPED attribute from lines as they are\n    cleared. Previously, the attribute was set but never\n    cleared.</li>\n\n    <li>make word and line selections work even when lines are\n    wrapped by xterm. Previously, selections were limited to one\n    screen line.</li>\n  </ul>\n\n  <p>as well as</p>\n\n  <ul>\n    <li>modify logic for line-wrapping to reset the associated flag\n    if the application deletes a character. This fixes a problem\n    reported by Bjorn Helgaas where word/line selection would still\n    wrap even after deleting characters from the first line.</li>\n\n    <li>add kll/kH capabilities to xterm-xfree86 entries in termcap\n    and terminfo (request by Michael Schroeder).</li>\n\n    <li>shorten descriptions in termcap to make resolved entries\n    all shorter than 1023 character limit.</li>\n\n    <li>use DECSTR control sequence to shorten initialization and\n    reset strings in xterm-xfree86 termcap and terminfo.</li>\n\n    <li>use rmul/smul and rmir/smir in xterm-r5 terminfo to match\n    termcap.</li>\n\n    <li>correct typos in initialization and reset strings in\n    xterm-r5 termcap and terminfo.</li>\n\n    <li>disable special translations of key symbols (the backarrow\n    key, the editing keypad and the keypad \"+\") when a modifier\n    other than shift, control or numlock is used. This makes xterm\n    handle the meta key as expected by people using emacs (reported\n    by Pete Harlan &lt;harlan@pointofchoice.com&gt; in\n    linux.debian.user newsgroup).</li>\n  </ul>\n\n  <h1><a name=\"sync_83\" id=\"sync_83\">Resync #83 - 1998/10/7 -\n  XFree86 3.3.2e</a></h1>\n\n  <p>Merge changes through patch #83 with the 3.3.2e version.</p>\n\n  <p>This follows a change from XFree86 CVS which adds checks for\n  non-null return from malloc (patch by Matthieu Herrb).</p>\n\n  <h1><a name=\"xterm_83\" id=\"xterm_83\">Patch #83 - 1998/8/25 -\n  XFree86 3.9Nb</a></h1>\n\n  <p>Several small fixes and enhancements:</p>\n\n  <ul>\n    <li>add configure test to infer if xterm should be installed\n    setuid based on previously installed xterm (reported by Stephen\n    Marley and Stefan Dalibor).</li>\n\n    <li>implement quasi-continuous mouse reporting (integrated\n    patch by Jason Bacon).</li>\n\n    <li>correct control sequences transmitted by function keys F1\n    to F4 when sunFunctionKeys resource is true (it was still using\n    the VT100 control sequences).</li>\n\n    <li>modify handling of backarrow key so that the control\n    modifier toggles the backspace/delete interpretation set by the\n    backarrowKey resource.</li>\n\n    <li>limit the row and column values used to report mouse\n    position.</li>\n  </ul>\n\n  <p>From resync with XFree86 3.9Nb:</p>\n\n  <ul>\n    <li>add support for the VSTATUS control character (patch by\n    Robert Earl &lt;rearl@teleport.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_82\" id=\"xterm_82\">Patch #82 - 1998/7/15 -\n  XFree86 3.9Aj</a></h1>\n\n  <p>Bug fix for patch #81:</p>\n\n  <ul>\n    <li>remove an #undef for NBBY, which caused compile problem on\n    FreeBSD (reported by David Dawes).</li>\n  </ul>\n\n  <h1><a name=\"xterm_81\" id=\"xterm_81\">Patch #81 - 1998/7/14 -\n  XFree86 3.9Aj</a></h1>\n\n  <p>More bug fixes:</p>\n\n  <ul>\n    <li>fix conflicting ifdef's for TIOCSLTC when building with\n    Linux on AXP aka DEC Alpha (reported by Robin Cutshaw).</li>\n\n    <li>correction to patch #79, move assignment for\n    *utptr-&gt;ut_user = 0; back into non-SVR4 ifdef in main.c,\n    since this clobbers username on Solaris 2.5.1 (analysis by Will\n    Day &lt;willday@rom.oit.gatech.edu&gt;).</li>\n\n    <li>corrected khome/kend in xterm-8bit terminfo\n    description.</li>\n\n    <li>improve cursor color by making it always the reverse of\n    fg/bg unless the cursorColor resource is set, i.e., to\n    something other than the default foreground (reported by Vikas\n    Agnihotri and Bram Moolenaar).</li>\n\n    <li>minor fixes for compiler warnings, including a syntax error\n    in the AMOEBA ifdef's.</li>\n  </ul>\n\n  <p>From resync with XFree86 3.9Aj:</p>\n\n  <ul>\n    <li>correction to patch #73, supply missing #else for fallback\n    definitions of size_t, time_t (Robin Cutshaw\n    &lt;robin@intercore.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_80\" id=\"xterm_80\">Patch #80 - 1998/6/29 -\n  XFree86 3.9Ai</a></h1>\n\n  <p>This fixes a couple of items leftover or introduced by patch\n  79:</p>\n\n  <ul>\n    <li>take out the logic that suppresses editing-keypad in vt100\n    mode (those keys are too valuable to give up for a fine point\n    of emulation).</li>\n\n    <li>corrected a couple of places in terminfo where I missed\n    using the vt220-style editing-keypad codes for Find/Select\n    (mapped to Home/End).</li>\n\n    <li>checked termcap file against terminfo, fix several places\n    where it was inconsistent.</li>\n  </ul>\n\n  <h1><a name=\"xterm_79\" id=\"xterm_79\">Patch #79 - 1998/6/28 -\n  XFree86 3.9Ai</a></h1>\n\n  <p>This patch fixes several small bugs:</p>\n\n  <ul>\n    <li>use X_EXTRA_LIBS in standalone Makefile.in (patch by Tomas\n    Vanhala).</li>\n\n    <li>add new resource 'oldXtermFKeys' which provides backward\n    compatibility for F1-F4 control sequences with TOG's\n    xterm.</li>\n\n    <li>determine the server's default foreground/background Pixel\n    values, needed if the -flipPixels X server option is used\n    (reported by David Dawes).</li>\n\n    <li>correct logic for F1-F4 function keys so that they generate\n    VT100 compatible escape sequences in VT220 mode, since that is\n    what the numeric keypad is supposed to do (reported by Ron\n    Johnson, Jr. &lt;ronjohn@communique.net&gt;).</li>\n\n    <li>modify logic for editing keypad to work more like VT220:\n    don't pass those codes in VT100-mode unless oldXtermFKeys mode\n    is set.</li>\n\n    <li>correct an interaction with the editing-keypad logic that\n    prevented backarrow key from sending a 127 for the delete key\n    (the 'remove' escape sequence was being sent instead).</li>\n\n    <li>use return-value from getuid() rather than the parameter,\n    to work on systems which do not update the latter (patch by\n    Kevin Buhr &lt;buhr@mozart.stat.wisc.edu&gt;)</li>\n\n    <li>correct scrollbar border color when toggling to/from secure\n    keyboard mode (patch by Jeff Uphoff\n    &lt;juphoff@tarsier.cv.nrao.edu&gt;)</li>\n\n    <li>modifications to terminfo file:\n      <ul>\n        <li>rename description to xterm-xfree86, adding an entry\n        'xterm' which is derived from xterm-xfree86 to simplify\n        customization.</li>\n\n        <li>change string for kdch1 from \\177 to \\E[3~, to address\n        complaints from Debian developers. (This applies to the key\n        labeled \"Delete\", and does not affect the backarrow\n        key).</li>\n\n        <li>add user-strings u6, u7, u8, u9 to entries to make them\n        work with Daniel Weaver's \"tack\" program.</li>\n\n        <li>modify xterm-24, xterm-bold, xterm-boldso entries to\n        disentangle them from explicit dependency upon\n        xterm-xfree86.</li>\n\n        <li>add generic 'xterm-color' entry.</li>\n\n        <li>minor corrections to xterm-xfree86, xterm-8bit,\n        xterm-r5 and xterm-r6 entries.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_78\" id=\"xterm_78\">Patch #78 - 1998/6/3 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>Again, most of the bulk of this patch is for ANSI conversion.\n  I used the IRIX compiler's -wlint option to find the remaining\n  functions that use K&amp;R syntax (since gcc does not do this\n  properly). Also, I changed the logic in the print code slightly\n  to close unwanted files before opening a pipe to the printer.\n  This may help in some configurations where the line printer hangs\n  until xterm closes the pipe.</p>\n\n  <h1><a name=\"xterm_77\" id=\"xterm_77\">Patch #77 - 1998/5/26 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>Most of the bulk of this patch is to convert the extended C\n  (K&amp;R functions with prototypes) to ANSI. I verified that on\n  Linux by comparing object files, to ensure that I did not, for\n  example, interchange parameters in the function declarations.</p>\n\n  <p>The rest of the patch fixes several minor bugs, and adds a few\n  features:</p>\n\n  <ul>\n    <li>back-out my use of ncurses \"captoinfo -f\" option\n    (if/then/else/endif) formatting, since ncurses did not\n    correctly filter embedded newlines in terminfo capability\n    strings until _after_ ncurses 4.1, thus corrupting\n    setf/setb/sgr strings (reported by Darren Hiebert and\n    others).</li>\n\n    <li>document SGR 8, 28 (invisible/visible), add corresponding\n    capabilities to terminfo description.\n      <p>I would also add the 'prot protected capability, but the\n      control sequences for that would not be recognized or\n      properly ignored by the older xterm programs.</p>\n    </li>\n\n    <li>modify ChangeGroup to not suppress a null-resource, but\n    treat it as an empty string (recommended by Stefan\n    Dalibor).</li>\n\n    <li>add printerAutoClose resource to control whether printer is\n    closed when going offline. More than one person reports\n    problems (on Solaris 2.6 and Digital Unix 4.0) getting the\n    printer to proceed unless xterm exits; I think that it is a\n    problem flushing the pipe. Closing it ought to flush it.</li>\n\n    <li>adapt TOG fix-3 to in HandleKeymapChange and VTInitI18N\n    (but adapt XtStackAlloc/XtStackFree for clarity, as well as\n    fixing memory leak).</li>\n\n    <li>change calls on FillCurBackground to ClearCurBackground, in\n    effect using XClearArea rather than XFillRectangle when\n    clearing as a side-effect of scrolling and insertion (patch by\n    Alexander V Lukyanov)</li>\n\n    <li>correct some places where insert/delete did not _move_ the\n    color attributes, using memmove (patch by Alexander V Lukyanov\n    &lt;lav@long.yar.ru&gt;)</li>\n\n    <li>add ifdef's for __CYGWIN32__, for port to cygnus version\n    B19.1 (patch by Andrew Sumner\n    &lt;andrew_sumner@hotmail.com&gt;).</li>\n\n    <li>remove #define for hpux that turned on USE_SYSV_ENVVARS,\n    since this causes some applications (such as 'less') to get\n    incorrect $LINES and $COLUMNS values (reported by Clint\n    Olsen).</li>\n\n    <li>modify behavior for HP-UX, to set the \"reserved\" process\n    group controls to _POSIX_VDISABLE so the TIOCSLTC ioctl does\n    not produce an error (patch by Ben Yoshino\n    &lt;ben@wiliki.eng.hawaii.edu&gt;).</li>\n\n    <li>correct length of underlining, reducing it by one pixel to\n    avoid leaving a dot when the application does not clear the\n    whole screen I noticed this only recently myself (and other\n    people as well); it depends on the font chosen. A 6x10 font\n    shows it, but the other fonts from XTerm.ad do not. I also see\n    a similar problem with the emulation of bold fonts. (patch by\n    Sergei Laskavy &lt;Laskavy@cs.msu.su&gt;).</li>\n\n    <li>add include for Xos.h to xterm.h, to ensure proper\n    definitions (reported by Holger Veit).</li>\n\n    <li>update config.guess to recognize Unixware 2.1 and 7 (patch\n    by Mike Hopkirk &lt;hops@sco.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_76\" id=\"xterm_76\">Patch #76 - 1998/5/8 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>A fix for the print-window function, and some minor\n  cleanup:</p>\n\n  <ul>\n    <li>modify logic that closes pipe in the print-window function\n    to not use pclose, which does not work on all systems, since I\n    did not open the pipe with popen (reported by Stefan\n    Dalibor).</li>\n\n    <li>correct name of $(EXTRA_LOAD_FLAGS) imake variable\n    (reported by Stefan Dalibor).</li>\n\n    <li>guard logic in ChangeGroup() function against null pointer\n    (reported by Stefan Dalibor).</li>\n\n    <li>ensure that menu entry for toggling sunKeyboard resource is\n    initialized (reported by Branden Robinson\n    &lt;branden@purdue.edu&gt;).</li>\n\n    <li>gcc unused-variable warnings (reported by Bernd Ernesti\n    &lt;bernd@arresum.inka.de&gt;)</li>\n\n    <li>rename global variable 'buffer' to 'VTbuffer'</li>\n  </ul>\n\n  <h1><a name=\"xterm_75\" id=\"xterm_75\">Patch #75 - 1998/5/7 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>This incorporates fixes from several people, as well as some\n  improvements that I made based on feedback from users:</p>\n\n  <ul>\n    <li>add option to standalone configure script,\n    \"--with-own-terminfo-dir\", which causes xterm to pass a\n    predefined value of $TERMINFO to the application. Also use this\n    value in install rule \"make install-ti\", for the standalone\n    configure script. (patch &amp; feedback from Tor Lillqvist\n    &lt;tml@hemuli.tte.vtt.fi&gt;)</li>\n\n    <li>change ifdef's for \"hpux\" to \"__hpux\" (patch by Tor\n    Lillqvist). The imake configuration uses the former, but the\n    latter is predefined by HP's compilers.</li>\n\n    <li>define USE_SYSV_ENVVARS for HP-UX, curses does not use\n    $TERMCAP (patch by Tor Lillqvist).</li>\n\n    <li>on HP-UX, use the /dev/ptym/clone device to allocate PTY's.\n    Works both on HP-UX 9 and 10. (patch by Tor Lillqvist).</li>\n\n    <li>modify configure script to obtain the $(EXTRA_LOADFLAGS)\n    value from imake, needed for compiling under DEC OSF/1\n    (reported by Stefan Dalibor)</li>\n\n    <li>modify print-window action so that the printer is closed\n    after printing a window, unless the printer was already opened\n    (i.e., by an application running in the window). This makes the\n    printing complete without having to exit xterm, since not all\n    systems treat fflush through a pipe very well (reported by\n    Stefan Dalibor)</li>\n\n    <li>modify printing code so that the ^M's are not printed if\n    the printAttribute resource is set to zero (request by Stefan\n    Dalibor).</li>\n\n    <li>correct typo in xterm.man, for the default value of\n    printAttribute (reported by Stefan Dalibor).</li>\n\n    <li>correct printing code so that the alternate character set\n    is printed, like other attributes, with escape sequences.</li>\n\n    <li>correct termcap description, removing spurious 'm'\n    character from the 'op' capability (reported by Greg Woods\n    &lt;woods@weird.com&gt;).</li>\n\n    <li>correct trace code so that the initial timestamp is\n    set.</li>\n\n    <li>correct/modify utmp data for the Linux glibc 2\n    configuration, so that the ut_line member is set before using\n    it to update wtmp (patch by Bill Nottingham\n    &lt;wen1@cec.wustl.edu&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_74\" id=\"xterm_74\">Patch #74 - 1998/4/27 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This corrects a couple of recent bugs and adds a new\n  resource:</p>\n\n  <ul>\n    <li>modify definition of TRACE_CHILD so that it does not\n    conflict with ifdef's for USE_USG_PTYS in main.c (reported by\n    Vikas Agnihotri &lt;VikasA@att.com&gt; and Stefan\n    Dalibor).</li>\n\n    <li>correct ownership of file (actually pipe) written by the\n    print controls. When undoing the setuid changes in patch #69, I\n    overlooked this. Now xterm forks a process which resets setuid\n    and routes the printer data as the real user.</li>\n\n    <li>add a new resource, \"printAttributes\", which controls\n    whether color attributes (or any attributes) are sent to the\n    printer.</li>\n  </ul>\n\n  <h1><a name=\"xterm_73\" id=\"xterm_73\">Patch #73 - 1998/4/25 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>implements a print-window facility for xterm. Though useful\n    in itself, I added it as part of some debugging which I am\n    doing. (Occasionally during an exposure event xterm fails to\n    restore the proper colors for highlighted text, and printing\n    the screen will show the internal states nicely).\n      <p>The print facility now also displays the color\n      information. (I will probably make this a resource).</p>\n    </li>\n\n    <li>modified the xterm-16color terminfo description to use the\n    setaf and setab strings, which is a little more efficient\n    (requested by Stephen Marley).</li>\n\n    <li>reduced some clutter of the ifdef/includes (e.g., stdlib.h,\n    unistd.h, errno) making the configure script test for these.\n      <p>I removed the symbols Size_t and Time_t, since they no\n      longer serve a useful purpose.</p>\n    </li>\n\n    <li>added some debugging traces to show the initial screen\n    size, and the success/failure of the ioctl calls pass handle\n    window resizing events to the application (for Clint Olsen).\n      <p>I also modified the trace code to produce two files since\n      some of the information is produced by the child process. So\n      now they are Trace-parent.out and Trace-child.out</p>\n    </li>\n\n    <li>updated configure test for ANSI compiler options to handle\n    a special case for HP-UX 10.x (reported by Clint Olsen).</li>\n  </ul>\n\n  <h1><a name=\"xterm_72\" id=\"xterm_72\">Patch #72 - 1998/4/17 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This is a patch from Chris Siebenmann\n  &lt;cks@hawkwind.utcs.toronto.edu&gt;, which I have cleaned up a\n  little, and integrated into the configure script.</p>\n\n  <p>From his description:</p>\n\n  <blockquote>\n    <p>This set of patches is the latest incarnation of patches\n    originally written by Ian! D Allen, then of the University of\n    Waterloo and now of who knows where; I have been carrying them\n    forward from xterm to xterm ever since about X11R4. What they\n    do is add an option so that when an iconified xterm receives\n    output it prepends '*** ' to its icon title and (optionally)\n    beeps the bell; deiconifying the xterm removes the '*** '. Over\n    the years I've found this to be incredibly convenient for\n    monitoring all sorts of low-activity things.</p>\n  </blockquote>\n\n  <h1><a name=\"xterm_71\" id=\"xterm_71\">Patch #71 - 1998/4/12 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This patch is a slightly modified version of one by Richard\n  Braakman, which prevents buffer overflow in the input-method and\n  preedit-type parsing in xterm. I changed a couple of details to\n  make the code more maintainable, and looked for similar things -\n  copying into a fixed-size buffer (found none, though I did spot\n  an unused variable).</p>\n\n  <h1><a name=\"xterm_70\" id=\"xterm_70\">Patch #70 - 1998/3/29 -\n  XFree86 3.9Af and 3.3.2</a></h1>\n\n  <p>This patch corrects some minor bugs in xterm, and fills in\n  some more details in the VT220 emulation:</p>\n\n  <ul>\n    <li>modify Imakefile to use SpecialCObjectRule for menu and\n    data modules, making xterm build properly if logging is enabled\n    (patch by Scott Sewall &lt;scott@iprg.nokia.com&gt;).</li>\n\n    <li>restore \"ich\" capability to terminfo entries, since Michael\n    Schroeder points out that \"ich1\" is the one which is the\n    problem in Solaris vi.</li>\n\n    <li>correct color of cursor, which would disappear on\n    inverse-video since the initialization did not compare the\n    cursor color against both foreground and background (reported\n    by Olivier Calle).</li>\n\n    <li>correct abbreviation-test for -version and -help options,\n    making command-line option -vb work (reported by Stefan\n    Dalibor).</li>\n\n    <li>correct a dependency between ifdef's for OPT_I18N_SUPPORT\n    and OPT_INPUT_METHOD (reported by Stefan Dalibor).</li>\n\n    <li>split-out character-set translations as new module\n    charsets.c, to implement VT220 national replacement character\n    sets (a mode where some of the characters are displayed as\n    specific European glyphs). This relies on xterm using an ISO\n    8859-1 font (approach suggested by Kenneth R. Robinette\n    &lt;zkrr01@mailbox.neosoft.com&gt;).</li>\n\n    <li>correct a missing increment, which made SS2 and SS3\n    controls repeat the shifted character.</li>\n\n    <li>add xterm-nrc to terminfo to illustrate the VT220 national\n    replacement character sets.</li>\n\n    <li>reformat terminfo using new ncurses tic option \"-f\", which\n    makes if/then/else/endif expressions easier to read.</li>\n  </ul>\n\n  <h1><a name=\"xterm_69\" id=\"xterm_69\">Patch #69 - 1998/3/16 -\n  XFree86 3.9Ad and 3.3.2</a></h1>\n\n  <p>This corrects the problem in xterm with utmp, reported by\n  Olivier Calle &lt;olivier@tc.fluke.com&gt; as well as some other\n  people after the XFree86 3.3.2 release.</p>\n\n  <p>The error was introduced by my patch #53 in XFree86 3.9r\n  (October 1997).</p>\n\n  <p>The correction removes the reset of setuid/setgid before the\n  main event loop, and solves the problem which I had worked around\n  in a different manner: for some reason, the particular waitpid()\n  call in creat_as() hangs, does not return when the child process\n  exits. I changed the ifdef's to force the Linux configuration to\n  use wait() instead. This call appears to work properly on other\n  platforms such as SunOS and Solaris.</p>\n\n  <p>I also added tests in the standalone configure script to check\n  for the existence of waitpid().</p>\n\n  <h1><a name=\"xterm_68\" id=\"xterm_68\">Patch #68 - 1998/3/4 -\n  XFree86 3.9Ad and 3.3.1z</a></h1>\n\n  <p>This corrects another problem with the logic for\n  highlightColor resource. As reported by David Dawes:</p>\n\n  <blockquote>\n    <p>I've just noticed a problem with with the \"inverse\" control\n    sequence (ESC[7m) with the 3.3.2 xterm. What it does is sets\n    the background black, and the text the usual foreground colour\n    rather than simply swapping the foreground/background.</p>\n  </blockquote>\n\n  <p>This appears to be because when I added logic to check that\n  the highlightColor was distinct from foreground and background\n  colors, I did not add a further check to see that it was not\n  black (I would make an explicit check for the resource not being\n  set, but see nothing definite in the headers that would let me\n  reference an explicitly-undefined Pixel value, though there are\n  some implications in xpm.h). But this should work.</p>\n\n  <h1><a name=\"xterm_67\" id=\"xterm_67\">Patch #67 - 1998/2/23 -\n  XFree86 3.9Ad and 3.3.1e</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>improve test for highlightColor so that xterm does not\n    attempt to use that unless it is different from the foreground\n    and background colors (reported by Stefan Dalibor\n    &lt;Stefan.Dalibor@informatik.uni-erlangen.de&gt;.\n      <p>I could not reproduce this until I noticed that the -rev\n      option exposed it nicely.</p>\n    </li>\n\n    <li>remove ich and ich1 from xterm and xterm-8bit terminfo\n    descriptions. SVr4 terminfo documents that you must not combine\n    these with smir/rmir, but ncurses allows it, opening a hole.\n    Solaris 2.6 vi does not work properly if it is using a terminfo\n    description when these are combined, since it was written to\n    accommodate old terminals that required it (reported by Stephen\n    Marley).</li>\n\n    <li>restore 1-pixel overlap of scrollbar border with left edge\n    of window (reported by Jim Burmeister\n    &lt;jimb@metrolink.com&gt;).</li>\n\n    <li>add a configure option, --enable-logfile-exec, which allows\n    the user to specify a pipe for logfile. This defines\n    ALLOWLOGFILEEXEC.</li>\n\n    <li>makes the ALLOWLOGFILEEXEC code compile &amp; run, if\n    configured.</li>\n\n    <li>minor documentation nits.</li>\n  </ul>\n\n  <h1><a name=\"xterm_66\" id=\"xterm_66\">Patch #66 - 1998/2/16 -\n  XFree86 3.9Ad and 3.3.1d</a></h1>\n\n  <p>This fixes the problem reported with failure to build the\n  <em>resize</em> program (BSDI, OSF/1) due to not having\n  &lt;termcap.h&gt;, by changing the ifdef to one that would be set\n  only if the file exists (not currently specified, except by the\n  standalone configure script). We do not really need to include\n  &lt;termcap.h&gt; to build, but only for a clean compile, since\n  it may declare the tgetent() prototype. I also updated the\n  man-page for <em>resize</em>, since I had recently noticed that\n  it can be used to resize <em>xterm</em> using the \"Sun\" control\n  sequences option.</p>\n\n  <h1><a name=\"xterm_65\" id=\"xterm_65\">Patch #65 - 1998/2/14 -\n  XFree86 3.9Ad and 3.3.1c</a></h1>\n\n  <p>This is a small patch to xterm's 8-bit terminal description. I\n  noticed while testing ncurses that I had specified the wrong\n  (VT100-style) codes for the F1-F4. Xterm only uses VT220-style\n  function keys in 8-bit mode.</p>\n\n  <h1><a name=\"xterm_64\" id=\"xterm_64\">Patch #64 - 1998/2/8 -\n  XFree86 3.9Ad</a></h1>\n\n  <p>This fixes the following problems with xterm:</p>\n\n  <ul>\n    <li>save/restore the ANSI foreground and background colors with\n    the other visible attributes in the save-cursor and\n    restore-cursor operations. This works around a problem with\n    vim, which apparently assumed that switching between the normal\n    and alternate screens resets the colors (reported by Jim Battle\n    &lt;jb@chromatic.com&gt;).\n      <p>It would be nice to implement save/restore cursor as a\n      stack (and solve this type of problem completely), but that\n      would lead to incompatibility with applications which assume\n      they are running with a VT100 or VT220.</p>\n    </li>\n\n    <li>corrects behavior of a restore-cursor operation which does\n    not follow a save-cursor (it is supposed to set the character\n    sets to a known initial state).</li>\n\n    <li>extends the sunKeyboard resource (and menu toggle) to\n    modify the home, end and delete keys on a Sun or PC editing\n    keypad, making them generate codes compatible with DEC VT220's\n    Find, Select and Remove keys.</li>\n\n    <li>corrects a length in checking command-line options, which\n    caused the \"-help\" message to not work when X was not\n    running.</li>\n\n    <li>add some detail to the man-page (requested by Jason Bacon\n    &lt;acadix@execpc.com&gt;)</li>\n\n    <li>modify the standalone configure script to ignore the broken\n    nsl and socket libraries on IRIX 6.2 (the ones on 5.2 also are\n    broken, so this change just widens the check for the system\n    version number).</li>\n  </ul>\n\n  <h1><a name=\"xterm_63\" id=\"xterm_63\">Patch #63 - 1998/2/5 -\n  XFree86 3.9Ad</a></h1>\n\n  <p>This is another patch from Bjorn Helgaas\n  &lt;helgaas@rsn.hp.com&gt;, which I've reviewed (and learned\n  some). Following are his notes:</p>\n\n  <p>I poked around some more and finally got xterm-62 to build and\n  run cleanly on HP-UX 10.20. Here are the patches. They look sort\n  of ugly, so here's a little explanation:</p>\n\n  <ul>\n    <li>aclocal.m4: Removed side effects from the AC_CACHE_VAL\n    commands in CF_FUNC_TGETENT. Previously, LIBS was set inside\n    AC_CACHE_VAL, which worked fine the first time configure was\n    run, but failed if there were cached values.</li>\n\n    <li>aclocal.m4: Added temporary setting of LIBS before\n    AC_TRY_LINK in CF_FUNC_TGETENT. Previously, the last value set\n    by the AC_TRY_RUN loop was used, so only -lcurses was\n    checked.</li>\n\n    <li>configure.in: Added temporary setting of CPPFLAGS before\n    AC_CHECK_HEADERS for X11 files. Previously\n    &lt;X11/DECkeysym.h&gt; and &lt;X11/Xpoll.h&gt; were found only\n    if they were in the compiler's default include directories,\n    even if `--x-includes=DIR' had been used or AC_PATH_XTRA had\n    found them elsewhere.</li>\n  </ul>\n\n  <p>The problem on HP-UX was that we were linking with -lcurses\n  rather than -ltermcap due to the second bullet above, and\n  apparently something in HP-UX curses is broken. This seems very\n  strange, because the only thing used is tgetent, which should\n  affect any tty/pty configuration, but I lost interest in tracking\n  down the exact problem.</p>\n\n  <h1><a name=\"xterm_62\" id=\"xterm_62\">Patch #62 - 1998/1/23 -\n  XFree86 3.9Ac</a></h1>\n\n  <p>This is a patch mostly by Bjorn Helgaas\n  &lt;helgaas@dhc.net&gt; (I added the os2main.c change, and a\n  little of the documentation). From Bjorn's description:</p>\n\n  <ul>\n    <li>If you use the \"-hc &lt;color&gt;\" option or set the\n    \"highlightColor\" resource, text is highlighted by changing only\n    the background color, rather than using reverse video. I find\n    this easier to read, especially when selecting multi-colored\n    text, and it is similar to the way Netscape shows\n    selections.</li>\n\n    <li>Most of the code changes are under \"#if\n    OPT_HIGHLIGHT_COLOR\". The principal exception is in screen.c,\n    where I added a couple calls to resetXtermGC(). This seems like\n    it could be a bug even without the color highlighting changes\n    (though I don't pretend to understand all the logic).</li>\n  </ul>\n\n  <h1><a name=\"xterm_61\" id=\"xterm_61\">Patch #61 - 1998/1/17 -\n  XFree86 3.9Ac</a></h1>\n\n  <p>This patch modifies the reset behavior of xterm slightly:</p>\n\n  <ul>\n    <li>change the terminfo entry so that rs1 (one of the strings\n    used by the 'reset' program) does a hard reset rather than\n    switching character sets. This is more in accord with other\n    terminal descriptions.</li>\n\n    <li>modifies the treatment of hard reset by the xterm program\n    to reset the saved lines.</li>\n\n    <li>corrects hard reset by also resetting user-defined keys,\n    i.e., DECUDK.</li>\n  </ul>\n\n  <h1><a name=\"xterm_60\" id=\"xterm_60\">Patch #60 - 1998/1/10 -\n  XFree86 3.9Ab</a></h1>\n\n  <p>This fixes some minor bugs and adds new functionality:</p>\n\n  <ul>\n    <li>add support for blinking text.\n      <ul>\n        <li>This does not actually cause the text to flash, but\n        text with the blink attribute can be displayed in color,\n        using new resources colorBL and colorBLMode.</li>\n\n        <li>If colors are not used, the blinking text will be\n        displayed as before (just like bold). The main purpose of\n        this is to make applications work properly when they assume\n        the emulator supports blinking text.</li>\n\n        <li>I did this by moving the per-cell LINEWRAPPED flag to a\n        per-line flag, to make room for the new BLINK flag. There\n        were no per-line flags, so this changes a lot of\n        logic.</li>\n      </ul>\n    </li>\n\n    <li>corrected missing save-cursor logic in the handling of SGR\n    1048 (the new control sequence I added in patch #54,\n    1997/10/17). Reported by Darren Hiebert.</li>\n\n    <li>flush the output of the transparent printing after each\n    line Reported by Tomas Vanhala\n    &lt;vanhala@ling.helsinki.fi&gt;.</li>\n\n    <li>correct the modes that are affected by save/restore cursor\n    by adding WRAPAROUND and PROTECTED.</li>\n\n    <li>corrected placement of one of the XSync calls that I added\n    in patch #51, 1997/9/15, which had the side-effect of writing\n    on the window border when the xterm was resizing from 132 to 80\n    columns.</li>\n\n    <li>work around an incompatibility of the XKB definition used\n    in xterm versus that symbol from IRIX 6.2's imake definitions\n    (by adjusting the standalone configure script).</li>\n  </ul>\n\n  <h1><a name=\"xterm_59\" id=\"xterm_59\">Patch #59 - 1998/1/5 -\n  XFree86 3.9Ab</a></h1>\n\n  <p>My last patch has an off-by-one error in the comparison for\n  argc. Douglas Kosovic &lt;douglask@dstc.edu.au&gt; showed me\n  where (he got a core dump). Also, I think this explains Clint\n  Olsen's problem, but the symptoms were more subtle (EINVAL for a\n  system call if the -display option is omitted).</p>\n\n  <h1><a name=\"xterm_58\" id=\"xterm_58\">Patch #58 - 1998/1/3 -\n  XFree86 3.9Ab</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>implement logic to permit xterm to work with proportional\n    fonts.\n      <ul>\n        <li>Thomas Wolff &lt;Thomas.Wolff@sietec.de&gt; requested\n        this (but it isn't exactly what he's asking for - that's a\n        more involved task).</li>\n\n        <li>I chose to do this by rendering the characters on a\n        fixed pitch, because it would not be useful for existing\n        applications to display varying numbers of characters on\n        each line.</li>\n\n        <li>Except that this forces the display to be wider, it\n        works reasonably well. A couple of special cases (reverse +\n        colorBD, for example) do not display with proper colors,\n        since the inter-character gaps are painted with the\n        background.</li>\n      </ul>\n    </li>\n\n    <li>added a version number to the program (several people have\n    requested this).</li>\n\n    <li>make the -version and -help options interpreted before the\n    program attempts to open the display.</li>\n\n    <li>minor reorganization of the man-page (ordered the options,\n    resources and translations alphabetically - and eliminated some\n    duplication).</li>\n\n    <li>corrected a misspelled filename in Makefile.in, and added a\n    lint rule.</li>\n\n    <li>updated the configure script to correct behavior when it\n    cannot find imake, as well as to fix the IRIX+gcc build\n    (conflict with /usr/include).</li>\n\n    <li>regenerated the configure script with a newer patch to\n    autoconf that fixes a problem with environment space vs the\n    configure --help message.</li>\n  </ul>\n\n  <h1><a name=\"xterm_57\" id=\"xterm_57\">Patch #57 - 1997/12/26 -\n  XFree86 3.9Aa</a></h1>\n\n  <p>This patch is mostly concerned with the standalone configure\n  script; a few minor corrections are added:</p>\n\n  <ul>\n    <li>add configure option --disable-tek4014, to allow xterm to\n    be built without the tek4014 emulation.</li>\n\n    <li>add configure option --with-terminal-type, to allow xterm\n    to be compiled with default $TERM value other than \"xterm\"\n    (e.g., \"xterm-16color\") -- requested by Stephen Marley\n    &lt;stephen@memex.com&gt;.</li>\n\n    <li>fix a typo in the configure --help message -- reported by\n    Darren Hiebert &lt;darren@hmi.com&gt;.</li>\n\n    <li>review diffs between main.c and os2main.c, to make them\n    more alike. (applies some minor bug-fixes to OS/2's\n    version).</li>\n\n    <li>add missing quotes in memmove/bcopy configure test</li>\n  </ul>\n\n  <h1><a name=\"xterm_56\" id=\"xterm_56\">Patch #56 - 1997/11/28 -\n  XFree86 3.9x</a></h1>\n\n  <p>This patch is based on analysis by Arfst Ludwig\n  &lt;arfst@luxor.IN-Berlin.DE&gt;, who reported:</p>\n\n  <blockquote>\n    <p>Setting the following resources xterm (all current versions)\n    receives a segmentation fault on &lt;Btn2Up&gt; after\n    scrolling:</p>\n\n    <pre>\n          *XTerm*VT100*translations:    #override \\\n              ~Shift~Ctrl&lt;Btn2Up&gt;: insert-selection(PRIMARY, CUT_BUFFER0)\\n\\\n              Shift~Ctrl&lt;Btn2Up&gt;:  insert-selection(CLIPBOARD, CUT_BUFFER1)\\n\\\n              ~Shift&lt;BtnUp&gt;:       select-end(PRIMARY, CUT_BUFFER0)\\n\\\n              Shift&lt;BtnUp&gt;:        select-end(CLIPBOARD, CUT_BUFFER1)\n</pre>\n    <p>(The above resources intention is to be able to paste the\n    latest selection even if the xterm was cleared.)</p>\n\n    <p>And here is how it works (and a fix!): The widget given to\n    the action handler as first argument is not guaranteed to be a\n    XtermWidget (it can be the ScrollbarWidget). Instead of\n    accessing the widget's member directly XtDisplay gives the\n    required pointer in a safe way.</p>\n  </blockquote>\n\n  <p>I noticed that this was not the only instance (by reading the\n  code, and testing with his example), and extended the solution to\n  check the widget-class to ensure that it is indeed xterm's widget\n  class before attempting to use it in the context of\n  translations.</p>\n\n  <h1><a name=\"xterm_55\" id=\"xterm_55\">Patch #55 - 1997/11/25 -\n  XFree86 3.9x</a></h1>\n\n  <p>This fixes the segmentation violation noted by Rogier Wolff\n  about a month ago. He'd set xterm to 400 (rows) by 150 columns,\n  which broke because there were limited buffers (200 rows) used\n  for juggling data when adding or deleting lines and for switching\n  between alternate and normal screens. I replaced this by an\n  allocated buffer.</p>\n\n  <p>The bug is simple to test if you set titeInhibit false.</p>\n\n  <h1><a name=\"xterm_54\" id=\"xterm_54\">Patch #54 - 1997/10/17 -\n  XFree86 3.9s</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>correct a minor placement problem with the right\n    scrollbar.</li>\n\n    <li>implement a new set of control sequences for switching\n    between the normal and alternate VT100 screens. These work\n    around the older sequences limitation that required\n    modification of the runtime $TERMCAP to cooperate with the\n    titeInhibit resource (that can't work with terminfo). I do this\n    by moving all of the functionality of the rmcur terminfo\n    capability into the control sequences.</li>\n\n    <li>implement the alternate-screen menu entry</li>\n  </ul>\n\n  <h1><a name=\"xterm_53\" id=\"xterm_53\">Patch #53 - 1997/10/12 -\n  XFree86 3.9r</a></h1>\n\n  <p>This patch adds a fix and implements a new feature (as well as\n  some minor typos):</p>\n\n  <ul>\n    <li>JCHANDRA@Inf.COM (JCHANDRA) noted that there was still a\n    problem with the wait call with the logging option. It hung\n    when the logfile was opened as a command-line option. I fixed\n    this by moving the StartLogging() call down past the place\n    where I'd reset the setuid mode. So the logfile is opened as\n    the real user, without having to fork.</li>\n\n    <li>improve Rohleder's changes by renaming the command-line\n    options and reducing the number of ifdef's.</li>\n\n    <li>implement right-scrollbars for xterm (patch by Michael\n    Rohleder &lt;michael.rohleder@stadt-frankfurt.de&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_52\" id=\"xterm_52\">Patch #52 - 1997/9/29 -\n  XFree86 3.9q</a></h1>\n\n  <p>This patch addresses bugs and requests reported by</p>\n\n  <ul>\n    <li>Bob Maynard &lt;rmaynard@montana.com&gt;,</li>\n\n    <li>Clint Olsen &lt;olsenc@ichips.intel.com&gt;,</li>\n\n    <li>JCHANDRA@Inf.COM (JCHANDRA),</li>\n\n    <li>Michael Schroeder\n    &lt;Michael.Schroeder@informatik.uni-erlangen.de&gt;,</li>\n\n    <li>Pablo Ariel Kohan &lt;pablo@memco.co.il&gt;</li>\n  </ul>\n\n  <p>Some of the changes are interrelated (it was an unusually busy\n  week).</p>\n\n  <ul>\n    <li>change the default resource value for colorMode to true,\n    matching the Xterm.ad file.</li>\n\n    <li>correct behavior of 'ech' control, making the default and 0\n    parameters erase one character rather than to the end of line\n    (reported by Michael Schroeder).</li>\n\n    <li>add resource boldColors, command-line options +pc and -pc\n    and configure-script option to specify behavior of xterm's\n    mapping bold colors 0 through 7 to colors 8 through 15.\n    (request by Pablo Ariel Kohan).</li>\n\n    <li>add resource colorAttrMode to specify whether colorULMode\n    and colorBDMode can override the ANSI colors (report by Clint\n    Olsen).</li>\n\n    <li>correct a conflict between colorULMode/colorBDMode versus\n    ANSI colors, where exposure events would occasionally pick up\n    the former (e.g., colorBD) rather than ANSI colors. Testing the\n    colorAttrMode made this apparent, though it has been in the\n    code since 3.2A (patch #35 in Jan 1997).</li>\n\n    <li>correct two problems with the optional logging support. On\n    Linux at least, the waitpid call in creat_as hangs when the\n    logging is toggled from the popup menu. Also, the mktemp\n    template has the wrong number of X's (since X11R5!). Fixed the\n    waitpid problem by exploiting the fact that the setuid behavior\n    is reset before the popup menus are available. (reported by\n    Jayachandran C.).</li>\n\n    <li>add configure script options for building with the Xaw3d\n    and neXtaw libraries.</li>\n\n    <li>correct CF_IMAKE_CFLAGS standalone configure script macro,\n    so that it will pick up $(ALLDEFINES) rather than\n    $(STD_DEFINES). This is needed to make scrollbars work on\n    Linux, since that uses narrow prototypes. (reported by Bob\n    Maynard).</li>\n\n    <li>various minor updates to configure-script macros.</li>\n  </ul>\n\n  <h1><a name=\"xterm_51\" id=\"xterm_51\">Patch #51 - 1997/9/15 -\n  XFree86 3.9p</a></h1>\n\n  <p>Most of this patch is related to the standalone configure\n  script, though there are fixes/enhancements as well:</p>\n\n  <ul>\n    <li>add a new resource sunKeyboard, with associated\n    command-line option and menu-toggle that allows using a normal\n    Sun or PC keyboard to generated the complete DEC-style function\n    keys and keypad.</li>\n\n    <li>correct a reversed foreground/background test in the\n    control sequence that replies with the current SGR\n    settings.</li>\n\n    <li>correct, by invoking XSync, a display problem that caused\n    the program to not properly update newly exposed areas when a\n    font change or 80/132 resize request was not completely\n    accepted.</li>\n\n    <li>restructured autoconf macros (I made a library of all of\n    the macros across the complicated configure scripts I'm working\n    on).</li>\n\n    <li>use the autoconf config.guess and config.sub scripts to\n    better identify the host-os.</li>\n\n    <li>improve the configure script that uses 'imake' as a\n    fallback for definitions.</li>\n\n    <li>correct several instances of unsigned/signed mixed\n    expressions.</li>\n  </ul>\n\n  <p>I've tested the configure script on Linux, SunOS 4.1.3,\n  Solaris 2.5.1, IRIX 5.2 and 6.2, AIX 3.2.5 and CLIX 3.1 (all but\n  the last run properly as well).</p>\n\n  <h1><a name=\"xterm_50\" id=\"xterm_50\">Patch #50 - 1997/8/22 -\n  XFree86 3.9m</a></h1>\n\n  <p>This is a collection of small fixes, and a couple of minor\n  enhancements:</p>\n\n  <ul>\n    <li>plug a security hole in the implementation of Media Copy\n    (print) by invoking setuid just before the main loop.</li>\n\n    <li>add an ifdef'd include for &lt;sys/termio.h&gt; for HP-UX,\n    which allows the program to process SIGWINCH events (this is a\n    bug in X11R6.3)</li>\n\n    <li>add state-table entries for VT52 emulation to enter/exit\n    keypad application mode.</li>\n\n    <li>disable the popup-menu entry for 8-bit controls when the\n    terminal-id is less than 200 (e.g., VT52 or VT100).</li>\n\n    <li>ensure that the popup-menu entry for 8-bit controls is\n    updated when the application enables/disables this mode,\n    including the response to a full-reset.</li>\n\n    <li>implement VT300 DECBKM feature: set interpretation of the\n    backarrow key to either backspace or delete. The initial\n    setting is via resource; it can also be modified in the main\n    popup menu.</li>\n\n    <li>implement VTxxx KAM (ISO AM), which allows a keyboard to be\n    locked (i.e., the terminal discards input).</li>\n\n    <li>implement VTxxx SRM, which is used to control local echoing\n    of input on the terminal.</li>\n\n    <li>add terminfo and termcap entries for xterm-8bit, a\n    variation of the xterm description that uses 8-bit control\n    characters.</li>\n\n    <li>add fallback definitions for Imakefile to allow it to work\n    on some X11R5 systems that have no SpecialCObjectRule or\n    ProgramTargetName macros.</li>\n\n    <li>add .c.o and .c.i rules to standalone Makefile.in</li>\n\n    <li>correct order of -lXmu and -lXext in standalone configure\n    script.</li>\n\n    <li>add configure script options to allow selective disabling\n    of active-icon, input-method and i18n code (mainly for users\n    with X11R5 or an incomplete X11R6 configuration).</li>\n\n    <li>change menu-indices from #define's to enum values, thereby\n    making it work better with the ifdef's for logging and\n    active-icon (the X11R6.3 active-icon code is incorrectly\n    ifdef'd; this corrects an error introduced by incorporating\n    that code).</li>\n\n    <li>correct minor compile errors in the configuration where\n    active-icon is not used.</li>\n\n    <li>add configure option to suppress echoing of long compiler\n    commands</li>\n\n    <li>correct spelling of decTerminalID in configure script help\n    message</li>\n\n    <li>use gcc __attribute__((unused)) to quiet warnings about\n    unused parameters when compiling with -W (to make it simpler to\n    find the real problems).</li>\n  </ul>\n\n  <h1><a name=\"xterm_49\" id=\"xterm_49\">Patch #49 - 1997/8/10 -\n  XFree86 3.9k</a></h1>\n\n  <p>This patch implements the VT100/VT220 Media Copy (i.e.,\n  print-screen) control sequences.</p>\n\n  <h1><a name=\"xterm_48\" id=\"xterm_48\">Patch #48 - 1997/7/26 -\n  XFree86 3.9j</a></h1>\n\n  <p>This patch does the following (all but the first affect only\n  the standalone configure script):</p>\n\n  <ul>\n    <li>minor correction to positioning of underlines for small\n    (e.g., 5x8) font size.\n      <p>The existing behavior allowed underlines to be drawn\n      outside the character-cell, so they weren't cleared properly\n      under some circumstances.</p>\n    </li>\n\n    <li>adds more special-case tokens to the standalone configure\n    script's imake-option filter (e.g., \"&amp;&amp;\", since a \"make\n    -n main.o\" on my IRIX system uses that shell construct).</li>\n\n    <li>adds a '--enable-logging' option for the standalone\n    configure script.</li>\n\n    <li>adds check and ifdef's for the standalone configure script\n    to allow for building on platforms with X11R6, which lacks\n    Xpoll.h (introduced in X11R6.1).</li>\n  </ul>\n\n  <h1><a name=\"xterm_47\" id=\"xterm_47\">Patch #47 - 1997/7/13 -\n  XFree86 3.9i</a></h1>\n\n  <p>This patch does the following</p>\n\n  <ul>\n    <li>corrects an indexing error in the doublesize character\n    logic (button.c) that caused core dump (this was reported by J.\n    Wunsch).</li>\n\n    <li>corrects the logic of ShowCursor when it is painting in a\n    doublesize cell (charproc.c).</li>\n\n    <li>corrects, according to vttest, the behavior when switching\n    to doublesize characters and back again (doublechr.c).</li>\n\n    <li>adds cbt (back_tab) to the terminfo description (this was\n    something that I'd overlooked as applicable to curses\n    optimization last summer).</li>\n\n    <li>corrects, for the standalone xmc test, the logic for\n    disabling xmc.</li>\n  </ul>\n\n  <h1><a name=\"xterm_46\" id=\"xterm_46\">Patch #46 - 1997/7/4 -\n  XFree86 3.9h</a></h1>\n\n  <p>This is a patch to provide test-support for some work I'm\n  doing on ncurses. It does not modify the normal configuration of\n  xterm; the code is compiled if the standalone configure option\n  \"--enable-xmc-glitch\" is specified.</p>\n\n  <h1><a name=\"xterm_45\" id=\"xterm_45\">Patch #45 - 1997/7/2 -\n  XFree86 3.9h</a></h1>\n\n  <p>This fixes the problem reported with xterm's cursor color\n  versus the background (the second chunk in this patch) and also\n  removes some duplicate initialization of the cursor GC's. If the\n  cursor color at startup is the same as the background, then xterm\n  will use the reverse GC, ignoring the setting of the colorMode\n  resource.</p>\n\n  <h1><a name=\"xterm_44\" id=\"xterm_44\">Patch #44 - 1997/6/22 -\n  XFree86 3.9g</a></h1>\n\n  <p>This implements the first part of the VT100 doublesize\n  characters for xterm, as well as fixing a handful of bugs:</p>\n\n  <ul>\n    <li>the doublesize character support uses the normal font\n    (using scaled fonts will be another patch) with blanks to\n    simulate doublesize characters. This patch does most of the\n    global changes that'll be required. I've hidden most of the\n    details in macros and ifdef's so it's easy to configure out\n    (part of the patch is a configure option for that\n    purpose).</li>\n\n    <li>corrected limits in DeleteChar() function -- it's always\n    ignored the size of the left border and scrollbar. I noticed\n    this when working on the doublesize characters since the glitch\n    was doubled in size (i.e., it wrapped some garbage around the\n    right margin).</li>\n\n    <li>corrected 'memmove()' logic, for standalone builds (it\n    referenced a malloc wrapper from my development library).</li>\n\n    <li>add a check for HideCursor() to prevent repeated screen\n    updates (which can cause a spurious cursor glitch to appear,\n    e.g., during scrolling). I noticed this with the 3.2A version\n    (but only a few weeks ago, when I started working on this\n    patch).</li>\n  </ul>\n\n  <h1><a name=\"xterm_43\" id=\"xterm_43\">Patch #43 - 1997/6/10 -\n  XFree86 3.9d</a></h1>\n\n  <p>Here's a fix for two problems:</p>\n\n  <ul>\n    <li>modify handling of tgetent results in xterm and resize\n    programs to make them tolerant of missing termcap file, or\n    unknown terminal name. In this scheme, an explicit \"-tn\" option\n    will succeed, overriding the fallback list.</li>\n\n    <li>a nit in the configure script (log extra information to\n    help diagnose which case of the test-compile of tgetent was\n    used).</li>\n  </ul>\n\n  <h1><a name=\"xterm_42\" id=\"xterm_42\">Patch #42 - 1997/6/8 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>Bram Moolenaar reported that the cursor color changed\n  unexpectedly while scrolling. The cause was that it used the same\n  GC's as the logic that draws the ANSI colors. The bug only\n  appears if the cursorColor resource isn't set, and has been\n  present since the initial implementation early last year. (The\n  same bug also appears in rxvt ;-). Here's a fix.</p>\n\n  <h1><a name=\"xterm_41\" id=\"xterm_41\">Patch #41 - 1997/5/28 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>Some nits found by Darren Hiebert (missing part of\n  install-rule, incorrect assignment for --enable-color-mode\n  option).</p>\n\n  <h1><a name=\"xterm_40\" id=\"xterm_40\">Patch #40 - 1997/5/26 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>Patch for the configure script's logic for obtaining imake\n  predefined symbols.</p>\n\n  <h1><a name=\"xterm_39\" id=\"xterm_39\">Patch #39 - 1997/5/24 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>integrate the 16-color change for 'xterm'</li>\n\n    <li>minor fixes/clarification of tgetent in terminfo vs termcap\n    to 'resize'</li>\n  </ul>\n\n  <p>(both changes also modify the configure script)</p>\n\n  <h1><a name=\"xterm_38\" id=\"xterm_38\">Patch #38 - 1997/5/22 -\n  XFree86 3.2Xh</a></h1>\n\n  <p>This implements a simple configuration script with autoconf\n  (to which I'll add more options later). It does the\n  following:</p>\n\n  <ul>\n    <li>configures xterm to build with X11R5 (at least on SunOS\n    4.1, Solaris 2.4, possibly IRIX - sorry network was down today,\n    but I did test an earlier version yesterday).</li>\n\n    <li>enables/disables the configuration ifdef's for ANSI color\n    and VT52 emulation.</li>\n  </ul>\n\n  <p>It does not make tests for the things that imake does (that's\n  another project), instead it uses a hybrid of the autoconf tests\n  for libraries and adds imake's compiler options (which are\n  necessary in some cases to get main.c to compile).</p>\n\n  <h1><a name=\"xterm_37\" id=\"xterm_37\">Patch #37 - 1997/5/7 -\n  XFree86 3.9a</a></h1>\n\n  <p>This corrects a minor, but annoying error in the vt220\n  emulation: the DECUDK is only supposed to be interpreted for\n  _shifted_ function keys.</p>\n\n  <h1><a name=\"xterm_36\" id=\"xterm_36\">Patch #36 - 1997/1/16 -\n  XFree86 3.2r</a></h1>\n\n  <p>This corrects something that I overlooked in patch #27\n  (21-aug-1996), which is that when trimming the region to be\n  repainted for the highlightSelection resource of xterm, I still\n  have to paint the background past the highlighted region. This\n  only happens when I first do a selection in a window that's\n  partly off-screen, then move the window on-screen.</p>\n\n  <h1><a name=\"xterm_35\" id=\"xterm_35\">Patch #35 - 1997/1/7 -\n  XFree86 3.2o</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>combines the coding for foreground and background colors\n    into a single byte, reducing the memory required to store\n    saved-lines in color. (I'll take back that byte in a following\n    patch to use to ensure the character-set, so there's no\n    long-term decrease in memory use).</li>\n\n    <li>modifies the PF1-PF4 coding in termcap/terminfo. Because\n    xterm is still by default emulating vt100, the function key\n    codes are vt100-compatible (I overlooked this in patch #31). I\n    also reformatted the whole terminfo file into a single-column,\n    for consistency.</li>\n\n    <li>adds an interim xterm-vt220 description to accommodate the\n    old and new styles of function-keys (though probably it'd be\n    better to drop the old-style altogether).</li>\n  </ul>\n\n  <h1><a name=\"xterm_34\" id=\"xterm_34\">Patch #34 - 1997/1/5 -\n  XFree86 3.2o</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>implement DECSTR (soft terminal reset). The biggest diff is\n    due to adding another state table (note that there's only one\n    useful state here, but it's only 256 bytes rather than 1k as it\n    would have been before I reduced the size of state\n    entries).</li>\n\n    <li>some minor tidying up (e.g., signed/unsigned use bitcpy,\n    MODE_DECCKM, resetColor, resetCharsets). More is done in patch\n    #35.</li>\n  </ul>\n\n  <p>I got the description of DECSTR from a vt420 user's manual.\n  I'll do some testing with vttest to ensure that there's nothing\n  else to do than what was documented.</p>\n\n  <h1><a name=\"xterm_33\" id=\"xterm_33\">Patch #33 - 1996/11/24 -\n  XFree86 3.2</a></h1>\n\n  <p>This adds to the reset-fix by Matthieu Herrb\n  &lt;Mathieu.Herrb@mipnet.fr&gt; a small change to make xterm able\n  to output 8-bit characters in VT100 mode. Applications that run\n  on real VT100's don't do that anyway, and this feature should be\n  removed sometime after finishing off the VT220 emulation (VT220's\n  can do 8-bit characters). That would be a good time to change the\n  default terminal-id to 220.</p>\n\n  <h1><a name=\"xterm_32\" id=\"xterm_32\">Patch #32 - 1996/11/21 -\n  XFree86 3.2</a></h1>\n\n  <p>This implements the REP (repeat) control for xterm. That isn't\n  part of the DEC VTxxx series, but is defined in ISO 6429. (Note\n  that the base xterm terminal description is <em>not</em> changed\n  -- I added a variant, \"xterm-rep\").</p>\n\n  <h1><a name=\"xterm_31\" id=\"xterm_31\">Patch #31 - 1996/11/16 -\n  XFree86 3.2</a></h1>\n\n  <p>This implements vt52 emulation in xterm (ifdef'd so it can be\n  removed). I've been using it for testing for the past month or\n  so.</p>\n\n  <h1><a name=\"xterm_30\" id=\"xterm_30\">Patch #30 - 1996/11/16 -\n  XFree86 3.2</a></h1>\n\n  <p>From bug-report by &lt;auroux@clipper.ens.fr&gt; (Denis\n  Auroux), missing reset to ground state. I checked through the\n  rest of <em>that</em> table and found another, in the\n  unimplemented MC (screen print).</p>\n\n  <h1><a name=\"xterm_29\" id=\"xterm_29\">Patch #29 - 1996/9/15 -\n  XFree86 3.1.2Gb</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>corrects the restoration of color for bold/underline color\n    mode</li>\n\n    <li>adds a resource 'decTerminalID' to control the reporting\n    level of xterm (e.g., VT100, VT220).</li>\n\n    <li>uses the new resource to implement/correct the DA1, DA2 and\n    DECRPTUI reports.</li>\n\n    <li>change valid-response code in DECRQSS from 0 to 1 (the\n    manual says 0, but the VT420 terminal I've been testing on says\n    1).</li>\n  </ul>\n\n  <p>All of these changes are based on vttest 2.6</p>\n\n  <p>(Most of the volume in the patch is to add 2 more state tables\n  for parsing the 2nd/3rd device-attribute controls).</p>\n\n  <h1><a name=\"xterm_28\" id=\"xterm_28\">Patch #28 - 1996/8/31 -\n  XFree86 3.1.2F</a></h1>\n\n  <p>This patch corrects the following reported by Roland Rosenfeld\n  &lt;roland@spinnaker.rhein.de&gt;:</p>\n\n  <ul>\n    <li>handle SGR 22, 24 and 25 in combination with colorUL and\n    colorBD resources. Also noted &amp; fixed reset of colored\n    underline/bold with SGR 0.</li>\n\n    <li>a typo in the termcap (missing '['), from 3.1.2Dj (my\n    error)</li>\n  </ul>\n\n  <p>Roland also complained that he couldn't use box characters\n  with</p>\n\n  <pre>\n        -adobe-courier-bold-r-normal--12-120-75-75-m-70-iso8859-1\n</pre>\n  <p>but that's a known xterm limitation (the box characters must\n  be part of the font, in the first 32 locations).</p>\n\n  <h1><a name=\"xterm_27\" id=\"xterm_27\">Patch #27 - 1996/8/21 -\n  XFree86 3.1.2Ek</a></h1>\n\n  <p>This patch fixes one of my long-term gripes: xterm's selection\n  doesn't clearly show what's being selected (as per David's\n  request, it's controlled by a resource, which defaults to the\n  older behavior).</p>\n\n  <h1><a name=\"xterm_26\" id=\"xterm_26\">Patch #26 - 1996/8/20 -\n  XFree86 3.1.2Ei</a></h1>\n\n  <p>Here's a patch to fix a problem with xterm's cut/paste and\n  another to modify the appearance of the highlighting while\n  selecting. (The changes are independent, so you can see if the\n  change to screen.c is desirable).</p>\n\n  <h1><a name=\"xterm_25\" id=\"xterm_25\">Patch #25 - 1996/8/18 -\n  XFree86 3.1.2Ei</a></h1>\n\n  <p>Here's a correction for two minor bugs that I picked up in\n  testing, plus some lint (from Solaris 2.5) where NULL was used\n  incorrectly:</p>\n\n  <ul>\n    <li>make the second alternate font the same as the first\n    (that's what vt420 and dtterm do)</li>\n\n    <li>corrected DECSCL report when DECSCL hasn't been set (i.e.,\n    don't return a '60').</li>\n  </ul>\n\n  <h1><a name=\"xterm_24\" id=\"xterm_24\">Patch #24 - 1996/8/11 -\n  XFree86 3.1.2Ee</a></h1>\n\n  <p>This patch does several things. In effect, xterm can (I think)\n  do a reasonably good job of emulating vt220 and vt320 terminals\n  (as well as it was doing vt100, at any rate ;-).</p>\n\n  <p>It does NOT do:</p>\n\n  <ul>\n    <li>soft fonts</li>\n\n    <li>rigel or sixel graphics</li>\n  </ul>\n\n  <p>Anyway, I:</p>\n\n  <ul>\n    <li>added ECH, CPL, CNL, SU, SD, CBT, CHT controls</li>\n\n    <li>added popup-menu for switching between DEC and Sun function\n    keys. (corrected alignment err wrt logging entry at that\n    point).</li>\n\n    <li>make xterm recognize both 8-bit and 7-bit controls\n    (including popup menu for switching modes).</li>\n\n    <li>add user-definable function keys (aka DECUDK)</li>\n\n    <li>support concealed text</li>\n\n    <li>support protected text (both ISO compatible and DEC\n    compatible - that's not the same thing, btw), with SPA, EPA,\n    DECSCA, DECSED, DECSEL controls.</li>\n\n    <li>implement DECSCL.</li>\n  </ul>\n\n  <p>I'll be continuing to test this patch for a while, but don't\n  expect to add any new functionality (it passes all of the current\n  tests I've built in vttest, but I need to make more tests)..</p>\n\n  <h1><a name=\"xterm_23\" id=\"xterm_23\">Patch #23 - 1996/7/31 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This removes the blinking cursor I added last week (for\n  performance reasons). Time-permitting, I'll revisit this after\n  3.2 is released (there <em>will</em> be more work after XFree86\n  3.2, I assume).</p>\n\n  <h1><a name=\"xterm_22\" id=\"xterm_22\">Patch #22 - 1996/7/26 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>I looked more closely at my \"double-negative\" and realized\n  that I had been confused by the default color scheme (black on\n  white) in combination with reverse video. However, I did see that\n  the original_fg and original_bg data weren't really used - so I\n  removed that logic.</p>\n\n  <p>Also:</p>\n\n  <ul>\n    <li>during initialization, check if ANSI colors are set with\n    non fg/bg values, disable color mode if not. This makes xterm\n    tolerant of applications that allocate the whole color\n    map.</li>\n\n    <li>implemented blinking cursor (default is <em>off</em>)</li>\n  </ul>\n\n  <h1><a name=\"xterm_21\" id=\"xterm_21\">Patch #21 - 1996/7/24 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>fixes some minor typography in the control-sequences\n    documentation (it didn't occur to me til I'd sent the last\n    patch that I could use ghostview for previewing the troff\n    output ;-)</li>\n\n    <li>adjusts the shell's background color in ReverseVideo so\n    that flicker in resizing is reduced</li>\n\n    <li>adds an ifdef OPT_ISO_COLORS to allow configuring xterm\n    without the ISO color support (saves a lot of memory)</li>\n\n    <li>used that ifdef to isolate/modify logic so that if the user\n    doesn't have the colorMode enabled, then ISO color support is\n    disabled (saving memory).\n      <p>(If anyone needs numbers, I had savedLines set to 2000,\n      and found a reduction from ~700k to ~400k of allocated\n      memory, according to Purify).</p>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_20\" id=\"xterm_20\">Patch #20 - 1996/7/24 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This documents the changes in control sequences for window\n  operations that I added in my previous patch. I'm testing another\n  patch that allows the user to use less memory if colors aren't\n  needed.</p>\n\n  <h1><a name=\"xterm_19\" id=\"xterm_19\">Patch #19 - 1996/7/21 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>fixes the core dump that I reported on IRIX 5.2 (in main.c)\n      <p>(it's worth noting that this bug exists in X11R6.1, so I'd\n      like to assume that someone's already submitted a fix to X\n      Consortium...)</p>\n    </li>\n\n    <li>change the interpretation of zero rows or columns in a\n    resize-window request to use the root window's size (looking\n    more carefully at dtterm, that seems to be what it does).</li>\n\n    <li>change some memmove calls to memcpy for slightly better\n    performance. also, a couple of memset calls to bzero, since\n    Quantify says bzero runs 20% faster, I assume because there's\n    one less argument.</li>\n\n    <li>interpret character sets 1 and 2 (so that vttest gives a\n    reasonable result) Both rxvt and dtterm do something\n    equivalent.</li>\n\n    <li>fix a minor memory leak in the logic that retrieves the\n    window or icon names (Purify found this for me while I ran\n    vttest).</li>\n  </ul>\n\n  <h1><a name=\"xterm_18\" id=\"xterm_18\">Patch #18 - 1996/7/18 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This implements the following:</p>\n\n  <ul>\n    <li>escape sequences that act like the CDE dtterm's window\n    operations (though I have implemented the default width and\n    height -- I've seen a rather buggy dtterm running that seems to\n    treat width=0 or height=0 literally -- maybe that's a feature,\n    not a bug?)</li>\n\n    <li>minor tweak to the screen-repainting when resizing (I still\n    cannot entirely get rid of flicker).</li>\n\n    <li>still more fixes to terminfo &amp; termcap (I corrected my\n    error for the hpa code and added some other stuff by comparing\n    to ncurses' description and rxvt's).</li>\n\n    <li>a tweak to the changes by Michael Rohleder for the color\n    translation</li>\n\n    <li>re-order attribute codes to allow later implementation of\n    protected fields (dtterm supposedly does this; it's probably\n    more useful than blinking or invisible text -- that uses up all\n    of the available bits without changing the attribute scheme\n    radically).</li>\n  </ul>\n\n  <h1><a name=\"xterm_17\" id=\"xterm_17\">Patch #17 - 1996/7/2 -\n  XFree86 3.1.2Eb</a></h1>\n\n  <p>This patch implements for xterm several minor features from\n  ISO 6429 which are useful for terminfo applications. The HPA and\n  VPA control sequences allow cursor movement along a row or\n  column, cutting down a little on the characters transmitted. The\n  other codes allow resetting specific graphic rendition attributes\n  without modifying the other attributes. (now if someone just had\n  time to implement blinking cursors...)</p>\n\n  <h1><a name=\"xterm_16\" id=\"xterm_16\">Patch #16 - 1996/6/25 -\n  XFree86 3.1.2Ea</a></h1>\n\n  <p>Adam Tla/lka &lt;atlka@pg.gda.pl&gt; told me a couple of weeks\n  ago that I'd missed some of the background coloring in xterm. I\n  investigated, and found that while I'd picked up on the\n  clear-to-bottom and clear-to-end-of-line operations, I'd\n  overlooked the insert/delete lines. Just so I wouldn't overlook\n  any more of these, I updated a copy of vttest to test ISO colors\n  and bce (background color erase). This patch introduces a new\n  function, ClearCurBackground, whose calls replace the direct\n  XClearArea calls that I'd overlooked. (There's also a few\n  compiler warnings fixed, etc ;-)</p>\n\n  <h1><a name=\"xterm_15\" id=\"xterm_15\">Patch #15 - 1996/5/29 -\n  XFree86 3.1.2E</a></h1>\n\n  <p>This fixes the problem reported by David Dawes, by making the\n  50msec select timeout for the Xaw3d arrow scrollbar a resource.\n  (I made it a boolean for a variety of reasons -- to make it a\n  number, you'd need an additional resource, to avoid breaking the\n  logic).</p>\n\n  <h1><a name=\"xterm_14\" id=\"xterm_14\">Patch #14 - 1996/5/12 -\n  XFree86 3.1.2Dj</a></h1>\n\n  <p>This patch brings the termcap and terminfo descriptions for\n  xterm up to date. I made the following changes:</p>\n\n  <ul>\n    <li>reformatted the terminfo description in a single-column\n    (this is ok for terminfo, and will simplify future patches --\n    can't do that for termcap, since it would impact buffer\n    requirements on some systems).</li>\n\n    <li>omitted obsolete features in termcap to save a little space\n    (bs, pt)</li>\n\n    <li>added color capabilities to termcap (ut, Co, NC, op, AB,\n    AF)</li>\n\n    <li>corrected some capabilities (vi, ve)</li>\n\n    <li>added 'st' (set tab)</li>\n\n    <li>reduced function keys in termcap for 'xterm' to 12 because\n    color capabilities makes that description larger than 1023\n    characters.</li>\n\n    <li>created new termcap name 'xtermm' (monochrome) to match the\n    terminfo list, and make that description have 20 function\n    keys.</li>\n\n    <li>added corresponding color capabilities to terminfo (bce,\n    colors, pairs, op, ncv, setab, setaf)</li>\n\n    <li>corrected corresponding capabilities in terminfo (civis,\n    cnorm, rmcup, smcup)</li>\n\n    <li>added capabilities (el1, hts)</li>\n\n    <li>in both, corrected home/end keys to match the code\n    correction made by Thomas Mueller in 3.1.2Bk\n      <p>=&gt; (I'm still considering modifying the code &amp;\n      description to match the rxvt program).</p>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_13\" id=\"xterm_13\">Patch #13 - 1996/4/23 -\n  XFree86 3.1.2Df</a></h1>\n\n  <p>This corrects my earlier changes for colors - the inner border\n  of the xterm was getting painted with the wrong color, since I'd\n  moved the call to set the background into the logic that tracks\n  SGR information.</p>\n\n  <h1><a name=\"xterm_12\" id=\"xterm_12\">Patch #12 - 1996/3/16 -\n  XFree86 3.1.2Dc</a></h1>\n\n  <p>This corrects a memory leak in xterm that happens whenever one\n  switches fonts.</p>\n\n  <h1><a name=\"xterm_11\" id=\"xterm_11\">Patch #11 - 1996/3/5 -\n  XFree86 3.1.2Db</a></h1>\n\n  <p>This patch corrects the behavior of the ANSI colors in xterm\n  when reverse video is used, as well as some other lesser\n  sins:</p>\n\n  <ul>\n    <li>button.c\n      <ul>\n        <li>(compiler warnings: shadowing of 'time', redundant\n        cast)</li>\n      </ul>\n    </li>\n\n    <li>charproc.c\n      <ul>\n        <li>renamed screen.colors[] array to screen.Acolors[] to\n        more easily distinguish the non-ANSI colors from the ANSI\n        colors.</li>\n\n        <li>moved logic of SGR_Save() into VTInitialize, getting\n        rid of local private variables original_fg and\n        original_bg.</li>\n\n        <li>moved some logic into getXtermForeground and\n        getXtermBackground from SGR_Foreground, SGR_Background,\n        etc.</li>\n\n        <li>corrected misleading 'row' to 'col' in case for CUF,\n        CUB sequences.</li>\n      </ul>\n    </li>\n\n    <li>ctlseqs.ms</li>\n\n    <li>xterm.man\n      <ul>\n        <li>(correct a misconception which I'd added that the\n        color0 through color6 resource values apply to non-ANSI\n        colors)</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h\n      <ul>\n        <li>added original_fg, original_bg to TScreen\n        structure.</li>\n      </ul>\n    </li>\n\n    <li>scrollbar.c\n      <ul>\n        <li>(compiler warnings: redundant cast)</li>\n      </ul>\n    </li>\n\n    <li>util.c\n      <ul>\n        <li>new functions getXtermForeground and getXtermBackground\n        replace the macros GET_FG and GET_BG, with the added\n        functionality of checking for the reverse-video status of\n        xterm.</li>\n\n        <li>in ReverseVideo, swap the SGR foreground and background\n        colors also.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_10\" id=\"xterm_10\">Patch #10 - 1996/2/14 -\n  XFree86 3.1.2Cd</a></h1>\n\n  <p>I observed an occasional glitch in the xterm's color behavior;\n  a clear to end of line would get a color that had been used in a\n  program that supposedly reset colors. I traced this down to the\n  way xterm was modifying colors of GC's on the fly; it didn't\n  restore the original color of the GC, even though it would later\n  be used in functions (such as ClearRight) that assumed (my error)\n  that the GC would have the current foreground or background\n  color.</p>\n\n  <p>I fixed this by resetting the GC's colors with a new function\n  'resetXtermGC()', and direct calls on\n  SGR_Foreground/SGR_Background, as appropriate and using a new\n  function 'updatedXtermGC()' to encapsulate the logic that\n  modifies the GC's color. (I also removed some commented-out code\n  that was trying to do this -- the problem was a little more\n  obscure).</p>\n\n  <h1><a name=\"xterm_09\" id=\"xterm_09\">Patch #9 - 1996/2/10 -\n  XFree86 3.1.2Cb</a></h1>\n\n  <p>This patch fixes the remaining problems that I had making\n  xterm run with x11r5, as well as a couple of other bugs. It\n  follows my patch from yesterday, that added ifdef's for some of\n  the input-method resources.</p>\n\n  <ul>\n    <li>corrected ifdef's that suppress the input-method code\n    (doesn't exist in my x11r5, and xterm works adequately without\n    it).</li>\n\n    <li>corrected fallback definition for 'Select()' macro (oops:\n    I'd copied the wrong text...)</li>\n\n    <li>moved the declarations for the fd_set variables to\n    data.[ch]</li>\n\n    <li>corrected an ifdef in resize.c (sunos 4.x doesn't have\n    termcap.h)</li>\n\n    <li>corrected (in main.c) some unused/orphaned variables.</li>\n  </ul>\n\n  <h1><a name=\"xterm_08\" id=\"xterm_08\">Patch #8 - 1996/2/9 -\n  XFree86 3.1.2Cb</a></h1>\n\n  <p>This is mostly a documentation patch for xterm. It describes\n  the color control sequences in more detail, and documents some\n  other features of xterm that aren't described elsewhere.</p>\n\n  <p>I've also added a couple of ifdef's to fix (part of) the\n  problem that I'm working on (making the program work properly on\n  x11r5, where I'm doing memory testing -- I have a \"good\" version\n  from mid-January, but my resync version doesn't work properly on\n  x11r5). I'm not done with <em>that</em> yet.</p>\n\n  <h1><a name=\"xterm_07\" id=\"xterm_07\">Patch #7 - 1996/1/28 -\n  XFree86 3.1.2n</a></h1>\n\n  <p>I did a (clean) build of 3.1.2n on Linux 1.2.13 (ELF). I've\n  got an S3 card.</p>\n\n  <p>This fixes the following in the 3.1.2n xterm:</p>\n\n  <ul>\n    <li>initialize cur_foreground, cur_background in charproc.c\n    (Purify told me they weren't initialized).</li>\n\n    <li>add interpretation of codes 39, 49, to reset background and\n    foreground to default value (I'm told that ISO 6429 does this;\n    but I don't have a written reference -- yet -- can anyone help\n    here?). Anyway, rxvt does it, and it'll solve my remaining\n    color management problems.</li>\n\n    <li>shadowing of 'time' in menu.c</li>\n\n    <li>'Cardinal' vs 'int' in scrollbar.c</li>\n\n    <li>several changes to permit compile with X11R5 (the system\n    that I've got Purify on won't be upgraded to X11R6 for a long\n    time).</li>\n  </ul>\n\n  <p>I built this version (with a minor nit that I'll patch soon)\n  on SunOS 4.1.3 so that I can test it some more with Purify.</p>\n\n  <p><em>btw</em>: the changes made in Xpoll.h won't work on some\n  older systems, because fd_set isn't a defined type (I've got one\n  machine at least that this applies to).</p>\n\n  <h1><a name=\"xterm_06\" id=\"xterm_06\">Patch #6 - 1996/1/8</a></h1>\n\n  <p>This patch does all of the SGR foreground/background fixes\n  (i.e., clearing the screen after an SGR color is set causes that\n  color to be used in the foreground and/or background). If the\n  FG_COLOR and/or BG_COLOR flags aren't set, then the xterm\n  foreground and background default to the window's values. This\n  usage is consistent with various types of hardware (especially\n  the IBM PC), and is also used in rxvt.</p>\n\n  <ul>\n    <li>charproc.c:\n      <ul>\n        <li>add/use new macros GET_FG, GET_BG - n/c.</li>\n\n        <li>add/use new functions SGR_Foreground() and\n        SGR_Background() to set corresponding colors in GC's, and\n        to retain sense of \"original\" colors.\n          <p>=&gt; This makes redundant some of the corresponding\n          logic in HideCursor to set the foreground and background,\n          but I left it in since it <em>may</em> be fixing an\n          unrelated requirement.</p>\n        </li>\n\n        <li>set GC's in LoadNewFont() according to whether the SGR\n        fg/bg colors are active.\n          <p>=&gt; This fixes some glitches in the accompanying\n          resize, that leaves parts of the window in the original\n          background color.</p>\n        </li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>modified ClearBufRows() to use the SGR fg/bg colors if\n        they're set.</li>\n\n        <li>added function ScrnClearLines(), used this to replace\n        portions of ScrnInsertLine() and ScrnDeleteLine(). The new\n        function uses the SGR fg/bg colors if they're set.\n          <p>=&gt; Otherwise, selection after an index or reverse\n          index will paint the wrong colors.</p>\n        </li>\n\n        <li>modified ScrnDeleteChar() and ScrnInsertChar() to use\n        SGR fg/bg colors.</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>modified ClearRight() so that if either of the SGR\n        fg/bg colors is set, we don't bzero the attributes and\n        color arrays, but instead fill them with the appropriate\n        codes.</li>\n\n        <li>modified ClearLeft to use SGR fg/bg colors.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_05\" id=\"xterm_05\">Patch #5 - 1996/1/7</a></h1>\n\n  <p>This patch modifies the object code, by replacing indexing\n  expressions with temporary variables with the full indexing\n  expression. At first glance, this seems inefficient (it did to me\n  ;-), until remembering comments made in the compilers newsgroups\n  that trying to \"help\" the compiler doesn't really work that well.\n  A good optimizing compiler can do a better job than the\n  programmer can. (There's a moral in the use of 'register'\n  variables also, but I won't fix those...).</p>\n\n  <p>Anyway, the revised code generates a smaller object...</p>\n\n  <ul>\n    <li>charproc.c:\n      <ul>\n        <li>recode index expressions in ShowCursor() and\n        HideCursor() using SCRN_BUF_xxxxS macros - changes\n        object.</li>\n\n        <li>replace constant '4' by MAX_PTRS - n/c.</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h:\n      <ul>\n        <li>defined the SCRN_BUF_xxxxS macros in terms of BUF_xxxxS\n        macros, to pick up references to ScrnBuf data directly, and\n        added MAX_PTRS symbol to pick up those '4' constants strewn\n        about the code - n/c.</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>recode index expressions in ScreenWrite() using\n        SCRN_BUF_xxxxS macros - changes object.</li>\n\n        <li>replace constant '4' by MAX_PTRS - n/c.</li>\n\n        <li>use macros BUF_CHARS, BUF_ATTRS - n/c.</li>\n\n        <li>cast calloc to 'Char *' to fix compiler warning on IRIX\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>scrollbar.c:\n      <ul>\n        <li>replace constant '4' by MAX_PTRS - n/c.</li>\n\n        <li>cast calloc to 'Char *' to fix compiler warning on IRIX\n        - n/c</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_04\" id=\"xterm_04\">Patch #4 - 1996/1/7</a></h1>\n\n  <p>When setting up for this phase, I saw that you'd corrected the\n  bug that I found in ClearLeft. I decided to make this series of\n  patches anyway, since readability never hurt (and there's the\n  potential for finding another bug while reviewing this set).</p>\n\n  <ul>\n    <li>button.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n\n    <li>charproc.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h:\n      <ul>\n        <li>added four macros: SCRN_BUF_CHARS, SCRN_BUF_ATTRS,\n        SCRN_BUF_FORES, SCRN_BUF_BACKS to represent the four arrays\n        that are derived from screen-&gt;buf.</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_03\" id=\"xterm_03\">Patch #3 - 1996/1/7</a></h1>\n\n  <p>This is my third (and final cleanup) patch for xterm. It gets\n  rid of the unused stuff, and converts several functions to static\n  (thereby reducing their scope).</p>\n\n  <p>At this point, the only compile warnings I've got (on Linux)\n  are those about the select arguments (int vs fd_set type), and a\n  missing declaration for waitpid. Those both are hard to get right\n  without autoconfigure.</p>\n\n  <p>The next patches will address the functional changes...</p>\n\n  <ul>\n    <li>Tekproc.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n      </ul>\n    </li>\n\n    <li>charproc.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n\n        <li>deleted unused function unparsefputs -- changes\n        object.</li>\n      </ul>\n    </li>\n\n    <li>main.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n\n        <li>ifdef'd out unused function 'consolepr()' -- changes\n        object</li>\n\n        <li>removed unused variable 'dummy_tio' -- changes\n        object</li>\n\n        <li>moved variable 'discipline' to quiet unused-warning --\n        changes object</li>\n      </ul>\n    </li>\n\n    <li>main.h:\n      <ul>\n        <li>deleted unused definition of DEFBORDERWIDTH - n/c</li>\n      </ul>\n    </li>\n\n    <li>misc.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n\n        <li>provide dummy return statements for xerror and xioerror\n        to quiet compiler warnings -- changes object</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h:\n      <ul>\n        <li>change sbuf_address and abuf_address to 'Char *' -\n        n/c</li>\n      </ul>\n    </li>\n\n    <li>resize.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>remove unnecessary 'Char **' casts - n/c</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_02\" id=\"xterm_02\">Patch #2 - 1996/1/7</a></h1>\n\n  <p>This is my second patch to xterm. It corrects most of the gcc\n  warnings (except for some that are due to X header files ;-). I\n  compared objects to keep track of the changes that don't affect\n  the object code (n/c) versus those that do.</p>\n\n  <p>At this point, I'm compiling (fairly) clean with gcc\n  options</p>\n\n  <pre>\n        -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wnested-externs\n</pre>\n  <p>(I also compiled with -Wshadow, but while that found some\n  things that I wanted to find, there's far too many warnings from\n  the X headers to be usable in this context).</p>\n\n  <p>The changes:</p>\n\n  <ul>\n    <li>Tekproc.c:\n      <ul>\n        <li>parenthesized expression to avoid gcc warning --\n        n/c.</li>\n\n        <li>corrected nested-extern declaration for Bool\n        waiting_for_initial_map; ourTopLevelShellArgs, and\n        number_ourTopLevelShellArgs - n/c</li>\n      </ul>\n    </li>\n\n    <li>charproc.c:\n      <ul>\n        <li>corrected potentially-unintialized variables 'scstype',\n        'xim', and 'input_style' -- changes object.</li>\n\n        <li>adjusted logic of VTparse so that gcc won't warn about\n        setjmp clobbering parsestate -- changes object.</li>\n\n        <li>corrected initialization of 'scstype', which could have\n        been clobbered by setjmp/longjmp - changes object.</li>\n\n        <li>corrected nested-extern declaration of 'term',\n        'ProgramName' - n/c</li>\n      </ul>\n    </li>\n\n    <li>cursor.c:\n      <ul>\n        <li>corrected nested-extern declaration of 'term' --\n        n/c</li>\n\n        <li>renamed 'term' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>input.c:\n      <ul>\n        <li>change interface of StringInput to assume size_t (i.e.,\n        unsigned) nbytes -- changes object.</li>\n\n        <li>change interface of funcvalue, and sunfuncvalue to use\n        'KeySym' type instead of 'int' - changes object.</li>\n      </ul>\n    </li>\n\n    <li>main.c:\n      <ul>\n        <li>moved definitions of SIGNAL_T, SIGNAL_RETURN to proto.h\n        - n/c</li>\n\n        <li>corrected missing params of 'do_hangup()' -- changes\n        object (note: the missing params were not used).</li>\n\n        <li>corrected missing param of 'Error()' -- changes\n        object</li>\n\n        <li>corrected nested-extern 'environ' - n/c</li>\n\n        <li>adjusted assignments to 'tty_got_hung' and 'no_dev_tty'\n        so that gcc can see they won't be clobbered by the longjmp\n        - changes object.</li>\n\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>menu.c:\n      <ul>\n        <li>removed redundant prototype for 'do_hangup()' --\n        n/c.</li>\n\n        <li>renamed 'time' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>menu.h:\n      <ul>\n        <li>renamed 'time' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>misc.c:\n      <ul>\n        <li>corrected definition of 'HandleFocusChange()' --\n        changes object</li>\n\n        <li>cast parameters in call to 'TekExpose()' -- n/c</li>\n\n        <li>corrected nested-extern declarations of 'term',\n        'toplevel', ProgramName, and 'environ' -- n/c.</li>\n\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>proto.h:\n      <ul>\n        <li>moved definition of SIGNAL_T (and SIGNAL_RETURN) here\n        from main.c, resize.c to allow use of this symbol in\n        prototypes (mostly in xterm.h).</li>\n\n        <li>added definition 'Size_t' to use as corrected type for\n        strncpy, malloc sizes - n/c.</li>\n      </ul>\n    </li>\n\n    <li>resize.c:\n      <ul>\n        <li>moved SIGNAL_T definition to proto.h -- n/c.</li>\n\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>tabs.c:\n      <ul>\n        <li>corrected nested-extern declaration of 'term' --\n        n/c</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>corrected/supplied parameters to 'TekExpose()' --\n        changes object (note: 'TekExpose()' doesn't use its\n        parameters).</li>\n\n        <li>corrected nested-extern declaration of\n        'waiting_for_initial_map' -- n/c.</li>\n\n        <li>renamed 'term' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>xterm.h:\n      <ul>\n        <li>prototype 'do_hangup()', 'HandleFocusChange()',\n        'TekExpose()', 'Error()', 'Exit()' - forces changes in\n        various places.</li>\n\n        <li>adjusted prototypes that pass 'Boolean' arguments to\n        use 'int' (this is the \"correct\" ANSI approach to extended\n        compiles; it's worth mentioning that gcc doesn't meet the\n        ANSI spec here). I used gcc -Wconversion to find these, but\n        there's a lot of unrelated warnings that are due to setting\n        NARROWPROTO in the config - n/c.</li>\n\n        <li>renamed 'term' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_01\" id=\"xterm_01\">Patch #1 - 1996/1/6</a></h1>\n\n  <p>This is my first cleanup patch for xterm. It addresses all of\n  the gcc warnings for -Wall, -Wmissing-prototypes and\n  -Wstrict-prototypes that I can change without modifying the\n  object code. (I'm compiling this with gcc 2.7.0 for an aout\n  target, which makes it simple to compare objects. When I do\n  ELF-only, I've got a tool that compares that sort of thing as\n  well).</p>\n\n  <p>Briefly, this patch adds (and uses) two header files in the\n  xterm directory:</p>\n\n  <pre>\n        proto.h\n        xterm.h\n</pre>\n  <p>I expect this to be the biggest patch by far. However (barring\n  a misplaced prototype), it shouldn't break anything, since the\n  intent of the patch is to provide missing declarations.</p>\n</body>\n</html>\n"], "fixing_code": ["MANIFEST for xterm, version xterm-365d\n--------------------------------------------------------------------------------\nMANIFEST                        this file\n256colres.h                     resource-definitions for 256-color mode\n256colres.pl                    script to generate 256colres.h\n88colres.h                      resource definitions for 88-color mode\n88colres.pl                     script to generate 88colres.h\nAAA_README_VMS.txt              note for VMS port of 'xterm'\nCOPYING                         license for this program\nINSTALL                         configure script: options and related install instructions\nImakefile                       imake template for Makefile\nKOI8RXTerm.ad                   resources for koi8rxterm\nMakefile.in                     configure script template for Makefile\nREADME                          overview & caveats for 'xterm'\nREADME.i18n                     i18n readme:\nREADME.os390                    overview for os390 (EBCDIC) port of 'xterm'\nTHANKS                          list of direct contributors\nTekPrsTbl.c                     Tek4014 parser state tables\nTekparse.def                    template for generating Tekparse.h\nTekparse.h                      Tek4014 parser-state definitions\nTekproc.c                       Tek4014 parser-state functions\nTests                           Useful tests for xterm-developers\nUXTerm.ad                       alternate resources for UTF-8\nVTPrsTbl.c                      VT100 parser state tables\nVTparse.def                     template for generating VTparse.h\nVTparse.h                       VT100 parser-state definitions\nXTerm-col.ad                    color resource definitions for XTerm class\nXTerm.ad                        resource definitions for XTerm class\naclocal.m4                      configure script: custom macros\nbutton.c                        mouse button and selection processing\ncachedGCs.c                     maintain cache of GC's\ncharclass.c                     compact character-class module\ncharclass.h                     interface of charclass.c\ncharproc.c                      VT100 parser functions\ncharsets.c                      module to translate character-sets\nconfig.guess                    configure script: guess the system type\nconfig.sub                      configure script: validate system type\nconfigure                       generated\nconfigure.in                    template for generating configure script\nctlseqs.ms                      documentation: Xterm Control Sequences\nctlseqs.txt                     generated rendition of ctlseqs.ms\ncursor.c                        VT100 low-level cursor movement\ndata.c                          global data declarations\ndata.h                          global data external-definitions\ndf-install.in                   utility script for desktop-files\ndoublechr.c                     VT100 double-size character support\nerror.h                         error-code definitions for 'xterm'\nfontutils.c                     xterm functions for (re)loading fonts\nfontutils.h                     interface of fontutils.c\ngen-charsets.pl                 script to convert codepages into code\ngen-pc-fkeys.pl                 script to generate extended function-key terminfo\ngraphics.c                      graphics support functions for 'xterm'\ngraphics.h                      interface of graphics.c\ngraphics_regis.c                support for ReGIS\ngraphics_regis.h                interface of graphics_regis.c\ngraphics_sixel.c                support for Sixels\ngraphics_sixel.h                interface of graphics_sixel.c\nhtml.c                          format HTML-screendumps\ninput.c                         VT100 key-symbol and function-key translation\ninstall-sh                      install-script (needed by configure)\nkeysym2ucs.c                    lookup-table for UTF-8 to keysyms\nkeysym2ucs.h                    interface of keysym2ucs.c\nkoi8rxterm                      KOI-8 wrapper from Debian (originally me)\nkoi8rxterm.man                  manpage for koi8rxterm\nlinedata.c                      manage all line-data for VT100 widget\nlink_axp.com                    build-script for VMS port of xterm\nmain.c                          main program of 'xterm'\nmain.h                          default definitions for 'xterm'\nmake.com                        build-script for VMS port of 'xterm'\nmenu.c                          popup/pulldown menus for 'xterm'\nmenu.h                          interface of menu.c\nminstall.in                     script for installing manpages\nmisc.c                          miscellaneous utility functions for 'xterm'\nplink.sh                        script to prune unneeded libraries from link\nprecompose.c                    table of precompose sequences\nprecompose.h                    interface of precompose.c\nprint.c                         VT100+ print support functions\nptydata.c                       functions to manipulate data read from pty\nptyx.h                          structure-definitions for 'xterm'\nresize.c                        program to compute/modify xterm's window size\nresize.man                      manual page for 'resize'\nrun-tic.sh                      run tic, filtering out harmless messages\nscreen.c                        VT100 screen update functions\nscrollback.c                    manage scrollback (a big FIFO)\nscrollbar.c                     VT100 scrollbar support functions\nsinstall.sh                     install setuid if existing program was\nsvg.c                           format SVG-screendumps\ntabs.c                          VT100 tabstop support-functions\ntermcap                         termcap entries for 'xterm'\nterminfo                        terminfo entries for 'xterm'\ntestxmc.c                       testing: xmc/magic-cookies\ntrace.c                         debugging trace functions for 'xterm'\ntrace.h                         interface of trace.c\nutil.c                          miscellaneous utility functions for 'xterm'\nuxterm                          wrapper script to make unicode-xterm\nuxterm.desktop                  sample desktop file for uxterm\nuxterm.man                      manpage for uxterm, from Debian\nversion.c                       xterm package version, used also in resize\nversion.h                       version of xterm\nvms.c                           VMS version of xterm's spawn(), etc.\nvms.h                           system headers and definitions for vms.c\nwcwidth.c                       wide-character utility functions\nwcwidth.h                       interface of wcwidth.c\nxcharmouse.h                    Jason Bacon's mouse-defs, cleaned up a little\nxstrings.c                      a few common string functions\nxstrings.h                      interface of xstrings.c\nxterm.appdata.xml               sample \"appdata.xml\" file\nxterm.dat                       application defaults for VMS port of 'xterm'\nxterm.desktop                   sample desktop file for xterm.\nxterm.h                         common includes, definitions and prototypes for 'xterm'\nxterm.log.html                  changelog for xterm\nxterm.man                       manual page for 'xterm'\nxterm_axp.opt                   linker options file for VMS port of 'xterm'\nxterm_io.h                      split-out definitions of termio/termios/sgtty and winsize from main.c, os2main.c, screen.c and resize.c\nxtermcap.c                      termcap-related functions.\nxtermcap.h                      interface of xtermcap.c\nxtermcfg.hin                    configure script: template for xtermcfg.h\nxutf8.c                         JC's cleanup of UTF8\nxutf8.h                         JC's cleanup of UTF8\nicons                           subdirectory\nicons/filled-xterm.png          filled-xterm variants\nicons/filled-xterm.svg          filled-xterm variants\nicons/filled-xterm.xpms         filled-xterm variants\nicons/filled-xterm_16x16.xpm    filled-xterm variants\nicons/filled-xterm_32x32.xpm    filled-xterm variants\nicons/filled-xterm_48x48.xpm    filled-xterm variants\nicons/make-xpms                 script to make combined xpm-icons\nicons/mini.xterm.svg            svg format for mini-icon\nicons/mini.xterm.xpms           collection of mini-icons\nicons/mini.xterm_16x16.png      mini-icon 16x16 png\nicons/mini.xterm_16x16.xpm      mini-icon 16x16 pixmap\nicons/mini.xterm_256x256.png    mini-icon 256x256 png\nicons/mini.xterm_32x32.png      mini-icon 32x32 png\nicons/mini.xterm_32x32.xpm      mini-icon 32x32 pixmap\nicons/mini.xterm_48x48.png      mini-icon 48x48 png\nicons/mini.xterm_48x48.xpm      mini-icon 48x48 pixmap\nicons/terminal_48x48.svg        svg-format of \"terminal\"\nicons/terminal_48x48.xpm        xpm-format of \"terminal\"\nicons/xterm-color.png           xterm-color 48x48, in png-format\nicons/xterm-color.svg           xterm-color icon\nicons/xterm-color.xpms          collection of color icons\nicons/xterm-color_16x16.xpm     16x16 color icon\nicons/xterm-color_32x32.xpm     32x32 color icon\nicons/xterm-color_48x48.xpm     48x48 color icon\nicons/xterm.png                 xterm 48x48, in png-format\nicons/xterm.svg                 xterm icon\nicons/xterm.xpms                collection of icons\nicons/xterm_16x16.xpm           normal icon 16x16 pixmap\nicons/xterm_32x32.xpm           32x32 monochrome icon\nicons/xterm_48x48.xpm           48x48 monochrome icon\npackage/debian                  subdirectory\npackage/debian/changelog        build-script\npackage/debian/color.sed        build-script\npackage/debian/compat           build-script\npackage/debian/control          build-script\npackage/debian/copyright        build-script\npackage/debian/postinst         post-install script for update-alternatives\npackage/debian/prerm            pre-remove script for update-alternatives\npackage/debian/rules            build-script\npackage/debian/source           subdirectory\npackage/debian/source/format    build-script\npackage/debian                  subdirectory\npackage/debian/watch            build-script\npackage/debian/xterm-dev.docs   build-script\npackage/debian/xterm-dev.lintian-overrides  ignore useless warnings from lintian\npackage/debian/xterm-dev.menu   Debian menu-file for xterm-dev package.\npackage/debian/xterm-xres.sed   build-script\npackage/freebsd                 subdirectory\npackage/freebsd/Makefile        build-script\npackage/freebsd/distinfo        generated sums\npackage/freebsd/pkg-descr       build-script\npackage/freebsd/pkg-message     build-script\npackage/freebsd/pkg-message.wchar  build-script\npackage/freebsd/pkg-plist       build-script\npackage/pkgsrc                  subdirectory\npackage/pkgsrc/DESCR            build-script\npackage/pkgsrc/Makefile         build-script\npackage/pkgsrc/PLIST            build-script\npackage/pkgsrc/distinfo         build-script\npackage/pkgsrc/options.mk       build-script\npackage                         subdirectory\npackage/xterm.spec              build-script\ntektests                        subdirectory\ntektests/aitest.tek             tek4014 demo: draw a globe\ntektests/dmerc.tek              tek4014 demo: draws a Mercator projection with orbit\ntektests/fotest.tek             tek4014 demo: draw a scatterplot on log scale\ntektests/imtest.tek             tek4014 demo: draw a test pattern\ntektests/imtesth.tek            tek4014 demo: draw a test pattern\ntektests/ocpred.tek             tek4014 demo: an occultation prediction\ntektests/usmap.tek              tek4014 demo: a US map\nunicode                         subdirectory\nunicode/README                  description of files in ./unicode\nunicode/convmap.pl              perl script for generating the lookup table for UTF-8 to keysym\nunicode/keysym.map              keysym mapping from UTF-8\nunicode/make-precompose.sh      make precompose.c\nunicode/precompose.c.head       header of precompose.c\nunicode/precompose.c.tail       tail of precompose.c\nvttests                         subdirectory\nvttests/16colors.sh             test-script to show 16-colors\nvttests/256colors.pl            script to illustrate 256-colors\nvttests/256colors2.pl           fancy test-script for 256-colors\nvttests/88colors.pl             sample script showing 88-colors\nvttests/88colors2.pl            sample script showing 88-colors\nvttests/8colors.sh              test-script to illustrate 8-colors\nvttests/acolors.sh              demonstrate changing the ANSI colors\nvttests/closest-rgb.pl          demo of color-distances\nvttests/doublechars.sh          test script to demonstrate doublesize chars\nvttests/dynamic.pl              demo for dynamic colors\nvttests/dynamic.sh              script to illustrate the dynamic colors control sequence\nvttests/dynamic2.sh             complete example of dynamic colors\nvttests/fonts.sh                script to demonstrate font-switching sequences\nvttests/modify-keys.pl          illustrate modifyOtherKeys with a table\nvttests/mouse-codes             demo script for mouse-codes\nvttests/other-sgr.sh            demonstrate non-VTxx SGRs\nvttests/paste64.pl              script to test base64-selection option\nvttests/print-vt-chars.pl       demo-script\nvttests/query-color.pl          demonstrate OSC 4\nvttests/query-dynamic.pl        demonstrate OSC 10 to OSC 19\nvttests/query-fonts.pl          script to demo/test font-querying\nvttests/query-status.pl         query DECRQSS status\nvttests/query-xres.pl           test/demo for DCS+Q\nvttests/report-sgr.pl           demonstrate report-sgr\nvttests/resize.pl               translated resize.sh to perl since it is easy to test, and I needed\nvttests/resize.sh               script to demonstrate resizing\nvttests/sgrPushPop.pl           demonstrate xterm SGR push/pop\nvttests/sgrPushPop2.pl          demonstrate xterm SGR push/pop for colors\nvttests/tcapquery.pl            script to test tcap-query option\nvttests/title.sh                test-script to show title of xterm in action\n", "/* $XTermId: button.c,v 1.634 2021/02/09 23:04:41 tom Exp $ */\n\n/*\n * Copyright 1999-2020,2021 by Thomas E. Dickey\n *\n *                         All Rights Reserved\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Except as contained in this notice, the name(s) of the above copyright\n * holders shall not be used in advertising or otherwise to promote the\n * sale, use or other dealings in this Software without prior written\n * authorization.\n *\n *\n * Copyright 1987 by Digital Equipment Corporation, Maynard, Massachusetts.\n *\n *                         All Rights Reserved\n *\n * Permission to use, copy, modify, and distribute this software and its\n * documentation for any purpose and without fee is hereby granted,\n * provided that the above copyright notice appear in all copies and that\n * both that copyright notice and this permission notice appear in\n * supporting documentation, and that the name of Digital Equipment\n * Corporation not be used in advertising or publicity pertaining to\n * distribution of the software without specific, written prior permission.\n *\n *\n * DIGITAL DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING\n * ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL\n * DIGITAL BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR\n * ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n * WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n * ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n * SOFTWARE.\n */\n\n/*\nbutton.c\tHandles button events in the terminal emulator.\n\t\tdoes cut/paste operations, change modes via menu,\n\t\tpasses button events through to some applications.\n\t\t\t\tJ. Gettys.\n*/\n\n#include <xterm.h>\n\n#include <stdio.h>\n#include <ctype.h>\n#include <assert.h>\n\n#include <X11/Xatom.h>\n#include <X11/Xmu/Atoms.h>\n#include <X11/Xmu/StdSel.h>\n\n#include <xutf8.h>\n#include <fontutils.h>\n\n#include <data.h>\n#include <error.h>\n#include <menu.h>\n#include <charclass.h>\n#include <xstrings.h>\n\n#if OPT_SELECT_REGEX\n#ifdef HAVE_PCRE2POSIX_H\n#include <pcre2posix.h>\n#else\n#ifdef HAVE_PCREPOSIX_H\n#include <pcreposix.h>\n#else /* POSIX regex.h */\n#include <sys/types.h>\n#include <regex.h>\n#endif\n#endif\n#endif\n\n#ifdef HAVE_X11_TRANSLATEI_H\n#include <X11/ConvertI.h>\n#include <X11/TranslateI.h>\n#else\nextern String _XtPrintXlations(Widget w,\n\t\t\t       XtTranslations xlations,\n\t\t\t       Widget accelWidget,\n\t\t\t       _XtBoolean includeRHS);\n#endif\n\n#define PRIMARY_NAME    \"PRIMARY\"\n#define CLIPBOARD_NAME  \"CLIPBOARD\"\n#define SECONDARY_NAME  \"SECONDARY\"\n\n#define AtomToSelection(d,n) \\\n\t\t (((n) == XA_CLIPBOARD(d)) \\\n\t\t  ? CLIPBOARD_CODE \\\n\t\t  : (((n) == XA_SECONDARY) \\\n\t\t     ? SECONDARY_CODE \\\n\t\t     : PRIMARY_CODE))\n\n#define isSelectionCode(n) ((n) >= PRIMARY_CODE)\n#define CutBufferToCode(n) ((n) +  MAX_SELECTION_CODES)\n#define okSelectionCode(n) (isSelectionCode(n) ? (n) : PRIMARY_CODE)\n\n#if OPT_WIDE_CHARS\n#include <ctype.h>\n#include <wcwidth.h>\n#else\n#define CharacterClass(value) \\\n\tcharClass[(value) & (int)((sizeof(charClass)/sizeof(charClass[0]))-1)]\n#endif\n\n    /*\n     * We'll generally map rows to indices when doing selection.\n     * Simplify that with a macro.\n     *\n     * Note that ROW2INX() is safe to use with auto increment/decrement for\n     * the row expression since that is evaluated once.\n     */\n#define GET_LINEDATA(screen, row) \\\n\tgetLineData(screen, ROW2INX(screen, row))\n\n#define MaxMouseBtn  5\n\n#define IsBtnEvent(event) ((event)->type == ButtonPress || (event)->type == ButtonRelease)\n#define IsKeyEvent(event) ((event)->type == KeyPress    || (event)->type == KeyRelease)\n\n#define\tCoordinate(s,c)\t((c)->row * MaxCols(s) + (c)->col)\n\nstatic const CELL zeroCELL =\n{0, 0};\n\n#if OPT_DEC_LOCATOR\nstatic Bool SendLocatorPosition(XtermWidget xw, XButtonEvent *event);\nstatic void CheckLocatorPosition(XtermWidget xw, XButtonEvent *event);\n#endif /* OPT_DEC_LOCATOR */\n\n/* Multi-click handling */\n#if OPT_READLINE\nstatic Time lastButtonDownTime = 0;\nstatic int ExtendingSelection = 0;\nstatic Time lastButton3UpTime = 0;\nstatic Time lastButton3DoubleDownTime = 0;\nstatic CELL lastButton3;\t/* At the release time */\n#endif /* OPT_READLINE */\n\nstatic Char *SaveText(TScreen *screen, int row, int scol, int ecol,\n\t\t      Char *lp, int *eol);\nstatic int Length(TScreen *screen, int row, int scol, int ecol);\nstatic void ComputeSelect(XtermWidget xw, CELL *startc, CELL *endc, Bool\n\t\t\t  extend, Bool normal);\nstatic void EditorButton(XtermWidget xw, XButtonEvent *event);\nstatic void EndExtend(XtermWidget w, XEvent *event, String *params, Cardinal\n\t\t      num_params, Bool use_cursor_loc);\nstatic void ExtendExtend(XtermWidget xw, const CELL *cell);\nstatic void PointToCELL(TScreen *screen, int y, int x, CELL *cell);\nstatic void ReHiliteText(XtermWidget xw, CELL *first, CELL *last);\nstatic void SaltTextAway(XtermWidget xw, int which, CELL *cellc, CELL *cell);\nstatic void SelectSet(XtermWidget xw, XEvent *event, String *params, Cardinal num_params);\nstatic void SelectionReceived PROTO_XT_SEL_CB_ARGS;\nstatic void StartSelect(XtermWidget xw, const CELL *cell);\nstatic void TrackDown(XtermWidget xw, XButtonEvent *event);\nstatic void TrackText(XtermWidget xw, const CELL *first, const CELL *last);\nstatic void UnHiliteText(XtermWidget xw);\nstatic void _OwnSelection(XtermWidget xw, String *selections, Cardinal count);\nstatic void do_select_end(XtermWidget xw, XEvent *event, String *params,\n\t\t\t  Cardinal *num_params, Bool use_cursor_loc);\n\n#define MOUSE_LIMIT (255 - 32)\n\n/* Send SET_EXT_SIZE_MOUSE to enable offsets up to EXT_MOUSE_LIMIT */\n#define EXT_MOUSE_LIMIT (2047 - 32)\n#define EXT_MOUSE_START (127 - 32)\n\nstatic int\nMouseLimit(TScreen *screen)\n{\n    int mouse_limit;\n\n    switch (screen->extend_coords) {\n    default:\n\tmouse_limit = MOUSE_LIMIT;\n\tbreak;\n    case SET_EXT_MODE_MOUSE:\n\tmouse_limit = EXT_MOUSE_LIMIT;\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_URXVT_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tmouse_limit = -1;\n\tbreak;\n    }\n    return mouse_limit;\n}\n\nstatic unsigned\nEmitMousePosition(TScreen *screen, Char line[], unsigned count, int value)\n{\n    int mouse_limit = MouseLimit(screen);\n\n    /*\n     * Add pointer position to key sequence\n     *\n     * In extended mode we encode large positions as two-byte UTF-8.\n     *\n     * NOTE: historically, it was possible to emit 256, which became\n     * zero by truncation to 8 bits. While this was arguably a bug,\n     * it's also somewhat useful as a past-end marker. We preserve\n     * this behavior for both normal and extended mouse modes.\n     */\n    switch (screen->extend_coords) {\n    default:\n\tif (value == mouse_limit) {\n\t    line[count++] = CharOf(0);\n\t} else {\n\t    line[count++] = CharOf(' ' + value + 1);\n\t}\n\tbreak;\n    case SET_EXT_MODE_MOUSE:\n\tif (value == mouse_limit) {\n\t    line[count++] = CharOf(0);\n\t} else if (value < EXT_MOUSE_START) {\n\t    line[count++] = CharOf(' ' + value + 1);\n\t} else {\n\t    value += ' ' + 1;\n\t    line[count++] = CharOf(0xC0 + (value >> 6));\n\t    line[count++] = CharOf(0x80 + (value & 0x3F));\n\t}\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_URXVT_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tcount += (unsigned) sprintf((char *) line + count, \"%d\", value + 1);\n\tbreak;\n    }\n    return count;\n}\n\nstatic unsigned\nEmitMousePositionSeparator(TScreen *screen, Char line[], unsigned count)\n{\n    switch (screen->extend_coords) {\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_URXVT_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tline[count++] = ';';\n\tbreak;\n    }\n    return count;\n}\n\nenum {\n    scanMods,\n    scanKey,\n    scanColon,\n    scanFunc,\n    scanArgs\n};\n\n#if OPT_TRACE > 1\nstatic const char *\nvisibleScan(int mode)\n{\n    const char *result = \"?\";\n#define DATA(name) case name: result = #name; break\n    switch (mode) {\n\tDATA(scanMods);\n\tDATA(scanKey);\n\tDATA(scanColon);\n\tDATA(scanFunc);\n\tDATA(scanArgs);\n    }\n#undef DATA\n    return result;\n}\n#endif\n\n#define L_BRACK '<'\n#define R_BRACK '>'\n#define L_PAREN '('\n#define R_PAREN ')'\n\nstatic char *\nscanTrans(char *source, int *this_is, int *next_is, unsigned *first, unsigned *last)\n{\n    char ch;\n    char *target = source;\n\n    *first = *last = 0;\n    if (IsEmpty(target)) {\n\ttarget = 0;\n    } else {\n\tdo {\n\t    while (IsSpace(*target))\n\t\ttarget++;\n\t    *first = (unsigned) (target - source);\n\t    switch (*this_is = *next_is) {\n\t    case scanMods:\n\t\twhile ((ch = *target)) {\n\t\t    if (IsSpace(ch)) {\n\t\t\tbreak;\n\t\t    } else if (ch == L_BRACK) {\n\t\t\t*next_is = scanKey;\n\t\t\tbreak;\n\t\t    } else if (ch == ':') {\n\t\t\t*next_is = scanColon;\n\t\t\tbreak;\n\t\t    } else if (ch == '~' && target != source) {\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t}\n\t\tbreak;\n\t    case scanKey:\n\t\twhile ((ch = *target)) {\n\t\t    if (IsSpace(ch)) {\n\t\t\tbreak;\n\t\t    } else if (ch == ':') {\n\t\t\t*next_is = scanColon;\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t    if (ch == R_BRACK)\n\t\t\tbreak;\n\t\t}\n\t\tbreak;\n\t    case scanColon:\n\t\t*next_is = scanFunc;\n\t\ttarget++;\n\t\tbreak;\n\t    case scanFunc:\n\t\twhile ((ch = *target)) {\n\t\t    if (IsSpace(ch)) {\n\t\t\tbreak;\n\t\t    } else if (ch == L_PAREN) {\n\t\t\t*next_is = scanArgs;\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t}\n\t\tbreak;\n\t    case scanArgs:\n\t\twhile ((ch = *target)) {\n\t\t    if (ch == R_PAREN) {\n\t\t\ttarget++;\n\t\t\t*next_is = scanFunc;\n\t\t\tbreak;\n\t\t    }\n\t\t    target++;\n\t\t}\n\t\tbreak;\n\t    }\n\t    *last = (unsigned) (target - source);\n\t    if (*target == '\\n') {\n\t\t*next_is = scanMods;\n\t\ttarget++;\n\t    }\n\t} while (*first == *last);\n    }\n    return target;\n}\n\nvoid\nxtermButtonInit(XtermWidget xw)\n{\n    Widget w = (Widget) xw;\n    XErrorHandler save = XSetErrorHandler(ignore_x11_error);\n    XtTranslations xlations;\n    Widget xcelerat;\n    String result;\n\n    XtVaGetValues(w,\n\t\t  XtNtranslations, &xlations,\n\t\t  XtNaccelerators, &xcelerat,\n\t\t  (XtPointer) 0);\n    result = _XtPrintXlations(w, xlations, xcelerat, True);\n    if (result) {\n\tstatic const char *table[] =\n\t{\n\t    \"insert-selection\",\n\t    \"select-end\",\n\t    \"select-extend\",\n\t    \"select-start\",\n\t    \"start-extend\",\n\t};\n\tchar *data = x_strdup(result);\n\tchar *next;\n\tint state = scanMods;\n\tint state2 = scanMods;\n\tunsigned first;\n\tunsigned last;\n\tint have_button = -1;\n\tBool want_button = False;\n\tBool have_shift = False;\n\tunsigned allowed = 0;\n\tunsigned disallow = 0;\n\n\tTRACE((\"xtermButtonInit length %ld\\n\", strlen(result)));\n\txw->keyboard.print_translations = data;\n\twhile ((next = scanTrans(data, &state, &state2, &first, &last)) != 0) {\n\t    unsigned len = (last - first);\n\t    TRACE2((\"parse %s:%d..%d '%.*s'\\n\",\n\t\t    visibleScan(state), first, last,\n\t\t    len, data + first));\n\t    if (state == scanMods) {\n\t\tif (len > 1 && data[first] == '~') {\n\t\t    len--;\n\t\t    first++;\n\t\t}\n\t\tif (len == 7 && !x_strncasecmp(data + first, \"button\", len - 1)) {\n\t\t    have_button = data[first + 6] - '0';\n\t\t} else if (len == 5 && !x_strncasecmp(data + first, \"shift\", len)) {\n\t\t    have_shift = True;\n\t\t}\n\t    } else if (state == scanKey) {\n\t\tif (!x_strncasecmp(data + first, \"<buttonpress>\", len) ||\n\t\t    !x_strncasecmp(data + first, \"<buttonrelease>\", len)) {\n\t\t    want_button = True;\n\t\t} else if (want_button) {\n\t\t    have_button = data[first] - '0';\n\t\t    want_button = False;\n\t\t}\n\t    } else if (state == scanFunc && have_button > 0) {\n\t\tCardinal n;\n\t\tunsigned bmask = 1U << (have_button - 1);\n\t\tfor (n = 0; n < XtNumber(table); ++n) {\n\t\t    if (!x_strncasecmp(table[n], data + first, len)) {\n\t\t\tTRACE((\"...button %d: %s%s\\n\",\n\t\t\t       have_button, table[n],\n\t\t\t       have_shift ? \" (disallow)\" : \"\"));\n\t\t\tif (have_shift)\n\t\t\t    disallow |= bmask;\n\t\t\telse\n\t\t\t    allowed |= bmask;\n\t\t\tbreak;\n\t\t    }\n\t\t}\n\t    }\n\t    if (state2 == scanMods && state >= scanColon) {\n\t\thave_button = -1;\n\t\twant_button = False;\n\t\thave_shift = False;\n\t    }\n\t    state = state2;\n\t    data = next;\n\t}\n\tXFree((char *) result);\n\txw->keyboard.shift_buttons = allowed & ~disallow;\n#if OPT_TRACE\n\tif (xw->keyboard.shift_buttons) {\n\t    int button = 0;\n\t    unsigned mask = xw->keyboard.shift_buttons;\n\t    TRACE((\"...Buttons used for selection that can be overridden:\"));\n\t    while (mask != 0) {\n\t\t++button;\n\t\tif ((mask & 1) != 0)\n\t\t    TRACE((\" %d\", button));\n\t\tmask >>= 1;\n\t    }\n\t    TRACE((\"\\n\"));\n\t} else {\n\t    TRACE((\"...No buttons used with selection can be overridden\\n\"));\n\t}\n#endif\n    }\n    XSetErrorHandler(save);\n}\n\n/*\n * Shift and control are regular X11 modifiers, but meta is not:\n * + X10 (which had no xmodmap utility) had a meta mask, but X11 did not.\n * + X11R1 introduced xmodmap, along with the current set of modifier masks.\n *   The meta key has been assumed to be mod1 since X11R1.\n *   The initial xterm logic in X11 was different, but gave the same result.\n * + X11R2 modified xterm was to eliminate the X10 table which provided part of\n *   the meta logic.\n * + X11R3 modified Xt, making Meta_L and Meta_R assignable via xmodmap, and\n *   equating Alt with Meta.  Neither Alt/Meta are modifiers, but Alt is more\n *   likely to be on the keyboard.  This release also added keymap tables for\n *   the server; Meta was used frequently in HP keymaps, which were the most\n *   extensive set of keymaps.\n * + X11R4 mentions Meta in the ICCCM, stating that if Meta_L or Meta_R are\n *   found in the keysyms for a given modifier, that the client should use\n *   that modifier.\n *\n * This function follows the ICCCM, picking the modifier which contains the\n * Meta_L/Meta_R keysyms (if available), falling back to the Alt_L/Alt_R\n * (as per X11R3), and ultimately to mod1 (per X11R1).\n */\nstatic unsigned\nMetaMask(XtermWidget xw)\n{\n#if OPT_NUM_LOCK\n    unsigned meta = xw->work.meta_mods;\n    if (meta == 0)\n\tmeta = xw->work.alt_mods;\n    if (meta == 0)\n\tmeta = Mod1Mask;\n#else\n    unsigned meta = Mod1Mask;\n    (void) xw;\n#endif\n    return meta;\n}\n\n/*\n * Returns a mask of the modifiers we may use for modifying the mouse protocol\n * response strings.\n */\nstatic unsigned\nOurModifiers(XtermWidget xw)\n{\n    return (ShiftMask\n\t    | ControlMask\n\t    | MetaMask(xw));\n}\n\n/*\n * The actual check for the shift-mask, to see if it should tell xterm to\n * override mouse-protocol in favor of select/paste actions depends upon\n * whether the shiftEscape resource is set to true/always vs false/never.\n */\nstatic Boolean\nShiftOverride(XtermWidget xw, unsigned state, int button)\n{\n    unsigned check = (state & OurModifiers(xw));\n    Boolean result = False;\n\n    if (check & ShiftMask) {\n\tif (xw->keyboard.shift_escape == ssFalse ||\n\t    xw->keyboard.shift_escape == ssNever) {\n\t    result = True;\n\t} else if (xw->keyboard.shift_escape == ssTrue) {\n\t    /*\n\t     * Check if the button is one that we found does not directly use\n\t     * the shift-modifier in its bindings to select/copy actions.\n\t     */\n\t    if (button > 0 && button <= MaxMouseBtn) {\n\t\tif (xw->keyboard.shift_buttons & (1U << (button - 1))) {\n\t\t    result = True;\n\t\t}\n\t    } else {\n\t\tresult = True;\t/* unlikely, and we don't care */\n\t    }\n\t}\n    }\n    TRACE2((\"ShiftOverride ( %#x -> %#x ) %d\\n\", state, check, result));\n    return result;\n}\n\n/*\n * Normally xterm treats the shift-modifier specially when the mouse protocol\n * is active.  The translations resource binds otherwise unmodified button\n * for these mouse-related events:\n *\n *         ~Meta <Btn1Down>:select-start() \\n\\\n *       ~Meta <Btn1Motion>:select-extend() \\n\\\n *     ~Ctrl ~Meta <Btn2Up>:insert-selection(SELECT, CUT_BUFFER0) \\n\\\n *   ~Ctrl ~Meta <Btn3Down>:start-extend() \\n\\\n *       ~Meta <Btn3Motion>:select-extend() \\n\\\n *                  <BtnUp>:select-end(SELECT, CUT_BUFFER0) \\n\\\n *\n * There is no API in the X libraries which would tell us if a given mouse\n * button is bound to one of these actions.  These functions make the choice\n * configurable.\n */\nstatic Bool\nInterpretButton(XtermWidget xw, XButtonEvent *event)\n{\n    Bool result = False;\n\n    if (ShiftOverride(xw, event->state, (int) event->button)) {\n\tTRACE((\"...shift-button #%d overrides mouse-protocol\\n\", event->button));\n\tresult = True;\n    }\n    return result;\n}\n\n#define Button1Index 8\t\t/* X.h should have done this */\n\nstatic int\nMotionButton(unsigned state)\n{\n    unsigned bmask = state >> Button1Index;\n    int result = 1;\n\n    if (bmask != 0) {\n\twhile (!(bmask & 1)) {\n\t    ++result;\n\t    bmask >>= 1;\n\t}\n    }\n    return result;\n}\n\nstatic Bool\nInterpretEvent(XtermWidget xw, XEvent *event)\n{\n    Bool result = False;\t/* if not a button, is motion */\n\n    if (IsBtnEvent(event)) {\n\tresult = InterpretButton(xw, (XButtonEvent *) event);\n    } else if (event->type == MotionNotify) {\n\tunsigned state = event->xmotion.state;\n\tint button = MotionButton(state);\n\n\tif (ShiftOverride(xw, state, button)) {\n\t    TRACE((\"...shift-motion #%d (%d,%d) overrides mouse-protocol\\n\",\n\t\t   button,\n\t\t   event->xmotion.y,\n\t\t   event->xmotion.x));\n\t    result = True;\n\t}\n    }\n    return result;\n}\n\n#define OverrideEvent(event)  InterpretEvent(xw, event)\n#define OverrideButton(event) InterpretButton(xw, event)\n\n/*\n * Returns true if we handled the event here, and nothing more is needed.\n */\nBool\nSendMousePosition(XtermWidget xw, XEvent *event)\n{\n    XButtonEvent *my_event = (XButtonEvent *) event;\n    Bool result = False;\n\n    switch (okSendMousePos(xw)) {\n    case MOUSE_OFF:\n\t/* If send_mouse_pos mode isn't on, we shouldn't be here */\n\tbreak;\n\n    case BTN_EVENT_MOUSE:\n    case ANY_EVENT_MOUSE:\n\tif (!OverrideEvent(event)) {\n\t    /* xterm extension for motion reporting. June 1998 */\n\t    /* EditorButton() will distinguish between the modes */\n\t    switch (event->type) {\n\t    case MotionNotify:\n\t\tmy_event->button = 0;\n\t\t/* FALLTHRU */\n\t    case ButtonPress:\n\t\t/* FALLTHRU */\n\t    case ButtonRelease:\n\t\tEditorButton(xw, my_event);\n\t\tresult = True;\n\t\tbreak;\n\t    }\n\t}\n\tbreak;\n\n    case X10_MOUSE:\t\t/* X10 compatibility sequences */\n\tif (IsBtnEvent(event)) {\n\t    if (!OverrideButton(my_event)) {\n\t\tif (my_event->type == ButtonPress)\n\t\t    EditorButton(xw, my_event);\n\t\tresult = True;\n\t    }\n\t}\n\tbreak;\n\n    case VT200_HIGHLIGHT_MOUSE:\t/* DEC vt200 hilite tracking */\n\tif (IsBtnEvent(event)) {\n\t    if (!OverrideButton(my_event)) {\n\t\tif (my_event->type == ButtonPress &&\n\t\t    my_event->button == Button1) {\n\t\t    TrackDown(xw, my_event);\n\t\t} else {\n\t\t    EditorButton(xw, my_event);\n\t\t}\n\t\tresult = True;\n\t    }\n\t}\n\tbreak;\n\n    case VT200_MOUSE:\t\t/* DEC vt200 compatible */\n\tif (IsBtnEvent(event)) {\n\t    if (!OverrideButton(my_event)) {\n\t\tEditorButton(xw, my_event);\n\t\tresult = True;\n\t    }\n\t}\n\tbreak;\n\n    case DEC_LOCATOR:\n#if OPT_DEC_LOCATOR\n\tif (IsBtnEvent(event) || event->type == MotionNotify) {\n\t    result = SendLocatorPosition(xw, my_event);\n\t}\n#endif /* OPT_DEC_LOCATOR */\n\tbreak;\n    }\n    return result;\n}\n\n#if OPT_DEC_LOCATOR\n\n#define\tLocatorCoords( row, col, x, y, oor )\t\t\t\\\n    if( screen->locator_pixels ) {\t\t\t\t\\\n\t(oor)=False; (row) = (y)+1; (col) = (x)+1;\t\t\\\n\t/* Limit to screen dimensions */\t\t\t\\\n\tif ((row) < 1) (row) = 1,(oor)=True;\t\t\t\\\n\telse if ((row) > screen->border*2+Height(screen))\t\\\n\t    (row) = screen->border*2+Height(screen),(oor)=True;\t\\\n\tif ((col) < 1) (col) = 1,(oor)=True;\t\t\t\\\n\telse if ((col) > OriginX(screen)*2+Width(screen))\t\\\n\t    (col) = OriginX(screen)*2+Width(screen),(oor)=True;\t\\\n    } else {\t\t\t\t\t\t\t\\\n\t(oor)=False;\t\t\t\t\t\t\\\n\t/* Compute character position of mouse pointer */\t\\\n\t(row) = ((y) - screen->border) / FontHeight(screen);\t\\\n\t(col) = ((x) - OriginX(screen)) / FontWidth(screen);\t\\\n\t/* Limit to screen dimensions */\t\t\t\\\n\tif ((row) < 0) (row) = 0,(oor)=True;\t\t\t\\\n\telse if ((row) > screen->max_row)\t\t\t\\\n\t    (row) = screen->max_row,(oor)=True;\t\t\t\\\n\tif ((col) < 0) (col) = 0,(oor)=True;\t\t\t\\\n\telse if ((col) > screen->max_col)\t\t\t\\\n\t    (col) = screen->max_col,(oor)=True;\t\t\t\\\n\t(row)++; (col)++;\t\t\t\t\t\\\n    }\n\nstatic Bool\nSendLocatorPosition(XtermWidget xw, XButtonEvent *event)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    int row, col;\n    Bool oor;\n    int button;\n    unsigned state;\n\n    /* Make sure the event is an appropriate type */\n    if (IsBtnEvent(event)) {\n\tif (OverrideButton(event))\n\t    return (False);\n    } else {\n\tif (!screen->loc_filter)\n\t    return (False);\n    }\n\n    if ((event->type == ButtonPress &&\n\t !(screen->locator_events & LOC_BTNS_DN)) ||\n\t(event->type == ButtonRelease &&\n\t !(screen->locator_events & LOC_BTNS_UP)))\n\treturn (True);\n\n    if (event->type == MotionNotify) {\n\tCheckLocatorPosition(xw, event);\n\treturn (True);\n    }\n\n    /* get button # */\n    button = (int) event->button - 1;\n\n    LocatorCoords(row, col, event->x, event->y, oor);\n\n    /*\n     * DECterm mouse:\n     *\n     * ESCAPE '[' event ; mask ; row ; column '&' 'w'\n     */\n    memset(&reply, 0, sizeof(reply));\n    reply.a_type = ANSI_CSI;\n\n    if (oor) {\n\treply.a_nparam = 1;\n\treply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n\treturn (True);\n    }\n\n    /*\n     * event:\n     *        1       no buttons\n     *        2       left button down\n     *        3       left button up\n     *        4       middle button down\n     *        5       middle button up\n     *        6       right button down\n     *        7       right button up\n     *        8       M4 down\n     *        9       M4 up\n     */\n    reply.a_nparam = 4;\n    switch (event->type) {\n    case ButtonPress:\n\treply.a_param[0] = (ParmType) (2 + (button << 1));\n\tbreak;\n    case ButtonRelease:\n\treply.a_param[0] = (ParmType) (3 + (button << 1));\n\tbreak;\n    default:\n\treturn (True);\n    }\n    /*\n     * mask:\n     * bit7   bit6   bit5   bit4   bit3     bit2       bit1         bit0\n     *                             M4 down  left down  middle down  right down\n     *\n     * Notice that Button1 (left) and Button3 (right) are swapped in the mask.\n     * Also, mask should be the state after the button press/release,\n     * X provides the state not including the button press/release.\n     */\n    state = (event->state\n\t     & (Button1Mask | Button2Mask | Button3Mask | Button4Mask)) >> 8;\n    /* update mask to \"after\" state */\n    state ^= ((unsigned) (1 << button));\n    /* swap Button1 & Button3 */\n    state = ((state & (unsigned) ~(4 | 1))\n\t     | ((state & 1) ? 4 : 0)\n\t     | ((state & 4) ? 1 : 0));\n\n    reply.a_param[1] = (ParmType) state;\n    reply.a_param[2] = (ParmType) row;\n    reply.a_param[3] = (ParmType) col;\n    reply.a_inters = '&';\n    reply.a_final = 'w';\n\n    unparseseq(xw, &reply);\n\n    if (screen->locator_reset) {\n\tMotionOff(screen, xw);\n\tscreen->send_mouse_pos = MOUSE_OFF;\n    }\n\n    /*\n     * DECterm turns the Locator off if a button is pressed while a filter\n     * rectangle is active.  This might be a bug, but I don't know, so I'll\n     * emulate it anyway.\n     */\n    if (screen->loc_filter) {\n\tscreen->send_mouse_pos = MOUSE_OFF;\n\tscreen->loc_filter = False;\n\tscreen->locator_events = 0;\n\tMotionOff(screen, xw);\n    }\n\n    return (True);\n}\n\n/*\n * mask:\n * bit 7   bit 6   bit 5   bit 4   bit 3   bit 2       bit 1         bit 0\n *                                 M4 down left down   middle down   right down\n *\n * Button1 (left) and Button3 (right) are swapped in the mask relative to X.\n */\n#define\tButtonState(state, mask)\t\\\n{ int stemp = (int) (((mask) & (Button1Mask | Button2Mask | Button3Mask | Button4Mask)) >> 8);\t\\\n  /* swap Button1 & Button3 */\t\t\t\t\t\t\t\t\\\n  (state) = (stemp & ~(4|1)) | ((stemp & 1) ? 4 : 0) | ((stemp & 4) ? 1 : 0);\t\t\t\\\n}\n\nvoid\nGetLocatorPosition(XtermWidget xw)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    Window root, child;\n    int rx, ry, x, y;\n    unsigned int mask = 0;\n    int row = 0, col = 0;\n    Bool oor = False;\n    Bool ret = False;\n    int state;\n\n    /*\n     * DECterm turns the Locator off if the position is requested while a\n     * filter rectangle is active.  This might be a bug, but I don't know, so\n     * I'll emulate it anyways.\n     */\n    if (screen->loc_filter) {\n\tscreen->send_mouse_pos = MOUSE_OFF;\n\tscreen->loc_filter = False;\n\tscreen->locator_events = 0;\n\tMotionOff(screen, xw);\n    }\n\n    memset(&reply, 0, sizeof(reply));\n    reply.a_type = ANSI_CSI;\n\n    if (okSendMousePos(xw) == DEC_LOCATOR) {\n\tret = XQueryPointer(screen->display, VWindow(screen), &root,\n\t\t\t    &child, &rx, &ry, &x, &y, &mask);\n\tif (ret) {\n\t    LocatorCoords(row, col, x, y, oor);\n\t}\n    }\n    if (ret == False || oor) {\n\treply.a_nparam = 1;\n\treply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n\treturn;\n    }\n\n    ButtonState(state, mask);\n\n    reply.a_nparam = 4;\n    reply.a_param[0] = 1;\t/* Event - 1 = response to locator request */\n    reply.a_param[1] = (ParmType) state;\n    reply.a_param[2] = (ParmType) row;\n    reply.a_param[3] = (ParmType) col;\n    reply.a_inters = '&';\n    reply.a_final = 'w';\n    unparseseq(xw, &reply);\n\n    if (screen->locator_reset) {\n\tMotionOff(screen, xw);\n\tscreen->send_mouse_pos = MOUSE_OFF;\n    }\n}\n\nvoid\nInitLocatorFilter(XtermWidget xw)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    Window root, child;\n    int rx, ry, x, y;\n    unsigned int mask;\n    int row = 0, col = 0;\n    Bool oor = 0;\n    Bool ret;\n\n    ret = XQueryPointer(screen->display, VWindow(screen),\n\t\t\t&root, &child, &rx, &ry, &x, &y, &mask);\n    if (ret) {\n\tLocatorCoords(row, col, x, y, oor);\n    }\n    if (ret == False || oor) {\n\t/* Locator is unavailable */\n\n\tif (screen->loc_filter_top != LOC_FILTER_POS ||\n\t    screen->loc_filter_left != LOC_FILTER_POS ||\n\t    screen->loc_filter_bottom != LOC_FILTER_POS ||\n\t    screen->loc_filter_right != LOC_FILTER_POS) {\n\t    /*\n\t     * If any explicit coordinates were received,\n\t     * report immediately with no coordinates.\n\t     */\n\t    memset(&reply, 0, sizeof(reply));\n\t    reply.a_type = ANSI_CSI;\n\t    reply.a_nparam = 1;\n\t    reply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\t    reply.a_inters = '&';\n\t    reply.a_final = 'w';\n\t    unparseseq(xw, &reply);\n\n\t    if (screen->locator_reset) {\n\t\tMotionOff(screen, xw);\n\t\tscreen->send_mouse_pos = MOUSE_OFF;\n\t    }\n\t} else {\n\t    /*\n\t     * No explicit coordinates were received, and the pointer is\n\t     * unavailable.  Report when the pointer re-enters the window.\n\t     */\n\t    screen->loc_filter = True;\n\t    MotionOn(screen, xw);\n\t}\n\treturn;\n    }\n\n    /*\n     * Adjust rectangle coordinates:\n     *  1. Replace \"LOC_FILTER_POS\" with current coordinates\n     *  2. Limit coordinates to screen size\n     *  3. make sure top and left are less than bottom and right, resp.\n     */\n    if (screen->locator_pixels) {\n\trx = OriginX(screen) * 2 + Width(screen);\n\try = screen->border * 2 + Height(screen);\n    } else {\n\trx = screen->max_col;\n\try = screen->max_row;\n    }\n\n#define\tAdjust( coord, def, max )\t\t\t\t\\\n\tif( (coord) == LOC_FILTER_POS )\t(coord) = (def);\t\\\n\telse if ((coord) < 1)\t\t(coord) = 1;\t\t\\\n\telse if ((coord) > (max))\t(coord) = (max)\n\n    Adjust(screen->loc_filter_top, row, ry);\n    Adjust(screen->loc_filter_left, col, rx);\n    Adjust(screen->loc_filter_bottom, row, ry);\n    Adjust(screen->loc_filter_right, col, rx);\n\n    if (screen->loc_filter_top > screen->loc_filter_bottom) {\n\try = screen->loc_filter_top;\n\tscreen->loc_filter_top = screen->loc_filter_bottom;\n\tscreen->loc_filter_bottom = ry;\n    }\n\n    if (screen->loc_filter_left > screen->loc_filter_right) {\n\trx = screen->loc_filter_left;\n\tscreen->loc_filter_left = screen->loc_filter_right;\n\tscreen->loc_filter_right = rx;\n    }\n\n    if ((col < screen->loc_filter_left) ||\n\t(col > screen->loc_filter_right) ||\n\t(row < screen->loc_filter_top) ||\n\t(row > screen->loc_filter_bottom)) {\n\tint state;\n\n\t/* Pointer is already outside the rectangle - report immediately */\n\tButtonState(state, mask);\n\n\tmemset(&reply, 0, sizeof(reply));\n\treply.a_type = ANSI_CSI;\n\treply.a_nparam = 4;\n\treply.a_param[0] = 10;\t/* Event - 10 = locator outside filter */\n\treply.a_param[1] = (ParmType) state;\n\treply.a_param[2] = (ParmType) row;\n\treply.a_param[3] = (ParmType) col;\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n\treturn;\n    }\n\n    /*\n     * Rectangle is set up.  Allow pointer tracking\n     * to detect if the mouse leaves the rectangle.\n     */\n    screen->loc_filter = True;\n    MotionOn(screen, xw);\n}\n\nstatic void\nCheckLocatorPosition(XtermWidget xw, XButtonEvent *event)\n{\n    ANSI reply;\n    TScreen *screen = TScreenOf(xw);\n    int row, col;\n    Bool oor;\n\n    LocatorCoords(row, col, event->x, event->y, oor);\n\n    /*\n     * Send report if the pointer left the filter rectangle, if\n     * the pointer left the window, or if the filter rectangle\n     * had no coordinates and the pointer re-entered the window.\n     */\n    if (oor || (screen->loc_filter_top == LOC_FILTER_POS) ||\n\t(col < screen->loc_filter_left) ||\n\t(col > screen->loc_filter_right) ||\n\t(row < screen->loc_filter_top) ||\n\t(row > screen->loc_filter_bottom)) {\n\t/* Filter triggered - disable it */\n\tscreen->loc_filter = False;\n\tMotionOff(screen, xw);\n\n\tmemset(&reply, 0, sizeof(reply));\n\treply.a_type = ANSI_CSI;\n\tif (oor) {\n\t    reply.a_nparam = 1;\n\t    reply.a_param[0] = 0;\t/* Event - 0 = locator unavailable */\n\t} else {\n\t    int state;\n\n\t    ButtonState(state, event->state);\n\n\t    reply.a_nparam = 4;\n\t    reply.a_param[0] = 10;\t/* Event - 10 = locator outside filter */\n\t    reply.a_param[1] = (ParmType) state;\n\t    reply.a_param[2] = (ParmType) row;\n\t    reply.a_param[3] = (ParmType) col;\n\t}\n\n\treply.a_inters = '&';\n\treply.a_final = 'w';\n\tunparseseq(xw, &reply);\n\n\tif (screen->locator_reset) {\n\t    MotionOff(screen, xw);\n\t    screen->send_mouse_pos = MOUSE_OFF;\n\t}\n    }\n}\n#endif /* OPT_DEC_LOCATOR */\n\n#if OPT_READLINE\nstatic int\nisClick1_clean(XtermWidget xw, XButtonEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    int delta;\n\n    /* Disable on Shift-Click-1, including the application-mouse modes */\n    if (OverrideButton(event)\n\t|| (okSendMousePos(xw) != MOUSE_OFF)\n\t|| ExtendingSelection)\t/* Was moved */\n\treturn 0;\n\n    if (event->type != ButtonRelease)\n\treturn 0;\n\n    if (lastButtonDownTime == (Time) 0) {\n\t/* first time or once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (event->time > lastButtonDownTime) {\n\t/* most of the time */\n\tdelta = (int) (event->time - lastButtonDownTime);\n    } else {\n\t/* time has rolled over since lastButtonUpTime */\n\tdelta = (int) ((((Time) ~ 0) - lastButtonDownTime) + event->time);\n    }\n\n    return delta <= screen->multiClickTime;\n}\n\nstatic int\nisDoubleClick3(XtermWidget xw, TScreen *screen, XButtonEvent *event)\n{\n    int delta;\n\n    if (event->type != ButtonRelease\n\t|| OverrideButton(event)\n\t|| event->button != Button3) {\n\tlastButton3UpTime = 0;\t/* Disable the cached info */\n\treturn 0;\n    }\n    /* Process Btn3Release. */\n    if (lastButton3DoubleDownTime == (Time) 0) {\n\t/* No previous click or once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (event->time > lastButton3DoubleDownTime) {\n\t/* most of the time */\n\tdelta = (int) (event->time - lastButton3DoubleDownTime);\n    } else {\n\t/* time has rolled over since lastButton3DoubleDownTime */\n\tdelta = (int) ((((Time) ~ 0) - lastButton3DoubleDownTime) + event->time);\n    }\n    if (delta <= screen->multiClickTime) {\n\t/* Double click */\n\tCELL cell;\n\n\t/* Cannot check ExtendingSelection, since mouse-3 always sets it */\n\tPointToCELL(screen, event->y, event->x, &cell);\n\tif (isSameCELL(&cell, &lastButton3)) {\n\t    lastButton3DoubleDownTime = 0;\t/* Disable the third click */\n\t    return 1;\n\t}\n    }\n    /* Not a double click, memorize for future check. */\n    lastButton3UpTime = event->time;\n    PointToCELL(screen, event->y, event->x, &lastButton3);\n    return 0;\n}\n\nstatic int\nCheckSecondPress3(XtermWidget xw, TScreen *screen, XEvent *event)\n{\n    int delta;\n\n    if (event->type != ButtonPress\n\t|| OverrideEvent(event)\n\t|| event->xbutton.button != Button3) {\n\tlastButton3DoubleDownTime = 0;\t/* Disable the cached info */\n\treturn 0;\n    }\n    /* Process Btn3Press. */\n    if (lastButton3UpTime == (Time) 0) {\n\t/* No previous click or once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (event->xbutton.time > lastButton3UpTime) {\n\t/* most of the time */\n\tdelta = (int) (event->xbutton.time - lastButton3UpTime);\n    } else {\n\t/* time has rolled over since lastButton3UpTime */\n\tdelta = (int) ((((Time) ~ 0) - lastButton3UpTime) + event->xbutton.time);\n    }\n    if (delta <= screen->multiClickTime) {\n\tCELL cell;\n\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n\tif (isSameCELL(&cell, &lastButton3)) {\n\t    /* A candidate for a double-click */\n\t    lastButton3DoubleDownTime = event->xbutton.time;\n\t    PointToCELL(screen, event->xbutton.y, event->xbutton.x, &lastButton3);\n\t    return 1;\n\t}\n\tlastButton3UpTime = 0;\t/* Disable the info about the previous click */\n    }\n    /* Either too long, or moved, disable. */\n    lastButton3DoubleDownTime = 0;\n    return 0;\n}\n\nstatic int\nrowOnCurrentLine(TScreen *screen,\n\t\t int line,\n\t\t int *deltap)\t/* must be XButtonEvent */\n{\n    int result = 1;\n\n    *deltap = 0;\n\n    if (line != screen->cur_row) {\n\tint l1, l2;\n\n\tif (line < screen->cur_row) {\n\t    l1 = line;\n\t    l2 = screen->cur_row;\n\t} else {\n\t    l2 = line;\n\t    l1 = screen->cur_row;\n\t}\n\tl1--;\n\twhile (++l1 < l2) {\n\t    LineData *ld = GET_LINEDATA(screen, l1);\n\t    if (!LineTstWrapped(ld)) {\n\t\tresult = 0;\n\t\tbreak;\n\t    }\n\t}\n\tif (result) {\n\t    /* Everything is on one \"wrapped line\" now */\n\t    *deltap = line - screen->cur_row;\n\t}\n    }\n    return result;\n}\n\nstatic int\neventRow(TScreen *screen, XEvent *event)\t/* must be XButtonEvent */\n{\n    return (event->xbutton.y - screen->border) / FontHeight(screen);\n}\n\nstatic int\neventColBetween(TScreen *screen, XEvent *event)\t\t/* must be XButtonEvent */\n{\n    /* Correct by half a width - we are acting on a boundary, not on a cell. */\n    return ((event->xbutton.x - OriginX(screen) + (FontWidth(screen) - 1) / 2)\n\t    / FontWidth(screen));\n}\n\nstatic int\nReadLineMovePoint(TScreen *screen, int col, int ldelta)\n{\n    Char line[6];\n    unsigned count = 0;\n\n    col += ldelta * MaxCols(screen) - screen->cur_col;\n    if (col == 0)\n\treturn 0;\n    if (screen->control_eight_bits) {\n\tline[count++] = ANSI_CSI;\n    } else {\n\tline[count++] = ANSI_ESC;\n\tline[count++] = '[';\t/* XXX maybe sometimes O is better? */\n    }\n    line[count] = CharOf(col > 0 ? 'C' : 'D');\n    if (col < 0)\n\tcol = -col;\n    while (col--)\n\tv_write(screen->respond, line, 3);\n    return 1;\n}\n\nstatic int\nReadLineDelete(TScreen *screen, CELL *cell1, CELL *cell2)\n{\n    int del;\n\n    del = (cell2->col - cell1->col) + ((cell2->row - cell1->row) * MaxCols(screen));\n    if (del <= 0)\t\t/* Just in case... */\n\treturn 0;\n    while (del--)\n\tv_write(screen->respond, (const Char *) \"\\177\", 1);\n    return 1;\n}\n\nstatic void\nreadlineExtend(XtermWidget xw, XEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    int ldelta1, ldelta2;\n\n    if (IsBtnEvent(event)) {\n\tXButtonEvent *my_event = (XButtonEvent *) event;\n\tif (isClick1_clean(xw, my_event)\n\t    && SCREEN_FLAG(screen, click1_moves)\n\t    && rowOnCurrentLine(screen, eventRow(screen, event), &ldelta1)) {\n\t    ReadLineMovePoint(screen, eventColBetween(screen, event), ldelta1);\n\t}\n\tif (isDoubleClick3(xw, screen, my_event)\n\t    && SCREEN_FLAG(screen, dclick3_deletes)\n\t    && rowOnCurrentLine(screen, screen->startSel.row, &ldelta1)\n\t    && rowOnCurrentLine(screen, screen->endSel.row, &ldelta2)) {\n\t    ReadLineMovePoint(screen, screen->endSel.col, ldelta2);\n\t    ReadLineDelete(screen, &screen->startSel, &(screen->endSel));\n\t}\n    }\n}\n#endif /* OPT_READLINE */\n\n/* ^XM-G<line+' '><col+' '> */\nvoid\nDiredButton(Widget w,\n\t    XEvent *event,\t/* must be XButtonEvent */\n\t    String *params GCC_UNUSED,\t/* selections */\n\t    Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tif (IsBtnEvent(event)\n\t    && (event->xbutton.y >= screen->border)\n\t    && (event->xbutton.x >= OriginX(screen))) {\n\t    Char Line[6];\n\t    unsigned line, col;\n\n\t    line = (unsigned) ((event->xbutton.y - screen->border)\n\t\t\t       / FontHeight(screen));\n\t    col = (unsigned) ((event->xbutton.x - OriginX(screen))\n\t\t\t      / FontWidth(screen));\n\t    Line[0] = CONTROL('X');\n\t    Line[1] = ANSI_ESC;\n\t    Line[2] = 'G';\n\t    Line[3] = CharOf(' ' + col);\n\t    Line[4] = CharOf(' ' + line);\n\t    v_write(screen->respond, Line, 5);\n\t}\n    }\n}\n\n#if OPT_READLINE\nvoid\nReadLineButton(Widget w,\n\t       XEvent *event,\t/* must be XButtonEvent */\n\t       String *params,\t/* selections */\n\t       Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tChar Line[6];\n\tint line, col, ldelta = 0;\n\n\tif (!IsBtnEvent(event)\n\t    || (okSendMousePos(xw) != MOUSE_OFF) || ExtendingSelection)\n\t    goto finish;\n\tif (event->type == ButtonRelease) {\n\t    int delta;\n\n\t    if (lastButtonDownTime == (Time) 0) {\n\t\t/* first time and once in a blue moon */\n\t\tdelta = screen->multiClickTime + 1;\n\t    } else if (event->xbutton.time > lastButtonDownTime) {\n\t\t/* most of the time */\n\t\tdelta = (int) (event->xbutton.time - lastButtonDownTime);\n\t    } else {\n\t\t/* time has rolled over since lastButtonUpTime */\n\t\tdelta = (int) ((((Time) ~ 0) - lastButtonDownTime) + event->xbutton.time);\n\t    }\n\t    if (delta > screen->multiClickTime)\n\t\tgoto finish;\t/* All this work for this... */\n\t}\n\tline = (event->xbutton.y - screen->border) / FontHeight(screen);\n\tif (!rowOnCurrentLine(screen, line, &ldelta))\n\t    goto finish;\n\t/* Correct by half a width - we are acting on a boundary, not on a cell. */\n\tcol = (event->xbutton.x - OriginX(screen) + (FontWidth(screen) - 1)\n\t       / 2)\n\t    / FontWidth(screen) - screen->cur_col + ldelta * MaxCols(screen);\n\tif (col == 0)\n\t    goto finish;\n\tLine[0] = ANSI_ESC;\n\t/* XXX: sometimes it is better to send '['? */\n\tLine[1] = 'O';\n\tLine[2] = CharOf(col > 0 ? 'C' : 'D');\n\tif (col < 0)\n\t    col = -col;\n\twhile (col--)\n\t    v_write(screen->respond, Line, 3);\n      finish:\n\tif (event->type == ButtonRelease)\n\t    do_select_end(xw, event, params, num_params, False);\n    }\n}\n#endif /* OPT_READLINE */\n\n/* repeats <ESC>n or <ESC>p */\nvoid\nViButton(Widget w,\n\t XEvent *event,\t\t/* must be XButtonEvent */\n\t String *params GCC_UNUSED,\t/* selections */\n\t Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tint pty = screen->respond;\n\n\tif (IsBtnEvent(event)) {\n\t    int line;\n\n\t    line = screen->cur_row -\n\t\t((event->xbutton.y - screen->border) / FontHeight(screen));\n\n\t    if (line != 0) {\n\t\tChar Line[6];\n\n\t\tLine[0] = ANSI_ESC;\t/* force an exit from insert-mode */\n\t\tv_write(pty, Line, 1);\n\n\t\tif (line < 0) {\n\t\t    line = -line;\n\t\t    Line[0] = CONTROL('n');\n\t\t} else {\n\t\t    Line[0] = CONTROL('p');\n\t\t}\n\t\twhile (--line >= 0)\n\t\t    v_write(pty, Line, 1);\n\t    }\n\t}\n    }\n}\n\n/*\n * This function handles button-motion events\n */\n/*ARGSUSED*/\nvoid\nHandleSelectExtend(Widget w,\n\t\t   XEvent *event,\t/* must be XMotionEvent */\n\t\t   String *params GCC_UNUSED,\n\t\t   Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tCELL cell;\n\n\tTRACE_EVENT(\"HandleSelectExtend\", event, params, num_params);\n\n\tscreen->selection_time = event->xmotion.time;\n\tswitch (screen->eventMode) {\n\t    /* If not in one of the DEC mouse-reporting modes */\n\tcase LEFTEXTENSION:\n\tcase RIGHTEXTENSION:\n\t    PointToCELL(screen, event->xmotion.y, event->xmotion.x, &cell);\n\t    ExtendExtend(xw, &cell);\n\t    break;\n\n\t    /* If in motion reporting mode, send mouse position to\n\t       character process as a key sequence \\E[M... */\n\tcase NORMAL:\n\t    /* will get here if send_mouse_pos != MOUSE_OFF */\n\t    if (okSendMousePos(xw) == BTN_EVENT_MOUSE\n\t\t|| okSendMousePos(xw) == ANY_EVENT_MOUSE) {\n\t\t(void) SendMousePosition(xw, event);\n\t    }\n\t    break;\n\t}\n    }\n}\n\nvoid\nHandleKeyboardSelectExtend(Widget w,\n\t\t\t   XEvent *event GCC_UNUSED,\t/* must be XButtonEvent */\n\t\t\t   String *params GCC_UNUSED,\n\t\t\t   Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tTRACE_EVENT(\"HandleKeyboardSelectExtend\", event, params, num_params);\n\tExtendExtend(xw, &screen->cursorp);\n    }\n}\n\nstatic void\ndo_select_end(XtermWidget xw,\n\t      XEvent *event,\t/* must be XButtonEvent */\n\t      String *params,\t/* selections */\n\t      Cardinal *num_params,\n\t      Bool use_cursor_loc)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    screen->selection_time = event->xbutton.time;\n\n    TRACE((\"do_select_end %s @%ld\\n\",\n\t   visibleEventMode(screen->eventMode),\n\t   screen->selection_time));\n\n    switch (screen->eventMode) {\n    case NORMAL:\n\t(void) SendMousePosition(xw, event);\n\tbreak;\n    case LEFTEXTENSION:\n    case RIGHTEXTENSION:\n\tEndExtend(xw, event, params, *num_params, use_cursor_loc);\n#if OPT_READLINE\n\treadlineExtend(xw, event);\n#endif /* OPT_READLINE */\n\tbreak;\n    }\n}\n\nvoid\nHandleSelectEnd(Widget w,\n\t\tXEvent *event,\t/* must be XButtonEvent */\n\t\tString *params,\t/* selections */\n\t\tCardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandleSelectEnd\\n\"));\n\tdo_select_end(xw, event, params, num_params, False);\n    }\n}\n\nvoid\nHandleKeyboardSelectEnd(Widget w,\n\t\t\tXEvent *event,\t/* must be XButtonEvent */\n\t\t\tString *params,\t\t/* selections */\n\t\t\tCardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandleKeyboardSelectEnd\\n\"));\n\tdo_select_end(xw, event, params, num_params, True);\n    }\n}\n\nvoid\nHandlePointerMotion(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* selections */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    (void) params;\n    (void) num_params;\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandlePointerMotion\\n\"));\n\tif (event->type == MotionNotify)\n\t    (void) SendMousePosition(xw, event);\n    }\n}\n\nvoid\nHandlePointerButton(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* selections */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    (void) params;\n    (void) num_params;\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE((\"HandlePointerButton\\n\"));\n\tif (IsBtnEvent(event))\n\t    (void) SendMousePosition(xw, event);\n    }\n}\n\n/*\n * Copy the selection data to the given target(s).\n */\nvoid\nHandleCopySelection(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* list of targets */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleCopySelection\", event, params, num_params);\n\tSelectSet(xw, event, params, *num_params);\n    }\n}\n\nstruct _SelectionList {\n    String *params;\n    Cardinal count;\n    Atom *targets;\n    Time time;\n};\n\nstatic unsigned\nDECtoASCII(unsigned ch)\n{\n    if (xtermIsDecGraphic(ch)) {\n\tch = CharOf(\"###########+++++##-##++++|######\"[ch]);\n\t/*           01234567890123456789012345678901 */\n    }\n    return ch;\n}\n\n#if OPT_WIDE_CHARS\nstatic Cardinal\naddXtermChar(Char **buffer, Cardinal *used, Cardinal offset, unsigned value)\n{\n    if (offset + 1 >= *used) {\n\t*used = 1 + (2 * (offset + 1));\n\tallocXtermChars(buffer, *used);\n    }\n    (*buffer)[offset++] = (Char) value;\n    return offset;\n}\n#define AddChar(buffer, used, offset, value) \\\n\toffset = addXtermChar(buffer, used, offset, (unsigned) value)\n\n/*\n * Convert a UTF-8 string to Latin-1, replacing non Latin-1 characters by `#',\n * or ASCII/Latin-1 equivalents for special cases.\n */\nstatic Char *\nUTF8toLatin1(TScreen *screen, Char *s, unsigned long len, unsigned long *result)\n{\n    static Char *buffer;\n    static Cardinal used;\n\n    Cardinal offset = 0;\n\n    if (len != 0) {\n\tPtyData data;\n\n\tfakePtyData(&data, s, s + len);\n\twhile (decodeUtf8(screen, &data)) {\n\t    Bool fails = False;\n\t    Bool extra = False;\n\t    IChar value;\n\t    skipPtyData(&data, value);\n\t    if (value == UCS_REPL) {\n\t\tfails = True;\n\t    } else if (value < 256) {\n\t\tAddChar(&buffer, &used, offset, CharOf(value));\n\t    } else {\n\t\tunsigned eqv = ucs2dec(screen, value);\n\t\tif (xtermIsDecGraphic(eqv)) {\n\t\t    AddChar(&buffer, &used, offset, DECtoASCII(eqv));\n\t\t} else {\n\t\t    eqv = AsciiEquivs(value);\n\t\t    if (eqv == value) {\n\t\t\tfails = True;\n\t\t    } else {\n\t\t\tAddChar(&buffer, &used, offset, eqv);\n\t\t    }\n\t\t    if (isWide((wchar_t) value))\n\t\t\textra = True;\n\t\t}\n\t    }\n\n\t    /*\n\t     * If we're not able to plug in a single-byte result, insert the\n\t     * defaultString (which normally is a single \"#\", but could be\n\t     * whatever the user wants).\n\t     */\n\t    if (fails) {\n\t\tconst Char *p;\n\n\t\tfor (p = (const Char *) screen->default_string; *p != '\\0'; ++p) {\n\t\t    AddChar(&buffer, &used, offset, *p);\n\t\t}\n\t    }\n\t    if (extra)\n\t\tAddChar(&buffer, &used, offset, ' ');\n\t}\n\tAddChar(&buffer, &used, offset, '\\0');\n\t*result = (unsigned long) (offset - 1);\n    } else {\n\t*result = 0;\n    }\n    return buffer;\n}\n\nint\nxtermUtf8ToTextList(XtermWidget xw,\n\t\t    XTextProperty * text_prop,\n\t\t    char ***text_list,\n\t\t    int *text_list_count)\n{\n    TScreen *screen = TScreenOf(xw);\n    Display *dpy = screen->display;\n    int rc = -1;\n\n    if (text_prop->format == 8\n\t&& (rc = Xutf8TextPropertyToTextList(dpy, text_prop,\n\t\t\t\t\t     text_list,\n\t\t\t\t\t     text_list_count)) >= 0) {\n\tif (*text_list != NULL && *text_list_count != 0) {\n\t    int i;\n\t    Char *data;\n\t    char **new_text_list, *tmp;\n\t    unsigned long size, new_size;\n\n\t    TRACE((\"xtermUtf8ToTextList size %d\\n\", *text_list_count));\n\n\t    /*\n\t     * XLib StringList actually uses only two pointers, one for the\n\t     * list itself, and one for the data.  Pointer to the data is the\n\t     * first element of the list, the rest (if any) list elements point\n\t     * to the same memory block as the first element\n\t     */\n\t    new_size = 0;\n\t    for (i = 0; i < *text_list_count; ++i) {\n\t\tdata = (Char *) (*text_list)[i];\n\t\tsize = strlen((*text_list)[i]) + 1;\n\t\t(void) UTF8toLatin1(screen, data, size, &size);\n\t\tnew_size += size + 1;\n\t    }\n\t    new_text_list = TypeXtMallocN(char *, *text_list_count);\n\t    new_text_list[0] = tmp = XtMalloc((Cardinal) new_size);\n\t    for (i = 0; i < (*text_list_count); ++i) {\n\t\tdata = (Char *) (*text_list)[i];\n\t\tsize = strlen((*text_list)[i]) + 1;\n\t\tif ((data = UTF8toLatin1(screen, data, size, &size)) != 0) {\n\t\t    memcpy(tmp, data, size + 1);\n\t\t    new_text_list[i] = tmp;\n\t\t    tmp += size + 1;\n\t\t}\n\t    }\n\t    XFreeStringList((*text_list));\n\t    *text_list = new_text_list;\n\t} else {\n\t    rc = -1;\n\t}\n    }\n    return rc;\n}\n#endif /* OPT_WIDE_CHARS */\n\nstatic char *\nparseItem(char *value, char *nextc)\n{\n    char *nextp = value;\n    while (*nextp != '\\0' && *nextp != ',') {\n\t*nextp = x_toupper(*nextp);\n\t++nextp;\n    }\n    *nextc = *nextp;\n    *nextp = '\\0';\n\n    return nextp;\n}\n\n/*\n * All of the wanted strings are unique in the first character, so we can\n * use simple abbreviations.\n */\nstatic Bool\nsameItem(const char *actual, const char *wanted)\n{\n    Bool result = False;\n    size_t have = strlen(actual);\n    size_t need = strlen(wanted);\n\n    if (have != 0 && have <= need) {\n\tif (!strncmp(actual, wanted, have)) {\n\t    TRACE((\"...matched \\\"%s\\\"\\n\", wanted));\n\t    result = True;\n\t}\n    }\n\n    return result;\n}\n\n/*\n * Handle the eightBitSelectTypes or utf8SelectTypes resource values.\n */\nstatic Bool\noverrideTargets(Widget w, String value, Atom **resultp)\n{\n    Bool override = False;\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tif (!IsEmpty(value)) {\n\t    char *copied = x_strdup(value);\n\t    if (copied != 0) {\n\t\tAtom *result = 0;\n\t\tCardinal count = 1;\n\t\tint n;\n\n\t\tTRACE((\"decoding SelectTypes \\\"%s\\\"\\n\", value));\n\t\tfor (n = 0; copied[n] != '\\0'; ++n) {\n\t\t    if (copied[n] == ',')\n\t\t\t++count;\n\t\t}\n\t\tresult = TypeXtMallocN(Atom, (2 * count) + 1);\n\t\tif (result == NULL) {\n\t\t    TRACE((\"Couldn't allocate selection types\\n\"));\n\t\t} else {\n\t\t    char nextc = '?';\n\t\t    char *listp = (char *) copied;\n\t\t    count = 0;\n\t\t    do {\n\t\t\tchar *nextp = parseItem(listp, &nextc);\n\t\t\tchar *item = x_strtrim(listp);\n\t\t\tsize_t len = (item ? strlen(item) : 0);\n\n\t\t\tif (len == 0) {\n\t\t\t    /* EMPTY */ ;\n\t\t\t}\n#if OPT_WIDE_CHARS\n\t\t\telse if (sameItem(item, \"UTF8\")) {\n\t\t\t    result[count++] = XA_UTF8_STRING(XtDisplay(w));\n\t\t\t}\n#endif\n\t\t\telse if (sameItem(item, \"I18N\")) {\n\t\t\t    if (screen->i18nSelections) {\n\t\t\t\tresult[count++] = XA_TEXT(XtDisplay(w));\n\t\t\t\tresult[count++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t\t    }\n\t\t\t} else if (sameItem(item, \"TEXT\")) {\n\t\t\t    result[count++] = XA_TEXT(XtDisplay(w));\n\t\t\t} else if (sameItem(item, \"COMPOUND_TEXT\")) {\n\t\t\t    result[count++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t\t} else if (sameItem(item, \"STRING\")) {\n\t\t\t    result[count++] = XA_STRING;\n\t\t\t}\n\t\t\t*nextp++ = nextc;\n\t\t\tlistp = nextp;\n\t\t\tfree(item);\n\t\t    } while (nextc != '\\0');\n\t\t    if (count) {\n\t\t\tresult[count] = None;\n\t\t\toverride = True;\n\t\t\t*resultp = result;\n\t\t    } else {\n\t\t\tXtFree((char *) result);\n\t\t    }\n\t\t}\n\t\tfree(copied);\n\t    } else {\n\t\tTRACE((\"Couldn't allocate copy of selection types\\n\"));\n\t    }\n\t}\n    }\n    return override;\n}\n\n#if OPT_WIDE_CHARS\nstatic Atom *\nallocUtf8Targets(Widget w, TScreen *screen)\n{\n    Atom **resultp = &(screen->selection_targets_utf8);\n\n    if (*resultp == 0) {\n\tAtom *result;\n\n\tif (!overrideTargets(w, screen->utf8_select_types, &result)) {\n\t    result = TypeXtMallocN(Atom, 5);\n\t    if (result == NULL) {\n\t\tTRACE((\"Couldn't allocate utf-8 selection targets\\n\"));\n\t    } else {\n\t\tint n = 0;\n\n\t\tif (XSupportsLocale()) {\n\t\t    result[n++] = XA_UTF8_STRING(XtDisplay(w));\n#ifdef X_HAVE_UTF8_STRING\n\t\t    if (screen->i18nSelections) {\n\t\t\tresult[n++] = XA_TEXT(XtDisplay(w));\n\t\t\tresult[n++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t    }\n#endif\n\t\t}\n\t\tresult[n++] = XA_STRING;\n\t\tresult[n] = None;\n\t    }\n\t}\n\n\t*resultp = result;\n    }\n\n    return *resultp;\n}\n#endif\n\nstatic Atom *\nalloc8bitTargets(Widget w, TScreen *screen)\n{\n    Atom **resultp = &(screen->selection_targets_8bit);\n\n    if (*resultp == 0) {\n\tAtom *result = 0;\n\n\tif (!overrideTargets(w, screen->eightbit_select_types, &result)) {\n\t    result = TypeXtMallocN(Atom, 5);\n\t    if (result == NULL) {\n\t\tTRACE((\"Couldn't allocate 8bit selection targets\\n\"));\n\t    } else {\n\t\tint n = 0;\n\n\t\tif (XSupportsLocale()) {\n#ifdef X_HAVE_UTF8_STRING\n\t\t    result[n++] = XA_UTF8_STRING(XtDisplay(w));\n#endif\n\t\t    if (screen->i18nSelections) {\n\t\t\tresult[n++] = XA_TEXT(XtDisplay(w));\n\t\t\tresult[n++] = XA_COMPOUND_TEXT(XtDisplay(w));\n\t\t    }\n\t\t}\n\t\tresult[n++] = XA_STRING;\n\t\tresult[n] = None;\n\t    }\n\t}\n\n\t*resultp = result;\n    }\n\n    return *resultp;\n}\n\nstatic Atom *\n_SelectionTargets(Widget w)\n{\n    Atom *result;\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0) {\n\tresult = NULL;\n    } else {\n\tTScreen *screen = TScreenOf(xw);\n\n#if OPT_WIDE_CHARS\n\tif (screen->wide_chars) {\n\t    result = allocUtf8Targets(w, screen);\n\t} else\n#endif\n\t{\n\t    /* not screen->wide_chars */\n\t    result = alloc8bitTargets(w, screen);\n\t}\n    }\n\n    return result;\n}\n\n#define isSELECT(value) (!strcmp(value, \"SELECT\"))\n\nstatic int\nDefaultSelection(TScreen *screen)\n{\n    return (screen->selectToClipboard ? 1 : 0);\n}\n\nstatic int\nTargetToSelection(TScreen *screen, String name)\n{\n    int result = -1;\n    int cutb;\n\n    if (isSELECT(name)) {\n\tresult = DefaultSelection(screen);\n    } else if (!strcmp(name, PRIMARY_NAME)) {\n\tresult = PRIMARY_CODE;\n    } else if (!strcmp(name, CLIPBOARD_NAME)) {\n\tresult = CLIPBOARD_CODE;\n    } else if (!strcmp(name, SECONDARY_NAME)) {\n\tresult = SECONDARY_CODE;\n    } else if (sscanf(name, \"CUT_BUFFER%d\", &cutb) == 1) {\n\tif (cutb >= 0 && cutb < MAX_CUT_BUFFER) {\n\t    result = CutBufferToCode(cutb);\n\t} else {\n\t    xtermWarning(\"unexpected cut-buffer code: %d\\n\", cutb);\n\t}\n    } else {\n\txtermWarning(\"unexpected selection target: %s\\n\", name);\n    }\n    TRACE2((\"TargetToSelection(%s) ->%d\\n\", name, result));\n    return result;\n}\n\nvoid\nUnmapSelections(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    Cardinal n;\n\n    if (screen->mappedSelect) {\n\tfor (n = 0; screen->mappedSelect[n] != 0; ++n)\n\t    free((void *) screen->mappedSelect[n]);\n\tFreeAndNull(screen->mappedSelect);\n    }\n}\n\n/*\n * xterm generally uses the primary selection.  Some applications prefer\n * (or are limited to) the clipboard.  Since the translations resource is\n * complicated, users seldom change the way it affects selection.  But it\n * is simple to remap the choice between primary and clipboard before the\n * call to XmuInternStrings().\n */\nstatic String *\nMapSelections(XtermWidget xw, String *params, Cardinal num_params)\n{\n    String *result = params;\n\n    if (params != 0 && num_params > 0) {\n\tCardinal j;\n\tBoolean map = False;\n\n\tfor (j = 0; j < num_params; ++j) {\n\t    TRACE((\"param[%d]:%s\\n\", j, params[j]));\n\t    if (isSELECT(params[j])) {\n\t\tmap = True;\n\t\tbreak;\n\t    }\n\t}\n\tif (map) {\n\t    TScreen *screen = TScreenOf(xw);\n\t    const char *mapTo = (screen->selectToClipboard\n\t\t\t\t ? CLIPBOARD_NAME\n\t\t\t\t : PRIMARY_NAME);\n\n\t    UnmapSelections(xw);\n\t    if ((result = TypeMallocN(String, num_params + 1)) != 0) {\n\t\tresult[num_params] = 0;\n\t\tfor (j = 0; j < num_params; ++j) {\n\t\t    result[j] = x_strdup((isSELECT(params[j])\n\t\t\t\t\t  ? mapTo\n\t\t\t\t\t  : params[j]));\n\t\t    if (result[j] == 0) {\n\t\t\tUnmapSelections(xw);\n\t\t\twhile (j != 0) {\n\t\t\t    free((void *) result[--j]);\n\t\t\t}\n\t\t\tFreeAndNull(result);\n\t\t\tbreak;\n\t\t    }\n\t\t}\n\t\tscreen->mappedSelect = result;\n\t    }\n\t}\n    }\n    return result;\n}\n\n/*\n * Lookup the cut-buffer number, which will be in the range 0-7.\n * If it is not a cut-buffer, it is a type of selection, e.g., primary.\n */\nstatic int\nCutBuffer(Atom code)\n{\n    int cutbuffer;\n    switch ((unsigned) code) {\n    case XA_CUT_BUFFER0:\n\tcutbuffer = 0;\n\tbreak;\n    case XA_CUT_BUFFER1:\n\tcutbuffer = 1;\n\tbreak;\n    case XA_CUT_BUFFER2:\n\tcutbuffer = 2;\n\tbreak;\n    case XA_CUT_BUFFER3:\n\tcutbuffer = 3;\n\tbreak;\n    case XA_CUT_BUFFER4:\n\tcutbuffer = 4;\n\tbreak;\n    case XA_CUT_BUFFER5:\n\tcutbuffer = 5;\n\tbreak;\n    case XA_CUT_BUFFER6:\n\tcutbuffer = 6;\n\tbreak;\n    case XA_CUT_BUFFER7:\n\tcutbuffer = 7;\n\tbreak;\n    default:\n\tcutbuffer = -1;\n\tbreak;\n    }\n    TRACE2((\"CutBuffer(%d) = %d\\n\", (int) code, cutbuffer));\n    return cutbuffer;\n}\n\n#if OPT_PASTE64\nstatic void\nFinishPaste64(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE((\"FinishPaste64(%d)\\n\", screen->base64_paste));\n    if (screen->base64_paste) {\n\tscreen->base64_paste = 0;\n\tunparseputc1(xw, screen->base64_final);\n\tunparse_end(xw);\n    }\n}\n#endif\n\n#if !OPT_PASTE64\nstatic\n#endif\nvoid\nxtermGetSelection(Widget w,\n\t\t  Time ev_time,\n\t\t  String *params,\t/* selections in precedence order */\n\t\t  Cardinal num_params,\n\t\t  Atom *targets)\n{\n    Atom selection;\n    int cutbuffer;\n    Atom target;\n\n    XtermWidget xw;\n\n    if (num_params == 0)\n\treturn;\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn;\n\n    TRACE((\"xtermGetSelection num_params %d @%ld\\n\", num_params, ev_time));\n    params = MapSelections(xw, params, num_params);\n\n    XmuInternStrings(XtDisplay(w), params, (Cardinal) 1, &selection);\n    cutbuffer = CutBuffer(selection);\n\n    TRACE((\"Cutbuffer: %d, target: %s\\n\", cutbuffer,\n\t   (targets\n\t    ? visibleSelectionTarget(XtDisplay(w), targets[0])\n\t    : \"None\")));\n\n    if (cutbuffer >= 0) {\n\tint inbytes;\n\tunsigned long nbytes;\n\tint fmt8 = 8;\n\tAtom type = XA_STRING;\n\tchar *line;\n\n\t/* 'line' is freed in SelectionReceived */\n\tline = XFetchBuffer(XtDisplay(w), &inbytes, cutbuffer);\n\tnbytes = (unsigned long) inbytes;\n\n\tif (nbytes > 0) {\n\t    SelectionReceived(w, NULL, &selection, &type, (XtPointer) line,\n\t\t\t      &nbytes, &fmt8);\n\t} else if (num_params > 1) {\n\t    xtermGetSelection(w, ev_time, params + 1, num_params - 1, NULL);\n\t}\n#if OPT_PASTE64\n\telse {\n\t    FinishPaste64(xw);\n\t}\n#endif\n    } else {\n\n\tif (targets == NULL || targets[0] == None) {\n\t    targets = _SelectionTargets(w);\n\t}\n\n\tif (targets != 0) {\n\t    struct _SelectionList *list;\n\n\t    target = targets[0];\n\n\t    if (targets[1] == None) {\t/* last target in list */\n\t\tparams++;\n\t\tnum_params--;\n\t\ttargets = _SelectionTargets(w);\n\t    } else {\n\t\ttargets = &(targets[1]);\n\t    }\n\n\t    if (num_params) {\n\t\t/* 'list' is freed in SelectionReceived */\n\t\tlist = TypeXtMalloc(struct _SelectionList);\n\t\tif (list != 0) {\n\t\t    list->params = params;\n\t\t    list->count = num_params;\n\t\t    list->targets = targets;\n\t\t    list->time = ev_time;\n\t\t}\n\t    } else {\n\t\tlist = NULL;\n\t    }\n\n\t    XtGetSelectionValue(w, selection,\n\t\t\t\ttarget,\n\t\t\t\tSelectionReceived,\n\t\t\t\t(XtPointer) list, ev_time);\n\t}\n    }\n}\n\n#if OPT_TRACE && OPT_WIDE_CHARS\nstatic void\nGettingSelection(Display *dpy, Atom type, Char *line, unsigned long len)\n{\n    Char *cp;\n    const char *name = TraceAtomName(dpy, type);\n\n    TRACE((\"Getting %s (type=%ld, length=%ld)\\n\", name, (long int) type, len));\n    for (cp = line; cp < line + len; cp++) {\n\tTRACE((\"[%d:%lu]\", (int) (cp + 1 - line), len));\n\tif (isprint(*cp)) {\n\t    TRACE((\"%c\\n\", *cp));\n\t} else {\n\t    TRACE((\"\\\\x%02x\\n\", *cp));\n\t}\n    }\n}\n#else\n#define GettingSelection(dpy,type,line,len)\t/* nothing */\n#endif\n\n#ifdef VMS\n#  define tty_vwrite(pty,lag,l)\t\ttt_write(lag,l)\n#else /* !( VMS ) */\n#  define tty_vwrite(pty,lag,l)\t\tv_write(pty,lag,l)\n#endif /* defined VMS */\n\n#if OPT_PASTE64\n/* Return base64 code character given 6-bit number */\nstatic const char base64_code[] = \"\\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\\\nabcdefghijklmnopqrstuvwxyz\\\n0123456789+/\";\nstatic void\nbase64_flush(TScreen *screen)\n{\n    Char x;\n\n    TRACE((\"base64_flush count %d, pad %d (%d)\\n\",\n\t   screen->base64_count,\n\t   screen->base64_pad,\n\t   screen->base64_pad & 3));\n\n    switch (screen->base64_count) {\n    case 0:\n\tbreak;\n    case 2:\n\tx = CharOf(base64_code[screen->base64_accu << 4]);\n\ttty_vwrite(screen->respond, &x, 1);\n\tbreak;\n    case 4:\n\tx = CharOf(base64_code[screen->base64_accu << 2]);\n\ttty_vwrite(screen->respond, &x, 1);\n\tbreak;\n    }\n    if (screen->base64_pad & 3) {\n\ttty_vwrite(screen->respond,\n\t\t   (const Char *) \"===\",\n\t\t   (unsigned) (3 - (screen->base64_pad & 3)));\n    }\n    screen->base64_count = 0;\n    screen->base64_accu = 0;\n    screen->base64_pad = 0;\n}\n#endif /* OPT_PASTE64 */\n\n/*\n * Translate ISO-8859-1 or UTF-8 data to NRCS.\n */\nstatic void\nToNational(XtermWidget xw, Char *buffer, unsigned *length)\n{\n    TScreen *screen = TScreenOf(xw);\n    DECNRCM_codes gsetL = screen->gsets[screen->curgl];\n    DECNRCM_codes gsetR = screen->gsets[screen->curgr];\n\n#if OPT_WIDE_CHARS\n    if ((screen->utf8_nrc_mode | screen->utf8_mode) != uFalse) {\n\tChar *p;\n\tPtyData *data = TypeXtMallocX(PtyData, *length);\n\n\tmemset(data, 0, sizeof(*data));\n\tdata->next = data->buffer;\n\tdata->last = data->buffer + *length;\n\tmemcpy(data->buffer, buffer, (size_t) *length);\n\tp = buffer;\n\twhile (data->next < data->last) {\n\t    unsigned chr, out, gl, gr;\n\n\t    if (!decodeUtf8(screen, data)) {\n\t\tdata->utf_size = 1;\n\t\tdata->utf_data = data->next[0];\n\t    }\n\t    data->next += data->utf_size;\n\t    chr = data->utf_data;\n\t    out = chr;\n\t    if ((gl = xtermCharSetIn(xw, chr, gsetL)) != chr) {\n\t\tout = gl;\n\t    } else if ((gr = xtermCharSetIn(xw, chr, gsetR)) != chr) {\n\t\tout = gr;\n\t    }\n\t    *p++ = (Char) ((out < 256) ? out : ' ');\n\t}\n\t*length = (unsigned) (p - buffer);\n\tfree(data);\n    } else\n#endif\n    {\n\tChar *p;\n\n\tfor (p = buffer; (int) (p - buffer) < (int) *length; ++p) {\n\t    unsigned gl, gr;\n\t    unsigned chr = *p;\n\t    unsigned out = chr;\n\t    if ((gl = xtermCharSetIn(xw, chr, gsetL)) != chr) {\n\t\tout = gl;\n\t    } else if ((gr = xtermCharSetIn(xw, chr, gsetR)) != chr) {\n\t\tout = gr;\n\t    }\n\t    *p = (Char) out;\n\t}\n    }\n}\n\nstatic void\n_qWriteSelectionData(XtermWidget xw, Char *lag, unsigned length)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    /*\n     * If we are pasting into a window which is using NRCS, we want to map\n     * the text from the normal encoding (ISO-8859-1 or UTF-8) into the coding\n     * that an application would use to write characters with NRCS.\n     *\n     * TODO: handle conversion from UTF-8, and adjust length.  This can be done\n     * in the same buffer because the target is always 8-bit.\n     */\n    if ((xw->flags & NATIONAL) && (length != 0)) {\n\tToNational(xw, lag, &length);\n    }\n#if OPT_PASTE64\n    if (screen->base64_paste) {\n\t/* Send data as base64 */\n\tChar *p = lag;\n\tChar buf[64];\n\tunsigned x = 0;\n\n\tTRACE((\"convert to base64 %d:%s\\n\", length, visibleChars(p, length)));\n\n\t/*\n\t * Handle the case where the selection is from _this_ xterm, which\n\t * puts part of the reply in the buffer before the selection callback\n\t * happens.\n\t */\n\tif (screen->base64_paste && screen->unparse_len) {\n\t    unparse_end(xw);\n\t}\n\twhile (length--) {\n\t    switch (screen->base64_count) {\n\t    case 0:\n\t\tbuf[x++] = CharOf(base64_code[*p >> 2]);\n\t\tscreen->base64_accu = (unsigned) (*p & 0x3);\n\t\tscreen->base64_count = 2;\n\t\t++p;\n\t\tbreak;\n\t    case 2:\n\t\tbuf[x++] = CharOf(base64_code[(screen->base64_accu << 4) +\n\t\t\t\t\t      (*p >> 4)]);\n\t\tscreen->base64_accu = (unsigned) (*p & 0xF);\n\t\tscreen->base64_count = 4;\n\t\t++p;\n\t\tbreak;\n\t    case 4:\n\t\tbuf[x++] = CharOf(base64_code[(screen->base64_accu << 2) +\n\t\t\t\t\t      (*p >> 6)]);\n\t\tbuf[x++] = CharOf(base64_code[*p & 0x3F]);\n\t\tscreen->base64_accu = 0;\n\t\tscreen->base64_count = 0;\n\t\t++p;\n\t\tbreak;\n\t    }\n\t    if (x >= 63) {\n\t\t/* Write 63 or 64 characters */\n\t\tscreen->base64_pad += x;\n\t\tTRACE((\"writing base64 interim %s\\n\", visibleChars(buf, x)));\n\t\ttty_vwrite(screen->respond, buf, x);\n\t\tx = 0;\n\t    }\n\t}\n\tif (x != 0) {\n\t    screen->base64_pad += x;\n\t    TRACE((\"writing base64 finish %s\\n\", visibleChars(buf, x)));\n\t    tty_vwrite(screen->respond, buf, x);\n\t}\n    } else\n#endif /* OPT_PASTE64 */\n#if OPT_READLINE\n    if (SCREEN_FLAG(screen, paste_quotes)) {\n\twhile (length--) {\n\t    tty_vwrite(screen->respond, (const Char *) \"\\026\", 1);\t/* Control-V */\n\t    tty_vwrite(screen->respond, lag++, 1);\n\t}\n    } else\n#endif\n    {\n\tTRACE((\"writing base64 padding %s\\n\", visibleChars(lag, length)));\n\ttty_vwrite(screen->respond, lag, length);\n    }\n}\n\nstatic void\n_WriteSelectionData(XtermWidget xw, Char *line, size_t length)\n{\n    /* Write data to pty a line at a time. */\n    /* Doing this one line at a time may no longer be necessary\n       because v_write has been re-written. */\n\n#if OPT_PASTE64\n    TScreen *screen = TScreenOf(xw);\n#endif\n    Char *lag, *end;\n\n    /* in the VMS version, if tt_pasting isn't set to True then qio\n       reads aren't blocked and an infinite loop is entered, where the\n       pasted text shows up as new input, goes in again, shows up\n       again, ad nauseum. */\n#ifdef VMS\n    tt_pasting = True;\n#endif\n\n    end = &line[length];\n    lag = line;\n\n#if OPT_PASTE64\n    if (screen->base64_paste) {\n\t_qWriteSelectionData(xw, lag, (unsigned) (end - lag));\n\tbase64_flush(screen);\n    } else\n#endif\n    {\n\tif (!SCREEN_FLAG(screen, paste_literal_nl)) {\n\t    Char *cp;\n\t    for (cp = line; cp != end; cp++) {\n\t\tif (*cp == '\\n') {\n\t\t    *cp = '\\r';\n\t\t    _qWriteSelectionData(xw, lag, (unsigned) (cp - lag + 1));\n\t\t    lag = cp + 1;\n\t\t}\n\t    }\n\t}\n\n\tif (lag != end) {\n\t    _qWriteSelectionData(xw, lag, (unsigned) (end - lag));\n\t}\n    }\n#ifdef VMS\n    tt_pasting = False;\n    tt_start_read();\t\t/* reenable reads or a character may be lost */\n#endif\n}\n\n#if OPT_PASTE64 || OPT_READLINE\nstatic void\n_WriteKey(TScreen *screen, const Char *in)\n{\n    Char line[16];\n    unsigned count = 0;\n    size_t length = strlen((const char *) in);\n\n    if (screen->control_eight_bits) {\n\tline[count++] = ANSI_CSI;\n    } else {\n\tline[count++] = ANSI_ESC;\n\tline[count++] = '[';\n    }\n    while (length--)\n\tline[count++] = *in++;\n    line[count++] = '~';\n    tty_vwrite(screen->respond, line, count);\n}\n#endif /* OPT_READLINE */\n\n/*\n * Unless enabled by the user, strip control characters other than formatting.\n */\nstatic size_t\nremoveControls(XtermWidget xw, char *value)\n{\n    TScreen *screen = TScreenOf(xw);\n    size_t dst = 0;\n\n    if (screen->allowPasteControls) {\n\tdst = strlen(value);\n    } else {\n\tsize_t src = 0;\n\twhile ((value[dst] = value[src]) != '\\0') {\n\t    int ch = CharOf(value[src++]);\n\n#define ReplacePaste(n) \\\n\t    if (screen->disallow_paste_controls[n]) \\\n\t\tvalue[dst] = ' '\n\n\t    if (ch < 32) {\n\t\tReplacePaste(epC0);\n\t\tReplacePaste(ch);\n\t\t++dst;\n\t    } else if (ch == ANSI_DEL) {\n\t\tReplacePaste(epDEL);\n\t\t++dst;\n\t    }\n#if OPT_WIDE_CHARS\n\t    else if (screen->utf8_inparse || screen->utf8_nrc_mode)\n\t\t++dst;\n#endif\n#if OPT_C1_PRINT || OPT_WIDE_CHARS\n\t    else if (screen->c1_printable)\n\t\t++dst;\n#endif\n\t    else if (ch >= 128 && ch < 160)\n\t\tcontinue;\n\t    else\n\t\t++dst;\n\t}\n    }\n    return dst;\n}\n\n#if OPT_SELECTION_OPS\nstatic void\nbeginInternalSelect(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    InternalSelect *mydata = &(screen->internal_select);\n\n    (void) mydata;\n    /* override flags so that SelectionReceived only updates a buffer */\n#if OPT_PASTE64\n    mydata->base64_paste = screen->base64_paste;\n    screen->base64_paste = 0;\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n    mydata->paste_brackets = screen->paste_brackets;\n    SCREEN_FLAG_unset(screen, paste_brackets);\n#endif\n}\n\nstatic void\nfinishInternalSelect(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    InternalSelect *mydata = &(screen->internal_select);\n\n    (void) mydata;\n#if OPT_PASTE64\n    screen->base64_paste = mydata->base64_paste;\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n    screen->paste_brackets = mydata->paste_brackets;\n#endif\n}\n\n#else\n#define finishInternalSelect(xw)\t/* nothing */\n#endif /* OPT_SELECTION_OPS */\n\n/* SelectionReceived: stuff received selection text into pty */\n\n/* ARGSUSED */\nstatic void\nSelectionReceived(Widget w,\n\t\t  XtPointer client_data,\n\t\t  Atom *selection GCC_UNUSED,\n\t\t  Atom *type,\n\t\t  XtPointer value,\n\t\t  unsigned long *length,\n\t\t  int *format)\n{\n    char **text_list = NULL;\n    int text_list_count = 0;\n    XTextProperty text_prop;\n    TScreen *screen;\n    Display *dpy;\n#if OPT_TRACE && OPT_WIDE_CHARS\n    Char *line = (Char *) value;\n#endif\n\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn;\n\n    screen = TScreenOf(xw);\n    dpy = XtDisplay(w);\n\n    if (*type == 0\t\t/*XT_CONVERT_FAIL */\n\t|| *length == 0\n\t|| value == NULL) {\n\tTRACE((\"...no data to convert\\n\"));\n\tgoto fail;\n    }\n\n    text_prop.value = (unsigned char *) value;\n    text_prop.encoding = *type;\n    text_prop.format = *format;\n    text_prop.nitems = *length;\n\n    TRACE((\"SelectionReceived %s %s format %d, nitems %ld\\n\",\n\t   TraceAtomName(screen->display, *selection),\n\t   visibleSelectionTarget(dpy, text_prop.encoding),\n\t   text_prop.format,\n\t   text_prop.nitems));\n\n#if OPT_WIDE_CHARS\n    if (XSupportsLocale() && screen->wide_chars) {\n\tif (*type == XA_UTF8_STRING(dpy) ||\n\t    *type == XA_STRING ||\n\t    *type == XA_COMPOUND_TEXT(dpy)) {\n\t    GettingSelection(dpy, *type, line, *length);\n\t    if (Xutf8TextPropertyToTextList(dpy, &text_prop,\n\t\t\t\t\t    &text_list,\n\t\t\t\t\t    &text_list_count) < 0) {\n\t\tTRACE((\"default Xutf8 Conversion failed\\n\"));\n\t\ttext_list = NULL;\n\t    }\n\t}\n    } else\n#endif /* OPT_WIDE_CHARS */\n    {\n\t/* Convert the selection to locale's multibyte encoding. */\n\n\tif (*type == XA_UTF8_STRING(dpy) ||\n\t    *type == XA_STRING ||\n\t    *type == XA_COMPOUND_TEXT(dpy)) {\n\t    Status rc;\n\n\t    GettingSelection(dpy, *type, line, *length);\n\n#if OPT_WIDE_CHARS\n\t    if (*type == XA_UTF8_STRING(dpy) &&\n\t\t!(screen->wide_chars || screen->c1_printable)) {\n\t\trc = xtermUtf8ToTextList(xw, &text_prop,\n\t\t\t\t\t &text_list, &text_list_count);\n\t    } else\n#endif\n\t    if (*type == XA_STRING && (!XSupportsLocale() || screen->brokenSelections)) {\n\t\trc = XTextPropertyToStringList(&text_prop,\n\t\t\t\t\t       &text_list, &text_list_count);\n\t    } else {\n\t\trc = XmbTextPropertyToTextList(dpy, &text_prop,\n\t\t\t\t\t       &text_list,\n\t\t\t\t\t       &text_list_count);\n\t    }\n\t    if (rc < 0) {\n\t\tTRACE((\"Conversion failed\\n\"));\n\t\ttext_list = NULL;\n\t    }\n\t}\n    }\n\n    if (text_list != NULL && text_list_count != 0) {\n\tint i;\n\n#if OPT_PASTE64\n\tif (screen->base64_paste) {\n\t    /* EMPTY */ ;\n\t} else\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n\tif (SCREEN_FLAG(screen, paste_brackets) && !screen->selectToBuffer) {\n\t    _WriteKey(screen, (const Char *) \"200\");\n\t}\n#endif\n\tfor (i = 0; i < text_list_count; i++) {\n\t    size_t len = removeControls(xw, text_list[i]);\n\n\t    if (screen->selectToBuffer) {\n\t\tInternalSelect *mydata = &(screen->internal_select);\n\t\tif (!mydata->done) {\n\t\t    size_t have = (mydata->buffer\n\t\t\t\t   ? strlen(mydata->buffer)\n\t\t\t\t   : 0);\n\t\t    size_t need = have + len + 1;\n\t\t    char *buffer = realloc(mydata->buffer, need);\n\n\t\t    if (buffer != 0) {\n\t\t\tstrcpy(buffer + have, text_list[i]);\n\t\t\tmydata->buffer = buffer;\n\t\t    }\n\t\t    TRACE((\"FormatSelect %d.%d .. %d.%d %s\\n\",\n\t\t\t   screen->startSel.row,\n\t\t\t   screen->startSel.col,\n\t\t\t   screen->endSel.row,\n\t\t\t   screen->endSel.col,\n\t\t\t   mydata->buffer));\n\t\t    mydata->format_select(w, mydata->format, mydata->buffer,\n\t\t\t\t\t  &(screen->startSel),\n\t\t\t\t\t  &(screen->endSel));\n\t\t    mydata->done = True;\n\t\t}\n\n\t    } else {\n\t\t_WriteSelectionData(xw, (Char *) text_list[i], len);\n\t    }\n\t}\n#if OPT_PASTE64\n\tif (screen->base64_paste) {\n\t    FinishPaste64(xw);\n\t} else\n#endif\n#if OPT_PASTE64 || OPT_READLINE\n\tif (SCREEN_FLAG(screen, paste_brackets) && !screen->selectToBuffer) {\n\t    _WriteKey(screen, (const Char *) \"201\");\n\t}\n#endif\n\tif (screen->selectToBuffer) {\n\t    InternalSelect *mydata = &(screen->internal_select);\n\t    finishInternalSelect(xw);\n\t    if (mydata->done) {\n\t\tfree(mydata->format);\n\t\tfree(mydata->buffer);\n\t\tmemset(mydata, 0, sizeof(*mydata));\n\t    }\n\t    screen->selectToBuffer = False;\n\t}\n\tXFreeStringList(text_list);\n    } else {\n\tTRACE((\"...empty text-list\\n\"));\n\tgoto fail;\n    }\n\n    XtFree((char *) client_data);\n    XtFree((char *) value);\n\n    return;\n\n  fail:\n    if (client_data != 0) {\n\tstruct _SelectionList *list = (struct _SelectionList *) client_data;\n\n\tTRACE((\"SelectionReceived ->xtermGetSelection\\n\"));\n\txtermGetSelection(w, list->time,\n\t\t\t  list->params, list->count, list->targets);\n\tXtFree((char *) client_data);\n#if OPT_PASTE64\n    } else {\n\tFinishPaste64(xw);\n#endif\n    }\n    return;\n}\n\nvoid\nHandleInsertSelection(Widget w,\n\t\t      XEvent *event,\t/* assumed to be XButtonEvent* */\n\t\t      String *params,\t/* selections in precedence order */\n\t\t      Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleInsertSelection\", event, params, num_params);\n\tif (!SendMousePosition(xw, event)) {\n#if OPT_READLINE\n\t    int ldelta;\n\t    TScreen *screen = TScreenOf(xw);\n\t    if (IsBtnEvent(event)\n\t\t&& !OverrideEvent(event)\n\t\t&& (okSendMousePos(xw) == MOUSE_OFF)\n\t\t&& SCREEN_FLAG(screen, paste_moves)\n\t\t&& rowOnCurrentLine(screen, eventRow(screen, event), &ldelta))\n\t\tReadLineMovePoint(screen, eventColBetween(screen, event), ldelta);\n#endif /* OPT_READLINE */\n\n\t    xtermGetSelection(w, event->xbutton.time, params, *num_params, NULL);\n\t}\n    }\n}\n\nstatic SelectUnit\nEvalSelectUnit(XtermWidget xw,\n\t       Time buttonDownTime,\n\t       SelectUnit defaultUnit,\n\t       unsigned int button)\n{\n    TScreen *screen = TScreenOf(xw);\n    SelectUnit result;\n    int delta;\n\n    if (button != screen->lastButton) {\n\tdelta = screen->multiClickTime + 1;\n    } else if (screen->lastButtonUpTime == (Time) 0) {\n\t/* first time and once in a blue moon */\n\tdelta = screen->multiClickTime + 1;\n    } else if (buttonDownTime > screen->lastButtonUpTime) {\n\t/* most of the time */\n\tdelta = (int) (buttonDownTime - screen->lastButtonUpTime);\n    } else {\n\t/* time has rolled over since lastButtonUpTime */\n\tdelta = (int) ((((Time) ~ 0) - screen->lastButtonUpTime) + buttonDownTime);\n    }\n\n    if (delta > screen->multiClickTime) {\n\tscreen->numberOfClicks = 1;\n\tresult = defaultUnit;\n    } else {\n\tresult = screen->selectMap[screen->numberOfClicks % screen->maxClicks];\n\tscreen->numberOfClicks += 1;\n    }\n    TRACE((\"EvalSelectUnit(%d) = %d\\n\", screen->numberOfClicks, result));\n    return result;\n}\n\nstatic void\ndo_select_start(XtermWidget xw,\n\t\tXEvent *event,\t/* must be XButtonEvent* */\n\t\tCELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    if (SendMousePosition(xw, event))\n\treturn;\n    screen->selectUnit = EvalSelectUnit(xw,\n\t\t\t\t\tevent->xbutton.time,\n\t\t\t\t\tSelect_CHAR,\n\t\t\t\t\tevent->xbutton.button);\n    screen->replyToEmacs = False;\n\n#if OPT_READLINE\n    lastButtonDownTime = event->xbutton.time;\n#endif\n\n    StartSelect(xw, cell);\n}\n\n/* ARGSUSED */\nvoid\nHandleSelectStart(Widget w,\n\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t  String *params GCC_UNUSED,\n\t\t  Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\tCELL cell;\n\n\tTRACE_EVENT(\"HandleSelectStart\", event, params, num_params);\n\tscreen->firstValidRow = 0;\n\tscreen->lastValidRow = screen->max_row;\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n\n#if OPT_READLINE\n\tExtendingSelection = 0;\n#endif\n\n\tdo_select_start(xw, event, &cell);\n    }\n}\n\n/* ARGSUSED */\nvoid\nHandleKeyboardSelectStart(Widget w,\n\t\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t\t  String *params GCC_UNUSED,\n\t\t\t  Cardinal *num_params GCC_UNUSED)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTScreen *screen = TScreenOf(xw);\n\n\tTRACE_EVENT(\"HandleKeyboardSelectStart\", event, params, num_params);\n\tdo_select_start(xw, event, &screen->cursorp);\n    }\n}\n\nstatic void\nTrackDown(XtermWidget xw, XButtonEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    CELL cell;\n\n    screen->selectUnit = EvalSelectUnit(xw,\n\t\t\t\t\tevent->time,\n\t\t\t\t\tSelect_CHAR,\n\t\t\t\t\tevent->button);\n    if (screen->numberOfClicks > 1) {\n\tPointToCELL(screen, event->y, event->x, &cell);\n\tscreen->replyToEmacs = True;\n\tStartSelect(xw, &cell);\n    } else {\n\tscreen->waitingForTrackInfo = True;\n\tEditorButton(xw, event);\n    }\n}\n\n#define boundsCheck(x)\tif (x < 0) \\\n\t\t\t    x = 0; \\\n\t\t\telse if (x >= screen->max_row) \\\n\t\t\t    x = screen->max_row\n\nvoid\nTrackMouse(XtermWidget xw,\n\t   int func,\n\t   CELL *start,\n\t   int firstrow,\n\t   int lastrow)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    if (screen->waitingForTrackInfo) {\t/* if Timed, ignore */\n\tscreen->waitingForTrackInfo = False;\n\n\tif (func != 0) {\n\t    CELL first = *start;\n\n\t    boundsCheck(first.row);\n\t    boundsCheck(firstrow);\n\t    boundsCheck(lastrow);\n\t    screen->firstValidRow = firstrow;\n\t    screen->lastValidRow = lastrow;\n\t    screen->replyToEmacs = True;\n\t    StartSelect(xw, &first);\n\t}\n    }\n}\n\nstatic void\nStartSelect(XtermWidget xw, const CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE((\"StartSelect row=%d, col=%d\\n\", cell->row, cell->col));\n    if (screen->cursor_state)\n\tHideCursor(xw);\n    if (screen->numberOfClicks == 1) {\n\t/* set start of selection */\n\tscreen->rawPos = *cell;\n    }\n    /* else use old values in rawPos */\n    screen->saveStartR = screen->startExt = screen->rawPos;\n    screen->saveEndR = screen->endExt = screen->rawPos;\n    if (Coordinate(screen, cell) < Coordinate(screen, &(screen->rawPos))) {\n\tscreen->eventMode = LEFTEXTENSION;\n\tscreen->startExt = *cell;\n    } else {\n\tscreen->eventMode = RIGHTEXTENSION;\n\tscreen->endExt = *cell;\n    }\n    ComputeSelect(xw, &(screen->startExt), &(screen->endExt), False, True);\n}\n\nstatic void\nEndExtend(XtermWidget xw,\n\t  XEvent *event,\t/* must be XButtonEvent */\n\t  String *params,\t/* selections */\n\t  Cardinal num_params,\n\t  Bool use_cursor_loc)\n{\n    CELL cell;\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE_EVENT(\"EndExtend\", event, params, &num_params);\n    if (use_cursor_loc) {\n\tcell = screen->cursorp;\n    } else {\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n    }\n    ExtendExtend(xw, &cell);\n\n    screen->lastButtonUpTime = event->xbutton.time;\n    screen->lastButton = event->xbutton.button;\n\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel))) {\n\tif (screen->replyToEmacs) {\n\t    Char line[64];\n\t    unsigned count = 0;\n\n\t    if (screen->control_eight_bits) {\n\t\tline[count++] = ANSI_CSI;\n\t    } else {\n\t\tline[count++] = ANSI_ESC;\n\t\tline[count++] = '[';\n\t    }\n\t    if (isSameCELL(&(screen->rawPos), &(screen->startSel))\n\t\t&& isSameCELL(&cell, &(screen->endSel))) {\n\t\t/* Use short-form emacs select */\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase 0:\n\t\tcase SET_EXT_MODE_MOUSE:\n\t\t    line[count++] = 't';\n\t\t    break;\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = '<';\n\t\t    break;\n\t\t}\n\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.row);\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_URXVT_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = 't';\n\t\t    break;\n\t\t}\n\t    } else {\n\t\t/* long-form, specify everything */\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase 0:\n\t\tcase SET_EXT_MODE_MOUSE:\n\t\t    line[count++] = 'T';\n\t\t    break;\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = '<';\n\t\t    break;\n\t\t}\n\n\t\tcount = EmitMousePosition(screen, line, count, screen->startSel.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->startSel.row);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, screen->endSel.row);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, cell.col);\n\t\tcount = EmitMousePositionSeparator(screen, line, count);\n\t\tcount = EmitMousePosition(screen, line, count, cell.row);\n\n\t\tswitch (screen->extend_coords) {\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_URXVT_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    line[count++] = 'T';\n\t\t    break;\n\t\t}\n\t    }\n\t    v_write(screen->respond, line, count);\n\t    UnHiliteText(xw);\n\t}\n    }\n    SelectSet(xw, event, params, num_params);\n    screen->eventMode = NORMAL;\n}\n\nvoid\nHandleSelectSet(Widget w,\n\t\tXEvent *event,\n\t\tString *params,\n\t\tCardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleSelectSet\", event, params, num_params);\n\tSelectSet(xw, event, params, *num_params);\n    }\n}\n\n/* ARGSUSED */\nstatic void\nSelectSet(XtermWidget xw,\n\t  XEvent *event GCC_UNUSED,\n\t  String *params,\n\t  Cardinal num_params)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    TRACE((\"SelectSet\\n\"));\n    /* Only do select stuff if non-null select */\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel))) {\n\tCardinal n;\n\tfor (n = 0; n < num_params; ++n) {\n\t    SaltTextAway(xw,\n\t\t\t TargetToSelection(screen, params[n]),\n\t\t\t &(screen->startSel), &(screen->endSel));\n\t}\n\t_OwnSelection(xw, params, num_params);\n    } else {\n\tScrnDisownSelection(xw);\n    }\n}\n\n#define Abs(x)\t\t((x) < 0 ? -(x) : (x))\n\n/* ARGSUSED */\nstatic void\ndo_start_extend(XtermWidget xw,\n\t\tXEvent *event,\t/* must be XButtonEvent* */\n\t\tString *params GCC_UNUSED,\n\t\tCardinal *num_params GCC_UNUSED,\n\t\tBool use_cursor_loc)\n{\n    TScreen *screen = TScreenOf(xw);\n    int coord;\n    CELL cell;\n\n    if (SendMousePosition(xw, event))\n\treturn;\n\n    screen->firstValidRow = 0;\n    screen->lastValidRow = screen->max_row;\n#if OPT_READLINE\n    if (OverrideEvent(event)\n\t|| event->xbutton.button != Button3\n\t|| !(SCREEN_FLAG(screen, dclick3_deletes)))\n#endif\n\tscreen->selectUnit = EvalSelectUnit(xw,\n\t\t\t\t\t    event->xbutton.time,\n\t\t\t\t\t    screen->selectUnit,\n\t\t\t\t\t    event->xbutton.button);\n    screen->replyToEmacs = False;\n\n#if OPT_READLINE\n    CheckSecondPress3(xw, screen, event);\n#endif\n\n    if (screen->numberOfClicks == 1\n\t|| (SCREEN_FLAG(screen, dclick3_deletes)\n\t    && !OverrideEvent(event))) {\n\t/* Save existing selection so we can reestablish it if the guy\n\t   extends past the other end of the selection */\n\tscreen->saveStartR = screen->startExt = screen->startRaw;\n\tscreen->saveEndR = screen->endExt = screen->endRaw;\n    } else {\n\t/* He just needed the selection mode changed, use old values. */\n\tscreen->startExt = screen->startRaw = screen->saveStartR;\n\tscreen->endExt = screen->endRaw = screen->saveEndR;\n    }\n    if (use_cursor_loc) {\n\tcell = screen->cursorp;\n    } else {\n\tPointToCELL(screen, event->xbutton.y, event->xbutton.x, &cell);\n    }\n    coord = Coordinate(screen, &cell);\n\n    if (Abs(coord - Coordinate(screen, &(screen->startSel)))\n\t< Abs(coord - Coordinate(screen, &(screen->endSel)))\n\t|| coord < Coordinate(screen, &(screen->startSel))) {\n\t/* point is close to left side of selection */\n\tscreen->eventMode = LEFTEXTENSION;\n\tscreen->startExt = cell;\n    } else {\n\t/* point is close to left side of selection */\n\tscreen->eventMode = RIGHTEXTENSION;\n\tscreen->endExt = cell;\n    }\n    ComputeSelect(xw, &(screen->startExt), &(screen->endExt), True, True);\n\n#if OPT_READLINE\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel)))\n\tExtendingSelection = 1;\n#endif\n}\n\nstatic void\nExtendExtend(XtermWidget xw, const CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n    int coord = Coordinate(screen, cell);\n\n    TRACE((\"ExtendExtend row=%d, col=%d\\n\", cell->row, cell->col));\n    if (screen->eventMode == LEFTEXTENSION\n\t&& ((coord + (screen->selectUnit != Select_CHAR))\n\t    > Coordinate(screen, &(screen->endSel)))) {\n\t/* Whoops, he's changed his mind.  Do RIGHTEXTENSION */\n\tscreen->eventMode = RIGHTEXTENSION;\n\tscreen->startExt = screen->saveStartR;\n    } else if (screen->eventMode == RIGHTEXTENSION\n\t       && coord < Coordinate(screen, &(screen->startSel))) {\n\t/* Whoops, he's changed his mind.  Do LEFTEXTENSION */\n\tscreen->eventMode = LEFTEXTENSION;\n\tscreen->endExt = screen->saveEndR;\n    }\n    if (screen->eventMode == LEFTEXTENSION) {\n\tscreen->startExt = *cell;\n    } else {\n\tscreen->endExt = *cell;\n    }\n    ComputeSelect(xw, &(screen->startExt), &(screen->endExt), False, True);\n\n#if OPT_READLINE\n    if (!isSameCELL(&(screen->startSel), &(screen->endSel)))\n\tExtendingSelection = 1;\n#endif\n}\n\nvoid\nHandleStartExtend(Widget w,\n\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t  String *params,\t/* unused */\n\t\t  Cardinal *num_params)\t\t/* unused */\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleStartExtend\", event, params, num_params);\n\tdo_start_extend(xw, event, params, num_params, False);\n    }\n}\n\nvoid\nHandleKeyboardStartExtend(Widget w,\n\t\t\t  XEvent *event,\t/* must be XButtonEvent* */\n\t\t\t  String *params,\t/* unused */\n\t\t\t  Cardinal *num_params)\t\t/* unused */\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleKeyboardStartExtend\", event, params, num_params);\n\tdo_start_extend(xw, event, params, num_params, True);\n    }\n}\n\nvoid\nScrollSelection(TScreen *screen, int amount, Bool always)\n{\n    int minrow = INX2ROW(screen, -screen->savedlines);\n    int maxrow = INX2ROW(screen, screen->max_row);\n    int maxcol = screen->max_col;\n\n#define scroll_update_one(cell) \\\n\t(cell)->row += amount; \\\n\tif ((cell)->row < minrow) { \\\n\t    (cell)->row = minrow; \\\n\t    (cell)->col = 0; \\\n\t} \\\n\tif ((cell)->row > maxrow) { \\\n\t    (cell)->row = maxrow; \\\n\t    (cell)->col = maxcol; \\\n\t}\n\n    scroll_update_one(&(screen->startRaw));\n    scroll_update_one(&(screen->endRaw));\n    scroll_update_one(&(screen->startSel));\n    scroll_update_one(&(screen->endSel));\n\n    scroll_update_one(&(screen->rawPos));\n\n    /*\n     * If we are told to scroll the selection but it lies outside the scrolling\n     * margins, then that could cause the selection to move (bad).  It is not\n     * simple to fix, because this function is called both for the scrollbar\n     * actions as well as application scrolling.  The 'always' flag is set in\n     * the former case.  The rest of the logic handles the latter.\n     */\n    if (ScrnHaveSelection(screen)) {\n\tint adjust;\n\n\tadjust = ROW2INX(screen, screen->startH.row);\n\tif (always\n\t    || !ScrnHaveRowMargins(screen)\n\t    || ScrnIsRowInMargins(screen, adjust)) {\n\t    scroll_update_one(&screen->startH);\n\t}\n\tadjust = ROW2INX(screen, screen->endH.row);\n\tif (always\n\t    || !ScrnHaveRowMargins(screen)\n\t    || ScrnIsRowInMargins(screen, adjust)) {\n\t    scroll_update_one(&screen->endH);\n\t}\n    }\n\n    screen->startHCoord = Coordinate(screen, &screen->startH);\n    screen->endHCoord = Coordinate(screen, &screen->endH);\n}\n\n/*ARGSUSED*/\nvoid\nResizeSelection(TScreen *screen, int rows, int cols)\n{\n    rows--;\t\t\t/* decr to get 0-max */\n    cols--;\n\n    if (screen->startRaw.row > rows)\n\tscreen->startRaw.row = rows;\n    if (screen->startSel.row > rows)\n\tscreen->startSel.row = rows;\n    if (screen->endRaw.row > rows)\n\tscreen->endRaw.row = rows;\n    if (screen->endSel.row > rows)\n\tscreen->endSel.row = rows;\n    if (screen->rawPos.row > rows)\n\tscreen->rawPos.row = rows;\n\n    if (screen->startRaw.col > cols)\n\tscreen->startRaw.col = cols;\n    if (screen->startSel.col > cols)\n\tscreen->startSel.col = cols;\n    if (screen->endRaw.col > cols)\n\tscreen->endRaw.col = cols;\n    if (screen->endSel.col > cols)\n\tscreen->endSel.col = cols;\n    if (screen->rawPos.col > cols)\n\tscreen->rawPos.col = cols;\n}\n\n#if OPT_WIDE_CHARS\n#define isWideCell(row, col) isWideFrg((int)XTERM_CELL(row, col))\n#endif\n\nstatic void\nPointToCELL(TScreen *screen,\n\t    int y,\n\t    int x,\n\t    CELL *cell)\n/* Convert pixel coordinates to character coordinates.\n   Rows are clipped between firstValidRow and lastValidRow.\n   Columns are clipped between to be 0 or greater, but are not clipped to some\n       maximum value. */\n{\n    cell->row = (y - screen->border) / FontHeight(screen);\n    if (cell->row < screen->firstValidRow)\n\tcell->row = screen->firstValidRow;\n    else if (cell->row > screen->lastValidRow)\n\tcell->row = screen->lastValidRow;\n    cell->col = (x - OriginX(screen)) / FontWidth(screen);\n    if (cell->col < 0)\n\tcell->col = 0;\n    else if (cell->col > MaxCols(screen)) {\n\tcell->col = MaxCols(screen);\n    }\n#if OPT_WIDE_CHARS\n    /*\n     * If we got a click on the right half of a doublewidth character,\n     * pretend it happened on the left half.\n     */\n    if (cell->col > 0\n\t&& isWideCell(cell->row, cell->col - 1)\n\t&& (XTERM_CELL(cell->row, cell->col) == HIDDEN_CHAR)) {\n\tcell->col -= 1;\n    }\n#endif\n}\n\n/*\n * Find the last column at which text was drawn on the given row.\n */\nstatic int\nLastTextCol(TScreen *screen, CLineData *ld, int row)\n{\n    int i = -1;\n\n    if (ld != 0) {\n\tif (okScrnRow(screen, row)) {\n\t    const IAttr *ch;\n\t    for (i = screen->max_col,\n\t\t ch = ld->attribs + i;\n\t\t i >= 0 && !(*ch & CHARDRAWN);\n\t\t ch--, i--) {\n\t\t;\n\t    }\n#if OPT_DEC_CHRSET\n\t    if (CSET_DOUBLE(GetLineDblCS(ld))) {\n\t\ti *= 2;\n\t    }\n#endif\n\t}\n    }\n    return (i);\n}\n\n#if !OPT_WIDE_CHARS\n/*\n** double click table for cut and paste in 8 bits\n**\n** This table is divided in four parts :\n**\n**\t- control characters\t[0,0x1f] U [0x80,0x9f]\n**\t- separators\t\t[0x20,0x3f] U [0xa0,0xb9]\n**\t- binding characters\t[0x40,0x7f] U [0xc0,0xff]\n**\t- exceptions\n*/\n/* *INDENT-OFF* */\nstatic int charClass[256] =\n{\n/* NUL  SOH  STX  ETX  EOT  ENQ  ACK  BEL */\n    32,  1,    1,   1,   1,   1,   1,   1,\n/*  BS   HT   NL   VT   FF   CR   SO   SI */\n     1,  32,   1,   1,   1,   1,   1,   1,\n/* DLE  DC1  DC2  DC3  DC4  NAK  SYN  ETB */\n     1,   1,   1,   1,   1,   1,   1,   1,\n/* CAN   EM  SUB  ESC   FS   GS   RS   US */\n     1,   1,   1,   1,   1,   1,   1,   1,\n/*  SP    !    \"    #    $    %    &    ' */\n    32,  33,  34,  35,  36,  37,  38,  39,\n/*   (    )    *    +    ,    -    .    / */\n    40,  41,  42,  43,  44,  45,  46,  47,\n/*   0    1    2    3    4    5    6    7 */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   8    9    :    ;    <    =    >    ? */\n    48,  48,  58,  59,  60,  61,  62,  63,\n/*   @    A    B    C    D    E    F    G */\n    64,  48,  48,  48,  48,  48,  48,  48,\n/*   H    I    J    K    L    M    N    O */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   P    Q    R    S    T    U    V    W */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   X    Y    Z    [    \\    ]    ^    _ */\n    48,  48,  48,  91,  92,  93,  94,  48,\n/*   `    a    b    c    d    e    f    g */\n    96,  48,  48,  48,  48,  48,  48,  48,\n/*   h    i    j    k    l    m    n    o */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   p    q    r    s    t    u    v    w */\n    48,  48,  48,  48,  48,  48,  48,  48,\n/*   x    y    z    {    |    }    ~  DEL */\n    48,  48,  48, 123, 124, 125, 126,   1,\n/* x80  x81  x82  x83  IND  NEL  SSA  ESA */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/* HTS  HTJ  VTS  PLD  PLU   RI  SS2  SS3 */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/* DCS  PU1  PU2  STS  CCH   MW  SPA  EPA */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/* x98  x99  x9A  CSI   ST  OSC   PM  APC */\n    1,    1,   1,   1,   1,   1,   1,   1,\n/*   -    i   c/    L   ox   Y-    |   So */\n    160, 161, 162, 163, 164, 165, 166, 167,\n/*  ..   c0   ip   <<    _        R0    - */\n    168, 169, 170, 171, 172, 173, 174, 175,\n/*   o   +-    2    3    '    u   q|    . */\n    176, 177, 178, 179, 180, 181, 182, 183,\n/*   ,    1    2   >>  1/4  1/2  3/4    ? */\n    184, 185, 186, 187, 188, 189, 190, 191,\n/*  A`   A'   A^   A~   A:   Ao   AE   C, */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  E`   E'   E^   E:   I`   I'   I^   I: */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  D-   N~   O`   O'   O^   O~   O:    X */\n     48,  48,  48,  48,  48,  48,  48, 215,\n/*  O/   U`   U'   U^   U:   Y'    P    B */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  a`   a'   a^   a~   a:   ao   ae   c, */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*  e`   e'   e^   e:    i`  i'   i^   i: */\n     48,  48,  48,  48,  48,  48,  48,  48,\n/*   d   n~   o`   o'   o^   o~   o:   -: */\n     48,  48,  48,  48,  48,  48,  48, 247,\n/*  o/   u`   u'   u^   u:   y'    P   y: */\n     48,  48,  48,  48,  48,  48,  48,  48};\n/* *INDENT-ON* */\n\nint\nSetCharacterClassRange(int low,\t/* in range of [0..255] */\n\t\t       int high,\n\t\t       int value)\t/* arbitrary */\n{\n\n    if (low < 0 || high > 255 || high < low)\n\treturn (-1);\n\n    for (; low <= high; low++)\n\tcharClass[low] = value;\n\n    return (0);\n}\n#endif\n\nstatic int\nclass_of(LineData *ld, CELL *cell)\n{\n    CELL temp = *cell;\n    int result = 0;\n\n#if OPT_DEC_CHRSET\n    if (CSET_DOUBLE(GetLineDblCS(ld))) {\n\ttemp.col /= 2;\n    }\n#endif\n    if (temp.col < (int) ld->lineSize)\n\tresult = CharacterClass((int) (ld->charData[temp.col]));\n    return result;\n}\n\n#if OPT_WIDE_CHARS\n#define CClassSelects(name, cclass) \\\n\t (CClassOf(name) == cclass \\\n\t || XTERM_CELL(screen->name.row, screen->name.col) == HIDDEN_CHAR)\n#else\n#define CClassSelects(name, cclass) \\\n\t (class_of(ld.name, &((screen->name))) == cclass)\n#endif\n\n#define CClassOf(name) class_of(ld.name, &((screen->name)))\n\n#if OPT_REPORT_CCLASS\nstatic int\nshow_cclass_range(int lo, int hi)\n{\n    int cclass = CharacterClass(lo);\n    int ident = (cclass == lo);\n    int more = 0;\n    if (ident) {\n\tint ch;\n\tfor (ch = lo + 1; ch <= hi; ch++) {\n\t    if (CharacterClass(ch) != ch) {\n\t\tident = 0;\n\t\tbreak;\n\t    }\n\t}\n\tif (ident && (hi < 255)) {\n\t    ch = hi + 1;\n\t    if (CharacterClass(ch) == ch) {\n\t\tif (ch >= 255 || CharacterClass(ch + 1) != ch) {\n\t\t    more = 1;\n\t\t}\n\t    }\n\t}\n    }\n    if (!more) {\n\tif (lo == hi) {\n\t    printf(\"\\t%d\", lo);\n\t} else {\n\t    printf(\"\\t%d-%d\", lo, hi);\n\t}\n\tif (!ident)\n\t    printf(\":%d\", cclass);\n\tif (hi < 255)\n\t    printf(\", \\\\\");\n\tprintf(\"\\n\");\n    }\n    return !more;\n}\n\nvoid\nreport_char_class(XtermWidget xw)\n{\n    /* simple table, to match documentation */\n    static const char charnames[] =\n    \"NUL\\0\" \"SOH\\0\" \"STX\\0\" \"ETX\\0\" \"EOT\\0\" \"ENQ\\0\" \"ACK\\0\" \"BEL\\0\"\n    \" BS\\0\" \" HT\\0\" \" NL\\0\" \" VT\\0\" \" NP\\0\" \" CR\\0\" \" SO\\0\" \" SI\\0\"\n    \"DLE\\0\" \"DC1\\0\" \"DC2\\0\" \"DC3\\0\" \"DC4\\0\" \"NAK\\0\" \"SYN\\0\" \"ETB\\0\"\n    \"CAN\\0\" \" EM\\0\" \"SUB\\0\" \"ESC\\0\" \" FS\\0\" \" GS\\0\" \" RS\\0\" \" US\\0\"\n    \" SP\\0\" \"  !\\0\" \"  \\\"\\0\" \"  #\\0\" \"  $\\0\" \"  %\\0\" \"  &\\0\" \"  '\\0\"\n    \"  (\\0\" \"  )\\0\" \"  *\\0\" \"  +\\0\" \"  ,\\0\" \"  -\\0\" \"  .\\0\" \"  /\\0\"\n    \"  0\\0\" \"  1\\0\" \"  2\\0\" \"  3\\0\" \"  4\\0\" \"  5\\0\" \"  6\\0\" \"  7\\0\"\n    \"  8\\0\" \"  9\\0\" \"  :\\0\" \"  ;\\0\" \"  <\\0\" \"  =\\0\" \"  >\\0\" \"  ?\\0\"\n    \"  @\\0\" \"  A\\0\" \"  B\\0\" \"  C\\0\" \"  D\\0\" \"  E\\0\" \"  F\\0\" \"  G\\0\"\n    \"  H\\0\" \"  I\\0\" \"  J\\0\" \"  K\\0\" \"  L\\0\" \"  M\\0\" \"  N\\0\" \"  O\\0\"\n    \"  P\\0\" \"  Q\\0\" \"  R\\0\" \"  S\\0\" \"  T\\0\" \"  U\\0\" \"  V\\0\" \"  W\\0\"\n    \"  X\\0\" \"  Y\\0\" \"  Z\\0\" \"  [\\0\" \"  \\\\\\0\" \"  ]\\0\" \"  ^\\0\" \"  _\\0\"\n    \"  `\\0\" \"  a\\0\" \"  b\\0\" \"  c\\0\" \"  d\\0\" \"  e\\0\" \"  f\\0\" \"  g\\0\"\n    \"  h\\0\" \"  i\\0\" \"  j\\0\" \"  k\\0\" \"  l\\0\" \"  m\\0\" \"  n\\0\" \"  o\\0\"\n    \"  p\\0\" \"  q\\0\" \"  r\\0\" \"  s\\0\" \"  t\\0\" \"  u\\0\" \"  v\\0\" \"  w\\0\"\n    \"  x\\0\" \"  y\\0\" \"  z\\0\" \"  {\\0\" \"  |\\0\" \"  }\\0\" \"  ~\\0\" \"DEL\\0\"\n    \"x80\\0\" \"x81\\0\" \"x82\\0\" \"x83\\0\" \"IND\\0\" \"NEL\\0\" \"SSA\\0\" \"ESA\\0\"\n    \"HTS\\0\" \"HTJ\\0\" \"VTS\\0\" \"PLD\\0\" \"PLU\\0\" \" RI\\0\" \"SS2\\0\" \"SS3\\0\"\n    \"DCS\\0\" \"PU1\\0\" \"PU2\\0\" \"STS\\0\" \"CCH\\0\" \" MW\\0\" \"SPA\\0\" \"EPA\\0\"\n    \"x98\\0\" \"x99\\0\" \"x9A\\0\" \"CSI\\0\" \" ST\\0\" \"OSC\\0\" \" PM\\0\" \"APC\\0\"\n    \"  -\\0\" \"  i\\0\" \" c/\\0\" \"  L\\0\" \" ox\\0\" \" Y-\\0\" \"  |\\0\" \" So\\0\"\n    \" ..\\0\" \" c0\\0\" \" ip\\0\" \" <<\\0\" \"  _\\0\" \"   \\0\" \" R0\\0\" \"  -\\0\"\n    \"  o\\0\" \" +-\\0\" \"  2\\0\" \"  3\\0\" \"  '\\0\" \"  u\\0\" \" q|\\0\" \"  .\\0\"\n    \"  ,\\0\" \"  1\\0\" \"  2\\0\" \" >>\\0\" \"1/4\\0\" \"1/2\\0\" \"3/4\\0\" \"  ?\\0\"\n    \" A`\\0\" \" A'\\0\" \" A^\\0\" \" A~\\0\" \" A:\\0\" \" Ao\\0\" \" AE\\0\" \" C,\\0\"\n    \" E`\\0\" \" E'\\0\" \" E^\\0\" \" E:\\0\" \" I`\\0\" \" I'\\0\" \" I^\\0\" \" I:\\0\"\n    \" D-\\0\" \" N~\\0\" \" O`\\0\" \" O'\\0\" \" O^\\0\" \" O~\\0\" \" O:\\0\" \"  X\\0\"\n    \" O/\\0\" \" U`\\0\" \" U'\\0\" \" U^\\0\" \" U:\\0\" \" Y'\\0\" \"  P\\0\" \"  B\\0\"\n    \" a`\\0\" \" a'\\0\" \" a^\\0\" \" a~\\0\" \" a:\\0\" \" ao\\0\" \" ae\\0\" \" c,\\0\"\n    \" e`\\0\" \" e'\\0\" \" e^\\0\" \" e:\\0\" \" i`\\0\" \" i'\\0\" \" i^\\0\" \" i:\\0\"\n    \"  d\\0\" \" n~\\0\" \" o`\\0\" \" o'\\0\" \" o^\\0\" \" o~\\0\" \" o:\\0\" \" -:\\0\"\n    \" o/\\0\" \" u`\\0\" \" u'\\0\" \" u^\\0\" \" u:\\0\" \" y'\\0\" \"  P\\0\" \" y:\\0\";\n    int ch, dh;\n    int class_p;\n\n    (void) xw;\n\n    printf(\"static int charClass[256] = {\\n\");\n    for (ch = 0; ch < 256; ++ch) {\n\tconst char *s = charnames + (ch * 4);\n\tif ((ch & 7) == 0)\n\t    printf(\"/*\");\n\tprintf(\" %s \", s);\n\tif (((ch + 1) & 7) == 0) {\n\t    printf(\"*/\\n  \");\n\t    for (dh = ch - 7; dh <= ch; ++dh) {\n\t\tprintf(\" %3d%s\", CharacterClass(dh), dh == 255 ? \"};\" : \",\");\n\t    }\n\t    printf(\"\\n\");\n\t}\n    }\n\n    /* print the table as if it were the charClass resource */\n    printf(\"\\n\");\n    printf(\"The table is equivalent to this \\\"charClass\\\" resource:\\n\");\n    class_p = CharacterClass(dh = 0);\n    for (ch = 0; ch < 256; ++ch) {\n\tint class_c = CharacterClass(ch);\n\tif (class_c != class_p) {\n\t    if (show_cclass_range(dh, ch - 1)) {\n\t\tdh = ch;\n\t\tclass_p = class_c;\n\t    }\n\t}\n    }\n    if (dh < 255) {\n\tshow_cclass_range(dh, 255);\n    }\n\n    if_OPT_WIDE_CHARS(TScreenOf(xw), {\n\t/* if this is a wide-character configuration, print all intervals */\n\treport_wide_char_class();\n    });\n}\n#endif\n\n/*\n * If the given column is past the end of text on the given row, bump to the\n * beginning of the next line.\n */\nstatic Boolean\nokPosition(TScreen *screen,\n\t   LineData **ld,\n\t   CELL *cell)\n{\n    Boolean result = True;\n\n    if (cell->row > screen->max_row) {\n\tresult = False;\n\tTRACE((\"okPosition cell row %d > screen max %d\\n\", cell->row, screen->max_row));\n    } else if (cell->col > (LastTextCol(screen, *ld, cell->row) + 1)) {\n\tTRACE((\"okPosition cell col %d > screen max %d\\n\", cell->col,\n\t       (LastTextCol(screen, *ld, cell->row) + 1)));\n\tif (cell->row < screen->max_row) {\n\t    TRACE((\"okPosition cell row %d < screen max %d\\n\", cell->row, screen->max_row));\n\t    cell->col = 0;\n\t    *ld = GET_LINEDATA(screen, ++cell->row);\n\t    result = False;\n\t}\n    }\n    return result;\n}\n\nstatic void\ntrimLastLine(TScreen *screen,\n\t     LineData **ld,\n\t     CELL *last)\n{\n    if (screen->cutNewline && last->row < screen->max_row) {\n\tlast->col = 0;\n\t*ld = GET_LINEDATA(screen, ++last->row);\n    } else {\n\tlast->col = LastTextCol(screen, *ld, last->row) + 1;\n    }\n}\n\n#if OPT_SELECT_REGEX\n/*\n * Returns the first row of a wrapped line.\n */\nstatic int\nfirstRowOfLine(TScreen *screen, int row, Bool visible)\n{\n    LineData *ld = 0;\n    int limit = visible ? 0 : -screen->savedlines;\n\n    while (row > limit &&\n\t   (ld = GET_LINEDATA(screen, row - 1)) != 0 &&\n\t   LineTstWrapped(ld)) {\n\t--row;\n    }\n    return row;\n}\n\n/*\n * Returns the last row of a wrapped line.\n */\nstatic int\nlastRowOfLine(TScreen *screen, int row)\n{\n    LineData *ld;\n\n    while (row < screen->max_row &&\n\t   (ld = GET_LINEDATA(screen, row)) != 0 &&\n\t   LineTstWrapped(ld)) {\n\t++row;\n    }\n    return row;\n}\n\n/*\n * Returns the number of cells on the range of rows.\n */\nstatic unsigned\nlengthOfLines(TScreen *screen, int firstRow, int lastRow)\n{\n    unsigned length = 0;\n    int n;\n\n    for (n = firstRow; n <= lastRow; ++n) {\n\tLineData *ld = GET_LINEDATA(screen, n);\n\tint value = LastTextCol(screen, ld, n);\n\tif (value >= 0)\n\t    length += (unsigned) (value + 1);\n    }\n    return length;\n}\n\n/*\n * Make a copy of the wrapped-line which corresponds to the given row as a\n * string of bytes.  Construct an index for the columns from the beginning of\n * the line.\n */\nstatic char *\nmake_indexed_text(TScreen *screen, int row, unsigned length, int *indexed)\n{\n    Char *result = 0;\n    size_t need = (length + 1);\n\n    /*\n     * Get a quick upper bound to the number of bytes needed, if the whole\n     * string were UTF-8.\n     */\n    if_OPT_WIDE_CHARS(screen, {\n\tneed *= ((screen->lineExtra + 1) * 6);\n    });\n\n    if ((result = TypeCallocN(Char, need + 1)) != 0) {\n\tLineData *ld = GET_LINEDATA(screen, row);\n\tunsigned used = 0;\n\tChar *last = result;\n\n\tdo {\n\t    int col = 0;\n\t    int limit = LastTextCol(screen, ld, row);\n\n\t    while (col <= limit) {\n\t\tChar *next = last;\n\t\tunsigned data = ld->charData[col];\n\n\t\tassert(col < (int) ld->lineSize);\n\t\t/* some internal points may not be drawn */\n\t\tif (data == 0)\n\t\t    data = ' ';\n\n\t\tif_WIDE_OR_NARROW(screen, {\n\t\t    next = convertToUTF8(last, data);\n\t\t}\n\t\t, {\n\t\t    *next++ = CharOf(data);\n\t\t});\n\n\t\tif_OPT_WIDE_CHARS(screen, {\n\t\t    size_t off;\n\t\t    for_each_combData(off, ld) {\n\t\t\tdata = ld->combData[off][col];\n\t\t\tif (data == 0)\n\t\t\t    break;\n\t\t\tnext = convertToUTF8(next, data);\n\t\t    }\n\t\t});\n\n\t\tindexed[used] = (int) (last - result);\n\t\t*next = 0;\n\t\t/* TRACE((\"index[%d.%d] %d:%s\\n\", row, used, indexed[used], last)); */\n\t\tlast = next;\n\t\t++used;\n\t\t++col;\n\t\tindexed[used] = (int) (next - result);\n\t    }\n\t} while (used < length &&\n\t\t LineTstWrapped(ld) &&\n\t\t (ld = GET_LINEDATA(screen, ++row)) != 0 &&\n\t\t row < screen->max_row);\n    }\n    /* TRACE((\"result:%s\\n\", result)); */\n    return (char *) result;\n}\n\n/*\n * Find the column given an offset into the character string by using the\n * index constructed in make_indexed_text().\n */\nstatic int\nindexToCol(int *indexed, int len, int off)\n{\n    int col = 0;\n    while (indexed[col] < len) {\n\tif (indexed[col] >= off)\n\t    break;\n\t++col;\n    }\n    return col;\n}\n\n/*\n * Given a row number, and a column offset from that (which may be wrapped),\n * set the cell to the actual row/column values.\n */\nstatic void\ncolumnToCell(TScreen *screen, int row, int col, CELL *cell)\n{\n    while (row < screen->max_row) {\n\tCLineData *ld = GET_LINEDATA(screen, row);\n\tint last = LastTextCol(screen, ld, row);\n\n\t/* TRACE((\"last(%d) = %d, have %d\\n\", row, last, col)); */\n\tif (col <= last) {\n\t    break;\n\t}\n\t/*\n\t * Stop if the current row does not wrap (does not continue the current\n\t * line).\n\t */\n\tif (!LineTstWrapped(ld)) {\n\t    col = last + 1;\n\t    break;\n\t}\n\tcol -= (last + 1);\n\t++row;\n    }\n    if (col < 0)\n\tcol = 0;\n    cell->row = row;\n    cell->col = col;\n}\n\n/*\n * Given a cell, find the corresponding column offset.\n */\nstatic int\ncellToColumn(TScreen *screen, CELL *cell)\n{\n    CLineData *ld = 0;\n    int col = cell->col;\n    int row = firstRowOfLine(screen, cell->row, False);\n    while (row < cell->row) {\n\tld = GET_LINEDATA(screen, row);\n\tcol += LastTextCol(screen, ld, row++);\n    }\n#if OPT_DEC_CHRSET\n    if (ld == 0)\n\tld = GET_LINEDATA(screen, row);\n    if (CSET_DOUBLE(GetLineDblCS(ld)))\n\tcol /= 2;\n#endif\n    return col;\n}\n\nstatic void\ndo_select_regex(TScreen *screen, CELL *startc, CELL *endc)\n{\n    LineData *ld = GET_LINEDATA(screen, startc->row);\n    int inx = ((screen->numberOfClicks - 1) % screen->maxClicks);\n    char *expr = screen->selectExpr[inx];\n    regex_t preg;\n    regmatch_t match;\n\n    TRACE((\"Select_REGEX[%d]:%s\\n\", inx, NonNull(expr)));\n    if (okPosition(screen, &ld, startc) && expr != 0) {\n\tif (regcomp(&preg, expr, REG_EXTENDED) == 0) {\n\t    int firstRow = firstRowOfLine(screen, startc->row, True);\n\t    int lastRow = lastRowOfLine(screen, firstRow);\n\t    unsigned size = lengthOfLines(screen, firstRow, lastRow);\n\t    int actual = cellToColumn(screen, startc);\n\t    int *indexed;\n\n\t    TRACE((\"regcomp ok rows %d..%d bytes %d\\n\",\n\t\t   firstRow, lastRow, size));\n\n\t    if ((indexed = TypeCallocN(int, size + 1)) != 0) {\n\t\tchar *search;\n\t\tif ((search = make_indexed_text(screen,\n\t\t\t\t\t\tfirstRow,\n\t\t\t\t\t\tsize,\n\t\t\t\t\t\tindexed)) != 0) {\n\t\t    int len = (int) strlen(search);\n\t\t    int col;\n\t\t    int best_col = -1;\n\t\t    int best_len = -1;\n\n\t\t    startc->row = 0;\n\t\t    startc->col = 0;\n\t\t    endc->row = 0;\n\t\t    endc->col = 0;\n\n\t\t    for (col = 0; indexed[col] < len; ++col) {\n\t\t\tif (regexec(&preg,\n\t\t\t\t    search + indexed[col],\n\t\t\t\t    (size_t) 1, &match, 0) == 0) {\n\t\t\t    int start_inx = (int) (match.rm_so + indexed[col]);\n\t\t\t    int finis_inx = (int) (match.rm_eo + indexed[col]);\n\t\t\t    int start_col = indexToCol(indexed, len, start_inx);\n\t\t\t    int finis_col = indexToCol(indexed, len, finis_inx);\n\n\t\t\t    if (start_col <= actual &&\n\t\t\t\tactual <= finis_col) {\n\t\t\t\tint test = finis_col - start_col;\n\t\t\t\tif (best_len < test) {\n\t\t\t\t    best_len = test;\n\t\t\t\t    best_col = start_col;\n\t\t\t\t    TRACE((\"match column %d len %d\\n\",\n\t\t\t\t\t   best_col,\n\t\t\t\t\t   best_len));\n\t\t\t\t}\n\t\t\t    }\n\t\t\t}\n\t\t    }\n\t\t    if (best_col >= 0) {\n\t\t\tint best_nxt = best_col + best_len;\n\t\t\tcolumnToCell(screen, firstRow, best_col, startc);\n\t\t\tcolumnToCell(screen, firstRow, best_nxt, endc);\n\t\t\tTRACE((\"search::%s\\n\", search));\n\t\t\tTRACE((\"indexed:%d..%d -> %d..%d\\n\",\n\t\t\t       best_col, best_nxt,\n\t\t\t       indexed[best_col],\n\t\t\t       indexed[best_nxt]));\n\t\t\tTRACE((\"matched:%d:%s\\n\",\n\t\t\t       indexed[best_nxt] + 1 -\n\t\t\t       indexed[best_col],\n\t\t\t       visibleChars((Char *) (search + indexed[best_col]),\n\t\t\t\t\t    (unsigned) (indexed[best_nxt] +\n\t\t\t\t\t\t\t1 -\n\t\t\t\t\t\t\tindexed[best_col]))));\n\t\t    }\n\t\t    free(search);\n\t\t}\n\t\tfree(indexed);\n#if OPT_DEC_CHRSET\n\t\tif ((ld = GET_LINEDATA(screen, startc->row)) != 0) {\n\t\t    if (CSET_DOUBLE(GetLineDblCS(ld)))\n\t\t\tstartc->col *= 2;\n\t\t}\n\t\tif ((ld = GET_LINEDATA(screen, endc->row)) != 0) {\n\t\t    if (CSET_DOUBLE(GetLineDblCS(ld)))\n\t\t\tendc->col *= 2;\n\t\t}\n#endif\n\t    }\n\t    regfree(&preg);\n\t}\n    }\n}\n#endif /* OPT_SELECT_REGEX */\n\n#define InitRow(name) \\\n\tld.name = GET_LINEDATA(screen, screen->name.row)\n\n#define NextRow(name) \\\n\tld.name = GET_LINEDATA(screen, ++screen->name.row)\n\n#define PrevRow(name) \\\n\tld.name = GET_LINEDATA(screen, --screen->name.row)\n\n#define MoreRows(name) \\\n\t(screen->name.row < screen->max_row)\n\n#define isPrevWrapped(name) \\\n\t(screen->name.row > 0 \\\n\t   && (ltmp = GET_LINEDATA(screen, screen->name.row - 1)) != 0 \\\n\t   && LineTstWrapped(ltmp))\n\n/*\n * sets startSel endSel\n * ensuring that they have legal values\n */\nstatic void\nComputeSelect(XtermWidget xw,\n\t      CELL *startc,\n\t      CELL *endc,\n\t      Bool extend,\n\t      Bool normal)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    int cclass;\n    CELL first = *startc;\n    CELL last = *endc;\n    Boolean ignored = False;\n\n    struct {\n\tLineData *startSel;\n\tLineData *endSel;\n    } ld;\n    LineData *ltmp;\n\n    TRACE((\"ComputeSelect(startRow=%d, startCol=%d, endRow=%d, endCol=%d, %sextend)\\n\",\n\t   first.row, first.col,\n\t   last.row, last.col,\n\t   extend ? \"\" : \"no\"));\n\n#if OPT_WIDE_CHARS\n    if (first.col > 1\n\t&& isWideCell(first.row, first.col - 1)\n\t&& XTERM_CELL(first.row, first.col - 0) == HIDDEN_CHAR) {\n\tTRACE((\"Adjusting start. Changing downwards from %i.\\n\", first.col));\n\tfirst.col -= 1;\n\tif (last.col == (first.col + 1))\n\t    last.col--;\n    }\n\n    if (last.col > 1\n\t&& isWideCell(last.row, last.col - 1)\n\t&& XTERM_CELL(last.row, last.col) == HIDDEN_CHAR) {\n\tlast.col += 1;\n    }\n#endif\n\n    if (Coordinate(screen, &first) <= Coordinate(screen, &last)) {\n\tscreen->startSel = screen->startRaw = first;\n\tscreen->endSel = screen->endRaw = last;\n    } else {\t\t\t/* Swap them */\n\tscreen->startSel = screen->startRaw = last;\n\tscreen->endSel = screen->endRaw = first;\n    }\n\n    InitRow(startSel);\n    InitRow(endSel);\n\n    switch (screen->selectUnit) {\n    case Select_CHAR:\n\t(void) okPosition(screen, &(ld.startSel), &(screen->startSel));\n\t(void) okPosition(screen, &(ld.endSel), &(screen->endSel));\n\tbreak;\n\n    case Select_WORD:\n\tTRACE((\"Select_WORD\\n\"));\n\tif (okPosition(screen, &(ld.startSel), &(screen->startSel))) {\n\t    CELL mark;\n\t    cclass = CClassOf(startSel);\n\t    TRACE((\"...starting with class %d\\n\", cclass));\n\t    do {\n\t\tmark = screen->startSel;\n\t\t--screen->startSel.col;\n\t\tif (screen->startSel.col < 0\n\t\t    && isPrevWrapped(startSel)) {\n\t\t    PrevRow(startSel);\n\t\t    screen->startSel.col = LastTextCol(screen, ld.startSel, screen->startSel.row);\n\t\t}\n\t    } while (screen->startSel.col >= 0\n\t\t     && CClassSelects(startSel, cclass));\n\t    if (normal)\n\t\t++screen->startSel.col;\n\t    else\n\t\tscreen->startSel = mark;\n\t}\n#if OPT_WIDE_CHARS\n#define SkipHiddenCell(mark) \\\n\tif (mark.col && XTERM_CELL(mark.row, mark.col) == HIDDEN_CHAR) \\\n\t    mark.col++\n#else\n#define SkipHiddenCell(mark)\t/* nothing */\n#endif\n\tSkipHiddenCell(screen->startSel);\n\n\tif (!normal) {\n\t    screen->endSel = screen->startSel;\n\t    ld.endSel = ld.startSel;\n\t}\n\n\tif (okPosition(screen, &(ld.endSel), &(screen->endSel))) {\n\t    int length = LastTextCol(screen, ld.endSel, screen->endSel.row);\n\t    cclass = CClassOf(endSel);\n\t    TRACE((\"...ending with class %d\\n\", cclass));\n\t    do {\n\t\t++screen->endSel.col;\n\t\tif (screen->endSel.col > length\n\t\t    && LineTstWrapped(ld.endSel)) {\n\t\t    if (!MoreRows(endSel))\n\t\t\tbreak;\n\t\t    screen->endSel.col = 0;\n\t\t    NextRow(endSel);\n\t\t    length = LastTextCol(screen, ld.endSel, screen->endSel.row);\n\t\t}\n\t    } while (screen->endSel.col <= length\n\t\t     && CClassSelects(endSel, cclass));\n\t    if (normal\n\t\t&& screen->endSel.col > length + 1\n\t\t&& MoreRows(endSel)) {\n\t\tscreen->endSel.col = 0;\n\t\tNextRow(endSel);\n\t    }\n\t}\n\tSkipHiddenCell(screen->endSel);\n\n\tscreen->saveStartW = screen->startSel;\n\tbreak;\n\n    case Select_LINE:\n\tTRACE((\"Select_LINE\\n\"));\n\twhile (LineTstWrapped(ld.endSel)\n\t       && MoreRows(endSel)) {\n\t    NextRow(endSel);\n\t}\n\tif (screen->cutToBeginningOfLine\n\t    || screen->startSel.row < screen->saveStartW.row) {\n\t    screen->startSel.col = 0;\n\t    while (isPrevWrapped(startSel)) {\n\t\tPrevRow(startSel);\n\t    }\n\t} else if (!extend) {\n\t    if ((first.row < screen->saveStartW.row)\n\t\t|| (isSameRow(&first, &(screen->saveStartW))\n\t\t    && first.col < screen->saveStartW.col)) {\n\t\tscreen->startSel.col = 0;\n\t\twhile (isPrevWrapped(startSel)) {\n\t\t    PrevRow(startSel);\n\t\t}\n\t    } else {\n\t\tscreen->startSel = screen->saveStartW;\n\t    }\n\t}\n\ttrimLastLine(screen, &(ld.endSel), &(screen->endSel));\n\tbreak;\n\n    case Select_GROUP:\t\t/* paragraph */\n\tTRACE((\"Select_GROUP\\n\"));\n\tif (okPosition(screen, &(ld.startSel), &(screen->startSel))) {\n\t    /* scan backward for beginning of group */\n\t    while (screen->startSel.row > 0 &&\n\t\t   (LastTextCol(screen, ld.startSel, screen->startSel.row -\n\t\t\t\t1) > 0 ||\n\t\t    isPrevWrapped(startSel))) {\n\t\tPrevRow(startSel);\n\t    }\n\t    screen->startSel.col = 0;\n\t    /* scan forward for end of group */\n\t    while (MoreRows(endSel) &&\n\t\t   (LastTextCol(screen, ld.endSel, screen->endSel.row + 1) >\n\t\t    0 ||\n\t\t    LineTstWrapped(ld.endSel))) {\n\t\tNextRow(endSel);\n\t    }\n\t    trimLastLine(screen, &(ld.endSel), &(screen->endSel));\n\t}\n\tbreak;\n\n    case Select_PAGE:\t\t/* everything one can see */\n\tTRACE((\"Select_PAGE\\n\"));\n\tscreen->startSel.row = 0;\n\tscreen->startSel.col = 0;\n\tscreen->endSel.row = MaxRows(screen);\n\tscreen->endSel.col = 0;\n\tbreak;\n\n    case Select_ALL:\t\t/* counts scrollback if in normal screen */\n\tTRACE((\"Select_ALL\\n\"));\n\tscreen->startSel.row = -screen->savedlines;\n\tscreen->startSel.col = 0;\n\tscreen->endSel.row = MaxRows(screen);\n\tscreen->endSel.col = 0;\n\tbreak;\n\n#if OPT_SELECT_REGEX\n    case Select_REGEX:\n\tdo_select_regex(screen, &(screen->startSel), &(screen->endSel));\n\tbreak;\n#endif\n\n    case NSELECTUNITS:\t\t/* always ignore */\n\tignored = True;\n\tbreak;\n    }\n\n    if (!ignored) {\n\t/* check boundaries */\n\tScrollSelection(screen, 0, False);\n\tTrackText(xw, &(screen->startSel), &(screen->endSel));\n    }\n\n    return;\n}\n\n/* Guaranteed (first.row, first.col) <= (last.row, last.col) */\nstatic void\nTrackText(XtermWidget xw,\n\t  const CELL *firstp,\n\t  const CELL *lastp)\n{\n    TScreen *screen = TScreenOf(xw);\n    int from, to;\n    CELL old_start, old_end;\n    CELL first = *firstp;\n    CELL last = *lastp;\n\n    TRACE((\"TrackText(first=%d,%d, last=%d,%d)\\n\",\n\t   first.row, first.col, last.row, last.col));\n\n    old_start = screen->startH;\n    old_end = screen->endH;\n    TRACE((\"...previous(first=%d,%d, last=%d,%d)\\n\",\n\t   old_start.row, old_start.col,\n\t   old_end.row, old_end.col));\n    if (isSameCELL(&first, &old_start) &&\n\tisSameCELL(&last, &old_end)) {\n\treturn;\n    }\n\n    screen->startH = first;\n    screen->endH = last;\n    from = Coordinate(screen, &screen->startH);\n    to = Coordinate(screen, &screen->endH);\n    if (to <= screen->startHCoord || from > screen->endHCoord) {\n\t/* No overlap whatsoever between old and new hilite */\n\tReHiliteText(xw, &old_start, &old_end);\n\tReHiliteText(xw, &first, &last);\n    } else {\n\tif (from < screen->startHCoord) {\n\t    /* Extend left end */\n\t    ReHiliteText(xw, &first, &old_start);\n\t} else if (from > screen->startHCoord) {\n\t    /* Shorten left end */\n\t    ReHiliteText(xw, &old_start, &first);\n\t}\n\tif (to > screen->endHCoord) {\n\t    /* Extend right end */\n\t    ReHiliteText(xw, &old_end, &last);\n\t} else if (to < screen->endHCoord) {\n\t    /* Shorten right end */\n\t    ReHiliteText(xw, &last, &old_end);\n\t}\n    }\n    screen->startHCoord = from;\n    screen->endHCoord = to;\n}\n\nstatic void\nUnHiliteText(XtermWidget xw)\n{\n    TrackText(xw, &zeroCELL, &zeroCELL);\n}\n\n/* Guaranteed that (first->row, first->col) <= (last->row, last->col) */\nstatic void\nReHiliteText(XtermWidget xw,\n\t     CELL *firstp,\n\t     CELL *lastp)\n{\n    TScreen *screen = TScreenOf(xw);\n    CELL first = *firstp;\n    CELL last = *lastp;\n\n    TRACE((\"ReHiliteText from %d.%d to %d.%d\\n\",\n\t   first.row, first.col, last.row, last.col));\n\n    if (first.row < 0)\n\tfirst.row = first.col = 0;\n    else if (first.row > screen->max_row)\n\treturn;\t\t\t/* nothing to do, since last.row >= first.row */\n\n    if (last.row < 0)\n\treturn;\t\t\t/* nothing to do, since first.row <= last.row */\n    else if (last.row > screen->max_row) {\n\tlast.row = screen->max_row;\n\tlast.col = MaxCols(screen);\n    }\n    if (isSameCELL(&first, &last))\n\treturn;\n\n    if (!isSameRow(&first, &last)) {\t/* do multiple rows */\n\tint i;\n\tif ((i = screen->max_col - first.col + 1) > 0) {\t/* first row */\n\t    ScrnRefresh(xw, first.row, first.col, 1, i, True);\n\t}\n\tif ((i = last.row - first.row - 1) > 0) {\t/* middle rows */\n\t    ScrnRefresh(xw, first.row + 1, 0, i, MaxCols(screen), True);\n\t}\n\tif (last.col > 0 && last.row <= screen->max_row) {\t/* last row */\n\t    ScrnRefresh(xw, last.row, 0, 1, last.col, True);\n\t}\n    } else {\t\t\t/* do single row */\n\tScrnRefresh(xw, first.row, first.col, 1, last.col - first.col, True);\n    }\n}\n\n/*\n * Guaranteed that (cellc->row, cellc->col) <= (cell->row, cell->col),\n * and that both points are valid\n * (may have cell->row = screen->max_row+1, cell->col = 0).\n */\nstatic void\nSaltTextAway(XtermWidget xw,\n\t     int which,\n\t     CELL *cellc,\n\t     CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n    SelectedCells *scp;\n    int i;\n    int eol;\n    int need = 0;\n    size_t have = 0;\n    Char *line;\n    Char *lp;\n    CELL first = *cellc;\n    CELL last = *cell;\n\n    if (which < 0 || which >= MAX_SELECTIONS) {\n\tTRACE((\"SaltTextAway - which selection?\\n\"));\n\treturn;\n    }\n    scp = &(screen->selected_cells[which]);\n\n    TRACE((\"SaltTextAway which=%d, first=%d,%d, last=%d,%d\\n\",\n\t   which, first.row, first.col, last.row, last.col));\n\n    if (isSameRow(&first, &last) && first.col > last.col) {\n\tint tmp;\n\tEXCHANGE(first.col, last.col, tmp);\n    }\n\n    --last.col;\n    /* first we need to know how long the string is before we can save it */\n\n    if (isSameRow(&last, &first)) {\n\tneed = Length(screen, first.row, first.col, last.col);\n    } else {\t\t\t/* two cases, cut is on same line, cut spans multiple lines */\n\tneed += Length(screen, first.row, first.col, screen->max_col) + 1;\n\tfor (i = first.row + 1; i < last.row; i++)\n\t    need += Length(screen, i, 0, screen->max_col) + 1;\n\tif (last.col >= 0)\n\t    need += Length(screen, last.row, 0, last.col);\n    }\n\n    /* UTF-8 may require more space */\n    if_OPT_WIDE_CHARS(screen, {\n\tif (need > 0) {\n\t    if (screen->max_combining > 0)\n\t\tneed += screen->max_combining;\n\t    need *= 6;\n\t}\n    });\n\n    /* now get some memory to save it in */\n    if (need < 0)\n\treturn;\n\n    if (scp->data_limit <= (unsigned) need) {\n\tif ((line = (Char *) malloc((size_t) need + 1)) == 0)\n\t    SysError(ERROR_BMALLOC2);\n\tfree(scp->data_buffer);\n\tscp->data_buffer = line;\n\tscp->data_limit = (size_t) (need + 1);\n    } else {\n\tline = scp->data_buffer;\n    }\n\n    if (line == 0)\n\treturn;\n\n    line[need] = '\\0';\t\t/* make sure it is null terminated */\n    lp = line;\t\t\t/* lp points to where to save the text */\n    if (isSameRow(&last, &first)) {\n\tlp = SaveText(screen, last.row, first.col, last.col, lp, &eol);\n    } else {\n\tlp = SaveText(screen, first.row, first.col, screen->max_col, lp, &eol);\n\tif (eol)\n\t    *lp++ = '\\n';\t/* put in newline at end of line */\n\tfor (i = first.row + 1; i < last.row; i++) {\n\t    lp = SaveText(screen, i, 0, screen->max_col, lp, &eol);\n\t    if (eol)\n\t\t*lp++ = '\\n';\n\t}\n\tif (last.col >= 0)\n\t    lp = SaveText(screen, last.row, 0, last.col, lp, &eol);\n    }\n    *lp = '\\0';\t\t\t/* make sure we have end marked */\n\n    have = (size_t) (lp - line);\n    /*\n     * Scanning the buffer twice is unnecessary.  Discard unwanted memory if\n     * the estimate is too-far off.\n     */\n    if ((have * 2) < (size_t) need) {\n\tscp->data_limit = have + 1;\n\tline = realloc(line, scp->data_limit);\n    }\n\n    TRACE((\"Salted TEXT:%u:%s\\n\", (unsigned) have,\n\t   visibleChars(line, (unsigned) have)));\n\n    scp->data_length = have;\n}\n\n#if OPT_PASTE64\nvoid\nClearSelectionBuffer(TScreen *screen, String selection)\n{\n    int which = TargetToSelection(screen, selection);\n    SelectedCells *scp = &(screen->selected_cells[okSelectionCode(which)]);\n    FreeAndNull(scp->data_buffer);\n    scp->data_limit = 0;\n    scp->data_length = 0;\n    screen->base64_count = 0;\n}\n\nstatic void\nAppendStrToSelectionBuffer(SelectedCells * scp, Char *text, size_t len)\n{\n    if (len != 0) {\n\tsize_t j = (scp->data_length + len);\n\tsize_t k = j + (j >> 2) + 80;\n\tif (j + 1 >= scp->data_limit) {\n\t    Char *line;\n\t    if (!scp->data_length) {\n\t\tline = (Char *) malloc(k);\n\t    } else {\n\t\tline = (Char *) realloc(scp->data_buffer, k);\n\t    }\n\t    if (line == 0)\n\t\tSysError(ERROR_BMALLOC2);\n\t    scp->data_buffer = line;\n\t    scp->data_limit = k;\n\t}\n\tif (scp->data_buffer != 0) {\n\t    memcpy(scp->data_buffer + scp->data_length, text, len);\n\t    scp->data_length += len;\n\t    scp->data_buffer[scp->data_length] = 0;\n\t}\n    }\n}\n\nvoid\nAppendToSelectionBuffer(TScreen *screen, unsigned c, String selection)\n{\n    int which = TargetToSelection(screen, selection);\n    SelectedCells *scp = &(screen->selected_cells[okSelectionCode(which)]);\n    unsigned six;\n    Char ch;\n\n    /* Decode base64 character */\n    if (c >= 'A' && c <= 'Z')\n\tsix = c - 'A';\n    else if (c >= 'a' && c <= 'z')\n\tsix = c - 'a' + 26;\n    else if (c >= '0' && c <= '9')\n\tsix = c - '0' + 52;\n    else if (c == '+')\n\tsix = 62;\n    else if (c == '/')\n\tsix = 63;\n    else\n\treturn;\n\n    /* Accumulate bytes */\n    switch (screen->base64_count) {\n    case 0:\n\tscreen->base64_accu = six;\n\tscreen->base64_count = 6;\n\tbreak;\n\n    case 2:\n\tch = CharOf((screen->base64_accu << 6) + six);\n\tscreen->base64_count = 0;\n\tAppendStrToSelectionBuffer(scp, &ch, (size_t) 1);\n\tbreak;\n\n    case 4:\n\tch = CharOf((screen->base64_accu << 4) + (six >> 2));\n\tscreen->base64_accu = (six & 0x3);\n\tscreen->base64_count = 2;\n\tAppendStrToSelectionBuffer(scp, &ch, (size_t) 1);\n\tbreak;\n\n    case 6:\n\tch = CharOf((screen->base64_accu << 2) + (six >> 4));\n\tscreen->base64_accu = (six & 0xF);\n\tscreen->base64_count = 4;\n\tAppendStrToSelectionBuffer(scp, &ch, (size_t) 1);\n\tbreak;\n    }\n}\n\nvoid\nCompleteSelection(XtermWidget xw, String *args, Cardinal len)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    screen->base64_count = 0;\n    screen->base64_accu = 0;\n    _OwnSelection(xw, args, len);\n}\n#endif /* OPT_PASTE64 */\n\nstatic Bool\n_ConvertSelectionHelper(Widget w,\n\t\t\tSelectedCells * scp,\n\t\t\tAtom *type,\n\t\t\tXtPointer *value,\n\t\t\tunsigned long *length,\n\t\t\tint *format,\n\t\t\tint (*conversion_function) (Display *,\n\t\t\t\t\t\t    char **, int,\n\t\t\t\t\t\t    XICCEncodingStyle,\n\t\t\t\t\t\t    XTextProperty *),\n\t\t\tXICCEncodingStyle conversion_style)\n{\n    *value = 0;\n    *length = 0;\n    *type = 0;\n    *format = 0;\n\n    if (getXtermWidget(w) != 0) {\n\tDisplay *dpy = XtDisplay(w);\n\tXTextProperty textprop;\n\tint out_n = 0;\n\tchar *result = 0;\n\tchar *the_data = (char *) scp->data_buffer;\n\tchar *the_next;\n\tunsigned long remaining = scp->data_length;\n\n\tTRACE((\"converting %ld:'%s'\\n\",\n\t       (long) scp->data_length,\n\t       visibleChars(scp->data_buffer, (unsigned) scp->data_length)));\n\t/*\n\t * For most selections, we can convert in one pass.  It is possible\n\t * that some applications contain embedded nulls, e.g., using xterm's\n\t * paste64 feature.  For those cases, we will build up the result in\n\t * parts.\n\t */\n\tif (memchr(the_data, 0, scp->data_length) != 0) {\n\t    TRACE((\"selection contains embedded nulls\\n\"));\n\t    result = calloc(scp->data_length + 1, sizeof(char));\n\t}\n\n      next_try:\n\tmemset(&textprop, 0, sizeof(textprop));\n\tif (conversion_function(dpy, &the_data, 1,\n\t\t\t\tconversion_style,\n\t\t\t\t&textprop) >= Success) {\n\t    if ((result != 0)\n\t\t&& (textprop.value != 0)\n\t\t&& (textprop.format == 8)) {\n\t\tchar *text_values = (char *) textprop.value;\n\t\tunsigned long in_n;\n\n\t\tif (out_n == 0) {\n\t\t    *value = result;\n\t\t    *type = textprop.encoding;\n\t\t    *format = textprop.format;\n\t\t}\n\t\tfor (in_n = 0; in_n < textprop.nitems; ++in_n) {\n\t\t    result[out_n++] = text_values[in_n];\n\t\t}\n\t\t*length += textprop.nitems;\n\t\tif ((the_next = memchr(the_data, 0, remaining)) != 0) {\n\t\t    unsigned long this_was = (unsigned long) (the_next - the_data);\n\t\t    this_was++;\n\t\t    the_data += this_was;\n\t\t    remaining -= this_was;\n\t\t    result[out_n++] = 0;\n\t\t    *length += 1;\n\t\t    if (remaining)\n\t\t\tgoto next_try;\n\t\t}\n\t\treturn True;\n\t    } else {\n\t\tfree(result);\n\t\t*value = (XtPointer) textprop.value;\n\t\t*length = textprop.nitems;\n\t\t*type = textprop.encoding;\n\t\t*format = textprop.format;\n\t\treturn True;\n\t    }\n\t}\n\tfree(result);\n    }\n    return False;\n}\n\nstatic Boolean\nSaveConvertedLength(XtPointer *target, unsigned long source)\n{\n    Boolean result = False;\n\n    *target = XtMalloc(4);\n    if (*target != 0) {\n\tresult = True;\n\tif (sizeof(unsigned long) == 4) {\n\t    *(unsigned long *) *target = source;\n\t} else if (sizeof(unsigned) == 4) {\n\t    *(unsigned *) *target = (unsigned) source;\n\t} else if (sizeof(unsigned short) == 4) {\n\t    *(unsigned short *) *target = (unsigned short) source;\n\t} else {\n\t    /* FIXME - does this depend on byte-order? */\n\t    unsigned long temp = source;\n\t    memcpy((char *) *target,\n\t\t   ((char *) &temp) + sizeof(temp) - 4,\n\t\t   (size_t) 4);\n\t}\n    }\n    return result;\n}\n\n#define keepClipboard(d,atom) ((screen->keepClipboard) && \\\n\t (atom == XA_CLIPBOARD(d)))\n\nstatic Boolean\nConvertSelection(Widget w,\n\t\t Atom *selection,\n\t\t Atom *target,\n\t\t Atom *type,\n\t\t XtPointer *value,\n\t\t unsigned long *length,\n\t\t int *format)\n{\n    Display *dpy = XtDisplay(w);\n    TScreen *screen;\n    SelectedCells *scp;\n    Bool result = False;\n\n    Char *data;\n    unsigned long data_length;\n\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn False;\n\n    screen = TScreenOf(xw);\n\n    TRACE((\"ConvertSelection %s -> %s\\n\",\n\t   TraceAtomName(screen->display, *selection),\n\t   visibleSelectionTarget(dpy, *target)));\n\n    if (keepClipboard(dpy, *selection)) {\n\tTRACE((\"asked for clipboard\\n\"));\n\tscp = &(screen->clipboard_data);\n    } else {\n\tTRACE((\"asked for selection\\n\"));\n\tscp = &(screen->selected_cells[AtomToSelection(dpy, *selection)]);\n    }\n\n    data = scp->data_buffer;\n    data_length = scp->data_length;\n    if (data == NULL) {\n\tTRACE((\"...no selection-data\\n\"));\n\treturn False;\n    }\n\n    if (*target == XA_TARGETS(dpy)) {\n\tAtom *targetP;\n\tXPointer std_return = 0;\n\tunsigned long std_length;\n\n\tif (XmuConvertStandardSelection(w, screen->selection_time, selection,\n\t\t\t\t\ttarget, type, &std_return,\n\t\t\t\t\t&std_length, format)) {\n\t    Atom *my_targets = _SelectionTargets(w);\n\t    Atom *allocP;\n\t    Atom *std_targets;\n\n\t    TRACE((\"XmuConvertStandardSelection - success\\n\"));\n\t    std_targets = (Atom *) (void *) (std_return);\n\t    *length = std_length + 6;\n\n\t    targetP = TypeXtMallocN(Atom, *length);\n\t    allocP = targetP;\n\n\t    *value = (XtPointer) targetP;\n\n\t    if (my_targets != 0) {\n\t\twhile (*my_targets != None) {\n\t\t    *targetP++ = *my_targets++;\n\t\t}\n\t    }\n\t    *targetP++ = XA_LENGTH(dpy);\n\t    *targetP++ = XA_LIST_LENGTH(dpy);\n\n\t    *length = std_length + (unsigned long) (targetP - allocP);\n\n\t    memcpy(targetP, std_targets, sizeof(Atom) * std_length);\n\t    XtFree((char *) std_targets);\n\t    *type = XA_ATOM;\n\t    *format = 32;\n\t    result = True;\n\t} else {\n\t    TRACE((\"XmuConvertStandardSelection - failed\\n\"));\n\t}\n    }\n#if OPT_WIDE_CHARS\n    else if (screen->wide_chars && *target == XA_STRING) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XStringStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    } else if (screen->wide_chars && *target == XA_UTF8_STRING(dpy)) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XUTF8StringStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    } else if (screen->wide_chars && *target == XA_TEXT(dpy)) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XStdICCTextStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    } else if (screen->wide_chars && *target == XA_COMPOUND_TEXT(dpy)) {\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    Xutf8TextListToTextProperty,\n\t\t\t\t    XCompoundTextStyle);\n\tTRACE((\"...Xutf8TextListToTextProperty:%d\\n\", result));\n    }\n#endif\n\n    else if (*target == XA_STRING) {\t/* not wide_chars */\n\t/* We can only reach this point if the selection requestor\n\t   requested STRING before any of TEXT, COMPOUND_TEXT or\n\t   UTF8_STRING.  We therefore assume that the requestor is not\n\t   properly internationalised, and dump raw eight-bit data\n\t   with no conversion into the selection.  Yes, this breaks\n\t   the ICCCM in non-Latin-1 locales. */\n\t*type = XA_STRING;\n\t*value = (XtPointer) data;\n\t*length = data_length;\n\t*format = 8;\n\tresult = True;\n\tTRACE((\"...raw 8-bit data:%d\\n\", result));\n    } else if (*target == XA_TEXT(dpy)) {\t/* not wide_chars */\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    XmbTextListToTextProperty,\n\t\t\t\t    XStdICCTextStyle);\n\tTRACE((\"...XmbTextListToTextProperty(StdICC):%d\\n\", result));\n    } else if (*target == XA_COMPOUND_TEXT(dpy)) {\t/* not wide_chars */\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    XmbTextListToTextProperty,\n\t\t\t\t    XCompoundTextStyle);\n\tTRACE((\"...XmbTextListToTextProperty(Compound):%d\\n\", result));\n    }\n#ifdef X_HAVE_UTF8_STRING\n    else if (*target == XA_UTF8_STRING(dpy)) {\t/* not wide_chars */\n\tresult =\n\t    _ConvertSelectionHelper(w, scp,\n\t\t\t\t    type, value, length, format,\n\t\t\t\t    XmbTextListToTextProperty,\n\t\t\t\t    XUTF8StringStyle);\n\tTRACE((\"...XmbTextListToTextProperty(UTF8):%d\\n\", result));\n    }\n#endif\n    else if (*target == XA_LIST_LENGTH(dpy)) {\n\tresult = SaveConvertedLength(value, (unsigned long) 1);\n\t*type = XA_INTEGER;\n\t*length = 1;\n\t*format = 32;\n\tTRACE((\"...list of values:%d\\n\", result));\n    } else if (*target == XA_LENGTH(dpy)) {\n\t/* This value is wrong if we have UTF-8 text */\n\tresult = SaveConvertedLength(value, scp->data_length);\n\t*type = XA_INTEGER;\n\t*length = 1;\n\t*format = 32;\n\tTRACE((\"...list of values:%d\\n\", result));\n    } else if (XmuConvertStandardSelection(w,\n\t\t\t\t\t   screen->selection_time, selection,\n\t\t\t\t\t   target, type, (XPointer *) value,\n\t\t\t\t\t   length, format)) {\n\tresult = True;\n\tTRACE((\"...XmuConvertStandardSelection:%d\\n\", result));\n    }\n\n    /* else */\n    return (Boolean) result;\n}\n\nstatic void\nLoseSelection(Widget w, Atom *selection)\n{\n    TScreen *screen;\n    Atom *atomP;\n    Cardinal i;\n\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) == 0)\n\treturn;\n\n    screen = TScreenOf(xw);\n    TRACE((\"LoseSelection %s\\n\", TraceAtomName(screen->display, *selection)));\n\n    for (i = 0, atomP = screen->selection_atoms;\n\t i < screen->selection_count; i++, atomP++) {\n\tif (*selection == *atomP)\n\t    *atomP = (Atom) 0;\n\tif (CutBuffer(*atomP) >= 0) {\n\t    *atomP = (Atom) 0;\n\t}\n    }\n\n    for (i = screen->selection_count; i; i--) {\n\tif (screen->selection_atoms[i - 1] != 0)\n\t    break;\n    }\n    screen->selection_count = i;\n\n    for (i = 0, atomP = screen->selection_atoms;\n\t i < screen->selection_count; i++, atomP++) {\n\tif (*atomP == (Atom) 0) {\n\t    *atomP = screen->selection_atoms[--screen->selection_count];\n\t}\n    }\n\n    if (screen->selection_count == 0)\n\tUnHiliteText(xw);\n}\n\n/* ARGSUSED */\nstatic void\nSelectionDone(Widget w GCC_UNUSED,\n\t      Atom *selection GCC_UNUSED,\n\t      Atom *target GCC_UNUSED)\n{\n    /* empty proc so Intrinsics know we want to keep storage */\n    TRACE((\"SelectionDone\\n\"));\n}\n\nstatic void\n_OwnSelection(XtermWidget xw,\n\t      String *selections,\n\t      Cardinal count)\n{\n    TScreen *screen = TScreenOf(xw);\n    Display *dpy = screen->display;\n    Atom *atoms = screen->selection_atoms;\n    Cardinal i;\n    Bool have_selection = False;\n    SelectedCells *scp;\n\n    if (count == 0)\n\treturn;\n\n    TRACE((\"_OwnSelection count %d\\n\", count));\n    selections = MapSelections(xw, selections, count);\n\n    if (count > screen->sel_atoms_size) {\n\tXtFree((char *) atoms);\n\tatoms = TypeXtMallocN(Atom, count);\n\tscreen->selection_atoms = atoms;\n\tscreen->sel_atoms_size = count;\n    }\n    XmuInternStrings(dpy, selections, count, atoms);\n    for (i = 0; i < count; i++) {\n\tint cutbuffer = CutBuffer(atoms[i]);\n\tif (cutbuffer >= 0) {\n\t    unsigned long limit =\n\t    (unsigned long) (4 * XMaxRequestSize(dpy) - 32);\n\t    scp = &(screen->selected_cells[CutBufferToCode(cutbuffer)]);\n\t    if (scp->data_length > limit) {\n\t\tTRACE((\"selection too big (%lu bytes), not storing in CUT_BUFFER%d\\n\",\n\t\t       scp->data_length, cutbuffer));\n\t\txtermWarning(\"selection too big (%lu bytes), not storing in CUT_BUFFER%d\\n\",\n\t\t\t     (unsigned long) scp->data_length, cutbuffer);\n\t    } else {\n\t\t/* This used to just use the UTF-8 data, which was totally\n\t\t * broken as not even the corresponding paste code in xterm\n\t\t * understood this!  So now it converts to Latin1 first.\n\t\t *   Robert Brady, 2000-09-05\n\t\t */\n\t\tunsigned long length = scp->data_length;\n\t\tChar *data = scp->data_buffer;\n\t\tif_OPT_WIDE_CHARS((screen), {\n\t\t    data = UTF8toLatin1(screen, data, length, &length);\n\t\t});\n\t\tTRACE((\"XStoreBuffer(%d)\\n\", cutbuffer));\n\t\tXStoreBuffer(dpy,\n\t\t\t     (char *) data,\n\t\t\t     (int) length,\n\t\t\t     cutbuffer);\n\t    }\n\t} else {\n\t    int which = AtomToSelection(dpy, atoms[i]);\n\t    if (keepClipboard(dpy, atoms[i])) {\n\t\tChar *buf;\n\t\tSelectedCells *tcp = &(screen->clipboard_data);\n\t\tTRACE((\"saving selection to clipboard buffer\\n\"));\n\t\tscp = &(screen->selected_cells[CLIPBOARD_CODE]);\n\t\tif ((buf = (Char *) malloc((size_t) scp->data_length)) == 0)\n\t\t    SysError(ERROR_BMALLOC2);\n\n\t\tfree(tcp->data_buffer);\n\t\tmemcpy(buf, scp->data_buffer, scp->data_length);\n\t\ttcp->data_buffer = buf;\n\t\ttcp->data_limit = scp->data_length;\n\t\ttcp->data_length = scp->data_length;\n\t    }\n\t    scp = &(screen->selected_cells[which]);\n\t    if (scp->data_length == 0) {\n\t\tTRACE((\"XtDisownSelection(%s, @%ld)\\n\",\n\t\t       TraceAtomName(screen->display, atoms[i]),\n\t\t       (long) screen->selection_time));\n\t\tXtDisownSelection((Widget) xw,\n\t\t\t\t  atoms[i],\n\t\t\t\t  screen->selection_time);\n\t    } else if (!screen->replyToEmacs && atoms[i] != 0) {\n\t\tTRACE((\"XtOwnSelection(%s, @%ld)\\n\",\n\t\t       TraceAtomName(screen->display, atoms[i]),\n\t\t       (long) screen->selection_time));\n\t\thave_selection |=\n\t\t    XtOwnSelection((Widget) xw, atoms[i],\n\t\t\t\t   screen->selection_time,\n\t\t\t\t   ConvertSelection,\n\t\t\t\t   LoseSelection,\n\t\t\t\t   SelectionDone);\n\t    }\n\t}\n\tTRACE((\"... _OwnSelection used length %ld value %s\\n\",\n\t       scp->data_length,\n\t       visibleChars(scp->data_buffer,\n\t\t\t    (unsigned) scp->data_length)));\n    }\n    if (!screen->replyToEmacs)\n\tscreen->selection_count = count;\n    if (!have_selection)\n\tUnHiliteText(xw);\n}\n\nstatic void\nResetSelectionState(TScreen *screen)\n{\n    screen->selection_count = 0;\n    screen->startH = zeroCELL;\n    screen->endH = zeroCELL;\n}\n\nvoid\nDisownSelection(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    Atom *atoms = screen->selection_atoms;\n    Cardinal count = screen->selection_count;\n    Cardinal i;\n\n    TRACE((\"DisownSelection count %d, start %d.%d, end %d.%d\\n\",\n\t   count,\n\t   screen->startH.row,\n\t   screen->startH.col,\n\t   screen->endH.row,\n\t   screen->endH.col));\n\n    for (i = 0; i < count; i++) {\n\tint cutbuffer = CutBuffer(atoms[i]);\n\tif (cutbuffer < 0) {\n\t    XtDisownSelection((Widget) xw, atoms[i],\n\t\t\t      screen->selection_time);\n\t}\n    }\n    /*\n     * If none of the callbacks via XtDisownSelection() reset highlighting\n     * do it now.\n     */\n    if (ScrnHaveSelection(screen)) {\n\t/* save data which will be reset */\n\tCELL first = screen->startH;\n\tCELL last = screen->endH;\n\n\tResetSelectionState(screen);\n\tReHiliteText(xw, &first, &last);\n    } else {\n\tResetSelectionState(screen);\n    }\n}\n\nvoid\nUnhiliteSelection(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    if (ScrnHaveSelection(screen)) {\n\tCELL first = screen->startH;\n\tCELL last = screen->endH;\n\n\tscreen->startH = zeroCELL;\n\tscreen->endH = zeroCELL;\n\tReHiliteText(xw, &first, &last);\n    }\n}\n\n/* returns number of chars in line from scol to ecol out */\n/* ARGSUSED */\nstatic int\nLength(TScreen *screen,\n       int row,\n       int scol,\n       int ecol)\n{\n    CLineData *ld = GET_LINEDATA(screen, row);\n    const int lastcol = LastTextCol(screen, ld, row);\n\n    if (ecol > lastcol)\n\tecol = lastcol;\n    return (ecol - scol + 1);\n}\n\n/* copies text into line, preallocated */\nstatic Char *\nSaveText(TScreen *screen,\n\t int row,\n\t int scol,\n\t int ecol,\n\t Char *lp,\t\t/* pointer to where to put the text */\n\t int *eol)\n{\n    LineData *ld;\n    int i = 0;\n    Char *result = lp;\n#if OPT_WIDE_CHARS\n    unsigned previous = 0;\n#endif\n\n    ld = GET_LINEDATA(screen, row);\n    i = Length(screen, row, scol, ecol);\n    ecol = scol + i;\n#if OPT_DEC_CHRSET\n    if (CSET_DOUBLE(GetLineDblCS(ld))) {\n\tscol = (scol + 0) / 2;\n\tecol = (ecol + 1) / 2;\n    }\n#endif\n    *eol = !LineTstWrapped(ld);\n    for (i = scol; i < ecol; i++) {\n\tunsigned c;\n\tassert(i < (int) ld->lineSize);\n\tc = E2A(ld->charData[i]);\n#if OPT_WIDE_CHARS\n\t/* We want to strip out every occurrence of HIDDEN_CHAR AFTER a\n\t * wide character.\n\t */\n\tif (c == HIDDEN_CHAR) {\n\t    if (isWide((int) previous)) {\n\t\tprevious = c;\n\t\t/* Combining characters attached to double-width characters\n\t\t   are in memory attached to the HIDDEN_CHAR */\n\t\tif_OPT_WIDE_CHARS(screen, {\n\t\t    if ((screen->utf8_nrc_mode | screen->utf8_mode) != uFalse) {\n\t\t\tsize_t off;\n\t\t\tfor_each_combData(off, ld) {\n\t\t\t    unsigned ch = ld->combData[off][i];\n\t\t\t    if (ch == 0)\n\t\t\t\tbreak;\n\t\t\t    lp = convertToUTF8(lp, ch);\n\t\t\t}\n\t\t    }\n\t\t});\n\t\tcontinue;\n\t    } else {\n\t\tc = ' ';\t/* should not happen, but just in case... */\n\t    }\n\t}\n\tprevious = c;\n\tif ((screen->utf8_nrc_mode | screen->utf8_mode) != uFalse) {\n\t    lp = convertToUTF8(lp, (c != 0) ? c : ' ');\n\t    if_OPT_WIDE_CHARS(screen, {\n\t\tsize_t off;\n\t\tfor_each_combData(off, ld) {\n\t\t    unsigned ch = ld->combData[off][i];\n\t\t    if (ch == 0)\n\t\t\tbreak;\n\t\t    lp = convertToUTF8(lp, ch);\n\t\t}\n\t    });\n\t} else\n#endif\n\t{\n\t    if (c == 0) {\n\t\tc = E2A(' ');\n\t    } else if (c < E2A(' ')) {\n\t\tc = DECtoASCII(c);\n\t    } else if (c == 0x7f) {\n\t\tc = 0x5f;\n\t    }\n\t    *lp++ = CharOf(A2E(c));\n\t}\n\tif (c != E2A(' '))\n\t    result = lp;\n    }\n\n    /*\n     * If requested, trim trailing blanks from selected lines.  Do not do this\n     * if the line is wrapped.\n     */\n    if (!*eol || !screen->trim_selection)\n\tresult = lp;\n\n    return (result);\n}\n\n/*\n * This adds together the bits:\n *   shift key   -> 1\n *   meta key    -> 2\n *   control key -> 4\n */\nstatic unsigned\nKeyState(XtermWidget xw, unsigned x)\n{\n    return ((((x) & (ShiftMask | ControlMask)))\n\t    + (((x) & MetaMask(xw)) ? 2 : 0));\n}\n\n/* 32 + following 8-bit word:\n\n   1:0  Button no: 0, 1, 2.  3=release.\n     2  shift\n     3  meta\n     4  ctrl\n     5  set for motion notify\n     6  set for wheel (and button 6 and 7)\n     7  set for buttons 8 to 11\n*/\n\n/* Position: 32 - 255. */\nstatic int\nBtnCode(XtermWidget xw, XButtonEvent *event, int button)\n{\n    int result = (int) (32 + (KeyState(xw, event->state) << 2));\n\n    if (event->type == MotionNotify)\n\tresult += 32;\n\n    if (button < 0) {\n\tresult += 3;\n    } else {\n\tresult += button & 3;\n\tif (button & 4)\n\t    result += 64;\n\tif (button & 8)\n\t    result += 128;\n    }\n    TRACE((\"BtnCode button %d, %s state \" FMT_MODIFIER_NAMES \" ->%#x\\n\",\n\t   button,\n\t   visibleEventType(event->type),\n\t   ARG_MODIFIER_NAMES(event->state),\n\t   result));\n    return result;\n}\n\nstatic unsigned\nEmitButtonCode(XtermWidget xw,\n\t       Char *line,\n\t       unsigned count,\n\t       XButtonEvent *event,\n\t       int button)\n{\n    TScreen *screen = TScreenOf(xw);\n    int value;\n\n    if (okSendMousePos(xw) == X10_MOUSE) {\n\tvalue = CharOf(' ' + button);\n    } else {\n\tvalue = BtnCode(xw, event, button);\n    }\n\n    switch (screen->extend_coords) {\n    default:\n\tline[count++] = CharOf(value);\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tvalue -= 32;\t\t/* encoding starts at zero */\n\t/* FALLTHRU */\n    case SET_URXVT_EXT_MODE_MOUSE:\n\tcount += (unsigned) sprintf((char *) line + count, \"%d\", value);\n\tbreak;\n    case SET_EXT_MODE_MOUSE:\n\tif (value < 128) {\n\t    line[count++] = CharOf(value);\n\t} else {\n\t    line[count++] = CharOf(0xC0 + (value >> 6));\n\t    line[count++] = CharOf(0x80 + (value & 0x3F));\n\t}\n\tbreak;\n    }\n    return count;\n}\n\nstatic int\nFirstBitN(int bits)\n{\n    int result = -1;\n    if (bits > 0) {\n\tresult = 0;\n\twhile (!(bits & 1)) {\n\t    bits /= 2;\n\t    ++result;\n\t}\n    }\n    return result;\n}\n\n#define ButtonBit(button) ((button >= 0) ? (1 << (button)) : 0)\n\n#define EMIT_BUTTON(button) EmitButtonCode(xw, line, count, event, button)\n\nstatic void\nEditorButton(XtermWidget xw, XButtonEvent *event)\n{\n    TScreen *screen = TScreenOf(xw);\n    int pty = screen->respond;\n    int mouse_limit = MouseLimit(screen);\n    Char line[32];\n    Char final = 'M';\n    int row, col;\n    int button;\n    unsigned count = 0;\n    Boolean changed = True;\n\n    /* If button event, get button # adjusted for DEC compatibility */\n    button = (int) (event->button - 1);\n    if (button >= 3)\n\tbutton++;\n\n    /* Ignore buttons that cannot be encoded */\n    if (screen->send_mouse_pos == X10_MOUSE) {\n\tif (button > 3)\n\t    return;\n    } else if (screen->extend_coords == SET_SGR_EXT_MODE_MOUSE\n\t       || screen->extend_coords == SET_URXVT_EXT_MODE_MOUSE\n\t       || screen->extend_coords == SET_PIXEL_POSITION_MOUSE) {\n\tif (button > 15) {\n\t    return;\n\t}\n    } else {\n\tif (button > 11) {\n\t    return;\n\t}\n    }\n\n    if (screen->extend_coords == SET_PIXEL_POSITION_MOUSE) {\n\trow = event->y - OriginY(screen);\n\tcol = event->x - OriginX(screen);\n    } else {\n\t/* Compute character position of mouse pointer */\n\trow = (event->y - screen->border) / FontHeight(screen);\n\tcol = (event->x - OriginX(screen)) / FontWidth(screen);\n\n\t/* Limit to screen dimensions */\n\tif (row < 0)\n\t    row = 0;\n\telse if (row > screen->max_row)\n\t    row = screen->max_row;\n\n\tif (col < 0)\n\t    col = 0;\n\telse if (col > screen->max_col)\n\t    col = screen->max_col;\n\n\tif (mouse_limit > 0) {\n\t    /* Limit to representable mouse dimensions */\n\t    if (row > mouse_limit)\n\t\trow = mouse_limit;\n\t    if (col > mouse_limit)\n\t\tcol = mouse_limit;\n\t}\n    }\n\n    /* Build key sequence starting with \\E[M */\n    if (screen->control_eight_bits) {\n\tline[count++] = ANSI_CSI;\n    } else {\n\tline[count++] = ANSI_ESC;\n\tline[count++] = '[';\n    }\n    switch (screen->extend_coords) {\n    case 0:\n    case SET_EXT_MODE_MOUSE:\n#if OPT_SCO_FUNC_KEYS\n\tif (xw->keyboard.type == keyboardIsSCO) {\n\t    /*\n\t     * SCO function key F1 is \\E[M, which would conflict with xterm's\n\t     * normal kmous.\n\t     */\n\t    line[count++] = '>';\n\t}\n#endif\n\tline[count++] = final;\n\tbreak;\n    case SET_SGR_EXT_MODE_MOUSE:\n    case SET_PIXEL_POSITION_MOUSE:\n\tline[count++] = '<';\n\tbreak;\n    }\n\n    /* Add event code to key sequence */\n    if (okSendMousePos(xw) == X10_MOUSE) {\n\tcount = EMIT_BUTTON(button);\n    } else {\n\t/* Button-Motion events */\n\tswitch (event->type) {\n\tcase ButtonPress:\n\t    screen->mouse_button |= ButtonBit(button);\n\t    count = EMIT_BUTTON(button);\n\t    break;\n\tcase ButtonRelease:\n\t    /*\n\t     * The (vertical) wheel mouse interface generates release-events\n\t     * for buttons 4 and 5.\n\t     *\n\t     * The X10/X11 xterm protocol maps the release for buttons 1..3 to\n\t     * a -1, which will be later mapped into a \"0\" (some button was\n\t     * released),  At this point, buttons 1..3 are encoded 0..2 (the\n\t     * code 3 is unused).\n\t     *\n\t     * The SGR (extended) xterm mouse protocol keeps the button number\n\t     * and uses a \"m\" to indicate button release.\n\t     *\n\t     * The behavior for mice with more buttons is unclear, and may be\n\t     * revised -TD\n\t     */\n\t    screen->mouse_button &= ~ButtonBit(button);\n\t    if (button < 3 || button > 5) {\n\t\tswitch (screen->extend_coords) {\n\t\tcase SET_SGR_EXT_MODE_MOUSE:\n\t\tcase SET_PIXEL_POSITION_MOUSE:\n\t\t    final = 'm';\n\t\t    break;\n\t\tdefault:\n\t\t    button = -1;\n\t\t    break;\n\t\t}\n\t    }\n\t    count = EMIT_BUTTON(button);\n\t    break;\n\tcase MotionNotify:\n\t    /* BTN_EVENT_MOUSE and ANY_EVENT_MOUSE modes send motion\n\t     * events only if character cell has changed.\n\t     */\n\t    if ((row == screen->mouse_row)\n\t\t&& (col == screen->mouse_col)) {\n\t\tchanged = False;\n\t    } else {\n\t\tcount = EMIT_BUTTON(FirstBitN(screen->mouse_button));\n\t    }\n\t    break;\n\tdefault:\n\t    changed = False;\n\t    break;\n\t}\n    }\n\n    if (changed) {\n\tscreen->mouse_row = row;\n\tscreen->mouse_col = col;\n\n\tTRACE((\"mouse at %d,%d button+mask = %#x\\n\", row, col, line[count - 1]));\n\n\t/* Add pointer position to key sequence */\n\tcount = EmitMousePositionSeparator(screen, line, count);\n\tcount = EmitMousePosition(screen, line, count, col);\n\tcount = EmitMousePositionSeparator(screen, line, count);\n\tcount = EmitMousePosition(screen, line, count, row);\n\n\tswitch (screen->extend_coords) {\n\tcase SET_SGR_EXT_MODE_MOUSE:\n\tcase SET_URXVT_EXT_MODE_MOUSE:\n\tcase SET_PIXEL_POSITION_MOUSE:\n\t    line[count++] = final;\n\t    break;\n\t}\n\n\t/* Transmit key sequence to process running under xterm */\n\tTRACE((\"EditorButton -> %s\\n\", visibleChars(line, count)));\n\tv_write(pty, line, count);\n    }\n    return;\n}\n\n/*\n * Check the current send_mouse_pos against allowed mouse-operations, returning\n * none if it is disallowed.\n */\nXtermMouseModes\nokSendMousePos(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    XtermMouseModes result = (XtermMouseModes) screen->send_mouse_pos;\n\n    switch ((int) result) {\n    case MOUSE_OFF:\n\tbreak;\n    case X10_MOUSE:\n\tif (!AllowMouseOps(xw, emX10))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case VT200_MOUSE:\n\tif (!AllowMouseOps(xw, emVT200Click))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case VT200_HIGHLIGHT_MOUSE:\n\tif (!AllowMouseOps(xw, emVT200Hilite))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case BTN_EVENT_MOUSE:\n\tif (!AllowMouseOps(xw, emAnyButton))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case ANY_EVENT_MOUSE:\n\tif (!AllowMouseOps(xw, emAnyEvent))\n\t    result = MOUSE_OFF;\n\tbreak;\n    case DEC_LOCATOR:\n\tif (!AllowMouseOps(xw, emLocator))\n\t    result = MOUSE_OFF;\n\tbreak;\n    }\n    return result;\n}\n\n#if OPT_FOCUS_EVENT\n/*\n * Check the current send_focus_pos against allowed mouse-operations, returning\n * none if it is disallowed.\n */\nstatic int\nokSendFocusPos(XtermWidget xw)\n{\n    TScreen *screen = TScreenOf(xw);\n    int result = screen->send_focus_pos;\n\n    if (!AllowMouseOps(xw, emFocusEvent)) {\n\tresult = False;\n    }\n    return result;\n}\n\nvoid\nSendFocusButton(XtermWidget xw, XFocusChangeEvent *event)\n{\n    if (okSendFocusPos(xw)) {\n\tANSI reply;\n\n\tmemset(&reply, 0, sizeof(reply));\n\treply.a_type = ANSI_CSI;\n\n#if OPT_SCO_FUNC_KEYS\n\tif (xw->keyboard.type == keyboardIsSCO) {\n\t    reply.a_pintro = '>';\n\t}\n#endif\n\treply.a_final = CharOf((event->type == FocusIn) ? 'I' : 'O');\n\tunparseseq(xw, &reply);\n    }\n    return;\n}\n#endif /* OPT_FOCUS_EVENT */\n\n#if OPT_SELECTION_OPS\n/*\n * Get the event-time, needed to process selections.\n */\nstatic Time\ngetEventTime(XEvent *event)\n{\n    Time result;\n\n    if (IsBtnEvent(event)) {\n\tresult = ((XButtonEvent *) event)->time;\n    } else if (IsKeyEvent(event)) {\n\tresult = ((XKeyEvent *) event)->time;\n    } else {\n\tresult = 0;\n    }\n\n    return result;\n}\n\n/* obtain the selection string, passing the endpoints to caller's parameters */\nstatic void\ndoSelectionFormat(XtermWidget xw,\n\t\t  Widget w,\n\t\t  XEvent *event,\n\t\t  String *params,\n\t\t  Cardinal *num_params,\n\t\t  FormatSelect format_select)\n{\n    TScreen *screen = TScreenOf(xw);\n    InternalSelect *mydata = &(screen->internal_select);\n\n    memset(mydata, 0, sizeof(*mydata));\n    mydata->format = x_strdup(params[0]);\n    mydata->format_select = format_select;\n\n    screen->selectToBuffer = True;\n    beginInternalSelect(xw);\n\n    xtermGetSelection(w, getEventTime(event), params + 1, *num_params - 1, NULL);\n\n    if (screen->selectToBuffer)\n\tfinishInternalSelect(xw);\n}\n\n/* obtain data from the screen, passing the endpoints to caller's parameters */\nstatic char *\ngetDataFromScreen(XtermWidget xw, XEvent *event, String method, CELL *start, CELL *finish)\n{\n    TScreen *screen = TScreenOf(xw);\n\n    CELL save_old_start = screen->startH;\n    CELL save_old_end = screen->endH;\n\n    CELL save_startSel = screen->startSel;\n    CELL save_startRaw = screen->startRaw;\n    CELL save_finishSel = screen->endSel;\n    CELL save_finishRaw = screen->endRaw;\n\n    int save_firstValidRow = screen->firstValidRow;\n    int save_lastValidRow = screen->lastValidRow;\n\n    const Cardinal noClick = 0;\n    int save_numberOfClicks = screen->numberOfClicks;\n\n    SelectUnit saveUnits = screen->selectUnit;\n    SelectUnit saveMap = screen->selectMap[noClick];\n#if OPT_SELECT_REGEX\n    char *saveExpr = screen->selectExpr[noClick];\n#endif\n    SelectedCells *scp = &(screen->selected_cells[PRIMARY_CODE]);\n    SelectedCells save_selection = *scp;\n\n    char *result = 0;\n\n    TRACE((\"getDataFromScreen %s\\n\", method));\n\n    memset(scp, 0, sizeof(*scp));\n\n    screen->numberOfClicks = 1;\n    lookupSelectUnit(xw, noClick, method);\n    screen->selectUnit = screen->selectMap[noClick];\n\n    memset(start, 0, sizeof(*start));\n    if (IsBtnEvent(event)) {\n\tXButtonEvent *btn_event = (XButtonEvent *) event;\n\tCELL cell;\n\tscreen->firstValidRow = 0;\n\tscreen->lastValidRow = screen->max_row;\n\tPointToCELL(screen, btn_event->y, btn_event->x, &cell);\n\tstart->row = cell.row;\n\tstart->col = cell.col;\n\tfinish->row = cell.row;\n\tfinish->col = screen->max_col;\n    } else {\n\tstart->row = screen->cur_row;\n\tstart->col = screen->cur_col;\n\tfinish->row = screen->cur_row;\n\tfinish->col = screen->max_col;\n    }\n\n    ComputeSelect(xw, start, finish, False, False);\n    SaltTextAway(xw,\n\t\t TargetToSelection(screen, PRIMARY_NAME),\n\t\t &(screen->startSel), &(screen->endSel));\n\n    if (scp->data_limit && scp->data_buffer) {\n\tTRACE((\"...getDataFromScreen selection-data %.*s\\n\",\n\t       (int) scp->data_limit,\n\t       scp->data_buffer));\n\tresult = malloc(scp->data_limit + 1);\n\tif (result) {\n\t    memcpy(result, scp->data_buffer, scp->data_limit);\n\t    result[scp->data_limit] = 0;\n\t}\n\tfree(scp->data_buffer);\n\tscp->data_limit = 0;\n    }\n\n    TRACE((\"...getDataFromScreen restoring previous selection\\n\"));\n\n    screen->startSel = save_startSel;\n    screen->startRaw = save_startRaw;\n    screen->endSel = save_finishSel;\n    screen->endRaw = save_finishRaw;\n\n    screen->firstValidRow = save_firstValidRow;\n    screen->lastValidRow = save_lastValidRow;\n\n    screen->numberOfClicks = save_numberOfClicks;\n    screen->selectUnit = saveUnits;\n    screen->selectMap[noClick] = saveMap;\n#if OPT_SELECT_REGEX\n    screen->selectExpr[noClick] = saveExpr;\n#endif\n\n    screen->selected_cells[0] = save_selection;\n\n    TrackText(xw, &save_old_start, &save_old_end);\n\n    TRACE((\"...getDataFromScreen done\\n\"));\n    return result;\n}\n\n/*\n * Split-up the format before substituting data, to avoid quoting issues.\n * The resource mechanism has a limited ability to handle escapes.  We take\n * the result as if it were an sh-type string and parse it into a regular\n * argv array.\n */\nstatic char **\ntokenizeFormat(String format)\n{\n    char **result = 0;\n\n    format = x_skip_blanks(format);\n    if (*format != '\\0') {\n\tchar *blob = x_strdup(format);\n\tint pass;\n\n\tfor (pass = 0; pass < 2; ++pass) {\n\t    int used = 0;\n\t    int first = 1;\n\t    int escaped = 0;\n\t    int squoted = 0;\n\t    int dquoted = 0;\n\t    int n;\n\t    int argc = 0;\n\n\t    for (n = 0; format[n] != '\\0'; ++n) {\n\t\tif (escaped) {\n\t\t    blob[used++] = format[n];\n\t\t    escaped = 0;\n\t\t} else if (format[n] == '\"') {\n\t\t    if (!squoted) {\n\t\t\tif (!dquoted)\n\t\t\t    blob[used++] = format[n];\n\t\t\tdquoted = !dquoted;\n\t\t    }\n\t\t} else if (format[n] == '\\'') {\n\t\t    if (!dquoted) {\n\t\t\tif (!squoted)\n\t\t\t    blob[used++] = format[n];\n\t\t\tsquoted = !squoted;\n\t\t    }\n\t\t} else if (format[n] == '\\\\') {\n\t\t    blob[used++] = format[n];\n\t\t    escaped = 1;\n\t\t} else {\n\t\t    if (first) {\n\t\t\tfirst = 0;\n\t\t\tif (pass) {\n\t\t\t    result[argc] = &blob[n];\n\t\t\t}\n\t\t\t++argc;\n\t\t    }\n\t\t    if (isspace((Char) format[n])) {\n\t\t\tfirst = !isspace((Char) format[n + 1]);\n\t\t\tif (squoted || dquoted) {\n\t\t\t    blob[used++] = format[n];\n\t\t\t} else if (first) {\n\t\t\t    blob[used++] = '\\0';\n\t\t\t}\n\t\t    } else {\n\t\t\tblob[used++] = format[n];\n\t\t    }\n\t\t}\n\t    }\n\t    blob[used] = '\\0';\n\t    assert(strlen(blob) <= strlen(format));\n\t    if (!pass) {\n\t\tresult = TypeCallocN(char *, argc + 1);\n\t\tif (result == 0) {\n\t\t    free(blob);\n\t\t    break;\n\t\t}\n\t    }\n\t}\n    }\n#if OPT_TRACE\n    if (result) {\n\tint n;\n\tTRACE((\"tokenizeFormat %s\\n\", format));\n\tfor (n = 0; result[n]; ++n) {\n\t    TRACE((\"argv[%d] = %s\\n\", n, result[n]));\n\t}\n    }\n#endif\n\n    return result;\n}\n\nstatic void\nformatVideoAttrs(XtermWidget xw, char *buffer, CELL *cell)\n{\n    TScreen *screen = TScreenOf(xw);\n    LineData *ld = GET_LINEDATA(screen, cell->row);\n\n    *buffer = '\\0';\n    if (ld != 0 && cell->col < (int) ld->lineSize) {\n\tIAttr attribs = ld->attribs[cell->col];\n\tconst char *delim = \"\";\n\n\tif (attribs & INVERSE) {\n\t    buffer += sprintf(buffer, \"7\");\n\t    delim = \";\";\n\t}\n\tif (attribs & UNDERLINE) {\n\t    buffer += sprintf(buffer, \"%s4\", delim);\n\t    delim = \";\";\n\t}\n\tif (attribs & BOLD) {\n\t    buffer += sprintf(buffer, \"%s1\", delim);\n\t    delim = \";\";\n\t}\n\tif (attribs & BLINK) {\n\t    buffer += sprintf(buffer, \"%s5\", delim);\n\t    delim = \";\";\n\t}\n#if OPT_ISO_COLORS\n\tif (attribs & FG_COLOR) {\n\t    Pixel fg = extract_fg(xw, ld->color[cell->col], attribs);\n\t    if (fg < 8) {\n\t\tfg += 30;\n\t    } else if (fg < 16) {\n\t\tfg += 90;\n\t    } else {\n\t\tbuffer += sprintf(buffer, \"%s38;5\", delim);\n\t\tdelim = \";\";\n\t    }\n\t    buffer += sprintf(buffer, \"%s%lu\", delim, fg);\n\t    delim = \";\";\n\t}\n\tif (attribs & BG_COLOR) {\n\t    Pixel bg = extract_bg(xw, ld->color[cell->col], attribs);\n\t    if (bg < 8) {\n\t\tbg += 40;\n\t    } else if (bg < 16) {\n\t\tbg += 100;\n\t    } else {\n\t\tbuffer += sprintf(buffer, \"%s48;5\", delim);\n\t\tdelim = \";\";\n\t    }\n\t    (void) sprintf(buffer, \"%s%lu\", delim, bg);\n\t}\n#endif\n    }\n}\n\nstatic char *\nformatStrlen(char *target, char *source, int freeit)\n{\n    if (source != 0) {\n\tsprintf(target, \"%u\", (unsigned) strlen(source));\n\tif (freeit) {\n\t    free(source);\n\t}\n    } else {\n\tstrcpy(target, \"0\");\n    }\n    return target;\n}\n\n/* substitute data into format, reallocating the result */\nstatic char *\nexpandFormat(XtermWidget xw,\n\t     const char *format,\n\t     char *data,\n\t     CELL *start,\n\t     CELL *finish)\n{\n    char *result = 0;\n    if (!IsEmpty(format)) {\n\tstatic char empty[1];\n\tint pass;\n\tint n;\n\tchar numbers[80];\n\n\tif (data == 0)\n\t    data = empty;\n\n\tfor (pass = 0; pass < 2; ++pass) {\n\t    size_t need = 0;\n\n\t    for (n = 0; format[n] != '\\0'; ++n) {\n\n\t\tif (format[n] == '%') {\n\t\t    char *value = 0;\n\n\t\t    switch (format[++n]) {\n\t\t    case '%':\n\t\t\tif (pass) {\n\t\t\t    result[need] = format[n];\n\t\t\t}\n\t\t\t++need;\n\t\t\tbreak;\n\t\t    case 'P':\n\t\t\tsprintf(numbers, \"%d;%d\",\n\t\t\t\tTScreenOf(xw)->topline + start->row + 1,\n\t\t\t\tstart->col + 1);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    case 'p':\n\t\t\tsprintf(numbers, \"%d;%d\",\n\t\t\t\tTScreenOf(xw)->topline + finish->row + 1,\n\t\t\t\tfinish->col + 1);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    case 'R':\n\t\t\tvalue = formatStrlen(numbers, x_strrtrim(data), 1);\n\t\t\tbreak;\n\t\t    case 'r':\n\t\t\tvalue = x_strrtrim(data);\n\t\t\tbreak;\n\t\t    case 'S':\n\t\t\tvalue = formatStrlen(numbers, data, 0);\n\t\t\tbreak;\n\t\t    case 's':\n\t\t\tvalue = data;\n\t\t\tbreak;\n\t\t    case 'T':\n\t\t\tvalue = formatStrlen(numbers, x_strtrim(data), 1);\n\t\t\tbreak;\n\t\t    case 't':\n\t\t\tvalue = x_strtrim(data);\n\t\t\tbreak;\n\t\t    case 'V':\n\t\t\tformatVideoAttrs(xw, numbers, start);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    case 'v':\n\t\t\tformatVideoAttrs(xw, numbers, finish);\n\t\t\tvalue = numbers;\n\t\t\tbreak;\n\t\t    default:\n\t\t\tif (pass) {\n\t\t\t    result[need] = format[n];\n\t\t\t}\n\t\t\t--n;\n\t\t\t++need;\n\t\t\tbreak;\n\t\t    }\n\t\t    if (value != 0) {\n\t\t\tif (pass) {\n\t\t\t    strcpy(result + need, value);\n\t\t\t}\n\t\t\tneed += strlen(value);\n\t\t\tif (value != numbers && value != data) {\n\t\t\t    free(value);\n\t\t\t}\n\t\t    }\n\t\t} else {\n\t\t    if (pass) {\n\t\t\tresult[need] = format[n];\n\t\t    }\n\t\t    ++need;\n\t\t}\n\t    }\n\t    if (pass) {\n\t\tresult[need] = '\\0';\n\t    } else {\n\t\t++need;\n\t\tresult = malloc(need);\n\t\tif (result == 0) {\n\t\t    break;\n\t\t}\n\t    }\n\t}\n    }\n    TRACE((\"expandFormat(%s) = %s\\n\", NonNull(format), NonNull(result)));\n    return result;\n}\n\n/* execute the command after forking.  The main process frees its data */\nstatic void\nexecuteCommand(pid_t pid, char **argv)\n{\n    (void) pid;\n    if (argv != 0 && argv[0] != 0) {\n\tchar *child_cwd = ProcGetCWD(pid);\n\n\tif (fork() == 0) {\n\t    if (child_cwd) {\n\t\tIGNORE_RC(chdir(child_cwd));\t/* We don't care if this fails */\n\t    }\n\t    execvp(argv[0], argv);\n\t    exit(EXIT_FAILURE);\n\t}\n\tfree(child_cwd);\n    }\n}\n\nstatic void\nfreeArgv(char *blob, char **argv)\n{\n    if (blob) {\n\tfree(blob);\n\tif (argv) {\n\t    int n;\n\t    for (n = 0; argv[n]; ++n)\n\t\tfree(argv[n]);\n\t    free(argv);\n\t}\n    }\n}\n\nstatic void\nreallyExecFormatted(Widget w, char *format, char *data, CELL *start, CELL *finish)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tchar **argv;\n\n\tif ((argv = tokenizeFormat(format)) != 0) {\n\t    char *blob = argv[0];\n\t    int argc;\n\n\t    for (argc = 0; argv[argc] != 0; ++argc) {\n\t\targv[argc] = expandFormat(xw, argv[argc], data, start, finish);\n\t    }\n\t    executeCommand(TScreenOf(xw)->pid, argv);\n\t    freeArgv(blob, argv);\n\t}\n    }\n}\n\nvoid\nHandleExecFormatted(Widget w,\n\t\t    XEvent *event,\n\t\t    String *params,\t/* selections */\n\t\t    Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    TRACE_EVENT(\"HandleExecFormatted\", event, params, num_params);\n    if ((xw = getXtermWidget(w)) != 0 &&\n\t(*num_params > 1)) {\n\tdoSelectionFormat(xw, w, event, params, num_params, reallyExecFormatted);\n    }\n}\n\nvoid\nHandleExecSelectable(Widget w,\n\t\t     XEvent *event,\n\t\t     String *params,\t/* selections */\n\t\t     Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleExecSelectable\", event, params, num_params);\n\n\tif (*num_params == 2) {\n\t    CELL start, finish;\n\t    char *data;\n\t    char **argv;\n\n\t    data = getDataFromScreen(xw, event, params[1], &start, &finish);\n\t    if (data != 0) {\n\t\tif ((argv = tokenizeFormat(params[0])) != 0) {\n\t\t    char *blob = argv[0];\n\t\t    int argc;\n\n\t\t    for (argc = 0; argv[argc] != 0; ++argc) {\n\t\t\targv[argc] = expandFormat(xw, argv[argc], data,\n\t\t\t\t\t\t  &start, &finish);\n\t\t    }\n\t\t    executeCommand(TScreenOf(xw)->pid, argv);\n\t\t    freeArgv(blob, argv);\n\t\t}\n\t\tfree(data);\n\t    }\n\t}\n    }\n}\n\nstatic void\nreallyInsertFormatted(Widget w, char *format, char *data, CELL *start, CELL *finish)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tchar *exps;\n\n\tif ((exps = expandFormat(xw, format, data, start, finish)) != 0) {\n\t    unparseputs(xw, exps);\n\t    unparse_end(xw);\n\t    free(exps);\n\t}\n    }\n}\n\nvoid\nHandleInsertFormatted(Widget w,\n\t\t      XEvent *event,\n\t\t      String *params,\t/* selections */\n\t\t      Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    TRACE_EVENT(\"HandleInsertFormatted\", event, params, num_params);\n    if ((xw = getXtermWidget(w)) != 0 &&\n\t(*num_params > 1)) {\n\tdoSelectionFormat(xw, w, event, params, num_params, reallyInsertFormatted);\n    }\n}\n\nvoid\nHandleInsertSelectable(Widget w,\n\t\t       XEvent *event,\n\t\t       String *params,\t/* selections */\n\t\t       Cardinal *num_params)\n{\n    XtermWidget xw;\n\n    if ((xw = getXtermWidget(w)) != 0) {\n\tTRACE_EVENT(\"HandleInsertSelectable\", event, params, num_params);\n\n\tif (*num_params == 2) {\n\t    CELL start, finish;\n\t    char *data;\n\t    char *temp = x_strdup(params[0]);\n\n\t    data = getDataFromScreen(xw, event, params[1], &start, &finish);\n\t    if (data != 0) {\n\t\tchar *exps = expandFormat(xw, temp, data, &start, &finish);\n\t\tif (exps != 0) {\n\t\t    unparseputs(xw, exps);\n\t\t    unparse_end(xw);\n\t\t    free(exps);\n\t\t}\n\t\tfree(data);\n\t    }\n\t    free(temp);\n\t}\n    }\n}\n#endif /* OPT_SELECTION_OPS */\n", "<!--\n *****************************************************************************\n * this file is part of xterm                                                *\n *                                                                           *\n * Copyright 1997-2020,2021 by Thomas E. Dickey                              *\n *                                                                           *\n * All Rights Reserved                                                       *\n *                                                                           *\n * Permission is hereby granted, free of charge, to any person obtaining a   *\n * copy of this software and associated documentation files (the             *\n * \"Software\"), to deal in the Software without restriction, including       *\n * without limitation the rights to use, copy, modify, merge, publish,       *\n * distribute, sublicense, and/or sell copies of the Software, and to        *\n * permit persons to whom the Software is furnished to do so, subject to     *\n * the following conditions:                                                 *\n *                                                                           *\n * The above copyright notice and this permission notice shall be included   *\n * in all copies or substantial portions of the Software.                    *\n *                                                                           *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS   *\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF                *\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.    *\n * IN NO EVENT SHALL THE ABOVE LISTED COPYRIGHT HOLDER(S) BE LIABLE FOR ANY  *\n * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,      *\n * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE         *\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                    *\n *                                                                           *\n * Except as contained in this notice, the name(s) of the above copyright    *\n * holders shall not be used in advertising or otherwise to promote the      *\n * sale, use or other dealings in this Software without prior written        *\n * authorization.                                                            *\n *****************************************************************************\n  $XTermId: xterm.log.html,v 1.2311 2021/02/09 21:59:33 tom Exp $\n  -->\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\">\n<html>\n<head>\n  <meta name=\"generator\" content=\n  \"HTML Tidy for HTML5 for Linux version 5.6.0\">\n  <title>XTERM - Change Log</title>\n  <link rel=\"author\" href=\"mailto:dickey@invisible-island.net\">\n  <meta http-equiv=\"Content-Type\" content=\n  \"text/html; charset=us-ascii\">\n  <meta name=\"keywords\" content=\"xterm, change log\">\n  <meta name=\"description\" content=\n  \"This is the xterm change-log, distributed with xterm, with items listed by patch-number and date\">\n  <link rel=\"SHORTCUT ICON\" href=\"/img/icons/xterm.ico\" type=\n  \"image/x-icon\">\n</head>\n<body>\n  <hr>\n\n  <p>Copyright &copy; 1997-2020,2021 by <a href=\n  \"mailto:dickey@invisible-island.net\">Thomas E. Dickey</a></p>\n\n  <hr>\n\n  <h1>Contents</h1>\n\n  <p><a href=\n  \"https://invisible-island.net/xterm/xterm.log.html\">Here</a> is\n  the latest version of this file.</p>\n\n  <p>It began as a list of the changes that I made for xterm, using\n  the notes that I added when submitting a patch. You should note\n  that other changes were made as well, by other people, to fix\n  bugs and correct ifdef's for portability. Until mid-2006, most of\n  these were summarized in the XFree86 <a href=\n  \"https://web.archive.org/web/20070101220948/http://cvsweb.xfree86.org/cvsweb/xc/programs/Xserver/hw/xfree86/CHANGELOG\">\n  CHANGELOG</a>).</p>\n\n  <ul>\n    <li><a href=\"#xterm_dev\">Development</a></li>\n\n    <li><a href=\"#xterm_365\">Patch #365 - 2021/02/03</a></li>\n\n    <li><a href=\"#xterm_364\">Patch #364 - 2021/02/02</a></li>\n\n    <li><a href=\"#xterm_363\">Patch #363 - 2020/12/26</a></li>\n\n    <li><a href=\"#xterm_362\">Patch #362 - 2020/11/11</a></li>\n\n    <li><a href=\"#xterm_361\">Patch #361 - 2020/10/14</a></li>\n\n    <li><a href=\"#xterm_360\">Patch #360 - 2020/09/20</a></li>\n\n    <li><a href=\"#xterm_359\">Patch #359 - 2020/08/17</a></li>\n\n    <li><a href=\"#xterm_358\">Patch #358 - 2020/07/12</a></li>\n\n    <li><a href=\"#xterm_357\">Patch #357 - 2020/07/05</a></li>\n\n    <li><a href=\"#xterm_356\">Patch #356 - 2020/05/02</a></li>\n\n    <li><a href=\"#xterm_355\">Patch #355 - 2020/05/01</a></li>\n\n    <li><a href=\"#xterm_354\">Patch #354 - 2020/04/26</a></li>\n\n    <li><a href=\"#xterm_353\">Patch #353 - 2020/02/01</a></li>\n\n    <li><a href=\"#xterm_352\">Patch #352 - 2020/01/16</a></li>\n\n    <li><a href=\"#xterm_351\">Patch #351 - 2019/11/17</a></li>\n\n    <li><a href=\"#xterm_350\">Patch #350 - 2019/11/02</a></li>\n\n    <li><a href=\"#xterm_349\">Patch #349 - 2019/09/22</a></li>\n\n    <li><a href=\"#xterm_348\">Patch #348 - 2019/07/22</a></li>\n\n    <li><a href=\"#xterm_347\">Patch #347 - 2019/06/30</a></li>\n\n    <li><a href=\"#xterm_346\">Patch #346 - 2019/05/27</a></li>\n\n    <li><a href=\"#xterm_345\">Patch #345 - 2019/05/14</a></li>\n\n    <li><a href=\"#xterm_344\">Patch #344 - 2019/02/12</a></li>\n\n    <li><a href=\"#xterm_343\">Patch #343 - 2019/01/13</a></li>\n\n    <li><a href=\"#xterm_342\">Patch #342 - 2019/01/03</a></li>\n\n    <li><a href=\"#xterm_341\">Patch #341 - 2018/12/24</a></li>\n\n    <li><a href=\"#xterm_340\">Patch #340 - 2018/12/16</a></li>\n\n    <li><a href=\"#xterm_339\">Patch #339 - 2018/12/12</a></li>\n\n    <li><a href=\"#xterm_338\">Patch #338 - 2018/12/09</a></li>\n\n    <li><a href=\"#xterm_337\">Patch #337 - 2018/09/21</a></li>\n\n    <li><a href=\"#xterm_336\">Patch #336 - 2018/09/19</a></li>\n\n    <li><a href=\"#xterm_335\">Patch #335 - 2018/08/14</a></li>\n\n    <li><a href=\"#xterm_334\">Patch #334 - 2018/08/12</a></li>\n\n    <li><a href=\"#xterm_333\">Patch #333 - 2018/05/03</a></li>\n\n    <li><a href=\"#xterm_332\">Patch #332 - 2018/04/15</a></li>\n\n    <li><a href=\"#xterm_331\">Patch #331 - 2017/12/30</a></li>\n\n    <li><a href=\"#xterm_330\">Patch #330 - 2017/06/20</a></li>\n\n    <li><a href=\"#xterm_329\">Patch #329 - 2017/06/12</a></li>\n\n    <li><a href=\"#xterm_328\">Patch #328 - 2017/06/01</a></li>\n\n    <li><a href=\"#xterm_327\">Patch #327 - 2016/10/07</a></li>\n\n    <li><a href=\"#xterm_326\">Patch #326 - 2016/09/25</a></li>\n\n    <li><a href=\"#xterm_325\">Patch #325 - 2016/06/05</a></li>\n\n    <li><a href=\"#xterm_324\">Patch #324 - 2016/03/10</a></li>\n\n    <li><a href=\"#xterm_323\">Patch #323 - 2016/03/07</a></li>\n\n    <li><a href=\"#xterm_322\">Patch #322 - 2016/01/02</a></li>\n\n    <li><a href=\"#xterm_321\">Patch #321 - 2015/12/31</a></li>\n\n    <li><a href=\"#xterm_320\">Patch #320 - 2015/08/28</a></li>\n\n    <li><a href=\"#xterm_319\">Patch #319 - 2015/08/19</a></li>\n\n    <li><a href=\"#xterm_318\">Patch #318 - 2015/04/12</a></li>\n\n    <li><a href=\"#xterm_317\">Patch #317 - 2015/03/27</a></li>\n\n    <li><a href=\"#xterm_316\">Patch #316 - 2015/03/07</a></li>\n\n    <li><a href=\"#xterm_315\">Patch #315 - 2015/03/02</a></li>\n\n    <li><a href=\"#xterm_314\">Patch #314 - 2014/12/28</a></li>\n\n    <li><a href=\"#xterm_313\">Patch #313 - 2014/11/28</a></li>\n\n    <li><a href=\"#xterm_312\">Patch #312 - 2014/09/28</a></li>\n\n    <li><a href=\"#xterm_311\">Patch #311 - 2014/09/18</a></li>\n\n    <li><a href=\"#xterm_310\">Patch #310 - 2014/07/25</a></li>\n\n    <li><a href=\"#xterm_309\">Patch #309 - 2014/07/13</a></li>\n\n    <li><a href=\"#xterm_308\">Patch #308 - 2014/06/19</a></li>\n\n    <li><a href=\"#xterm_307\">Patch #307 - 2014/06/17</a></li>\n\n    <li><a href=\"#xterm_306\">Patch #306 - 2014/06/03</a></li>\n\n    <li><a href=\"#xterm_305\">Patch #305 - 2014/06/02</a></li>\n\n    <li><a href=\"#xterm_304\">Patch #304 - 2014/05/03</a></li>\n\n    <li><a href=\"#xterm_303\">Patch #303 - 2014/03/06</a></li>\n\n    <li><a href=\"#xterm_302\">Patch #302 - 2014/03/02</a></li>\n\n    <li><a href=\"#xterm_301\">Patch #301 - 2014/01/19</a></li>\n\n    <li><a href=\"#xterm_300\">Patch #300 - 2013/12/03</a></li>\n\n    <li><a href=\"#xterm_299\">Patch #299 - 2013/12/01</a></li>\n\n    <li><a href=\"#xterm_298\">Patch #298 - 2013/11/27</a></li>\n\n    <li><a href=\"#xterm_297\">Patch #297 - 2013/09/10</a></li>\n\n    <li><a href=\"#xterm_296\">Patch #296 - 2013/07/10</a></li>\n\n    <li><a href=\"#xterm_295\">Patch #295 - 2013/07/06</a></li>\n\n    <li><a href=\"#xterm_294\">Patch #294 - 2013/07/05</a></li>\n\n    <li><a href=\"#xterm_293\">Patch #293 - 2013/05/27</a></li>\n\n    <li><a href=\"#xterm_292\">Patch #292 - 2013/04/25</a></li>\n\n    <li><a href=\"#xterm_291\">Patch #291 - 2013/02/26</a></li>\n\n    <li><a href=\"#xterm_290\">Patch #290 - 2013/02/12</a></li>\n\n    <li><a href=\"#xterm_289\">Patch #289 - 2013/02/08</a></li>\n\n    <li><a href=\"#xterm_288\">Patch #288 - 2013/01/09</a></li>\n\n    <li><a href=\"#xterm_287\">Patch #287 - 2012/11/25</a></li>\n\n    <li><a href=\"#xterm_286\">Patch #286 - 2012/10/29</a></li>\n\n    <li><a href=\"#xterm_285\">Patch #285 - 2012/10/23</a></li>\n\n    <li><a href=\"#xterm_284\">Patch #284 - 2012/10/14</a></li>\n\n    <li><a href=\"#xterm_283\">Patch #283 - 2012/10/09</a></li>\n\n    <li><a href=\"#xterm_282\">Patch #282 - 2012/09/28</a></li>\n\n    <li><a href=\"#xterm_281\">Patch #281 - 2012/06/26</a></li>\n\n    <li><a href=\"#xterm_280\">Patch #280 - 2012/06/24</a></li>\n\n    <li><a href=\"#xterm_279\">Patch #279 - 2012/05/10</a></li>\n\n    <li><a href=\"#xterm_278\">Patch #278 - 2012/01/18</a></li>\n\n    <li><a href=\"#xterm_277\">Patch #277 - 2012/01/07</a></li>\n\n    <li><a href=\"#xterm_276\">Patch #276 - 2011/10/10</a></li>\n\n    <li><a href=\"#xterm_275\">Patch #275 - 2011/09/11</a></li>\n\n    <li><a href=\"#xterm_274\">Patch #274 - 2011/09/05</a></li>\n\n    <li><a href=\"#xterm_273\">Patch #273 - 2011/08/25</a></li>\n\n    <li><a href=\"#xterm_272\">Patch #272 - 2011/08/24</a></li>\n\n    <li><a href=\"#xterm_271\">Patch #271 - 2011/07/14</a></li>\n\n    <li><a href=\"#xterm_270\">Patch #270 - 2011/04/26</a></li>\n\n    <li><a href=\"#xterm_269\">Patch #269 - 2011/02/19</a></li>\n\n    <li><a href=\"#xterm_268\">Patch #268 - 2011/02/10</a></li>\n\n    <li><a href=\"#xterm_267\">Patch #267 - 2010/11/20</a></li>\n\n    <li><a href=\"#xterm_266\">Patch #266 - 2010/10/24</a></li>\n\n    <li><a href=\"#xterm_265\">Patch #265 - 2010/10/22</a></li>\n\n    <li><a href=\"#xterm_264\">Patch #264 - 2010/10/14</a></li>\n\n    <li><a href=\"#xterm_263\">Patch #263 - 2010/10/13</a></li>\n\n    <li><a href=\"#xterm_262\">Patch #262 - 2010/8/30</a></li>\n\n    <li><a href=\"#xterm_261\">Patch #261 - 2010/6/28</a></li>\n\n    <li><a href=\"#xterm_260\">Patch #260 - 2010/6/20</a></li>\n\n    <li><a href=\"#xterm_259\">Patch #259 - 2010/6/5</a></li>\n\n    <li><a href=\"#xterm_258\">Patch #258 - 2010/5/1</a></li>\n\n    <li><a href=\"#xterm_257\">Patch #257 - 2010/4/22</a></li>\n\n    <li><a href=\"#xterm_256\">Patch #256 - 2010/3/6</a></li>\n\n    <li><a href=\"#xterm_255\">Patch #255 - 2010/1/21</a></li>\n\n    <li><a href=\"#xterm_254\">Patch #254 - 2010/1/6</a></li>\n\n    <li><a href=\"#xterm_253\">Patch #253 - 2009/12/10</a></li>\n\n    <li><a href=\"#xterm_252\">Patch #252 - 2009/12/7</a></li>\n\n    <li><a href=\"#xterm_251\">Patch #251 - 2009/11/11</a></li>\n\n    <li><a href=\"#xterm_250\">Patch #250 - 2009/10/13</a></li>\n\n    <li><a href=\"#xterm_249\">Patch #249 - 2009/10/1</a></li>\n\n    <li><a href=\"#xterm_248\">Patch #248 - 2009/9/11</a></li>\n\n    <li><a href=\"#xterm_247\">Patch #247 - 2009/8/30</a></li>\n\n    <li><a href=\"#xterm_246\">Patch #246 - 2009/8/16</a></li>\n\n    <li><a href=\"#xterm_245\">Patch #245 - 2009/8/12</a></li>\n\n    <li><a href=\"#xterm_244\">Patch #244 - 2009/8/9</a></li>\n\n    <li><a href=\"#xterm_243\">Patch #243 - 2009/3/28</a></li>\n\n    <li><a href=\"#xterm_242\">Patch #242 - 2009/2/15</a></li>\n\n    <li><a href=\"#xterm_241\">Patch #241 - 2009/1/26</a></li>\n\n    <li><a href=\"#xterm_240\">Patch #240 - 2009/1/25</a></li>\n\n    <li><a href=\"#xterm_239\">Patch #239 - 2009/1/8</a></li>\n\n    <li><a href=\"#xterm_238\">Patch #238 - 2008/12/30</a></li>\n\n    <li><a href=\"#xterm_237\">Patch #237 - 2008/09/14</a></li>\n\n    <li><a href=\"#xterm_236\">Patch #236 - 2008/07/27</a></li>\n\n    <li><a href=\"#xterm_235\">Patch #235 - 2008/04/20</a></li>\n\n    <li><a href=\"#xterm_234\">Patch #234 - 2008/03/02</a></li>\n\n    <li><a href=\"#xterm_233\">Patch #233 - 2008/02/24</a></li>\n\n    <li><a href=\"#xterm_232\">Patch #232 - 2008/01/30</a></li>\n\n    <li><a href=\"#xterm_231\">Patch #231 - 2008/01/05</a></li>\n\n    <li><a href=\"#xterm_230\">Patch #230 - 2007/12/31</a></li>\n\n    <li><a href=\"#xterm_229\">Patch #229 - 2007/8/12</a></li>\n\n    <li><a href=\"#xterm_228\">Patch #228 - 2007/7/22</a></li>\n\n    <li><a href=\"#xterm_227\">Patch #227 - 2007/6/27</a></li>\n\n    <li><a href=\"#xterm_226\">Patch #226 - 2007/6/17</a></li>\n\n    <li><a href=\"#xterm_225\">Patch #225 - 2007/3/24</a></li>\n\n    <li><a href=\"#xterm_224\">Patch #224 - 2007/2/11</a></li>\n\n    <li><a href=\"#xterm_223\">Patch #223 - 2006/11/30</a></li>\n\n    <li><a href=\"#xterm_222\">Patch #222 - 2006/10/17</a></li>\n\n    <li><a href=\"#xterm_221\">Patch #221 - 2006/10/1</a></li>\n\n    <li><a href=\"#xterm_220\">Patch #220 - 2006/9/10</a></li>\n\n    <li><a href=\"#xterm_219\">Patch #219 - 2006/9/4</a></li>\n\n    <li><a href=\"#xterm_218\">Patch #218 - 2006/8/27</a></li>\n\n    <li><a href=\"#xterm_217\">Patch #217 - 2006/8/20</a></li>\n\n    <li><a href=\"#xterm_216\">Patch #216 - 2006/8/3</a></li>\n\n    <li><a href=\"#xterm_215\">Patch #215 - 2006/6/19 - XFree86\n    4.6.99.2</a></li>\n\n    <li><a href=\"#xterm_214\">Patch #214 - 2006/6/18 - XFree86\n    4.6.99.2</a></li>\n\n    <li><a href=\"#xterm_213\">Patch #213 - 2006/4/30 - XFree86\n    4.5.99.905</a></li>\n\n    <li><a href=\"#xterm_212\">Patch #212 - 2006/4/9 - XFree86\n    4.5.99.904</a></li>\n\n    <li><a href=\"#xterm_211\">Patch #211 - 2006/3/19 - XFree86\n    4.5.99.902</a></li>\n\n    <li><a href=\"#xterm_210\">Patch #210 - 2006/3/12 - XFree86\n    4.5.99.902</a></li>\n\n    <li><a href=\"#xterm_209\">Patch #209 - 2006/2/12 - XFree86\n    4.5.99.22</a></li>\n\n    <li><a href=\"#xterm_208\">Patch #208 - 2006/1/3 - XFree86\n    4.5.99.19</a></li>\n\n    <li><a href=\"#xterm_207\">Patch #207 - 2005/11/13 - XFree86\n    4.5.99.16</a></li>\n\n    <li><a href=\"#xterm_206\">Patch #206 - 2005/11/3 - XFree86\n    4.5.99.15</a></li>\n\n    <li><a href=\"#xterm_205\">Patch #205 - 2005/9/18 - XFree86\n    4.5.99.12</a></li>\n\n    <li><a href=\"#xterm_204\">Patch #204 - 2005/8/4 - XFree86\n    4.5.99.9</a></li>\n\n    <li><a href=\"#xterm_203\">Patch #203 - 2005/7/6 - XFree86\n    4.5.99.7</a></li>\n\n    <li><a href=\"#xterm_202\">Patch #202 - 2005/5/2 - XFree86\n    4.5.99.3</a></li>\n\n    <li><a href=\"#xterm_201\">Patch #201 - 2005/4/21 - XFree86\n    4.5.99.2</a></li>\n\n    <li><a href=\"#xterm_200\">Patch #200 - 2005/2/6 - XFree86\n    4.4.99.23</a></li>\n\n    <li><a href=\"#xterm_199\">Patch #199 - 2005/1/17 - XFree86\n    4.4.99.22</a></li>\n\n    <li><a href=\"#xterm_198\">Patch #198 - 2005/1/13 - XFree86\n    4.4.99.21</a></li>\n\n    <li><a href=\"#xterm_197\">Patch #197 - 2004/11/30 - XFree86\n    4.4.99.19</a></li>\n\n    <li><a href=\"#xterm_196\">Patch #196 - 2004/8/15 - XFree86\n    4.4.99.12</a></li>\n\n    <li><a href=\"#xterm_195\">Patch #195 - 2004/8/8 - XFree86\n    4.4.99.11</a></li>\n\n    <li><a href=\"#xterm_194\">Patch #194 - 2004/7/27 - XFree86\n    4.4.99.11</a></li>\n\n    <li><a href=\"#xterm_193\">Patch #193 - 2004/7/19 - XFree86\n    4.4.99.10</a></li>\n\n    <li><a href=\"#xterm_192\">Patch #192 - 2004/7/12 - XFree86\n    4.4.99.9</a></li>\n\n    <li><a href=\"#xterm_191\">Patch #191 - 2004/6/6 - XFree86\n    4.4.99.7</a></li>\n\n    <li><a href=\"#xterm_190\">Patch #190 - 2004/5/25 - XFree86\n    4.4.99.6</a></li>\n\n    <li><a href=\"#xterm_189\">Patch #189 - 2004/5/16 - XFree86\n    4.4.99.6</a></li>\n\n    <li><a href=\"#xterm_188\">Patch #188 - 2004/5/12 - XFree86\n    4.4.99.6</a></li>\n\n    <li><a href=\"#xterm_187\">Patch #187 - 2004/4/27 - XFree86\n    4.4.99.4</a></li>\n\n    <li><a href=\"#xterm_186\">Patch #186 - 2004/4/18 - XFree86\n    4.4.99.4</a></li>\n\n    <li><a href=\"#xterm_185\">Patch #185 - 2004/3/3 - XFree86\n    4.4</a></li>\n\n    <li><a href=\"#xterm_184\">Patch #184 - 2003/12/31 - XFree86\n    4.3.99.903</a></li>\n\n    <li><a href=\"#xterm_183\">Patch #183 - 2003/12/26 - XFree86\n    4.3.99.903</a></li>\n\n    <li><a href=\"#xterm_182\">Patch #182 - 2003/12/2 - XFree86\n    4.3.99.901</a></li>\n\n    <li><a href=\"#xterm_181\">Patch #181 - 2003/10/26 - XFree86\n    4.3.99.15</a></li>\n\n    <li><a href=\"#xterm_180\">Patch #180 - 2003/10/12 - XFree86\n    4.3.99.15</a></li>\n\n    <li><a href=\"#xterm_179\">Patch #179 - 2003/5/21 - XFree86\n    4.3.99.5</a></li>\n\n    <li><a href=\"#xterm_178\">Patch #178 - 2003/5/18 - XFree86\n    4.3.99.5</a></li>\n\n    <li><a href=\"#xterm_177\">Patch #177 - 2003/3/23 - XFree86\n    4.3.0</a></li>\n\n    <li><a href=\"#xterm_176\">Patch #176 - 2003/3/22 - XFree86\n    4.3.0</a></li>\n\n    <li><a href=\"#xterm_175\">Patch #175 - 2003/3/9 - XFree86\n    4.3.0</a></li>\n\n    <li><a href=\"#xterm_174\">Patch #174 - 2003/2/25 - XFree86\n    4.2.99.903</a></li>\n\n    <li><a href=\"#xterm_173\">Patch #173 - 2003/2/6 - XFree86\n    4.2.99.902</a></li>\n\n    <li><a href=\"#xterm_172\">Patch #172 - 2002/12/27 - XFree86\n    4.2.99.3</a></li>\n\n    <li><a href=\"#xterm_171\">Patch #171 - 2002/12/12 - XFree86\n    4.2.99.3</a></li>\n\n    <li><a href=\"#xterm_170\">Patch #170 - 2002/10/13 - XFree86\n    4.2.1</a></li>\n\n    <li><a href=\"#xterm_169\">Patch #169 - 2002/10/5 - XFree86\n    4.2.1</a></li>\n\n    <li><a href=\"#xterm_168\">Patch #168 - 2002/9/29 - XFree86\n    4.2.1</a></li>\n\n    <li><a href=\"#xterm_167\">Patch #167 - 2002/8/24 - XFree86\n    4.2.0</a></li>\n\n    <li><a href=\"#xterm_166\">Patch #166 - 2002/3/25 - XFree86\n    4.2.0</a></li>\n\n    <li><a href=\"#xterm_165\">Patch #165 - 2002/1/5 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_164\">Patch #164 - 2001/11/13 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_163\">Patch #163 - 2001/11/04 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_162\">Patch #162 - 2001/10/23 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_161\">Patch #161 - 2001/10/10 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_160\">Patch #160 - 2001/10/7 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_159\">Patch #159 - 2001/9/19 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_158\">Patch #158 - 2001/9/8 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_157\">Patch #157 - 2001/6/18 - XFree86\n    4.1.0</a></li>\n\n    <li><a href=\"#xterm_156\">Patch #156 - 2001/4/28 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_155\">Patch #155 - 2001/4/20 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_154\">Patch #154 - 2001/4/11 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_153\">Patch #153 - 2001/3/29 - XFree86\n    4.0.3</a></li>\n\n    <li><a href=\"#xterm_152\">Patch #152 - 2001/3/13 - XFree86\n    4.0.2</a></li>\n\n    <li><a href=\"#xterm_151\">Patch #151 - 2001/3/10 - XFree86\n    4.0.2</a></li>\n\n    <li><a href=\"#xterm_150\">Patch #150 - 2000/12/29 - XFree86\n    4.0.2</a></li>\n\n    <li><a href=\"#xterm_149\">Patch #149 - 2000/12/6 - XFree86\n    4.0.1h</a></li>\n\n    <li><a href=\"#xterm_148\">Patch #148 - 2000/10/31 - XFree86\n    4.0.1d</a></li>\n\n    <li><a href=\"#xterm_147\">Patch #147 - 2000/10/26 - XFree86\n    4.0.1c</a></li>\n\n    <li><a href=\"#xterm_146\">Patch #146 - 2000/9/12 - XFree86\n    4.0.1c</a></li>\n\n    <li><a href=\"#xterm_145\">Patch #145 - 2000/9/11 - XFree86\n    4.0.1c</a></li>\n\n    <li><a href=\"#xterm_144\">Patch #144 - 2000/8/23 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_143\">Patch #143 - 2000/8/19 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_142\">Patch #142 - 2000/8/18 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_141\">Patch #141 - 2000/8/14 - XFree86\n    4.0.1b</a></li>\n\n    <li><a href=\"#xterm_140\">Patch #140 - 2000/7/23 - XFree86\n    4.0.1</a></li>\n\n    <li><a href=\"#xterm_139\">Patch #139 - 2000/6/17 - XFree86\n    4.0d</a></li>\n\n    <li><a href=\"#xterm_138\">Patch #138 - 2000/6/15 - XFree86\n    4.0c</a></li>\n\n    <li><a href=\"#xterm_137\">Patch #137 - 2000/6/10 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_136\">Patch #136 - 2000/6/3 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_135\">Patch #135 - 2000/5/29 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_134\">Patch #134 - 2000/5/28 - XFree86\n    4.0b</a></li>\n\n    <li><a href=\"#xterm_133\">Patch #133 - 2000/5/2 - XFree86\n    4.0a</a></li>\n\n    <li><a href=\"#xterm_132\">Patch #132 - 2000/4/11 - XFree86\n    4.0a</a></li>\n\n    <li><a href=\"#xterm_131\">Patch #131 - 2000/3/3 - XFree86\n    3.9.18b</a></li>\n\n    <li><a href=\"#xterm_130\">Patch #130 - 2000/3/1 - XFree86\n    3.9.18a</a></li>\n\n    <li><a href=\"#xterm_129\">Patch #129 - 2000/2/26 - XFree86\n    3.9.18a</a></li>\n\n    <li><a href=\"#xterm_128\">Patch #128 - 2000/2/17 - XFree86\n    3.9.18</a></li>\n\n    <li><a href=\"#xterm_127\">Patch #127 - 2000/2/12 - XFree86\n    3.9.17e</a></li>\n\n    <li><a href=\"#xterm_126\">Patch #126 - 2000/2/8 - XFree86\n    3.9.17c</a></li>\n\n    <li><a href=\"#xterm_125\">Patch #125 - 2000/1/31 - XFree86\n    3.9.17c</a></li>\n\n    <li><a href=\"#xterm_124\">Patch #124 - 2000/1/27 - XFree86\n    3.9.17b</a></li>\n\n    <li><a href=\"#xterm_123\">Patch #123 - 2000/1/22 - XFree86\n    3.9.17a</a></li>\n\n    <li><a href=\"#xterm_122\">Patch #122 - 1999/12/28 - XFree86\n    3.9.16f</a></li>\n\n    <li><a href=\"#xterm_121\">Patch #121 - 1999/11/14 - XFree86\n    3.9.16c</a></li>\n\n    <li><a href=\"#xterm_120\">Patch #120 - 1999/10/28 - XFree86\n    3.9.16c</a></li>\n\n    <li><a href=\"#xterm_119\">Patch #119 - 1999/10/16 - XFree86\n    3.9.16c</a></li>\n\n    <li><a href=\"#xterm_118\">Patch #118 - 1999/10/5 - XFree86\n    3.9.16b</a></li>\n\n    <li><a href=\"#xterm_117\">Patch #117 - 1999/9/29 - XFree86\n    3.9.16b</a></li>\n\n    <li><a href=\"#xterm_116\">Patch #116 - 1999/9/25 - XFree86\n    3.9.16a</a></li>\n\n    <li><a href=\"#xterm_115\">Patch #115 - 1999/9/18 - XFree86\n    3.9.16a</a></li>\n\n    <li><a href=\"#xterm_114\">Patch #114 - 1999/9/15 - XFree86\n    3.9.16</a></li>\n\n    <li><a href=\"#xterm_113\">Patch #113 - 1999/8/15 - XFree86\n    3.9.15b</a></li>\n\n    <li><a href=\"#xterm_112\">Patch #112 - 1999/7/17 - XFree86\n    3.9Pw</a></li>\n\n    <li><a href=\"#xterm_111\">Patch #111 - 1999/7/10 - XFree86\n    3.9Pw</a></li>\n\n    <li><a href=\"#xterm_110\">Patch #110 - 1999/6/29 - XFree86\n    3.9Pu</a></li>\n\n    <li><a href=\"#xterm_109\">Patch #109 - 1999/6/23 - XFree86\n    3.9Pt</a></li>\n\n    <li><a href=\"#xterm_108\">Patch #108 - 1999/6/19 - XFree86\n    3.9Ps</a></li>\n\n    <li><a href=\"#xterm_107\">Patch #107 - 1999/6/12 - XFree86\n    3.9Pq</a></li>\n\n    <li><a href=\"#xterm_106\">Patch #106 - 1999/6/9 - XFree86\n    3.9Pq</a></li>\n\n    <li><a href=\"#xterm_105\">Patch #105 - 1999/6/5 - XFree86\n    3.9Pp</a></li>\n\n    <li><a href=\"#xterm_104\">Patch #104 - 1999/5/30 - XFree86\n    3.9Pn</a></li>\n\n    <li><a href=\"#xterm_103\">Patch #103 - 1999/5/14 - XFree86\n    3.9Pm</a></li>\n\n    <li><a href=\"#xterm_102\">Patch #102 - 1999/5/12 - XFree86\n    3.9Pm</a></li>\n\n    <li><a href=\"#xterm_101\">Patch #101 - 1999/5/10 - XFree86\n    3.9Pm</a></li>\n\n    <li><a href=\"#xterm_100\">Patch #100 - 1999/5/3 - XFree86\n    3.9Pl</a></li>\n\n    <li><a href=\"#xterm_99\">Patch #99 - 1999/5/2 - XFree86\n    3.9Pk</a></li>\n\n    <li><a href=\"#xterm_98\">Patch #98 - 1999/4/26 - XFree86\n    3.9Pk</a></li>\n\n    <li><a href=\"#xterm_97\">Patch #97 - 1999/4/25 - XFree86\n    3.9Pk</a></li>\n\n    <li><a href=\"#xterm_96\">Patch #96 - 1999/4/19 - XFree86\n    3.9Pj</a></li>\n\n    <li><a href=\"#xterm_95\">Patch #95 - 1999/4/5 - XFree86\n    3.9Ph</a></li>\n\n    <li><a href=\"#xterm_94\">Patch #94 - 1999/3/27 - XFree86\n    3.9Pf</a></li>\n\n    <li><a href=\"#xterm_93\">Patch #93 - 1999/3/14 - XFree86\n    3.9Pd</a></li>\n\n    <li><a href=\"#xterm_92\">Patch #92 - 1999/2/5 - XFree86\n    3.9Nz</a></li>\n\n    <li><a href=\"#xterm_91\">Patch #91 - 1999/1/21 - XFree86\n    3.9Nw</a></li>\n\n    <li><a href=\"#xterm_90\">Patch #90 - 1998/12/13 - XFree86\n    3.9Nq</a></li>\n\n    <li><a href=\"#xterm_89\">Patch #89 - 1998/11/20 - XFree86\n    3.9Nm</a></li>\n\n    <li><a href=\"#xterm_88\">Patch #88 - 1998/10/31 - XFree86 3.9Nk\n    and 3.3.2h</a></li>\n\n    <li><a href=\"#xterm_87\">Patch #87 - 1998/10/21 - XFree86 3.9Nj\n    and 3.3.2f</a></li>\n\n    <li><a href=\"#xterm_86\">Patch #86 - 1998/10/14 - XFree86 3.9Nj\n    and 3.3.2e</a></li>\n\n    <li><a href=\"#xterm_85\">Patch #85 - 1998/10/12 - XFree86 3.9Nj\n    and 3.3.2e</a></li>\n\n    <li><a href=\"#xterm_84\">Patch #84 - 1998/10/9 - XFree86 3.9Ni\n    and 3.3.2e</a></li>\n\n    <li><a href=\"#sync_83\">Resync #83 - 1998/10/7 - XFree86\n    3.3.2e</a></li>\n\n    <li><a href=\"#xterm_83\">Patch #83 - 1998/8/25 - XFree86\n    3.9Nb</a></li>\n\n    <li><a href=\"#xterm_82\">Patch #82 - 1998/7/15 - XFree86\n    3.9Aj</a></li>\n\n    <li><a href=\"#xterm_81\">Patch #81 - 1998/7/14 - XFree86\n    3.9Aj</a></li>\n\n    <li><a href=\"#xterm_80\">Patch #80 - 1998/6/29 - XFree86\n    3.9Ai</a></li>\n\n    <li><a href=\"#xterm_79\">Patch #79 - 1998/6/28 - XFree86\n    3.9Ai</a></li>\n\n    <li><a href=\"#xterm_78\">Patch #78 - 1998/6/3 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_77\">Patch #77 - 1998/5/26 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_76\">Patch #76 - 1998/5/8 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_75\">Patch #75 - 1998/5/7 - XFree86 3.9Ah\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_74\">Patch #74 - 1998/4/27 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_73\">Patch #73 - 1998/4/25 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_72\">Patch #72 - 1998/4/17 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_71\">Patch #71 - 1998/4/12 - XFree86 3.9Ag\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_70\">Patch #70 - 1998/3/29 - XFree86 3.9Af\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_69\">Patch #69 - 1998/3/16 - XFree86 3.9Ad\n    and 3.3.2</a></li>\n\n    <li><a href=\"#xterm_68\">Patch #68 - 1998/3/4 - XFree86 3.9Ad\n    and 3.3.1z</a></li>\n\n    <li><a href=\"#xterm_67\">Patch #67 - 1998/2/23 - XFree86 3.9Ad\n    and 3.3.1e</a></li>\n\n    <li><a href=\"#xterm_66\">Patch #66 - 1998/2/16 - XFree86 3.9Ad\n    and 3.3.1d</a></li>\n\n    <li><a href=\"#xterm_65\">Patch #65 - 1998/2/14 - XFree86 3.9Ad\n    and 3.3.1c</a></li>\n\n    <li><a href=\"#xterm_64\">Patch #64 - 1998/2/8 - XFree86\n    3.9Ad</a></li>\n\n    <li><a href=\"#xterm_63\">Patch #63 - 1998/2/5 - XFree86\n    3.9Ad</a></li>\n\n    <li><a href=\"#xterm_62\">Patch #62 - 1998/1/23 - XFree86\n    3.9Ac</a></li>\n\n    <li><a href=\"#xterm_61\">Patch #61 - 1998/1/17 - XFree86\n    3.9Ac</a></li>\n\n    <li><a href=\"#xterm_60\">Patch #60 - 1998/1/10 - XFree86\n    3.9Ab</a></li>\n\n    <li><a href=\"#xterm_59\">Patch #59 - 1998/1/5 - XFree86\n    3.9Ab</a></li>\n\n    <li><a href=\"#xterm_58\">Patch #58 - 1998/1/3 - XFree86\n    3.9Ab</a></li>\n\n    <li><a href=\"#xterm_57\">Patch #57 - 1997/12/26 - XFree86\n    3.9Aa</a></li>\n\n    <li><a href=\"#xterm_56\">Patch #56 - 1997/11/28 - XFree86\n    3.9x</a></li>\n\n    <li><a href=\"#xterm_55\">Patch #55 - 1997/11/25 - XFree86\n    3.9x</a></li>\n\n    <li><a href=\"#xterm_54\">Patch #54 - 1997/10/17 - XFree86\n    3.9s</a></li>\n\n    <li><a href=\"#xterm_53\">Patch #53 - 1997/10/12 - XFree86\n    3.9r</a></li>\n\n    <li><a href=\"#xterm_52\">Patch #52 - 1997/9/29 - XFree86\n    3.9q</a></li>\n\n    <li><a href=\"#xterm_51\">Patch #51 - 1997/9/15 - XFree86\n    3.9p</a></li>\n\n    <li><a href=\"#xterm_50\">Patch #50 - 1997/8/22 - XFree86\n    3.9m</a></li>\n\n    <li><a href=\"#xterm_49\">Patch #49 - 1997/8/10 - XFree86\n    3.9k</a></li>\n\n    <li><a href=\"#xterm_48\">Patch #48 - 1997/7/26 - XFree86\n    3.9j</a></li>\n\n    <li><a href=\"#xterm_47\">Patch #47 - 1997/7/13 - XFree86\n    3.9i</a></li>\n\n    <li><a href=\"#xterm_46\">Patch #46 - 1997/7/4 - XFree86 3.9h</a></li>\n\n    <li><a href=\"#xterm_45\">Patch #45 - 1997/7/2 - XFree86 3.9h</a></li>\n\n    <li><a href=\"#xterm_44\">Patch #44 - 1997/6/22 - XFree86\n    3.9g</a></li>\n\n    <li><a href=\"#xterm_43\">Patch #43 - 1997/6/10 - XFree86\n    3.9d</a></li>\n\n    <li><a href=\"#xterm_42\">Patch #42 - 1997/6/8 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_41\">Patch #41 - 1997/5/28 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_40\">Patch #40 - 1997/5/26 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_39\">Patch #39 - 1997/5/24 - XFree86\n    3.2Xl</a></li>\n\n    <li><a href=\"#xterm_38\">Patch #38 - 1997/5/22 - XFree86\n    3.2Xh</a></li>\n\n    <li><a href=\"#xterm_37\">Patch #37 - 1997/5/7 - XFree86 3.9a</a></li>\n\n    <li><a href=\"#xterm_36\">Patch #36 - 1997/1/16 - XFree86\n    3.2r</a></li>\n\n    <li><a href=\"#xterm_35\">Patch #35 - 1997/1/7 - XFree86 3.2o</a></li>\n\n    <li><a href=\"#xterm_34\">Patch #34 - 1997/1/5 - XFree86 3.2o</a></li>\n\n    <li><a href=\"#xterm_33\">Patch #33 - 1996/11/24 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_32\">Patch #32 - 1996/11/21 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_31\">Patch #31 - 1996/11/16 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_30\">Patch #30 - 1996/11/16 - XFree86\n    3.2</a></li>\n\n    <li><a href=\"#xterm_29\">Patch #29 - 1996/9/15 - XFree86\n    3.1.2Gb</a></li>\n\n    <li><a href=\"#xterm_28\">Patch #28 - 1996/8/31 - XFree86\n    3.1.2F</a></li>\n\n    <li><a href=\"#xterm_27\">Patch #27 - 1996/8/21 - XFree86\n    3.1.2Ek</a></li>\n\n    <li><a href=\"#xterm_26\">Patch #26 - 1996/8/20 - XFree86\n    3.1.2Ei</a></li>\n\n    <li><a href=\"#xterm_25\">Patch #25 - 1996/8/18 - XFree86\n    3.1.2Ei</a></li>\n\n    <li><a href=\"#xterm_24\">Patch #24 - 1996/8/11 - XFree86\n    3.1.2Ee</a></li>\n\n    <li><a href=\"#xterm_23\">Patch #23 - 1996/7/31 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_22\">Patch #22 - 1996/7/26 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_21\">Patch #21 - 1996/7/24 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_20\">Patch #20 - 1996/7/24 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_19\">Patch #19 - 1996/7/21 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_18\">Patch #18 - 1996/7/18 - XFree86\n    3.1.2Ec</a></li>\n\n    <li><a href=\"#xterm_17\">Patch #17 - 1996/7/2 - XFree86\n    3.1.2Eb</a></li>\n\n    <li><a href=\"#xterm_16\">Patch #16 - 1996/6/25 - XFree86\n    3.1.2Ea</a></li>\n\n    <li><a href=\"#xterm_15\">Patch #15 - 1996/5/29 - XFree86\n    3.1.2E</a></li>\n\n    <li><a href=\"#xterm_14\">Patch #14 - 1996/5/12 - XFree86\n    3.1.2Dj</a></li>\n\n    <li><a href=\"#xterm_13\">Patch #13 - 1996/4/23 - XFree86\n    3.1.2Df</a></li>\n\n    <li><a href=\"#xterm_12\">Patch #12 - 1996/3/16 - XFree86\n    3.1.2Dc</a></li>\n\n    <li><a href=\"#xterm_11\">Patch #11 - 1996/3/5 - XFree86\n    3.1.2Db</a></li>\n\n    <li><a href=\"#xterm_10\">Patch #10 - 1996/2/14 - XFree86\n    3.1.2Cd</a></li>\n\n    <li><a href=\"#xterm_09\">Patch #9 - 1996/2/10 - XFree86\n    3.1.2Cb</a></li>\n\n    <li><a href=\"#xterm_08\">Patch #8 - 1996/2/9 - XFree86\n    3.1.2Cb</a></li>\n\n    <li><a href=\"#xterm_07\">Patch #7 - 1996/1/28 - XFree86\n    3.1.2n</a></li>\n\n    <li><a href=\"#xterm_06\">Patch #6 - 1996/1/8</a></li>\n\n    <li><a href=\"#xterm_05\">Patch #5 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_04\">Patch #4 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_03\">Patch #3 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_02\">Patch #2 - 1996/1/7</a></li>\n\n    <li><a href=\"#xterm_01\">Patch #1 - 1996/1/6</a></li>\n  </ul>\n\n  <h1><a name=\"xterm_dev\" id=\"xterm_dev\">Development</a></h1>\n\n  <ul>\n    <li>correct upper-limit for selection buffer, accounting for\n    combining characters (report by Tavis Ormandy).</li>\n\n    <li>with <code>alwaysHighlight</code> true, xterm does not\n    properly track focus. The <em>screen-&gt;select</em>\n    <code>FOCUS</code> flag remains always on, which prevents\n    <code>bellIsUrgent</code> from working, as the urgent\n    <code>WM_HINT</code> flag is only set in\n    <code>setXUrgency()</code> when the window is not focused. Fix\n    this by updating <em>screen-&gt;select</em> in\n    <code>unselectwindow()</code> regardless of the value of\n    <code>always_highlight</code> (patch by Jiri Bohac).</li>\n\n    <li>improve fix for interaction between SRM and ENQ (report by\n    Grant Taylor).</li>\n\n    <li>build-fix for <code>--with-Xaw3dxft</code>, needed when\n    <code>--with-toolbar</code> is omitted (report by Jimmy Olgeni,\n    Emanuel Haupt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_365\" id=\"xterm_365\">Patch #365 -\n  2021/02/03</a></h1>\n\n  <ul>\n    <li>amend fix for &ldquo;word&rdquo; selection in <a href=\n    \"#xterm_364\">patch #364</a> to limit that to the\n    <code>insert-selectable</code> <em>action</em>, which reads\n    data from the screen. This restores the interactive behavior\n    where double-clicking on a &ldquo;word&rdquo; would make\n    subsequent selection extensions by words as well as suppressing\n    some boundary-checks (report by David Wolfskill, FreeBSD\n    #253225).</li>\n  </ul>\n\n  <h1><a name=\"xterm_364\" id=\"xterm_364\">Patch #364 -\n  2021/02/02</a></h1>\n\n  <ul>\n    <li>add <code>-fc</code> option.</li>\n\n    <li>correct/improve limit-checks for SRM versus ENQ from\n    <a href=\"#xterm_344\">patch #344</a> (report by Tom\n    Szilagyi).</li>\n\n    <li>enable <code>XftFont</code> resource in Xaw3dxft\n    configuration (patch by Tavis Ormandy).</li>\n\n    <li>improve quoting/escaping in build-scripts per\n    shellcheck.</li>\n\n    <li>add <code>libpcre2-posix</code> to the packages tested for\n    <code>--with-pcre2</code> option, needed with Fedora (report by\n    Tomas Korbar).</li>\n\n    <li>correct a typo in manual page, and note that\n    <code>KeepClipboard</code> may not be compiled-in (report/patch\n    by Sean C Farley).</li>\n\n    <li>corrected boundary-checks for &ldquo;word&rdquo; selection\n    used in <code>on<em>N</em>Clicks</code> resources (report by\n    Tavis Ormandy).</li>\n\n    <li>update to autoconf-2.52-20210101, to improve shellcheck\n    warnings.</li>\n\n    <li>improve configure check for desktop categories.</li>\n  </ul>\n\n  <h1><a name=\"xterm_363\" id=\"xterm_363\">Patch #363 -\n  2020/12/26</a></h1>\n\n  <ul>\n    <li>disable groff hyphenation in generated html when using\n    man2html.</li>\n\n    <li>change SCS &ldquo;<code>&amp;4</code>&rdquo; Cyrillic to\n    non-NRCS, per VT520 manual.</li>\n\n    <li>amend fix for SCS in <a href=\"#xterm_198\">patch #198</a> to\n    remove <code>DEL</code> rather than converting it to a space\n    (report by Thomas Wolff).</li>\n\n    <li>modify state transitions for selecting character sets to\n    eliminate an ambiguity between the &ldquo;A&rdquo; used in\n    VT220 versus VT320.</li>\n\n    <li>improve error recovery when selecting characters by\n    resetting to US ASCII when no suitable encoding is found, e.g.,\n    attempting to use an NRCS sequence when NRCS is not\n    enabled.</li>\n\n    <li>turn off hyphenation in &ldquo;<code>.txt</code>&rdquo;\n    conversion, prompted by groff changes.</li>\n\n    <li>add VT5xx ISO Latin-2 (prompted by discussion with Thomas\n    Wolff).</li>\n\n    <li>amend change from <a href=\"#xterm_361\">patch #361</a> to\n    event-handling in <code>CopyWait</code> to handle active-icon\n    as a special case (Debian #975687).</li>\n\n    <li>add call to <code>loadColorTable</code> to get the visual\n    information needed to decode BE RGBA32 color format (patch by\n    Leandro Lupori).</li>\n\n    <li>modify the resource-parsing for\n    <code>disallowedPasteControls</code> and similar lists of\n    names/numbers to recognize &ldquo;~;&rdquo; (tilde) for\n    cancelling a given name/number.</li>\n\n    <li>add ENQ, EOT and NUL to default for\n    <code>disallowedPasteControls</code>.</li>\n\n    <li>change default for <code>disallowedPasteControls</code> to\n    omit the tab character (suggested by Harald Dunkel).</li>\n\n    <li>fix swapped height/width in <code>regisScreenSize</code>\n    and <code>maxGraphicSize</code> resources using \"auto\" value,\n    from <a href=\"#xterm_314\">patch #314</a> (report by Anton\n    Lavrentiev)</li>\n\n    <li>revise <a href=\"#xterm_362\">patch #362</a> change for\n    shift-modifier versus mouse protocol and select/paste by adding\n    resource <code>shiftEscape</code>, which can be enabled via a\n    control sequence (prompted by discussion with Matthijs van\n    Duin).</li>\n\n    <li>simplify/improve ifdef in trace code for using a separate\n    set of files for each run of xterm.</li>\n\n    <li>add options <code>-r</code> and <code>-t</code> to\n    <code>vttests/query-color.pl</code> to show the 6-digit RGB\n    code and actual colors.</li>\n\n    <li>add <code>nel</code> to <code>xterm-basic</code>\n    terminfo.</li>\n\n    <li>alter <code>vttests/modify-keys.pl</code> to omit HTML\n    reference links to the modified-keys table where no keycode was\n    available.</li>\n  </ul>\n\n  <h1><a name=\"xterm_362\" id=\"xterm_362\">Patch #362 -\n  2020/11/11</a></h1>\n\n  <ul>\n    <li>cleanup of calls to <code>free</code>, removing checks for\n    null (Walter Harms).</li>\n\n    <li>improved mouse-button reporting (prompted by discussion\n    with Stephane Chazelas)\n      <ul>\n        <li>narrow the scope of the change for shift-key in\n        <a href=\"#xterm_361\">patch #361</a> to make it apply only\n        when the <code>modifyOtherKeys</code> resource is set to 2\n        (i.e., &ldquo;program mode&rdquo;). Also, when checking the\n        shift-key, ignore modifiers other than shift, control and\n        &ldquo;meta&rdquo;</li>\n\n        <li>use the alt/meta modifier information obtained in\n        <code>VTInitModifiers</code> to replace a hard-coded\n        <em>mod1</em> used to detect &ldquo;Meta&rdquo; for\n        mouse-button responses.</li>\n      </ul>\n    </li>\n\n    <li>reduce <code>SIGWINCH</code>'s sent to the client by\n    filtering out duplicates.</li>\n\n    <li>improve display when <code>scaleHeight</code> is greater\n    than 1:\n      <ul>\n        <li>the text-cursor is vertically-centered on the current\n        line, rather than only extending below the current line\n        (report by Manu Chaturvedi).</li>\n\n        <li>the built-in line-drawing characters extend to the\n        scaled cell-height.</li>\n      </ul>\n    </li>\n\n    <li>fill-in special case for motion-events to match the changes\n    for shift-key in pointer-button events from <a href=\n    \"#xterm_361\">patch #361</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_361\" id=\"xterm_361\">Patch #361 -\n  2020/10/14</a></h1>\n\n  <ul>\n    <li>treat the return value of <code>strerror</code> as readonly\n    (patch by Philipp Klaus Krause).</li>\n\n    <li>modify event-handling in <code>CopyWait</code> to work\n    around hanging while writing large amounts of text to an active\n    icon and at the same time iconifying/deiconifying (report by\n    Dave Kemper).</li>\n\n    <li>initialize double-buffer for active-icon window.</li>\n\n    <li>improve manual page description of scrollbar resources\n    (report by Brian Lindholm).</li>\n\n    <li>correct ifdef for menu entry for active-icon, when\n    initializing it with toolbar configuration.</li>\n\n    <li>add preprocessor option to makefile to set internal\n    definition of pixmaps directory to match the\n    install-configuration (FreeBSD #250036).</li>\n\n    <li>cleanup of calls to <code>free</code>, removing checks for\n    null (Walter Harms).</li>\n\n    <li>add fallback actions <code>pointer-button</code> and\n    <code>pointer-motion</code> which handle events for the mouse\n    control-sequences protocol if the <em>select</em>-related\n    translations are omitted with\n    <code>*omitTranslation:select</code> (prompted by discussion\n    with \"Ergus\")</li>\n\n    <li>amend rule for using shift-key to override mouse-protocol\n    for select/paste to limit that feature to mouse-buttons which\n    are actually bound to select/paste actions (prompted by\n    discussion with \"Ergus\").</li>\n\n    <li>corrected mapping in special case for repainting wrap-marks\n    when viewing the scrollback area.</li>\n\n    <li>use separate <em>GCs</em> for <code>showWrapMarks</code>\n    feature, to work around cursor coloring change in <a href=\n    \"#xterm_345\">patch #345</a> (report by Paulo Silva de\n    Al&iacute;bano).</li>\n  </ul>\n\n  <h1><a name=\"xterm_360\" id=\"xterm_360\">Patch #360 -\n  2020/09/20</a></h1>\n\n  <ul>\n    <li>mention <code>decGraphicsID</code> in\n    <code>ctlseqs.ms</code> (suggested by Thomas Wolff).</li>\n\n    <li>modify pixel-coordinate mouse reponse to use as origin the\n    VT100-window rather than the underlying widget, which includes\n    the scrollbar (report by Thomas Wolff).</li>\n\n    <li>add configure option <code>--disable-print-graphics</code>\n    (Ross Combs).</li>\n\n    <li>add <code>test_ptydata</code> to &ldquo;make check&rdquo;\n    rule.</li>\n\n    <li>minor fixes for <code>ctlseqs.ms</code> (report by\n    Jean-Marc Bourguet).</li>\n\n    <li>minor fixes for manpage style (report/patch by\n    \"a1346054\").</li>\n\n    <li>correct cleanup from switch between italics/normal font in\n    the show/hide cursor functions (report/testcase by Peter\n    Fabinski).</li>\n\n    <li>integrated patch by Ross Combs:\n      <ul>\n        <li>internal renaming of GraphicsID symbols, for\n        readability.</li>\n\n        <li>adjust logic for VT125, treating it as a ReGIS\n        terminal.</li>\n      </ul>\n    </li>\n\n    <li>update configure macros, for compiler-warning fixes.</li>\n\n    <li>integrated patch by Ross Combs:\n      <ul>\n        <li>add control sequence modes for graphics printing.</li>\n\n        <li>improve conversion to bitmaps for TrueType fonts in\n        ReGIS</li>\n\n        <li>add <code>font7</code> resource, for an\n        &ldquo;enormous&rdquo; bitmap font.</li>\n\n        <li>do not reset graphics in a soft-reset.</li>\n\n        <li>add <code>pointerFont</code> resource, and\n        <code>-pf</code> command-line option.</li>\n      </ul>\n    </li>\n\n    <li>improve typography of manual page (patch by Branden\n    Robinson).</li>\n\n    <li>amend <a href=\"#xterm_359\">patch #359</a> change to\n    <code>df-install.in</code> to ignore a command-line assignment\n    to <code>DESTDIR</code> if followed by an explicit\n    <code>--dir</code> (report by Sven Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_359\" id=\"xterm_359\">Patch #359 -\n  2020/08/17</a></h1>\n\n  <ul>\n    <li>add special case in <code>WriteText</code> to allow colors\n    8-15 to override <code>colorBDMode</code> (patch by Ingo\n    Br&uuml;ckl).</li>\n\n    <li>add <code>utf8Weblike</code> resource, to provide an\n    alternate scheme for handling ill-formed UTF-8 sequences\n    (adapted from patch by Dan Gohman).</li>\n\n    <li>improve computation for the number of lines needed to\n    scroll-up a SIXEL graphic (report/patch by Ben Wong).</li>\n\n    <li>correct manpage description for default value of\n    <code>disallowWindowOps</code> from changes in <a href=\n    \"#xterm_331\">xterm #331</a> (patch by Ben Wong).</li>\n\n    <li>correct a loop starting-point in\n    <code>refresh_graphics</code> from optimization in <a href=\n    \"#xterm_358\">patch #358</a> changes (report by Ben Wong).</li>\n\n    <li>add a new mouse mode 1016, which uses the same format as\n    mode 1006, but sends the mouse's position in pixels (suggested\n    by Igor van den Hoven).</li>\n\n    <li>fix an issue from <a href=\"#xterm_338\">patch #338</a>\n    changes where only the first selection buffer specified in the\n    request would be updated using OSC 52 (patch by Michael\n    Gulick).</li>\n\n    <li>modify makefile/scripts to allow <code>DESTDIR</code> to\n    prefix the target directory for desktop-file-install (report by\n    Fred Heitkamp).</li>\n\n    <li>enable SIXEL feature by default.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_358\" id=\"xterm_358\">Patch #358 -\n  2020/07/12</a></h1>\n\n  <ul>\n    <li>correct logic for decodeTerminalID changes in <a href=\n    \"#xterm_357\">patch #357</a> (report by \"Chartreuse\").</li>\n\n    <li>modify makefile to use <code>plink.sh</code> when linking\n    test-programs, to fix build when using pcre (report by H Merijn\n    Brand)</li>\n\n    <li>build-fix for test_ptydata program (patch by H Merijn\n    Brand)</li>\n  </ul>\n\n  <h1><a name=\"xterm_357\" id=\"xterm_357\">Patch #357 -\n  2020/07/05</a></h1>\n\n  <ul>\n    <li>several minor optimizations for the ReGIS and SIXEL\n    features, improving performance by 10%.</li>\n\n    <li>add resource <code>decGraphicsID</code> to allow displaying\n    graphics when the emulation level would ordinarily disallow\n    this (prompted by discussion with Thomas Wolff).</li>\n\n    <li>add control sequences for fast switching of color palettes:\n    <code>XTPUSHCOLORS</code>, <code>XTPOPCOLORS</code>,\n    <code>XTREPORTCOLORS</code></li>\n\n    <li>amend change for soft-hyphen from <a href=\n    \"#xterm_328\">patch #328</a> to avoid stripping\n    replacement-characters which would be shown with malformed or\n    overlong UTF-8 input.</li>\n\n    <li>corrected an error-handling case in\n    <code>decodeUtf8</code>, matching a similar fix in <a href=\n    \"#xterm_268\">patch #268</a> (report/patch by Dan Gohman).</li>\n\n    <li>add a test-driver for <code>ptydata.c</code></li>\n\n    <li>minor cleanup of macros (adapted from patch by Walter\n    Harms).</li>\n\n    <li>fix some errata in <code>ctlseqs.ms</code> (report by\n    Thomas Wolff).</li>\n\n    <li>allow immediate repaint-on-palette-changed if\n    double-buffering is enabled.</li>\n\n    <li>deprecate codes 10/11 in sgr push controls, changing those\n    to 30/31, to avoid confusion with sgr 10-19.</li>\n\n    <li>modify <code>SGR</code> parameter handling to stop if an\n    unrecognized parameter is encountered, to guard against\n    malformed or nonstandard sequences (report by Bram\n    Moolenaar).</li>\n\n    <li>modify <code>DECERA</code> color for consistency with other\n    erasures/clearing (report by Thomas Wolff).</li>\n\n    <li><code>ECH</code> should not be masked by\n    <code>DECSCA</code> (report by Thomas Wolff).</li>\n\n    <li>extend <code>DECFRA</code> and <code>REP</code> to accept\n    any &ldquo;graphic&rdquo; character rather than just Latin1,\n    etc. (report by Thomas Wolff).</li>\n\n    <li>add <code>-C</code> option to 256colors2.pl and\n    88colors2.pl, to demonstrate mixed semicolon/colon separators\n    which are implied by ECMA-48.</li>\n\n    <li>update sample terminfo to reflect the documentation\n    improvements.</li>\n\n    <li>update description of 88/256/direct color in\n    <code>ctlseqs.ms</code> to point out that using semicolons is a\n    deprecated legacy feature, and standard terminal applications\n    should use colons (prompted by discussion with Bram\n    Moolenaar).</li>\n\n    <li>modify configure-check for <code>tgetent</code> to\n    conditionally include <code>termcap.h</code>, enabling\n    configuration using <code>clang</code>'s pedantic-errors option\n    (report by Dennis Clarke). See <a href=\n    \"https://invisible-island.net/ncurses/man/curs_termcap.3x.html#h3-Other-Compatibility\">\n    <em>Other Compatibility</em></a> in ncurses'\n    <em>curs_termcap(3X)</em>.</li>\n\n    <li>remove some unnecessary pointer checks (patch by Walter\n    Harms).</li>\n\n    <li>accept terminal-id and add DA response for VT131,\n    VT132.</li>\n  </ul>\n\n  <h1><a name=\"xterm_356\" id=\"xterm_356\">Patch #356 -\n  2020/05/02</a></h1>\n\n  <ul>\n    <li>revise fix for Debian #954730, which interfered with wheel\n    mouse events (report by Gabriele Balducci).</li>\n  </ul>\n\n  <h1><a name=\"xterm_355\" id=\"xterm_355\">Patch #355 -\n  2020/05/01</a></h1>\n\n  <ul>\n    <li>revise fix for Debian #954730, which interfered with wheel\n    mouse events (report by Henri Menke).</li>\n\n    <li>fix typos in documentation (reports by Stephen Hurd, Stefan\n    Assmann).</li>\n\n    <li>add mapping for <code>decTerminalID</code> for\n    &ldquo;100&rdquo; overlooked in <a href=\"#xterm_354\">patch\n    #354</a>.</li>\n\n    <li>update tables in wcwidth.c based on Unicode 13.0.0</li>\n\n    <li>build-fix for &ldquo;make check&rdquo; when building\n    out-of-tree (report by Sven Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_354\" id=\"xterm_354\">Patch #354 -\n  2020/04/26</a></h1>\n\n  <ul>\n    <li>work around performance problems of\n    <code>XDrawImageString</code> and\n    <code>XDrawImageString16</code> functions (Debian\n    #954845).</li>\n\n    <li>add a control sequence which reports xterm's version (patch\n    by Nicholas Marriott, mintty #881).</li>\n\n    <li>temporarily set numeric locale category to \"C\" when parsing\n    resources, so that <code>scaleHeight</code> and\n    <code>faceSize</code> settings do not depend on locale (Debian\n    #820803).</li>\n\n    <li>improve DA/DA2 response by ensuring that the\n    <code>decTerminalID</code> maps to one of the known\n    identifiers, as well as providing DA2 response for VT241 and\n    VT382.</li>\n\n    <li>terminfo improvements:\n      <ul>\n        <li>add (my) comments from ncurses which explain the keypad\n        layouts.</li>\n\n        <li>add <code>vt52+keypad</code> from ncurses</li>\n\n        <li>use improved <code>xm</code> example for\n        <code>xterm+x11mouse</code>, <code>xterm+sm+1006</code>\n        from ncurses 6.2 terminfo.src</li>\n      </ul>\n    </li>\n\n    <li>two fixes for left/right wheel mouse event reporting\n    (Debian #954730):\n      <ul>\n        <li>filter identical button-events</li>\n\n        <li>correct order of button-range versus protocol type (see\n        <a href=\"#xterm_345\">patch #345</a>)</li>\n      </ul>\n    </li>\n\n    <li>change &ldquo;make check&rdquo; makefile-rule to use\n    test-drivers for charclass and wcwidth data.</li>\n\n    <li>quiet &ldquo;did not find a usable <em>xxx</em> TrueType\n    font&rdquo; warnings by making <code>fontWarnings</code> apply\n    to these messages (report by Jim Rees).</li>\n\n    <li>improve reinitialization of parameter list (report/testcase\n    by James Holderness).</li>\n\n    <li>temporarily set numeric locale category to \"C\" when\n    formatting SVG or XHTML screendumps, to make the radix\n    separator used in RGB values consistent (adapted from patch by\n    George Kouryachy).</li>\n\n    <li>add resource <code>forceXftHeight</code> to control whether\n    workaround from Debian #880407 is used.</li>\n\n    <li>apply updated ascent/descent in workaround from Debian\n    #880407 to fix a 1-pixel gap in built-in vertical lines\n    (report/testcase by Stefan Assmann).</li>\n\n    <li>improve round-off of scaling for built-in line-drawing\n    (prompted by discussion with Stefan Assmann).</li>\n\n    <li>adjust fonts in svg-icon files to accommodate reduced\n    functionality of new pango (report/analysis by YOKOTA\n    Hiroshi).</li>\n\n    <li>improve configure check for X Toolkit library.</li>\n\n    <li>correct Y-coordinate transformation in\n    <code>ClearCurBackground</code>, overlooked in changes for\n    <a href=\"#xterm_334\">patch #334</a> (report/analysis by Chuck\n    Silvers).</li>\n\n    <li>remove <code>--vendor</code> option from test-packages'\n    install of desktop files; the feature is badly broken in\n    <em>gnome-shell</em>.</li>\n\n    <li>modify <code>uxterm</code> to make it possible to select\n    nonstandard locale <em>C.UTF-8</em>, e.g, if the user's locale\n    is set to &ldquo;C&rdquo; (Debian #940626).</li>\n\n    <li>re-save/tweak &ldquo;.svg&rdquo; icon-files to work around\n    breakage in toolset since the files were created in <a href=\n    \"#xterm_283\">patch #283</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_353\" id=\"xterm_353\">Patch #353 -\n  2020/02/01</a></h1>\n\n  <ul>\n    <li>amend change in <a href=\"#xterm_352\">patch #352</a> for\n    button-events to fix a case where some followup events were not\n    processed soon enough (report/patch by Jimmy Aguilar\n    Mena).</li>\n\n    <li>handle <em>MappingNotify</em> X event, to improve recovery\n    when switching keyboard configurations using\n    <code>xkbcomp</code> (prompted by discussion with Frank Mosch,\n    Debian #661295). There is more work needed here, possibly in\n    the X libraries.</li>\n\n    <li>improve discussion of mouse-mode in <code>ctlseqs.ms</code>\n    (suggested by Igor van den Hoven).</li>\n\n    <li>further improve checks for Xft <em>max-advance-width</em>\n    to take into account fonts which use two cells for ambiguous\n    width characters. Also improve the time used for these checks\n    (reports by Yuri Pankov, Frank Mosch).</li>\n\n    <li>fix a few spelling errors reported by codespell (report by\n    Jens Schleusener).</li>\n\n    <li>modify <code>run-tic.sh</code> to prefer development\n    version of ncurses since changes to terminfo file in <a href=\n    \"#xterm_345\">patch #345</a> rely upon bug-fixes in ncurses\n    (prompted by discussion with Will Senn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_352\" id=\"xterm_352\">Patch #352 -\n  2020/01/16</a></h1>\n\n  <ul>\n    <li>adjust fontsize data to handle a minor inconsistency from\n    recent Xft versions (Debian #880407, adapted from patch by\n    Vincent Lef&egrave;vre).</li>\n\n    <li>add a table to the manual page description of\n    <code>forceBoxChars</code> to alert the reader to the special\n    characters aside from &ldquo;line-drawing&rdquo; which are\n    drawn directly when this resource is set (Debian #931305).</li>\n\n    <li>improve <code>checkXft</code> logic which attempts to\n    detect fonts whose <em>max-advance-width</em> is inconsistent\n    with the actual glyph widths. For some fonts, it is necessary\n    to check additional characters (report/analysis by Jan\n    Engelhardt).</li>\n\n    <li>improve configure-checks for X headers and libraries on\n    recent MacOS, which has moved those files under\n    <code>/usr/X11</code>.</li>\n\n    <li>improve portability of iconify/deiconify feature by taking\n    into account some window managers which manipulate the EWMH\n    <code>_NET_WM_STATE</code> property, adding/removing\n    <code>_NET_WM_STATE_HIDDEN</code> rather than actually\n    <em>minimizing</em> the window (prompted by discussion with\n    J&ouml;rg Breitbart).</li>\n\n    <li>improve workaround from <a href=\"#xterm_287\">patch #287</a>\n    for the <code>-iconic</code> option when configured with\n    toolbar by postponing the extra request for minimizing the\n    window to the end of menu-initialization.</li>\n\n    <li>modify <code>xevents</code> special-case for mouse-events\n    to include button-events so that the meta key by itself can\n    generate button-events (report/analysis by Mattias\n    Engdeg&aring;rd).</li>\n\n    <li>amend SGR-stack change from <a href=\"#xterm_348\">patch\n    #348</a> to not associate bold attribute with background color\n    (report by Nicholas Marriott).</li>\n\n    <li>fix copy/paste error in manual page (patch by Larry\n    Hynes).</li>\n\n    <li>add definitions in <code>xterm_io.h</code> so that GNU/Hurd\n    will use <code>posix_openpty</code> (patch by Samuel\n    Thibault).</li>\n\n    <li>build-fix in debug-tracing, for <code>esctest</code>.</li>\n\n    <li>updated autoconf macros</li>\n\n    <li>update config.guess</li>\n  </ul>\n\n  <h1><a name=\"xterm_351\" id=\"xterm_351\">Patch #351 -\n  2019/11/17</a></h1>\n\n  <ul>\n    <li>correct logic in <code>property_to_string</code> for\n    deciding when to fallback from UTF-8 decoding to ISO-8859-1\n    decoding, broken in <a href=\"#xterm_350\">xterm #350</a>\n    (FreeBSD #241961).</li>\n\n    <li>add <code>-report-icons</code> to help-message.</li>\n\n    <li>improved autoconf macros:\n      <ul>\n        <li><code>CF_ADD_LIBS</code>: the change to filter out\n        duplicates caused this to append rather than prepend.\n        revise to fix that.</li>\n\n        <li><code>CF_GCC_VERSION</code> and\n        <code>CF_GCC_WARNINGS</code>: move checks to distinguish\n        icc/clang from gcc from the macro which handles the\n        --enable-warnings option, to make this work\n        without-warnings for the inline-checks.</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>correct status in <code>XTGETXRES</code> replies when the\n    resource was not found.</li>\n\n    <li>fix some gcc, cppcheck, clang and coverity warnings.</li>\n\n    <li>guard call to <code>RequestResize</code> from the\n    struct-notify event handler to prevent recursion in the\n    Xft+buffered workaround in some cases when doing manual\n    resizing rather than resizing via escape sequences (reports by\n    Stefan Assmann, Mike Thornburg).</li>\n\n    <li>amend the workaround for Xft+buffered blanking by moving\n    the switch to bitmap-fonts to account for differences in font\n    metrics between bitmap- and TrueType-fonts (report by Stefan\n    Assmann).</li>\n\n    <li>improve the note on the <code>xterm-rep</code> terminfo\n    entry (prompted by discussion with Sven Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_350\" id=\"xterm_350\">Patch #350 -\n  2019/11/02</a></h1>\n\n  <ul>\n    <li>modify html/svg dump to not ignore zero'd/blank cells.</li>\n\n    <li>align terminfo file with ncurses, e.g., add\n    <code>xterm+osc104</code> block.</li>\n\n    <li>improve discussion of <code>modifyOtherKeys</code> in\n    manual page and in <code>ctlseqs.ms</code>.</li>\n\n    <li>add <code>vttests/modify-keys.pl</code> script to\n    illustrate the <code>modifyOtherKeys</code> resource (prompted\n    by discussion with Bram Moolenaar).</li>\n\n    <li>various improvements to <code>ctlseqs.ms</code>, as part of\n    autogenerating links for the website.</li>\n\n    <li>update manual page default for <code>saveLines</code>\n    resource default value (Branden Robinson, Debian #913815).</li>\n\n    <li>add command-line option <code>-report-xres</code> to show\n    the values of the VT100 widget X resources when initialization\n    is complete.</li>\n\n    <li>add a control sequence which, like tcap-query, allows an\n    application to inspect most X resource settings of the VT100\n    widget.</li>\n\n    <li>adjust some optional features to enable them in the imake\n    configuration as they would be by default via the configure\n    script.</li>\n\n    <li>add null-pointer checks to improve error recovery when\n    bitmap fonts are missing or corrupt (report by Jonne\n    Ransijn).</li>\n\n    <li>correct the condition for deleting the EWMH window-title\n    property, i.e., if UTF-8 titles are disabled, rather than if an\n    update to the EWHM property found no change (report by Sven\n    Joachim).</li>\n\n    <li>build-fix for the case when configure\n    <code>--enable-trace</code> is used without\n    <code>--enable-warnings</code> (report by Sven Joachim).</li>\n\n    <li>fix a few minor bugs found with Coverity.</li>\n\n    <li>add a check in <code>property_to_string</code> to avoid\n    translating <code>UTF8_STRING</code> or\n    <code>COMPOUND_TEXT</code> into Latin-1 when UTF-8 encoding is\n    active, e.g., when pushing onto the title-stack while switching\n    to the alternate screen.</li>\n\n    <li>build-fix for the <code>--disable-doublechars</code>\n    configure option (report by Brian Lindholm).</li>\n  </ul>\n\n  <h1><a name=\"xterm_349\" id=\"xterm_349\">Patch #349 -\n  2019/09/22</a></h1>\n\n  <ul>\n    <li>add graphic context to support bold+italics (patch by Quinn\n    Strahl).</li>\n\n    <li>document window properties in the manual page.</li>\n\n    <li>improve title-string feature:\n      <ul>\n        <li>if any of <code>allowC1Printable</code>,\n        <code>utf8Title</code> or <code>titleModes</code> hint that\n        an application might send a title-string encoded in UTF-8,\n        check if that is the case, and if it is recodable into\n        ISO-8859-1, use that for the ICCCM-style title.</li>\n\n        <li>check if the title given by a control sequence happens\n        to be already encoded in UTF-8, to avoid double-encoding\n        (FreeBSD #240393).</li>\n\n        <li>Make <code>sameName</code> resource work for the EWMH\n        titles.</li>\n\n        <li>Modify menu-state of <code>utf8Title</code> to be\n        consistent with the <code>utf8</code> source, i.e., setting\n        the EWMH properties automatically when UTF-8 is\n        active.</li>\n      </ul>\n    </li>\n\n    <li>reorganize text-drawing to make it possible to investigate\n    using Xft to implement VT100-style double-sized characters.\n    While doing this, made a workaround for apparent Xft bug which\n    loses its drawable state when switching from 132 to 80\n    columns.</li>\n\n    <li>improve font-warning messages by showing which are\n    <em>derived</em> rather than directly from resource settings\n    (suggested by Tomas Korbar). Also filter repeated font-warning\n    messages, to accommodate broken X configurations.</li>\n\n    <li>fix an inconsistency between failure to load derived wide\n    font versus failure to load derived wide-bold font (Redhat\n    #1679790). That relies upon the &ldquo;:unscaled&rdquo;\n    property which is broken in some distributions (however, recent\n    Debian and the BSDs such as MacOS work).</li>\n\n    <li>updated autoconf-252 to check X11R7 include/lib directories\n    found on some older configurations.</li>\n\n    <li>set a graphic-context for border when double-buffering is\n    active; to prevent the border color from changing when\n    switching to reverse-video.</li>\n\n    <li>build-fix for <code>--disable-ziconbeep</code>, which\n    conflicted with the new double-buffer configuration (report by\n    Brian Lindholm).</li>\n\n    <li>fix loop-limit for lookup of <code>fullscreen</code>\n    resource broken in <a href=\"#xterm_347\">xterm #347</a> (report\n    by Scott Bertilson).</li>\n  </ul>\n\n  <h1><a name=\"xterm_348\" id=\"xterm_348\">Patch #348 -\n  2019/07/22</a></h1>\n\n  <ul>\n    <li>update window-manager hints when exiting Tek4014 mode\n    (Debian #932569, patch by Jonathan Irwin).</li>\n\n    <li>fix a misformatted printf in\n    <code>report-sgr.pl</code>.</li>\n\n    <li>add configure check for termios types, to improve\n    compiler-warnings.</li>\n\n    <li>ensure that when resetting margins, to also reset\n    <code>DECLRMM</code>. This affects <code>DECCOLM</code>,\n    <code>DECALN</code> (although DEC STD 070 mentions only\n    top/bottom margins), and <code>DECSTR</code>.</li>\n\n    <li>corrected order of reset/move when setting\n    <code>DECCOLM</code>, and make it more consistent by always\n    resetting margins, rather than only when the mode is changed\n    (report by James Holderness).</li>\n\n    <li>compile-in double-buffer support by default, changing the\n    configure option to set the default resource value for\n    <code>buffered</code> to true or false.</li>\n\n    <li>take in account the reverse-video state when computing the\n    filler-color used when clearing the screen in double-buffering\n    configuration.</li>\n\n    <li>correct logic for filtering scrollbar-updates when\n    <code>buffered</code> resource is compiled-in but not enabled\n    (report by Paul Lampert).</li>\n\n    <li>improve state saved/restored for cursor-save and SGR stack\n    features.</li>\n\n    <li>improve description of 1006 and 1005 mouse modes, to avoid\n    implying that they use character-parameters (report by Bryan\n    Christ).</li>\n\n    <li>explain in <code>ctlseqs.ms</code> that some of the numeric\n    keypad keys were xterm extensions rather than VT100/VT220\n    terminal features (prompted by discussion with Thomas\n    Wolff).</li>\n\n    <li>explain in <code>ctlseqs.ms</code> how the DEC windowing\n    extension is supported by xterm.</li>\n\n    <li>add 28 rectangular editing to the primary response\n    (suggested by Thomas Wolff).</li>\n\n    <li>fix a typo, improve wording in <code>ctlseqs.ms</code>\n    (Thomas Wolff).</li>\n\n    <li>fix internal column-parameter when <code>SL</code> or\n    <code>SR</code> is used with left/right margins (patch by\n    Thomas Wolff).</li>\n\n    <li>fix off-by-one in VT52 graphics character mapping (patch by\n    Thomas Wolff).</li>\n\n    <li>use <code>_X_UNUSED</code>, etc., when available as a\n    fallback for <code>GCC_UNUSED</code>, etc., to reduce compiler\n    warnings when building with <code><em>imake</em></code>.</li>\n\n    <li>update config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_347\" id=\"xterm_347\">Patch #347 -\n  2019/06/30</a></h1>\n\n  <ul>\n    <li>fix a few minor bugs found with Coverity.</li>\n\n    <li>improve double-buffering for scrollbars combined with\n    scrolled text; add <code>bufferedFPS</code> resource to control\n    the maximum rate of screen updates (report by Mike\n    Thornburg).</li>\n\n    <li>improve fixes for <code>DECCRA</code> handling of\n    double-width characters (patch by Martin Hostettler).</li>\n\n    <li>improve discussion of ECMA-48's typographical error for\n    <code>SD</code> in <code>ctlseqs.ms</code> (prompted by report\n    by Martin Hostettler).</li>\n\n    <li>correct off-by-one in parameter limit-check for\n    <code>DECCRA</code> (report by Martin Hostettler).</li>\n\n    <li>modify <code>saveCellData</code> to handle case where\n    double-width character is partially copied; that should be\n    blanked (report/testcase by Thomas Wolff).</li>\n\n    <li>add resource <code>buffered</code> to allow\n    enabling/disabling double-buffered mode.</li>\n\n    <li>two fixes for the double-buffer configuration, prompted by\n    MacPorts' switch to double-buffering (patch by Mike Thornburg,\n    MacPorts #58313):\n      <ul>\n        <li>ensure that the needSwap flag is set after drawing\n        TrueType text</li>\n\n        <li>corrected the drawable-parameter used for the\n        bar-cursor</li>\n      </ul>\n    </li>\n\n    <li>modify <code>ScrnRefresh</code> to ignore a case where the\n    left/right halves of a double-width character have been set to\n    different video attributes. The attribute to use is in the\n    left-half (report/testcase by Thomas Wolff).</li>\n\n    <li>correct a limit-check for <code>DECCRA</code> in case the\n    target lies off-screen (report/testcase by Thomas Wolff).</li>\n\n    <li>documentation errata (report by Thomas Wolff).</li>\n\n    <li>reset flags including wraparound and reverse-wrap when\n    switching to VT52 mode, while noting that DEC's standard\n    documentation leaves that behavior <em>undefined</em> (report\n    by Thomas Wolff).</li>\n\n    <li>ensure that italic font is turned off on hard/soft resets\n    (report by Martin Hostettler).</li>\n\n    <li>improve responsiveness to X events while processing HTML or\n    SVG dumps (report by Martin Hostettler).</li>\n\n    <li>replace logic in <code>wcwidth.c</code> for detecting\n    double-width characters with binary-search table generated\n    using updated <code>uniset</code> (report by Robert Ross).</li>\n\n    <li>add test-driver for <code>wcwidth.c</code> to simplify\n    comparison with system's <code>wcwidth</code>.</li>\n\n    <li>ensure that window-manager name comparisons work when\n    active-icon is enabled, since <code><em>CSI</em>13t</code> uses\n    the window-manager name (report by Glenn Golden, Arch\n    #62818).</li>\n\n    <li>trim a stray &ldquo;experimental&rdquo; in one of the\n    comments about the tcap-query feature, which has been a\n    supported feature since 2008 (see <a href=\"#xterm_238\">patch\n    #238</a>).</li>\n  </ul>\n\n  <h1><a name=\"xterm_346\" id=\"xterm_346\">Patch #346 -\n  2019/05/27</a></h1>\n\n  <ul>\n    <li>update description of the &ldquo;default&rdquo; setting for\n    the <code>renderFont</code> resource to match the behavior in\n    <a href=\"#xterm_261\">patch #261</a> (Debian #862042).</li>\n\n    <li>account for <code>internalBorder</code> in\n    <code>useBorderClipping</code> (report by Robert Ross).</li>\n\n    <li>update table of unknown-width characters in wcwidth.c based\n    on Unicode 12.1.0 (prompted by discussion with Robert\n    Ross).</li>\n\n    <li>improve description of DECSCL versus S7C1T and S8C1T in\n    <code>ctlseqs.ms</code>.</li>\n\n    <li>improve consistency between <code><em>CSI</em>3t</code> and\n    <code><em>CSI</em>13t</code>, accounting for differences\n    between some window managers' handling of EMWH extents (report\n    by Bram Moolenaar).</li>\n\n    <li>fix a sign-extension when reporting offscreen window\n    position (report by Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_345\" id=\"xterm_345\">Patch #345 -\n  2019/05/14</a></h1>\n\n  <ul>\n    <li>updated FreeBSD test-package from recent /usr/ports\n    scripts.</li>\n\n    <li>workaround in <code>run-tic.sh</code> for HPUX, whose\n    <code>mktemp</code> prints the name of a temporary directory\n    without creating it.</li>\n\n    <li>add left/right margin capabilities to terminfo, since the\n    default terminal emulation is VT420 (suggested by Thomas\n    Wolff).</li>\n\n    <li>modify treatment of <code>reverseVideo</code> for dynamic\n    colors to make text foreground/background consistent with the\n    cursor color (prompted by discussion with Ben Wong, lsix\n    #20).</li>\n\n    <li>modify button-handling to make SGR button-release distinct\n    from button-press for button-codes starting with 8 (patch by\n    Mikulas Patocka).</li>\n\n    <li>add aliases for the sgr push/pop controls to work around\n    language limitations of C# (request by Dan Thompson).</li>\n\n    <li>correct a typo in <code>setDirectFG</code>, which could\n    cause setting of indexed-color after a direct-color to be\n    ignored.</li>\n\n    <li>add resource <code>useBorderClipping</code> as an\n    alternative to <code>useClipping</code> (request by Robert\n    Ross).</li>\n\n    <li>improve logic for displaying xterm's built-in line-drawing\n    characters vs missing glyphs, e.g., for U+2409 to U+240D (patch\n    by Robert Ross).</li>\n\n    <li>add <code>vttests/sgrPushPop2.pl</code> to illustrate how\n    selective pushes work, as well as to demonstrate push/pop of\n    the various color types supported by xterm.</li>\n\n    <li>fix a special case in <code>XTPOPSGR</code> where\n    direct-colors were not checked as a dependency of\n    indexed-colors, contrary to documentation.</li>\n\n    <li>reduce buffer-flushes for <code>OSC&nbsp;4</code> and\n    <code>OSC&nbsp;5</code> color-queries, as well as in the\n    queries for dynamic colors.<br>\n    <strong>Note:</strong> this change makes the reply for\n    <code>OSC&nbsp;5</code> use the &ldquo;5&rdquo; in the\n    response; formerly it was mapped to &rdquo;4&rdquo; after\n    adding the maximum number of colors.</li>\n\n    <li>modify <code>vttests/query-color.pl</code> to demonstrate\n    multiple queries in one request.</li>\n\n    <li>update tables of combining and unknown-width characters in\n    wcwidth.c based on Unicode 12.0.0.</li>\n\n    <li>modify response for <code>OSC&nbsp;5</code> to be\n    consistent with documentation.</li>\n\n    <li>add <code>vttests/query-dynamic.pl</code></li>\n\n    <li>modify <code>vttests/query-color.pl</code> to accept bold,\n    underline, etc., keywords to decide whether to use\n    <code>OSC&nbsp;5</code> rather than\n    <code>OSC&nbsp;4</code>.</li>\n\n    <li>modify cursor coloring to avoid a case where the cursor\n    matched the foreground color while the text was displayed in\n    reverse-video (report by Nuno Silva).</li>\n\n    <li>fix an inconsistency in X10 mouse responses from <a href=\n    \"#xterm_342\">patch #342</a> changes; the legacy protocol\n    supports only buttons 1-3.</li>\n\n    <li>reduce the number of buffer-flushes for tcap-query\n    batches.</li>\n\n    <li>modify <code>tcapquery.pl</code> to demonstrate batch\n    queries with <code>-q</code> option.</li>\n\n    <li>increase response-buffer size, and make it configurable as\n    <code>limitResponse</code> (prompted by discussion with Stephen\n    P Wall).</li>\n\n    <li>modified configure script:\n      <ul>\n        <li>check/workaround for non-POSIX manipulation of\n        predefined symbols</li>\n\n        <li>check for updated X Toolkit, which uses\n        <code>const</code>.</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>provide for secondary-selection, overlooked in <a href=\n    \"#xterm_338\">patch #338</a> (report by Emile LeBlanc).</li>\n\n    <li>documentation errata (patch by Larry Hynes).</li>\n\n    <li>improve pointer-checks in <code>Tekproc.c</code></li>\n\n    <li>revise solution for Debian #919475, to allow for\n    struct-notify events occurring as a side-effect of toggling\n    to/from full-screen mode.</li>\n\n    <li>window's border-size was incorrectly added to position when\n    maximizing window (report by Gary Langshaw).</li>\n  </ul>\n\n  <h1><a name=\"xterm_344\" id=\"xterm_344\">Patch #344 -\n  2019/02/12</a></h1>\n\n  <ul>\n    <li>add ASCII escape to default for\n    <code>disallowedPasteControls</code> (prompted by discussion\n    with Martin Hostettler).</li>\n\n    <li>fix typo in <code>ctlseqs.ms</code> (Robert Ross).</li>\n\n    <li>implement DEC Cyrillic NRCS (based on screenshots of vttest\n    provided by Markus Schmidt).</li>\n\n    <li>correct control returning sixel geometry maximum versus\n    actual size (patch by Ben Wong).</li>\n\n    <li>improve manual page for <code>resize</code> to clarify that\n    <code>resize</code> does not execute the shell commands which\n    it generates for setting environment variables.</li>\n\n    <li>improve memory-management for parser, to handle response\n    strings that might occur with <code>ENQ</code> or when\n    <code>SRM</code> mode is active (patch by Martin\n    Hostettler).</li>\n\n    <li>change <code>Comment</code> text in uxterm's desktop file\n    to work around a limitation of GNOME's GIO application\n      (<a href=\"https://gitlab.gnome.org/GNOME/gnome-shell/issues/940#note_427334\">issue\n      #940</a>). The <a href=\n      \"https://developer.gnome.org/gio/stable/gio-Desktop-file-based-GAppInfo.html#g-desktop-app-info-search\">\n      documentation</a> reads:\n      <blockquote>\n        <p>Searches desktop files for ones that match\n        <em><code>search_string</code></em>.</p>\n\n        <p>The return value is an array of <em>strv</em>s. Each\n        <em>strv</em> contains a list of applications that matched\n        search_string with an equal score. The outer list is sorted\n        by score so that the first <em>strv</em> contains the\n        best-matching applications, and so on. The algorithm for\n        determining matches is undefined and may change at any\n        time.</p>\n      </blockquote>\n    </li>\n\n    <li>a check of <code>zIconBeep</code> resource was removed in\n    double-buffer fix in <a href=\"#xterm_334\">patch #334</a>. That\n    is used to decide whether to handle struct-notify events. When\n    xterm does handle the events, it may negotiate a new\n    window-size with the window manager. In that case, the\n    <code>limitResize</code> resource setting limited the new\n    window-size to the screen-size. Amended that by eliminating the\n    limit for this special case when double-buffer is configured,\n    and restoring the check for <code>zIconBeep</code> when\n    double-buffer is not configured (Debian #919475).</li>\n\n    <li>disallow recursion which could happen if a user configures\n    the <code>answerbackString</code> resource with the\n    <code>ENQ</code> code and experiments with that code when\n    <code>SRM</code> is enabled (report by by Martin\n    Hostettler).</li>\n\n    <li>add remaining credits in <code>COPYING</code> file.</li>\n\n    <li>modify <code>run-tic.sh</code> to check if it is using an\n    older version of ncurses which does not support large terminal\n    descriptions, and if so, remove a non-essential feature to keep\n    within the 4096-byte legacy limit.</li>\n  </ul>\n\n  <h1><a name=\"xterm_343\" id=\"xterm_343\">Patch #343 -\n  2019/01/13</a></h1>\n\n  <ul>\n    <li>modify <code>run-tic.sh</code> to prefer ncurses6 over\n    ncurses5, when available.</li>\n\n    <li>add <code>COPYING</code> file, and dummy \"check\" makefile\n    rule for testing Arch packages.</li>\n\n    <li>add/update package scripts for FreeBSD and NetBSD, for\n    testing.</li>\n\n    <li>update tables of combining and ambiguous-width characters\n    in wcwidth.c based on Unicode 11.0.0.</li>\n\n    <li>modify <code>xterm-new</code> sample terminfo entry to\n    correspond to ncurses 6.1, using the SGR 1006 mouse\n    protocol.</li>\n\n    <li>improve manual page discussion of selection ownership\n    versus highlighting (prompted by discussion with Martin\n    Hostettler).</li>\n\n    <li>restore/repair <code>keepClipboard</code> feature which was\n    broken by changes in <a href=\"#xterm_338\">patch #338</a>\n    (report by Martin Hostettler).</li>\n\n    <li>improve documentation for <code>deleteIsDEL</code>\n    resource.</li>\n\n    <li>modify DECRQM response for private mode 1037 to account for\n    cases where the resource <code>deleteIsDEL</code> is initially\n    neither true nor false, but dependent upon the keyboard type\n    (report/analysis by Martin Hostettler).</li>\n\n    <li>clear pointers for pattern/fontset after destroying their\n    data when switching facename with an escape sequence (report by\n    Robert Ross).</li>\n\n    <li>modify logic for TrueType fallback fonts to match the\n    sort-order used by <code>fc-match</code> (report by Robert\n    Ross).</li>\n\n    <li>add resource setting <code>limitFontsets</code> which can\n    be used to limit or disable the new TrueType fontset feature\n    (request by Robert Ross).</li>\n  </ul>\n\n  <h1><a name=\"xterm_342\" id=\"xterm_342\">Patch #342 -\n  2019/01/03</a></h1>\n\n  <ul>\n    <li>limit mouse-button events to 11 buttons in the original\n    protocol, and 15 in the extended mouse-protocol (patch by\n    Martin Hostettler).</li>\n\n    <li>correct calculation for buttons past 11 in\n    <code>mouse-codes</code> sample script (patch by Martin\n    Hostettler).</li>\n\n    <li>disable a supplementary check added in <a href=\n    \"#xterm_341\">patch #341</a> which interferes with using\n    fontconfig to select different-sized bitmap fonts (Arch\n    #61237).</li>\n  </ul>\n\n  <h1><a name=\"xterm_341\" id=\"xterm_341\">Patch #341 -\n  2018/12/24</a></h1>\n\n  <ul>\n    <li>add options to <code>mouse-codes</code> script to\n    demonstrate that the encoding used for mouse events limits\n    button numbers to 11.</li>\n\n    <li>allow mouse button numbers up to 11 using an offset of 128\n    for button numbers 8-11 rather than the offset of 64 used for\n    wheel-mouse, etc., buttons 4-7 in <a href=\"#xterm_338\">patch\n    #338</a> (adapted from patch by Martin Hostettler).</li>\n\n    <li>correct off-by-one right-margin checks for double-width\n    character adjustments in DECERA/DECFRA (patch by Martin\n    Hostettler).</li>\n\n    <li>allocated size of selection buffer was not reset when\n    freeing the buffer in <a href=\"#xterm_338\">patch #338</a>\n    (report/analysis by Stefan Assmann).</li>\n\n    <li>modify the initial pattern passed to fontconfig to disallow\n    color bitmap fonts.</li>\n\n    <li>improve error recovery for a case where fontconfig ignores\n    the requested pattern due to override in the user's font\n    configuration (report/testcase by Stefan Assmann).</li>\n  </ul>\n\n  <h1><a name=\"xterm_340\" id=\"xterm_340\">Patch #340 -\n  2018/12/16</a></h1>\n\n  <ul>\n    <li>suppress a spurious warning about fontsets when\n    initializing menus for the toolbar configuration.</li>\n\n    <li>fix some strict compiler warnings.</li>\n\n    <li>improve checks for TrueType font, to help with the case of\n    color bitmap fonts, which fontconfig misrepresents (Arch Linux\n    #58706).</li>\n  </ul>\n\n  <h1><a name=\"xterm_339\" id=\"xterm_339\">Patch #339 -\n  2018/12/12</a></h1>\n\n  <ul>\n    <li>modify <code>CF_GNU_SOURCE</code> macro to treat\n    <em>newlib</em> as similar to <em>glibc</em>, fixing a problem\n    with the configure checks for pseudoterminals in Cygwin\n    overlooked in <a href=\"#xterm_334\">patch #334</a> updates for\n    configure-macros.</li>\n  </ul>\n\n  <h1><a name=\"xterm_338\" id=\"xterm_338\">Patch #338 -\n  2018/12/09</a></h1>\n\n  <ul>\n    <li>ignore <code>$TERMINFO</code> in the configure script if it\n    is set to a non-directory value.</li>\n\n    <li>updated configure macros:\n      <ul>\n        <li><code>CF_WITH_PCRE2</code>, modified to work with\n        Debian's (mis-numbered) pcre3 package.</li>\n\n        <li><code>CF_CC_ENV_FLAGS</code> , report preprocessor\n        options in <code>CFLAGS</code></li>\n\n        <li><code>CF_LD_RPATH_OPT</code> , suppress check if\n        <code>--disable-rpath</code> option was given.</li>\n\n        <li><code>CF_XOPEN_SOURCE</code>, add case for\n        midnightbsd</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>add a check to ensure that the filename parameter passed to\n    <code>XpmReadFileToPixmap</code> is actually a file, since that\n    function does not check (report by Ben Nott).</li>\n\n    <li>amend solution for Debian #758633 to ensure that replies\n    for bracketed paste are not sent while processing a selection\n    for <code>exec-formatted</code> (Debian #913237).</li>\n\n    <li>improve adjustments/clearing for double-width characters in\n    <code>DECERA</code>, <code>DECFRA</code>,\n    <code>DECSERA</code>.</li>\n\n    <li>improve adjustments/clearing for double-width characters\n    when doing vertical scrolling within left/right margins (patch\n    by Martin Hostettler).</li>\n\n    <li>modify wcwidth to encode a few spacing combining marks as\n    regular combining characters.</li>\n\n    <li>change compiled-in default for <code>saveLines</code> to\n    match the resource-file changed in <a href=\"#xterm_192\">patch\n    #192</a> (Debian #913815).</li>\n\n    <li>change default <code>faceSize</code> to 8.0, to simplify\n    switching back/forth between bitmap fonts and TrueType. This\n    was originally (mis)set to 14.0 in <a href=\"#xterm_148\">patch\n    #148</a>.</li>\n\n    <li>add fallback support in Xft configuration for missing\n    glyphs (prompted by discussion with Mike Burns).</li>\n\n    <li>fix a problem with using direct-colors for the background\n    color when clearing/scrolling (report by Nicholas\n    Marriott).</li>\n\n    <li>add a \"sources\" rule for the makefile's generated\n    source.</li>\n\n    <li>add a short explanation in <code>ctlseqs.ms</code>\n    discussing the differences in error-recovery for malformed\n    sequences versus unimplemented features, and amend one case for\n    consistency (prompted by discussion with Martin\n    Hostettler).</li>\n\n    <li>adjusted ifdef's so that the paste64 configure option does\n    not automatically enable the readline-mouse configure\n    option.</li>\n\n    <li>revert the change which prevented concurrent ownership of\n    different selection targets, and instead modify selection\n    storage so that different concurrent requests for different\n    selection targets will be stored/retrieved independently\n    (Debian #901249).</li>\n\n    <li>remove a check which prevented returning button-codes past\n    the documented 4/5 for wheel mouse, and add a script\n    <code>mouse-codes</code> which makes a report showing the\n    various mouse codes for different button/modifier combinations\n    (discussion with P&#345;emysl Janouch).</li>\n\n    <li>improve display and checksum for DEC Special Graphics by\n    mapping 0x5f to 0.</li>\n\n    <li>add a null-pointer check for table-ending in the\n    extended-boolean resource-handling (report by Felix von\n    Leitner).</li>\n\n    <li>remove stray <code>]</code>'s from INSTALL-file (Larry\n    Hynes).</li>\n  </ul>\n\n  <h1><a name=\"xterm_337\" id=\"xterm_337\">Patch #337 -\n  2018/09/21</a></h1>\n\n  <ul>\n    <li>regenerated configure script (report by Sven Joachim).</li>\n\n    <li>revise/improve fix for scrolling in margins\n    (report/analysis by Martin Hostettler):</li>\n\n    <li>amend change to default-translations \"select\" subset to\n    ensure that specific key-press actions are listed before\n    generic key-press actions (reports by H Merijn Brand, Sven\n    Joachim).</li>\n  </ul>\n\n  <h1><a name=\"xterm_336\" id=\"xterm_336\">Patch #336 -\n  2018/09/19</a></h1>\n\n  <ul>\n    <li>ensure that only one of PRIMARY and CLIPBOARD is owned by\n    xterm at a given time (Debian #901249).</li>\n\n    <li>documentation fixes (report by Lars Krueger):\n      <ul>\n        <li>document <code>SL</code> and <code>SR</code>.</li>\n\n        <li>document <code>DECRPTUI</code>, change number of digits\n        to match VT420.</li>\n      </ul>\n    </li>\n\n    <li>revise <code>omitTranslation</code> resource, e.g.,\n    splitting &ldquo;default&rdquo; into several more useful\n    categories.</li>\n\n    <li>modify mask-logic to permit <em>control-</em> and\n    <em>meta-</em> modifiers to be used in mouse protocol.</li>\n\n    <li>several fixes for parsing/state (report/testcases by Martin\n    Hostettler):\n      <ul>\n        <li>remove an old/unimplemented entry for xterm-title from\n        state table.</li>\n\n        <li>save/restore wrap-flag when scrolling, to fix an\n        inconsistency between jump-scrolling and\n        normal-scrolling.</li>\n\n        <li>improve a special case of wrapping where the cursor\n        starts beyond the right-margin, and wraps at the terminal's\n        last-column before the settable-margins can take\n        effect.</li>\n\n        <li>if origin mode is set, adjust a restored cursor column\n        relative to the left margin.</li>\n\n        <li>when scrolling a line within left/right margins,\n        correct order of the fixups needed when a double-width\n        character crosses the margin boundary.</li>\n      </ul>\n    </li>\n\n    <li>review/fix a few cases where the parsing state was not\n    reset after completing a control sequence (prompted by report\n    by Martin Hostettler).</li>\n\n    <li>disallow <code>XTCHECKSUM</code> if the corresponding\n    window-ops \"SetChecksum\" is unset.</li>\n\n    <li>add <code>print-vt-chars.pl</code> script to illustrate the\n    NRCS and codepages supported by xterm.</li>\n\n    <li>add <code>other-sgr.sh</code> script to demonstrate the\n    non-VT100 video attributes implemented in <a href=\n    \"#xterm_305\">patch #305</a>, and added a summary of their\n    introduction in ECMA-48 to the control sequences document.</li>\n\n    <li>add <code>tabs</code> and <code>-tabs</code> keywords to\n    <code>ttyModes</code> resource to simplify workaround for\n    terminal drivers which are not aware of UTF-8 (FreeBSD\n    #229682).</li>\n\n    <li>add VT5xx NRCS 7-bit Turkish and DEC Turkish.</li>\n\n    <li>add VT5xx NRCS 7-bit Hebrew and DEC Hebrew.</li>\n\n    <li>add VT5xx NRCS 7-bit Greek and DEC Greek.</li>\n\n    <li>correct a few post-VT220 codepages to make them display\n    without setting the NRCS state.</li>\n\n    <li>extend <code>vt100Graphics</code> resource to include other\n    character-sets such as the VT500 codepages in UTF-8 mode.</li>\n\n    <li>add some VT5xx codepages to help with the discussion of\n    96-character sets: <em>ISO Greek Supplemental</em>, <em>ISO\n    Hebrew Supplemental</em>, <em>ISO Latin&ndash;5\n    Supplemental</em>, and <em>ISO Latin&ndash;Cyrillic</em>.</li>\n\n    <li>improve description of the VT300-controls for designating\n    character sets, and fix a typo which indicated that some were\n    used for 94-character sets (prompted by discussion with Lars\n    Krueger).</li>\n\n    <li>add private control <code>XTCHECKSUM</code> for modifying\n    <code>checksumExtension</code>.</li>\n\n    <li>factor out xterm's <code>DECRQCRA</code> checksum\n    extensions as a resource setting\n    <code>checksumExtension</code>.</li>\n\n    <li>revise calculation of checksum for <code>DECRQCRA</code> to\n    match DEC's terminals (using screenshots of vttest provided by\n    Markus Schmidt).</li>\n\n    <li>restore a fix for memory-checksum setup of\n    <code>DECCKSR</code> from <a href=\"#xterm_315\">patch #315</a>\n    incorrectly reverted in <a href=\"#xterm_334\">patch #334</a> as\n    part of fix for <code>DECRQCRA</code>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_335\" id=\"xterm_335\">Patch #335 -\n  2018/08/14</a></h1>\n\n  <ul>\n    <li>add <code>colorInnerBorder</code> resource to make a change\n    from <a href=\"#xterm_334\">patch #334</a> configurable (reports\n    by H Merijn Brand, Gabriele Balducci).</li>\n  </ul>\n\n  <h1><a name=\"xterm_334\" id=\"xterm_334\">Patch #334 -\n  2018/08/12</a></h1>\n\n  <ul>\n    <li>modify <code>Imakefile</code> to reflect the fact that\n    NetBSD no longer has a working termcap emulation.</li>\n\n    <li>add resource-setting <code>validShells</code> which can be\n    used to augment the system's <code>/etc/shell</code> (prompted\n    by discussion with Paul Lampert).</li>\n\n    <li>stifle some useless warnings from lintian in\n    test-packages.</li>\n\n    <li>add the ncurses extension &ldquo;RGB&rdquo; to the\n    responses for the termcap-query feature.</li>\n\n    <li>improved getopts-handling in sample scripts.</li>\n\n    <li>fix some warnings from gcc8 and clang --analyze.</li>\n\n    <li>update note about incorrect documentation for\n    <code>DECRQSS</code> to include VT525 (report by Markus\n    Schmidt).</li>\n\n    <li>correct check for default-values in rectangular parsing; a\n    zero counts as a missing or default parameter (report/testcase\n    by Markus Schmidt).</li>\n\n    <li>correct some ranges in the <code>ambiguous[]</code> table\n    in wcwidth (adapted from patch by KUGA Tsutomu).</li>\n\n    <li>fix a special case with faint video attribute incorrectly\n    combined with default color.</li>\n\n    <li>add private control <code>XTREPORTSGR</code> for reporting\n    video-attributes and color on a rectangle, and script\n    <code>report-sgr.pl</code> to demonstrate it.</li>\n\n    <li>modify some of the markup in <code>ctlseqs.ms</code> to\n    work around groff's reassignment of ASCII punctuation\n    characters as documented in <em>groff_char(7)</em>.</li>\n\n    <li>treat ECMA-48 SGR 6 the same as SGR 5.</li>\n\n    <li>add private controls <code>XTPUSHSGR</code> and\n    <code>XTPOPSGR</code> for saving/restoring the current\n    video-attributes on a stack (adapted from patch by Dan\n    Thompson).</li>\n\n    <li>modify <code>DECRPM</code> response for logging enable to\n    indicate its state even when enabling/disabling it is not\n    allowed.</li>\n\n    <li>implement <code>DECSNLS</code></li>\n\n    <li>implement <code>DECRSPS</code></li>\n\n    <li>improve fill-color for double-buffer configuration, which\n    was sharing a graphic context with the cursor.</li>\n\n    <li>fix a couple of cases where double-sized VT100 characters\n    were not clipped, seen in Joe Smith's <a href=\n    \"http://www.inwap.com/pdp10/#Tymnet\">VT100 torture\n    test</a>.</li>\n\n    <li>color the inner border using the same\n    <code>borderColor</code> as the outer border, rather than\n    filling with the VT100's default background.</li>\n\n    <li>change encoding of &ldquo;THANKS&rdquo; to UTF-8.</li>\n\n    <li>modify handling of <code>DECELR</code> to recognize\n    <code>MotionNotify</code> events again, amending a check for\n    <code>allowMouseOps</code> which limited that to button-events\n    in <a href=\"#xterm_328\">patch #328</a> (Olaf Rogalsky).</li>\n\n    <li>fix some screen-painting problems with left/right margins\n    when using insert-line or delete-line (report/testcase by\n    Martin Hostettler). also fix similar case with\n    index/reverse-index.</li>\n\n    <li>several minor performance improvements using macros, e.g.,\n    inline checks for character width.</li>\n\n    <li>add <code>DECSCPP</code> and <code>DECSLPP</code> to\n    <code>DECRQSS</code>.</li>\n\n    <li>implement <code>DECSCPP</code>.</li>\n\n    <li>implement <code>DECCIR</code> and <code>DECTABSR</code>\n    presentation reports.</li>\n\n    <li>modify checksum computation for <code>DECRQCRA</code> to\n    treat uninitialized cells as blanks rather than nulls.</li>\n\n    <li>drop custom-entity from HTML-dump, use UTF-8 for &amp;nbsp;\n    (Debian #902381).</li>\n\n    <li>modify display of non-BMP characters when using bitmap\n    fonts to show a null/empty box rather than the replacement\n    character which was used in cleanup changes for <a href=\n    \"#xterm_233\">patch #233</a> (report by Christian\n    Weisgerber).</li>\n\n    <li>when setting up clipping rectangle for Xft, allow for the\n    case where xterm is only displaying a combining character,\n    where the base was already written (report by Joshua\n    Crowgey).</li>\n\n    <li>allow reset Xft's state if switching font-sizes when\n    double-buffering is used.</li>\n\n    <li>fix repainting, e.g., on resize, when double-buffering is\n    used with Xft (patch by Daniel Colascione).</li>\n\n    <li>correct some interchanged pairs of symbols in\n    <code>unicode/keysym.map</code> (Brad Town).</li>\n\n    <li>improve configure macros CF_GCC_WARNINGS, CF_GNU_SOURCE,\n    CF_POSIX_C_SOURCE, CF_TRY_XOPEN_SOURCE, CF_XOPEN_SOURCE,\n    CF_X_ATHENA_CPPFLAGS.</li>\n\n    <li>modify <code>logFile</code> resource to interpret\n    &ldquo;<code>-</code>&rdquo; as the standard output (adapted\n    patch by Colum Paget).</li>\n\n    <li>improve documentation of Tek4014 menu options; fix a case\n    where the Tek4014 window was not displayed before switching\n    modes.</li>\n\n    <li>re-correct parameter for <em>pid</em> used for DECCKSR,\n    DECRQCSR (see <a href=\"#xterm_315\">xterm #315</a>).</li>\n\n    <li>hard/soft reset now resets the cursor-blinking state that\n    may have been set via escape sequences; the cursor-blinking\n    menu-entry feature is unmodified (report by Matthieu\n    Herrb).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_333\" id=\"xterm_333\">Patch #333 -\n  2018/05/03</a></h1>\n\n  <ul>\n    <li>ensure that i18n is enabled if input-method is\n    enabled.</li>\n\n    <li>modify logic for pre-edit to update spot-location while the\n    cursor is invisible (Kakoune #1940).</li>\n\n    <li>change default icon to newer one, \"mini.xterm\".</li>\n\n    <li>install a complete set of icons, to simplify post-install\n    customization.</li>\n\n    <li>add resource <code>disallowedPasteControls</code> to extend\n    filtering of control characters from pastes.</li>\n\n    <li>add <code>print-on-error</code> action-hook, and document\n    action-hooks for dump-html, dump-svg.</li>\n\n    <li>provide action-hook for <code>print-immediate</code>, which\n    was available only as a menu-item (report by Rastislav\n    Barlik).</li>\n\n    <li>continue to improve notes in <code>ctlseqs.ms</code> which\n    mention where various controls originated.</li>\n\n    <li>add case to accept ECMA-48's bogus <code>SD</code>, but\n    document the issue in <code>ctlseqs.ms</code>.</li>\n\n    <li>add control sequence for loading XPM-icon file, using the\n    analogous control sequence from shelltool/dtterm.</li>\n\n    <li>add <code>-report-icons</code> option, to report on\n    XPM-icon and title-bar updates.</li>\n\n    <li>correct a discrepancy between locator-reports for VT220 vs\n    VT330.</li>\n\n    <li>add window-ops control sequences to complement existing\n    ones for reporting window-position and text-area size with\n    reports for text-area position and window-size.</li>\n\n    <li>display vt52 graphics mode characters.</li>\n\n    <li>correct case-statement for window-ops 10, overlooked since\n    some window managers equate vertical-maximize and\n    horizontal-maximize window hints with full-screen\n    maximize.</li>\n  </ul>\n\n  <h1><a name=\"xterm_332\" id=\"xterm_332\">Patch #332 -\n  2018/04/15</a></h1>\n\n  <ul>\n    <li>add a <code>GetChecksum</code> item to\n    <code>disallowedWindowOps</code></li>\n\n    <li>improve notes in <code>ctlseqs.ms</code> which mention\n    where various controls originated.</li>\n\n    <li>add control sequences for querying the X display size and\n    the character size, both in pixels to help eliminate some of\n    the constants in <code>esctest</code>.</li>\n\n    <li>fixes prompted by review of George Nachman's\n    <code>esctest</code> script:\n      <ul>\n        <li>add a null-pointer check and a limit-check in\n        <code>xtermCheckRect</code>.</li>\n\n        <li>correct limit-check for right-margin when processing\n        autowrapping if xterm is not built for\n        wide-characters.</li>\n\n        <li>repair logic in <code>RIS</code> to reset 132-column\n        mode when an escape sequence is used to enable\n        80/132-column switching.</li>\n\n        <li>correct array-limit for EWMH working state.</li>\n\n        <li>further improve limit-checks versus assert's (see\n        <a href=\"#xterm_315\">patch #315</a>).</li>\n\n        <li>correct order of check-margins and move-to-left margin\n        for <code>DL</code> and <code>IL</code>.</li>\n\n        <li>modify reverse-wrap to pay attention to top/bottom\n        margins as it has done for left/right margins since\n        <a href=\"#xterm_279\">patch #279</a>.</li>\n\n        <li>modify behavior of <code>DECFI</code> and\n        <code>DECBI</code> to not index the screen at the\n        left/right edge of the display unless those happen to be\n        the left/right margins.</li>\n\n        <li>add case for VT320 DSR response for keyboard\n        status.</li>\n      </ul>\n    </li>\n\n    <li>improve check for valid shell path using\n    <code>getusershell</code> and <code>endusershell</code> if\n    available, in case <code>/etc/shells</code> does not exist\n    (suggested by Rainer Orth).</li>\n\n    <li>modified configure checks for groff and man2html, to use\n    the latter by default, but allowing mandoc as a partial\n    replacement for former.</li>\n\n    <li>revisited the inconsistent copyright notices mentioned in\n    <a href=\"#xterm_165\">patch #165</a>, and eliminate the issue as\n    mentioned in this <a href=\n    \"https://invisible-island.net/personal/copyrights.html\">copyright\n    discussion</a>.</li>\n\n    <li>fix typo in this change-log (report by Sven Joachim)</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_331\" id=\"xterm_331\">Patch #331 -\n  2017/12/30</a></h1>\n\n  <ul>\n    <li>add workaround for improper grayscale adjustments made in\n    FreeType library, exposed by changes to rounding in 2.8.1,\n    which shows up as a gap in line-drawing characters (Debian\n    #880407).</li>\n\n    <li>improve a special case where a non-Unicode font's\n    line-drawing characters were not used, when specifying it via\n    the <code>utf8Fonts</code> resource, e.g.,\n      <blockquote>\n        <pre>\n        -fs 15 \\\n        -xrm '*VT100.font:12x24' \\\n        -xrm '*VT100.boldFont:12x24' \\\n        -xrm '*VT100.utf8Fonts.font: 12x24' \\\n        -xrm '*VT100.utf8Fonts.boldFont: 12x24' \\\n</pre>\n      </blockquote>\n    </li>\n\n    <li>replace constant 10msec delay for next X event with new\n    resource <code>nextEventDelay</code>, and reduce that to 1msec\n    to accommodate faster machines than used when\n    <code>-hold</code> was implemented in <a href=\n    \"#xterm_116\">1999</a> (Debian #877628).</li>\n\n    <li>add <code>scroll-to</code> action, which simplifies binding\n    a key to scroll to the beginning or end of the saved-lines\n    (Debian #880120).</li>\n\n    <li>add building blocks for alternate screen and/or title-stack\n    features in the <code>terminfo</code> file.</li>\n\n    <li>improve calculations for cell-data size.</li>\n\n    <li>change configure script to enable XHTML/SVG screen dumps by\n    default.</li>\n\n    <li>change configure script to enable 256-colors by\n    default.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>change configure script option for\n    <code>--with-man2html</code> to use improved script by\n    default.</li>\n\n    <li>add case for private mode 1044 in DECRQM, to report the\n    keepClipboard resource setting and corresponding menu\n    entry.</li>\n\n    <li>fix an inconsistency between private mode 12 (the AT&amp;T\n    610 cursor blink) and <code>DECSCUSR</code>: the former relied\n    on having the <code>cursorBlink</code> resource set initially\n    to enable the escape sequence, while the latter does not.</li>\n\n    <li>add private modes 13 and 14, as well as resource\n    <code>cursorBlinkXOR</code> to allow better control over the\n    cursor-blinking state (discussion with Bram Moolenaar).</li>\n\n    <li>modify the html and svg screen dumps to support direct\n    color</li>\n\n    <li>modify media copy (screen-printing) to support the same SGR\n    codes as <code>DECRQSS</code>, including 88/256 indexed color\n    as well as direct color.</li>\n\n    <li>improve options-parsing for query-status.pl script.</li>\n\n    <li>modify parsing of <code>SGR</code> direct-color control\n    making <em>color space identitier</em> optional. The\n    corresponding <code>DECRQSS</code> reply always returns an\n    empty (default) field for the identifier.</li>\n\n    <li>add wide-attributes to <code>DECRQSS</code> reply for\n    <code>SGR</code>.</li>\n\n    <li>add private mode 1046 to help with scripting\n    applications.</li>\n\n    <li>correct expression used for readline-flags in DECRQM; to\n    test the current flag rather than information <em>stacked</em>\n    within the same variable.</li>\n\n    <li>correct typo in <code>ctlseqs.ms</code> reference to\n    ISO-8613-6 (patch by Mike Frysinger).</li>\n\n    <li>fix lintian warning for test-package.</li>\n\n    <li>fix typo in <code>DECRQSS</code> for <code>SGR</code> 48,\n    which printed the foreground value for colors past 15. Also use\n    colon delimiter for codes 38/48 in response (report by Paul\n    LeoNerd Evans).</li>\n\n    <li>improve workaround for Debian #542434 by using the font's\n    maximum width when no ISO-8859-1 glyphs are provided (Debian\n    #879936).</li>\n\n    <li>work around a special case of <em>Xft</em>'s mismanagement\n    of its cached data by adding a check before the\n    <code>-report-fonts</code> option to ensure that it does not\n    use an <code>XftPattern</code> which may have been freed during\n    a call to <code>XftFontOpenPattern</code>.</li>\n\n    <li>improve manual page description of <code>regex</code>\n    option for <code>on<em>X</em>Clicks</code> resources (report by\n    Lukas Mai).</li>\n\n    <li>add <code>directColor</code> resource.</li>\n\n    <li>additional manpage macro cleanup (Branden Robinson, Debian\n    #880551).</li>\n\n    <li>add optional support for direct-colors (adapted from patch\n    by anonymous &ldquo;Nibby Nebbulous&rdquo;).</li>\n\n    <li>improve legacy/NRC character set mapping (patch by Thomas\n    Wolff), e.g.,\n      <ul>\n        <li>enable alternate NRC set designators for French and\n        French Canadian, &lsquo;9&rsquo; and &lsquo;f&rsquo;\n        respectively, as documented in ctlseqs. (&lsquo;9&rsquo; is\n        documented for VT510, &lsquo;f&rsquo; is a Kermit\n        feature).</li>\n\n        <li>correct the Unicode value in the <em>DEC Technical</em>\n        table to show capital delta.</li>\n\n        <li>referring to\n          <blockquote>\n            <p><a href=\n            \"http://vt100.net/docs/vt220-rm/table2-3b.html\">http://vt100.net/docs/vt220-rm/table2-3b.html</a><br>\n\n            <a href=\n            \"http://vt100.net/docs/vt320-uu/appendixe.html\">http://vt100.net/docs/vt320-uu/appendixe.html</a></p>\n          </blockquote>\n\n          <p>add entries for the <em>DEC Supplemental Graphics</em>\n          table to display 0x28/0xa8 as &curren; and 0x5d/0xdd as\n          &Yuml;.</p>\n        </li>\n\n        <li>referring to\n          <blockquote>\n            <p><a href=\n            \"http://www.vt100.net/charsets/technical.html\">http://www.vt100.net/charsets/technical.html</a></p>\n          </blockquote>\n\n          <p>alter the Unicode values used for 0x2b through 0x2c to\n          use <em>curly braces</em> to work with the\n          &ldquo;middle&rdquo; parts displayed with 0x2f and\n          0x30.</p>\n        </li>\n\n        <li>modify the VT220 &ldquo;Supplemental&rdquo; table,\n        giving a hint that it was probably meant to be\n        &ldquo;Supplemental Graphics&rdquo; and is the same as\n        VT320's table.</li>\n      </ul>\n    </li>\n\n    <li>quiet a few font-warnings when a derived fontname cannot be\n    opened, overlooked in refactoring of font resources in <a href=\n    \"#xterm_328\">patch #328</a> (initially reported on <a href=\n    \"https://cygwin.com/ml/cygwin/2017-06/msg00255.html\">Cygwin\n    mailing list</a>, with <a href=\n    \"https://cygwin.com/ml/cygwin/2017-07/msg00216.html\">followup</a>).</li>\n\n    <li>correct error response for <code>DECRQSS</code> broken in\n    cleanup of Coverity reports in <a href=\"#xterm_288\">patch\n    #288</a> (reports by Bram Moolenaar and IWAMOTO Kouichi).</li>\n\n    <li>improve <code>DECRPM</code> responses by returning <em>mode\n    not recognized</em> for modes which may not be settable due to\n    the selected <code>decTerminalID</code> resource (report by\n    IWAMOTO Kouichi).</li>\n\n    <li>correct logic for <code>print-immediate</code> action, and\n    enable corresponding menu entry (patch by Lauri\n    Tirkkonen).</li>\n\n    <li>add configure option <code>--with-pcre2</code> (patch by\n    David Michael).</li>\n\n    <li>fix a misspelled subsection title in ctlseqs.ms and add a\n    note regarding blink which was rendered as bold in X11R6.\n    Blinking text was implemented in <a href=\"#xterm_60\">Patch\n    #60</a>.</li>\n\n    <li>fix typos in <code>xterm.man</code> (patches by Sven\n    Joachim, Larry Hynes).</li>\n\n    <li>fix typography in <code>xterm.man</code> (patch by Bjarni\n    Ingi Gislason, Debian #869248).</li>\n\n    <li>fix typo in <code>INSTALL</code> (Larry Hynes).</li>\n\n    <li>add <code>xterm-direct</code> terminal description based on\n    changes introduced in <a href=\"#xterm_277\">patch #277</a>, and\n    relying upon ncurses <code><strong>RGB</strong></code>\n    extension.</li>\n\n    <li>modify <code>xterm-new</code> terminal description to use\n    ECMA-48 <code>REP</code>, reflecting its use in xterm since\n    <a href=\"#xterm_32\">patch #32</a> (1996).</li>\n\n    <li>clarify comment in ctlseqs.ms regarding blink: it has been\n    part of xterm since <a href=\"#xterm_60\">patch #60</a>\n    (1998).</li>\n\n    <li>update ftp URLs in documentation.</li>\n  </ul>\n\n  <h1><a name=\"xterm_330\" id=\"xterm_330\">Patch #330 -\n  2017/06/20</a></h1>\n\n  <ul>\n    <li>updates for ReGIS (Ross Combs):\n      <ul>\n        <li>remove redundant text command error check which broke\n        <code>T(B)</code> and <code>T(E)</code>.</li>\n\n        <li>retain the loading alphabet number across multiple\n        &ldquo;L&rdquo; commands.</li>\n\n        <li>add <code>S(T)</code> delay handler.</li>\n\n        <li>fix some color handling error messages.</li>\n\n        <li>add stubbed-out macrograph handling.</li>\n\n        <li>use <code>fragment_remaining()</code> and\n        <code>fragment_consumed()</code> instead of manually\n        checking position / length in various places.</li>\n\n        <li>rename some local variables in string / extent / option\n        parsing</li>\n\n        <li>wrap some long lines.</li>\n\n        <li>move macrograph command handling out of the\n        top-level.</li>\n      </ul>\n    </li>\n\n    <li>add a summary of the italic fonts loaded to\n    <code>-report-fonts</code> option.</li>\n\n    <li>modify the font-lookup for italics to allow for\n    &ldquo;<code>-i-</code>&rdquo; if no match is found with slant\n    &ldquo;<code>-o-</code>&rdquo; (prompted by patch by Ben\n    Wong).</li>\n\n    <li>change default values for <code>mkSamplePass</code> and\n    <code>mkSampleSize</code> to reflect generally-improved locale\n    support in various operating systems (FreeBSD #219800).</li>\n\n    <li>modify <code>wcwidth.c</code> to return -1 for non-Unicode\n    values, and adjust a couple of blocks to better match\n    assumptions about ambiguous-width characters in other\n    implementations. Also modify <code>wcwidth.c</code> to support\n    configurable soft-hyphen, so there is no drawback to using this\n    version rather than a system <code>wcwidth</code>.</li>\n\n    <li>amend change made in <a href=\"#xterm_328\">patch #328</a>\n    for cursor-visibility to handle case where an application is\n    updating the reverse-video state (FreeBSD #219800).</li>\n\n    <li>update tables of combining and ambiguous-width characters\n    in wcwidth.c based on Unicode 10.0.0.</li>\n\n    <li>build-fix for <code>--enable-sixel-graphics</code> without\n    <code>--enable-regis-graphics</code> (reports by Sven Joachim,\n    FreeBSD #219945).</li>\n  </ul>\n\n  <h1><a name=\"xterm_329\" id=\"xterm_329\">Patch #329 -\n  2017/06/12</a></h1>\n\n  <ul>\n    <li>add control sequences for reading the Sixel and ReGIS\n    graphics sizes (suggested by Ben Wong).</li>\n\n    <li>add a workaround for <code>wcwidth</code> returning -1 for\n    characters which should have been printable (FreeBSD\n    #219800).</li>\n\n    <li>fix a bug in font initialization from <a href=\n    \"#xterm_328\">patch #328</a> (FreeBSD #219800).</li>\n\n    <li>fix a special case in <code>HideCursor</code> which\n    assigned a bold font to the slot used for normal font in\n    changes for italics in <a href=\"#xterm_307\">patch #307</a>\n    (Debian #858304).</li>\n\n    <li>updates for ReGIS (Ross Combs):\n      <ul>\n        <li>Strings specified with no command are used as\n        \"comments\". Print these in the log when tracing.</li>\n\n        <li>Catch attempts to use \"alternate display\" mode (AKA\n        \"blink\") from the GIGI, but do not implement it.</li>\n\n        <li>The <code>T(M)</code> command should only multiply the\n        height by 10, not 20.</li>\n\n        <li>Make the <code>S(E)</code> command reset more state\n        than just the screen contents.</li>\n\n        <li>Remove two rotation variables which were only being\n        printed.</li>\n\n        <li>Numerous minor fixes and comment updates in the\n        <code>R</code> command.</li>\n\n        <li>Unknown <code>R</code> command option names trigger an\n        empty response.</li>\n\n        <li>Fix the output position after printing rotated text (it\n        was missing the the sign before).</li>\n\n        <li>Fix the position change with pixelvectors and rotated\n        text (the rotation transform was not being applied).</li>\n\n        <li>Update the <em>TODO</em> list and remove a verification\n        <em>FIXME</em> (slanted text positioning is correct as\n        is).</li>\n\n        <li>Emulate the approximately 1.4x enlargement for text\n        which isn't rotated at right angles.</li>\n\n        <li>Only update the color planes specified in the plane\n        mask (the <code>W</code> command's <code>F</code>\n        option).</li>\n      </ul>\n    </li>\n\n    <li>fix a bug introduced by the changes to font information in\n    <a href=\"#xterm_328\">patch #328</a>. When processing the\n    \"checkfont\" option of the <code>locale</code> resource, the\n    program referred to the <em>request</em> data, to an array\n    which was only allocated in the <em>new/result</em> widget\n    (report by H Merijn Brand).</li>\n\n    <li>fix a missing assignment initialization to make the\n    <code>utf8</code> resource control whether escape sequences to\n    enable/disable UTF-8 mode are allowed.</li>\n  </ul>\n\n  <h1><a name=\"xterm_328\" id=\"xterm_328\">Patch #328 -\n  2017/06/01</a></h1>\n\n  <ul>\n    <li>revise parser for <code>charClass</code> resource, making\n    these improvements:\n      <ul>\n        <li>accept octal and hexadecimal values</li>\n\n        <li>allow embedded whitespace</li>\n\n        <li>allow the class after colon to be optional, e.g., to\n        clear class settings for a range of characters.</li>\n      </ul>\n    </li>\n\n    <li>add command-line option\n    <code>-report-charclass</code>.</li>\n\n    <li>fix most lintian warnings about test-package</li>\n\n    <li>add <code>eraseSavedLines</code> resource.</li>\n\n    <li>document <code>DECSED&nbsp;3</code> in\n    <code>ctlseqs.ms</code> (report by Ben Longmans).</li>\n\n    <li>improve integration between configure-events and updates\n    for reported screensize, in particular when switching between\n    vt100 and tek4014 modes.</li>\n\n    <li>modify selection-highlighting of reverse-video text to keep\n    that distinct, e.g., by reversing the selection foreground and\n    background colors as one would expect. This fixes a \"useless\"\n    case in the description of\n    <code>highlightColorMode</code>.</li>\n\n    <li>improve fix for Debian #759734, addressing a case where\n    non-colored cursor would be invisible against reverse-video\n    (see <a href=\"#xterm_311\">patch #311</a>).</li>\n\n    <li>updates for ReGIS (Ross Combs):\n      <ul>\n        <li>the \"H\" option of the \"T\" command should multiply by\n        10, not 20.</li>\n\n        <li>display unknown glyphs as a solid block.</li>\n\n        <li>given a succession of text-direction options, use the\n        last.</li>\n\n        <li>fix the direction of ReGIS slanted text so that\n        negative values produce oblique output .</li>\n\n        <li>fix the ReGIS text direction option to only rotate\n        characters when no following size option is used.</li>\n      </ul>\n    </li>\n\n    <li>update terminfo to better match corresponding entries in\n    ncurses, e.g., <code>u8</code> pattern to match the VT220,\n    VT420, etc., primary responses, as well as adding\n    <code>smxx</code> and <code>rmxx</code>.</li>\n\n    <li>fixes from J&ouml;rg Sommer:\n      <ul>\n        <li>corrected a trace-message regarding maximum\n        graphics-size; it used the similar ReGIS maximum size which\n        might not be configured.</li>\n\n        <li>in <code>do_select_regex</code>, clear selection if\n        there is no match. If the regex does not match anything\n        around the cursor, the selection returned must be empty,\n        otherwise the whole line is treated as a match. This way\n        the command defined by <code>exec-selectable</code> will\n        not be executed if there is no match.</li>\n\n        <li>modify limit in <code>do_select_regex</code> to include\n        the character at the cursor in the match, making it easier\n        to type something and then hit the key to trigger\n        <code>exec-selectable</code>.</li>\n\n        <li>If <code>exec-selectable</code> or\n        <code>insert-selection</code> is triggered by a mouse\n        button click, the position of the mouse pointer should be\n        used. This makes it easier to address any position on the\n        window and it makes it possible to use the mouse, e.g., for\n        applications such as mutt where you cannot move the\n        cursor.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>DECRC</code> to save/restore xterm's\n    last-column flag used to control wrapping behavior rather than\n    manipulating <code>DECAWM</code> (report/analysis by Mattias\n    Engdeg&aring;rd).</li>\n\n    <li>add configure option <code>--enable-terminfo-env</code> to\n    use the value set by <code>--with-own-terminfo</code> for the\n    <code>$TERMINFO</code> environment variable. That variable was\n    set automatically for HPUX, but would be useful in other\n    systems, e.g., for Solaris (request by Jeff Wieland).</li>\n\n    <li>fix a race condition when setting up a signal handler to\n    timeout if opening <code>/dev/tty</code> hangs (patch by Tobias\n    Stoeckmann).</li>\n\n    <li>review/cleanup resources which were not in the manual page\n    (report by Maxwell Anselm):\n      <ul>\n        <li>add manual page description as needed.</li>\n\n        <li>drop resource name for <code>menuBar</code>, as\n        unnecessary.</li>\n\n        <li>modify fallback numeric value for\n        <code>regisScreenSize</code> resource to match that for\n        <code>maxGraphicSize</code>.</li>\n      </ul>\n    </li>\n\n    <li>updated configure macros <code>CF_ADD_CFLAGS</code>,\n    <code>CF_CC_ENV_FLAGS</code>, <code>CF_GNU_SOURCE</code>,\n    <code>CF_MATH_LIB</code>, and <code>CF_XOPEN_SOURCE</code> from\n    other program-changes.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>change &ldquo;maximum screensize&rdquo; assumed by\n    <code>resize</code> to 9999x9999, to accommodate people using\n    the <em><code>Unreadable</code></em> font.</li>\n\n    <li>drop <code>Utility</code> from default value of\n    <code>--with-desktop-category</code> (Debian #780176).</li>\n\n    <li>widen the configure script pattern used for finding related\n    \".desktop\" files, including &ldquo;Terminal&rdquo;</li>\n\n    <li>several minor improvements to font utility functions:\n      <ul>\n        <li>provide for later modification to implement font-sets\n        by parsing the font resources as comma-separated\n        lists.</li>\n\n        <li>parse <code>-fn</code> and <code>-fa</code> similarly,\n        using &ldquo;x:&rdquo; and &ldquo;xft:&rdquo; prefixes for\n        font name/family strings to distinguish between XLFD and\n        Xft font specifications.</li>\n\n        <li>use loops to iterate over font classes</li>\n\n        <li>use getters/setters for font data to allow for\n        on-demand lookups.</li>\n\n        <li>make the debugging trace for missing glyph less verbose\n        since that interferes with the <code>-report-fonts</code>\n        option.</li>\n\n        <li>refactor <code>xtermLoadFont</code> to make it clearer\n        how some fonts are derived from others, e.g., bold,\n        wide.</li>\n\n        <li>make the triggering and suppressing of font-warnings\n        more consistent by storing the last state in the\n        widget.</li>\n\n        <li>reduce font-warnings by checking for repeated\n        warnings.</li>\n      </ul>\n    </li>\n\n    <li>add <code>vttests/query-status.pl</code></li>\n\n    <li>add <code>vttests/closest-rgb</code></li>\n\n    <li>add special case for displaying soft-hyphen if it happens\n    to fall at the right margin, and omitting similar case such as\n    the BIDI markers, where a zero-width character is neither a\n    control character nor a combining character (Debian\n    #844325).</li>\n\n    <li>modify logic for <code>OSC&nbsp;52</code>, <em>manipulate\n    selection data</em>, to update the selection-time to include\n    the latest X events. This fixes some cases where the selection\n    was invalid, e.g., after an event due to focus-follows-mouse\n    (report/testcase by Stephane Chauveau).</li>\n\n    <li>revise macro <code>CastMallocN</code> as new macro\n    <code>TextAlloc</code> to make explicit use of\n    <code>sizeof(char)</code> (prompted by patch by Cade\n    Foster).</li>\n\n    <li>add <em>&ldquo;Mouse Ops&rdquo;</em> menu entry and related\n    resources to allow runtime disabling/enabling of the mouse\n    protocol escape sequences (discussion with Bob Proulx).</li>\n\n    <li>improve discussion of mouse actions versus protocol in the\n    manual (discussion with Bob Proulx).</li>\n\n    <li>improve discussion of environment variables in the manual,\n    pointing out where some features (such as termcap and the\n    System5 <code>COLUMNS</code> and <code>LINES</code> variables)\n    are used rarely, mainly to support legacy applications.</li>\n\n    <li>add examples of <code>translations</code> resource for\n    select/paste, and for font-size changes to the manual.</li>\n\n    <li>minor reordering of some entries in <code>ctlseqs.ms</code>\n    for consistency (report by Arran Ubels).</li>\n\n    <li>add <code>-s</code> option to <code>256colors2.pl</code>\n    and <code>88colors2.pl</code>, to demonstrate modifying the\n    &ldquo;system&rdquo; colors 0&ndash;15.</li>\n\n    <li>omit <code>XFT_SPACING</code> property from call to <code>\n      XftPatternBuild</code>, to work around a bug in\n      <em>fontconfig</em> for handling Google Go fonts, whose names\n      sort in an order not expected by <em>fontconfig</em>, causing\n      the request for a monospaced font to return <em>italics</em>,\n      e.g.,\n      <blockquote>\n        <pre>\n$ fc-match 'Go Mono:spacing=monospace'\nGo-Mono-Italic.ttf: \"Go Mono\" \"Italic\"\n(report by Giacomo Boffi on <a href=\n\"http://unix.stackexchange.com/questions/324941/xterm-displays-an-italic-face-instead-of-regular\">Stackoverflow</a>).\n\n</pre>\n      </blockquote>\n    </li>\n\n    <li>modify <code>minstall.in</code> to improve a workaround\n    added to the manual page in <a href=\"#xterm_182\">patch #182</a>\n    to avoid having the C preprocessor used in the imake\n    configuration strip out the comments in the character classes\n    section (reports by Ted Unangst, Anthony J Bentley).</li>\n  </ul>\n\n  <h1><a name=\"xterm_327\" id=\"xterm_327\">Patch #327 -\n  2016/10/07</a></h1>\n\n  <ul>\n    <li>add a check in the function which handles end-of-line\n    wrapping to ensure that C1 controls are allocated one column\n    when <code>allowC1Printable</code> is set (Debian\n    #738794).</li>\n\n    <li>use consistent error-checking after <code>strtol</code>\n    calls, fixes a case where a query with OSC 6 did not ensure\n    there was a valid color number (report by Alex Smith).</li>\n\n    <li>add <code>-baudrate</code> option, for testing\n    ncurses.</li>\n\n    <li>always generate the <code>CASE_<em>xxx</em></code> symbols\n    in <code>VTparse.h</code> and <code>Tekparse.h</code>, as part\n    of a change to improve debug-logging. This makes the build\n    always depend upon <code>awk</code>.</li>\n\n    <li>modify <code>allowC1Printable</code> to disallow codes\n    160-254 as being equivalent to codes 32-126 when parsing escape\n    sequences (Debian #839220).</li>\n\n    <li>amend fix from <a href=\"#xterm_326\">patch #326</a> for\n    TrueType fonts to exclude the hidden character used for\n    double-width cells (report by Grady Martin).</li>\n\n    <li>fix a typo in <code>ctlseqs.ms</code></li>\n  </ul>\n\n  <h1><a name=\"xterm_326\" id=\"xterm_326\">Patch #326 -\n  2016/09/25</a></h1>\n\n  <ul>\n    <li>updated appdata file (report by Richard Hughes).</li>\n\n    <li>improve discussion of the different terminal emulations\n    provided by xterm in the manual page.</li>\n\n    <li>add examples of setting the icon title with/without the\n    window title in the manual (Debian #833984).</li>\n\n    <li>correct a limit-check when using a numeric value for\n    extended Booleans e.g., <code>*fullscreen:3</code> rather than\n    a name such as <code>*fullscreen:never</code>.</li>\n\n    <li>add action <code>allow-bold-fonts</code></li>\n\n    <li>improved formatting fixes for manual page, using script to\n    find mismatches in spelling of resources, actions and menu\n    entries.</li>\n\n    <li>improve documentation of logging resources.</li>\n\n    <li>fix a special case of flickering cursor by adding\n    <code>GraphicsExpose</code> to the list of event types that\n    should not trigger making the mouse cursor visible (patch by\n    Joe Peterson).</li>\n\n    <li>correct initialization of line-drawing in VT52-mode,\n    overlooked in changes for <a href=\"#xterm_297\">patch #297</a>\n    (report/patch by Ben Wiley Sittler).</li>\n\n    <li>minor clarification of form-feed versus line-feed in\n    <code>ctlseqs.ms</code> (suggested by David Kemper).</li>\n\n    <li>amend fix for Debian #738794 to restore a check for missing\n    characters which are <em>not</em> combining characters. Also\n    fill in a corresponding special case for TrueType fonts (Debian\n    #827905).</li>\n  </ul>\n\n  <h1><a name=\"xterm_325\" id=\"xterm_325\">Patch #325 -\n  2016/06/05</a></h1>\n\n  <ul>\n    <li>improve manual page discussion of function keys (discussion\n    with Ross Combs).</li>\n\n    <li>further improve fix for Debian #545220 in <a href=\n    \"#xterm_248\">patch #248</a>, to avoid conflict with combining\n    characters (Debian #738794).</li>\n\n    <li>improve <code>-hold</code> option to avoid 100% CPU usage\n    with NetBSD after closing the shell, which makes subsequent\n    checks for X input events fail (prompted by patch by Pierre\n    Pronchery).</li>\n\n    <li>review <code>#ifdef</code> statements, listed those which\n    do not have a configure option in\n    <code>xtermcfg.hin</code>.</li>\n\n    <li>fixed one case where the menu sensistivity for\n    <em>Print-All Immediately</em> and <em>Print-All on Error</em>\n    was not properly ifdef'd.</li>\n\n    <li>modify terminfo entries for 16-, 88- and 256-color to reset\n    palette with <code>rs1</code> capability.</li>\n\n    <li>accept <code>legacy</code> value of <code>-kt</code> as\n    synonym for the <code>oldXtermFKeys</code> resource, and extend\n    the full-reset logic to use the keyboard type set via\n    <code>-kt</code>.</li>\n\n    <li>modify <code>ioctl</code> calls for <code>I_PUSH</code> to\n    first check if the module has been added, using\n    <code>I_FIND</code>. This is needed for newer Solaris libraries\n    with c11 support (adapted from patch by Alan Coopersmith).</li>\n\n    <li>add check in <code>getXtermCombining</code> to ensure that\n    combining characters were allocated (report by Tor\n    Andersson).</li>\n\n    <li>add configure option <code>--without-xinerama</code> to\n    allow suppressing the extension (Gentoo #580936).</li>\n\n    <li>update keysym2ucs.c based on Unicode 9.0</li>\n\n    <li>fixed most <code>cppcheck --enable=all</code> warnings,\n    including for style (prompted by report by David Binderman).\n    There was one bug-fix:\n      <ul>\n        <li>RGB least-squares computation in\n        <code>allocateClosestRGB</code> used only one ordinate</li>\n      </ul>\n    </li>\n\n    <li>add <code>cppcheck</code> to lint-like programs in\n    configure script and makefile.</li>\n\n    <li>fix some const correctness issues and point out an array\n    lifetime issue (Ross Combs).</li>\n\n    <li>updates for SIXEL and ReGIS (Ross Combs):\n      <ul>\n        <li>Sixel drawing should still happen after an error if\n        some commands have been processed</li>\n\n        <li>Tiny steps toward reporting ReGIS input</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_324\" id=\"xterm_324\">Patch #324 -\n  2016/03/10</a></h1>\n\n  <ul>\n    <li>updated configure macro <code>CF_LD_RPATH_OPT</code> from\n    ncurses changes.</li>\n\n    <li>provide alternate fix for Juha Nurmela's report by turning\n    on POSIX signals if <code>_POSIX_C_SOURCE</code> is at least\n    one. This is done to improve the behavior if a direct child\n    process receives a <code>STOP</code> signal.</li>\n\n    <li>revert change to <code>CF_POSIX_C_SOURCE</code> from\n    <a href=\"#xterm_323\">patch #323</a> (reports by Ashish Shukla,\n    Christian Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_323\" id=\"xterm_323\">Patch #323 -\n  2016/03/07</a></h1>\n\n  <ul>\n    <li>updated appdata and desktop files to add keywords (report\n    by Richard Hughes).</li>\n\n    <li>modify configure macro <code>CF_POSIX_C_SOURCE</code> to\n    accommodate some systems, e.g., FreeBSD, which have separated\n    their implementation specific preprocessor symbols from the\n    POSIX ones, requiring both to be defined (report by Juha\n    Nurmela).</li>\n\n    <li>change the directory to the current working dir of the\n    child process in exec-formatted and exec-selectable actions\n    (patch by Alexander Pohoyda).</li>\n\n    <li>correct typo in xterm.man (patch by Larry Hynes).</li>\n\n    <li>correct typo in ctlseqs.ms (report by Shriramana\n    Sharma).</li>\n\n    <li>add feature to support XHTML and SVG screen dumps (patch by\n    Jens Schweikhardt).</li>\n\n    <li>correct response to DECRQSS when terminal id is less than\n    400 (patch by Iwamoto Kouichi).</li>\n  </ul>\n\n  <h1><a name=\"xterm_322\" id=\"xterm_322\">Patch #322 -\n  2016/01/02</a></h1>\n\n  <ul>\n    <li>fix regression due to incorrect fix for compiler warning\n    when allocating storage for <code>/etc/shells</code> (reports\n    by Ashish Shukla, Debian #809646).</li>\n  </ul>\n\n  <h1><a name=\"xterm_321\" id=\"xterm_321\">Patch #321 -\n  2015/12/31</a></h1>\n\n  <ul>\n    <li>add resource <code>keepClipboard</code>, escape sequence\n    and action <code>keep-clipboard</code>.</li>\n\n    <li>add optional feature to capture text copied to clipboard at\n    the time of copying rather than at the time the clipboard\n    contents are requested for pasting (patch by Milan\n    Mehner).</li>\n\n    <li>improve a special case where the <code>-e</code> option was\n    used to pass a single-quoted command via <code>luit</code>, by\n    wrapping it in a &ldquo;sh -c&rdquo; (report by Keith\n    Hedger).</li>\n\n    <li>minor fix for type-cleanliness when allocating storage for\n    <code>/etc/shells</code> (Tobias Stoeckmann).</li>\n\n    <li>fix a typo in manual page (Dan Church).</li>\n\n    <li>fix minor file-descriptor leak; after calling\n    <code>openpty</code>, the slave's file descriptor is not needed\n    (report by Juha Nurmela).</li>\n\n    <li>editorial change to ctlseqs.ms (report by David\n    Gomboc).</li>\n\n    <li>minor updates for autoconf macros.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_320\" id=\"xterm_320\">Patch #320 -\n  2015/08/28</a></h1>\n\n  <ul>\n    <li>correct documentation for <code>%t</code> format (report by\n    Martin Tournoij).</li>\n\n    <li>add <code>%R</code> for consistency to\n    <code>exec-formatted()</code> and\n    <code>insert-formatted()</code> actions.</li>\n\n    <li>add <code>%r</code> format to <code>exec-formatted()</code>\n    and <code>insert-formatted()</code> actions (patch by Martin\n    Tournoij).</li>\n\n    <li>Amend fix for Debian #794201 (report forwarded from\n    Christian Jachmann by Emanuel Haupt, Debian #797008).</li>\n  </ul>\n\n  <h1><a name=\"xterm_319\" id=\"xterm_319\">Patch #319 -\n  2015/08/19</a></h1>\n\n  <ul>\n    <li>add a section to <code>ctlseqs.ms</code> discussing control\n    sequences and ECMA-48, to explain why C1 controls do not occur\n    in the decoded characters from UTF-8 byte streams (prompted by\n    discussion with Poul-Henning Kamp).</li>\n\n    <li>modify check for cursor-theme from <a href=\n    \"#xterm_301\">patch #301</a> to also check if the resource\n    <code>Xcursor.theme</code> is set to a nonempty value before\n    fallback to xterm's own dummy theme (request by Robert\n    Kloefkorn).</li>\n\n    <li>explain in <code>ctlseqs.ms</code> that some keys which\n    normally send SS3-prefixes are changed to CSI-prefixes if\n    key-modifiers are passed as parameters (report by George\n    Nachman).</li>\n\n    <li>correct double-free of font information when multiple\n    problems are found, particularly for the wide fonts loaded via\n    the <code>-wc</code> option (report/testcase by Nelson\n    Beebe).</li>\n\n    <li>make configure option <code>--enable-builtin-xpms</code>\n    actually work (report by William Bulley).</li>\n\n    <li>correct combination of <code>-ls</code> and <code>-e</code>\n    options for utempter configuration (Debian #794201).</li>\n\n    <li>NetBSD build-fix for OPT_RENDERFONT versus OPT_SHIFT_FONTS\n    (patch by Matthew Green, forwarded by Thomas Klausner).</li>\n\n    <li>fix a few minor bugs found with Coverity.</li>\n\n    <li>update pixelvector handling (Ross Combs):\n      <ul>\n        <li>split pixel-based and coord-based functions with common\n        parts factored out to a \"raw\" function</li>\n\n        <li>add a \"step\" variant which loads a single PV digit</li>\n      </ul>\n    </li>\n\n    <li>make the graphic dirty upon resize or clear, fixing some\n    missing refreshes (patch by Ross Combs)</li>\n\n    <li>fixes scrolling to use user coordinates and move in the\n    correct direction (patch by Ross Combs)</li>\n\n    <li>several fixes/improvements for ReGIS whitespace and\n    page-handling (patch by Ross Combs).</li>\n  </ul>\n\n  <h1><a name=\"xterm_318\" id=\"xterm_318\">Patch #318 -\n  2015/04/12</a></h1>\n\n  <ul>\n    <li>rename new(er) configure option\n    <code>--enable-initial-erase</code> to\n    <code>--enable-pty-erase</code>, since that conflicted with an\n    existing option (report by Jens Schweikhardt).</li>\n\n    <li>fix cut/paste error in <code>--with-builtin-xpms</code>\n    configure option (reports by Jens Schweikhardt, Ross\n    Combs).</li>\n\n    <li>fix minor formatting issue in xterm manual (report by Jens\n    Schweikhardt).</li>\n\n    <li>eliminate unnecessary \"#(vi\" markers in autoconf macros by\n    using \"(\" to begin case-statement cases (suggested by Jens\n    Schweikhardt).</li>\n\n    <li>minor fixes to improve <code>const</code> usage (Ross\n    Combs).</li>\n  </ul>\n\n  <h1><a name=\"xterm_317\" id=\"xterm_317\">Patch #317 -\n  2015/03/27</a></h1>\n\n  <ul>\n    <li>adapt example for <code>exec-formatted</code> from <a href=\n    \"http://lukas.zapletalovi.com/2013/07/hidden-gems-of-xterm.html\">\n    Luk&aacute;&scaron; Zapletal's</a> webpage to manual (Debian\n    #780008).</li>\n\n    <li>add a short usage section to the xterm manual, including\n    notes on setting the window title (Debian #742477).</li>\n\n    <li>revise a change made to <code>ICH</code> in <a href=\n    \"#xterm_314\">patch #314</a> to address limit-checks\n    (reports/testcases by Zolt&aacute;n K&eacute;ri and Joe\n    Peterson, also reported by Christian Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_316\" id=\"xterm_316\">Patch #316 -\n  2015/03/07</a></h1>\n\n  <ul>\n    <li>revert change to make <code>DCH</code> honor top/bottom\n    scrolling margins. For the record, both the VT420 and VT520\n    reference manuals incorrectly state that <em>\"DCH has no effect\n    outside the scrolling margins.\"</em></li>\n\n    <li>fix regression in <code>DCH</code> introduced in adjustment\n    for limit-check in <a href=\"#xterm_314\">patch #315</a>\n    (report/testcase by Zolt&aacute;n K&eacute;ri, also reported by\n    Christian Weisgerber).</li>\n\n    <li>correct default value for configure option\n    <code>--enable-initial-erase</code>; it should be \"False\", but\n    in <a href=\"#xterm_315\">patch #315</a> it was \"Maybe\", which\n    differed from default set in <a href=\"#xterm_192\">patch\n    #192</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_315\" id=\"xterm_315\">Patch #315 -\n  2015/03/02</a></h1>\n\n  <ul>\n    <li>change default for <code>--enable-narrowproto</code> for\n    Cygwin to \"no\" to better match contemporary configurations\n    (report by Jens Schweikhardt, prompted by <a href=\n    \"http://stackoverflow.com/questions/28137618/what-is-a-narrow-prototype-and-why-would-i-need-one/28334574?noredirect=1#comment45022128_28334574\">\n    discussion</a>).</li>\n\n    <li>provide <code>OSC&nbsp;106</code> as an alternative to\n    <code>OSC&nbsp;6</code>, avoiding conflict with one of\n    Terminal.app's undocumented escape sequences (report by Egmont\n    Koblinger).</li>\n\n    <li>fix an off-by-one in comparison when autowrap and\n    left/right margins are combined (report by George\n    Nachman).</li>\n\n    <li>modify <code>DECBI</code> and <code>DECFI</code> to work\n    outside the left/right margins, since the vague VT520 reference\n    manual could support that interpretation (suggested by George\n    Nachman).</li>\n\n    <li>correct response for <code>DECSCUSR</code> in\n    <code>DECRQSS</code> (report/analysis by George Nachman).</li>\n\n    <li>add <code>DECSLRM</code> to list for <code>DECRQSS</code>\n    in ctlseqs.ms (report by George Nachman).</li>\n\n    <li>improve limit-checks versus assert's in the debugging\n    version (reports by George Nachman).</li>\n\n    <li>correct a problem with multiple writes to the right-margin\n    when autowrap is turned off (report by George Nachman, also\n    reported in Gnome #744819 by Ulf Magnusson).</li>\n\n    <li>modify <code>DCH</code> to honor top/bottom and left/right\n    margins (report by George Nachman).</li>\n\n    <li>correct off-by-one in comparison so that <code>DL</code>\n    honors left/right margins (report by George Nachman).</li>\n\n    <li>correct logic of <code>DECSCL</code>, which always set\n    8-bit controls as a side-effect (report by George\n    Nachman).</li>\n\n    <li>correct loop limit for <code>DECSED&nbsp;1</code>, when\n    <code>DECSCA</code> is enabled (report by George Nachman).</li>\n\n    <li>fix a entry in csi_table for &ldquo;<code>$</code>&rdquo;,\n    needed for <code><em>CSI</em>&nbsp;[&nbsp;$&nbsp;z</code>\n    (report by George Nachman).</li>\n\n    <li>remove restriction from <a href=\"#xterm_279\">patch #279</a>\n    changes on <code>DECIC</code> and <code>DECDC</code> to\n    left-right mode (report by George Nachman).</li>\n\n    <li>correct PID value returned in response to DECRQCRA\n    (report/analysis by George Nachman).</li>\n\n    <li>fix an ifdef'ing problem, where\n    <code>--disable-dec-locator</code> would turn off logic needed\n    for <code>DECIC</code> and <code>DECDC</code> (report by George\n    Nachman).</li>\n\n    <li>correct order of parameters in report for\n    <code><em>CSI</em>&nbsp;1&nbsp;9&nbsp;t</code>, which gives the\n    screensize in characters (report by George Nachman).</li>\n\n    <li>add null pointer checks for a case in DECCRA where part of\n    the target rectangle lies outside the screen limits (report by\n    George Nachman).</li>\n\n    <li>remove extra \"6\" for selective erase from DA1 response\n    (report by George Nachman).</li>\n\n    <li>support Xinerama screen specification in geometry parsing\n    (patch by Nicolas George).</li>\n\n    <li>add configure option <code>--enable-initial-erase</code> to\n    set <code>ptyInitialErase</code> consistently with manpage, as\n    well as adding a table in manpage to clarify the relationship\n    between the resources related to the backarrow key (Debian\n    #775952).</li>\n\n    <li>add configure <code>--enable-builtin-xpms</code> to\n    simplify compiling-in the icons introduced in <a href=\n    \"#xterm_284\">patch #284</a> (prompted by discussion with\n    William Bulley).</li>\n\n    <li>fix/improve autoconf macros:\n      <ul>\n        <li>CF_WITH_APP_DEFAULTS, add paths for OSX</li>\n\n        <li>CF_WITH_MAN2HTML, configure option \"--with-man2html\"\n        provides \"man2html\" as alternative to groff's man/html\n        conversion</li>\n      </ul>\n    </li>\n\n    <li>fix some minor issues in manpage (Jens Schweikhardt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_314\" id=\"xterm_314\">Patch #314 -\n  2014/12/28</a></h1>\n\n  <ul>\n    <li>fix a minor bug in the termcap-specific version of\n    <code>resize</code> when the lines or columns values are at the\n    very end of an incomplete termcap string (prompted by coverity\n    report).</li>\n\n    <li>improve paste64 feature (report by Olaf Rogalsky)\n      <ul>\n        <li>fix &ldquo;<code>p</code>;&rdquo; command in\n        <code>paste64.pl</code> example.</li>\n\n        <li>modify <code>_OwnSelection</code> to allow the paste64\n        control to cause primary/clipboard selections to be\n        disowned and cleared.</li>\n\n        <li>omit an extra \"=\" used in padding, to make the base64\n        response a multiple of four characters.</li>\n\n        <li>modify <code>_ConvertSelectionHelper</code> to not stop\n        converting on embedded nulls in the primary or clipboard\n        selection. That makes the behavior consistent with\n        cut-buffers. Nulls are not passed on to the application\n        because they are used for separators in the X library calls\n        that convert <code>XTextProperty</code> values.</li>\n      </ul>\n    </li>\n\n    <li>add configure option <code>--with-man2html</code> to allow\n    an alternative to groff's man/html conversion.</li>\n\n    <li>review and modify resource-settings which can be set via\n    control sequences, etc:\n      <ul>\n        <li>add <code>OSC&nbsp;6</code>, to enable/disable colors\n        set via <code>OSC&nbsp;5</code>, without changing the color\n        assignments (prompted by patch by Ingo Br&uuml;ckl).</li>\n\n        <li>add command-line option <code>-itc</code> for\n        italics.</li>\n\n        <li>add <code>colorIT</code> and <code>colorITMode</code>\n        for italics, like <code>colorBD</code>, etc.</li>\n\n        <li>guard <code>allowPasteControls</code> against\n        modification by <code>editres</code>.</li>\n      </ul>\n    </li>\n\n    <li>change <code>passedPty</code> from fixed-length to\n    allocated to ensure that it is long enough to hold the\n    <code>-S</code> option value (report by Ben Longbons).</li>\n\n    <li>improve ReGIS graphics initialization (Ross Combs):\n      <ul>\n        <li>add a new string resource to set the default ReGIS\n        font.</li>\n\n        <li>fix a caching problem where the font name wasn't taken\n        into consideration when looking up cached metrics.</li>\n\n        <li>enables use of fractional values in coordinates (which\n        in turn allows setting the coordinates to something like\n        [0,1][1,0])</li>\n\n        <li>doubles the minimum ReGIS graphic to 200x200</li>\n\n        <li>set the default ReGIS image size to \"auto\"</li>\n\n        <li>fix some swapped width/height parameters in TRACE\n        messages</li>\n\n        <li>add support for scaling and mirrored coordinate systems\n        to the screen address command</li>\n\n        <li>sets a minimum ReGIS graphics size of 100x100 --\n        smaller address ranges will be scaled up</li>\n\n        <li>reset the image if either the width or height is zero\n        (which should happen together or not at all, but switching\n        the logic gets rid of some parentheses)</li>\n\n        <li>adds support for alternate screen coordinates (just\n        offsets, not inverted coordinates or scaling)</li>\n\n        <li>keeps the graphics state across ReGIS calls unless P1\n        or P3 entry codes are used</li>\n\n        <li>changes loops to continue after parsing whitespace to\n        allow trailing whitespace</li>\n\n        <li>fixes some incorrect character casts</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_313\" id=\"xterm_313\">Patch #313 -\n  2014/11/28</a></h1>\n\n  <ul>\n    <li>add <code>regisScreenSize</code> resource setting to allow\n    custom screensizes for ReGIS graphics (prompted by discussion\n    with Scott Froebe).</li>\n\n    <li>fix some minor issues in manpage (Jens Schweikhardt).</li>\n\n    <li>improve ReGIS font-handling (Ross Combs):\n      <ul>\n        <li>remove \"random junk\" generation for unknown\n        characters</li>\n\n        <li>add xterm extension to load user glyphs for alphabet\n        0</li>\n\n        <li>add xterm extension to specify loading an alphabet from\n        a font by name</li>\n\n        <li>fix bug with use of empty alphabet slots which caused\n        slot 0 to be clobbered</li>\n\n        <li>update/clarify ReGIS-related comments</li>\n\n        <li>add DECprint extension for printing/clearing the screen\n        (only clearing is performed)</li>\n      </ul>\n    </li>\n\n    <li>improve ReGIS colorspec conversion (Ross Combs):\n      <ul>\n        <li>avoid some floating point math for colorspace\n        conversion</li>\n\n        <li>move two copies of colorspec parsing to a single\n        function</li>\n\n        <li>change colorspec parsing to handle components being out\n        of order or with spaces and commas between them</li>\n\n        <li>add support for an extension where RGB components can\n        be given instead of HLS</li>\n      </ul>\n    </li>\n\n    <li>improve use of const, e.g., for the <code>LineData</code>\n    pointers (patch by Ross Combs).</li>\n\n    <li>clip of graphics that overlap the scrollback buffer and alt\n    screen (patch by Ross Combs).</li>\n\n    <li>amend change to focus-change events in <a href=\n    \"#xterm_287\">patch #287</a> to limit it to suppressing the\n    reset of the urgency-hint, because some useful\n    <code>FocusOut</code> events were lost (report by Joe\n    Peterson).</li>\n\n    <li>modify dpkg build-script to configure xterm-dev as an\n    <code>x-terminal-emulator</code> alternative.</li>\n\n    <li>extend the <code>--with-xterm-symlink</code> feature to\n    make symbolic links for the other programs and scripts.</li>\n\n    <li>minor fix to <code>vttests/resize.pl</code> to avoid\n    undefined variable when receiving broken/missing response,\n    e.g., from mrxvt.</li>\n\n    <li>change the way that ReGIS graphics are refreshed (patch by\n    Ross Combs):\n      <ul>\n        <li>it pre-composes any overlapping graphics to avoid\n        unnecessary and flickering draws</li>\n\n        <li>it adds a three-dimensional lookup table for RGB -&gt;\n        pixel values and uses this across all graphics</li>\n\n        <li>it draws in line segments when there is a run of the\n        same color</li>\n\n        <li>in cases where there are no transparent parts, it uses\n        an XImage to draw</li>\n\n        <li>it hooks into the double-buffering support if it is\n        enabled (though this doesn't seem to get rid of all\n        flicker).</li>\n      </ul>\n      This has the effect of reducing flicker and speeding up\n      redraws.\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_312\" id=\"xterm_312\">Patch #312 -\n  2014/09/28</a></h1>\n\n  <ul>\n    <li>undo change to <code>do_select_regex()</code> in <a href=\n    \"#xterm_311\">patch #311</a> (reports by H Merijn Brand,\n    Sven-Haegar Koch, Debian #762978).</li>\n  </ul>\n\n  <h1><a name=\"xterm_311\" id=\"xterm_311\">Patch #311 -\n  2014/09/18</a></h1>\n\n  <ul>\n    <li>mention <code>xclip</code> in manpage as an alternative\n    workaround for copying clipboard data, noting that\n    <code>selectToClipboard</code> (see <a href=\"#xterm_209\">patch\n    #209</a>) is the recommended approach (Debian #639094).</li>\n\n    <li>correct comparison in do_select_regex() of working position\n    against starting column.</li>\n\n    <li>correct initialization for regular-expression feature of\n    <code>exec-selectable</code> and <code>insert-selectable</code>\n    actions (Debian #758633).</li>\n\n    <li>modify logic for <code>exec-formatted</code> and\n    <code>insert-formatted</code> actions to ensure that the\n    formatting occurs just after the selection is received (Debian\n    #758633).</li>\n\n    <li>account for state of reverse-video in special case of\n    cursor coloring (Debian #759734).</li>\n\n    <li>fix a sign-extension problem in ReGIS support, as well as\n    correcting a case where ignored-characters were not really\n    ignored (patch by Ross Combs).</li>\n\n    <li>Enable the \"Escape Sequence\" menu entry when an OSC&nbsp;50\n    is received. Also disable it if the escape sequence specifies\n    no font (Debian #760208).</li>\n\n    <li>improve fix for the <code>fontsel</code> menu entry from\n    <a href=\"#xterm_304\">patch #304</a>: because the recovery used\n    the \"current font\", it would fail if one first selected a valid\n    font, then an invalid font (Debian #760207).</li>\n\n    <li>correct an off-by-one in limit-check for\n    <code>ScrnLimitChar</code> function (report by Egmont\n    Koblinger).</li>\n  </ul>\n\n  <h1><a name=\"xterm_310\" id=\"xterm_310\">Patch #310 -\n  2014/07/25</a></h1>\n\n  <ul>\n    <li>update package/freebsd files based on xterm #309 port.</li>\n\n    <li>adapt changes from Minux3.2 which ported <a href=\n    \"#xterm_197\">xterm #197</a>, to allow building on that platform\n    both using <code>imake</code> as well as using the configure\n    script.</li>\n\n    <li>update precompose.c based on Unicode 7.0</li>\n\n    <li>build-fix for <code>--with-Xaw3dxft</code> option (report\n    by Emanuel Haupt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_309\" id=\"xterm_309\">Patch #309 -\n  2014/07/13</a></h1>\n\n  <ul>\n    <li>modify configure script to work around debris left by\n    XQuartz upgrades.</li>\n\n    <li>modify test-package scripts to enable ReGIS graphics.</li>\n\n    <li>improvements/additions to ReGIS graphics, e.g., drawing\n    text (Ross Combs).</li>\n\n    <li>add <code>--with-Xaw3dxft</code>, to link with Xaw 3d xft\n    library (Stephen P Wall).</li>\n\n    <li>amend reset for cursor-shape to take into account\n    <code>cursorUnderline</code> resource (report by Christian\n    Weisgerber).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_308\" id=\"xterm_308\">Patch #308 -\n  2014/06/19</a></h1>\n\n  <ul>\n    <li>corrected font used for clipping double-width bitmap fonts\n    from <a href=\"#xterm_307\">patch #307</a> changes to work around\n    mis-scaled fonts (Debian #752947).</li>\n\n    <li>improve wording of a warning message.</li>\n  </ul>\n\n  <h1><a name=\"xterm_307\" id=\"xterm_307\">Patch #307 -\n  2014/06/17</a></h1>\n\n  <ul>\n    <li>fill background for top/bottom parts of\n    double-width/double-height characters, to cover occasional gaps\n    due to bitmap font-scaling (report by Egmont Koblinger).</li>\n\n    <li>amend resets for keyboard-type, pointer-mode and\n    title-modes from <a href=\"#xterm_305\">xterm #305</a> changes to\n    account for resource settings (Debian #751351).</li>\n\n    <li>modify <em>printAttributes</em> feature to include new SGR\n    codes.</li>\n\n    <li>modify cursor show/hide logic to work with italic\n    fonts.</li>\n\n    <li>do clipping and filling for a case with bitmap-fonts and\n    italics when the font server returns only a \"close\" match\n    (report/testcase by Egmont Koblinger).</li>\n\n    <li>adjust loop comparison for underlining to display\n    underlines on 5x8 font as in <a href=\"#xterm_304\">patch\n    #304</a> (Debian #750733).</li>\n\n    <li>amend fix for Freedesktop #15979 (Debian #750733).</li>\n\n    <li>amend xterm.appdata.xml, making it validate with current\n    schema.</li>\n  </ul>\n\n  <h1><a name=\"xterm_306\" id=\"xterm_306\">Patch #306 -\n  2014/06/03</a></h1>\n\n  <ul>\n    <li>fixes for display-errors in new SGR codes (report by Egmont\n    Koblinger).</li>\n  </ul>\n\n  <h1><a name=\"xterm_305\" id=\"xterm_305\">Patch #305 -\n  2014/06/02</a></h1>\n\n  <ul>\n    <li>add <code>xterm.appdata.xml</code> (request by Richard\n    Hughes). By the way, none of the <em>released</em> validators\n    yet handle <code>&lt;licence&gt;</code> tags (or\n    <code>&lt;metadata_license&gt;</code>, etc).</li>\n\n    <li>fix memory leaks in bitmap font-name caching.</li>\n\n    <li>other changes to hard-reset behavior:\n      <ul>\n        <li>reset keyboard-type on hard-reset.</li>\n\n        <li>reset pointer-mode (<code>pointerMode</code>) on\n        hard-reset</li>\n\n        <li>reset title-modes (<code>titleModes</code>) on\n        hard-reset</li>\n\n        <li>reset cursor-shape on hard or soft-reset</li>\n\n        <li>reset LEDs on hard-reset.</li>\n\n        <li>reset DECSACE on hard-reset.</li>\n      </ul>\n    </li>\n\n    <li>reset bracketed-paste mode on hard-reset (suggested by\n    Egmont Koblinger).</li>\n\n    <li>modify UTF-8 decoder to account for\n    <code>allowC1Printable</code> resource.</li>\n\n    <li>revise <code>getXftColor</code> to ensure that its sequence\n    number will not overflow in long-running sessions.</li>\n\n    <li>minor fix to selection to prevent hidden character from\n    being returned in selection data (report by Egmont\n    Koblinger).</li>\n\n    <li>add <code>-sh</code> to help-message.</li>\n\n    <li>amend check for incomplete fonts to always decide that a\n    character is missing if the font lacks per-character metrics\n    (prompted by Freedesktop #15979).</li>\n\n    <li>minor reorganization to implement &ldquo;filler&rdquo; SGR\n    features. There are no established applications which rely upon\n    these; some people find them amusing.\n      <ul>\n        <li>separate bits used to manage drawing state from\n        attribute-bits.</li>\n\n        <li>implement SGR codes 2, 3, 9, 21 and their corresponding\n        resets.</li>\n\n        <li>add configure option <code>--disable-wide-attrs</code>\n        to disable the feature.</li>\n      </ul>\n    </li>\n\n    <li>additional changes for ReGIS support (Ross Combs):\n      <ul>\n        <li>fix some arc drawing bugs and add support for pattern\n        shading.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_304\" id=\"xterm_304\">Patch #304 -\n  2014/05/03</a></h1>\n\n  <ul>\n    <li>add debugging check for parsing table entries, fixed a few\n    inconsistencies.</li>\n\n    <li>handle utmp/utmpx strings consistently with new function\n    that null-pads unused locations.</li>\n\n    <li>build-fix for imake configuration with FreeBSD 9 and later,\n    to account for replacing <code>utmp</code> with\n    <code>utmpx</code>.</li>\n\n    <li>improve handling of the <code>fontsel</code>\n    (font-selection) menu item:\n      <ul>\n        <li>initialize the menu entry differently if the toolbar\n        configuration is used, i.e., enabling it without attempting\n        to use the current selection as a font name. Because of the\n        way in which the toolbar is setup, this attempt usually\n        failed, and would result in a warning.</li>\n\n        <li>if the menu action fails, e.g., no font can be loaded\n        for the given selected name, then recover by resuming with\n        the current font. Before, the recovery went to the default\n        font. That was done to work around missing bitmap font in\n        <a href=\"#xterm_276\">patch #276</a>.</li>\n      </ul>\n    </li>\n\n    <li>document OSC&nbsp;119 in the control sequences listing\n    (report by Egmont Koblinger).</li>\n\n    <li>modify special handling of <code>XF86Paste</code> or\n    <code>SunPaste</code> keysyms (see <a href=\"#xterm_227\">patch\n    #227</a>) to use the standard shift/lock modifiers in case\n    those are, for example, used in level 3 in an XKB file (patch\n    by Matthieu Herrb).</li>\n\n    <li>configure macro updates:\n      <ul>\n        <li>drop the <code>-no-gcc</code> option from\n        CF_INTEL_COMPILER</li>\n\n        <li>modify CF_XOPEN_SOURCE to suppress the check for\n        defining _XOPEN_SOURCE on Solaris</li>\n      </ul>\n    </li>\n\n    <li>reduce bss storage used for ReGIS/Sixel modules, as well as\n    cleanup storage usage in other modules.</li>\n\n    <li>initial changes for ReGIS support (Ross Combs):\n      <ul>\n        <li>document control-sequences</li>\n\n        <li>separate ifdef's for sixel and color-register\n        features</li>\n\n        <li>add configuration for VT382</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_303\" id=\"xterm_303\">Patch #303 -\n  2014/03/06</a></h1>\n\n  <ul>\n    <li>improve check for <code>/etc/shells</code> to allow its\n    entries to be symbolic links.</li>\n\n    <li>fix a regression in <a href=\"#xterm_302\">patch #302</a>\n    fixes relating to interaction of <code>SHELL</code> and\n    <code>XTERM_SHELL</code> variables (Debian #740919).</li>\n\n    <li>improve manpage discussion of use of\n    <code>/etc/shells</code> for validating the <code>SHELL</code>\n    environment variable.</li>\n\n    <li>further improve the approximation for color map by ignoring\n    bits which would not be applied by the rgb masks for the\n    current visual (report by Joe Peterson).</li>\n\n    <li>add <code>-report-colors</code> to usage-message (report by\n    Joe Peterson).</li>\n  </ul>\n\n  <h1><a name=\"xterm_302\" id=\"xterm_302\">Patch #302 -\n  2014/03/02</a></h1>\n\n  <ul>\n    <li>amend approximation for color map introduced in <a href=\n    \"#xterm_277\">patch #277</a> to make that apply only to\n    <code>TrueColor</code> (adapted from patch by Joe\n    Peterson).</li>\n\n    <li>add <code>-report-colors</code> option, to show colors as\n    they are allocated.</li>\n\n    <li>fix some gcc <code>-Wcast-qual</code> warnings.</li>\n\n    <li>correct app-defaults location for CentOS-4 in\n    xterm.spec</li>\n\n    <li>improve check in <code>minstall.sh</code> for X manpage's\n    section number; add sample dependencies for the relevant\n    documentation package to packaging test-scripts (prompted by\n    Novell #779474).</li>\n\n    <li>modify sample build-scripts for dpkg and rpm to ensure that\n    <code>vttests</code> scripts are uncompressed and\n    executable.</li>\n\n    <li>modify Perl scripts in <code>vttests</code> to use\n    <code>env</code> to find Perl rather than relying on\n    <code>/usr/bin/perl</code> This makes the sample scripts usable\n    with NetBSD and other systems using <em>pkgsrc</em>.</li>\n\n    <li>amend check from <a href=\"#xterm_301\">patch #301</a> for\n    valid shell to permit existing <code>SHELL</code> value to\n    specify the shell; clarify the behavior in the manpage (report\n    by Emmanuel Thom&eacute;).</li>\n\n    <li>amend change to wide-character processing from <a href=\n    \"#xterm_257\">patch #257</a> to allow switching to/from UTF-8\n    encoding if the <code>utf8</code> resource was not set to\n    &ldquo;always&rdquo; (report by Honza Maly).</li>\n\n    <li>fix incorrect free from <a href=\"#xterm_301\">patch #301</a>\n    changes, if explicit program without <code>-e</code> option is\n    a valid shell (patch by Romain Francoise).</li>\n  </ul>\n\n  <h1><a name=\"xterm_301\" id=\"xterm_301\">Patch #301 -\n  2014/01/19</a></h1>\n\n  <ul>\n    <li>OSC&nbsp;104 and 105 did not accept parameter to reset a\n    specific color (patch by Egmont Koblinger).</li>\n\n    <li>add configure check for <code>initgroups</code>, and use\n    that function to complement its use of <code>setgid</code>\n    (prompted by patch by Miroslav Lichvar).</li>\n\n    <li>improve manpage description of scrollbar translations\n    versus the vt100 translations (Debian #723573).</li>\n\n    <li>add a few paragraphs to manpage explaining the implications\n    of xterm's reliance on X Toolkit for command-line parsing.</li>\n\n    <li>modify cursor-theme logic to check if the environment\n    variable <code>XCURSOR_THEME</code> is set to a nonempty value\n    before constructing a dummy them (prompted by similar check\n    added in OpenBSD CVS).</li>\n\n    <li>add check for a case where TrueType bold font is missing a\n    glyph where the non-bold font has it. Temporarily switch to the\n    non-bold font to draw the glyph (report by David\n    Demelier).</li>\n\n    <li>minor documentation fixes for ctlseqs.ms</li>\n\n    <li>only set <code>SHELL</code> environment variable to\n    programs found in <code>/etc/shells</code> (prompted by\n    patch/report by Al Poole).</li>\n\n    <li>build-fix, when <code>--disable-wide-chars</code>\n    <code>--disable-boxchar</code> is used (prompted by patch by\n    Andrey Panov).</li>\n  </ul>\n\n  <h1><a name=\"xterm_300\" id=\"xterm_300\">Patch #300 -\n  2013/12/03</a></h1>\n\n  <ul>\n    <li>amend workaround for <code>Xcursor</code> library from\n    <a href=\"#xterm_298\">patch #298</a>; the suggested solution for\n    Debian #466704 fell afoul of a bug in <code>Xcursor</code>\n    which treated an empty value for <code>Inherits=</code> as a\n    valid theme&mdash;and resulted in a stack overflow due to\n    unbounded recursion. Certain environments such as XFCE4 exposed\n    the bug. A related report in Debian #531679 was closed without\n    following the recommendation to limit stack recursion in this\n    library (reported by Sergey V Dyatko, Debian #731269).</li>\n  </ul>\n\n  <h1><a name=\"xterm_299\" id=\"xterm_299\">Patch #299 -\n  2013/12/01</a></h1>\n\n  <ul>\n    <li>fix regression in line-drawing from <a href=\n    \"#xterm_297\">patch #297</a> changes for NRCS exposed by change\n    to <code>assumeAllChars</code> resource in <a href=\n    \"#xterm_298\">patch #298</a> (report by Markus Waldeck).</li>\n  </ul>\n\n  <h1><a name=\"xterm_298\" id=\"xterm_298\">Patch #298 -\n  2013/11/27</a></h1>\n\n  <ul>\n    <li>quiet a warning about ambiguity when <code>-h</code>\n    command-line option is parsed, since <code>-help</code> is used\n    rather than the options mentioned in the message. This warning\n    was caused by fixes in <a href=\"#xterm_272\">patch\n    #272</a>.</li>\n\n    <li>remove an extra check for keypad-mode which interfered with\n    the <a href=\"#xterm_280\">patch #280</a>\n    <code>modifyKeyboard</code> feature for the numeric keypad\n    (report by David Conners).</li>\n\n    <li>change default for <code>assumeAllChars</code> resource\n    (Debian #725682). There are unresolved issues with Terminus\n    fonts, e.g., Debian #722017.</li>\n\n    <li>add <code>-report-fonts</code> command-line option and\n    <code>reportFonts</code> resource to optionally report the\n    fonts which are loaded, and their metrics such as the number of\n    missing glyphs.</li>\n\n    <li>work around <code>Xcursor</code> library to make\n    <code>pointerColor</code> resource work as documented (Debian\n    #466704, analysis by Vincent Lef&egrave;vre).</li>\n\n    <li>amend change from <a href=\"#xterm_297\">patch #297</a> for\n    ASCII-equivalents to ensure that missing characters which\n    happen to be double-width are padded to the expected number of\n    columns. Also, correct the choice between normal/wide Xft fonts\n    used when checking for missing characters (reported by WU Yue,\n    Debian #728949, Gentoo #491334).</li>\n\n    <li>modify sixel-graphics drawing to account for scrollbar\n    width (report by Mario Edelmann).</li>\n\n    <li>fix remaining issue with <code>DECNRCM</code>; the British\n    character set was confused with ISO Latin-1 (report by Hayaki\n    Saito).</li>\n\n    <li>build-fix for <code>--disable-boxchars</code> configure\n    option.</li>\n\n    <li>updated configure macros, from ongoing work on lynx and\n    ncurses.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_297\" id=\"xterm_297\">Patch #297 -\n  2013/09/10</a></h1>\n\n  <ul>\n    <li>modify check for missing cells in bitmap font to work\n    around terminus 10646 encoding, which is mostly missing, add\n    <code>assumeAllChars</code> resource to provide the older\n    behavior.</li>\n\n    <li>modify macros used to check for missing cells in bitmap\n    fonts to pick up a long-overlooked improvement made to xfd in\n    XFree86.</li>\n\n    <li>improve workaround for groff versus ASCII-equivalents;\n    <a href=\"#xterm_185\">patch #185</a> had overlooked Xft\n    configuration (reported by anonymous user on Arch Linux\n    forum).</li>\n\n    <li>review/extend <code>DECNRCM</code> support (prompted by\n    report by Hayaki Saito asking about the two \"A\" codes).\n      <ul>\n        <li>make pasting of DECNRCM data work by translating the\n        pasted data into the selected encoding.</li>\n\n        <li>limit mode changes to VT220 and up.</li>\n\n        <li>ignore SCS for National Replacement Characters if\n        <code>DECNRCM</code> is not set.</li>\n\n        <li>add tables and logic to decode SCS controls ending with\n        \"%\" and one additional character. This expects the parsing\n        of SCS to VT320.</li>\n\n        <li>also added parsing for SCS of DEC Supplemental and DEC\n        Technical, which are for VT2xx and VT3xx respectively.</li>\n\n        <li>implement VT220 Multinational character set \"GR\" aka\n        \"DEC Supplemental Graphic\".</li>\n\n        <li>DEC Technical character set based on <a href=\n        \"http://www.vt100.net/charsets/technical.html\">vt100.net\n        description</a>.</li>\n\n        <li>implement Portuguese NRC.</li>\n\n        <li>provide for temporarily switching to/from NRC mode from\n        UTF-8 mode when <code>DECNRCM</code> is set or reset.</li>\n      </ul>\n    </li>\n\n    <li>minor fix to assert's found while testing examples from\n    <a href=\"https://gist.github.com/ttdoda\">ttdoda's\n    slrm-test1.txt</a>.</li>\n\n    <li>modify <code>DECLRMM</code> to not update the cursor\n    position (report by Iwamoto Kouichi forwarded by Hayaki\n    Saito).</li>\n\n    <li>modify cursor-position report to take origin-mode into\n    account (report by Hayaki Saito, see also <a href=\n    \"https://github.com/gnachman/iTerm2/pull/129\">iTerm2 pull\n    request 129</a>).</li>\n\n    <li>correct off-by-one comparison in when handling\n    carriage-return at left margin (patch by Iwamoto Kouichi,\n    forwarded by Hayaki Saito).</li>\n\n    <li>improve handling of <code>faceName</code> resource when a\n    \"size=\" property is embedded in it, by using that size to\n    replace the default <code>faceSize</code> resource. This lets\n    xterm honor the other faceSize resources (report by Jens\n    Schweikhardt).</li>\n\n    <li>improve OSC&nbsp;52 selection-data by setting its timestamp\n    to correspond to the most-recent event received by xterm, to\n    ensure that calls to <code>XtOwnSelect</code> succeed even if\n    the selection is manipulated solely through the keyboard\n    (prompted by patch by Richard Tollerton).</li>\n\n    <li>change configure-script defaults for \"luit\" and\n    \"wide-chars\" options to match the values used in the imake\n    configuration, to lessen user surprise if they are accustomed\n    to building xterm using imake(report by Andries E\n    Brouwer).</li>\n\n    <li>improve the imake-related configuration's check if xterm is\n    started in a locale that uses UTF-8 encoding. Before, this\n    checked the locale settings only for \"UTF-8\", now it checks\n    ignoring case for \"UTF-8\" and \"UTF-8\" (report by Andries E\n    Brouwer).</li>\n  </ul>\n\n  <h1><a name=\"xterm_296\" id=\"xterm_296\">Patch #296 -\n  2013/07/10</a></h1>\n\n  <ul>\n    <li>improve experimental sixel feature (Ross Combs).</li>\n\n    <li>modify delimiter in configure macro used to add a library\n    after a given library to avoid confusion with <code>-Wl</code>\n    pass-through options to linker (NetBSD #48031).</li>\n\n    <li>fix quoting in expression used to trim extra libraries from\n    <a href=\"#xterm_295\">patch #295</a> changes (report by Thomas\n    Klausner).</li>\n  </ul>\n\n  <h1><a name=\"xterm_295\" id=\"xterm_295\">Patch #295 -\n  2013/07/06</a></h1>\n\n  <ul>\n    <li>adjust order of libraries to work around incomplete symbol\n    resolution when using <code>--as-needed</code> option\n    (ArchLinux #36047).</li>\n\n    <li>minor fix for <code>plink.sh</code>, for IRIX64.</li>\n  </ul>\n\n  <h1><a name=\"xterm_294\" id=\"xterm_294\">Patch #294 -\n  2013/07/05</a></h1>\n\n  <ul>\n    <li>add note in ctlseqs.ms for CPR response pointing out a\n    potential point of confusion with the string sent by a modified\n    F1 key (suggested by Bram Moolenaar).</li>\n\n    <li>improve <code>plink.sh</code> by checking if the linker\n    supports the <code>--as-needed</code> option (suggested by\n    David Philippi).</li>\n\n    <li>improve clearing for private mode 1049 when switching to\n    the alternate screen (Debian #711758).</li>\n\n    <li>amend fix from <a href=\"#xterm_292\">patch #292</a> by\n    removing now-unneeded chunk which introduced problem in\n    selection (Debian #714527).</li>\n\n    <li>add definition to optionally override compiled-in class for\n    xterm from makefile, needed for test-packages.</li>\n\n    <li>add configure option\n    <code>--enable-sixel-graphics</code></li>\n\n    <li>add experimental support for sixel graphics (Ross\n    Combs).</li>\n  </ul>\n\n  <h1><a name=\"xterm_293\" id=\"xterm_293\">Patch #293 -\n  2013/05/27</a></h1>\n\n  <ul>\n    <li>modify sample xterm.spec to use newer icon</li>\n\n    <li>add configure option <code>--with-icon-symlink</code> to\n    work around systems which map icon requests for to a single\n    \"xterm\" icon, but neglect to install the icon needed for window\n    decorations (report by H Merijn Brand).</li>\n\n    <li>improve parameterizing of sample xterm.spec</li>\n\n    <li>amend fix for printer from <a href=\"#xterm_280\">patch\n    #280</a>, removing a reset of the signal handler for\n    <code>SIGCHLD</code> (report by Joe Julian).</li>\n\n    <li>set environment variable <code>XTERM_FILTER</code> if a\n    locale-filter is used.</li>\n\n    <li>enable <code>DEBUG</code> logic when\n    <code>--enable-trace</code> configure option is given.</li>\n\n    <li>improve description of <code>initialFont</code>,\n    <code>set-vt-font</code> and <code>set-tex-text</code> in\n    manpage (Debian #707899).</li>\n\n    <li>fix regression from <a href=\"#xterm_292\">patch #292</a>;\n    selecting a word that ended at the right margin without\n    wrapping would not select the last cell (report by Christian\n    Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_292\" id=\"xterm_292\">Patch #292 -\n  2013/04/25</a></h1>\n\n  <ul>\n    <li>add limit-check when double-click selects a word; if the\n    saved-lines were scrolled back and the word selected wrapped at\n    the screen's lower right corner, an assertion was triggered\n    (patch by Taketo Kabe).</li>\n\n    <li>correct limit-check in <code>unsaveEditBufLines</code>,\n    fixing a case where enlarging the terminal size could show a\n    blank line where there actually is available text (patch by\n    Bertram Felgenhauer).</li>\n\n    <li>add <code>PasteControls</code> feature to\n    <code>allowWindowOps</code> which by default disallows pasting\n    control characters other than formatting such as carriage\n    return (discussion with Hayaki Saito).</li>\n\n    <li>fix typo in ctlseqs.ms for DECRQM response (patch by\n    Emanuele Giaquinta).</li>\n\n    <li>update default shown in configure <code>--help</code>\n    message for <code>--with-terminal-id</code> option (patch by\n    Andres Perera).</li>\n\n    <li>rename script/preprocessor variables used for substituting\n    the <code>backarrowKey</code> default value for consistency\n    (patch by Andres Perera).</li>\n\n    <li>set umask to 077 before creating debugging-trace\n    files.</li>\n\n    <li>add configure option <code>--disable-openpty</code> to\n    control whether openpty() may be used in preference to\n    posix_openpt().</li>\n\n    <li>improve workaround from <a href=\"#xterm_279\">patch #279</a>\n    for BSD systems which do not complete initialization until both\n    sides of the pseudoterminal are opened, by preferring openpty()\n    function over posix_openpt() when available (report by\n    Christian Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_291\" id=\"xterm_291\">Patch #291 -\n  2013/02/26</a></h1>\n\n  <ul>\n    <li>add validity check for xterm widget parameter to\n    <code>AlternateScroll</code> function, needed to handle wheel\n    mouse events in the scrollbar area since <a href=\n    \"#xterm_282\">patch #282</a> changes which introduced\n    <code>alternateScroll</code> feature (Redhat #874327).</li>\n  </ul>\n\n  <h1><a name=\"xterm_290\" id=\"xterm_290\">Patch #290 -\n  2013/02/12</a></h1>\n\n  <ul>\n    <li>revert of <a href=\"#xterm_282\">patch #282</a> change was\n    incomplete (report by Jim Reisert).</li>\n\n    <li>fix typo in manpage (report by Vincent\n    Lef&egrave;vre).</li>\n  </ul>\n\n  <h1><a name=\"xterm_289\" id=\"xterm_289\">Patch #289 -\n  2013/02/08</a></h1>\n\n  <ul>\n    <li>revert the <a href=\"#xterm_282\">patch #282</a> change which\n    restored \"lost\" text after shrinking/growing the screen size.\n    If the screen was updated between the two resizing operations,\n    unexpected text might be shown at the end (report/testcase by\n    Joe Peterson).</li>\n\n    <li>reverse the arrow-keys sent for\n    <code>alternateScroll</code> to match the usage in browsers\n    (suggested by Dieter Roelants).</li>\n\n    <li>modify mouse reports to consistently indicate motion events\n    whether or not a button is pressed. Old behavior (since\n    <a href=\"#xterm_127\">patch #127</a> modified encoding for wheel\n    mouse) showed only that the button was released if no button\n    had been pressed (report by Andy Koppe).</li>\n\n    <li>correct and improve behavior for SGR 1006 mouse protocol on\n    button release in any-event mode. Initial implementation in\n    <a href=\"#xterm_277\">patch #277</a> left internal state showing\n    the last button pressed when reporting motion events. It now\n    keeps track of all buttons which have been pressed and\n    released, showing the lowest remaining button by number in the\n    response (reports by Hayaki Saito, Andy Koppe).</li>\n\n    <li>fix inconsistency between <code>TermColors</code> and\n    <code>OscTextColors</code> enums which interchanged values for\n    tektronix cursor color and highlight foreground in control\n    sequences in <a href=\"#xterm_225\">patch #225</a> (report/patch\n    by Peder Stray).</li>\n\n    <li>fix inconsistent use of noreturn-attribute in\n    <code>Exit</code> function which interfered with clang\n    --analyze.</li>\n\n    <li>remove incorrect <code>free</code> used in computation of\n    <code>XTERM_SHELL</code> variable, from Coverity fixes in\n    <a href=\"#xterm_288\">patch #288</a> (FreeBSD #175782).</li>\n\n    <li>add <code>--with-valgrind</code> option to configure script\n    for consistency with my other programs.</li>\n\n    <li>update table of ambiguous width characters in wcwidth.c\n    based on Unicode 6.2.0</li>\n\n    <li>update table of combining characters in wcwidth.c based on\n    Unicode 6.2.0</li>\n\n    <li>update precompose.c based on Unicode 6.2.0</li>\n  </ul>\n\n  <h1><a name=\"xterm_288\" id=\"xterm_288\">Patch #288 -\n  2013/01/09</a></h1>\n\n  <ul>\n    <li>fix a special case in <code>ShowCursor</code> where the\n    foreground and background colors of the current position are\n    the same. In that case, choose the further of the window's\n    foreground and background colors for the cursor color.</li>\n\n    <li>modify <code>alternateScroll</code> feature added in\n    <a href=\"#xterm_282\">patch #282</a> to use either\n    <code>CSI</code> or <code>SS3</code> according to the cursor\n    keys application mode setting, to simplify using it in vi, etc.\n    (suggested by Dietar Roelants).</li>\n\n    <li>revise manpage for <code>resize</code> to clarify the\n    changes which <code>resize</code> may make to the terminal\n    settings as well as to the terminal itself.</li>\n\n    <li>remove code such as <code>struct ttysize</code>, used for\n    SunOS 3 and 4.</li>\n\n    <li>modify configure script and makefile to check for\n    <code>groff</code> and suppress groff-specific rules if groff\n    is not found.</li>\n\n    <li>modify ctlseqs.ms and makefile to work around bugs in\n    <code>grohtml</code> which cause \".png\" files to be truncated\n    when producing html documentation.</li>\n\n    <li>modify suffix rules for \"make docs\" to make the names of\n    the generated \".png\" files predictable, helping to work around\n    longstanding problems with this feature of groff&mdash;none of\n    its releases work for <em>all</em> of xterm's tables..</li>\n\n    <li>correct typo in ctlseqs.ms for DECIC and DECDC; the\n    character preceding the final \"<code>~</code>\" is an ASCII\n    single-quote \"<code>'</code>\" rather than a space (report by\n    Paul LeoNerd Evans).</li>\n\n    <li>update CF_GCC_VERSION macro, handling both Debian and\n    Darwin.</li>\n\n    <li>improve configure script checks for the\n    <code>--with-desktop-category</code> option. After <a href=\n    \"#xterm_280\">patch #280</a> changes, if no value was given for\n    this option, and no existing desktop files found for\n    comparison, the incorrect \"auto\" value was passed into the\n    generated desktop file (report by Julien Cristau).</li>\n\n    <li>modify sample build-scripts to disable check for\n    <code>imake</code> due to code-rot in Xorg.</li>\n\n    <li>add <code>-v</code> command-line option to\n    <code>resize</code>, reporting the same version string as\n    <code>xterm</code> and the two shell-wrappers.</li>\n\n    <li>make name-transformation apply to other occurrences of\n    <code>resize</code>, other manpages.</li>\n\n    <li>special-case the name-transformation in xterm's manpage in\n    the NAME section so that the result works with\n    <code>makewhatis</code> (report by Julien Cristau).</li>\n\n    <li>modify install-rules for manpages to put each program's\n    respective transformed name into the header rather than\n    xterm's.</li>\n\n    <li>remove deprecated files: proto.h, os2main.c</li>\n\n    <li>minor fixes based on Coverity scan, including:\n      <ul>\n        <li>correct caching of Atom value for the font menu's\n        \"Selection\" entry.</li>\n\n        <li>ensure that utmp/utmpx calls do not depend upon\n        trailing nulls in the <code>ut_id</code> and\n        <code>ut_line</code> values.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_287\" id=\"xterm_287\">Patch #287 -\n  2012/11/25</a></h1>\n\n  <ul>\n    <li>fix a case where in_put() loop could continue when it has\n    found an X event rather than the pty, causing the pty-read to\n    be delayed (patch by Balazs Kezes).</li>\n\n    <li>add option to <code>pointerMode</code> resource and\n    corresponding control sequences to allow text-cursor to remain\n    hidden if the pointer leaves/enters the window via accelerator\n    keys. Ordinary motion within the window restores the pointer\n    (prompted by patch by Balazs Kezes).</li>\n\n    <li>remove special case of modifiers for the\n    <code>Mode_switch</code> and <code>XK_ISO_Level3_Shift</code>\n    from <a href=\"#xterm_223\">patch #223</a>. Verified that the\n    conflict which this was intended to resolve does not happen for\n    normal compose- or modeswitch-handling (prompted by patch by\n    Balazs Kezes, Debian #638694).</li>\n\n    <li>modify the handling of focus-change events to ignore those\n    whose detail is <code>NotifyPointer</code>, since those are\n    sent in addition to focus-change events directed to the old/new\n    windows having focus. In particular, this prevents the\n    urgency-hint from being reset inadvertently (prompted by patch\n    by Balazs Kezes).</li>\n\n    <li>modify description of <code>iconName</code> in manpage to\n    make it clearer that this resource does not specify the\n    filename of an icon (discussion with Ian Collier).</li>\n\n    <li>modify <code>iconHint</code> resource to allow suppressing\n    the built-in icon by setting this to \"none\" (discussion with\n    Ian Collier).</li>\n\n    <li>make <code>-iconic</code> option work with the toolbar\n    configuration.</li>\n\n    <li>correct initialization of window manager hints used to set\n    the icon-pixmap. That detail from <a href=\"#xterm_282\">patch\n    #282</a> overwrote state used to control the\n    <code>-iconic</code> command-line option (report by Ian\n    Collier).</li>\n\n    <li>fix paste64 feature for the case where the selection comes\n    from the current terminal. The selection callback can happen\n    after the reply is partly built, making it necessary to flush\n    the reply-buffer to keep things in the proper order (report by\n    Ailin Nemui).</li>\n\n    <li>reject command-line options which are longer than the\n    options in xterm's table, to avoid mismatches (Redhat\n    #875305).</li>\n\n    <li>correct attribution for <a href=\"#xterm_282\">patch #282</a>\n    changes.</li>\n  </ul>\n\n  <h1><a name=\"xterm_286\" id=\"xterm_286\">Patch #286 -\n  2012/10/29</a></h1>\n\n  <ul>\n    <li>fix <code>minstall.in</code> to work with \"make docs\" rule,\n    so that patch number appears in the corresponding generated\n    documentation.</li>\n\n    <li>modify <code>minstall.in</code> to keep the name shown in\n    the heading consistent with any renaming, e.g., for\n    test-builds.</li>\n\n    <li>check for misconfigured <code>printerCommand</code>\n    resource on the first use, warn and disable it if it does not\n    specify an executable command (Debian #691642).</li>\n\n    <li>improve check for window-manager name needed to establish\n    usable default for activeIcon resource. This works around a\n    scenario where <code>gdm</code> does incomplete cleanup,\n    leaving window properties that refer to windows which no longer\n    exist (Redhat #869959).</li>\n  </ul>\n\n  <h1><a name=\"xterm_285\" id=\"xterm_285\">Patch #285 -\n  2012/10/23</a></h1>\n\n  <ul>\n    <li>add/adapt FreeBSD ports files for test-building.</li>\n\n    <li>modify <code>minstall.sh</code> to use the patch-number and\n    date in the manpage footer.</li>\n\n    <li>add check for failure to allocate the fg/bg colors at\n    startup, e.g., misconfiguration. Work around by setting both to\n    the default colors (suggested by Scott Bertilson).</li>\n\n    <li>amend change for <a href=\"#xterm_280\">patch #280</a> which\n    added <code>modifyKeyboard</code>, to make\n    <code>modifyOtherKeys</code> work (report by Ailin Nemui).</li>\n\n    <li>add <code>query-colors.pl</code> example for\n    OSC&nbsp;4.</li>\n\n    <li>correct mis-applied fix for minstall.sh (report by Miroslav\n    Lichvar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_284\" id=\"xterm_284\">Patch #284 -\n  2012/10/14</a></h1>\n\n  <ul>\n    <li>amend configurability changes for icons from <a href=\n    \"#xterm_283\">patch #283</a>, moving the new functionality to\n    the <code>iconHint</code> resource to avoid conflict with\n    existing uses of the <code>iconName</code> resource in the\n    <code>Shell</code> widget (report by Emanuel Haupt).</li>\n\n    <li>fix documentation errata reported by Miroslav Lichvar:\n      <ul>\n        <li>correct manpage default for <code>allowTcapOps</code>\n        (see <a href=\"#xterm_243\">patch #243</a></li>\n\n        <li>modify documentation for configure\n        <code>--enable-backarrow-key</code> to match the script\n        (see <a href=\"#xterm_280\">patch #280</a>).</li>\n\n        <li>fix typo in <code>minstall.sh</code> in <a href=\n        \"#xterm_283\">patch #283</a>, which made the leading-cap\n        \"Xterm\" become \"xterm\" (patch by Miroslav).</li>\n      </ul>\n    </li>\n\n    <li>fix two typos in configure.in from <a href=\n    \"#xterm_283\">patch #283</a> changes; one broke the\n    <code>--regex</code> configure option (report by H Merijn\n    Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_283\" id=\"xterm_283\">Patch #283 -\n  2012/10/09</a></h1>\n\n  <ul>\n    <li>modify makefile and script to generate appropriate renaming\n    s/xterm/xterm-dev/ for test-package's manpage.</li>\n\n    <li>improve makefile rules for installing/uninstalling pixmap\n    files, to include the newer mini- and filled- variants.</li>\n\n    <li>clarify change in manpage regarding <a href=\n    \"#xterm_282\">patch #282</a> change to always set a\n    window-decoration icon, even if <code>iconName</code> is not\n    set.</li>\n\n    <li>add a fourth flavor of window-decoration icons,\n    \"filled-xterm\" for a monochrome xterm with filled\n    interior.</li>\n\n    <li>use shape-mask to improve contrast of the window-decoration\n    icons.</li>\n\n    <li>minor changes to icon colors to improve contrast on\n    bright-mud backgrounds.</li>\n\n    <li>drop configure checks for memmove versus bcopy, and\n    strerror function; all currently tested platforms support\n    these.</li>\n\n    <li>cleanup configure macros, as done in byacc 20121003.</li>\n\n    <li>improve configurability of the built-in icon selectable via\n    the <code>iconName</code> resource.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_282\" id=\"xterm_282\">Patch #282 -\n  2012/09/28</a></h1>\n\n  <ul>\n    <li>improve configure check for\n    <code>XkbKeycodeToKeysym</code>, fixing a regression on some\n    older systems in the <a href=\"#xterm_280\">patch #280</a>\n    changes.</li>\n\n    <li>add clarification in manpage for\n    <code>alwaysBoldMode</code> and <code>veryBoldColors</code>\n    resources (prompted by Derek Martin question about using the\n    former with TrueType fonts).</li>\n\n    <li>add <code>alternateScroll</code> resource and corresponding\n    control sequences which modify the <code>scroll-forw</code> and\n    <code>scroll-back</code> actions: when the alternate screen is\n    displayed, wheel mouse up/down will send cursor keys (Debian\n    #683942).</li>\n\n    <li>improve rendering for the case when a Unicode character is\n    absent in the bold font but present in the normal font by\n    temporarily falling back to the normal font (Debian #359006,\n    Debian #408666).</li>\n\n    <li>provide configure option\n    <code>--enable-double-buffer</code> and ifdef's to allow\n    comparisons with/without double-buffering. The default uses\n    normal buffering.</li>\n\n    <li>add feature to optionally scroll current page before\n    clearing, controlled by resource setting\n    <code>cdXtraScroll</code> (prompted by patch by Balazs\n    Kezes):</li>\n\n    <li>integrated patches from Arch Linux forum posting (patches\n    by Balazs Kezes):\n      <ul>\n        <li>modify reallocation limit of line-data when resizing\n        screen so that \"lost\" text will be restored if the screen\n        is first shrunk and then grown.</li>\n\n        <li>modify output to use double-buffering to reduce\n        flicker.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>scroll-lock</code> action to handle\n    on/off/toggle keywords like other actions. Previously the\n    optional parameter was interpreted as an integer.</li>\n\n    <li>extend <code>DECSCUSR</code> to provide a way to set the\n    cursor to a vertical bar (patch by Paul Bolle).</li>\n\n    <li>add <code>-8</code>, <code>-c</code>, <code>-d</code> and\n    <code>-u</code> options to <code>88colors2.pl</code> and\n    <code>256colors2.pl</code> scripts. No current terminal\n    emulator recognizes C1 controls while handling UTF-8\n    encoding&mdash;see notes in <a href=\"#xterm_119\">patch #119</a>\n    and <a href=\"#xterm_109\">patch #109</a> regarding\n    <code>utf8controls</code>&mdash;but the <code>-u</code> and\n    <code>-8</code> options are useful for demonstrating this\n    point.</li>\n\n    <li>improve speed when changing color palettes using OSC\n    controls by deferring repaint while followup controls might be\n    additional color palette changes.</li>\n\n    <li>modify <code>SGR&nbsp;38</code> and\n    <code>SGR&nbsp;48</code> to accept RGB index, matching the\n    closest entry in xterm's palette.</li>\n\n    <li>extend <code>SGR&nbsp;38</code> and\n    <code>SGR&nbsp;48</code> to accept colon as parameter separator\n    (request by Paul LeoNerd Evans).</li>\n\n    <li>modify <code>fullscreen</code> action to allow it to toggle\n    the full-screen mode rather than only set or unset it (prompted\n    by Eeri Kask's suggestion to support\n    <code>_NET_WM_TOGGLE</code>). This implementation does not yet\n    use <code>_NET_WM_TOGGLE</code>.</li>\n\n    <li>add support for <code>_NET_WM_STATE_MAXIMIZED_VERT</code>\n    and <code>_NET_WM_STATE_MAXIMIZED_HORZ</code> EWMH properties\n    (suggested by Eeri Kask).</li>\n\n    <li>make fullscreen mode work with the tek4014 window. This\n    change makes only the currently active window to be changed to\n    fullscreen rather than changing both windows.</li>\n\n    <li>modify <code>TekClear</code> function to discard pending\n    output before clearing the tek4014 display (patch by Kevin\n    Ryde).</li>\n\n    <li>fix <code>deleteIsDEL</code> feature, broken in <a href=\n    \"#xterm_280\">patch #280</a> changes (report by Mike Thornburg,\n    forwarded by Jeremy Huddleston).</li>\n\n    <li>fix a special case of wrapping double-width characters\n    (report/test-case by Ken Winstein).</li>\n\n    <li>add <code>E3</code> extended capability to\n    <code>xterm-basic</code> to match ncurses <a href=\n    \"https://invisible-island.net/ncurses/NEWS.html#t20120728\">20120728</a>\n    patch.</li>\n\n    <li>fix incorrect transformation of row-parameter for\n    <code>ClearCurBackground</code> in <a href=\"#xterm_279\">patch\n    #279</a> which caused incorrect painting in some scrolling\n    scenarios (report by Chuck Silvers).</li>\n\n    <li>fix typo in manpage description of <code>+maximized</code>\n    option (Paul Maier).</li>\n\n    <li>change default for configure option\n    <code>--with-xpm</code>, turning it on unless requested\n    otherwise.</li>\n\n    <li>add configure option <code>--with-icon-name</code> which\n    can be used to override the default icon used in\n    icon-themes.</li>\n\n    <li>extend <code>activeIcon</code> resource to provide\n    <code>default</code> value which tells xterm to determine the\n    window manager's name and automatically enable the feature for\n    fvwm and window maker. The explicit true/false values can be\n    used to override this behavior.</li>\n\n    <li>add \"mini\" xterm icon, which scales better than the\n    standard xterm icon, e.g., for the gnome/kde \"panel\"\n    feature.</li>\n\n    <li>extend <code>iconName</code> resource to search for icon\n    named according to resource value and use that if found. If not\n    found, use compiled-in pixmap. Both set the WM_ICON_NAME\n    property which is used by various window managers, usually for\n    window decoration.</li>\n\n    <li>updated autoconf patch, adding support for --datarootdir,\n    which changes the default location of manpages.</li>\n\n    <li>further improved autoconf macros for configuring icons,\n    from vile 9.8h</li>\n  </ul>\n\n  <h1><a name=\"xterm_281\" id=\"xterm_281\">Patch #281 -\n  2012/06/26</a></h1>\n\n  <ul>\n    <li>remove \"$(srcdir)/\" from install-icon rule to fix builds\n    when --srcdir configuration option is used.</li>\n\n    <li>fix for configure script's search for icon file when it is\n    not found in the current directory, e.g., when building out of\n    tree (patch by Thierry Reding).</li>\n\n    <li>undo the XK_Home / XK_End change from <a href=\n    \"#xterm_280\">patch #280</a> which broke the non-VT220 keyboard\n    for those keys (report by H Merijn Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_280\" id=\"xterm_280\">Patch #280 -\n  2012/06/24</a></h1>\n\n  <ul>\n    <li>add configure check to work around warning from\n    desktop-file-install for \"Encoding\", noting that it emits\n    deprecation warnings without providing its version\n    information.</li>\n\n    <li>add configure option <code>--with-icon-theme</code> to tell\n    xterm whether to install into an icon theme, defaulting to\n    \"hicolor\" (Redhat #755206, Redhat #799614 and Redhat\n    #804279).</li>\n\n    <li>change <code>--with-icondir</code> to look for \"icons\"\n    directory rather than \"pixmaps\" by default. Add new option\n    <code>--with-pixmapdir</code> to allow these two uses to be\n    installed concurrently.</li>\n\n    <li>modify configure options <code>--with-app-defaults</code>\n    and <code>--with-icondir</code> to accept \"auto\" as value to\n    look for existing directory from well-known locations.</li>\n\n    <li>add missing codes for secondary DA response which tell the\n    type of terminal as in the primary DA response.</li>\n\n    <li>update primary DA response for VT420 to include user\n    windows and horizontal scrolling.</li>\n\n    <li>add <code>modifyKeyboard</code> resource to support\n    keypad-modifier changes per request by Thomas Wolff.</li>\n\n    <li>add XK_Home / XK_End to editing-keypad checks</li>\n\n    <li>add back-tab key <code>kB</code> to termcap entries to\n    match the terminfo.</li>\n\n    <li>update terminfo to match corresponding entries in ncurses,\n    e.g., add <code>XT</code> and adjust <code>sgr</code> string\n    for xterm-bold entry.</li>\n\n    <li>add configure options to predefine the most commonly\n    customized resources for terminal-settings, use those to\n    substitute into the manpage the corresponding compiled-in\n    values: <code>altSendsEscape</code>, <code>backarrowKey</code>,\n    <code>backarrowKeyIsErase</code>, <code>deleteIsDEL</code>,\n    <code>metaSendsEscape</code> (Redhat #819588).</li>\n\n    <li>change default emulation level to VT420 (discussion with\n    Ailin Nemui).</li>\n\n    <li>improve logic for DECSCL; <a href=\"#xterm_279\">patch\n    279</a> partly enforced limitation of this to higher-level\n    emulations. This patch finishes that change.</li>\n\n    <li>improve check for base of combining characters, preventing\n    combination when cursor movement has intervened. Mosh's webpage\n    gives two different examples of this, with other causes\n    ascribed to the behavior.</li>\n\n    <li>modify IL/DL to set cursor to first column on row for\n    better VT102/VT220 compatibility (prompted by code review of\n    mosh).</li>\n\n    <li>separate state-table entries for DECSC/DECRC from the\n    ANSI.SYS save/restore cursor, since the latter conflicts with\n    DECSLRM when DECLRMM is enabled since <a href=\n    \"#xterm_279\">patch #279</a> (report/analysis by Ailin\n    Nemui).</li>\n\n    <li>fixes to avoid using <code>SIGCHLD</code> handler of main\n    program in printer's subprocess (report by Joe Julian).</li>\n\n    <li>correct restore-parameter for mouse-modes from <a href=\n    \"#xterm_279\">patch #279</a> changes.</li>\n\n    <li>add null-pointer checks to input-method caching added in\n    <a href=\"#xterm_277\">patch #277</a> to fix a problem in the\n    exposure code, when deselecting a window (report by Kriston\n    Rehberg).</li>\n\n    <li>unset <code>DESKTOP_STARTUP_ID</code> environment variable\n    to lessen confusion on the part of GTK applications which use\n    the variable without checking it (report by John Little).</li>\n  </ul>\n\n  <h1><a name=\"xterm_279\" id=\"xterm_279\">Patch #279 -\n  2012/05/10</a></h1>\n\n  <ul>\n    <li>fill in missing cases in the save/restore modes feature\n    (report by Thomas Wolff).</li>\n\n    <li>add check to ensure that combining characters are\n    precomposed in the order given (report/analysis by Andries E\n    Brouwer).</li>\n\n    <li>improve workability check for posix_openpt(), to take into\n    account BSD systems which do not complete initialization until\n    both sides of the pseudoterminal are opened (report by\n    Christian Weisgerber).</li>\n\n    <li>amend fix for Debian #650291 in <a href=\"#xterm_277\">patch\n    #277</a> changes to account for different data returned by\n    vnc4server (Debian #670638).</li>\n\n    <li>add check in DECCRA operation to make copies of blinking\n    text also blink by updating a line-level flag.</li>\n\n    <li>modify rectangle operations to work with DECOM.</li>\n\n    <li>modify DECSERA to use the current protected state rather\n    than preserving it.</li>\n\n    <li>add <code>precompose</code> resource to allow storing\n    character data in Normalized Form D as described in <a href=\n    \"http://unicode.org/reports/tr15/\">http://unicode.org/reports/tr15/</a>\n    (report/discussion with Andries E Brouwer).</li>\n\n    <li>modify CBT, other ISO-6429 controls which are used by VT520\n    to work with DECOM.</li>\n\n    <li>add HPR and VPR controls, ISO 6429 cursor movement used in\n    VT520.</li>\n\n    <li>remove \"linux\" restriction for IUTF8 ifdef in main.c\n    (prompted by Matthew Dempsky posting on\n    mailing.openbsd.tech).</li>\n\n    <li>implement the remaining VT420-level device status\n    reports.</li>\n\n    <li>change DECXCPR to return page 1, rather than 0.</li>\n\n    <li>improve VT-level checks on reporting functions, such as\n    DECXCPR.</li>\n\n    <li>change limit on <code>decTerminalID</code> to 525.</li>\n\n    <li>fixes to improve vttest vt52 screen when running as a\n    VT420:\n      <ul>\n        <li>add checks for some VT2xx and up controls for\n        consistency: DECSCL, S1C8T, S1C7T.</li>\n\n        <li>modify DECRQSS return for DECSCL to only return that\n        when running as VT2xx and up.</li>\n\n        <li>when exiting from VT52-mode, resume in VT100 level\n        rather than the level before starting VT52-mode.</li>\n      </ul>\n    </li>\n\n    <li>implement DECLRMM, DECSLRMM and DECNCSM (prompted by\n    discussions with Ailin Nemui and Paul LeoNerd Evans). This\n    modifies several controls to obey top/bottom and left/right\n    margins.</li>\n\n    <li>correct macro definition used for testing modes used in\n    ANSI/DEC request-mode controls introduced in <a href=\n    \"#xterm_262\">patch #262</a>.</li>\n\n    <li>modify <code>x_getlogin</code> to check $LOGNAME and $USER\n    before fallback to <code>getlogin</code>, so that user's choice\n    for these variables can be carried forward to the xterm process\n    (Debian #611487).</li>\n\n    <li>document DECSCUSR response for DECRQSS in ctlseqs.ms</li>\n\n    <li>add <code>zIconTitleFormat</code> resource to allow\n    customizing the \"***&nbsp;\" prefixed to the icon title when the\n    <code>zIconBeep</code> feature is activated (request by Thomas\n    Adam).</li>\n\n    <li>modify DECSCUSR to update the same internal variable as\n    RM/SM 12, and document in manpage the two variables used for\n    controlling blinking cursor (report by Paul LeoNerd\n    Evans).</li>\n\n    <li>correct response data for DECSCUSR in reply for DECRQSS\n    response, which had inverted the blink-value (reports by Ailin\n    Nemui, Paul LeoNerd Evans).</li>\n\n    <li>add a null-pointer check in <code>OkPasswd</code> macro to\n    fix a problem in <code>resize</code> with Fedora 17 and a\n    serial console (report/patch by Daniel Drake).</li>\n\n    <li>add workaround for Mac OS X, which loses the window size of\n    a pseudo-terminal when the tty device is opened\n    (report/analysis by Egmont Koblinger).</li>\n\n    <li>updated configure check for workable\n    <code>posix_openpt</code> versus <code>grantpt</code>, from\n    <code>luit</code> fixes.</li>\n\n    <li>modify DECIC/DECDC/DECBI/DECFI implemented in <a href=\n    \"#xterm_277\">patch #277</a> to enable them only in VT4xx mode\n    and up (report by Ailin Nemui).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_278\" id=\"xterm_278\">Patch #278 -\n  2012/01/18</a></h1>\n\n  <ul>\n    <li>correct initialization for <code>eightBitMeta</code>\n    resource (FreeBSD #164101).</li>\n\n    <li>make special check for Darwin 9 (and lower) to <em>not</em>\n    use <code>posix_openpt</code> (report by Christian Ebert).</li>\n\n    <li>minor fixes (adding \".ne\" directives) to reduce the cases\n    where groff's utility for generating images for tables dumps\n    core. Most versions of groff (I've found 1.19.2 to be the most\n    stable) dump core when attempting to report that there are too\n    few lines on a page for a table to be shown.</li>\n  </ul>\n\n  <h1><a name=\"xterm_277\" id=\"xterm_277\">Patch #277 -\n  2012/01/07</a></h1>\n\n  <ul>\n    <li>remove special case for ISC pseudo-terminals which attempts\n    to open the pty in two different ways.</li>\n\n    <li>move call to <code>grantpt</code> before asking utempter to\n    add a record, to work with kFreeBSD which does not update the\n    terminal's ownership until this point (Debian #652907).</li>\n\n    <li>document limitation of XIM interface in manpage (Debian\n    #230787).</li>\n\n    <li>cleanup error reporting with new xtermWarning\n    function.</li>\n\n    <li>add configure option <code>--disable-selection-ops</code>\n    to make the new actions optional.</li>\n\n    <li>add four new actions for making the selection or data\n    directly copied from the screen (prompted by discussion in\n    Debian #637001, as well as report by Arjen van Tol):\n      <ul>\n        <li>exec-formatted</li>\n\n        <li>exec-selectable</li>\n\n        <li>insert-formatted</li>\n\n        <li>insert-selectable</li>\n      </ul>\n    </li>\n\n    <li>add <code>visualBellLine</code> resource to allow\n    <code>visualBell</code> to flash only the current line\n    (prompted by patch by Gertjan Halkes).</li>\n\n    <li>add <code>eightBitMeta</code> resource to control the\n    features which modify or interpret the eighth bit of a key when\n    the meta modifier key is pressed (prompted by Debian\n    #326200).</li>\n\n    <li>improve discussion of <code>eightBitInput</code> in the\n    manpage (prompted by Debian #326200).</li>\n\n    <li>correct logic for <code>alt-sends-escape</code> action,\n    overlooked when implementing <code>altSendsEscape</code>\n    resource, which still used <code>eightBitInput</code> resource\n    value.</li>\n\n    <li>add a workaround for <code>XAllocColor()</code>, which does\n    not actually allocate \"a read-only colormap entry corresponding\n    to the closest RGB value supported by the hardware\", but rather\n    a rough approximation (Debian #650291).</li>\n\n    <li>undo parameter checks for <code>RequestResize()</code>\n    added in <a href=\"#xterm_251\">patch #251</a> and amended in\n    <a href=\"#xterm_270\">patch #270</a>, because zeros also are\n    special cases (report by John S Urban).</li>\n\n    <li>modify some test-scripts to use <code>/bin/echo</code>\n    rather than the shell's possibly-builtin <code>echo</code>, to\n    work around broken configuration on Mac OS X, i.e., neither\n    honoring the option nor flagging an error.</li>\n\n    <li>add SGR 1006, as a better technical solution than SGR 1015:\n      <ul>\n        <li>the responses will not be confused with line-deletion\n        and scrolling controls.</li>\n\n        <li>the button encoding is a little simpler, since it does\n        not add an unnecessary 32 because the integer parameter\n        does not have to be represented as a printable\n        character.</li>\n\n        <li>the control responses for pressing and releasing a\n        mouse button differ, allowing an application to tell which\n        button was released.</li>\n      </ul>\n\n      <p>Besides these improvements, in discussion, it was noted\n      that urxvt's implementation of 1005 is incorrect, relying\n      upon a locale that provides UTF-8 encoding. In contrast,\n      vttest demonstrates a correct decoding, independent of\n      locale.</p>\n    </li>\n\n    <li>add support for urxvt SGR 1015 to address shortcoming of\n    SGR 1005 with luit (patch by Egmont Koblinger).</li>\n\n    <li>add ISO and DEC controls useful for left/right\n    scrolling.</li>\n\n    <li>add some changes for OpenBSD and MirBSD (adapted from patch\n    by Thorsten Glaser):\n      <ul>\n        <li>disable search for non-Unix96 ptys.</li>\n\n        <li>fix a gcc warning in\n        <code>timestamp_filename</code></li>\n\n        <li>modify <code>Imakefile</code> to install xterm setgid\n        to utmp.</li>\n      </ul>\n    </li>\n\n    <li>add/use/prefer <code>posix_openpt()</code> for opening\n    pseudo-terminal.</li>\n\n    <li>modify special errno handling case in ptydata.c from\n    <a href=\"#xterm_158\">patch #158</a> to allow for the\n    possibility that any platform may have special cases where\n    \"/dev/tty\" is absent. For example, this can happen in a FreeBSD\n    jail (patch by David Wolfskill).</li>\n\n    <li>add keyboard logic to map shift-tab into XK_ISO_Left_Tab,\n    which is usually, not always, done by the X keyboard\n    configuration.</li>\n\n    <li>portability fixes for some configure macros:\n    <code>CF_XOPEN_SOURCE</code></li>\n  </ul>\n\n  <h1><a name=\"xterm_276\" id=\"xterm_276\">Patch #276 -\n  2011/10/10</a></h1>\n\n  <ul>\n    <li>modify clipping limits for TrueType fonts to account for\n    the <code>scaleHeight</code> resource setting, to work around\n    another problem due to recent FreeType changes. In this case,\n    the <code>DejaVu Sans Mono</code> set to pixelsize=13.5 is\n    truncated because the font descent is reduced by FreeType to\n    match an incorrect height metric (report by Adam Lee).</li>\n\n    <li>improve recovery when bitmap fonts are not installed, e.g.,\n    so that switching font-sizes works for TrueType fonts.</li>\n\n    <li>modify lookup for <code>XTERM_SHELL</code> feature to allow\n    relative pathnames.</li>\n\n    <li>modify abbreviation disambiguation check for command-line\n    parameters to account for <code>-geometry</code>, whose\n    parameter may begin with \"+\" or \"-\" (report by Scott\n    Bertilson).</li>\n  </ul>\n\n  <h1><a name=\"xterm_275\" id=\"xterm_275\">Patch #275 -\n  2011/09/11</a></h1>\n\n  <ul>\n    <li>add <code>ash</code>, <code>zsh</code> to known shells for\n    <code>resize</code>.</li>\n\n    <li>modify <code>resize</code> to reuse the logic from\n    <code>xterm</code> which determines the actual logon-user's\n    shell if <code>$SHELL</code> is not set.</li>\n\n    <li>revert the <code>unsetenv(\"SHELL\")</code> added in <a href=\n    \"#xterm_272\">patch #272</a>.</li>\n\n    <li>an <code>unsetenv(\"SHELL\")</code> added in <a href=\n    \"#xterm_272\">patch #272</a> to help ensure that\n    <code>luit</code> would get the user's shell consistently did\n    not work as expected for cases where multiple names are in the\n    password-file for a given uid. That was because changes in\n    <a href=\"#xterm_157\">patch #157</a> to handle this situation\n    did not take into account that repeated calls to\n    <code>getpwnam</code> and <code>getpwuid</code> return a\n    pointer to the same static buffer. Fixed the older logic to\n    work as intended, by ensuring that the passwd-data from each\n    call is stored separately (report by Paul Keusemann).</li>\n\n    <li>adjust ifdef's for <code>putenv</code> and\n    <code>unsetenv</code> in case only one of those is provided on\n    a given platform.</li>\n\n    <li>correct comparison used in <code>ExposeContains</code>\n    macro from <a href=\"#xterm_274\">patch #274</a> changes, to\n    handle window-dragging (patch by Todd Eigenschink).</li>\n  </ul>\n\n  <h1><a name=\"xterm_274\" id=\"xterm_274\">Patch #274 -\n  2011/09/05</a></h1>\n\n  <ul>\n    <li>portability fixes for cygwin: do not define\n    <code>SVR4</code>, and work around nonstandard header\n    location.</li>\n\n    <li>ifdef'd use of <code>unsetenv</code> from <a href=\n    \"#xterm_273\">patch #273</a> changes to work with Solaris 9\n    (report by Waldemar Rachwal).</li>\n\n    <li>modify logic for <code>XtAppPending</code> to merge\n    adjacent <code>Expose</code> and <code>ConfigureNotify</code>\n    events which are redundant (report by Edward McGuire).</li>\n\n    <li>fix an unneeded warning message when <code>-r</code> option\n    is given.</li>\n\n    <li>remove a few redundant entries from table used for helping\n    abbreviation-checking of command-line options, makes\n    <code>-geom</code> work again after <a href=\"#xterm_272\">patch\n    #272</a> changes as an abbreviation of\n    <code>-geometry</code>.</li>\n\n    <li>add <code>scaleHeight</code> resource and command-line\n    option <code>-sh</code> as workaround for some\n    font-configurations broken by changes in FreeType 2.4.6 (report\n    by Miroslav Hodak).</li>\n\n    <li>portability fixes for some configure macros:\n    <code>CF_FUNC_TGETENT</code>, <code>CF_XOPEN_SOURCE</code>,\n    <code>CF_X_ATHENA_LIBS</code>.</li>\n\n    <li>add configure option <code>--with-freetype-config</code> to\n    improve selection over the plethora of configuration options\n    which freetype has so far provided.</li>\n\n    <li>build-fix for configure <code>--enable-load-vt-fonts</code>\n    when <code>--enable-widec</code> is not specified.</li>\n\n    <li>build-fixes for suppressing various features, needed after\n    changes in patches 270, 271 and 272 (report by Brian\n    Lindholm)</li>\n  </ul>\n\n  <h1><a name=\"xterm_273\" id=\"xterm_273\">Patch #273 -\n  2011/08/25</a></h1>\n\n  <ul>\n    <li>build-fix for out-of-tree \"make docs\" rule.</li>\n\n    <li>correct a typo in <code>x_strdup</code>, from <a href=\n    \"#xterm_198\">patch #198</a> changes.</li>\n\n    <li>correct initialization for <code>-e</code> option, broken\n    in <a href=\"#xterm_272\">patch #272</a> changes (report by\n    Gabriele Balducci).</li>\n\n    <li>build-fix for out-of-tree builds to address\n    <code>minstall</code> script changes in <a href=\n    \"#xterm_272\">patch #272</a> (patch by Thierry Reding).</li>\n  </ul>\n\n  <h1><a name=\"xterm_272\" id=\"xterm_272\">Patch #272 -\n  2011/08/24</a></h1>\n\n  <ul>\n    <li>document limitation of <code>Gtk</code> in connection with\n    xterm's <code>-into</code> option, in the manpage (Ubuntu\n    #806969).</li>\n\n    <li>improve <code>-into</code> by checking for and using the\n    size of the window within which xterm is embedded, overriding\n    other clues.</li>\n\n    <li>modify logic for <code>localeFilter</code> resource to\n    allow that to include command-line options of luit.</li>\n\n    <li>improve <code>-into</code> by checking for invalid\n    window-id, and allowing hexadecimal/decimal/octal values.</li>\n\n    <li>improve <code>keepSelection</code>, adding the case where\n    the highlighting is cleared, overlooked in <a href=\n    \"#xterm_230\">patch #230</a> (patch by Marco Peereboom).</li>\n\n    <li>improve command-line parsing to make abbreviate options\n    work consistently across xterm-specific versus standard X\n    toolkit options, and report cases where an abbreviated option\n    happens to be ambiguous. In particular, <code>-d</code> now\n    works as an abbreviation for <code>-display</code>.</li>\n\n    <li>fix regression in command-line parsing introduced in\n    <a href=\"#xterm_271\">patch #271</a> changes for Debian #629358,\n    (Debian #637910).</li>\n\n    <li>split-out new termcap/terminfo building block\n    <code>xterm+kbs</code> for configurability.</li>\n\n    <li>modify <code>terminfo</code> file to reflect changes in\n    ncurses for <code>xterm-16color</code> and\n    <code>xterm-256color</code>.</li>\n\n    <li>modify <code>minstall.sh</code>, etc., to reflect the\n    default default class, <code>$TERM</code> and\n    <code>decTerminalID</code> values.</li>\n\n    <li>reword <code>resize</code> manpage to reflect the fact that\n    <code>$TERMCAP</code> is not set on all systems (patch by Alan\n    Coopersmith).</li>\n\n    <li>work around combined Xaw6/Xaw7 package in DragonFlyBSD\n    which omits the usual symbolic link to the preferred library\n    name.</li>\n\n    <li>further improve build-fix for termcap systems by checking\n    for some which are only partial implementations, e.g., termcap\n    2.08 in CentOS 5.2</li>\n  </ul>\n\n  <h1><a name=\"xterm_271\" id=\"xterm_271\">Patch #271 -\n  2011/07/14</a></h1>\n\n  <ul>\n    <li>omit permissions adjustments to pty on exit except for\n    pre-Unix98 ptys, since modern implementations handle this\n    (report by Sean C Farley).</li>\n\n    <li>modify logic for switching fonts between UTF-8 and\n    non-UTF-8 encoding to not merge the derivable bold-, wide- and\n    widebold values from the VT100 fonts. Also suppress warning\n    when not using UTF-8 fonts if wide- and widebold-fonts cannot\n    be derived or otherwise loaded (report by Werner\n    Scheinast).</li>\n\n    <li>modify menu-creation to suppress entries which will never\n    be used in the current configuration, rather than simply\n    disabling them.</li>\n\n    <li>add resource <code>printModeImmediate</code> and menu item\n    to allow print of screen plus saved lines to a file.</li>\n\n    <li>add menu item to allow runtime enable/disable of the\n    <code>printFileOnXError</code> feature.</li>\n\n    <li>append a timestamp to filename used in\n    <code>printFileOnXError</code> feature, and restrict its\n    permissions (request by Vincent Lef&egrave;vre).</li>\n\n    <li>add a check when cancelling cursor-blinking, in case the\n    cursor is blinked off. Fix so that the cursor is repainted\n    without waiting for other events, e.g., keypress (report by\n    Ailin Nemui).</li>\n\n    <li>add configure <code>--with-app-class</code> option, to\n    simplify building \"xterm-dev\" packages with filenames that do\n    not conflict with conventional \"xterm\" packages.</li>\n\n    <li>corrected logic flow for DECSCL, which prevented the\n    updated operating level from being reported via DECRQSS (report\n    by Ailin Nemui).</li>\n\n    <li>corrected default for <code>brokenStringTerm</code>\n    resource to match manpage.</li>\n\n    <li>add vttests/dynamic.pl</li>\n\n    <li>add runtime check for locale not supported by X libraries,\n    and fallback to XA_STRING in this case (request by Bryan\n    Henderson).</li>\n\n    <li>fix a special case in configure script after no FreeType\n    libraries are found. The script was proceeding to check for a\n    usable configuration.</li>\n\n    <li>add <code>xterm+tmux</code> building block to terminfo\n    (adapted from changes proposed by Ailin Nemui and Nicholas\n    Marriott).</li>\n\n    <li>improve discussion of <code>faceName</code> resource in\n    manpage (adapted from suggestions by Jens Schweikhardt).</li>\n\n    <li>correct mapping of shifted up/down cursor-keys in termcap\n    function-keys mode, i.e., resource\n    <code>tcapFunctionKeys</code> (patch by Gertjan Halkes).</li>\n\n    <li>update AIX case in <code>CF_XOPEN_SOURCE</code> configure\n    macro to add release 7.x.</li>\n\n    <li>modify ifdef's in <code>xterm_io.h</code> for\n    <code>__hpux</code> to force that to use the hacked SYSV\n    support in that file. This fixes a problem with a non-blocking\n    socket call (patch by Paul Lampert).</li>\n\n    <li>improve filtering of desktop category scanning, to exclude\n    XFCE.</li>\n\n    <li>modify configure script to work with systems that have both\n    ncurses (or other terminfo) as well as a real termcap library,\n    e.g., Slackware (report by Andrew Watts).</li>\n\n    <li>modify configure script to work around special case where\n    user's environment adds compiler flags to the <code>CC</code>\n    variable (prompted by report by Paul Lampert).</li>\n\n    <li>amend change for Debian #110226 so that \"-h\" or \"-v\"\n    options cause an exit, rather than simply printing to stdout\n    while the window is displayed (Debian #629358).</li>\n\n    <li>add response for <code>DECRQSS</code> which gives the\n    setting for <code>DECSCUSR</code>.</li>\n\n    <li>modify AllocateTermColor() to handle\n    <code>XtDefaultForeground</code> and\n    <code>XtDefaultBackground</code>, which are not recognized by\n    <code>XParseColor</code>. For example, this fixes the use of\n    OSC&nbsp;112 when no explicit cursor color was set (report by\n    Ailin Nemui).</li>\n\n    <li>handle special-case of <code>KeyPress</code> translated to\n    <code>popup-menu</code> action (Ubuntu #756273).</li>\n  </ul>\n\n  <h1><a name=\"xterm_270\" id=\"xterm_270\">Patch #270 -\n  2011/04/26</a></h1>\n\n  <ul>\n    <li>build-fix, e.g., for using <code>imake</code> on platforms\n    which use the termcap library.</li>\n\n    <li>modify <code>utf8</code> resource to accept a name.</li>\n\n    <li>mention default for <code>fontWarnings</code> in manpage\n    (report by Werner Scheinast).</li>\n\n    <li>split \"UTF-8\" menu entry into \"UTF-8 Encoding\" and \"UTF-8\n    Fonts\" (prompted by discussion with Werner Scheinast).</li>\n\n    <li>gray-out font-menu entries when a font fails to load, e.g.,\n    a bitmap font is not installed.</li>\n\n    <li>improve behavior when there is no app-defaults file:\n      <ul>\n        <li>set the <code>toolBar</code> resource to false</li>\n\n        <li>gray-out the font menu entries where no resource is\n        found.</li>\n      </ul>\n    </li>\n\n    <li>add configure option <code>--with-desktop-category</code>\n    to allow customization of the \".desktop\" files.</li>\n\n    <li>build-fix for the <code>install-desktop</code>\n    makefile-rule, when the source/build directories differ (patch\n    by Lo&iuml;c Minier).</li>\n\n    <li>add menu entry and corresponding resource which can be used\n    to suppress all bold-fonts (discussion with Jan\n    Engelhardt).</li>\n\n    <li>make internal line-size value consistent with allocated\n    sizes of character and related arrays to ensure that bulk\n    copying of line data, e.g., in scrolling, accounts for the\n    padding used for pointer alignment (adapted from patch by\n    Rajesh Mandalemula, also reported by Ali Bahar).</li>\n\n    <li>widen ifdef for screen-resizing logic from <a href=\n    \"#xterm_176\">patch #176</a> changes to send\n    <code>SIGWINCH</code> to process group to include any system\n    supporting <code>ioctl(*,TIOCGPGRP,*)</code> (prompted by\n    linux-specific patch in OpenSUSE rpm package).</li>\n\n    <li>add <code>printModeOnXError</code> and\n    <code>printFileOnXError</code> resources, which allow the user\n    to specify that xterm will write the contents of its screen to\n    a file if it is exiting due to an X error (Debian\n    #280457).</li>\n\n    <li>restore logic that made reverse-video apply to the\n    scrollbar's foreground/background, broken in <a href=\n    \"#xterm_158\">patch #158</a> (report by Bryan Ischo).</li>\n\n    <li>amend some of the window operations parameter-checks added\n    in <a href=\"#xterm_251\">patch #251</a> for the push/pop title\n    feature, to allow the parameters used for window resizing to be\n    -1's, which makes the corresponding values ignored rather than\n    using the window's maximum width/height (report by Noah\n    Friedman).</li>\n\n    <li>correct order of initialization for\n    <code>translations</code> vs <code>fullscreen</code> resources\n    to enable a special case which omits the Alt-Enter translation\n    when <code>fullscreen</code> is disabled (Debian #612978).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_269\" id=\"xterm_269\">Patch #269 -\n  2011/02/19</a></h1>\n\n  <ul>\n    <li>build-fixes for <code>imake</code> (report by Heiko\n    Berges).</li>\n\n    <li>modify autoconf macro CF_PKG_CONFIG to work with\n    cross-compile environments (patch by Thierry Reding).</li>\n\n    <li>modify <code>MapToColorMode()</code> to favor bold over\n    underline, matching the precedence used before <a href=\n    \"#xterm_252\">patch #252</a> (report/analysis by Nicolas\n    George).</li>\n\n    <li>add <code>omitTranslation</code> resource, which can be\n    used to suppress the default translations for these features:\n      <ul>\n        <li>fullscreen</li>\n\n        <li>scroll-lock</li>\n\n        <li>shift-fonts</li>\n\n        <li>wheel-mouse</li>\n      </ul>\n    </li>\n\n    <li>make the fullscreen feature configurable (Debian #612978)\n      <ul>\n        <li>add it to the configurable list\n        <code>disallowedWindowOps</code>.</li>\n\n        <li>add command-line option <code>-fullscreen</code> to\n        allow the feature to be enabled at startup.</li>\n\n        <li>add resource <code>fullscreen</code> to control whether\n        the feature is active or may be enabled.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>probe_netwm_fullscreen_capability</code> for\n    64-bit machines. Contrary to <code>XGetWindowProperty</code>\n    manpage, that function returns 32-bit data packed as\n    <code>long</code>'s.</li>\n\n    <li>eliminate copy of <code>name</code> resource, which was\n    otherwise used only to give the terminal-description name for\n    the tcap-query feature. Use the actual <code>$TERM</code> value\n    instead, as derived from <code>termName</code> resource,\n    etc.</li>\n\n    <li>eliminate an old inconsistency with error messages, some\n    used the <code>-name</code> option, while others used\n    <code>argv[0]</code>. The latter is now used consistently.</li>\n\n    <li>improve configure check for rpath-hack, to improve builds\n    on systems where gcc will not search /usr/local/lib, etc.</li>\n\n    <li>build-fix for Xaw3d configuration (report by H Merijn\n    Brand).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_268\" id=\"xterm_268\">Patch #268 -\n  2011/02/10</a></h1>\n\n  <ul>\n    <li>fix an inconsistency of the \"Enable Reverse Video\" checkbox\n    in the VT Options menu. This also removes a special case added\n    in <a href=\"#xterm_217\">patch #217</a> which limited the effect\n    of the <code>reverseVideo</code> resource (Debian\n    #603808).</li>\n\n    <li>amend decoding of misformed UTF-8 sequences to avoid\n    absorbing valid characters as documented in Unicode 6.0 section\n    3.9 (report by Keith Winstein).</li>\n\n    <li>do not set urgency hint when window already has focus\n    (patch by Dimitrios Christidis).</li>\n\n    <li>amend extended mouse-coordinate mode from <a href=\n    \"#xterm_262\">patch #262</a> changes to include the <em>Cb</em>\n    button-code, which also may be greater than 127 (report by\n    Ailin Nemui).</li>\n\n    <li>ensure that underline-cursor is visible when an application\n    happens to set the background color (report by Christian\n    Weisgerber).</li>\n\n    <li>add feature for <a href=\n    \"http://www.davidsimmons.com/soft/xtermhacks/xterm-fullscreen.patch\">\n    full-screen toggling</a> using either Alt-Enter or a menu\n    selection (integrated patch by Dave Simmons).</li>\n\n    <li>add missing logic to handle reallocation of FIFO index for\n    the \"UTF-8\" menu entry (report by David Holland, NetBSD\n    #44344).</li>\n\n    <li>add makefile rules <code>docs-ctlseqs</code>,\n    <code>docs-xterm</code>, etc.</li>\n\n    <li>correct typo in description of DECRPM in control sequences\n    document (report by Ailin Nemui).</li>\n  </ul>\n\n  <h1><a name=\"xterm_267\" id=\"xterm_267\">Patch #267 -\n  2010/11/20</a></h1>\n\n  <ul>\n    <li>minor formatting changes to ctlseqs.ms to simplify a script\n    which extracts the feature information. See the results in\n    <a href=\n    \"https://invisible-island.net/xterm/xterm.faq.html#compare_versions\">\n    Comparing versions, by counting controls</a> in the xterm\n    FAQ.</li>\n\n    <li>add <code>docs-clean</code> makefile rule.</li>\n\n    <li>add <code>copy-selection</code> action (request by Timo\n    Juhani Lindfors, Debian #588785).</li>\n\n    <li>trim leading/trailing blanks from string used for\n    \"Selection\" font-menu data.</li>\n\n    <li>trim leading/trailing blanks from color resource\n    values.</li>\n\n    <li>configure script improvements:\n      <ul>\n        <li>add workaround for removal of X11 dependency from Xt's\n        package file (report by Robert Hooker).</li>\n\n        <li>add workaround for removal of fontconfig dependency\n        from Xft's package file (report by Jeremy Huddleston).</li>\n\n        <li>add workaround for removal of Xmu dependency from Xaw's\n        package file (report by Jeremy Huddleston).</li>\n\n        <li>improve workaround in <code>CF_X_TOOLKIT</code> macro,\n        checking for other possible packages where Xt's\n        dependencies may be given.</li>\n\n        <li>prefer <code>${name:=value}</code> to\n        <code>${name-value}</code>, since recent bash changes break\n        legacy support for that feature.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_266\" id=\"xterm_266\">Patch #266 -\n  2010/10/24</a></h1>\n\n  <ul>\n    <li>add rpm and dpkg scripts, for testing.</li>\n\n    <li>more fixes for Debian #600707 (report by Cyril\n    Brulebois).</li>\n  </ul>\n\n  <h1><a name=\"xterm_265\" id=\"xterm_265\">Patch #265 -\n  2010/10/22</a></h1>\n\n  <ul>\n    <li>fix a regression in fontname logic from <a href=\n    \"#xterm_263\">patch #263</a> changes (Debian #600707, reported\n    by Vincent Lef&egrave;vre).</li>\n\n    <li>revert modification of any-event/any-button protocol from\n    <a href=\"#xterm_263\">patch #263</a> changes. It interferes with\n    selection using a shifted mouse button (reports by Neil Bird,\n    Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_264\" id=\"xterm_264\">Patch #264 -\n  2010/10/14</a></h1>\n\n  <ul>\n    <li>replace a null-pointer check with check for empty string in\n    <code>xtermOpenFont</code>, to eliminate a warning message from\n    <a href=\"#xterm_263\">patch #263</a> changes.</li>\n\n    <li>build-fix for <a href=\"#xterm_263\">patch #263</a> when\n    toolbar is not configured (patch by Chris Clayton) (reports by\n    Robby Workman, David Wood).</li>\n  </ul>\n\n  <h1><a name=\"xterm_263\" id=\"xterm_263\">Patch #263 -\n  2010/10/13</a></h1>\n\n  <ul>\n    <li>corrected initialization of \"misc\" resource values, to\n    ensure that xterm has allocated a copy of strings which may not\n    have been malloc'd by the X library (Debian #600129).</li>\n\n    <li>modify handling of any-event/any-button mouse protocol; it\n    now is active with any combination of key-modifiers.</li>\n\n    <li>add debugging feature <code>showWrapMarks</code>, which\n    marks lines which xterm knows are wrapped, showing where a\n    double-click will select past the end of a line.</li>\n\n    <li>build-fix to address change in include-guards for\n    <code>Xlib.h</code> in ongoing Xorg edits (patch by Jeremy\n    Huddleston).</li>\n\n    <li>improve <code>pointerMode</code> by continuing to watch for\n    motion events after mouse tracking is disabled if the pointer\n    is hidden (Debian #594856).</li>\n\n    <li>further extend initialization for active-icon font to check\n    if the font was not loaded successfully, to retry with\n    <code>font1</code>, or as even (if TrueType fonts are used) to\n    use a TrueType font. The retries are to help with cases as in\n    <a href=\"#xterm_241\">patch #241</a> where the bitmap fonts are\n    not available.</li>\n\n    <li>fix special case of active-icon used when TrueType font is\n    specified for the xterm window, from <a href=\"#xterm_261\">patch\n    #261</a> change. In that case, the default font's size was used\n    for layout of the active icon's window (Debian #591265).</li>\n  </ul>\n\n  <h1><a name=\"xterm_262\" id=\"xterm_262\">Patch #262 - 2010/8/30</a></h1>\n\n  <ul>\n    <li>fix a case where changing the cursor color via escape\n    sequences did not immediately update the screen (report by\n    Andreas Wagner).</li>\n\n    <li>implement ANSI and DEC request-mode control sequences. The\n    latter includes the xterm-specific private modes such as the\n    mouse mode. The feature is ifdef'd with the rectangle\n    operations since its decoding overlaps that feature.</li>\n\n    <li>correct typo in ctlseqs.ms for response of OSC 21 (patch by\n    Kevin Schoedel).</li>\n\n    <li>improve discussion of mouse tracking in ctlseqs.ms</li>\n\n    <li>increase an array limit used in reporting mouse events\n    (report by Ryan Johnson).</li>\n\n    <li>add extended mouse-coordinates mode, allowing up to\n    2015x2015 windows, using UTF-8 encoding (patch by Ryan\n    Johnson).</li>\n\n    <li>modify manpage hyphens to conform with <a href=\n    \"http://lintian.debian.org/tags/hyphen-used-as-minus-sign.html\">\n    Debian</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_261\" id=\"xterm_261\">Patch #261 - 2010/6/28</a></h1>\n\n  <ul>\n    <li>fix regression in <code>renderFont</code> logic, from\n    <a href=\"#xterm_260\">patch #260</a> changes (report by Joseph\n    Quinsey).</li>\n  </ul>\n\n  <h1><a name=\"xterm_260\" id=\"xterm_260\">Patch #260 - 2010/6/20</a></h1>\n\n  <ul>\n    <li>modify <code>plink.sh</code> to work around problem linking\n    to recent PCRE libraries.</li>\n\n    <li>extend <code>renderFont</code> resource to allow deferred\n    switch to TrueType fonts without affecting existing resource\n    settings (Debian #585620).</li>\n\n    <li>modify configure macro CF_X_TOOLKIT to work around omission\n    of ICE library from \".pc\" file (report by Miroslav\n    Lichvar).</li>\n\n    <li>change configure script default for\n    <code>--enable-broken-st</code> i.e., the\n    <code>brokenStringTerm</code> feature) to normally enable it.\n    If the corresponding resource is enabled, this feature\n    eliminates an apparent freeze of xterm when sending mis-encoded\n    data to the screen (Debian #584801).</li>\n\n    <li>document in manpage some actions which were overlooked:\n      <ul>\n        <li>readline-button</li>\n\n        <li>scroll-lock</li>\n\n        <li>set-8-bit-control</li>\n      </ul>\n    </li>\n\n    <li>undo a change to limit-check in <code>ScrnRefresh</code> in\n    <a href=\"#xterm_257\">patch #257</a>, which broke\n    <code>fastScroll</code> feature (Debian #584841).</li>\n\n    <li>modify handling of <code>brokenLinuxOSC</code> and\n    <code>brokenStringTerm</code> to also sound the bell.</li>\n\n    <li>add control/D and control/Q to controls which will cause\n    early exit from control string per\n    <code>brokenStringTerm</code> resource.</li>\n\n    <li>improve documentation of <code>brokenStringTerm</code>\n    resource in manpage.</li>\n  </ul>\n\n  <h1><a name=\"xterm_259\" id=\"xterm_259\">Patch #259 - 2010/6/5</a></h1>\n\n  <ul>\n    <li>modify configure check for <a href=\n    \"https://invisible-island.net/luit/\">luit</a> to include new\n    aliases for the program (<code>xterm-filter</code> and\n    <code>bluit</code>).</li>\n\n    <li>add workaround in <code>xtermClearLEDs()</code> to account\n    for Xkb's override, making vttest's LED demo reset the scroll\n    lock.</li>\n\n    <li>filter out client-message events when deciding whether to\n    hide cursor, e.g., when using SCIM (patch/report by anonymous\n    user).</li>\n\n    <li>improve description of <code>-bd</code> option in manpage\n    (report by Guy Daniel Clotilde).</li>\n\n    <li>modify configure checks for PCRE and other libraries to use\n    <code>pkg-config</code>, if available.</li>\n\n    <li>amend change from <a href=\"#xterm_252\">patch #252</a>, to\n    take <code>veryColorColors</code> resource into account when\n    checking <code>colorBDMode</code> resource for TrueType fonts\n    (report by anonymous user).</li>\n\n    <li>add <code>vttests/query-fonts.pl</code> script for\n    demonstrating the <code>OSC&nbsp;50</code> font query.</li>\n\n    <li>improve manpage discussion of Scroll Lock feature.</li>\n\n    <li>improve configure macros CF_GCC_VERSION and\n    CF_GCC_WARNINGS.</li>\n\n    <li>fix warnings for \"clang --analyze\".</li>\n\n    <li>change default for <code>allowScrollLock</code> resource to\n    <code>false</code>, noting that the supposedly unused key has\n    been useful for various rebindings (Debian #580946).</li>\n  </ul>\n\n  <h1><a name=\"xterm_258\" id=\"xterm_258\">Patch #258 - 2010/5/1</a></h1>\n\n  <ul>\n    <li>add pointer-checks in <code>ScrnRefresh</code> to fix a\n    case in rapid scrolling where an empty record is fetched from\n    the scrollback FIFO.</li>\n  </ul>\n\n  <h1><a name=\"xterm_257\" id=\"xterm_257\">Patch #257 - 2010/4/22</a></h1>\n\n  <ul>\n    <li>correct ctlseqs.ms description of OSC 17 and OSC 19 (patch\n    by Emanuele Giaquinta).</li>\n\n    <li>corrected logic for <code>menuLocale</code> resource; the\n    <code>setlocale</code> function returns the original locale\n    only when querying.</li>\n\n    <li>improve filtering of translations resource, narrowing the\n    scope of the <code>alwaysUseMods</code> to address only the\n    translations that would cause a key to be sent to the host\n    (report by Andrew Gaylard).</li>\n\n    <li>change default value of <code>menuLocale</code> resource to\n    \"C\", to work around longstanding <a href=\n    \"https://invisible-island.net/xterm/xterm.faq.html#slow_menus\">Xorg\n    bug</a>.</li>\n\n    <li>modify handling of <code>scrollKey</code> feature to ignore\n    XON/XOFF keys.</li>\n\n    <li>implement scroll-lock feature.</li>\n\n    <li>revise memory allocation in UTF8toLatin1() to fix an\n    out-of-bounds index (Mandriva #54531).</li>\n\n    <li>compute value for first wide-character rather than assuming\n    it is 256, fixes problem with <code>-cjk_width</code>\n    introduced in patches <a href=\"#xterm_242\">242</a> and <a href=\n    \"#xterm_249\">249</a> (report by Thomas Wolff).</li>\n\n    <li>improve configure script:\n      <ul>\n        <li>corrected check for <code>_XOPEN_SOURCE</code> for\n        OpenSolaris.</li>\n\n        <li>when possible, add rpath option for libraries in\n        unusual places</li>\n\n        <li>add configure option <code>--disable-rpath-hack</code>\n        to control whether the rpath option can be added.</li>\n      </ul>\n    </li>\n\n    <li>modify <code>AllocateTermColor()</code> to separate\n    initialization from control sequences, fixing problem from\n    <a href=\"#xterm_254\">patch #254</a> changes where enabling\n    <code>allowSendEvents</code> resource prevents setting cursor\n    color on command-line (Debian #572928).</li>\n\n    <li>amend logic from <a href=\"#xterm_185\">patch #185</a> to not\n    reallocate cell-array if processing\n    <code>ESC&nbsp;%&nbsp;G</code> to switch from UTF-8 if already\n    in ISO-8859-1 character set (report by Michael Koehne).</li>\n\n    <li>fix to avoid calling <code>XmuInternStrings()</code> with\n    zero count (report by Johan Bockg&aring;rd).</li>\n\n    <li>fix build when --disable-ansi-color configure option is\n    used.</li>\n\n    <li>fix build when neither OPT_TCAP_QUERY or OPT_TCAP_FKEYS is\n    defined (patch by Matthieu Herrb)</li>\n  </ul>\n\n  <h1><a name=\"xterm_256\" id=\"xterm_256\">Patch #256 - 2010/3/6</a></h1>\n\n  <ul>\n    <li>add TerminalEmulator to desktop category files.</li>\n\n    <li>modify <code>sinstall.sh</code> to ignore the \".\" appended\n    to permissions by selinux.</li>\n\n    <li>change app-defaults organization, installing UXTerm-color\n    and KOI8XTerm-color for consistent behavior regarding\n    <code>customization:&nbsp;color</code> (prompted by discussion\n    in Ubuntu #421261).</li>\n\n    <li>fix typo in <code>minstall.sh</code> from <a href=\n    \"#xterm_255\">patch #255</a> changes, and add case for\n    <code>/var/run</code> needed for full path of utmp (report by\n    Julien Cristau).</li>\n\n    <li>minor fix to xterm manpage, remove a comment stating that\n    margin bell can be changed via the VT Options menu. That was\n    replaced in <a href=\"#xterm_225\">patch #225</a></li>\n\n    <li>add a \"docs\" rule to makefile.</li>\n\n    <li>fix initialization of Atom used for <code>XkbBell</code>\n    feature from <a href=\"#xterm_243\">patch 243</a> changes. Unlike\n    the other calls to <code>XInternAtom()</code>, in this case the\n    flag telling X to create the Atom was unset (patch by Chris\n    Adams).</li>\n  </ul>\n\n  <h1><a name=\"xterm_255\" id=\"xterm_255\">Patch #255 - 2010/1/21</a></h1>\n\n  <ul>\n    <li>rename <code>install.sh</code> to <code>install-sh</code>\n    in case suffix-rules might interfere.</li>\n\n    <li>extend range for <code>convertToUTF8</code> function to\n    full 31-bits, to use with printing, etc.</li>\n\n    <li>improve manpage by checking for actual locations of\n    utmp/wtmp files (Debian #562640).</li>\n\n    <li>modify configure macro CF_XOPEN_SOURCE to remove -D's\n    before adding the same name rather than relying on -U's, to\n    reduce redefinition warnings for some platforms that have\n    conflicting definitions in headers.</li>\n\n    <li>correct logic used to switch to alternate screen using\n    FIFO-lines configuration (Debian #565772).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_254\" id=\"xterm_254\">Patch #254 - 2010/1/6</a></h1>\n\n  <ul>\n    <li>add a configure-check to eliminate <code>install-ti</code>\n    rule from Makefile when the system has no tic (terminfo\n    compiler) program. This lets one use the\n    <code>install-full</code> rule more consistently.</li>\n\n    <li>amend change to WriteText() function in <a href=\n    \"#xterm_252\">patch #252</a> to take into account the\n    <code>colorAttrMode</code> resource (report by Krzysztof\n    Kotlenga).</li>\n\n    <li>document <code>titleModes</code> resource in manpage, added\n    in <a href=\"#xterm_252\">patch #252</a>.</li>\n\n    <li>modify tcap-query table entries for shifted up/down cursor\n    keys to match ncurses convention.</li>\n\n    <li>improve lookup of termcap-query data, allowing for\n    duplicate keycodes versus missing entries.</li>\n\n    <li>add control sequence which can be used to modify the\n    terminal data used for the termcap-keyboard.</li>\n\n    <li>improve portability of tcap-query feature, using terminfo\n    functions in preference to termcap on systems having\n    terminfo.</li>\n\n    <li>improve font-setting/querying control\n    (<code>OSC&nbsp;50</code>):\n      <ul>\n        <li>when TrueType font is selected, the TrueType\n        <code>faceName</code> will be set, rather than the bitmap\n        font.</li>\n\n        <li>when TrueType font is selected, querying returns the\n        name of the TrueType font.</li>\n\n        <li>querying a font recognizes the relative-font convention\n        that setting a font could use.</li>\n      </ul>\n    </li>\n\n    <li>add menu-entry for allowColorOps.</li>\n\n    <li>add new resources for fine-tuning menu entries:\n    <code>allowColorOps</code>, <code>disallowedColorOps</code>,\n    <code>disallowedFontOps</code> and\n    <code>disallowedTcapOps</code>.</li>\n\n    <li>correct logic for disabling the \"TrueType Fonts\" menu item;\n    it was not ensuring that the <code>faceName</code> resource\n    value was non-empty.</li>\n\n    <li>implement VT520-style controls <code>DECSMBV</code> and\n    <code>DECSWBV</code> for setting the margin- and warning-bell\n    volume.</li>\n\n    <li>fix a minor error from <a href=\"#xterm_243\">patch #243</a>\n    which made the zIconBeep feature use a minor-error tone rather\n    than an informational tone.</li>\n\n    <li>add a null-pointer check for the case where\n    <code>renderFont</code> resource is true, but\n    <code>faceName</code> resource is unset, used in logic to strip\n    \"xft:\" prefix from <a href=\"#xterm_251\">patch #251</a> changes\n    (patch by Michael Riepe).</li>\n\n    <li>add special case to configure CF_XOPEN_SOURCE macro to use\n    extensions on Darwin (patch by Dennis Preiser).</li>\n\n    <li>improve configure checks for regular expressions header and\n    library</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_253\" id=\"xterm_253\">Patch #253 -\n  2009/12/10</a></h1>\n\n  <ul>\n    <li>add a null-pointer check in <code>getPrinterFlags()</code>\n    per changes in <a href=\"#xterm_252\">patch #252</a>.</li>\n\n    <li>add a null-pointer check, needed in UTF-8 mode for Xft\n    fonts after changes in <a href=\"#xterm_252\">patch #252</a>\n    (patch by Alan Coopersmith).</li>\n\n    <li>correct size when clearing struct for tek4014 (patch by\n    Jochen Voss).</li>\n\n    <li>parenthesize expression in <code>MoreRows</code> macro,\n    fixing a limit check added in <a href=\"#xterm_251\">patch\n    #251</a> (Debian #560039).</li>\n  </ul>\n\n  <h1><a name=\"xterm_252\" id=\"xterm_252\">Patch #252 - 2009/12/7</a></h1>\n\n  <ul>\n    <li>modify title-querying logic to support retrieval of titles\n    encoded using UTF-8.</li>\n\n    <li>add new \"title-modes\" control sequence for controlling\n    whether window/icon titles can be set or queried using UTF-8,\n    optionally encoded in a hexadecimal string.</li>\n\n    <li>use <code>mkdir&nbsp;-p</code> rather than\n    <code>mkdirs.sh</code> (prompted by discussion of mawk by\n    Aleksey Cheusov).</li>\n\n    <li>add appropriate copyright/license notices to the bulk of\n    files lacking same, and modify to use identical terms in others\n    which used different wording. The main exceptions are the files\n    contributed by Markus Kuhn, who appears to prefer public domain\n    distribution, noting that I have modified/improved several of\n    these without changing the terms of distribution (request by\n    Jari Aalto).</li>\n\n    <li>add control sequences for resetting the \"dynamic\" colors to\n    their default values.</li>\n\n    <li>add control sequences for resetting the \"special\" colors to\n    their default values.</li>\n\n    <li>add control sequences for setting the \"special\" colors such\n    as <code>colorBD</code> (bold).</li>\n\n    <li>add overlooked case for setting highlight foreground color\n    with the dynamic-colors control.</li>\n\n    <li>add <code>OSC 104</code>, for resetting ANSI/16/88/256\n    colors to default.</li>\n\n    <li>reset ANSI/16/88/256 colors to default in soft/hard reset\n    functions.</li>\n\n    <li>strip \"xft:\" prefix from <code>faceName</code> and\n    <code>faceNameDoublesize</code> resource values,</li>\n\n    <li>add <code>DECSCUSR</code> (discussion with Andy\n    Koppe).</li>\n\n    <li>add check/warning on failure to load font, to see if the\n    name looks like an Xft pattern rather than XLFD. This can\n    happen if someone happens to modify their X resource settings\n    for programs that read data from xterm's namespace.</li>\n\n    <li>modify handling of <code>print</code> and\n    <code>print-everything</code> actions to allow the various\n    printer flags to be overridden by supplying parameters.</li>\n\n    <li>add resource <code>printerNewLine</code> (request by Ovidiu\n    Gheorghioiu).</li>\n\n    <li>minor cleanup, finish using <code>TScreenOf()</code> and\n    <code>TekScreenOf()</code> macros introduced in <a href=\n    \"#xterm_224\">patch #224</a>.</li>\n\n    <li>improve checks in ShowCursor/HideCursor to get the\n    background color, particularly when\n    <code>highlightReverse</code> resource is used (reports by Jan\n    Engelhardt, Christian Weisgerber).</li>\n\n    <li>correct <code>checkVeryBoldAttr</code> to omit comparison\n    of foreground color to special color values used for\n    <code>color&lt;XX&gt;</code> resources (report by Jan\n    Engelhardt).</li>\n\n    <li>make <code>colorBDMode</code> and <code>colorULMode</code>\n    resources work with TrueType configuration (report by Jan\n    Engelhardt).</li>\n  </ul>\n\n  <h1><a name=\"xterm_251\" id=\"xterm_251\">Patch #251 -\n  2009/11/11</a></h1>\n\n  <ul>\n    <li>add window-ops controls to push/pop icon and/or window\n    labels on a stack.</li>\n\n    <li>minor fixes to align termcap file with terminfo.</li>\n\n    <li>add resource <code>disallowedWindowOps</code>, to allow\n    fine-tuning of features to suppress with the\n    <code>allowWindowOps</code> resource (prompted by discussion\n    with Bram Moolenaar).</li>\n\n    <li>add makefile rules for resize-manpage to pdf, etc.</li>\n\n    <li>further improve limit-checks in select/paste (Mandriva\n    #54531).</li>\n  </ul>\n\n  <h1><a name=\"xterm_250\" id=\"xterm_250\">Patch #250 -\n  2009/10/13</a></h1>\n\n  <ul>\n    <li>add check and error-message for fonts that have no\n    printable values in the ISO-8859-1 range (Debian #542434).</li>\n\n    <li>some compiler-warning cleanup, in particular workaround for\n    defective implementation of gcc's attribute warn_unused_result\n    (report by Bram Moolenaar).</li>\n\n    <li>improve estimate of single-column width for packed TrueType\n    fonts by ignoring extents for codes 127 and 159.</li>\n\n    <li>improve line-drawing for TrueType fonts which happen to\n    have defined glyphs which are <em>not</em> line-drawing in\n    0..31 by assuming they're not, and just checking the existence\n    of the Unicode codepoints. This makes it more likely that the\n    user can override a misconfigured font using the \"Line-Drawing\n    Characters\" menu entry.</li>\n\n    <li>limit minimum cell-width for packed font to maximum-advance\n    reported by Xft. Some fonts are wider than that, even in the\n    Latin-1 range (Debian #550497).</li>\n\n    <li>add list of direct-contributors in \"THANKS\" file.</li>\n\n    <li>stylistic changes to this file to help scripted extraction\n    of list of contributors.</li>\n\n    <li>correct off-by-one in <code>okPosition</code> fix from\n    <a href=\"#xterm_249\">patch #249</a> limit-checks which\n    prevented double-click selection on the bottom line of the\n    screen (reports by Rajeev V. Pillai, Debian #550368).</li>\n\n    <li>add <code>-q</code> option to\n    <code>vttests/256colors2.pl</code> and\n    <code>vttests/88colors2.pl</code> to demonstrate bulk\n    initialization of color palette.</li>\n\n    <li>improve the workaround from patch #188 by enabling\n    resources for the 88-color model.</li>\n\n    <li>document in xterm manpage the limited availability of\n    resources <code>color16</code> to <code>color255</code> as\n    noted in <a href=\"#xterm_188\">patch #188</a> (Ubuntu\n    #438850).</li>\n  </ul>\n\n  <h1><a name=\"xterm_249\" id=\"xterm_249\">Patch #249 - 2009/10/1</a></h1>\n\n  <ul>\n    <li>change default for <code>allowWindowOps</code> resource to\n    false. \n    <!-- on the other hand, gnome-terminal, pterm and rxvt-unicode\n                leave most of the related functionality enabled ;-) --></li>\n\n    <li>add limit-checks for result of visual_width() function,\n    needed from <a href=\"#xterm_242\">patch #242</a> and exposed by\n    #244 changes (Debian #548321).</li>\n\n    <li>improve limit-checks in select/paste.</li>\n\n    <li>fix a remaining bug from <a href=\"#xterm_230\">patch\n    #230</a> changes for displaying multi-column characters in a\n    proportional font (report by Chris Jones).</li>\n\n    <li>add new resource forcePackedFont and menu entry \"Packed\n    Font\" to control whether to use the font's minimum (default) or\n    maximum width when those differ. The workaround which xterm\n    uses to accommodate proportional fonts is not necessary with\n    certain fonts such as unifont which happen to store a mixture\n    of multicolumn glyphs (report by Chris Jones).</li>\n\n    <li>fix an (old) bug which did not restart the timer for\n    blinking text if the only blinking text was temporarily\n    scrolled out of view, e.g., using the scrollbar.</li>\n\n    <li>fix an (old) flaw in the delete-line operation where the\n    text which is scrolled into view while the display is scrolled\n    up was not repainted.</li>\n\n    <li>improve delete-line and insert-line operations, retaining\n    selection when the selection does not intersect the\n    deleted/inserted lines.</li>\n\n    <li>fix an (old) off-by-one error when an application cleared\n    above the cursor position while the display was scrolled up,\n    that would leave an extra line of text uncleared.</li>\n\n    <li>fix a similar problem where the double-size attribute would\n    not be reset when clearing the screen while the display was\n    scrolled up.</li>\n\n    <li>fix an indexing error which would occur if an application\n    cleared a line while the display was scrolled up and was also\n    in UTF-8 mode (Redhat #524503). The error was from <a href=\n    \"#xterm_228\">patch #228</a> but more visible after changes from\n    <a href=\"#xterm_244\">patch #244</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_248\" id=\"xterm_248\">Patch #248 - 2009/9/11</a></h1>\n\n  <ul>\n    <li>fix an overlooked adjustment for selecting double-width\n    characters in the narrow-character configuration.</li>\n\n    <li>eliminate uses of <code>XTERM_CELL</code> and\n    <code>XTERM_CELLC</code> where an appropriate\n    <code>LineData</code> pointer is available.</li>\n\n    <li>correct expression in <code>okScrnRow</code> macro, making\n    selections give the length of lines below the visible screen\n    (report by Stuart Henderson).</li>\n\n    <li>correct logic used to improve performance of missing-glyph\n    check, which did not handle line-drawing characters (Debian\n    #545220).</li>\n  </ul>\n\n  <h1><a name=\"xterm_247\" id=\"xterm_247\">Patch #247 - 2009/8/30</a></h1>\n\n  <ul>\n    <li>add ifdef's and check for openpty() on DragonFly (patch by\n    Alex Hornung).</li>\n\n    <li>correct calculation for size of line's data block, which\n    was sometimes off-by-one when configured using\n    <code>--enable-16bit-chars</code> (report by H Merijn\n    Brand).</li>\n\n    <li>fix indexing error in print-everything feature from\n    <a href=\"#xterm_246\">patch #246</a> (patch by Ovidiu\n    Gheorghioiu).</li>\n  </ul>\n\n  <h1><a name=\"xterm_246\" id=\"xterm_246\">Patch #246 - 2009/8/16</a></h1>\n\n  <ul>\n    <li>remove obsolete logic for saving/restoring wrapping flags,\n    which did not work on 64-bit platform. Wrapping flags (stored\n    in the line-index) are now copied with line-data (Debian\n    #541160).</li>\n\n    <li>modify comments in app-defaults files to avoid problem with\n    C preprocessor used by <code>xrdb</code> (Debian #541603).</li>\n\n    <li>restore special case in <code>makeColorPair</code>, needed\n    for <code>colorBDMode</code> resource (Debian #541089).</li>\n\n    <li>correct <code>SetLineFlags()</code> macro, broken in\n    <a href=\"#xterm_244\">patch #244</a> when recoding to avoid\n    gcc-specific bitfields (Debian #541236).</li>\n\n    <li>modify initialization of screen buffers to ensure that\n    pointers align to int-boundaries. This fixes a problem\n    introduced in <a href=\"#xterm_244\">patch #244</a> where the\n    color- and character-arrays (stored after the video-attributes\n    in each row) might be misaligned (report by Rajeev V\n    Pillai).</li>\n\n    <li>add limit-check in <code>ScrnRefresh</code> for handling\n    saved-lines from the circular buffer which are repainted on a\n    screen whose width has increased. To improve performance,\n    circular buffer entries are not resized (report by Rajeev V\n    Pillai).</li>\n\n    <li>correct type for <code>CellColor</code> (a late change in\n    <a href=\"#xterm_244\">patch #244</a> to avoid gcc-specifc enums\n    made that unsigned rather than unsigned short, for the\n    256-color option).</li>\n\n    <li>fix typo in configure option --enable-16bit-chars (report\n    by Rajeev V. Pillai).</li>\n  </ul>\n\n  <h1><a name=\"xterm_245\" id=\"xterm_245\">Patch #245 - 2009/8/12</a></h1>\n\n  <ul>\n    <li>correct a special case in saving FIFO-lines from <a href=\n    \"#xterm_244\">patch #244</a>. If the screen was shrunk, xterm\n    used the wrong amount for copying to FIFO-lines, and then used\n    this amount to adjust the current row on the screen. That was\n    both a visible defect (Debian #541109) as well as a potential\n    addressing error (Debian #541132, Debian #541160, and Debian\n    #541236).</li>\n\n    <li>add clarification in xterm manual about the various\n    <code>allow<em>XXX</em>Ops</code> resources, which are disabled\n    when the <code>allowSendEvents</code> resource is active (patch\n    by Julien Cristau, Debian #531597).</li>\n  </ul>\n\n  <h1><a name=\"xterm_244\" id=\"xterm_244\">Patch #244 - 2009/8/9</a></h1>\n\n  <ul>\n    <li>refactored storage of saved-lines, providing a configure\n    option to manage them as a FIFO (actually a circular buffer),\n    improving performance. Added configure option\n    <code>--enable-fifo-lines</code> to enable/disable the new\n    feature (it is enabled by default).</li>\n\n    <li>added <code>fastScroll</code> resource, to amuse people who\n    measure terminal emulator performance by <code>cat</code>'ing\n    large files to the screen.</li>\n\n    <li>modify check in <code>readPtyData</code> from return values\n    to provide exit on zero-bytes read from pty for FreeBSD, or\n    eliminate high-CPU in \"xterm-hold\" processing (discussion with\n    Ulrich Spoerlein, FreeBSD ports/136686). The check was\n    originally modified to combine negative/zero values in\n    XFree86-3.1.2E, 1996/05/06.</li>\n\n    <li>add configure option <code>--enable-16bit-chars</code> to\n    provide wide-characters with 16-bits (rather than the default\n    32-bits).</li>\n\n    <li>add <code>retryInputMethod</code> resource to allow\n    configuring out the retries xterm uses to connect to\n    non-responsive XIM server, to work around defective X\n    configurations as noted in <a href=\n    \"http://mail-index.netbsd.org/tech-x11/2009/06/07/msg000511.html\">\n    NetBSD mailing list</a>.</li>\n\n    <li>make regular-expression selection work for VT100\n    double-sized characters.</li>\n\n    <li>improve layout when drawing missing characters in a\n    proportional font, e.g., as boxes, to take into account whether\n    they are double-width (report by Guilbert Stabilo on\n    comp.unix.shell).</li>\n\n    <li>add capability for keypad-center (kb2/KA2) to termcap entry\n    for xterm-new, as well as xterm-8bit, xterm-sun and xterm-vt220\n    (FreeBSD conf/136336).</li>\n\n    <li>change default for <code>keepSelection</code> resource to\n    true (prompted by discussion with David Muir Sharnoff).</li>\n\n    <li>remove a limit-check in ptydata.c, allowing Unicode values\n    past 64k to be displayed using TrueType fonts (Debian\n    #458432).</li>\n\n    <li>remove a vt52-specific ifdef to allow mapping F1-F4 to\n    PF1-PF4 when vt52 support is not compiled (report by Olaf\n    'Rhialto' Seibert).</li>\n\n    <li>save/restore line-wrapping flags when converting from\n    ISO-8859-1 encoding to UTF-8 encoding, as well as when resizing\n    screen.</li>\n\n    <li>remove extra adjustment of position in fix for Debian\n    #418324.</li>\n\n    <li>modify default check for <code>mkWidth</code> resource to\n    check for line-drawing characters, which are categorized as\n    double-width in Solaris 10 (report by Sebastian Kayser).</li>\n\n    <li>add \"print-everything\" action (patch by Ovidiu\n    Gheorghioiu).</li>\n\n    <li>start refactoring scrollback data using new getLineData()\n    function.</li>\n\n    <li>demote recent change to Debian #252873 fix to experimental,\n    ifdef'd out as <code>EXP_BOGUS_FG</code> (Debian #522141).</li>\n\n    <li>work around groff mapping of ASCII quotes using macros\n    (requested by Reuben Thomas based on Colin Watson advice, fixes\n    Debian #378700).</li>\n\n    <li>correct symbol used for default of\n    <code>allowWindowOps</code> which was\n    <code>DEF_ALLOW_FONT</code> rather than\n    <code>DEF_ALLOW_WINDOW</code> (report by Matthieu Herrb).</li>\n\n    <li>amend fix for tek4014 from <a href=\"#xterm_243\">patch\n    #243</a> to make it only apply to the Tek Options menu.</li>\n  </ul>\n\n  <h1><a name=\"xterm_243\" id=\"xterm_243\">Patch #243 - 2009/3/28</a></h1>\n\n  <ul>\n    <li>revert change to default for <code>allowTcapOps</code>\n    (request by Bram Moolenaar).</li>\n\n    <li>reallocate result returned by <code>xtermEnvLocale()</code>\n    to avoid reference to freed memory after handling\n    <code>menuLocale</code> resource.</li>\n\n    <li>fix an old (X11R5) bug in tek4014 for switching\n    fontsizes.</li>\n\n    <li>add resource <code>defaultString</code> to make\n    configurable the use of \"#\" when pastes of UTF-8 text fail due\n    to limitations in the current locale settings.</li>\n\n    <li>make the set of selection target Atom's configurable by two\n    new resources <code>eightBitSelectTypes</code> and\n    <code>utf8SelectTypes</code>, e.g., to use the\n    <code>TEXT</code> Atom in preference to\n    <code>UTF8_STRING</code> (discussion with Stanislav Sedov\n    regarding koi8rxterm and the FreeBSD port).</li>\n\n    <li>modify handling of <code>TARGETS</code> Atom by making it\n    return exactly the set of targets as those which xterm is\n    currently providing.</li>\n\n    <li>set <code>MANPAGER</code> and <code>PAGER</code> explicitly\n    to /bin/cat in <code>minstall.sh</code> to work around\n    /etc/man.conf's with those variables already set (report by\n    &#1052;&#1072;&#1088;&#1100;&#1103;&#1089;&#1080;&#1085;\n    &#1057;&#1077;&#1084;&#1105;&#1085;).</li>\n\n    <li>improve error-checking of tcap-query parser.</li>\n\n    <li>add check for keyboard <code>tcap</code>), which ensures\n    that terminal descriptions containing the same string for\n    shifted/unshifted keys will be seen by tcap-query as only the\n    unshifted key. (This would only happen with an incorrect\n    terminal description).</li>\n\n    <li>fix conversion for input event-state to modifier-parameter\n    which made tcap-query feature not work with\n    <code>tcapFunctionKeys</code> (keyboard type\n    <code>tcap</code>).</li>\n\n    <li>add \"DEF_ALLOW_<em>XXX</em>\" definitions to main.h to allow\n    overriding the default compiled-in values for\n    \"allow<em>xxx</em>\" resources.</li>\n\n    <li>remove check on bell-percentage added in <a href=\n    \"#xterm_242\">patch #242</a>, which disallowed zero/negative\n    values (Redhat Bugzilla #487829).</li>\n  </ul>\n\n  <h1><a name=\"xterm_242\" id=\"xterm_242\">Patch #242 - 2009/2/15</a></h1>\n\n  <ul>\n    <li>fix configure check for <code>XkbBell</code> and provide\n    appropriate parameter for it.</li>\n\n    <li>fix a caching problem with double-size fonts versus reverse\n    video that could cause core dump.</li>\n\n    <li>repair double-size fonts from workaround used in <a href=\n    \"#xterm_240\">patch #240</a>.</li>\n\n    <li>add new section to the VT Fonts menu which allows enabling\n    or disabling the font, termcap (tcap-query), title and window\n    operations.</li>\n\n    <li>add <code>fontWarnings</code> resource, to control whether\n    to show warnings on failure to load a font.</li>\n\n    <li>improve warnings for unloadable fonts introduced in\n    <a href=\"#xterm_240\">patch #240</a> by limiting those to the\n    cases where a font would be specified directly by a resource\n    setting rather than a derived fontname.</li>\n\n    <li>further amend fix for Debian #252873 from <a href=\n    \"#xterm_197\">patch #197</a> to treat a blank cell which does\n    not have both foreground and background colored as a\n    non-colored cell. This improves a special case where the cursor\n    is on a blank cell which had foreground color scrolled in\n    (report by Miroslav Lichvar).\n      <p>Also add the same logic when hiding cursor, so the outline\n      matches the in-focus cursor.</p>\n    </li>\n\n    <li>modify internals to reduce places PAIRED_CHARS() is used,\n    making WriteText() and ScrnWriteText() accept IChar array, as\n    well as providing a wrapper for drawXtermText().</li>\n\n    <li>change default XIM font from \"*\" to \"fixed\" to improve\n    startup time in zh_CN.UTF-8 locale (Mike Fabian, SuSE Bugzilla\n    #464930).</li>\n\n    <li>typo in #240 log (Slava Semushin)</li>\n  </ul>\n\n  <h1><a name=\"xterm_241\" id=\"xterm_241\">Patch #241 - 2009/1/26</a></h1>\n\n  <ul>\n    <li>improve checks for missing bitmap fonts, fallback to\n    \"fixed\" as needed to work around broken font-packages (report\n    by Jacek Luczak).</li>\n\n    <li>fix breakage from <a href=\"#xterm_240\">patch #240</a>\n    changes for <code>xtermAddInput()</code> (patches by Jeff Chua,\n    Julien Cristau).</li>\n  </ul>\n\n  <h1><a name=\"xterm_240\" id=\"xterm_240\">Patch #240 - 2009/1/25</a></h1>\n\n  <ul>\n    <li>use <code>plink.sh</code> for linking xterm (suggested by\n    Larry Doolittle).</li>\n\n    <li>add resource descriptions for input method to xterm\n    manpage.</li>\n\n    <li>update configure script; consistently append to $CFLAGS\n    rather than prepend.</li>\n\n    <li>add <code>install-scripts</code> rule to makefile, to allow\n    koi8rxterm and uxterm scripts to be altered independently of\n    <code>install-bin</code></li>\n\n    <li>add <code>-maximized</code> command-line option and\n    corresponding resource (prompted by alt.os.linux newsgroup\n    comment).</li>\n\n    <li>modify translations of scrollbar widget using\n    <code>xtermAddInput()</code> (see <a href=\"#xterm_181\">patch\n    #181</a>) to accept the actions that the vt100 widget accepts,\n    such as shift-insert to perform a paste operation (request by\n    Martin Zwickel).</li>\n\n    <li>change default for <code>allowTcapsOps</code> resource to\n    false, since it causes unexpected behavior for vim users with\n    <code>AltGr</code>.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_239\" id=\"xterm_239\">Patch #239 - 2009/1/8</a></h1>\n\n  <ul>\n    <li>correct a cast in input.c, which broke translation of\n    numeric keypad codes to pageup, pagedown, etc., on 64-bit\n    platform (Debian #511138, report by Larry Doolittle).</li>\n  </ul>\n\n  <h1><a name=\"xterm_238\" id=\"xterm_238\">Patch #238 -\n  2008/12/30</a></h1>\n\n  <ul>\n    <li>update configure macro CF_XOPEN_SOURCE for AIX 6.x and Mint\n    platforms.</li>\n\n    <li>reset the screen wrapping-flag at the end of\n    <code>ClearRight</code> to fix an occasional case where the\n    last character of a scrolled and wrapped line would be cleared\n    (patch by Joe Peterson).</li>\n\n    <li>modify to use POSIX coding for comparing resource settings\n    such as <code>locale</code>, to work with locales such as\n    Turkish (report by M Vefa Bicakci).</li>\n\n    <li>turn on configure <code>paste64</code> feature by default\n    (request by Jean-Philippe Bernardy). It is runtime\n    enabled/disabled with <code>allowWindowOps</code>.</li>\n\n    <li>turn on configure <code>tcap-query</code> feature by\n    default, add resource <code>allowTcapOps</code> to make this\n    runtime enabled/disabled.</li>\n\n    <li>make <code>OSC 3</code> (change X property, from <a href=\n    \"#xterm_110\">patch #110</a>) subject to\n    <code>allowWindowOps</code> resource.</li>\n\n    <li>make VT220 <code>DSR</code> responses inactive in\n    VT100-mode.</li>\n\n    <li>make <code>DECUDK</code> feature inactive in\n    VT100-mode.</li>\n\n    <li>respond to incorrectly formatted <code>DECRQSS</code> with\n    a cancel.</li>\n\n    <li>add <code>allowFontOps</code> resource to allow the\n    fontsize-switching and font query/set control sequences to be\n    enabled/disabled (prompted by Debian #510030).</li>\n\n    <li>some code cleanup based on gcc 4.x\n    <code>-Wconversion</code> warnings in button.c and\n    charproc.c</li>\n\n    <li>modify <code>tcap-query</code> feature to not return data\n    for shifted cursor-keys when the keyboard type is set to vt220,\n    since returning the same string for shifted/unshifted keys may\n    confuse some applications (Gentoo #212546).</li>\n  </ul>\n\n  <h1><a name=\"xterm_237\" id=\"xterm_237\">Patch #237 -\n  2008/09/14</a></h1>\n\n  <ul>\n    <li>improve usability of TrueType fonts by making the font-size\n    switching for shifted keypad plus/minus use the\n    <code>faceSize</code> resources to determine the order of fonts\n    (when TrueType fonts are used) rather than the bitmap fonts,\n    since their sizes may not be in the same order (report by H\n    Merijn Brand)</li>\n\n    <li>remove an optimization of <code>ConfigureNotify</code>\n    events from <a href=\"#xterm_236\">patch #236</a> which seems to\n    interfere with passing <code>SIGWINCH</code> to applications\n    (Gentoo #233836).</li>\n\n    <li>modify handling of <code>altSendsEscape</code> to reset the\n    <code>eightBitInput</code> mode, like\n    <code>metaSendsEscape</code> (patch by Ted Phelps).</li>\n\n    <li>add feature to show the text-cursor as an underline rather\n    than a box, plus command-line options <code>-uc</code> and\n    <code>+uc</code> and resource <code>cursorUnderLine</code> to\n    control the feature (patch by Paul Lampert).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_236\" id=\"xterm_236\">Patch #236 -\n  2008/07/27</a></h1>\n\n  <ul>\n    <li>correct memory reallocation when handling a paste of UTF-8\n    text from <a href=\"#xterm_225\">patch #225</a> changes\n    (report/patch by Max Mikhanosha).</li>\n\n    <li>correct allocation of temporary buffer in\n    <code>xtermFindShell</code> in case the user's\n    <code>$PATH</code> contains no \":\" (report/analysis by Victor\n    Stinner, Freedesktop.Org Bugzilla #16790).</li>\n\n    <li>modify CF_XOPEN_SOURCE to add case for DragonFly BSD, to\n    fix new compile problem exposed by fix for fd_mask (patch by\n    Hasso Tepper).</li>\n\n    <li>add configure-check for ncurses\n    <code>use_extended_names</code>, (report by Martin\n    Mokrejs).</li>\n\n    <li>correct computation for toolbar height; layout manager\n    already takes into account <code>borderWidth</code>\n    resource.</li>\n\n    <li>implement VT320-style SCS (select character set) for ISO\n    Latin-1 supplemental.</li>\n\n    <li>fixes for vt100-style character sets in UTF-8 mode (Ubuntu\n    #230919).</li>\n\n    <li>fix to make <code>luit</code> work with xterm's\n    <code>-ls</code> option (report/patch by Marius Tolzmann).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_235\" id=\"xterm_235\">Patch #235 -\n  2008/04/20</a></h1>\n\n  <ul>\n    <li>add control sequences for some of the recent resource/menu\n    settings:\n      <ul>\n        <li><code>altSendsEscape</code> (private mode 1039)</li>\n\n        <li><code>keepSelection</code> (private mode 1040)</li>\n\n        <li><code>selectToClipboard</code> (private mode 1041)</li>\n\n        <li><code>bellIsUrgent</code> (private mode 1042)</li>\n\n        <li><code>popOnBell</code> (private mode 1043)</li>\n      </ul>\n    </li>\n\n    <li>add resource <code>formatOtherKeys</code> to provide an\n    alternate escape sequence format for the\n    <code>modifyOtherKeys</code> resource (request by Paul LeoNerd\n    Evans).</li>\n\n    <li>adjust saved-cursor position if the window is resized while\n    displaying the alternate screen (Novell #196880, Debian\n    #383384).</li>\n\n    <li>improve pointer-checks to fix a bug exposed by resizing\n    during initialization under StumpWM window manager (Fedora\n    Bugzilla #437928).</li>\n\n    <li>modify <code>unselectwindow()</code> to ensure that the\n    mouse pointer is not hidden after xterm loses focus (report by\n    Jeremy Huddleston).</li>\n\n    <li>add special check for fd_mask on Mac OS X (report by Jeremy\n    Huddleston).</li>\n\n    <li>add <code>dylib</code> to autoconf's suffix list used for\n    checking the result from <code>xmkmf</code>, to work with Mac\n    OS X (report by Jeremy Huddleston).</li>\n\n    <li>correct initialization of bold- and wide-, wide-bold fonts\n    which may be set via the <code>utf8Fonts</code> subresource\n    (Debian #347790).</li>\n  </ul>\n\n  <h1><a name=\"xterm_234\" id=\"xterm_234\">Patch #234 -\n  2008/03/02</a></h1>\n\n  <ul>\n    <li>modify <code>sinstall.sh</code> to use POSIX locale to\n    bypass GNU ls changes to date-format.</li>\n\n    <li>improved/refined changes for closing bitmap font (patch by\n    Andrea Odetti).</li>\n\n    <li>improve resize computation for situations where the\n    negotiation fails, by invoking the xterm widget's core-class\n    resize method (Debian #365602, patch by Jim Paris).</li>\n\n    <li>restore initialization of terminal's <code>VMIN</code> and\n    <code>VTIME</code> settings, from <a href=\"#xterm_232\">patch\n    #232</a> changes (patch by Matthieu Herrb).</li>\n  </ul>\n\n  <h1><a name=\"xterm_233\" id=\"xterm_233\">Patch #233 -\n  2008/02/24</a></h1>\n\n  <ul>\n    <li>add configure check for <code>ttydefaults.h</code>, include\n    if needed, e.g., for systems where defining\n    <code>_POSIX_C_SOURCE</code>, etc., prevents it from being\n    included via <code>termios.h</code> (prompted by comments by\n    Robert Delius Royar and Jeremy Huddleston).</li>\n\n    <li>bug-fixes for bugs.opensolaris.org (patches from Alan\n    Coopersmith)\n      <dl>\n        <dt>4029911</dt>\n\n        <dd>fix a typo in manpage</dd>\n\n        <dt>4045962</dt>\n\n        <dd>xterm doesn't properly set ut_syslen</dd>\n\n        <dt>4192572</dt>\n\n        <dd>left-left-right misinterpreted as triple click</dd>\n      </dl>\n    </li>\n\n    <li>minor optimization to tab-initialization (patch by\n    N&eacute;meth M&aacute;rton).</li>\n\n    <li>fix a case where an incorrect font was freed during\n    initialization from <a href=\"#xterm_232\">patch #232</a> changes\n    (patch by Andrea Odetti).</li>\n\n    <li>improve comparison used in <code>SameFont</code> function\n    for GC-caching (Julien Cristau).</li>\n\n    <li>correct macro name used for default <code>CKILL</code>\n    definition to work with Mac OS X (report by Jeremy\n    Huddleston).</li>\n  </ul>\n\n  <h1><a name=\"xterm_232\" id=\"xterm_232\">Patch #232 -\n  2008/01/30</a></h1>\n\n  <ul>\n    <li>corrected logic in a font-cache used for reverse-video\n    (Debian #404079).</li>\n\n    <li>add control sequence to alter <code>pointerMode</code> at\n    runtime.</li>\n\n    <li>add limit-checks for rectangle operation parameters (report\n    by Martin Pirker).</li>\n\n    <li>modify <code>minstall.sh</code> to suppress\n    <code>$MANPAGER</code> and <code>$PAGER</code> environment\n    variables, which may interfere with redirecting output of\n    <code>man</code> to a shell variable (report/patch by Zdenek\n    Sekera).</li>\n\n    <li>do not try to hide mouse pointer in the tek4014 window,\n    fixes broken \"-t\" option at startup from <a href=\n    \"#xterm_230\">patch #230</a> changes (report by Robert K.\n    Nelson).</li>\n\n    <li>correct datatype used when drawing tek4014 data using xterm\n    compiled for wide-characters, on big-endian machines (reports\n    by Jeremy Huddleston, Harald Hanche-Olsen, Martin Costabel,\n    Merle Reinhart).</li>\n\n    <li>modify to cache the font-names along with the bitmap font\n    data, to improve comparison of fonts.</li>\n\n    <li>modify to allow building with configure options\n    <code>--disable-ansi-color</code> and\n    <code>--disable-leaks</code> (Debian #459817, report/patch by\n    N&eacute;meth M&aacute;rton).</li>\n\n    <li>modify to allow building with configure options\n    <code>--enable-wide-chars</code> and\n    <code>--disable-c1-print</code> (Debian #459816, report/patch\n    by N&eacute;meth M&aacute;rton).</li>\n\n    <li>add <code>pointerMode</code> resource to control whether\n    and when the pointer cursor is hidden as the user types.</li>\n\n    <li>simplify initialization of ttyMode- and related characters\n    using a table.</li>\n\n    <li>modify initialization-logic for stty values that correspond\n    to ltchars structure and the BSD TIOCSLTC ioctl (susp, dsusp,\n    rprnt flush, werase, lnext). These were reset to constants for\n    both termios and legacy interfaces immediately after asking the\n    system for the existing values since X11R6.1, rather than using\n    them to provide inherited values. While the legacy interface\n    has some constraints, e.g., on HPUX, the POSIX or termios\n    interface should not. Your shell may reset these anyway\n    (prompted by patch by Ed Schouten).</li>\n\n    <li>improve logic for hiding/displaying pointer-cursor (report\n    by Mark Brukhartz).</li>\n\n    <li>add limit-checks to tabs.c, increase maximum column for\n    setting tab-stops from 320 to 1024 (report by N&eacute;meth\n    M&aacute;rton).</li>\n\n    <li>correct length, i.e., number of types of selection targets,\n    computed by <code>ConvertSelection()</code> when not handling\n    wide characters for the <code>XA_TARGETS()</code> case. This\n    leaves an extra Atom on the end of the list which is not\n    handled by <a href=\n    \"http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6322854\">Java\n    applications</a>. The problem was introduced in <a href=\n    \"#xterm_151\">patch #151</a> (report by David Wood).</li>\n  </ul>\n\n  <h1><a name=\"xterm_231\" id=\"xterm_231\">Patch #231 -\n  2008/01/05</a></h1>\n\n  <ul>\n    <li>undo change to <code>getXtermCell()</code> from patch #230\n    using <code>PACK_PAIR</code> macro (Debian #459014, analysis by\n    Caetano Jimenez Carezzato).</li>\n\n    <li>minor documentation fixes (patch by Slava Semushin)</li>\n\n    <li>add makefile actions to install KOI8RXTerm app-defaults\n    file (patch by Julien Cristau).</li>\n  </ul>\n\n  <h1><a name=\"xterm_230\" id=\"xterm_230\">Patch #230 -\n  2007/12/31</a></h1>\n\n  <ul>\n    <li>add <code>quietGrab</code> resource, which when true,\n    suppresses cursor repainting when <code>NotifyGrab</code> and\n    <code>NotifyUngrab</code> event types are received during\n    change of focus (request by Nicolas George).</li>\n\n    <li>do not treat Unicode BIDI control characters as combining\n    characters (Debian #457634).</li>\n\n    <li>add <code>koi8rxterm</code>, from Debian.</li>\n\n    <li>add manpage for <code>uxterm</code>, from Debian (Ubuntu\n    #128136, Debian #438645)</li>\n\n    <li>remove \".xpm\" suffixes from Icon filenames in desktop files\n    since it confuses some lookups following the <a href=\n    \"http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html\">\n    Icon Theme Specification</a> (report by Slava Semushin)</li>\n\n    <li>correct width-calculation used for adjusting proportional\n    fonts, to work with wide-characters (Debian #441354).</li>\n\n    <li>fixes/improvements for double-size characters:\n      <ul>\n        <li>correct old clipping calculation which used total\n        height of glyphs where ascent was needed.</li>\n\n        <li>if bold font is unavailable, fall back to normal\n        font</li>\n\n        <li>adjust to \"work\" with Xft (which does not support\n        double-width single-height characters).</li>\n\n        <li>restore reset of doublesize for a line when it is\n        cleared, broken in <a href=\"#xterm_228\">patch\n        #228</a>.</li>\n      </ul>\n    </li>\n\n    <li>modify logic for <code>forceBoxChars</code> resource when\n    using TrueType fonts to be consistent with bitmap fonts</li>\n\n    <li>modify logic for <code>forceBoxChars</code> resource to\n    make the \"Line-Drawing Characters\" menu entry use xterm's\n    line-drawing characters even asked to draw wide line-drawing\n    characters which are available in the font.</li>\n\n    <li>modify rectangle-support functions to preserve colors when\n    filling/erasing to match WRQ Reflection behavior (request by\n    Enzo Toscano).</li>\n\n    <li>add getopt-parsing to tcapquery.pl, including feature to\n    test the extended cursor/editing keys.</li>\n\n    <li>make missing double-width glyphs display as double-width\n    (Debian #456236).</li>\n\n    <li>change <code>tcap-fkeys</code> and <code>rectangles</code>\n    configure options to enable them by default.</li>\n\n    <li>hide the mouse pointer while user is typing (request by\n    Rodolfo Borges).</li>\n\n    <li>extend configure options <code>--enable-tcap-query</code>\n    and <code>--enable-tcap-fkeys</code> to send cursor- and\n    editing-keypad keys modified according to the keyboard (or\n    termcap) selection for shift, alt, control, meta.</li>\n\n    <li>modify <code>kdch1</code> in termcap, e.g.,\n    <code>xterm-r6</code> to match the terminfo file.</li>\n\n    <li>add <code>-hm</code> option to turn\n    <code>highlightColorMode</code> on or off.</li>\n\n    <li>add <code>highlightColorMode</code> resource to separate\n    the new (since <a href=\"#xterm_225\">patch #225</a>)\n    highlighting with both text- and background-colors (prompted by\n    report/example by Thomas Wolff).</li>\n\n    <li>add <em>Keep Selection</em> menu entry to turn the\n    <code>keepSelection</code> resource on/off at runtime.</li>\n\n    <li>add <code>keepSelection</code> resource, which when\n    enabled, tells xterm to retain the X selection even after it\n    stops highlighting it (patch by Sergey Vlasov).</li>\n\n    <li>extend the <code>CSI&nbsp;&gt;&nbsp;n</code> sequence to\n    allow disabling all types of modified-keys that the\n    <code>CSI&nbsp;&gt;&nbsp;m</code> sequence affects.</li>\n\n    <li>move include for <code>&lt;xtermcap.h&gt;</code> in\n    <code>resize.c</code> to avoid redefinition of\n    <code>termios</code> structure on OpenSolaris (report by Rahul\n    Gopinathan Nair).</li>\n\n    <li>extend terminfo building blocks for modified editing keys\n    to include all six keys.</li>\n\n    <li>synchronize terminfo with ncurses (report by Stephane\n    Chazelas)\n      <ul>\n        <li>equate <code>xterm-xfree86</code> and\n        <code>xterm-xf86-v44</code>.</li>\n\n        <li>add ncurses extensions OTbs, AX, for termcap\n        conversions.</li>\n\n        <li>make old/legacy entries such as <code>xterm-24</code>,\n        <code>xterm-65</code> and aliases <code>xterms</code>,\n        <code>vs100</code> inherit from\n        <code>xterm-old</code>.</li>\n\n        <li>make <code>xterm-r5</code> and <code>xterm-r6</code>\n        the same, ignoring historical errors in X Consortium's\n        version.</li>\n      </ul>\n    </li>\n\n    <li>fix an ifdef in logic for selecting regular expressions\n    while in a narrow-character locale (Debian #449227).</li>\n  </ul>\n\n  <h1><a name=\"xterm_229\" id=\"xterm_229\">Patch #229 - 2007/8/12</a></h1>\n\n  <ul>\n    <li>override locale in minstall.sh; change in <a href=\n    \"#xterm_226\">patch #226</a> does not work in UTF-8 locale\n    (report by Zdenek Sekera).</li>\n\n    <li>undo an incorrect fix for a memory leak in <a href=\n    \"#xterm_209\">patch #209</a> (Debian #435858).</li>\n  </ul>\n\n  <h1><a name=\"xterm_228\" id=\"xterm_228\">Patch #228 - 2007/7/22</a></h1>\n\n  <ul>\n    <li>modify configure script to permit combining\n    <code>--with-utempter</code> and <code>--enable-setuid</code>,\n    e.g., for using xterm with the utempter library on FreeBSD\n    (report by Andriy Gapon).</li>\n\n    <li>modify \"Quit\" menu entry to override the <code>-hold</code>\n    command-line option.</li>\n\n    <li>add a check in the startup error-reporting to avoid writing\n    to pipe when it has not been opened. In that case, report\n    errors directly to the standard error.</li>\n\n    <li>add OPT_READLINE definition to xtermcfg.hin, overlooked in\n    <a href=\"#xterm_205\">patch #205</a> (report by Kalle Olavi\n    Niemitalo).</li>\n\n    <li>modify <code>88colors2.pl</code> and\n    <code>256colors2.pl</code>, adding <code>-r</code> option to\n    reverse the palettes for the extended colors.</li>\n\n    <li>check for partial overwrite or deletion of multi-column\n    characters in several cases, e.g., insert-character,\n    delete-character, etc., and fill the remainder of the cells\n    used by the multi-column characters affected with blanks.</li>\n\n    <li>correct character-class codes in wide-character mode for\n    characters 215, 247 (see also <a href=\"#xterm_165\">patch\n    #165</a>).</li>\n\n    <li>fix missing assignment for UTF-8 parsing in widget\n    initialization (Debian #403360).</li>\n\n    <li>correct index expression used to set line-wrapping flag,\n    making selection from scrollback work consistently (Debian\n    #430121, report by Vincent Lef&egrave;vre).</li>\n\n    <li>amend changes to handshake in <a href=\"#xterm_226\">patch\n    #226</a> to accommodate Solaris, which relies on the extra\n    setting of the terminal size after I/O initialization. Do this\n    by adding new resource <code>ptySttySize</code>, which is false\n    for Linux and MacOS X, i.e., true for for Solaris and other\n    SVR4 platforms, as well as FreeBSD (reports by David Wood,\n    Renato Botelho).</li>\n\n    <li>check for X events after cursor-left, and carriage return,\n    consistent with indexing operations (comments by Vegard Nossum\n    and Ingo Molnar on a mailing-list).</li>\n\n    <li>initialize the <code>.keyboard</code> structure, needed for\n    some platforms (such as Solaris) after <a href=\n    \"#xterm_227\">patch #227</a> fixes for keysyms (patch by David\n    Wood).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_227\" id=\"xterm_227\">Patch #227 - 2007/6/27</a></h1>\n\n  <ul>\n    <li>exclude the Intel compiler from the extra gcc warning\n    options added in <a href=\"#xterm_226\">patch #226</a>.</li>\n\n    <li>modify change for Debian #422521 from <a href=\n    \"#xterm_226\">patch #226</a> to work with configurations where\n    the X server does not recognize the <code>XF86Paste</code> or\n    <code>SunPaste</code> keysyms (report by Paolo Pumilia).</li>\n\n    <li>fix incorrect free in fix for \"Selection\" menu entry in\n    <a href=\"#xterm_226\">patch #226</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_226\" id=\"xterm_226\">Patch #226 - 2007/6/17</a></h1>\n\n  <ul>\n    <li>add configure check to use\n    <code>-Wno-unknown-pragmas</code> for Solaris, and a few other\n    new gcc warning options to address regressions in its warning\n    options.</li>\n\n    <li>add sample desktop and icon files, along with configure\n    options for manipulating them.</li>\n\n    <li>fix an infinite loop when showing a 2-column character in a\n    1-column screen (Debian #426863).</li>\n\n    <li>add <code>XF86Paste</code> and <code>SunPaste</code> to the\n    default translations (Debian #422521, patch by Bernhard R\n    Link).</li>\n\n    <li>update wcwidth.c (partly based on/prompted by mailing list\n    comment).</li>\n\n    <li>update/improve keysym2ucs.c based on Unicode 5.0.1d3 and\n    Xorg 7.1 keysymdef.h file.</li>\n\n    <li>improve <code>gen-pc-fkeys.pl</code>, making it show all of\n    the building-block terminfo entries used by xterm.</li>\n\n    <li>correct strings used for modifiers applied to F1-F4 in\n    xterm+pcf1 terminfo entry.</li>\n\n    <li>improve session management by adding the ICE connection\n    number to the <code>select</code> call rather than waking up\n    once per second (patch by Miroslav Lichvar).</li>\n\n    <li>add environment variable <code>$XTERM_LOCALE</code> to help\n    with shell initialization, e.g., to set a specific locale for\n    xterm on systems where a global locale is set in the shell\n    startup scripts.</li>\n\n    <li>add resource settings <code>mkSampleSize</code> and\n    <code>mkSamplePass</code> to modify the <code>mkWidth</code>\n    added in <a href=\"#xterm_201\">patch #201</a>. In <a href=\n    \"#xterm_202\">patch #202</a>, xterm would also check if the\n    system's <code>wcwidth</code> matched its built-in tables \"well\n    enough\" to be used when <code>mkWidth</code> was false, and if\n    not would use the built-in tables anyway. These resources allow\n    the user to customize the decision (prompted by comments by\n    Emanuele Giaquinta)</li>\n\n    <li>modify logic which resets/updates the screensize on the\n    child process side of the pseudo-terminal to do this only if a\n    successful handshake was received, e.g., as determined by the\n    <code>waitForMap</code> resource (prompted by reports by\n    Emanuele Giaquinta and Bernhard R Link, but see also <a href=\n    \"#xterm_177\">patch #177</a> and <a href=\"#xterm_159\">patch\n    #159</a>.</li>\n\n    <li>improve permissions logic when closing pseudo-terminal\n    (Debian #12261, patch by Nathanael Nerode, analysis by Richard\n    Braakman).</li>\n\n    <li>add resource <code>highlightReverse</code> which controls\n    whether xterm will allow selection highlighting to hide\n    reverse-video or use the older behavior which inverts the\n    foreground and background colors when selected text with\n    reverse-video attribute (report by Adam M Costello, comments by\n    Victor Vaile).</li>\n\n    <li>restore a special case for cursor-color in\n    <code>ReverseVideo()</code> lost in rewrite for <a href=\n    \"#xterm_224\">patch #224</a> (report by Adam Sulmicki).</li>\n\n    <li>correct initialization for menu entry for\n    <code>bellIsUrgent</code> (patch by Emanuele Giaquinta).</li>\n\n    <li>correct length of underlining for double-width Xft fonts\n    (report by Shidai Liu \"Leo\").</li>\n\n    <li>correct clipping for double-width Xft fonts (report by\n    Shidai Liu \"Leo\").</li>\n\n    <li>modify initialization for <code>italicULMode</code> to\n    avoid <code>XftPatternBuild</code> reusing bold attributes\n    (report by Shidai Liu \"Leo\").</li>\n\n    <li>add a check in case someone tries to call the\n    <code>popup-menu()</code> action on a menu which is not\n    initialized (Debian #426364).</li>\n\n    <li>improve CF_IMAKE_CFLAGS to work with Solaris sed (report by\n    Peter Bray).</li>\n\n    <li>improve guess for X's manpage section in\n    <code>minstall.sh</code>, (prompted by comment by Miroslav\n    Lichvar).</li>\n\n    <li>modify <code>minstall.sh</code> to handle manpage patch\n    with more than one dot (patch by Miroslav Lichvar).</li>\n\n    <li>fix configure message for --disable-setgid option (patch by\n    Miroslav Lichvar).</li>\n\n    <li>add <code>allowTitleOps</code> resource to allow users to\n    prevent the title- and icon-names from changing (request by\n    John Bashinski).</li>\n\n    <li>fix \"spawn-new-terminal\" action, for the case where no\n    parameter is passed to the action (patch by Daniel\n    Colascione).</li>\n\n    <li>fix error-checking on internal font switching for\n    \"Selection\" menu entry (Debian #421523).</li>\n\n    <li>amend select/paste change from <a href=\"#xterm_225\">patch\n    #225</a> by limiting it to non-UTF-8/non-KOI8-R encoding\n    (Debian #420974).</li>\n\n    <li>add workaround for groff \".URL\" codes which are not present\n    in some commonly-used bitmap fonts (Debian #418324).</li>\n  </ul>\n\n  <h1><a name=\"xterm_225\" id=\"xterm_225\">Patch #225 - 2007/3/24</a></h1>\n\n  <ul>\n    <li>add <code>useClipping</code> resource to allow clipping to\n    be disabled.</li>\n\n    <li>use <code>XftDrawSetClipRectangles</code> to work around\n    Xft pixel-trash (report by Reuben Thomas).</li>\n\n    <li>add configure option <code>--enable-tcap-fkeys</code>, and\n    resource <code>tcapFunctionKeys</code>, which can be used to\n    tell xterm to use function-key definitions from the termcap (or\n    terminfo) which it uses to set $TERM on startup.</li>\n\n    <li>add resources <code>altIsNotMeta</code> and\n    <code>altSendsEscape</code> to allow one to use Alt-keys like\n    the meta-key even if they are bound to different keycodes\n    (prompted by discussion with Daniel Jacobowitz).</li>\n\n    <li>revert a change from <a href=\"#xterm_216\">patch #216</a>\n    that unnecessarily made the meta modifier override the\n    <code>eightBitInput</code> resource if the alt- and\n    meta-modifiers happened to overlap (report/patch by Daniel\n    Jacobowitz).</li>\n\n    <li>correct associated font for active icon for colored text\n    (broken in <a href=\"#xterm_224\">patch #224</a>).</li>\n\n    <li>correct ifdef's for Darwin (patch by Emanuele\n    Giaquinta).</li>\n\n    <li>add <code>highlightTextColor</code> resource, and options\n    <code>-selfg</code>, <code>-selbg</code> like <code>xwsh</code>\n    (adapted from patch by Victor Vaile).</li>\n\n    <li>revise <code>find_closest_color()</code> function to\n    address concern about borrowing from <code>Tcl/Tk</code>\n    (request by Dan McNichol).</li>\n\n    <li>add \"spawn-new-terminal\" action, which can be assigned to\n    key translation, allowing one to spawn a new copy of xterm\n    using the current process's working directory (adapted from\n    patch by Daniel Colascione).</li>\n\n    <li>improve select/paste between UTF-8 and Latin1 xterms by\n    adapting the translations from <a href=\"#xterm_185\">patch\n    #185</a>. Extend that to include Unicode fullwidth forms\n    FF00-FF5E. Also modify select/paste of DEC line-drawing\n    characters in Latin1 mode to use ASCII characters.</li>\n\n    <li>add \"Enable Bell Urgency\" to VT Options menu, removed\n    \"Enable Margin Bell\".</li>\n\n    <li>add <code>bellIsUrgent</code> resource to control whether\n    the Urgency hint is set/reset.</li>\n\n    <li>modify to set Urgency window manager hint on bell, reset it\n    on Focus-In event (patch by Emanuele Giaquinta).</li>\n\n    <li>add <code>--disable-setgid</code> configure option (request\n    by Miroslav Lichvar).</li>\n\n    <li>fix a possible infinite loop in last change to\n    <code>dabbrev-expand()</code> (patch by Emanuele\n    Giaquinta).</li>\n\n    <li>modify initialization to set the pty erase value if the\n    <code>erase</code> is set in the <code>ttyModes</code>\n    resource. This overrides the <code>ptyInitialErase</code>\n    setting (request by Llu&iacute;s Batlle i Rossell).</li>\n\n    <li>add <code>initialFont</code> resource to xterm widget, like\n    tek-widget (Debian #299669).</li>\n\n    <li>amend change to <code>boldMode</code> from <a href=\n    \"#xterm_223\">patch #223</a> for Debian #347790. As noted in\n    Debian #412599, that made xterm no longer match the documented\n    behavior. Add new resource <code>alwaysBoldMode</code> to allow\n    overriding the comparison between normal/bold fonts when\n    deciding whether to use overstriking to simulate bold\n    fonts.</li>\n\n    <li>restore background color in ClearCurBackground(), omitted\n    in changes for <a href=\"#xterm_223\">patch #223</a> (report by\n    Miroslav Lichvar).</li>\n\n    <li>correct logic for repainting double-width TrueType\n    characters (prompted by test-case for Novell #246573).</li>\n\n    <li>add a check to avoid trying to repeat a multibyte character\n    (report by Sami Farin).</li>\n\n    <li>modify parameter to <code>XftNameParse()</code> to select\n    wide face-name as needed, to make <code>-fd</code> option work\n    (patch by Mike Fabian, Novell #246573).</li>\n\n    <li>correct logic for mouse highlight tracking's abort\n    sequence, broken in a restructuring modification from <a href=\n    \"#xterm_224\">patch #224</a> (report by Thomas Wolff).</li>\n\n    <li>revert the simplification of blinking cursor, since that\n    broke the xor'ing introduced in <a href=\"#xterm_193\">patch\n    #193</a> (report by Thomas Wolff).</li>\n  </ul>\n\n  <h1><a name=\"xterm_224\" id=\"xterm_224\">Patch #224 - 2007/2/11</a></h1>\n\n  <ul>\n    <li>simplify code for set/reset mode for blinking cursor (patch\n    by Emanuele Giaquinta).</li>\n\n    <li>modify <code>dabbrev-expand()</code> to restart after the\n    last match (patch by Emanuele Giaquinta).</li>\n\n    <li>add control sequences for enabling/disabling focus in/out\n    event reporting (request by Bram Moolenaar).</li>\n\n    <li>improve startup performance of menus by adding resource\n    setting <code>menuLocale</code> which can be set to override\n    X's lengthy initialization of fontsets - which are seldom used\n    for the <code>Xaw</code> popup menus (adapted from patch by\n    Dave Coffin).</li>\n\n    <li>modify <code>do_precomposition()</code> function and\n    <code>make-precompose.sh</code> to handle 21-bit codes vs the\n    16-bit codes those were written for, and fix a few mis-sorted\n    codes (patch by Thomas Wolff).</li>\n\n    <li>handle special case in <code>-cjk_width</code> which\n    unexpectedly caused a character's width to change when a\n    combining character (patch by Thomas Wolff)</li>\n\n    <li>fix build for GNU/KFreeBSD (Debian #40111).</li>\n\n    <li>consolidate GC creation/updating into a single module to\n    reduce GC manipulation (prompted by Debian #389476, though a\n    complete fix would involve optimizing the scrolling\n    behavior).</li>\n\n    <li>fix ifdef of xtermCellWidth(), which broke for a case\n    without TrueType and without wide-character support (report by\n    Martin Pirker).</li>\n\n    <li>undo a comparison in\n    <code>handle_translated_exposure</code> which did not work due\n    to X server optimization. That caused the inner border to be\n    repainted with unexpected colors when handling a repaint, e.g.,\n    after switching to/from another workspace (Debian #401726,\n    Redhat Bugzilla #223027).</li>\n\n    <li>allow <code>-cr</code> option to override cursor color when\n    <code>-ah</code> option is used (Debian #406502).</li>\n\n    <li>add a note in xterm's manpage explaining that the\n    <code>-bw</code> (or <code>-w</code>) option is only used by\n    the window manager, if at all (Debian #405043).</li>\n\n    <li>make <code>Selection</code> of <code>VT&nbsp;Fonts</code>\n    work with <code>selectToClipboard</code> resource.</li>\n\n    <li>correct length calculation for <code>Selection</code> entry\n    of <code>VT&nbsp;Fonts</code> menu, broken since it ignored the\n    actual selection length since X11R4.</li>\n\n    <li>fixes for fontsize changes with <code>-fa</code> option\n    (Redhat Bugzilla #222340).</li>\n  </ul>\n\n  <h1><a name=\"xterm_223\" id=\"xterm_223\">Patch #223 -\n  2006/11/30</a></h1>\n\n  <ul>\n    <li>add <code>--enable-rectangles</code> configure option\n    (request by Martin Pirker).</li>\n\n    <li>correct default value for <code>--with-symlink</code>\n    configure option.</li>\n\n    <li>fixes configure script macros that use\n    <code>$X_EXTRA_LIBS</code>.</li>\n\n    <li>modify configure script to provide support for pre-package\n    config versions of Xft aka \"FreeType\".</li>\n\n    <li>add the Xaw scrollbar translations resource to the xterm\n    manpage, add an example showing how to change the mouse button\n    assignments (Debian #382225).</li>\n\n    <li>amend a change from <a href=\"#xterm_216\">patch #216</a>,\n    which omitted modifiers for control, meta, etc., if they were\n    mixed with any other modifiers. The intent of the change was to\n    avoid confusion with <code>XK_Mode_switch</code> and\n    <code>XK_ISO_Level3_Shift</code>; the check is now done\n    explicitly (report by Daniel Jacobowitz).</li>\n\n    <li>interpret a negative value for\n    <code>modifyCursorKeys</code> or\n    <code>modifyFunctionKeys</code> resources to disable the\n    respective features (prompted by Novell #220728).</li>\n\n    <li>amend cell-width computation for FreeType from <a href=\n    \"#xterm_217\">patch #217</a>, which did not work for VT100\n    line-drawing characters (Debian #399638, Gentoo #147111).</li>\n\n    <li>amend a change from <a href=\"#xterm_216\">patch #216</a>,\n    which made alt-modifier on a cursor-key send a modifier\n    parameter (Novell #220728).</li>\n\n    <li>correct an off-by-one that made DECCRA not work\n    (report/patch by Martin Pirker).</li>\n\n    <li>revert an optimization in SGR_Foreground() and\n    SGR_Background from <a href=\"#xterm_209\">patch #209</a> (Debian\n    #347722, analysis by Pierre Lombard).</li>\n\n    <li>fix for <code>boldMode</code> (Debian #347790, patch by Tim\n    Pope).</li>\n\n    <li>amend fix for <code>-iconic</code> in <a href=\n    \"#xterm_208\">patch #208</a>, which broke the positioning part\n    of <code>-geom</code> with toolbar configuration.</li>\n\n    <li>fix to prevent indexing error in regular expressions (patch\n    by Dennis Schneider).</li>\n\n    <li>fixes to make the <code>internalBorder</code> area not\n    change color due to reverseVideo and/or related exposure\n    events. The latter was a very old bug exposed in <a href=\n    \"#xterm_196\">patch #196</a> (report by Neil Hoggarth, also\n    Debian #397624).</li>\n  </ul>\n\n  <h1><a name=\"xterm_222\" id=\"xterm_222\">Patch #222 -\n  2006/10/17</a></h1>\n\n  <ul>\n    <li>minor optimization for recoloring cursor via dynamic\n    colors.</li>\n\n    <li>fix a bug caused by restructuring of tek4014 widget (report\n    by Paul Schenkeveld)</li>\n  </ul>\n\n  <h1><a name=\"xterm_221\" id=\"xterm_221\">Patch #221 - 2006/10/1</a></h1>\n\n  <ul>\n    <li>fix for regular expressions: the code which converted the\n    column offset within a line did not check properly for the end\n    of a line, and if allowed to match the whole line, would select\n    the beginning of the following line. If the following line were\n    empty, in turn it would select from the next, etc. (report by\n    Sean Reifschneider).</li>\n\n    <li>minor optimization of color allocation to avoid repainting\n    the screen if the corresponding color had not been\n    allocated.</li>\n\n    <li>fixes for vttests/256colors.pl (report by Egmont\n    Koblinger).</li>\n\n    <li>add terminfo building block entries for modifiers of the\n    6-key editing keypad.</li>\n\n    <li>fix for initialization of tek4014 which broke on QNX\n    6.1</li>\n  </ul>\n\n  <h1><a name=\"xterm_220\" id=\"xterm_220\">Patch #220 - 2006/9/10</a></h1>\n\n  <ul>\n    <li>make \"xterm -t -iconic\" work as expected, i.e., start in\n    tek4014 mode, but iconified.</li>\n  </ul>\n\n  <h1><a name=\"xterm_219\" id=\"xterm_219\">Patch #219 - 2006/9/4</a></h1>\n\n  <ul>\n    <li>some internal restructuring to separate data for vt100 and\n    tek4014 widgets.</li>\n\n    <li>fix a few cases where form-events would be seen by the\n    vt100 widget when built with the toolbar configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_218\" id=\"xterm_218\">Patch #218 - 2006/8/27</a></h1>\n\n  <ul>\n    <li>change behavior when encountering an illegal character in a\n    title string. Rather than reject the string, translate illegal\n    characters into \"?\" and use the string (requested by Thomas\n    Wolff).</li>\n\n    <li>improve checks for nonprinting characters in title strings\n    (report by Samuel Thibault).</li>\n\n    <li>correct typo in menu labels, changing\n    <code>print-redirect</code> to <code>print-redir</code>, making\n    it follow the manpage and match the usage for the actions table\n    (report by Samuel Thibault).</li>\n\n    <li>correct a typo that prevents building with some older\n    systems such as Solaris 2.6 (report by Julian Bridle).</li>\n  </ul>\n\n  <h1><a name=\"xterm_217\" id=\"xterm_217\">Patch #217 - 2006/8/20</a></h1>\n\n  <ul>\n    <li>minor improvements to FreeType font layout and\n    drawing.</li>\n\n    <li>add a check in the ptyInitialErase logic to ensure that the\n    termcap was read (Redhat Bugzilla #201246).</li>\n\n    <li>limit changes for reverse-video from <a href=\n    \"#xterm_216\">patch #216</a> to cases where the reverse-video\n    command-line option is used (report by Zdenek Sekera).</li>\n\n    <li>correct bitmap-derived pointsizes for TrueType fonts; they\n    should be proportional to the square root of the area of the\n    bitmap fonts.</li>\n\n    <li>add resources to specify pointsize of TrueType fonts\n    (request by Reuben Thomas).</li>\n\n    <li>improve install of terminfo by filtering out harmless\n    messages related to extended capabilities. At the same time,\n    use ncurses tic to compile the extended capabilities if\n    possible (report by Zdenek Sekera).</li>\n\n    <li>update \"xterm+pcfkeys\" terminfo entry to correspond to\n    <a href=\"#xterm_216\">patch #216</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_216\" id=\"xterm_216\">Patch #216 - 2006/8/3</a></h1>\n\n  <ul>\n    <li>improve handling of <code>ConfigureNotify</code> events by\n    checking if there are further events in the queue which\n    obsolete the current one (adapted from rxvt 2.7.5). Only the\n    normal normal (non-toolbar) configuration is addressed in this\n    patch.</li>\n\n    <li>several changes to terminfo:\n      <ul>\n        <li>incorporate some minor changes from ncurses to help\n        keep these synchronized:\n          <dl>\n            <dt>2005-02-26</dt>\n\n            <dd>modify sgr/sgr0 in xterm-new to improve tgetent's\n            derived \"me\".</dd>\n\n            <dt>2006-02-18</dt>\n\n            <dd>remove ncv flag from xterm-16color</dd>\n\n            <dt>2006-06-24</dt>\n\n            <dd>improve xterm-256color by combining the 16-color\n            setaf/setab strings with SGR 48, and cancelling the\n            setf/setb strings.</dd>\n          </dl>\n        </li>\n\n        <li>use extended function-key definitions for xterm-sun,\n        xterm-sco entries.</li>\n\n        <li>add terminfo building-blocks corresponding to the\n        <code>modifyFunctionKeys</code> and\n        <code>modifyCursorKeys</code> resources.</li>\n      </ul>\n    </li>\n\n    <li>ifdef'd Sun function-key feature to make it optional, like\n    HP and SCO.</li>\n\n    <li>extend table for termcap-query feature through F63, and\n    updated tcapquery.pl to match.</li>\n\n    <li>modify logic for function-key input processing to allow\n    function key numbers which are constructed by control- and\n    shift-modifiers to extend beyond X's hardcoded limit of\n    35.</li>\n\n    <li>add control sequence to set or reset the\n    <code>eightBitInput</code> resource.</li>\n\n    <li>change default resource <code>modifyFunctionKeys</code> to\n    2 to avoid sending SS3 with parameters (report by Kalle Olavi\n    Niemitalo).</li>\n\n    <li>add control sequences for setting and resetting the values\n    of the <code>modifyCursorKeys</code>,\n    <code>modifyFunctionKeys</code> and\n    <code>modifyOtherKeys</code> resources.</li>\n\n    <li>add <code>modifyFunctionKeys</code> resource like\n    <code>modifyCursorKeys</code>. Setting this to zero allows one\n    to use the control- and shift-modifiers to construct function\n    key strings, for terminals using many function keys, e.g., for\n    <code>xterm-sun</code> or <code>xterm-sco</code>.</li>\n\n    <li>modify screen responses and function-key logic to reduce\n    the number of writes made, to make it less likely that an\n    application would read only part of a function-key in a read\n    operation (suggested by John E Urbanczyk).</li>\n\n    <li>add <code>combiningChars</code> resource, which allows the\n    user to specify the maximum number of combining characters that\n    xterm will store for each cell in wide-character mode (prompted\n    by request by Markus Kuhn to increase the limit from 2).</li>\n\n    <li>improve logic in <code>metaSendsEscape</code> in case the\n    Alt- and Meta-keys are mapped to different modifiers. That\n    allows one to use the Alt-key for shifting in the\n    <code>eightBitInput</code> and use a Meta-key modifier to\n    prefix the result with an <code>&lt;ESC&gt;</code>.</li>\n\n    <li>improve <code>modifyCursorKeys</code> logic to prevent it\n    from modifying codes where <code>eightBitInput</code> or\n    <code>metaSendsEscape</code> are set (request by Dan\n    Nicolaescu).</li>\n\n    <li>improve <code>modifyCursorKeys</code> logic to prevent it\n    from changing the user input when other modifiers such as AltGr\n    are used (report by Thomas Wolff).</li>\n\n    <li>extend <code>modifyCursorKeys</code> to include the numeric\n    keypad when in application mode.</li>\n\n    <li>improve <code>-reverse</code> (<code>-rv</code>) option\n    (patch by Jason Vas Dias, Redhat #189161).</li>\n\n    <li>workaround for color resources on Fedora-5 which made the\n    toolbar colors inconsistent.</li>\n\n    <li>corrected calls used for <code>--disable-setuid</code>\n    option, add debugging traces to help diagnose this area.</li>\n\n    <li>modify configure script to ensure that\n    <code>USE_UTMP_SETGID</code> is defined only if the check for\n    POSIX saved-ids succeeds, or corresponds to one of the BSD\n    systems known to have a workable <code>setegid</code>\n    function.</li>\n\n    <li>extend configure check for POSIX saved-ids to include BSD\n    systems</li>\n\n    <li>modify CF_SYSV configure macro to work with gcc on HPUX\n    10.20, whose broken <code>&lt;term.h&gt;</code> relies on\n    including <code>&lt;termios.h&gt;</code>.</li>\n\n    <li>change order of setuid/setgid ifdef checks in Imakefile to\n    make it simpler to produce a setgid install, allowing the\n    latter to override the former (prompted by an XFree86\n    commit).</li>\n\n    <li>adapt a fix for setgid support from subsequent XFree86\n    changes (patch by Emanuele Giaquinta).</li>\n\n    <li>further improve setgid support (patches by Emanuele\n    Giaquinta).</li>\n  </ul>\n\n  <h1><a name=\"xterm_215\" id=\"xterm_215\">Patch #215 - 2006/6/19 -\n  XFree86 4.6.99.2</a></h1>\n\n  <ul>\n    <li>improve setgid support by exploiting the saved-ids feature\n    on which it relies (patch by Emanuele Giaquinta).</li>\n\n    <li>make the <code>modifyOtherKeys</code> resource disabled by\n    default since the intermediate setting altered some common\n    bindings (report by Emanuele Giaquinta).</li>\n  </ul>\n\n  <h1><a name=\"xterm_214\" id=\"xterm_214\">Patch #214 - 2006/6/18 -\n  XFree86 4.6.99.2</a></h1>\n\n  <ul>\n    <li>modify makefile rule for ctlseqs.txt to strip\n    backspace/overstrikes, and add a copy of ctlseqs.txt to the\n    source tarballs (requests by Bram Moolenaar, Emanuele\n    Giaquinta).</li>\n\n    <li>add <code>modifyOtherKeys</code> resource, analogous to the\n    <code>modifyCursorKeys</code> resource. This applies to keys\n    that normally would transmit nothing when a given modifier is\n    applied (request by Dan Nicolaescu).</li>\n\n    <li>add <code>default</code> to the acceptable values for the\n    <code>keyboardType</code> resource, allowing the\n    <code>-kt</code> command-line option to override app-defaults\n    resource settings of <code>sunKeyboard</code>, etc.</li>\n\n    <li>correct ifdef's for <code>XkbBell()</code> which used the\n    header file but not the corresponding function in <a href=\n    \"#xterm_175\">patch #175</a> (report by Zach Beane).</li>\n\n    <li>add xterm manpage to the <code>--with-symlink</code>\n    logic.</li>\n\n    <li>regenerated configure script to omit some debugging\n    artifacts of the SIGWINCH test.</li>\n\n    <li>fix <code>install-man</code> rule in\n    <code>Makefile.in</code> to avoid including the\n    <code>$(DESTDIR)</code> value in substitutions made on the\n    manpages (patch by Emanuele Giaquinta).</li>\n\n    <li>improved fix for cursor deallocation (Redhat #186935, patch\n    by Jason Vas Dias).</li>\n\n    <li>improve checks for setuid/setgid operation to accommodate\n    limited resource management in some kernels (Gentoo\n    #193238).</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_213\" id=\"xterm_213\">Patch #213 - 2006/4/30 -\n  XFree86 4.5.99.905</a></h1>\n\n  <ul>\n    <li>minor optimization to cell layout; will use that to\n    simplify some logic and allow for more than two combining\n    characters in another patch.</li>\n\n    <li>add <code>utf8Latin1</code> resource to make optional the\n    feature from <a href=\"#xterm_209\">patch #209</a> which allowed\n    ISO-8859-1 fonts to be used in cases where a wide font was\n    given. This would only work for the special case where the user\n    normally used Latin-1 and wanted some wide characters (report\n    by Rostislav Krasny).</li>\n\n    <li>add <code>utf8Title</code> resource to manpage (Novell\n    #52655).</li>\n\n    <li>fix typo in table entry for <code>utf8Title</code> resource\n    which made it treated as an integer rather than boolean (patch\n    by Mike Fabian, Novell #52655).</li>\n  </ul>\n\n  <h1><a name=\"xterm_212\" id=\"xterm_212\">Patch #212 - 2006/4/9 -\n  XFree86 4.5.99.904</a></h1>\n\n  <ul>\n    <li>improve description of <code>forceBoxChars</code> in\n    manpage (discussion with Joe Wells).</li>\n\n    <li>set checkmark for \"Select To Clipboard\" menu entry on\n    startup, from resource setting.</li>\n\n    <li>update manpage to note that\n    <code>*customization:color</code> is not needed, though it is\n    useful (Redhat #188034).</li>\n\n    <li>add underscore to sample pattern for URL in\n    <code>XTerm.ad</code> (Redhat #188037).</li>\n\n    <li>modify install rule for manpage to use the configured\n    app-defaults directory (Redhat #188031).</li>\n\n    <li>add checks in <code>releaseCursorGCs()</code> to ensure\n    GC's are distinct, needed since memory leak changes for\n    <a href=\"#xterm_208\">patch #208</a> (Redhat #186935, patch by\n    Jason Vas Dias).</li>\n\n    <li>modify <code>Imakefile</code> definitions to allow\n    <code>imake</code> to set <code>InstallXtermSetGID</code>. Add\n    symbol <code>InstGidFlags</code>.</li>\n\n    <li>add configure script check to ensure that SIGWINCH if\n    defined even when headers undefine this as a side-effect of\n    <code>_POSIX_C_SOURCE</code>, etc.</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>ifdef-out chmod of terminal device for OS/2 (XFree86\n        #1663, Frank Giessler).</li>\n\n        <li>move new <code>Imakefile</code> chunk which defines\n        <code>$(CSGIDFLAGS)</code> before DEFINES, e.g., for IRIX64\n        (Marc La France).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_211\" id=\"xterm_211\">Patch #211 - 2006/3/19 -\n  XFree86 4.5.99.902</a></h1>\n\n  <ul>\n    <li>modify prefix/suffix transformation in makefile to make\n    <code>uxterm</code> install properly on Cygwin.</li>\n\n    <li>restore the sizeof-comparison for <code>struct\n    lastlog</code> added in <a href=\"#xterm_208\">patch #208</a>,\n    rendered (mostly) obsolete in <a href=\"#xterm_210\">patch\n    #210</a>, since an imake configuration can still turn that code\n    on (prompted by comment by David Dawes).</li>\n\n    <li>remove feature for <code>FreeBSDArchitecture</code> from\n    <code>Imakefile</code> which would install xterm using the\n    <code>utmp</code> group since a standard FreeBSD system has no\n    such group, though it would support this configuration. FreeBSD\n    packager uses the <code>configure</code> script, which can make\n    the appropriate check (prompted by comment by David\n    Dawes).</li>\n\n    <li>fixes for gcc redefinition warnings when built using imake\n    (reports by David Dawes, Marc La France).</li>\n  </ul>\n\n  <h1><a name=\"xterm_210\" id=\"xterm_210\">Patch #210 - 2006/3/12 -\n  XFree86 4.5.99.902</a></h1>\n\n  <ul>\n    <li>add configure check for workaround in <a href=\n    \"#xterm_208\">patch #208</a> for Solaris' inconsistent support\n    for struct lastlog to quiet compiler warnings (prompted by\n    David Dawes commit message for XFree86).</li>\n\n    <li>fixes for BASE64 selection manipulation, e.g., ensure that\n    the string terminator is written after cut-buffer data (report\n    by Joe Allen).</li>\n\n    <li>add vttests/paste64.pl script to test experimental option\n    for setting/getting selection data.</li>\n\n    <li>add some error-checking in fontutils.c (prompted by David\n    Dawes commit message for XFree86).</li>\n\n    <li>change xterm manpage to show the actual color resource\n    names <code>XtDefaultForeground</code> and\n    <code>XtDefaultBackground</code> rather than black and white\n    (prompted by discussion with Emanuele Giaquinta).</li>\n\n    <li>add <code>utf8Title</code> resource and menu entry,\n    allowing the user to control whether title strings are\n    interpreted as ISO-8859-1 or UTF-8 encoding (Novell #52655,\n    Novell #113206).</li>\n\n    <li>change order of ifdef's for utempter versus platforms in\n    <code>Imakefile</code> to ensure a proper value for\n    <code>InstallXtermSetGID</code> (prompted by Marc La France\n    commit message for XFree86).</li>\n\n    <li>update the cursor GCs when menu entry for reverse video is\n    toggled. (Redhat #183993).</li>\n\n    <li>a memory-leak fix for <code>set_cursor_gcs()</code> in\n    <a href=\"#xterm_208\">patch #208</a> broke the <code>-cm</code>\n    option (Redhat #182382).</li>\n  </ul>\n\n  <h1><a name=\"xterm_209\" id=\"xterm_209\">Patch #209 - 2006/2/12 -\n  XFree86 4.5.99.22</a></h1>\n\n  <ul>\n    <li>remove <code>setf</code> and <code>setb</code> from\n    <code>xterm-256color</code> terminfo entry to avoid issues with\n    applications that ignore the ANSI strings (report by Emanuele\n    Giaquinta).</li>\n\n    <li>remove obsolete references to \"Xorg\" to avoid confusion\n    with \"X.org\" (prompted by David Dawes commit message for\n    XFree86).</li>\n\n    <li>improve initial layout performance for the toolbar\n    configuration by precalculating the height of the toolbar.</li>\n\n    <li>remove menu entry for \"Enable Curses Emulation\" (to make\n    room for \"Select To Clipboard\").</li>\n\n    <li>add resource <code>selectToClipboard</code>, action\n    <code>set-select</code> and a menu entry to allow users to\n    switch between PRIMARY and CLIPBOARD for select/paste.</li>\n\n    <li>allow cursor to have the same color as foreground (text),\n    since it is rendered as reverse (Debian #350664).</li>\n\n    <li>amend change for loading <code>utf8Fonts</code> resource\n    from <a href=\"#xterm_204\">patch #204</a> to allow an ISO-8859-1\n    \"normal\" font to be combined with an ISO-10646 font if the\n    latter is given via the <code>-fw</code> option or its\n    corresponding resource value (prompted by comment in Novell\n    #49305).</li>\n\n    <li>add <code>TIOCSCTTY</code> <code>ioctl()</code> ifdef'd for\n    <code>__GNU__</code> to set the controlling terminal (Debian\n    #348457).</li>\n\n    <li>add configure option <code>--disable-leaks</code>.</li>\n\n    <li>add a check in <code>Bell</code> to ensure that the VT100\n    widget is realized, since it may be called by\n    <code>xtermLoadFont</code> given an incorrect font resource\n    (Redhat #180450).</li>\n\n    <li>improve initialization of wide-bold font by not using the\n    derived value when it happens to have few glyphs (report by\n    Mboso Sampson).</li>\n\n    <li>improve dynamic colors by not repainting the screen if only\n    the cursor color changes (request by Bram Moolenaar).</li>\n\n    <li>fix menu initialization for tek4014 window broken in\n    <a href=\"#xterm_206\">patch #206</a>.</li>\n\n    <li>typo in manpage (Debian #351425).</li>\n\n    <li>correct loop logic in <code>dotext</code> to prevent an\n    infinite loop if a wide character was just at the right margin\n    when wrapping was disabled (report by Serge van den Boom).</li>\n\n    <li>initialize the saved-cursor data so a restore-cursor\n    operation without a preceding save-cursor operation will not\n    modify the foreground color.</li>\n\n    <li>add a new selection feature: regular expressions, and new\n    resources which specify what happens on multiple mouse clicks:\n    <code>on2Clicks</code>, <code>on3Clicks</code>,\n    <code>on4Clicks</code> and <code>on5Clicks</code>.</li>\n\n    <li>revert the <code>XTerm.ad</code> change from <a href=\n    \"#xterm_208\">patch #208</a> (Debian #348384).</li>\n\n    <li>fixes for the print-window to make it handle combining\n    characters in UTF-8 mode.</li>\n\n    <li>add check to ensure that double-clicking to extend\n    selection will not extend it into the scrollback area. This\n    still allows users to scroll back and select text (Debian\n    #347415).</li>\n\n    <li>add configure option <code>--with-tty-group</code> to help\n    work around deficiencies in packager's build environment\n    (Debian #349142).</li>\n\n    <li>fix typo in configure script option\n    <code>--disable-narrowproto</code> (report by David\n    Mart&iacute;nez Moreno).</li>\n\n    <li>amend CF_X_FREETYPE changes for <code>pkg-config</code>\n    check to ensure that <code>Xft</code> is known to that tool\n    (report and patch by Emanuele Giaquinta).</li>\n\n    <li>add an ifdef to allow <code>./configure\n    --disable-active-icon</code> to work, broken by new code for\n    testing memory leaks in <a href=\"#xterm_208\">patch #208</a>\n    (report by Brian Lindholm).</li>\n  </ul>\n\n  <h1><a name=\"xterm_208\" id=\"xterm_208\">Patch #208 - 2006/1/3 -\n  XFree86 4.5.99.19</a></h1>\n\n  <ul>\n    <li>add <code>charClass</code> resource to\n    <code>XTerm.ad</code> and <code>UXTerm.ad</code> which\n    simplifies selecting URLs (prompted by Kirill Ponomarew).</li>\n\n    <li>modify install rule for <code>uxterm</code> to account for\n    the <code>--program-prefix</code>, etc., options by invoking\n    the transformed name of xterm rather than simply \"xterm\".</li>\n\n    <li>modify configure <code>--with-app-defaults</code> option to\n    allow <code>--without-app-defaults</code>.</li>\n\n    <li>add configure <code>--with-symlink</code> option to make it\n    simpler to install successive versions of <code>xterm</code>\n    renamed using the <code>--program-prefix</code>, etc., options\n    with a symbolic link pointing to the most recent.</li>\n\n    <li>make <code>-iconic</code> option work with toolbar\n    configuration (Gentoo #113604).</li>\n\n    <li>suppress <code>lastlog</code> feature for 64-bit Solaris\n    configuration since that platform provides only a 32-bit\n    interface (report by Peter Bray).</li>\n\n    <li>fix memory reallocation for the \"UTF-8\" menu entry when\n    xterm is started using the <code>+u8</code> option (reported by\n    Jan Willem Stumpel).</li>\n\n    <li>add a configure check for the actual path of\n    <code>luit</code>, to work around broken <code>imake</code>\n    configurations.</li>\n\n    <li>add a configure check for <code>pkg-config</code> (Redhat\n    Bugzilla #173541).</li>\n\n    <li>modify install-rule for <code>uxterm</code> to omit\n    executable suffix, e.g., for Cygwin.</li>\n\n    <li>modify <code>sinstall.sh</code> to work around quirks in\n    Cygwin configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_207\" id=\"xterm_207\">Patch #207 - 2005/11/13 -\n  XFree86 4.5.99.16</a></h1>\n\n  <ul>\n    <li>enable <code>lastlogx</code> support for NetBSD (was added,\n    but not enabled in <a href=\"#xterm_186\">patch #186</a>).</li>\n\n    <li>work around broken <code>lastlog.h</code> in glibc 2.3.5,\n    which includes <code>utmp.h</code>.</li>\n\n    <li>revert part of recent XFree86 Imakefile change, restoring\n    the <code>-I.</code> needed for <code>xmkmf</code> builds of\n    xterm (XFree86 Bugzilla #1633, reports by Alexander Pohoyda,\n    Matthieu Herrb).</li>\n\n    <li>change compiled-in default for <code>printerCommand</code>\n    resource to an empty string. People who want to use the printer\n    should be able to read the manual (Debian #311490).</li>\n\n    <li>modify <code>Imakefile</code> to work around old problems\n    in <code>imake</code> configuration to allow test-builds using\n    <code>xmkmf</code> on Linux. (This was not noticed since\n    several releases had broken definitions relating to Xft which\n    were harder to work around).</li>\n\n    <li>link <code>resize</code> for SCO platforms (Kean\n    Johnston).</li>\n  </ul>\n\n  <h1><a name=\"xterm_206\" id=\"xterm_206\">Patch #206 - 2005/11/3 -\n  XFree86 4.5.99.15</a></h1>\n\n  <ul>\n    <li>add configure <code>--with-app-defaults</code> option to\n    allow app-defaults directory for install-rules to be\n    customized.</li>\n\n    <li>remove default translations for\n    <code>dabbrev-expand()</code> due to conflicts with existing\n    keyboard arrangements.</li>\n\n    <li>remove redundant check for <code>_NET_WM_PID</code> (report\n    by Emanuele Giaquinta).</li>\n\n    <li>set icon border width explicitly to work around fvwm\n    problem with active icon resizing (report by Steve Morris,\n    analysis by Dominik Vogt).</li>\n\n    <li>modify resource files to make the font-resources a little\n    more specific, e.g., changing \"*VT100*\" to \"*VT100.\", to make\n    the distinction between VT100.font and VT100.utf8Fonts.font\n    sharper, in case a packager modifies one of those.</li>\n\n    <li>expanded comments in <code>UXTerm.ad</code> regarding the\n    font resources (Debian #319179).</li>\n\n    <li>add <code>--enable-narrowproto</code> configure option to\n    accommodate X.org \"modular\" build (report by Stephan Hermann,\n    Gentoo #17220).</li>\n\n    <li>fix typo in xterm.man description of <code>+wf</code>\n    (patch by Tobias Stoeckmann).</li>\n\n    <li>add <code>scrollBarBorder</code> resource (request by Floyd\n    L Davidson).</li>\n\n    <li>modify <code>xterm-new</code> terminfo entry to use\n    capabilities for shifted scroll forward/reverse as shifted\n    cursor up/down.</li>\n\n    <li>correct updating of checkmark for toolbar entry in popup\n    menu (report by Emanuele Giaquinta).</li>\n\n    <li>fix ifdef's to allow compiling with toolbar and without\n    tek4014 (patch by Emanuele Giaquinta).</li>\n\n    <li>use <code>openpty()</code> for Darwin port (patch by\n    Emanuele Giaquinta).</li>\n\n    <li>fix Gentoo #90697 a different way, postponing the logic in\n    <code>SetupToolbar</code> until the toolbar is actually needed,\n    i.e., the <code>+tb</code> option is handled as expected.</li>\n\n    <li>revert fix made in <a href=\"#xterm_203\">patch #203</a> for\n    Gentoo #90697. That introduced a problem with the control mouse\n    click-popups, while most of the performance problems can be\n    resolved by restricting the menu fonts (report by Emanuele\n    Giaquinta).</li>\n\n    <li>fix a file-descriptor leak when calling\n    <code>openpty()</code> (OpenBSD system/4561).</li>\n\n    <li>make a special case of resizing work like vt100: a hard\n    reset also resets the 132/80 mode. The code to support this was\n    present since X11R5, but not used because the corresponding\n    initial state of the <code>-132</code> option was not\n    saved.</li>\n\n    <li>restore window manager hints after\n    <code>XtMakeResizeRequest()</code> calls. One instance from\n    <a href=\"#xterm_205\">patch #205</a> resulted in the window\n    manager displaying pixels rather than than characters after\n    selecting a different font size (FreeBSD ports/87424).</li>\n\n    <li>remove special case for Darwin in CF_XOPEN_SOURCE (Emanuele\n    Giaquinta).</li>\n\n    <li>modify parsing of control sequence <code>CSI&nbsp;T</code>\n    to allow scroll-down to be sent while mouse tracking is enabled\n    (request by D Hugh Redelmeier).</li>\n\n    <li>correct termcap \"me\" (mode-end) string so it does not\n    modify the alternate character set (report by Andrey\n    Chernov).</li>\n\n    <li>correct size-comparison in HandleInterpret() broken in\n    changes from <a href=\"#xterm_201\">patch #201</a> to allocate\n    input buffer (Debian #334317).</li>\n\n    <li>amend adjustments for scrollbar layout from <a href=\n    \"#xterm_204\">patch #204</a> to make this apply only to the\n    toolbar configuration. In the non-toolbar configuration, the\n    resulting scrollbar was shifted by its borderwidth (report by\n    Matthieu Herrb).</li>\n\n    <li>add select-cursor-extend() action.</li>\n\n    <li>fix some broken href's in xterm.log.html, and typo in the\n    INSTALL file (report/patch by David Mart&iacute;nez\n    Moreno).</li>\n\n    <li>modify <code>Imakefile</code> to use setgid mode for\n    installing with Linux, OpenBSD and FreeBSD.</li>\n\n    <li>add configure --with-setuid and --with-reference options to\n    allow packagers more flexibility in customizing install\n    permissions.</li>\n\n    <li>generalize and make optional (configure --with-utmp-setgid)\n    the change made for XFree86 Bugzilla #878 in <a href=\n    \"#xterm_205\">patch #205</a> (FreeBSD bug report\n    #ports/86663).</li>\n  </ul>\n\n  <h1><a name=\"xterm_205\" id=\"xterm_205\">Patch #205 - 2005/9/18 -\n  XFree86 4.5.99.12</a></h1>\n\n  <ul>\n    <li>correct a typo in CF_FUNC_TGETENT introduced in <a href=\n    \"#xterm_198\">patch #198</a> fix for Gentoo #69926.</li>\n\n    <li>implement logic in termcap query to process multiple\n    parameters as documented in ctlseqs.ms</li>\n\n    <li>fix buffer size used for termcap query, which was not long\n    enough for the terminfo \"colors\" name (patch by Bradd W.\n    Szonye).</li>\n\n    <li>add configure option --enable-readline-mouse, which turns\n    on the experimental OPT_READLINE code (patch by Ilya\n    Zakharevich).</li>\n\n    <li>for FreeBSD, drop setuid privileges after startup (XFree86\n    Bugzilla #878, report/patch by Alexander Pohoyda)</li>\n\n    <li>add menu entry (alt-esc) and corresponding action\n    (alt-sends-esc) to toggle the <code>eightBitInput</code>\n    resource setting.</li>\n\n    <li>generate configure script with autoconf 2.52 (patched) to\n    use the feature therein which forces the script's locale to\n    POSIX (Gentoo Bugzilla #105369).</li>\n\n    <li>modify computation of rows/columns on resize to avoid\n    extending beyond the given limits, e.g., if resizing in\n    response to a \"maximize\" in Gnome or KDE which do not use the\n    window manager hints for this case (Debian #289123, Novell\n    #61153).</li>\n\n    <li>modifications to work with z/OS 1.4 (Paul Giordano).</li>\n\n    <li>improve error-reporting when chown/chmod of the\n    pseudo-terminal fails, e.g., if a copy of xterm which was\n    designed to work with old-style pseudo-terminals is not\n    installed setuid or setgid (report by Jeremy C. Reed).</li>\n\n    <li>patches from Emanuele Giaquinta:\n      <ul>\n        <li>ctlseqs.ms says that primary and secondary DA accept a\n        nonzero parameter, which is incorrect. Also modify code to\n        agree with this.</li>\n\n        <li>correct a comment in 88colres.pl</li>\n\n        <li>ctlseqs.ms says that the DEC Set/Reset control\n        sequences for the backarrow key make it send DEL/BS,\n        respectively, while it's the opposite.</li>\n\n        <li>update the menu entries for the metaSendsEscape,\n        deleteIsDEL and numLock resources when changing them with\n        the corresponding DEC Set/Reset control sequences.</li>\n      </ul>\n    </li>\n\n    <li>fixes for configure script:\n      <ul>\n        <li>add special case for QNX, defining _QNX_SOURCE.</li>\n\n        <li>check for preprocessors which do not perform -U and -D\n        options in the given order.</li>\n\n        <li>improve macro to determine gcc version</li>\n\n        <li>improve check for Intel compiler and related warning\n        options</li>\n      </ul>\n    </li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>improve fix from <a href=\"#xterm_198\">patch #198</a> for\n    <code>Cleanup()</code> by ensuring it is not called from the\n    SIGCHLD handler (patch by Todd Miller (OpenBSD CVS)).</li>\n\n    <li>eliminate a retry for a better-matching bold font, to work\n    around recent font server changes.</li>\n\n    <li>fixes for Novell #113277:\n      <ul>\n        <li>specify weight for wide font which may be derived from\n        normal fontname.</li>\n\n        <li>cache the derived wide- and widebolt-fontnames.</li>\n      </ul>\n    </li>\n\n    <li>workaround for Gentoo Bugzilla #100728.</li>\n\n    <li>add menubar's border width to layout computation. Normally\n    this is zero, but patterns such as\n    <code>XTerm*borderWidth:1</code> would give poor layout for the\n    toolbar configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_204\" id=\"xterm_204\">Patch #204 - 2005/8/4 -\n  XFree86 4.5.99.9</a></h1>\n\n  <ul>\n    <li>work around quirk in shell which allowed user to \"run\"\n    uxterm script when there was no UTF-8 locale installed by\n    entering \"sh -x uxterm\". Also popup an xmessage to show the\n    problem for users who run this via a GUI (Debian #318513).</li>\n\n    <li>disallow changes to fonts, toolbar and scrollbar when the\n    vt100 window is iconified, to simplify management of the active\n    icon.</li>\n\n    <li>fixes to make <code>-geom</code> option work properly with\n    the toolbar configuration (Gentoo #90717, Gentoo #91967).</li>\n\n    <li>minor improvements to scrollbar layout: ensure that the\n    scrollbar border is zero if the vt100 border is zero.</li>\n\n    <li>improve initialization due to <code>utf8</code> resource by\n    loading the <code>utf8Fonts</code> resource in the case where\n    <code>locale</code> resource is false. Also in this case, do\n    not disable switching UTF-8 mode on/off.</li>\n\n    <li>minor optimization of TrueType font-loading, loads italic\n    font only when needed.</li>\n\n    <li>correct variable used to store temporary result from lookup\n    of bold font, when initializing the wide-bold-font data and no\n    immediate match is found by asking for a bold variant of the\n    wide-font. The result was to use overstriking rather than the\n    actual bold font (Debian #318162, patch by Eugene Konev).</li>\n\n    <li>add checks to ensure vt100 widget is realized when it might\n    be updated via actions handled from a tek4014-only\n    configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_203\" id=\"xterm_203\">Patch #203 - 2005/7/6 -\n  XFree86 4.5.99.7</a></h1>\n\n  <ul>\n    <li>modify initialization of <code>allowSendEvents</code> and\n    <code>allowWindowOps</code> to prevent modification with the\n    editres protocol.</li>\n\n    <li>fix compiler warning for NetBSD by including util.h in\n    main.c (XFree86 Bugzilla #1596).</li>\n\n    <li>fix to build on Darwin 8.x, which no longer provides\n    <code>setpgrp()</code> (patch by Min Sik Kim).</li>\n\n    <li>adapted fixes for Legend (SCO) from diffs attached to\n    Freedesktop.Org Bugzilla #3180.</li>\n\n    <li>fix typo in xterm manpage description of <code>-ls</code>\n    option (Freedesktop.Org Bugzilla #3543).</li>\n\n    <li>add support for interpreting the underline attribute as an\n    italic font in Xft mode (patch by Chuck Blake).</li>\n\n    <li>improve initialization of toolbar so that individual\n    pulldown menus are initialized on demand, as they are in the\n    scenario where they are invoked as popup menus (Gentoo Bugzilla\n    #90697).</li>\n\n    <li>fix logic in <code>find_utmp</code>, which did not reset\n    result in <code>getutid()</code>, causing an infinite loop in\n    some conditions (report by Emil Mikulic).</li>\n\n    <li>set the <code>_NET_WM_PID</code> property (Gentoo Bugzilla\n    #91008).</li>\n\n    <li>modify ifdef's in ptyx.h and xterm_io.h to build with\n    DragonFly (patch by Jeroen Ruigrok).</li>\n\n    <li>change default values for <code>minBufSize</code> and\n    <code>maxBufSize</code> to 4096 and 32768 respectively so that\n    the initial read request will match the value from before\n    changes to use <code>sched_yield()</code>.</li>\n\n    <li>make paste of UTF-8 faster for Western character sets by\n    checking range of incoming data (patch by Joe Allen).</li>\n\n    <li>add experimental option to allow applications to get or set\n    the selection data as a BASE64 string (adapted from patch by\n    Joe Allen).</li>\n\n    <li>fix an off-by-one error parsing <code>-S/nn</code> option\n    (Debian #311438, report/fix by Peter Chubb).</li>\n\n    <li>fix an initialization bug from <a href=\"#xterm_201\">patch\n    #201</a> that broke logging (report by Rodney Thayer).</li>\n\n    <li>amend change to command-line processing in <a href=\n    \"#xterm_201\">patch #201</a> to avoid conflict with\n    <code>-e</code> option (report by Servatius Brandt).</li>\n\n    <li>suppress configure check for <code>_XOPEN_SOURCE</code> on\n    darwin.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_202\" id=\"xterm_202\">Patch #202 - 2005/5/2 -\n  XFree86 4.5.99.3</a></h1>\n\n  <ul>\n    <li>add extended shift- and control-modifier cursor keys to\n    \"xterm+pcfkeys\" terminfo entry to correspond to ncurses\n    20050430 patch.</li>\n\n    <li>fix a rare case where text would be written with the wrong\n    colors because output of scrolled text would reset the colors\n    and the new text would be written with the same colors\n    (report/testcase by Thomas Glanzmann).</li>\n\n    <li>rename <code>$CMD</code> variable in <code>plink.sh</code>\n    because it is a reserved symbol in bash 3.00.16 (report by Ted\n    Taylor).</li>\n\n    <li>add environment variables <code>$XTERM_SHELL</code> and\n    <code>$XTERM_VERSION</code> (request by Zdenek Sekera).</li>\n\n    <li>corrected workaround for background color of menubar, which\n    gave a too-broad expression, coloring the background of the\n    VT100 widget unless overridden by another resource\n    setting.</li>\n\n    <li>correct an error in the logic which decides when\n    <code>sched_yield()</code> is run; it would occasionally hang\n    when contending with other pseudo-terminal applications such as\n    screen (report by Kirill Ponomarew).</li>\n\n    <li>modify initialization to decide whether to default to\n    built-in <code>wcwidth()</code> versus system's version based\n    on the starting locale and whether the system's version is poor\n    quality (suggested by Bram Moolenaar).</li>\n\n    <li>update table for <code>mk_width()</code> from UnicodeData\n    4.1.0 using Markus Kuhn's <code>uniset</code> script.</li>\n  </ul>\n\n  <h1><a name=\"xterm_201\" id=\"xterm_201\">Patch #201 - 2005/4/21 -\n  XFree86 4.5.99.2</a></h1>\n\n  <ul>\n    <li>improve resource files to show how the menubar and popup\n    menus can be colored (prompted by report by Joe Wells).</li>\n\n    <li>modify parsing of OSC (and SOS, etc), strings so their\n    contents are not interpreted as UTF-8. This allows non-ASCII\n    title strings to be set, provided that the window manager\n    complies (report by Thomas Wolff).</li>\n\n    <li>improved some of the built-in line-drawing glyphs.</li>\n\n    <li>correct color of \"box\" character drawn for line-drawing\n    glyph 1 (report by Nicolas George).</li>\n\n    <li>improve behavior when switching to UTF-8 mode after startup\n    so xterm will check if the current fonts are already wide\n    (ISO10646-1). If they are not, xterm will use the\n    <code>utf8Fonts</code> subresource to load appropriate fonts\n    (request by Bram Moolenaar).</li>\n\n    <li>modify logic for setting title-string so it applies to the\n    current widget rather than the vt100 widget.</li>\n\n    <li>modify initialization for wide-bold fontname, to search for\n    one if none is given (report by Michael Schroeder).</li>\n\n    <li>add resource <code>mkWidth</code> and command-line option\n    <code>-mk_width</code> to control whether xterm uses the\n    built-in version of wcwidth().</li>\n\n    <li>add resource settings for minimum/maximum input buffer\n    size, and call to <code>sched_yield</code> to improve\n    performance with newer Linux kernels (adapted from patch by\n    Nicolas George).</li>\n\n    <li>correct computation of width for wide characters with the\n    invisible attribute (report by Thomas Wolff).</li>\n\n    <li>modify interaction between <code>+u8</code> and\n    <code>locale</code> resource to allow the command-line option\n    to override the resource (requested by Thomas Wolff).</li>\n\n    <li>add a limit check for scrolling margins in a one-line\n    screen, overlooked in fixes for <a href=\"#xterm_198\">patch\n    #198</a> (Debian #297430).</li>\n\n    <li>correct treatment of <code>iconBorderWidth</code> for\n    resizing an active-icon, and its description in manpage (Debian\n    #296592).</li>\n\n    <li>modify configure script <code>--disable-imake</code> to use\n    the script's definitions anyway if it cannot detect imake\n    (prompted by FreeBSD bug 77408).</li>\n\n    <li>ignore error in the I/O initialization that tries to set\n    the tty to 7-bit input for the case where\n    <code>eightBitInput</code> resource is false (Debian\n    #298551).</li>\n\n    <li>modify command-processing to accept an optional parameter\n    that tells xterm which shell program to use (request by Zdenek\n    Sekera).</li>\n\n    <li>add simpler resource <code>keyboardType</code> which, when\n    set, overrides the individual keyboard-type resources and\n    eliminates the possibility of conflict between them.</li>\n\n    <li>add initialization for <code>scoFunctionKeys</code>\n    resource (report by Rick K).</li>\n\n    <li>correct logic of <code>ReallocateBufOffsets()</code> which\n    did not copy the content of the old screen buffer to the proper\n    location, making a repaint clear after switching to\n    wide-character mode (report by Bram Moolenaar):</li>\n\n    <li>implement the remaining pieces to make xterm allocate cells\n    for wide-characters when the \"UTF-8\" menu entry is selected.\n    Also, load the UTF-8 font when that menu entry is selected, or\n    the escape sequence for UTF-8 mode is received (report by Bram\n    Moolenaar):</li>\n\n    <li>add command-line options (<code>-tb</code>,\n    <code>+tb</code>) and resource <code>toolBar</code> to allow\n    menu/toolbar to disabled or enabled at startup (prompted by\n    reports by Joe Wells).</li>\n\n    <li>correct typo in configure script's --enable-dec-locator\n    option (report by Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_200\" id=\"xterm_200\">Patch #200 - 2005/2/6 -\n  XFree86 4.4.99.23</a></h1>\n\n  <ul>\n    <li>increase color pairs value for xterm-256color and\n    xterm-88color to match ncurses, which has an experimental\n    option to support this.</li>\n\n    <li>modify ifdef's to make AIX use termios rather than termio;\n    the struct sizes for the two were not the same.</li>\n\n    <li>improve CF_WITH_IMAKE_CFLAGS configure macro script for\n    OSMAJORVERSION and OSMINORVERSION values, e.g., for Tru64 and\n    AIX.</li>\n\n    <li>modify ifdef to define USE_POSIX_TERMIOS for Darwin (patch\n    by Min Sik Kim).</li>\n\n    <li>modify find_utmp() to initialize the whole utmpx struct\n    (except ut_id), since that is needed for OSF1 4.0D to prevent\n    an infinite loop on exit.</li>\n\n    <li>add configure check before adding -D_POSIX_SOURCE since\n    some platforms predefine it, e.g., cygwin.</li>\n\n    <li>add simplified sed expressions in CF_IMAKE_CFLAGS configure\n    script macro to ensure value for PROJECTROOT is quoted on\n    Solaris, i.e., when nested <code>\\(</code> and <code>\\)</code>\n    are not interpreted correctly.</li>\n\n    <li>correct DEC rectangle operations to reset state after\n    completing the operations.</li>\n\n    <li>modify CASE_ST handling in charproc.c to ensure that the\n    parse state is reset even if xterm is not currently processing\n    an OSC or other string (patch by Johnny Billquist forwarded by\n    Matthias Scheler, NetBSD xsrc/29003).</li>\n\n    <li>fix OS/2 build for innotek_libc (patch by David Yeo).</li>\n\n    <li>fix a regression from <a href=\"#xterm_197\">patch #197</a>\n    fix for Debian #277832 which disowned the selection if it was\n    scrolled, e.g., by the user pressing return at the bottom of\n    the screen (Debian #291787).</li>\n\n    <li>move the warning/exit for missing $DISPLAY into the error\n    handler in case <code>-display</code> is given, and the connect\n    fails for some other reason.</li>\n  </ul>\n\n  <h1><a name=\"xterm_199\" id=\"xterm_199\">Patch #199 - 2005/1/17 -\n  XFree86 4.4.99.22</a></h1>\n\n  <ul>\n    <li>instead of setting <code>$DISPLAY</code>, check for the\n    unset variable and warn/exit on this condition (comments by H\n    Merijn Brand and Bernhard R Link).</li>\n\n    <li>fix a typo in Imakefile from <a href=\"#xterm_198\">patch\n    #198</a> (reports/patches by Stefan Dirsch, Mike Castle).</li>\n  </ul>\n\n  <h1><a name=\"xterm_198\" id=\"xterm_198\">Patch #198 - 2005/1/13 -\n  XFree86 4.4.99.21</a></h1>\n\n  <ul>\n    <li>set <code>$DISPLAY</code> to \":0\" if it is not set.</li>\n\n    <li>add <code>utmpDisplayId</code> resource to allow users to\n    control whether the display identifier (display number and\n    screen number) are retained in the connection information\n    recorded in utmp (discussion with Edoardo Tirtarahardja).</li>\n\n    <li>add <code>bellOnReset</code> resource to allow users to\n    disable bell which sounds on hard reset since <a href=\n    \"#xterm_183\">patch #183</a> changes to DECSCL (discussion with\n    Danek Duvall).</li>\n\n    <li>improve <code>$WINDOWID</code> for configuration with\n    toolbar by making it refer to the top-level shell rather than\n    the parent of the current window. For that case, the parent is\n    a form widget, which does not have a name, which made the\n    <code>$WINDOWID</code> not very useful as a parameter for\n    <code>xwininfo</code> (suggested by Dave Bodenstab).</li>\n\n    <li>fix a typo in WhichVFont() macro from <a href=\n    \"#xterm_197\">patch #197</a> changes which broke the\n    --disable-active-icon configuration (report by Ralf S.\n    Engelschall).</li>\n\n    <li>improve some limit checks (Gentoo Bugzilla #75604).</li>\n\n    <li>add --disable-setuid option to configure script (Gentoo\n    Bugzilla #76543).</li>\n\n    <li>add --disable-full-tgetent option to configure script,\n    allowing one to ignore a termcap library in favor of\n    ncurses/curses (Gentoo Bugzilla #69926).</li>\n\n    <li>modify configure script to choose useful warning options\n    for Intel version 8.0 compiler.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>make active-icon work properly when TrueType fonts are used\n    (Debian #286068).</li>\n\n    <li>correct change from <a href=\"#xterm_157\">patch #157</a>\n    which uses getlogin() to check for an alias; the storage used\n    for the related getpwuid() call was overwritten by the data\n    used for comparison (patch by Per Hedeland).</li>\n\n    <li>correct case of SCS for character set 0 (line-drawing) to\n    allow it to be selected into GR.</li>\n\n    <li>fix a file-descriptor leak (Redhat Bugzilla #139597).</li>\n\n    <li>modify <code>creat_as()</code> to only fork if xterm is\n    actually running as setuid and/or setgid. This works around a\n    Cygwin bug which hangs when logging is enabled and makes xterm\n    a little faster for systems using interfaces such as utempter\n    (report by Al Goodman).</li>\n\n    <li>modify <code>Cleanup()</code> to avoid operations such as X\n    calls that might use unsafe functions when it is called by a\n    signal handler (report by Michiel Boland).</li>\n\n    <li>fix bugs in <a href=\"#xterm_191\">patch #191</a> and in SRM\n    changes from <a href=\"#xterm_197\">patch #197</a> that broke\n    DECSET 38: switch to Tek4014 emulation (report by Dave\n    Bodenstab).</li>\n\n    <li>fix for manpage escapes (Marc La France).</li>\n\n    <li>improve on IRIX-specific change for Imakefile in XFree86\n    CVS versus resize linking against termcap library to reflect\n    definitions for USE_TERMCAP in resize.c</li>\n  </ul>\n\n  <h1><a name=\"xterm_197\" id=\"xterm_197\">Patch #197 - 2004/11/30 -\n  XFree86 4.4.99.19</a></h1>\n\n  <ul>\n    <li>modify configure script to remove empty \"-DPROJECTROOT=\"\n    definition which resulted unusable values for luit's default\n    path.</li>\n\n    <li>update precompose.c based on Unicode 4.0.1</li>\n\n    <li>several minor fixes based on Intel compiler warnings.</li>\n\n    <li>change default translations so a <code>BtnDown</code> which\n    is not recognized is simply ignored rather than emitting a\n    bell. That makes it less obtrusive when the user tries to use a\n    mouse which provides more capabilities than the X mouse driver\n    supports, e.g., one with a horizontal scroll wheel (Debian\n    #265133).</li>\n\n    <li>note in xterm's manpage that <code>translations</code> is\n    not specific to xterm (Debian #278897).</li>\n\n    <li>modify uxterm script to use locale program to verify if the\n    derived locale is installed (Debian #246398).</li>\n\n    <li>correct font handling for active icon when in UTF-8 mode\n    (report by Paolo Liberatore).</li>\n\n    <li>make active-icon and toolbar configurations work\n    together.</li>\n\n    <li>modify the criteria for disowning primary selection.\n    Previously, this happened anytime the cursor was moved before\n    the end of the selection. That would ensure that any\n    insert/delete of char or line, as well as scrolling, would\n    disown the selection. The new criteria change this to checking\n    if the operations would modify the data which is highlighted\n    (Debian #277832).</li>\n\n    <li>reimplement <code>DECALN</code> with functions for vt420\n    rectangles, fixes selection for this case.</li>\n\n    <li>implement vt420 rectangle operations.</li>\n\n    <li>add parsing, for debug/test of vt220 soft-fonts.</li>\n\n    <li>add menu entry, actions and escape sequence to allow\n    enabling/disabling toolbars at runtime.</li>\n\n    <li>improve rendering for Xft, allow it to draw non-linedrawing\n    characters such as \"pi\", which were drawn from internal tables\n    with <a href=\"#xterm_180\">patch #180</a> (Freedesktop.org\n    Bugzilla #1260).</li>\n\n    <li>add configure option <code>--enable-mini-luit</code>,\n    ifdef'd the mini-luit feature with\n    <code>OPT_MINI_LUIT</code>.</li>\n\n    <li>add mini-luit feature, which supports Latin9 directly\n    rather than via luit, provided that Unicode fonts are used\n    (Freedesktop.org Bugzilla #1571, request by Stefan Dirsch,\n    patch by Michael Schroeder).</li>\n\n    <li>for Linux, if IUTF8 is defined, e.g., on recent 2.6.x\n    kernels, set the corresponding flag for the slave pty, to\n    enable UTF-8 interpretation of backspace in cooked mode\n    (Freedesktop.org Bugzilla #1578, request by Stefan\n    Dirsch).</li>\n\n    <li>modify <code>faceSize</code> resource to use a\n    floating-point internal value (adapted from patch by Sam\n    Stephenson).</li>\n\n    <li>correct handling selection of tabs over cleared space in\n    UTF-8 mode. In this special case, xterm represents the\n    whitespace with a null rather than a space character (Debian\n    #276447).</li>\n\n    <li>amend fix for infinite loop from <a href=\"#xterm_192\">patch\n    #192</a> to check if there is wrapped text to output in a\n    following iteration (Debian #273202).</li>\n\n    <li>fixes ifdef'd with <code>__INTERIX</code> to allow building\n    with Interix (Windows Services for UNIX) 3.5 using the xlibs\n    libraries from freedesktop.org (patch by Min Sik Kim).</li>\n\n    <li>amend solution for Debian #252873, Debian #260471 from\n    <a href=\"#xterm_194\">patch #194</a> by making the cursor not\n    explicitly colored if only the foreground color is set, and the\n    cursor is on a blank space (Debian #275473).</li>\n\n    <li>correct logic for send/receive mode (SRM) with regard to\n    control characters.</li>\n\n    <li>fix masking of invisible text in wide-character mode, which\n    did not work for line-drawing characters.</li>\n\n    <li>incorporate CF_XOPEN_SOURCE into configure script,\n    replacing CF_GNU_SOURCE.</li>\n  </ul>\n\n  <h1><a name=\"xterm_196\" id=\"xterm_196\">Patch #196 - 2004/8/15 -\n  XFree86 4.4.99.12</a></h1>\n\n  <ul>\n    <li>add a special case to configure script to ignore NetBSD's\n    <code>grantpt()</code> which was recently added (but not part\n    of a release), until someone is able to ensure that xterm can\n    use it (report by Min Sik Kim).</li>\n\n    <li>clear the buffer returned by getutid(). This fixes an\n    infinite loop on some platforms introduced in <a href=\n    \"#xterm_193\">patch #193</a> by Debian #256468 fix (report by\n    David Ellement).</li>\n  </ul>\n\n  <h1><a name=\"xterm_195\" id=\"xterm_195\">Patch #195 - 2004/8/8 -\n  XFree86 4.4.99.11</a></h1>\n\n  <ul>\n    <li>correct length used for blinking text, make the last column\n    blink (patch by Alexander V Lukyanov).</li>\n\n    <li>start changes to make doublesize characters work with\n    TrueType fonts (see <a href=\"#xterm_44\">patch #44</a>).</li>\n\n    <li>trim leading/trailing blanks from color resources as done\n    for other strings in <a href=\"#xterm_167\">patch #167</a>.</li>\n\n    <li>fixes for <code>showBlinkAsBold</code> resource (report by\n    Christoph Berg).</li>\n  </ul>\n\n  <h1><a name=\"xterm_194\" id=\"xterm_194\">Patch #194 - 2004/7/27 -\n  XFree86 4.4.99.11</a></h1>\n\n  <ul>\n    <li>change clearing operations so foreground color attribute is\n    not set. Usually this is benign, but in some cases when the\n    cursor color is not set explicitly, the cursor would show this\n    color (Debian #252873, Debian #260471).</li>\n\n    <li>add extra state (cursor-moved) to guard against deciding\n    that the cursor did not require repainting after an indexing\n    operation that leaves the cursor in the same location on the\n    screen.</li>\n\n    <li>fix a case where a full-screen indexing operation would not\n    restore the cursor-busy state.</li>\n\n    <li>fix a repainting bug introduced in <a href=\n    \"#xterm_180\">patch #180</a>: when using a font lacking\n    line-drawing characters, a repaint of the screen could skip\n    horizontally an extra amount after filling in the missing\n    character (reports by Nicolas George, Hans de Goede, Redhat\n    Bugzilla #128341).</li>\n\n    <li>rename terminfo fragment \"xterm-pc-fkeys\" to\n    \"xterm+pcfkeys\" for consistency with ncurses.</li>\n  </ul>\n\n  <h1><a name=\"xterm_193\" id=\"xterm_193\">Patch #193 - 2004/7/19 -\n  XFree86 4.4.99.10</a></h1>\n\n  <ul>\n    <li>fix for wide-character selection from OpenBSD CVS\n    (report/patch by Matthieu Herrb).</li>\n\n    <li>modify initialization and cleanup of utmp data to also\n    compare the <code>ut_line</code> member (Debian #256468).</li>\n\n    <li>modify check on focus-change to ignore\n    <code>FocusOut</code> events generated by\n    <code>XGrabKeyboard</code>. This fixes a case where the text\n    cursor would act as if focus were lost when selecting the\n    \"Secure Keyboard\" menu option.</li>\n\n    <li>add <code>gen-pc-fkeys.pl</code> script, use that to\n    generate terminfo fragment corresponding to the pc-style\n    function keys.</li>\n\n    <li>fix a case where the checkmark by the \"VT220 Keyboard\" menu\n    entry was not set on startup.</li>\n\n    <li>separated two methods for making the cursor blink (menu and\n    escape sequence) by using the menu as the primary method and\n    XOR'ing the state of the escape sequence against that.</li>\n\n    <li>modify logic for enabling blinking cursor via escape\n    sequence as well as the related save/restore operations so this\n    is only available if the <code>cursorBlink</code> resource was\n    set on startup.</li>\n  </ul>\n\n  <h1><a name=\"xterm_192\" id=\"xterm_192\">Patch #192 - 2004/7/12 -\n  XFree86 4.4.99.9</a></h1>\n\n  <ul>\n    <li>change resource settings for color4 and color12, add some\n    discussion in <code>XTerm-col.ad</code> (Debian #241717).</li>\n\n    <li>add a note in xterm manpage discussing the difference\n    between alt- and meta-keys, and the way the latter is used in\n    the <code>eightBitInput</code> resource.</li>\n\n    <li>add a note in xterm manpage regarding possible conflict\n    between resource settings for <code>xterm.vt100.font</code> and\n    <code>xterm.vt100.utf8Fonts.font</code> (Debian #254650).</li>\n\n    <li>add compile-time customization of\n    <code>backarrowKeyIsErase</code> and\n    <code>ptyInitialErase</code> default resource values (adapted\n    from OpenBSD CVS).</li>\n\n    <li>change parameter of <code>FIONREAD</code>\n    <code>ioctl()</code> call from long to int (discussion on\n    tech-x11@netbsd.org regarding LP64 by John Heasley and Matthias\n    Scheler).</li>\n\n    <li>modify configure script options for Athena widgets to work\n    as expected for \"--without-Xaw3d\", etc., (Gentoo Bugzilla\n    #53455).</li>\n\n    <li>add case to uxterm to accommodate locales ending with\n    \"@euro\", e.g., fr_FR.UTF-8@euro (Debian #255197,\n    report/analysis by Matthieu Lagouge).</li>\n\n    <li>add special case for VT100 graphic's \"box\" character\n    (discussion with Ben Armstrong).</li>\n\n    <li>add missing initialization for bitmap-font sizes needed to\n    make fonts menu work with TrueType fonts (report by Ben\n    Armstrong).</li>\n\n    <li>save the fontnames for bold fonts that are derived from\n    normal fonts, or from the <code>boldFont</code> resource, so\n    the same value is restored when switching with the VT Fonts\n    menu (Debian #256086).</li>\n\n    <li>fix manpage preprocessing (Marc La France).</li>\n\n    <li>fix typo in manpage's description of character classes\n    (Debian #257073).</li>\n\n    <li>modify terminfo to accommodate luit, which relies on G1\n    being used via an ISO-2022 escape sequence (Debian #254316,\n    analysis by Juliusz Chroboczek).</li>\n\n    <li>modify Makefile.in rule for ctlseqs.txt to work around\n    groff SGR misfeature.</li>\n\n    <li>modify <code>XTerm.ad</code> to set <code>saveLines</code>\n    default to 1024 (Redhat Bugzilla #127132).</li>\n\n    <li>add a limit-check in <code>dotext()</code> to prevent\n    infinite loop in a corner case of UTF-8 configuration.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_191\" id=\"xterm_191\">Patch #191 - 2004/6/6 -\n  XFree86 4.4.99.7</a></h1>\n\n  <ul>\n    <li>correct options parsing for <code>-into</code> option so it\n    can be combined with <code>-e</code> (Redhat Bugzilla #124518,\n    report/patch by James Armstrong).</li>\n\n    <li>fix ifdef's for <code>OPT_COLOR_RES2</code> so that the\n    fake resource table introduced in <a href=\"#xterm_188\">patch\n    #188</a> is not compiled if it is empty. This happened to work\n    with gcc (report by Joel Konkle-Parker).</li>\n\n    <li>reorganize ptydata.c to use one input buffer shared between\n    the VTxxx and tek4014 emulators. In the new scheme, UTF-8\n    decoding is performed on characters as they are needed by the\n    state machine rather than on buffers as they are read.</li>\n\n    <li>work around change in quoting of PROJECTROOT symbol when\n    using configure script, from changes made in <a href=\n    \"#xterm_187\">patch #187</a> for CF_IMAKE_CFLAGS (Gentoo\n    Bugzilla #50982).</li>\n  </ul>\n\n  <h1><a name=\"xterm_190\" id=\"xterm_190\">Patch #190 - 2004/5/25 -\n  XFree86 4.4.99.6</a></h1>\n\n  <ul>\n    <li>correct state for values in the range 128-159 after\n    translating from UTF-8: this should be ignored unless the user\n    overrides it with the <code>allowC1Printable</code> resource\n    (reported by Simon Strandgaard).</li>\n\n    <li>add configure-script check for nl_langinfo(CODESET), use\n    this to replace check of environment variables for UTF-8.</li>\n\n    <li>change Makefile.in rules for 256colres.h and 88colres.h so\n    they are only made if they do not exist. The maintainer-clean\n    rule will remove these files; they require perl to be\n    made.</li>\n\n    <li>remove check in configure script --enable-toolbar that\n    suppressed this option when building with Xaw7.</li>\n\n    <li>apply fixes to Tektronix widget used for VT100 widget to\n    make toolbar work with Xaw7 (XFree86 4.x).</li>\n  </ul>\n\n  <h1><a name=\"xterm_189\" id=\"xterm_189\">Patch #189 - 2004/5/16 -\n  XFree86 4.4.99.6</a></h1>\n\n  <ul>\n    <li>do not call xim_real_init() if <code>openIm</code> resource\n    is false (Debian #249025).</li>\n\n    <li>minor improvements to built-in line-drawing.</li>\n\n    <li>fix a few portability issues with dynamic abbreviation\n    support, i.e., did not compile on Tru64.</li>\n\n    <li>modify constraints in form used to layout toolbar, to work\n    with newer Xaw in XFree86 4.x.</li>\n  </ul>\n\n  <h1><a name=\"xterm_188\" id=\"xterm_188\">Patch #188 - 2004/5/12 -\n  XFree86 4.4.99.6</a></h1>\n\n  <ul>\n    <li>correct table entry for DEL in the ground state, which\n    marked it as a printable character from <a href=\n    \"#xterm_171\">patch #171</a> (report by D Hugh Redelmeier).</li>\n\n    <li>improve fix in <a href=\"#xterm_186\">patch #186</a> for\n    failure in xim_real_init() by adding a sleep.</li>\n\n    <li>fix a typo in os2main.c (XFree86 Bugzilla #1358,\n    report/patch by Frank Giessler).</li>\n\n    <li>make escape sequence reporting dynamic colors consistent\n    with the logic that sets it; choosing the opposite color when\n    reverse video is set (XFree86 Bugzilla #1361, reported by Bradd\n    W Szonye).</li>\n\n    <li>modify initialization of 256- and 88-colors so that colors\n    beyond 16 are normally not X resources. This works around a\n    hard-coded limit in Xt which breaks xterm when 256-colors and\n    luit are both configured (report by Noah Friedman).</li>\n\n    <li>remove <code>ncv</code> from <code>xterm-256color</code>\n    terminfo entry since it is no longer needed (report by Eli\n    Zaretskii).</li>\n\n    <li>add \"erase2\" and \"eol2\" keywords to <code>ttyModes</code>\n    resource, for recent/current FreeBSD.</li>\n\n    <li>improve ifdef's for utempter library to omit direct calls\n    to <code>setutent()</code> or <code>getutent()</code> (adapted\n    from patch by Christian Biere).</li>\n\n    <li>add dynamic abbreviation support like Emacs (patch by\n    Tomasz Cholewo). This is ifdef'd with <code>OPT_DABBREV</code>,\n    and enabled via the configure script\n    <code>--enable-dabbrev</code> option.</li>\n\n    <li>fix problem responding to session management events, e.g.,\n    which would make logging out very slow (patch by Eddy De Greef,\n    Debian #233883).</li>\n\n    <li>work around a newer bug in toolbar with XFree86 by forcing\n    menus to be fully initialized at startup. In older versions of\n    XFree86 and X11R6, it was possible to delay initialization of\n    the menu contents until it was popped up. (The longstanding bug\n    with XFree86 4.x layout for toolbar still exists, though).</li>\n\n    <li>modify <code>xtermAddInput</code> to work around core dump\n    on IRIX64 when initializing scrollbar translations if toolbar\n    is compiled-in.</li>\n\n    <li>fix some minor conflicts in the 2-character entry names in\n    the termcap file.</li>\n  </ul>\n\n  <h1><a name=\"xterm_187\" id=\"xterm_187\">Patch #187 - 2004/4/27 -\n  XFree86 4.4.99.4</a></h1>\n\n  <ul>\n    <li>change xterm version string to use\n    <code>__vendorversion__</code> where that is available, and\n    \"XTerm\" otherwise.</li>\n\n    <li>improve description of <code>utf8</code> resource in\n    manpage (Debian #179407).</li>\n\n    <li>modify configure macros CF_IMAKE_CFLAGS and CF_ADD_CFLAGS\n    to handle <code>-D</code> options that define string values,\n    e.g., for <code>XVENDORNAME</code>.</li>\n\n    <li>modify configure macro CF_IMAKE_CFLAGS to allow (if\n    <code>$PATH</code> is set accordingly) to use the\n    <code>xmkmf</code> script within an X build tree.</li>\n\n    <li>add missing <code>#undef OPT_SESSION_MGT</code> to\n    xtermcfg.hin to make the configure script's\n    --disable-session-mgt option work.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_186\" id=\"xterm_186\">Patch #186 - 2004/4/18 -\n  XFree86 4.4.99.4</a></h1>\n\n  <ul>\n    <li>change reset on <code>DECSCL</code> to a soft-reset\n    (appears some DEC manuals have errors).</li>\n\n    <li>add a section to ctlseqs.ms elaborating on normal/alternate\n    screens.</li>\n\n    <li>modify initialization of Acolors[] so that any\n    XtDefaultForeground or XtDefaultBackground values are\n    translated as in the Tcolors[], to use the window's\n    foreground/background colors. This affects the\n    <code>colorBD</code> and similar resources which normally have\n    no explicit color assigned.</li>\n\n    <li>modify initialization of Tektronix window so that control\n    sequences setting its color before the window is popped up will\n    apply to its initial colors.</li>\n\n    <li>add control sequence to set Tektronix window's\n    text-cursor.</li>\n\n    <li>modify initialization of terminal colors, e.g., mouse\n    pointer and text cursor, to treat\n    <code>XtDefaultForeground</code> and\n    <code>XtDefaultBackground</code> values as the actual\n    foreground and background colors of the terminal rather than\n    white and black (Debian #241717).</li>\n\n    <li>remove an incorrect comparison against\n    <code>PTYCHARLEN</code> in parsing the <code>-S</code> option\n    (report by Michael B Taylor).</li>\n\n    <li>minor restructuring of terminfo/termcap files, having noted\n    some packager's customizations which caused the structure to be\n    confused.</li>\n\n    <li>eliminate an isolated use of MIN/MAX in charproc.c</li>\n\n    <li>replace <code>XtExtdefaultfont</code> and\n    <code>XtExtdefaultbackground</code> by their more familiar\n    equivalents <code>XtDefaultFont</code> and\n    <code>XtDefaultBackground</code>.</li>\n\n    <li>replace ifdef's using <code>SCO</code>, <code>sco</code>\n    and <code>SCO325</code> with <code>__SCO__</code> (XFree86\n    Bugzilla #1301, Kean Johnston). But ensure that it still builds\n    on platforms where this symbol is not defined.</li>\n\n    <li>add <code>scoFunctionKeys</code> resource, to match\n    manpage.</li>\n\n    <li>update manpage discussion of menus and related\n    resources.</li>\n\n    <li>enable utmpx support for NetBSD 1.6C and newer (patch by\n    Matthias Scheler).</li>\n\n    <li>add a note in the manpage discussing xterm's treatment of\n    open file-descriptors (request by Dan Shearer).</li>\n\n    <li>modify <code>Help()</code> to make \"xterm -h\" write to\n    standard output rather than standard error (patch by Bram\n    Moolenaar).</li>\n\n    <li>check for type of failure in xim_real_init() to avoid\n    looping when the problem is an unsupported input method rather\n    than a failure to connect to the XIM server. Problem was\n    introduced in <a href=\"#xterm_175\">patch #175</a> (XFree86\n    Bugzilla #1306).</li>\n\n    <li>modify <code>Imakefile</code> to remove dependency of\n    \"install\" target on the <code>xterm</code> executable to make\n    installs from tree without attempting to rebuild anything\n    (commit by David Dawes, report/patch from Lee Olsen).</li>\n\n    <li>remove call to <code>ShowCursor</code> from\n    <code>SetCursorBlink()</code> since that is redundant, and can\n    cause display glitches if the cursor is already blinking\n    (XFree86 Bugzilla #1158, patch/report by Andreas Schwab).</li>\n  </ul>\n\n  <h1><a name=\"xterm_185\" id=\"xterm_185\">Patch #185 - 2004/3/3 -\n  XFree86 4.4</a></h1>\n\n  <ul>\n    <li>fix tcap-query logic for the backspace key (XFree86\n    Bugzilla #1233, report/patch by Anton Kovalenko).</li>\n\n    <li>add test-scripts resize.pl and tcapquery.pl</li>\n\n    <li>add translation to ASCII of commonly-used characters that\n    groff translates to Unicode, when the font in use does not\n    provide the corresponding glyphs (Debian #219551).</li>\n\n    <li>modify RequestMaximize(), which performs maximize/restore\n    via control sequences, to account for window-frame (patch by\n    Jess Thrysoee).</li>\n\n    <li>improve pattern used in <code>uxterm</code> to check for\n    UTF-8 locale, e.g., for HPUX (patch by H Merijn Brand).</li>\n\n    <li>add <code>-fd</code> option and resource\n    <code>faceNameDoublesize</code> to specify double-wide fonts\n    with Xft (adapted from patch by Zarick Lau).</li>\n\n    <li>change a couple of resource classes from \"Boolean\" to\n    specific values: <code>freeBoldBox</code>,\n    <code>forceBoxChars</code>.</li>\n\n    <li>add resource <code>showMissingGlyphs</code> to outline\n    places on the screen where a font lacks the corresponding\n    glyph.</li>\n\n    <li>add resource <code>showBlinkAsBold</code> to control\n    whether blinking text should be shown as bold or actual\n    blinking text.</li>\n\n    <li>improve logic in ShowCursor() to avoid repainting the\n    cursor when it is already visible, e.g., in response to the\n    DECTCEM escape sequence. This also addresses XFree86 Bugzilla\n    #1158.</li>\n\n    <li>implement blinking text, using the timer for blinking\n    cursor.</li>\n\n    <li>modify FreeType support to allow resizing the font, in the\n    same ways the window can be resized if fixed fonts are used.\n    The relative font sizes are derived from the fixed font\n    sizes.</li>\n\n    <li>add menu items and corresponding actions for switching\n    on/off the UTF-8 mode and Xft (TrueType) support.</li>\n\n    <li>add logic to handle switching UTF-8 mode on/off. It worked\n    if the escape sequences were flushed, but if data was mixed in\n    with the same write, some were not handled properly (report by\n    Nicolas George).</li>\n\n    <li>modify to allow turning UTF-8 mode on/off via escape\n    sequence even if <code>-wc</code> option was not given at\n    startup (patch by Peter Berg Larsen).</li>\n\n    <li>amend fix for XFree86 Bugzilla #981, adjusting for\n    savedlines value (report by Tim Adye).</li>\n\n    <li>fix a typo in computing relative font size (Jess\n    Thrysoee).</li>\n  </ul>\n\n  <h1><a name=\"xterm_184\" id=\"xterm_184\">Patch #184 - 2003/12/31 -\n  XFree86 4.3.99.903</a></h1>\n\n  <ul>\n    <li>improve configure-script checks for FreeType and related\n    libraries, using <code>xft-config</code> or\n    <code>freetype-config</code> scripts when available.</li>\n\n    <li>fix configure-script check for <code>SYSV</code> definition\n    by ensuring whether <code>sys_errlist[]</code> is declared, and\n    by modifying the test program to include\n    <code>X11/Intrinsic.h</code> to check that <code>wchar_t</code>\n    is declared consistently (report by H Merijn Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_183\" id=\"xterm_183\">Patch #183 - 2003/12/26 -\n  XFree86 4.3.99.903</a></h1>\n\n  <ul>\n    <li>correct logic for configurations that may attempt to open\n    both old/new-style pseudoterminals. In this case, the old-style\n    are preferred. Logic was broken in <a href=\"#xterm_145\">patch\n    #145</a> (XFree86 Bugzilla #997, report/patch by Kean\n    Johnston).</li>\n\n    <li>modify handling of <code>eightBitInput</code> resource in\n    UTF-8 mode to translate the value into UTF-8. Otherwise an\n    illegal UTF-8 code is sent to the application (report by Bram\n    Moolenaar).</li>\n\n    <li>modify <code>uxterm</code> script to interpret help and\n    version options so xterm does not always create a window when\n    the user requests this information (Debian #223926).</li>\n\n    <li>add a limit check to ScrnTstWrapped() (XFree86 Bugzilla\n    #981).</li>\n\n    <li>modify DECSCL to perform a hard reset (RIS) as per DEC\n    manuals. Extended DECSCL to accept parameters for vt4XX and\n    vt5xx terminals.</li>\n\n    <li>correct logic for ANSI conformance level escape sequences,\n    which were confused with DEC conformance level escape\n    sequences.</li>\n\n    <li>correct state for vt52 shift-in/shift-out, which was not\n    reset properly after <a href=\"#xterm_171\">patch #171</a>.</li>\n\n    <li>correct handling of graphics characters for vt52 mode,\n    which did not display line-drawing characters after G1 fix from\n    <a href=\"#xterm_182\">patch #182</a>.</li>\n\n    <li>fixes for configure script to work with current Cygwin\n    headers and libraries.</li>\n\n    <li>modify <code>Imakefile</code> to put the current directory\n    at the beginning of the include searchpath (patch by David\n    Dawes).</li>\n  </ul>\n\n  <h1><a name=\"xterm_182\" id=\"xterm_182\">Patch #182 - 2003/12/2 -\n  XFree86 4.3.99.901</a></h1>\n\n  <ul>\n    <li>correct logic for <code>metaSendsEscape</code> resource to\n    allow for the meta-right key to be tested. Improve check for\n    meta/alt modifiers by dropping the assumption that a keysym is\n    associated with only one modifier, and by ignoring NoSymbol\n    entries in the xmodmap data (XFree86 Bugzilla #924, patch by\n    David Dawes).</li>\n\n    <li>correct wrapping logic for line-drawing characters written\n    in non-UTF-8 mode of xterm build for wide-characters (XFree86\n    Bugzilla #918, report/patch by J&uuml;rgen Keil).</li>\n\n    <li>improve manpage description of resources, in particular the\n    <code>utf8Fonts</code> class (XFree86 Bugzilla #905).</li>\n\n    <li>add definitions to compile with glibc-based GNU/Hurd,\n    GNU/KFreeBSD and GNU/KNetBSD (XFree86 Bugzilla #893).</li>\n\n    <li>compiler-warning fixes (patch by Christian Biere).</li>\n\n    <li>add README.i18n (Tomohiro Kubota).</li>\n\n    <li>correct initialization of G1 character set mapping, which\n    used line-drawing set as a result of confusion between \"DEC\n    Supplemental Graphic\" and \"DEC Special Graphic\" character sets\n    (see <a href=\"#xterm_34\">patch #34</a> regarding DECSTR).</li>\n\n    <li>correct ifdef in main.c for variable utret (patch by\n    Bernhard Rosenkraenzer).</li>\n\n    <li>document in xterm's manpage how to use XFree86 \":unscaled\"\n    keyword to suppress scaling of bold fonts.</li>\n\n    <li>when deriving bold fontname from normal fontname, use the\n    normal font's average width to avoid for example selecting\n    7x13bold from an 8x13 normal font (Debian #107769).</li>\n  </ul>\n\n  <h1><a name=\"xterm_181\" id=\"xterm_181\">Patch #181 - 2003/10/26 -\n  XFree86 4.3.99.15</a></h1>\n\n  <ul>\n    <li>implement <code>boldMode</code> for wide-character logic in\n    <code>drawXtermText()</code> (report by Michael\n    Schroeder).</li>\n\n    <li>modify <code>UXTerm.ad</code> resource file to include\n    \"XTerm-color\" rather than \"XTerm\", in case the latter file\n    contains no color resource definitions, e.g., after <a href=\n    \"#xterm_180\">patch #180</a>.</li>\n\n    <li>add action <code>load-vt-fonts()</code> and configure\n    option <code>--enable-load-vt-fonts</code> which allows users\n    to define additional sets of VT-fonts which can be loaded at\n    runtime.</li>\n\n    <li>add logic to wide-character support which attempts to load\n    fonts specified by <code>utf8Fonts</code> subresources at\n    startup. The subresources have the same names as the fonts\n    which they replace, e.g., <code>font</code>,\n    <code>font1</code>, etc., so that the ISO-10646-1 fonts can be\n    specified in the <code>XTerm</code> app-defaults file (adapted\n    from patch by Tomohiro Kubota).</li>\n\n    <li>improve Set Font escape string handling by making the\n    relative settings apply to the size of the font, as in shift\n    keypad plus/minus rather than the menu index.</li>\n\n    <li>simplify parameter passing for the <code>set-vt-font</code>\n    action and related code.</li>\n\n    <li>cleanup some include-ordering, moving some recently-added\n    hardcoded stuff into xterm.h where it will not interfere with\n    the configure script.</li>\n\n    <li>modify <code>xtermAddInput()</code> (see note on\n    augmentation in <a href=\"#xterm_158\">patch #158</a>) to use the\n    complete set of default keyboard translations so that one can\n    use shifted pageup, wheel mouse, etc., while the mouse pointer\n    is over the scrollbar. (Debian #178812).</li>\n\n    <li>make save/restore mode controls apply to show/blink cursor\n    states.</li>\n\n    <li>add escape sequence to start/stop blinking cursor, which\n    allows implementing <code>cvvis</code> terminfo capability\n    (request by Nate Bargmann).</li>\n\n    <li>add <code>indp</code> and <code>rin</code> to terminfo\n    entry.</li>\n\n    <li>fix an out-of-bounds array reference in ScrnRefresh() for\n    wide characters (report by Dan Harnett, patch by Todd Miller).\n    This bug dates from <a href=\"#xterm_141\">patch #141</a>.</li>\n  </ul>\n\n  <h1><a name=\"xterm_180\" id=\"xterm_180\">Patch #180 - 2003/10/12 -\n  XFree86 4.3.99.15</a></h1>\n\n  <ul>\n    <li>several fixes for rendering using Xft via option\n    <code>-fa</code>:\n      <ul>\n        <li>translate Unicode values, i.e,. from UTF-8 output to\n        xterm, for line-drawing to xterm's internal code, etc.,\n        since TrueType fonts generally do not have either set of\n        line-drawing glyphs. xterm can draw these directly (report\n        by Abigail Brady).</li>\n\n        <li>pass 16-bit values rather than 8-bit values to\n        xtermXftDrawString() to allow for wide-characters.</li>\n\n        <li>remove spurious check for <code>colorBDMode</code>\n        resource in logic that does bold fonts.</li>\n\n        <li>implement underlining.</li>\n      </ul>\n    </li>\n\n    <li>patches by Ilya Zakharevich:\n      <ul>\n        <li>improve drawXtermText() by making the recursive calls\n        communicate through arguments, and not through\n        saving/restoring global variables.</li>\n\n        <li>make double-width characters work with <code>-u8</code>\n        option.</li>\n\n        <li>modify lookup of double-sized fonts by checking for a\n        match ignoring x/y resolution if the first check\n        fails.</li>\n      </ul>\n    </li>\n\n    <li>make height of TrueType fonts match ascent+descent (patch\n    by Keith Packard).</li>\n\n    <li>correct configure-script check for imake $CFLAGS, which did\n    not check properly if imake was not available.</li>\n\n    <li>correct install rule in Makefile.in for\n    <code>uxterm</code>, which was attempting to strip the script\n    (newsgroup posting by Fernan Aguero).</li>\n\n    <li>correct AF/AB strings in termcap for xterm-256color and\n    xterm-88color entries (report by Josh Howard).</li>\n\n    <li>update wcwidth.c to incorporate changes from Markus Kuhn's\n    2003-05-20 (Unicode 4.0) version of that file.</li>\n\n    <li>modify <code>scroll-back</code> and\n    <code>scroll-forw</code> actions to accept an adjustment value,\n    e.g.,\n\n      <pre>\n              <code>scroll-back(1, page-2)</code>\n</pre>to scroll back by 2 lines less than a page (patch by Greg\nKlanderman).\n    </li>\n\n    <li>use color resource setting from Debian package for xterm\n    VT100 widget, since the choice of blues provides better\n    contrast.</li>\n\n    <li>remove color resources from <code>XTerm.ad</code>, leaving\n    them only in <code>XTerm-col.ad</code> (prompted by Debian\n    package for xterm).</li>\n\n    <li>correct configure script option --enable-pty-handshake\n    (report by Paul Gilmartin).</li>\n\n    <li>add <code>visualBellDelay</code> resource to modify the\n    length of time used for visual bell, for very slow displays or\n    very fast computers (reports by Ingo van Lil and Doug\n    Toppin).</li>\n\n    <li>correct logic for initializing dynamic highlight color\n    (patch by Jess Thrysoee).</li>\n\n    <li>add a check for non-zero size in call to\n    <code>XCopyArea()</code> to accommodate a Solaris bug.</li>\n\n    <li>correct typo in example for character classes in xterm\n    manpage (Debian #198910).</li>\n\n    <li>link xterm with bind_on_load option on Darwin to work\n    around a deadlock in the dynamic loader when a signal is\n    received while the dynamic loader is looking up symbols\n    (patches by Rob Braun, Torrey Lyons).</li>\n\n    <li>modify configure script to avoid using \"head -1\".</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>modify ifdef's to work around inclusion of types FcChar32\n    and XftCharSpec with FreeType 2.0 (see <a href=\n    \"#xterm_175\">patch #175</a>).</li>\n\n    <li>modify the predictable version of the generated logfile\n    name (see <a href=\"#xterm_171\">patch #171</a>) to append the\n    process-id rather than a random value.</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>Enable SCO function keys in xterm</li>\n\n        <li>Make Delete key send DEL by default on SCO in\n        xterm</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_179\" id=\"xterm_179\">Patch #179 - 2003/5/21 -\n  XFree86 4.3.99.5</a></h1>\n\n  <ul>\n    <li>modify ifdef's for WTMPX_FILE to allow building on cygwin\n    again.</li>\n\n    <li>change the default of pty-handshaking configure option (and\n    related default for imake) to assume this feature is\n    needed.</li>\n\n    <li>add ifdef's so configure option for XawPlus library works\n    (patch by Pavel Roskin).</li>\n\n    <li>add <code>$(MAIN_DEFINES)</code> to the variables checked\n    by the configure script that may contain information set by\n    imake. This allows xterm to build/run properly using the\n    configure script on IRIX64.</li>\n\n    <li>add configure check for \".exe\" suffix on cygwin.</li>\n  </ul>\n\n  <h1><a name=\"xterm_178\" id=\"xterm_178\">Patch #178 - 2003/5/18 -\n  XFree86 4.3.99.5</a></h1>\n\n  <ul>\n    <li>modify default for configure\n    <code>--enable-pty-handshake</code> option to enable it for\n    Solaris (report by Nelson Beebe).</li>\n\n    <li>modify <code>in_put()</code> function to call\n    <code>PreeditPosition()</code> only when the cursor's position\n    has changed. This addresses report by Stefan Baums of high CPU\n    usage while xterm with chinput are running in the background\n    (patch by Yong Li).</li>\n\n    <li>improved explanation of <code>-ls</code> conflict with\n    <code>-e</code> option in xterm manpage (adapted from comments\n    by Henning Makholm).</li>\n\n    <li>correct comment in terminfo file regarding modifier used\n    for <code>kDC</code> (Debian #189764, report by Henning\n    Makholm).</li>\n\n    <li>correct/extend some of the keypad description in ctlseqs.ms\n    (report by Henning Makholm).</li>\n\n    <li>correct keypad-mapping table in input.c so\n    <code>XK_KP_Equal</code> works (report by Henning\n    Makholm).</li>\n\n    <li>modified to work with CJK double-width (bi-width/monospace)\n    fonts. They're similar to Roman Czbora and David Starner's\n    gnuunifonts in that Latin letters and numbers have all the same\n    width which is exactly the half of the width of East Asian\n    characters. (patch by Jungshik Shin\n    &lt;jshin@mailaps.org&gt;).</li>\n\n    <li>add configure option <code>--enable-broken-osc</code> and\n    resource <code>brokenLinuxOSC</code> to accommodate scripts\n    which do not distinguish between running in the Linux console\n    and running in X. Linux console recognizes malformed control\n    strings which start with an <code>OSC</code>, but are\n    fixed-length, with no terminator.</li>\n\n    <li>add configure option <code>--enable-broken-st</code> and\n    resource <code>brokenStringTerm</code> to allow user to revert\n    one part of the parsing table corrections from <a href=\n    \"#xterm_171\">patch #171</a>. (reports by Matthias Scheler and\n    Kirill Ponomarew indicate that someone's network firmware sends\n    an <code>&lt;escape&gt;X</code>).</li>\n\n    <li>modify configure <code>--disable-imake</code> to provide\n    values for <code>OSMAJORVERSION</code>,\n    <code>OSMINORVERSION</code>, <code>FUNCPROTO</code> and\n    <code>NARROWPROTO</code> (report by Heiko Schlichting).</li>\n\n    <li>correct <code>vttests/16colors.sh</code>, which omitted the\n    <code>$SUF</code> variable in output strings (patch by Paul\n    Gilmartin).</li>\n\n    <li>modify shell scripts in <code>vttests</code> directory to\n    attempt to use named signals in the <code>trap</code>\n    statement, making this portable to OS/390 (report by Paul\n    Gilmartin). Tested on SunOS 4.1.4, which implements only\n    numbers.</li>\n  </ul>\n\n  <h1><a name=\"xterm_177\" id=\"xterm_177\">Patch #177 - 2003/3/23 -\n  XFree86 4.3.0</a></h1>\n\n  <ul>\n    <li>fix definition of <code>USE_HANDSHAKE</code>, must be\n    numeric (reported by Jens Schleusener).</li>\n  </ul>\n\n  <h1><a name=\"xterm_176\" id=\"xterm_176\">Patch #176 - 2003/3/22 -\n  XFree86 4.3.0</a></h1>\n\n  <ul>\n    <li>add configure option <code>--enable-pty-handshake</code> to\n    allow one to compile-in support for the pty handshaking logic,\n    and resource <code>ptyHandshake</code> to enable or disable it\n    (suggested by Ian Collier).</li>\n\n    <li>restore <code>USE_HANDSHAKE</code> ifdef removed in\n    <a href=\"#xterm_159\">patch #159</a> to address Debian\n    #39964.</li>\n\n    <li>move ifdef's for ttysize/winsize into xterm_io.h</li>\n\n    <li>simplify loop on <code>tgetent</code>, check if the\n    successive entries in the lookup table are the same. That makes\n    xterm do one less lookup if there is no \"xterm\" entry in the\n    termcap file (report by Derek Martin).</li>\n\n    <li>correct manpage discussion of <code>$TERM</code> and\n    <code>$TERMCAP</code> variables, which omitted the Tektronix\n    emulation and a note of the final \"dumb\" fallback.</li>\n\n    <li>broaden ifdef for\n    <code>XRegisterIMInstantiateCallback()</code> from <a href=\n    \"#xterm_175\">patch #175</a> (XIM fix) to exclude non-XFree86\n    (report by Nelson Beebe indicates this breaks for Solaris, IRIX\n    and OSF/1).</li>\n\n    <li>correct resource-size for <code>iconFont</code> (this was\n    added by X11R6.3).</li>\n\n    <li>improve configure check for XKB bell extension, to work\n    around inconsistent implementation of this feature (reports by\n    Nelson Beebe, Kriston Rehberg and David Ellement).</li>\n\n    <li>modify configure-check for <code>tty</code> group to be\n    less strict in batch mode (report by Nelson Beebe).</li>\n\n    <li>modify to allow building with g++, to use its compiler\n    warnings (suggested by Nelson Beebe).</li>\n\n    <li>modify <code>dec2ucs[]</code> table to reflect newer codes\n    available for scanlines 1, 3, 7, 9 (report by Michael\n    Schroeder).</li>\n\n    <li>add configure option for XawPlus library.</li>\n  </ul>\n\n  <h1><a name=\"xterm_175\" id=\"xterm_175\">Patch #175 - 2003/3/9 -\n  XFree86 4.3.0</a></h1>\n\n  <ul>\n    <li>fix a SIGSEGV which could occur if xterm is connecting to\n    XIM server, and the XIM server is destroyed (patch by Nam\n    SungHyun).</li>\n\n    <li>modify to use built-in line-drawing characters for Xft\n    fonts (patch by Andrew Tipton).</li>\n\n    <li>make menu reflect the state of the <code>tekInhibit</code>\n    resource.</li>\n\n    <li>make <code>signalInhibit</code> resource work, i.e.,\n    disable the menu entries that would send signals to, or exit\n    xterm. This was probably broken in X11R5 when logging was\n    disabled (report by Sven Mascheck).</li>\n\n    <li>changed classes of <code>colorBDMode</code> and similar\n    resources that override colors when a video attribute is set to\n    <code>ColorAttrMode</code>, to make them distinct from\n    <code>ColorMode</code>. This avoids an unexpected rendering of\n    reverse video, for example (report by Paul Fox).</li>\n\n    <li>changed class of <code>veryBoldColors</code> to\n    <code>VeryBoldColors</code>, since <code>ColorMode</code> is\n    associated with boolean resources.</li>\n\n    <li>add option <code>-k8</code> and resource\n    <code>allowC1Printable</code> to allow users of non-VTxxx\n    character sets such as KOI-8 to treat the C1 control area\n    (character codes 128-159) as printable rather than control\n    characters.</li>\n\n    <li>add a null-pointer check for return-value of\n    <code>ptsname()</code> in HPUX-specific code (report by David\n    Ellement).</li>\n\n    <li>revise the ifdef's used for <code>XKB</code> bell support.\n    The code was using a nonstandard call\n    <code>XkbStdBell()</code>. Changed to use\n    <code>XkbBell()</code> (based on patch by\n    &lt;derek@signalmarketing.com&gt;).</li>\n\n    <li>add a null-pointer check in <code>xtermLoadFont()</code> in\n    case there is no wide-bold font (Nam SungHyun).</li>\n\n    <li>change <code>Makefile.in</code> to use autoconf's\n    <code>bindir</code>, <code>libdir</code> and\n    <code>mandir</code> variables (report by Nam SungHyun).</li>\n\n    <li>add <code>le</code> to termcap <code>xterm-basic</code>\n    entry. Though missing from older termcaps for xterm, some\n    applications check for it (report by Matthias Buelow).</li>\n\n    <li>modify <code>uxterm</code> script to strip modifiers such\n    as \"@euro\" from the locale setting before adding \".UTF-8\"\n    (Debian #179929).</li>\n\n    <li>modify the remaining places where tek4014 emulation uses\n    <code>XDefineCursor()</code>, to make it work as originally\n    implemented, e.g., when switching back to alpha mode. Added\n    test-screen in vttest to test this feature properly.</li>\n  </ul>\n\n  <h1><a name=\"xterm_174\" id=\"xterm_174\">Patch #174 - 2003/2/25 -\n  XFree86 4.2.99.903</a></h1>\n\n  <ul>\n    <li>work-around for XFree86 bug which made\n    <code>XDefineCursor()</code> on a shell-window no longer work.\n    The tek4014 emulation used this. Use the next lower window\n    (report by Karl Rudolf Bauchspiess).</li>\n\n    <li>add a resource setting <code>allowWindowOps</code> to\n    control whether the extended window operations should be\n    allowed, e.g., resize, iconify, report window attributes. This\n    is to accommodate people who are not capable of using a pager\n    to view log-files.</li>\n  </ul>\n\n  <h1><a name=\"xterm_173\" id=\"xterm_173\">Patch #173 - 2003/2/6 -\n  XFree86 4.2.99.902</a></h1>\n\n  <ul>\n    <li>reset mouse mode to normal on a full reset. This does not\n    apply to mouse hilite tracking mode, of course (see\n    ctlseqs.ms).</li>\n\n    <li>add a time-delay at the point where mouse hilite tracking\n    mode choses to not handle X events, to avoid runaway CPU usage\n    (report by D Hugh Redelmeier).</li>\n\n    <li>check for illegal character in DECUDK string, quit if\n    detected.</li>\n  </ul>\n\n  <h1><a name=\"xterm_172\" id=\"xterm_172\">Patch #172 - 2002/12/27 -\n  XFree86 4.2.99.3</a></h1>\n\n  <ul>\n    <li>fixes to make repainting of 256-color example work properly\n    (reports by Abigail Brady and Scott A Crosby).\n      <ul>\n        <li>set flag in <code>AllocateAnsiColor()</code> to ensure\n        the color is allocated once only.</li>\n\n        <li>fix check in <code>ScrnRefresh</code>, which was\n        comparing background colors only if the ANSI foreground\n        colors also were set.</li>\n      </ul>\n    </li>\n\n    <li>merge <code>Error()</code> calls and some\n    <code>exit()</code> calls into <code>SysError()</code>, and\n    change that to add the brief explanation for each error code\n    which is provided in the manpage. Change a few\n    <code>SysError()</code>, calls to avoid using code 1, to avoid\n    confusion with exit status from places that do not use\n    <code>SysError()</code>.</li>\n\n    <li>simplify logic used to open a debug logfile as the standard\n    error.</li>\n\n    <li>modify the <code>-e</code> option so that if it fails,\n    xterm will check if only one argument follows, e.g., it was\n    quoted, and then retry using <code>sh&nbsp;-c</code>.</li>\n\n    <li>modify parsing of DECUDK string parameter to allow a comma\n    between pairs of hexadecimal digits (Ray Neuman\n    &lt;raymond@one.com.au&gt; reports that \"real\" terminals accept\n    this; perhaps they simply ignore unexpected characters).</li>\n\n    <li>fix a few problems with the <code>$TERMCAP</code> string\n    generated by <code>resize</code>:\n      <ul>\n        <li>for Bourne shell, add an <code>export</code> command.\n        This was missing as far back as X11R5.</li>\n\n        <li>escape exclamation marks, used in xterm's reset\n        string.</li>\n\n        <li>translate literal <code>\\177\\</code> to \"^?\".</li>\n      </ul>\n    </li>\n\n    <li>improve configure check for <code>tgetent()</code> to work\n    when <code>$TERMCAP</code> has been set to a specific\n    entry.</li>\n\n    <li>modify <code>minstall.sh</code> to use \"%\" rather than \"@\",\n    to avoid problems with AFS (report by Zdenek Sekera).</li>\n\n    <li>list fatal error codes from <code>error.h</code> in the\n    manpage, remove unused codes in <code>error.h</code>.</li>\n\n    <li>use more explicit wording for manpage list of color\n    resources, since at least one user confused the generic names\n    such as \"black\" with the names in rgb.txt (the latter are now\n    used).</li>\n\n    <li>minor fix to description of 1003 mouse mode in ctlseqs.ms\n    (Larry Riedel).</li>\n  </ul>\n\n  <h1><a name=\"xterm_171\" id=\"xterm_171\">Patch #171 - 2002/12/12 -\n  XFree86 4.2.99.3</a></h1>\n\n  <ul>\n    <li>modify parser tables to improve detection of malformed\n    control sequences, making xterm behave more like a real DEC\n    terminal (patch by Paul Williams).</li>\n\n    <li>update comment in <code>input.c</code> to document\n    <code>Meta</code> as a modifier for escape sequences (patch by\n    D Roland Walker).</li>\n\n    <li>add ifdef'd code for logging option which adds the hostname\n    and a timestamp to the generated logfile name. The ifdef's are\n    setup with the configure script (patch by Nelson Beebe).</li>\n\n    <li>remove <code>xevents()</code> call from the end of\n    <code>BlinkCursor()</code>, to fix an occasional problem which\n    caused xterm to pause until a key was pressed. The reason for\n    this was that there was no check to ensure that there really\n    were events for <code>xevents()</code> to process. (patch by\n    Semen A Ustimenko &lt;semenu@FreeBSD.org&gt;).</li>\n\n    <li>remove unused mode-params from <code>open()</code> calls\n    that do not create a file.</li>\n\n    <li>modify configure script to put new items first on\n    <code>$CPPFLAGS</code> and <code>$CFLAGS</code> to avoid\n    conflict with environment's <em>-I</em> and <em>-D</em>\n    options.</li>\n\n    <li>update config.guess, config.sub</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>fix va_args glitches for xterm/libfontconfig: 0 ==\n        (void*)0 isn't true for all platforms (Egbert Eich).</li>\n\n        <li>initialise ProgramName in xterm's main before\n        referencing it (XFree86 #5473, Peter Valchev).</li>\n\n        <li>some cleanup of Imakefile ifdef's (Marc La\n        France).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_170\" id=\"xterm_170\">Patch #170 - 2002/10/13 -\n  XFree86 4.2.1</a></h1>\n\n  <ul>\n    <li>correct an off-by-one allocating data for sorted help\n    message.</li>\n\n    <li>modify configure script to check for Xpm library, on which\n    XFree86 Xaw library depends.</li>\n\n    <li>update config.guess, config.sub</li>\n  </ul>\n\n  <h1><a name=\"xterm_169\" id=\"xterm_169\">Patch #169 - 2002/10/5 -\n  XFree86 4.2.1</a></h1>\n\n  <ul>\n    <li>modify wording of some options in help message to make them\n    use <code>-/+</code> consistently with respect to \"on/off\" or\n    \"off/on\".</li>\n\n    <li>sort options list which is displayed in help- and\n    syntax-messages at runtime to simplify maintenance.</li>\n\n    <li>remove support for Amoeba and Minix (Juliusz Chroboczek\n    noted it was removed from XFree86 server; there have been no\n    users since 1996).</li>\n\n    <li>add configure script option\n    <code>--disable-session-mgt</code> to control whether the\n    session management code should be compiled-in (request by H\n    Merijn Brand).</li>\n\n    <li>ifdef'd the session-management changes with\n    <code>OPT_SESSION_MGT</code>, to accommodate X11R5 which\n    predates the related definitions.</li>\n\n    <li>fix <code>decode_keyvalue()</code>, which did not properly\n    parse multiple settings as needed for the <code>ttyModes</code>\n    resource, since it did not skip over the parsed data.</li>\n\n    <li>fix an option-parsing conflict between <code>-class</code>\n    and <code>-cjk_width</code> (Nam SungHyun)</li>\n\n    <li>add a missing null in <code>XtVaSetValues()</code> call\n    used in <code>Cleanup()</code> (Nam SungHyun)</li>\n  </ul>\n\n  <h1><a name=\"xterm_168\" id=\"xterm_168\">Patch #168 - 2002/9/29 -\n  XFree86 4.2.1</a></h1>\n\n  <ul>\n    <li>improve data reported for control sequence that requests\n    window position by taking into account the window decorations,\n    e.g., border and title (patch by Jess Thrysoee\n    &lt;jess@thrysoee.dk&gt;).</li>\n\n    <li>add <code>-cjk_width</code> and corresponding resource\n    <code>cjkWidth</code> (patch by Jungshik Shin\n    &lt;jshin@mailaps.org&gt;).</li>\n\n    <li>add <code>-into</code> option, for embedding xterm in a\n    Tcl/Tk application (patch by George Peter Staplin\n    &lt;georgeps@xmission.com&gt;).</li>\n\n    <li>add simple session management (XSM) client capabilities to\n    xterm. So a session manager such as, e.g., xsm, should be able\n    to respawn or kill xterms without the help of an SM proxy (like\n    smproxy), which is a hack and almost always buggy (patch by\n    David Madore).</li>\n\n    <li>fix conflict between ifdef's for\n    <code>OPT_DEC_LOCATOR</code> and <code>OPT_READLINE</code> in\n    button.c (reported by Ilya Zakharevich).</li>\n\n    <li>fix for inconsistent use of <code>struct utmp</code> versus\n    <code>struct utmpx</code> introduced in <a href=\n    \"#xterm_167\">patch #167</a> (patches by Paul Gilmartin, Marc La\n    France).</li>\n\n    <li>modify logic for <code>metaSendsEscape</code> to allow it\n    to work in a setup where the Meta-key is not recognized as a\n    modifier by the key-translations logic (discussion of\n    eightBitInput with H.J.Lu). Note however that Vincent\n    Lef&egrave;vre reported this in January).</li>\n\n    <li>use null pointer values consistently, rather than literal\n    \"0\", for ending variable-length argument lists, e.g., for\n    <code>execlp()</code> (based on patch by Matthieu Herrb).</li>\n\n    <li>correct logic of <code>ChangeAnsiColorRequest()</code>,\n    which would do a screen repaint after replying to a request for\n    information.</li>\n\n    <li>improve scripts in vttests to work with systems whose\n    shells support <code>echo -n</code> and have, as does Debian,\n    an unrelated <code>print</code> utility.</li>\n\n    <li>add vttests/acolors.sh to demonstrate OSC 4, which queries\n    or sets ANSI colors.</li>\n\n    <li>fixes for ctlseqs.ms (Pavel Roskin, Ilya Zakharevich).</li>\n\n    <li>typos in xterm manpage (Jens Schweikhardt)</li>\n\n    <li>remove a redundant GCC_UNUSED from InitPopup() (Nam\n    SungHyun)</li>\n  </ul>\n\n  <h1><a name=\"xterm_167\" id=\"xterm_167\">Patch #167 - 2002/8/24 -\n  XFree86 4.2.0</a></h1>\n\n  <ul>\n    <li>correct ifdef's for <code>USE_TERMCAP</code> to match\n    cygwin configuration.</li>\n\n    <li>fix several places in ctlseqs.ms which had no boxes around\n    the literal text (report by Ilya Zakharevich).</li>\n\n    <li>extend mouse support for readline, ifdef'd with\n    OPT_READLINE (integrated patch from Ilya Zakharevich).</li>\n\n    <li>modify terminfo description to match default for\n    <code>modifyCursorKeys</code> resource.</li>\n\n    <li>add <code>modifyCursorKeys</code> resource to control how\n    the shift- and similar modifiers are used to make a cursor\n    escape sequence. The default makes a modified escape sequence\n    always start with CSI and puts the modifier as the second\n    parameter, to avoid confusing applications that would interpret\n    the first parameter as a repeat count. The original behavior\n    can be obtained by setting the resource to 0 (newsgroup\n    discussion with Stephen J Turnbull, Jeffrey Altman).</li>\n\n    <li>correct missing initializations for\n    <code>appdefaultCursor</code> and <code>appdefaultKeypad</code>\n    resources.</li>\n\n    <li>add configure option <code>--enable-luit</code> and ifdef'd\n    the luit-related code with OPT_LUIT_PROG.</li>\n\n    <li>modify xterm to invoke luit (integrated patch by Tomohiro\n    Kubota)</li>\n\n    <li>update wcwidth.c to match Markus Kuhn's 2002-05-18\n    version.</li>\n\n    <li>correct limit-checking in <code>ComputeSelect()</code> to\n    handle selections that extend off the visible area; rather than\n    modify the parameters to <code>TrackText()</code>, use\n    <code>ScrollSelection()</code> to update the highlighting\n    limits. (reported by Yegappan Lakshmanan and Nelson Beebe,\n    patch by Alexander V Lukyanov).</li>\n\n    <li>correct manpage description of <code>tiXtraScroll</code>\n    resource (reported by Tony Finch).</li>\n\n    <li>changes from OpenBSD:\n      <ul>\n        <li>Make xterm setgid utmp to be able to update utmp even\n        with root privileges revoked.</li>\n\n        <li>If not updating utmp, revoke group privileges totally\n        too.</li>\n      </ul>\n    </li>\n\n    <li>changes from NetBSD:\n      <ul>\n        <li>Check that the return value from ttyslot() is greater\n        than 0 before writing the utmp file. Fixes w's \"w: Stale\n        utmp entry: &lt;user&gt; &lt;tty&gt; &lt;pty&gt;\"\n        errors.</li>\n\n        <li>Use openpty() to deal with new pty naming scheme.</li>\n      </ul>\n    </li>\n\n    <li>add <code>print-redir</code> action and menu entry to allow\n    user to switch terminal in/out of printer controller mode. It\n    appears from the manual that a real vt220 would not switch back\n    to normal mode, so another mechanism is used (addresses Debian\n    #37517).</li>\n\n    <li>check if <code>printerCommand</code> resource string is\n    empty, use this to allow user to disable printer function.</li>\n\n    <li>trim trailing blanks from resource strings.</li>\n\n    <li>check return value from <code>ptsname()</code>, which may\n    return null for example if someone has changed the permissions\n    of /dev/pts to zero (Debian #121899).</li>\n\n    <li>modify OS/2 version to use <code>__UNIXOS2__</code>\n    definition rather than <code>__EMX__</code>, related cleanup\n    (patch by Holger Veit).</li>\n\n    <li>used modified indent 2.0 (patch <a href=\n    \"ftp://ftp.invisible-island.net/gnu-patches/\">20020428</a>) to\n    reformat most of the C source files, to simplify\n    maintenance.</li>\n\n    <li>fix a couple of places where there were leading tabs on\n    symbol-definition lines in Imakefile (Marc La France from\n    report by Tony Finch)</li>\n\n    <li>add imake variable (TraceXTerm) to allow building debug\n    version (Egbert Eich).</li>\n  </ul>\n\n  <h1><a name=\"xterm_166\" id=\"xterm_166\">Patch #166 - 2002/3/25 -\n  XFree86 4.2.0</a></h1>\n\n  <ul>\n    <li>correct a bug in selection: double clicking on a word which\n    was partly scrolled off the screen may select that text (report\n    by Vincent Lef&egrave;vre &lt;vincent@vinc17.org&gt;).</li>\n\n    <li>implement <code>veryBoldColors</code> resource to control\n    whether the corresponding video attribute such as\n    <code>bold</code> is displayed when using\n    <code>colorBDMode</code>, etc. (request by Josh Howard\n    &lt;jrh@vicor-nb.com&gt;).</li>\n\n    <li>define escape sequences for function keys F21-F35 (patch by\n    Stephen P Wall).</li>\n\n    <li>change the colors for the 256-color model, making them less\n    skewed toward black (patch by Stephen P Wall).</li>\n\n    <li>add <code>vt100Graphics</code> resource (see <a href=\n    \"#xterm_115\">patch #115</a>, based on discussion with Glenn\n    Maynard).</li>\n\n    <li>ifdef'd Xaw/Xaw3d/neXtaw includes separately to avoid\n    potential incompatibilities between these flavors of Athena\n    widgets.</li>\n\n    <li>add configure check for XFree86 4.x Xaw library, whose\n    geometry management is broken, to avoid trying to use it for\n    toolbar configuration.</li>\n\n    <li>updates to configure script from vile and lynx to allow\n    configure.in to be compiled with autoconf 2.5x</li>\n\n    <li>add a check for null pointer return by\n    <code>ptsname()</code> (newsgroup posting from Mike Silva\n    &lt;mikesilva@lucent.com&gt;).</li>\n\n    <li>fill in a few details needed to allow UTF-8 mode to switch\n    on/off after startup. This requires that <code>wideChars</code>\n    resource be set. (based on comments in 4 Aug 2001 by Alexey\n    Marinichev &lt;lyosha@lyosha.2y.net&gt;).</li>\n\n    <li>remove duplicate install rules that make directories, e.g.,\n    so installing manpage will not create app-defaults\n    directory.</li>\n\n    <li>add comment in in <code>do_osc()</code>, reserving cases 30\n    and 31 for for Konsole (request by Stephan Binner\n    &lt;Stephan.Binner@gmx.de&gt;).</li>\n\n    <li>fixes for ctlseqs.ms and xterm.man (patch by Werner Lemberg\n    &lt;wl@gnu.org&gt;).</li>\n\n    <li>add check for monochrome display, disabling colorMode in\n    that case (fixes Debian #134130).</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>Fix some xterm build warnings on *BSD (patch by David\n        Dawes).</li>\n\n        <li>Only use SA_RESTART in xterm when it's available (patch\n        by Frank Liu).</li>\n\n        <li>Fix incorrect code in signal handlers in most of the\n        clients, xterm and xdm not done yet (patch by Matthieu\n        Herrb).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_165\" id=\"xterm_165\">Patch #165 - 2002/1/5 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>modify <code>uxterm</code> script to strip encoding part\n    from environment variable before adding \".UTF-8\" (based on\n    Debian #125947, but using a more portable solution).</li>\n\n    <li>add an assignment statement in VTInitialize() to make\n    <code>awaitInput</code> resource work.</li>\n\n    <li>use new macros init_Bres(), etc., in VTInitialize() to add\n    trace of the initialization of resources.</li>\n\n    <li>modify checks for $LC_ALL, related environment variables to\n    ensure the resulting strings are nonempty (report by Markus\n    Kuhn).</li>\n\n    <li>add an ifdef in charproc.c for num_ptrs variable in case\n    all configure options are disabled.</li>\n\n    <li>modify definition of getXtermBackground() to avoid negative\n    array index warning on Tru64 (report by Jeremie Petit).</li>\n\n    <li>improve fix from patch #165 (still Debian #117184, report\n    by Matt Zimmerman &lt;mdz@debian.org&gt;)</li>\n\n    <li>correct install rule for uxterm in Makefile.in, to handle\n    the case where building in a different directory than xterm's\n    source (patch by Paul Gilmartin).</li>\n\n    <li>documented ANSI.SYS-style cursor save/restore escape\n    sequences in ctlseqs.ms, which are in xterm since X11R5.</li>\n\n    <li>correct two entries in the default charClass table, which\n    did not follow the manpage comment about the character number\n    corresponding to the class (patch by Marc Bevand\n    &lt;bevand_m@epita.fr&gt;).</li>\n\n    <li>fix a couple of typos in comments in the app-defaults files\n    (David Krause &lt;xfree86@davidkrause.com&gt;).</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>update language of copyrights in some files to reflect\n        the fact that they were reassigned from X Consortium to The\n        Open Group in 1998. Note that this xterm source is derived\n        from the 1996 version from X Consortium, does not\n        incorporate changes made by X Consortium or The Open Group\n        after that date, hence we do not add The Open Group's 1998\n        copyright date to related files.</li>\n\n        <li>save/restore <code>errno</code> in signal catcher\n        (patch by Matthieu Herrb).</li>\n\n        <li>modify UXTerm.ad's font5 resource so that xterm can\n        display double width characters using a font distributed\n        with XFree86 (Tomohiro Kubota).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_164\" id=\"xterm_164\">Patch #164 - 2001/11/13 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>correct a case where <code>ptyInitialErase</code> and\n    <code>backarrowKeyIsErase</code> resources combine to set\n    <code>DECBKM</code> mode, but a <code>reset</code> command\n    would not reset xterm to that state, making the erase character\n    revert to ^H (Debian #117184)</li>\n  </ul>\n\n  <h1><a name=\"xterm_163\" id=\"xterm_163\">Patch #163 - 2001/11/04 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>correct ifdef's for <code>__QNX__</code> and\n    <code>USE_SYSV_PGRP</code> in main.c call to\n    <code>tcsetpgrp</code>, which broke bash behavior around\n    <a href=\"#xterm_140\">patch #140</a> (report/patch by Frank Liu\n    &lt;fliu@mail.vipstage.com&gt;).</li>\n\n    <li>modify trace.c to fix missing definition of GCC_UNUSED for\n    compilers other than gcc when configured for trace code\n    (report/patch by Paul Gilmartin).</li>\n\n    <li>change format in TraceOptions() to use long rather than\n    int, since the latter could lose precision on 64-bit machines\n    (report/patch by Nelson Beebe).</li>\n\n    <li>modify xterm manual page and minstall.sh to allow imake\n    rules to define location of app-defaults directory (Debian\n    #87611).</li>\n\n    <li>review/update list of conflicting preprocessor symbols to\n    remove from $CPPFLAGS at the end of the configure script. In\n    particular, this allows one to configure xterm without the\n    utempter library on Redhat 7.1 (report/patch by Adam\n    Sulmicki).</li>\n  </ul>\n\n  <h1><a name=\"xterm_162\" id=\"xterm_162\">Patch #162 - 2001/10/23 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>correct logic that processes <code>-class</code> option, so\n    that a following <code>-e</code> option is handled (Debian\n    #116297).</li>\n\n    <li>improve options-decoding to allow <code>-version</code> and\n    <code>-help</code> options to be combined (Debian\n    #110226).</li>\n\n    <li>add a 10 millisecond delay in event loop when processing\n    <code>-hold</code> option, to avoid using too much CPU time\n    (Debian #116213).</li>\n\n    <li>prefix final program execution in <code>uxterm</code> with\n    \"exec\" to avoid a useless shell hanging around (Christian\n    Weisgerber).</li>\n  </ul>\n\n  <h1><a name=\"xterm_161\" id=\"xterm_161\">Patch #161 - 2001/10/10 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>modify logic that resets keypad application mode to avoid\n    doing this if there is no modifier associated with the Num_Lock\n    keysym (report by John E Davis &lt;davis@space.mit.edu&gt; and\n    Alan W Irwin &lt;irwin@beluga.phys.uvic.ca&gt;).</li>\n\n    <li>add built-in translation for Control/KP_Separator to\n    KP_Subtract, to accommodate users who wish to use xmodmap to\n    reassign the top row of the numeric keypad.</li>\n\n    <li>correct Imakefile install-rule for <code>uxname</code>\n    script (reported by Nam SungHyun &lt;namsh@lge.com&gt;).</li>\n\n    <li>resync with XFree86 CVS &ndash; correct typo in\n    <code>&lt;ncurses/term.h&gt;</code> ifdef.</li>\n  </ul>\n\n  <h1><a name=\"xterm_160\" id=\"xterm_160\">Patch #160 - 2001/10/7 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>modify logic in main.c (see <a href=\"#xterm_145\">patch\n    #145</a>) to avoid generating the same identifier, for example,\n    for /dev/tty1 and /dev/pts/1, which is used to denote an entry\n    in the utmp file (Debian bug report #84676), A similar fix was\n    also sent by Jerome Borsboom &lt;borsboom@westbrabant.net&gt;\n    in May, but I overlooked it when reviewing bug reports.</li>\n\n    <li>add configure check for <code>&lt;ncurses/term.h&gt;</code>\n    to get rid of hardcoded <code>__CYGWIN__</code> ifdef in\n    resize.c\n      <p>NOTE: The CYGWIN port should not be linking\n      <code>resize</code> with ncurses. It appears that the only\n      reason it is, is because both the ncurses and termcap ports\n      on that platform are badly misconfigured (essential pieces\n      have been removed, etc). Checking for\n      <code>&lt;ncurses/term.h&gt;</code> does not hurt anything,\n      since there are some correct installations that are set up\n      that way.</p>\n    </li>\n\n    <li>add a sample <code>uxterm</code> script, which uses the\n    <code>UXTerm</code> application defaults for UTF-8\n    environments.</li>\n\n    <li>undo change to xterm application defaults, since this\n    introduced an unnecessary incompatibility. The intended\n    functionality was already addressed by the <a href=\n    \"#xterm_141\">UXTerm</a> app-defaults file.</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>Modified xterm app default to use LFD fontnames instead\n        of old type (Michael Schroeder).</li>\n\n        <li>Fix xterm when XIM is disabled - caused a segfault\n        (Tomohiro Kubota).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_159\" id=\"xterm_159\">Patch #159 - 2001/9/19 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>remove an ifdef for <code>USE_HANDSHAKE</code> added in\n    patch #158 from the second <code>TIOCSSIZE</code> ioctl call in\n    the initialization code. Paul Gilmartin reports that for\n    Solaris 2.6 (sparc), stty does not show that xterm sets rows\n    and columns unless the second ioctl is executed.</li>\n\n    <li>correct treatment of empty parameter list for some OSC\n    strings (report by Sami Farin &lt;sfarin@ratol.fi&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_158\" id=\"xterm_158\">Patch #158 - 2001/9/8 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>augment key translations for scrollbar widget to ensure\n    that keystrokes intended for the text area are not lost if the\n    mouse pointer happens to fall on the scrollbar. This can\n    happen, for instance, if the user's <code>app-defaults</code>\n    or <code>.Xdefaults</code> file contains a translations\n    resource, though it may also happen through unrelated resource\n    settings: probably a bug in libXt (reported by Paul Fox\n    &lt;pgf@foxharp.boston.ma.us&gt; and Dmitry Yu. Bolkhovityanov\n    &lt;D.Yu.Bolkhovityanov@inp.nsk.su&gt;).</li>\n\n    <li>widen ifdef's in xterm.h to define\n    <code>__EXTENSIONS__</code> on Solaris, for compilers other\n    than gcc. This was added along <code>_POSIX_C_SOURCE</code>\n    with in <a href=\"#xterm_151\">patch #151</a>, but is not\n    sufficient since Sun's compiler does not define\n    <code>__STDC__</code> by default (report by Matthias Scheler\n    &lt;tron@zhadum.de&gt;).</li>\n\n    <li>modify xterm to obtain the closest matching color if an\n    exact color is not available, e.g., on 8-bit displays (patch by\n    Stephen P Wall)</li>\n\n    <li>implement \"OverTheSpot\" preedit type of XIM input (patch by\n    Tomohiro Kubota):\n      <ul>\n        <li>This preedit type is a reasonable compromise between\n        simpleness of implementation and usefulness. \"Root\" preedit\n        type is easy to implement but not useful; \"OnTheSpot\"\n        preedit type is the best in the point of view of user\n        interface but very complex. And more, \"OverTheSpot\" is the\n        preedit type which the most XIM servers support. Thus, to\n        achieve reasonable usability, support of \"OverTheSpot\"\n        preedit type is needed.</li>\n\n        <li>In \"OverTheSpot\" preedit type, the preedit\n        (preconversion) string is displayed at the position of the\n        cursor. On the other hand, it is XIM server's\n        responsibility to display the preedit string. Thus, it is\n        needed for XIM client (here XTerm) to inform the XIM server\n        of the cursor position. And more, to achieve good visual\n        proportion, preedit string must be written using proper\n        font. Thus, it is XIM client's responsibility to inform the\n        XIM server of the proper font. The font must be supplied by\n        \"fontset\". Fontset is a set of fonts with charsets which\n        are specified by the current locale. Since XTerm uses\n        ISO10646 fonts regardless of the current locale, the fonts\n        for XIM must be prepared separately. It is difficult to\n        prepare fonts which are similar to XTerm font. Thus, my\n        patch uses a simple way - the default font is \"*\" which\n        matches every fonts and X library will automatically choose\n        fonts with proper charsets. I added \"-fx\" command option\n        and \"ximFont\" resource to override this default font\n        setting.</li>\n\n        <li>changed the definition of \"OverTheSpot\" preedit type\n        from XIMPreeditPosition|XIMStatusArea to\n        XIMPreeditPosition|XIMStatusNothing. This matches the\n        behavior of other programs such as Rxvt, Kterm, Gedit.</li>\n\n        <li>A tiny XIM bugfix is also included. By calling\n        XSetLocaleModifiers() with parameter of \"\", it can consider\n        XMODIFIERS environmental variable which is a standard way\n        for users to specify XIM server to be used.</li>\n      </ul>\n    </li>\n\n    <li>adjust configure script to accommodate repackaging of\n    keysym2ucs.c as include-file for xutf8.c (patch by Tomohiro\n    Kubota).</li>\n\n    <li>add the <code>UXTerm</code> app-defaults file to makefile\n    install rules (request by Juliusz Chroboczek).</li>\n\n    <li>correct logic in <code>get_termcap()</code>, which returned\n    false if the <code>tgetent()</code> call indicated that xterm\n    was linked with terminfo. Although the <code>$TERMCAP</code>\n    variable cannot be adjusted in this case, xterm still needs\n    information from this call to extract data to initialize the\n    erase-mode when the <code>ptyInitialErase</code> resource is\n    false.</li>\n\n    <li>modify <code>ScrollbarReverseVideo()</code> function to\n    cache the original border color, so it can restore that when an\n    application flashes the screen (Bugzilla #38872).</li>\n\n    <li>resync with XFree86 CVS\n      <ul>\n        <li>remove ifdef's for X_NOT_STDC_ENV (patch by David\n        Dawes).</li>\n\n        <li>add Cygwin to special errno handling case in ptydata.c\n        (Alan Hourihane)</li>\n\n        <li>set screen size earlier in initialization, to address a\n        race with window manager resizing its clients (Keith\n        Packard).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_157\" id=\"xterm_157\">Patch #157 - 2001/6/18 -\n  XFree86 4.1.0</a></h1>\n\n  <ul>\n    <li>clean up button.c and input.c (patch by Juliusz\n    Chroboczek). The basic idea is to use a single set of APIs in\n    the XTerm core, and put a set of workarounds in a separate\n    file. As you will notice, this drastically simplifies parts of\n    the code; in particular, the only remaining ifdefs related to\n    the differences between Xutf8 and legacy systems are related to\n    the selection provider logic. This defines two new files,\n    xutf8.h and xutf8.c, provide some half-hearted but fully\n    portable emulation for the three Xutf8* functions that XTerm\n    uses. Putting these in a separate file will allow people to\n    experiment with more complex versions without making the core\n    of XTerm more difficult to maintain. The functionality of the\n    emulation is as follows.\n      <ul>\n        <li>Xutf8TextListToTextProperty fully handles XStringstyle\n        and XUTF8StringStyle. It will only generate STRING for\n        XStdICCTextStyle, and will only generate Latin-1 in\n        XCompoundTextStyle (but label it as COMPOUND_TEXT, as the\n        spec requires). (I have hesitated to make this function\n        fail for XStdICCTextStyle and XCompoundTextStyle; this\n        might be a smart thing to do, in the hope that the\n        selection requestor will try UTF8_STRING afterwards;\n        opinions?)</li>\n\n        <li>Xutf8TextPropertyToTextList fully handles STRING and\n        UTF8_STRING. It systematically fails for\n        COMPOUND_TEXT.</li>\n\n        <li>Xutf8LookupString will properly handle single-keystroke\n        input for the keysyms covered by Markus' keysym2ucs\n        function. It will not handle either compose key input or\n        external input methods.</li>\n      </ul>\n    </li>\n\n    <li>add an ifdef for <code>SunXK_F36</code>, used in\n    <code>xtermcapKeycode()</code> (patch by Mark Waggoner\n    &lt;waggoner@ichips.intel.com&gt;).</li>\n\n    <li>modify check for login name to try <code>getlogin()</code>\n    and $LOGNAME, $USER environment variables to detect if the user\n    has logged in under an alias, i.e., an account with the same\n    user id but a different name (Debian bug report #70084).</li>\n\n    <li>add resource <code>tiXtraScroll</code>, which can be used\n    to preserve the screen contents in the scrollback rather than\n    erasing it when starting a fullscreen application such as\n    <code>vi</code> (patch by Ken Martin\n    &lt;fletcher@catsreach.org&gt;).</li>\n\n    <li>two patches by Denis Zaitsev &lt;zzz@cd-club.ru&gt;:\n      <ul>\n        <li>added <code>forceBoxChars</code> resource to control\n        the \"line-drawing characters\" option.</li>\n\n        <li>added <code>freeBoldBox</code> resource, which, when\n        set true, suppresses check in\n        <code>same_font_size()</code>, so xterm does not attempt to\n        ensure that the bold font is the same size as the normal\n        font.</li>\n      </ul>\n    </li>\n\n    <li>change the color class for ANSI colors and similar ones\n    such as bold-color, etc., to follow the convention that the\n    classname is the instance name with a leading capital (e.g.,\n    <code>color0</code> and <code>Color0</code> rather than\n    <code>color0</code> and <code>Foreground</code>). There was\n    little use for Foreground as a class other than to create\n    occasional confusion and bug reports, most recently by Nelson\n    Beebe who reports that it disables colors in xterm but not on\n    Linux, which is probably due to a difference in resource\n    evaluation order. A configure script option\n    (--disable-color-class) is provided for anyone who did use the\n    older behavior.</li>\n\n    <li>fix a signal-handling bug. When running xterm with\n    <code>ksh</code> or similar shell such as bash 2.05, xterm will\n    hang and not respond to keystrokes after the user types\n    <code>suspend</code>. Additionally the popup menus do not\n    respond, so it is not possible to send SIGCONT to the shell.\n    What is happening is that the shell is sending itself SIGSTOP,\n    and it is being stopped. Per specification it also means that\n    the operating system is sending SIGCHLD to parent to the bash\n    (XTERM). Now the issue is that xterm assumes it cannot happen\n    and it expects to receive SIGCHLD only upon\n    <em>termination</em> of its children. This causes a deadlock\n    with xterm waiting for the child to die, and the child waiting\n    for SIGCONT. (report/patch by Adam Sulmicki), analysis/testing\n    by Sven Mascheck\n    &lt;sven.mascheck@student.uni-ulm.de&gt;).</li>\n\n    <li>correct some inconsistent checks for\n    <code>XtReleaseGC()</code> calls in\n    <code>xtermLoadFont()</code> (patch by Nam SungHyun\n    &lt;namsh@lge.com&gt;).</li>\n\n    <li>updated wcwidth.c and keysym2ucs.c to versions dated\n    2001/1/12 and 2001/4/18, respectively from\n    http://www.cl.cam.ac.uk/~mgk25/ucs/</li>\n\n    <li>correction to change from <a href=\"#xterm_90\">patch\n    #90</a>, which was intended to reset the saved cursor position\n    for normal/alternate screens on a soft reset, but actually\n    wiped out all of the saved cursor information. Just reset the\n    saved position for the current screen (report by Michael\n    Schroeder).</li>\n\n    <li>modify ShowCursor() and HideCursor() so that if the cursor\n    points to the second part of a wide character, make the\n    show/hide operate on the first position of the wide character\n    (patch by Sven Verdoolaege).</li>\n\n    <li>scrolling in the alternate screen just before switching\n    back to the main screen can cause extra blank lines to be\n    inserted into the scrollback buffer (patch by Paul Vojta\n    &lt;vojta@math.berkeley.edu&gt;).</li>\n\n    <li>resync with XFree86 4.1.0:\n      <ul>\n        <li>Use TermcapLibrary as -lncurses instead of -ltermcap,\n        fixes problem building xterm/resize on Cygwin/XFree86\n        (Harold Hunt).</li>\n\n        <li>Install xterm.termcap and xterm.terminfo when\n        installing xterm (Torrey T. Lyons).</li>\n\n        <li>Fix some build issues on Cygwin/XFree86 (Suhaib\n        Siddiqi).</li>\n\n        <li>Define CBAUD, when it's missing in xterm, on LynxOS\n        (Stuart Lissaman).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_156\" id=\"xterm_156\">Patch #156 - 2001/4/28 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>change order of selection-target types to make 8-bit xterm\n    prefer UTF8_STRING to COMPOUND_TEXT (patch by Juliusz\n    Chroboczek).</li>\n\n    <li>document <code>-fa</code>, <code>-fs</code> command-line\n    options and <code>faceName</code>, <code>faceSize</code>\n    resources which are used by the freetype library support.</li>\n\n    <li>if configure script finds freetype libraries, but imake\n    definitions do not have the XRENDERFONT definition, define it\n    anyway.</li>\n\n    <li>modify configure script check for freetype libraries to\n    include <code>&lt;Xlib.h&gt;</code>, since an older version of\n    the related headers relies on this (patch by Adam\n    Sulmicki).</li>\n  </ul>\n\n  <h1><a name=\"xterm_155\" id=\"xterm_155\">Patch #155 - 2001/4/20 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>correct return type of in_put() from <a href=\n    \"#xterm_155\">patch #153</a> changes, which left it not wide\n    enough for UTF-8 (patch by Bruno Haible).</li>\n  </ul>\n\n  <h1><a name=\"xterm_154\" id=\"xterm_154\">Patch #154 - 2001/4/11 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>undo check for return value from <code>pututline</code>\n    (used for debugging) since that function does not return a\n    value on Slackware 3.6.</li>\n\n    <li>correct length in ScreenWrite, when rendering invisible\n    text (patch by Sven Verdoolaege &lt;skimo@kotnet.org&gt;).</li>\n\n    <li>fixes/improvements for the <code>i18nSelection</code>\n    resource from patch #153, by Bruno Haible:\n      <ul>\n        <li>add missing initialization for\n        <code>i18nSelection</code> resource.</li>\n\n        <li>split-out the non-ICCM aspect of the\n        <code>i18nSelection</code> resource as a new resource,\n        <code>brokenSelections</code>.</li>\n      </ul>\n    </li>\n\n    <li>add configure check for <code>&lt;time.h&gt;</code> and\n    <code>&lt;sys/time.h&gt;</code>, to allow for Unixware&nbsp;7,\n    which requires both. If the configure script is not used, only\n    <code>&lt;time.h&gt;</code> will be included as before (report\n    by Thanh Ma).</li>\n\n    <li>fix redefinition of <code>dup2</code>,\n    <code>getutent</code>, <code>getutid</code>,\n    <code>getutline</code> and <code>sleep</code> functions on\n    Unixware&nbsp;7 (report by Thanh Ma\n    &lt;Thanh.Ma@casi-rusco.com&gt;)</li>\n\n    <li>add a fall-back definition for <code>__hpux</code>, which\n    is apparently not defined in some compilers on HPUX 11.0\n    (reported by Clint Olsen).</li>\n\n    <li>change VAL_INITIAL_ERASE, which is used as a fallback for\n    the <code>\"kb\"</code> termcap string to 8, since that matches\n    the xterm terminal description (request by Alexander V\n    Lukyanov).</li>\n\n    <li>correct an off-by-one in <code>ClearInLine</code>, which\n    caused the erase-characters (ECH) control to display\n    incorrectly (patch by Alexander V Lukyanov).</li>\n\n    <li>correct escape sequences shown in terminfo for shifted\n    editing keys. The modifier code was for the control key rather\n    than the shift key.</li>\n  </ul>\n\n  <h1><a name=\"xterm_153\" id=\"xterm_153\">Patch #153 - 2001/3/29 -\n  XFree86 4.0.3</a></h1>\n\n  <ul>\n    <li>increase PTYCHARLEN to 8 for os390, add some debugging\n    traces for UTMP functions (patch by Paul Gilmartin).</li>\n\n    <li>correct an misplaced brace in\n    <code>SelectionReceived()</code> (patch by Bruno Haible).</li>\n\n    <li>correct an assignment dropped in\n    <code>SelectionReceived()</code> which made it not compile for\n    wide-characters combined with debug traces.</li>\n\n    <li>correct typo, clarify description of 88- and 256-color\n    controls (report by Bram Moolenaar).</li>\n\n    <li>correct a typo in ctlseqs.ms which caused DEC Locator\n    control sequences using single quote \"'\" display grave \"`\"\n    instead (reported by Paul Williams, apparently in patch\n    #114).</li>\n  </ul>\n\n  <h1><a name=\"xterm_152\" id=\"xterm_152\">Patch #152 - 2001/3/13 -\n  XFree86 4.0.2</a></h1>\n\n  <ul>\n    <li>correct index in inner loop in <code>VTInitI18N()</code>\n    from patch #151 changes, which resulted in infinite loop under\n    some conditions (report/analysis by Paul Gilmartin).</li>\n\n    <li>remove spurious \"%|\" from terminfo sgr capabilities\n    (report/analysis by Adam M Costello, Debian #89222).</li>\n\n    <li>add shell script to adjust list of dynamic libraries linked\n    by <code>resize</code> when building with the standalone\n    configure script. Otherwise it uses the same list as for xterm,\n    which is excessive.</li>\n\n    <li>fix a few compiler warnings reported by the 20010305 gcc\n    snapshot.</li>\n  </ul>\n\n  <h1><a name=\"xterm_151\" id=\"xterm_151\">Patch #151 - 2001/3/10 -\n  XFree86 4.0.2</a></h1>\n\n  <ul>\n    <li>alter the behaviour of selections in XTerm (patch by\n    Juliusz Chroboczek). It is believed to follow the ICCCM +\n    UTF8_STRING to the letter, both in UTF-8 and in eight-bit mode.\n    From his description:\n      <ul>\n        <li>When compiled against XFree86 4.0.2, the patched XTerm\n        will make the selection available as COMPOUND_TEXT, STRING\n        or UTF8_STRING in both modes. It will request selections in\n        the following order:\n          <p>UTF-8 mode: UTF8_STRING, TEXT, COMPOUND_TEXT,\n          STRING.<br>\n          eight-bit mode: TEXT, COMPOUND_TEXT, UTF8_STRING,\n          STRING.</p>\n        </li>\n\n        <li>When compiled against an earlier version of XFree86 (or\n        compiled with OPT_UTF8_API=0), it will still obey the\n        ICCCM, but will neither request nor provide UTF8_STRING in\n        eight-bit mode, and neither TEXT nor COMPOUND_TEXT in UTF-8\n        mode.</li>\n\n        <li>For compatibility with previous versions of XTerm, a\n        resource <code>i18nSelections</code> is provided, please\n        see the manpage for details. However, due to an unexpected\n        combination of ICCCM extensions by various bits and pieces\n        of the libraries, interacting with previous versions of\n        XTerm will work in many locales even without this flag.\n        (Please do not set this resource to true by default, as\n        this would violate the ICCCM.)</li>\n      </ul>\n    </li>\n\n    <li>improved error checking/reporting in VTInitI18N(), ensuring\n    that lack of input method styles is treated distinctly from a\n    mismatch.</li>\n\n    <li>remove an incorrect ifdef from patch #141 which suppressed\n    overstriking to simulate bold font when xterm was compiled to\n    support wide characters (report/analysis by Adam M Costello\n    &lt;amc@cs.berkeley.edu&gt;, Debian #76404, Debian\n    #77575).</li>\n\n    <li>modify <code>RequestResize()</code> function to\n    save/restore window manager hints. Its call to\n    <code>XtMakeResizeRequest()</code> had the undesirable\n    side-effect of clearing window manager hints, e.g., when\n    switching to 132-columns via DECCOLM escape sequence. Window\n    manager hints make it simple to resize xterm in terms of\n    character cells rather than pixels (reports by Christian\n    Weisgerber, Debian #79939).\n      <p>This applies to the normal configuration. When built with\n      toolbar support, the hints are applied to a different widget\n      level (more work will be needed to make hints work with the\n      toolbar).</p>\n    </li>\n\n    <li>fix a redefinition warning for resize.c on OpenBSD (patch\n    by Christian Weisgerber).</li>\n\n    <li>change resource corresponding to <code>-T</code> option to\n    match Xt library's <code>-title</code>, i.e.,\n    <code>.title</code> rather than <code>*title</code> so the\n    command-line options are interchangeable as documented (Debian\n    bug report #68843).</li>\n\n    <li>add script used from autoconf'd makefile for installing\n    manpages, since recent XFree86 changing the way section numbers\n    are represented makes the install dependent on extra\n    scripts.</li>\n\n    <li>add configure check for freetype libraries and configure\n    option --disable-freetype to override this feature.</li>\n\n    <li>modify some configure script macros to avoid using\n    changequote(), which has been rendered useless in the latest\n    autoconf alpha 2.49c</li>\n\n    <li>update config.guess, config.sub to 2001-2-13</li>\n\n    <li>remove redundant/contradictory __CYGWIN__ definitions from\n    resize.c</li>\n\n    <li>correct manpage typo introduced by X11R6.5 resync.</li>\n  </ul>\n\n  <p>Changes from XFree86 4.0.2:</p>\n\n  <ul>\n    <li>add definition of <code>_POSIX_C_SOURCE</code> for Solaris\n    to make this compile with <code>gcc -ansi -pedantic</code>\n    (report by &lt;mark@zang.com&gt;.</li>\n  </ul>\n\n  <h1><a name=\"xterm_150\" id=\"xterm_150\">Patch #150 - 2000/12/29 -\n  XFree86 4.0.2</a></h1>\n\n  <ul>\n    <li>move the binding for shifted keypad plus/minus, which\n    invokes the <code>larger-vt-font()</code> and\n    <code>smaller-vt-font()</code> actions, respectively, into the\n    translations resource (suggested by Marius Gedminas\n    &lt;mgedmin@puni.osf.lt&gt;).</li>\n\n    <li>modify configure script to support the\n    <code>--program-prefix</code>, <code>--program-suffix</code>\n    and <code>--program-transform-name</code> options (request by\n    Alison Winters &lt;alison@mirrabooka.com&gt;).</li>\n\n    <li>fixes for wide/combining characters (Robert Brady):\n      <ul>\n        <li>fix a scrolling / combining characters display\n        anomaly</li>\n\n        <li>fix a problem with double-width characters where if the\n        primary font had no box-drawing characters, the right hand\n        half of double-width characters was erased (reported by Yao\n        Zhang &lt;yzhang@sharemedia.com&gt;).</li>\n\n        <li>fix special case of null byte for key handling in UTF-8\n        locales.</li>\n      </ul>\n    </li>\n\n    <li>modify logic that compares sizes of normal and bold fonts\n    to be more forgiving of the font server's choice of bold font\n    which must match the normal font's size. Now\n    <code>same_font_size()</code> compares the height of the fonts\n    rather than individually ascent and descent, and allows the\n    bold font to be one pixel smaller than the normal font\n    (addresses a report by Alan Citterman &lt;alan@mticket.com&gt;,\n    who says that something in patches #146 to #148 made xterm more\n    likely to overstrike bold fonts, and indirectly Debian bug\n    report #76404, which reports the opposite).</li>\n\n    <li>make configure script use $CFLAGS and $CPPFLAGS\n    consistently, including removing a chunk from configure.in\n    which attempted to save/restore $CPPFLAGS while processing\n    value set by the --x-includes option, but lost values set in an\n    intervening AC_CHECK_HEADERS. This change modifies macros\n    CF_ADD_CFLAGS, CF_ANSI_CC_CHECK and CF_X_TOOLKIT, as well as\n    removing variables IMAKE_CFLAGS and X_CFLAGS from the generated\n    makefile (the AC_CHECK_HEADERS problem was reported by Albert\n    Chin-A-Young &lt;china@thewrittenword.com&lt;).</li>\n\n    <li>correct a comparison in SELECTWORD case of ComputeSelect(),\n    which resulted in a word-selection wrapping past the first\n    column without checking the first column's character class\n    (reported by Christian Lacunza\n    &lt;celacunza@netscape.net&gt;</li>\n\n    <li>correct a logic in UTF-8 mode for selecting double-width\n    characters; a combining character was omitted (patch by Markus\n    Kuhn).</li>\n\n    <li>add feature to pop (raise) window when a bell is received\n    (patch by Gael Roualland\n    &lt;gael.roualland@dial.oleane.com&gt;).</li>\n\n    <li>add __NetBSD__ and __OpenBSD__ to special-case in\n    xterm_io.h for USE_POSIX_TERMIOS definition (patch by Christian\n    Weisgerber).</li>\n\n    <li>move special-case HPUX include for &lt;sys/bsdtty.h&gt; to\n    xterm_io.h to define TIOCSLTC, making HAS_LTCHARS defined for\n    HPUX 10.20 (report by Bruno Betro).</li>\n  </ul>\n\n  <h1><a name=\"xterm_149\" id=\"xterm_149\">Patch #149 - 2000/12/6 -\n  XFree86 4.0.1h</a></h1>\n\n  <ul>\n    <li>restructured includes for <code>termios.h</code>,\n    <code>termio.h</code> and related definitions for main.c,\n    os2main.c, screen.c and resize.c so they will share equivalent\n    definitions in a new header <code>xterm_io.h</code>. This is\n    intended to solve some problems mainly for HPUX which appear to\n    arise from inconsistent definitions for SIGWINCH- and\n    HAS_LTCHARS-related symbols (reports by Bruno Betro, Jeremie\n    Petit and Clint Olsen).</li>\n\n    <li>improve usability of double-width fonts by allowing normal\n    fonts to be given as double-width (from a patch by Fabrice\n    Bellard &lt;bellard@email.enst.fr&gt;).</li>\n\n    <li>correct a few compiler warnings in TRACE() macros for\n    signed/unsigned variable differences (reported by Clint\n    Olsen).</li>\n\n    <li>make configure script use $CFLAGS and $CPPFLAGS more\n    consistently, i.e., by using CF_ADD_CFLAGS in CF_ANSI_CC\n    macro.</li>\n\n    <li>expanded description of environment variables in\n    manual-page.</li>\n\n    <li>modify OPT_TCAP_QUERY feature to always return the termcap\n    or terminfo capability string in the response, and to\n    read/write the names in hexadecimal form to allow for the\n    special case of termcap's <code>k;</code> name (patch by Bram\n    Moolenaar).</li>\n\n    <li>add OPT_SAME_NAME and OPT_TCAP_QUERY to xtermcfg.hin, so\n    the corresponding configure options work (patch by Bram\n    Moolenaar).</li>\n\n    <li>resync with XFree86 4.0.1g:\n      <ul>\n        <li>Rewrite Xft library for Render extension/core text and\n        font management Change xterm to use new interface (Keith\n        Packard).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_148\" id=\"xterm_148\">Patch #148 - 2000/10/31 -\n  XFree86 4.0.1d</a></h1>\n\n  <ul>\n    <li>document logfile options in man-page.</li>\n\n    <li>correct spelling of <code>-samename</code> option in help\n    message.</li>\n\n    <li>add configure script option\n    <code>--enable-tcap-query</code> (request by Bram\n    Moolenaar).</li>\n\n    <li>add a \"Co\" or \"colors\" entry to the OPT_TCAP_QUERY feature\n    (patch by Bram Moolenaar).</li>\n\n    <li>patch by Kiyokazu Suto &lt;suto@ks-and-ks.ne.jp&gt;:\n      <ul>\n        <li>add support for bold font for double width characters.\n        The font name may be specified with the command line option\n        <code>-fwb</code> or with resource\n        <code>wideBoldFont</code> (class\n        <code>WideBoldFont</code>).</li>\n\n        <li>correct underlining of double width character string,\n        which was drawn only half width.</li>\n\n        <li>correct binary search of precomposed character table,\n        which may return wrong result when <code>int</code> is just\n        32 bits.</li>\n      </ul>\n    </li>\n\n    <li>some changes to align terminfo with ncurses 5.2:\n      <ul>\n        <li>remove xtermm description, retaining xterm-mono since\n        the former conflicts with ncurses.</li>\n\n        <li>modify initialization and reset strings to avoid\n        putting the save/restore cursor operations bracketing\n        changes to video attributes, since the changes could be\n        lost when the cursor is restored. This affects xterm-r6 and\n        xterm-8bit (the xterm-xfree86 entry uses the soft-reset\n        feature which resets scrolling margins and origin mode\n        without requiring us to save/restore the cursor\n        position).</li>\n\n        <li>make a few entries explicitly inherit from\n        xterm-xfree86 rather than xterm: xterm-rep, xterm-xmc,\n        xterm-nrc</li>\n      </ul>\n    </li>\n\n    <li>ensure that sign-extension does not affect\n    <code>ctype</code> macros by using <code>CharOf()</code> macro\n    to coerce the parameter to an unsigned char.</li>\n\n    <li>resync with XFree86 4.0.1d:\n      <ul>\n        <li>Add primitive support in xterm for Xft based fonts\n        (Keith Packard). The changes are ifdef'd with\n        <code>-DXRENDERFONT</code>.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_147\" id=\"xterm_147\">Patch #147 - 2000/10/26 -\n  XFree86 4.0.1c</a></h1>\n\n  <ul>\n    <li>correct implementation of <code>ptyInitialErase</code>: the\n    value assigned to <code>initial_erase</code> was for the\n    control terminal, which is correct as far as it goes. But there\n    was no following test for the pseudo-terminal's erase value,\n    which would overwrite the default obtained from the control\n    terminal (reported by Christian Weisgerber\n    &lt;naddy@mips.inka.de&gt;).</li>\n\n    <li>modify check for printable-characters in OSC string to use\n    xterm's ansi_table rather than isprint() macro, to isolate this\n    check from locale settings. This fixes a problem using 8-bit\n    characters to set the title (reported by Ricardas Cepas\n    &lt;rch@richard.eu.org&gt;).</li>\n\n    <li>modify sample scripts to check for printf before print,\n    since the latter is not as well standardized (e.g., on\n    Linux).</li>\n\n    <li>updated config.sub, config.guess to reflect changes on\n    subversions.gnu.org</li>\n  </ul>\n\n  <h1><a name=\"xterm_146\" id=\"xterm_146\">Patch #146 - 2000/9/12 -\n  XFree86 4.0.1c</a></h1>\n\n  <ul>\n    <li>correct two instances overlooked from patch #141 which\n    assumed UTF-8 mode without checking, causing a core dump in\n    non-UTF-8 mode (one instance was reported by Tommi Virtanen\n    &lt;tv@debian.org&gt;).</li>\n\n    <li>correct a problem selecting from the scrollback buffer in\n    UTF-8 mode by changing remaining getXtermCell() calls to\n    XTERM_CELL() as in the non-UTF-8 cases (report by Markus Kuhn,\n    patch by Robert Brady).</li>\n  </ul>\n\n  <h1><a name=\"xterm_145\" id=\"xterm_145\">Patch #145 - 2000/9/11 -\n  XFree86 4.0.1c</a></h1>\n\n  <ul>\n    <li>changes for UTF-8 configuration (Robert Brady):\n      <ul>\n        <li>doublewide characters don't lose their accents when the\n        cursor moves onto or from them (a visual bug)</li>\n\n        <li>fix logic in addXtermCombining, which mean that if the\n        low byte of a cell's first combining char was 0, a\n        following combining char would go into combining slot 1,\n        not 2.</li>\n\n        <li>modify logic for cut-buffers so UTF-8 data is first\n        converted to Latin1.</li>\n\n        <li>collapse surrogates, 0xfffe, 0xffff to UCS_REPL.</li>\n\n        <li>modify to allow xterm to to show combining characters\n        attached to doublewidth characters.</li>\n\n        <li>correct bug in linewrap with -u8 option (reported by\n        Andreas Koenig &lt;andreas.koenig@anima.de&gt;).</li>\n      </ul>\n    </li>\n\n    <li>several changes to PTY logic (based on request by Tim Ryan\n    &lt;timryan@nortelnetworks.com&gt;).\n      <ul>\n        <li>modify treatment of <code>-S</code> option to to make\n        it work with Unix98 PTY's.</li>\n\n        <li>restore sense of IsPts flag in <code>get_pty()</code>,\n        which was lost in Unix98 changes.</li>\n\n        <li>use new functions <code>my_pty_id()</code> and\n        <code>my_pty_name()</code> to simplify/fix strings used for\n        utmp, wtmp identifiers.</li>\n\n        <li>simplify <code>get_pty()</code> function, making it\n        have a single return point so its inputs/outputs can be\n        identified.</li>\n      </ul>\n    </li>\n\n    <li>update config.guess and config.sub and scripts to my\n    20000819 patch, adding cases for OS/2 EMX.</li>\n\n    <li>add special case for os390 compiler options to configure\n    script (patch by Paul Gilmartin)</li>\n\n    <li>fix some unused-variable compiler warnings (reported by\n    Zdenek Sekera).</li>\n\n    <li>split-out some string functions into xstrings.c, to use\n    them more consistently among main.c, os2main.c and\n    resize.c</li>\n\n    <li>align termcap/terminfo files, adding entries to make them\n    match. The termcap entries are necessarily less complete than\n    the terminfo, to fit within 1023 character per entry.</li>\n\n    <li>add terminfo entry for xterm-sco (SCO function keys).</li>\n\n    <li>modify <code>same_font_name()</code> to properly handle\n    wildcard introduced in <code>bold_font_name()</code>, making\n    comparison for different fonts succeed when only the normal\n    font is specified. This is needed to decide if 1-pixel offset\n    should be used. (reported in a newsgroup by Bart Oldeman\n    &lt;enbeo@enbeo.resnet.bris.ac.uk&gt;)</li>\n\n    <li>correct preprocessor line for OPT_WIDE_CHARS in\n    drawXtermText() from patch #141 which resulted in overstriking\n    for bold fonts not working.</li>\n\n    <li>correct Imakefile from 4.0.1c resync so UTF-8 modules are\n    in UTF8SRC, UTF8OBJ lists, allowing build without UTF-8\n    support.</li>\n  </ul>\n\n  <h1><a name=\"xterm_144\" id=\"xterm_144\">Patch #144 - 2000/8/23 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>remove a spurious assignment in ScreenWrite() from Robert\n    Brady's patch which set a null at the \"end\" of the buffer to be\n    written. That made the autowrap feature write a blank in the\n    first column for the non-UTF-8 configuration, rather than the\n    actual character (reported by Alan Citterman\n    &lt;alan@mticket.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_143\" id=\"xterm_143\">Patch #143 - 2000/8/19 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>add a check to ensure that <code>-class</code> command-line\n    option is not confused with <code>-c</code> (reported by Paul\n    Townsend &lt;aab@aab.cc.purdue.edu&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_142\" id=\"xterm_142\">Patch #142 - 2000/8/18 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>correction to precompose scripts, so 0061 + 0300 will now\n    be really be displayed as 00C0 (patch by Robert Brady\n    &lt;robert@susu.org.uk&gt;).</li>\n\n    <li>correct macro ClassSelects() in button.c, used to hide\n    ifdef's for OPT_WIDE_CHARS in patch #141 (reported by Andreas\n    Paul &lt;paula@informatik.tu-muenchen.de&gt;).</li>\n\n    <li>change wcwidth.h to include stddef.h rather than wchar.h,\n    which is not present on OpenBSD and FreeBSD (reported by\n    Christian Weisgerber and Bram Moolenaar).</li>\n\n    <li>newer config.sub and config.guess, from lynx\n    2.8.4dev.7</li>\n  </ul>\n\n  <h1><a name=\"xterm_141\" id=\"xterm_141\">Patch #141 - 2000/8/14 -\n  XFree86 4.0.1b</a></h1>\n\n  <ul>\n    <li>changes for doublewidth and combining characters, from\n    http://www.ecs.soton.ac.uk/~rwb197/xterm/ (integrated patch by\n    Robert Brady). In this context, doublewidth refers to 16-bit\n    character sets which may have glyphs occupying two cells.</li>\n\n    <li>add command-line option <code>-class</code>, which allows\n    one to override xterm's resource class. Also add resource file\n    <code>UXTerm.ad</code>, which simplifies using xterm for both\n    8-bit character sets and UTF-8.</li>\n\n    <li>fixes/improvements to OPT_TCAP_QUERY logic (patches by Bram\n    Moolenaar, Stephen P Wall).</li>\n  </ul>\n\n  <h1><a name=\"xterm_140\" id=\"xterm_140\">Patch #140 - 2000/7/23 -\n  XFree86 4.0.1</a></h1>\n\n  <ul>\n    <li>modify Makefile.in to circumvent GNU make's built-in suffix\n    rule for \".sh\" which confuses install.sh with the \"make\n    install\" target (report/patch by Paul Gilmartin).</li>\n\n    <li>implement an experimental control sequence which an\n    application may use to query the terminal to determine what\n    sequence of characters it would send for a given function key.\n    This is ifdef'd with OPT_TCAP_QUERY (request by Bram\n    Moolenaar).</li>\n\n    <li>add /usr/local to search path in CF_X_ATHENA configure\n    macro to build with Xaw3d on OpenBSD (patch by Christian\n    Weisgerber).</li>\n\n    <li>add missing <code>#undef HAVE_TERMIO_C_ISPEED</code> to\n    xtermcfg.hin, omitted in patch #133 fix for IRIX 6.5 baudrate\n    (report by Alain Filbois &lt;Alain.Filbois@loria.fr&gt;).</li>\n\n    <li>correct a few errors in xterm.man: font in filename example\n    for Tektronix emulation, and description of -nul/+nul\n    command-line options (report by Eric Fischer\n    &lt;enf@pobox.com&gt;).</li>\n\n    <li>update config.guess and config.sub, from tin and lynx.</li>\n  </ul>\n\n  <h1><a name=\"xterm_139\" id=\"xterm_139\">Patch #139 - 2000/6/17 -\n  XFree86 4.0d</a></h1>\n\n  <ul>\n    <li>back out change to <code>-name</code> command-line option,\n    restoring its original behavior (as noted by David Madore, the\n    correct interpretation of this option is the application\n    instance rather than the application class).</li>\n  </ul>\n\n  <h1><a name=\"xterm_138\" id=\"xterm_138\">Patch #138 - 2000/6/15 -\n  XFree86 4.0c</a></h1>\n\n  <ul>\n    <li>workaround for fixed fonts which are generated from Unicode\n    fonts: they omit glyphs for some xterm's less-used line-drawing\n    characters, which caused xterm to set a flag telling it to use\n    only its internal line-drawing characters. Do not set the flag\n    (it can be set from the popup menu), and xterm will generate\n    only the line-drawing glyphs which actually are missing.<br>\n    Otherwise, when used for large fonts, xterm may generate a\n    2-pixel wide line, which can leave dots on the screen.</li>\n\n    <li>restore first line of 256colres.pl, omitted in 4.0c\n    diffs.</li>\n  </ul>\n\n  <h1><a name=\"xterm_137\" id=\"xterm_137\">Patch #137 - 2000/6/10 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>make command-line <code>-name</code> option work as\n    documented. Apparently this was lost in X11R5 when coding to\n    use <code>XtAppInitialize</code>.</li>\n\n    <li>limit numeric parameters of control sequences to 65535 to\n    simplify checks for numeric overflow.</li>\n\n    <li>change index into UDK list to unsigned to guard against\n    numeric overflow making the index negative (Taneli Huuskonen\n    &lt;huuskone@cc.helsinki.fi&gt;).</li>\n\n    <li>change <code>sun&nbsp;function-keys</code> resource name to\n    <code>sunFunctionKeys</code> to work around redefinition of the\n    token <code>sun</code> by xrdb on Solaris. Similarly, renamed\n    resource <code>sun&nbsp;keyboard</code> to\n    <code>sunKeyboard</code> (Stephen P Wall).</li>\n\n    <li>change similar resource names for HP and SCO to avoid\n    potential conflict with xrdb symbols on other systems, as well\n    as for consistency.</li>\n\n    <li>reorganized the install targets in the autoconf'd Makefile,\n    adding install-app, install-bin, install-dirs and install-man.\n    The app-defaults class can be overridden by setting the make\n    variable 'CLASS', simplifying customization of xterm as a\n    Unicode terminal, e.g., CLASS=UXTerm.</li>\n\n    <li>add limit checks to <code>ClearInLine()</code>,\n    <code>ScrnInsertChar()</code>, <code>ScrnDeleteChar()</code> to\n    correct potential out-of-bounds indexing (prompted by Debian\n    bug report #64713, which reported a problem with ICH escape\n    sequences).</li>\n\n    <li>updates to config.sub and config.guess Kevin Buettner\n    &lt;kev@primenet.com&gt; for elf64_ia64 Bernd Kuemmerlen\n    &lt;bkuemmer@mevis.de&gt; and MacOS X.</li>\n\n    <li>for os390, add check for errno set to ENODEV on failure to\n    open /dev/tty when there is no controlling terminal (patch by\n    Paul Gilmartin).</li>\n\n    <li>fixes for building on Digital Unix 4.0 and AIX 4.2 (patch\n    from H Merijn Brand &lt;h.m.brand@hccnet.nl&gt;).</li>\n\n    <li>modify DECRQSS reply for DECSCL to additionally report if\n    the terminal is set for 8-bit controls.</li>\n  </ul>\n\n  <h1><a name=\"xterm_136\" id=\"xterm_136\">Patch #136 - 2000/6/3 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>add a resource (<code>limitResize</code>) limiting resizing\n    via the CSI 4 t and CSI 8 t sequences.</li>\n\n    <li>ignore out-of-bounds resize requests, i.e., where\n    sign-extension or truncation of the parameters would\n    occur.</li>\n  </ul>\n\n  <h1><a name=\"xterm_135\" id=\"xterm_135\">Patch #135 - 2000/5/29 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>remove code introduced in #134 which made some backgrounds\n    bold.</li>\n\n    <li>minor correction to format of updated $TERMCAP when adding\n    <code>kb</code> capability for <code>ptyInitialErase</code>\n    logic.</li>\n\n    <li>improved test for SVR4 definition.</li>\n  </ul>\n\n  <h1><a name=\"xterm_134\" id=\"xterm_134\">Patch #134 - 2000/5/28 -\n  XFree86 4.0b</a></h1>\n\n  <ul>\n    <li>update URL's and mailing addresses, moved to\n    http://dickey.his.com and dickey@herndon4.his.com</li>\n\n    <li>correct missing quotes in CF_TTY_GROUP configure script\n    macro in case the script is run in batch mode.</li>\n\n    <li>modify ownership-check of log file to ignore the group\n    ownership. Otherwise xterm cannot create logfiles in\n    directories with set-gid permissions.</li>\n\n    <li>simplify the logic that reads termcap data.</li>\n\n    <li>add fallback definition for B9600 in case line speed\n    definition for 38400 is missing (report by Jack J Woehr\n    &lt;jwoehr@ibm.net&gt;, for OpenBSD 2.6).</li>\n\n    <li>fix: Set highlightColor, and select a region containing the\n    text cursor. If the window loses focus, the cursor becomes\n    hollow, with the region inside the cursor being\n    background/foreground, unlike the rest of the selection, which\n    is foreground/highlight (patch by Ross Paterson\n    &lt;ross@soi.city.ac.uk&gt;).</li>\n\n    <li>add configure script tests to define SVR4, SYSV and\n    USE_POSIX_WAIT, which enables xterm to compile on Solaris 7 and\n    SCO Openserver without imake, though there are still a few\n    features for the latter which require <code>sco</code> to be\n    predefined.</li>\n\n    <li>patches from Stephen P Wall:\n      <ul>\n        <li>add support for two Sun-specific function keys. These\n        keys are labeled F11 and F12 on Sun Type 5 keyboards, but\n        return SunXK_F36 and SunXK_F37. Support will only be\n        compiled in if the header file &lt;X11/Sunkeysym.h&gt;\n        exists and contains the appropriate symbol definitions. The\n        keycodes for the DEC keycodes were arbitrary unused codes,\n        but the ones for the Sun keycodes are what cmdtool and\n        shelltool actually send.</li>\n\n        <li>add <code>colorRV</code> and <code>colorRVMode</code>\n        resources to allow specifying a color to use for reverse\n        video, similar to the existing UL, BD, and BL modes.</li>\n\n        <li>add <code>alwaysUseMods</code> resource, to override\n        check if <code>alt</code> or <code>meta</code> modifiers\n        are used in <code>translations</code> resource. Revamped\n        the code to calculate the modifier value, and included Meta\n        if alwaysUseMods is TRUE, using values 9-16.</li>\n      </ul>\n    </li>\n\n    <li>fixes for os390 (Paul Gilmartin):\n      <ul>\n        <li>regularize the definition of CONTROL() and remove an\n        acknowledged \"trial and error\" table.</li>\n\n        <li>translate \"^?\" into A2E(0177) which is the EBCDIC \"DEL\"\n        rather than plain 0177 which is the EBCDIC quotation\n        mark.</li>\n\n        <li>modify <code>xtermMissingChar()</code> so that EBCDIC\n        codes 128-159 are not rendered as blanks by X server\n        running on Solaris, which sees those as control\n        characters.</li>\n\n        <li>make debugging traces (configure --enable-trace) work\n        properly with EBCDIC.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_133\" id=\"xterm_133\">Patch #133 - 2000/5/2 -\n  XFree86 4.0a</a></h1>\n\n  <ul>\n    <li>add substitutions in autoconf'd Makefile for CPPFLAGS,\n    LDFLAGS and AWK (reported by Neil Bird).</li>\n\n    <li>correct uninitialized <code>childstat</code> variable from\n    patch #131 in <code>creat_as()</code> function, which caused\n    logging to not work on Solaris, whose <code>waitpid()</code>\n    function does not initialize its parameter. Add check for EINTR\n    on return from <code>waitpid()</code> as well (reported by Neil\n    Bird &lt;neil.bird@rdel.co.uk&gt;).</li>\n\n    <li>remove a redundant check for working <code>setuid()</code>\n    function introduced in patch #132. Greg Smith reports that this\n    does not work as intended on os390.</li>\n\n    <li>change line speed from 9600bd to 38400bd, to accommodate\n    people who mistakenly use $TERM set to <em>vt100</em>, to\n    reduce the effect of padding associated with this terminal\n    type.</li>\n\n    <li>add configure script check for IRIX 6.5's redefinition of\n    baud rates associated with <code>struct termio</code>, to\n    correct a situation where the baud rate was initialized to zero\n    (reported by Andrew Isaacson &lt;adi@lcse.umn.edu&gt;).</li>\n\n    <li>remove unused configure script check for VDISABLE.</li>\n  </ul>\n\n  <h1><a name=\"xterm_132\" id=\"xterm_132\">Patch #132 - 2000/4/11 -\n  XFree86 4.0a</a></h1>\n\n  <ul>\n    <li>undo an incorrect change from patch #113 caused the right\n    scrollbar to be positioned incorrectly when re-enabling it\n    (analysis by D Roland Walker).</li>\n\n    <li>add ctrlFKeys resource, replacing constant for adjusting\n    control-F1 to control-F12 to VT220-style F10-F20. The resource\n    changes the constant 12 to a default value of 10 (request by\n    Jim Knoble &lt;jmknoble@pobox.com&gt;).</li>\n\n    <li>correct ifdef'ing for conflict between definitions in AIX's\n    &lt;sys/select.h&gt; and &lt;X11/Xpoll.h&gt; (reported by Clint\n    Olsen).</li>\n\n    <li>add checks for return-values of getutid(), initgroups() and\n    setuid() in main.c, as well as modifying ifdef's for __osf__ to\n    include tty-group and WTMP logic (adapted from patch by Paul\n    Szabo &lt;psz@maths.usyd.edu.au&gt;)</li>\n\n    <li>modify resize.c to build and work on os390 (uses EBCDIC)\n    (adapted from patch by Phil Sidler\n    &lt;Phil.Sidler@airborne.com&gt;)</li>\n\n    <li>use Ires(), Bres() and Sres() macros to simplify resource\n    list in charproc.c</li>\n\n    <li>resync with XFree86 4.0a:\n      <ul>\n        <li>correct a typo in os2main.c (Holger Veit, from\n        4.0a).</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_131\" id=\"xterm_131\">Patch #131 - 2000/3/3 -\n  XFree86 3.9.18b</a></h1>\n\n  <ul>\n    <li>improve logfile security (integrated patch by Branden\n    Robinson)\n      <ul>\n        <li>make the <code>creat_as()</code> function more strict\n        by using O_EXCL rather than O_APPEND.</li>\n\n        <li>fixes to make DEBUG ifdef's compile/run, including\n        making the debug logfile more unique by appending a\n        timestamp to its name.</li>\n\n        <li>include &lt;term.h&gt; in resize.c, to fix a\n        missing-prototype warning.</li>\n      </ul>\n    </li>\n\n    <li>modified <code>creat_as()</code> a little more, retaining\n    the ability to append to a logfile If the user specifies the\n    name. Also, check if the opened file (which patch #130 ensures\n    is owned by the effective user) is not writable by other\n    users.</li>\n\n    <li>use <code>creat_as()</code> logic to make tek4014\n    screen-copy more secure (noted by Branden Robinson).</li>\n\n    <li>ifdef'd some of Branden's changes to build/work on older\n    machines.</li>\n\n    <li>correct missing initialization of the <code>.mode</code>\n    flag in <code>ColorRes</code> struct, from patch #129. This\n    worked on Linux because <code>malloc()</code> zeroes memory on\n    that platform (reported by Christian Weisgerber).</li>\n\n    <li>modify logic for <code>deleteIsDEL</code> resource so it\n    has internally 3 states: unspecified, true and false. If\n    unspecified, the keyboard type determines whether the Delete\n    key transmits <code>&lt;ESC&gt;[3~</code> or <code>\\177</code>,\n    and the popup menu entry reflects the internal state.\n    Otherwise, the popup menu entry overrides the keyboard type\n    (suggested by Dr Werner Fink, to make it simpler to set\n    resources that imitate the legacy X11R6 xterm).</li>\n  </ul>\n\n  <h1><a name=\"xterm_130\" id=\"xterm_130\">Patch #130 - 2000/3/1 -\n  XFree86 3.9.18a</a></h1>\n\n  <ul>\n    <li>modify <code>scroll-forw()</code> and\n    <code>scroll-back()</code> actions, adding a third parameter\n    which will direct xterm to ignore the action when mouse\n    reporting is enabled. This is needed for the wheel mouse to be\n    used to report to the application rather than scroll the\n    window.</li>\n\n    <li>add menu entry and action to allow disabling xterm's\n    assumption that the current font contains line-drawing\n    characters if the font cells 1-31 are nonempty. Some fonts may\n    have other characters (reported by Bruno Betro\n    &lt;bruno@iami.mi.cnr.it&gt;).</li>\n\n    <li>add a check in <code>creat_as()</code> to ensure that the\n    user really owns the logfile that has been opened.</li>\n\n    <li>add logic to implement SCO function-keys. (This is really\n    incomplete, since I intend to revisit this and make xterm able\n    to emulate scoansi better than just the function-keys).</li>\n\n    <li>add configure script option --enable-sco-fkeys, minor\n    related fixes (patch by Dr Werner Fink).</li>\n\n    <li>fix typos in ctlseqs.ms (reported by Bram Moolenaar)</li>\n\n    <li>fix typo in sinstall.sh default for $TST_PROG (reported by\n    Paul Gilmartin &lt;pg@sweng.stortek.com&gt;)</li>\n  </ul>\n\n  <h1><a name=\"xterm_129\" id=\"xterm_129\">Patch #129 - 2000/2/26 -\n  XFree86 3.9.18a</a></h1>\n\n  <ul>\n    <li>improve initialization of ANSI colors by delaying\n    allocation until each color is first used.</li>\n\n    <li>remove ifdef that prevented colorBD/colorUL/colorBL\n    resources from working when 256-color configuration was built\n    (reported by Todd Larason).</li>\n\n    <li>fix some minor inconsistencies in terminfo (Debian\n    #58530).</li>\n  </ul>\n\n  <h1><a name=\"xterm_128\" id=\"xterm_128\">Patch #128 - 2000/2/17 -\n  XFree86 3.9.18</a></h1>\n\n  <ul>\n    <li>correct logic for <code>oldXtermFKeys</code> resource,\n    fixes a core dump when attempting to set it from the\n    command-line (reported by Dr Werner Fink).</li>\n\n    <li>correct ifdef for meta-sends-escap so configure\n    --disable-num-lock builds.</li>\n  </ul>\n\n  <h1><a name=\"xterm_127\" id=\"xterm_127\">Patch #127 - 2000/2/12 -\n  XFree86 3.9.17e</a></h1>\n\n  <ul>\n    <li>add resource, popup menu entry and control sequence to\n    allow changing the Delete key to send either DEL or the\n    VT220-style Remove escape sequence.</li>\n\n    <li>remove logic for metaSendsEscape that would allow xterm to\n    send <code>&lt;ESC&gt;[3~</code> before a function key that\n    would begin with <code>&lt;ESC&gt;[3~</code> (request by\n    Christian Weisgerber).</li>\n\n    <li>add missing action and documentation for\n    meta-sends-escape.</li>\n\n    <li>correct a few typos in ctlseqs.ms (incorrect code for Cyan\n    color)</li>\n  </ul>\n\n  <h1><a name=\"xterm_126\" id=\"xterm_126\">Patch #126 - 2000/2/8 -\n  XFree86 3.9.17c</a></h1>\n\n  <ul>\n    <li>ensure that xterm will automatically activate the UTF-8\n    mode whenever the name of the locale environment variable\n    suggests that a UTF-8 locale is in use (patch by Markus Kuhn).\n    This will help that by simply setting LC_CTYPE an entire system\n    can be switched over to UTF-8, without users having to remember\n    the UTF-8 command line options (\"-u8\", etc.) of the various\n    applications. Command line options and X resource entries can\n    still be used to override this default choice.</li>\n\n    <li>add old function-keys control sequences and popup menu\n    entry, for compatibility with legacy X11R6 xterm.</li>\n\n    <li>revert translation of editing keypad \"Delete\" key to legacy\n    \\177.</li>\n\n    <li>simplify the color-resource data expressions with macro\n    COLOR_RES, for later use in restructuring color\n    initialization.</li>\n\n    <li>change encoding of wheel mouse (buttons 4 and 5) to avoid\n    conflict with legacy mouse modifiers (suggested by Bram\n    Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_125\" id=\"xterm_125\">Patch #125 - 2000/1/31 -\n  XFree86 3.9.17c</a></h1>\n\n  <ul>\n    <li>make this work on OpenVMS (integrated patch by David\n    Mathog).</li>\n\n    <li>rename some functions, e.g., <code>Index</code> to\n    <code>xtermIndex</code> so that ports such as VMS which link\n    externals ignoring case will not have library conflicts\n    (reported by David Mathog).</li>\n\n    <li>correct logic of <code>do_reversevideo()</code>, which did\n    not update the corresponding popup menu check mark (reported by\n    David Mathog, this was a detail overlooked in patch #94).</li>\n\n    <li>change TRACE macro so semicolon is not within definition,\n    making <em>indent</em> and similar programs work better.</li>\n\n    <li>add <code>depend</code> rule to Makefile.in</li>\n\n    <li>modify logic of boldColors resource to suppress it if an\n    extended color control has been used, e.g., for 88-color or\n    256-color mode (patch by Todd Larason).</li>\n\n    <li>revise logic that handles menus and input translation for\n    keyboard type so only one can be selected at a time.</li>\n\n    <li>restore kdch1=\\177 for the Sun function-key type, and make\n    the the Delete key send DEL (\\177) if the oldXtermFKeys\n    resource is set.</li>\n\n    <li>rephrase logic and ifdef's for POSIX VDISABLE to avoid\n    preprocessor expression that will not compile on NetBSD/x86\n    1.4.1 (reported by Takaaki Nomura\n    &lt;amadeus@yk.rim.or.jp&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_124\" id=\"xterm_124\">Patch #124 - 2000/1/27 -\n  XFree86 3.9.17b</a></h1>\n\n  <ul>\n    <li>change coding of editing keypad's \"Delete\" key to\n    &lt;escape&gt;[3~, in the default (Sun/PC) keyboard mode. This\n    makes the terminfo kdch1 capability independent of the coding\n    of the backarrow key, which sends either backspace (8) or DEL\n    (127). The reason for doing this (compatibility with the\n    <em>screen</em> program) outweighs the choice of DEL (127)\n    which was used in X11R5/X11R6 xterms. The <em>screen</em>\n    program translates whatever matches kdch1 into\n    &lt;escape&gt;[3~, even if it happens to be the stty erase\n    character.</li>\n\n    <li>add encoding for control/?, to work around xmodmap or key\n    translations which may confuse backspace and delete. A\n    control/? will send DEL (127), and a control/H will of course\n    send backspace (8).</li>\n\n    <li>add encoding for kcbt to &lt;escape&gt;[Z (fixes Debian\n    #54840).</li>\n\n    <li>minor correction to logic that encodes Sun and DEC function\n    keys to avoid sending an escape sequence if the key symbol is\n    not found in xterm's lookup table.</li>\n\n    <li>simplify ifdef's in main.c for POSIX VDISABLE so the \"^-\"\n    pattern is more likely to be implemented when <em>imake</em>\n    configures xterm (fixes Debian #55105).</li>\n\n    <li>change manpage to make it clearer what codes are sent by\n    the backarrow key.</li>\n  </ul>\n\n  <h1><a name=\"xterm_123\" id=\"xterm_123\">Patch #123 - 2000/1/22 -\n  XFree86 3.9.17a</a></h1>\n\n  <ul>\n    <li>add a note reserving OSC 51 for use in Emacs shell (request\n    by Rob Mayoff &lt;mayoff@dqd.com&gt;).</li>\n\n    <li>correct a missing backslash in xterm-vt220 termcap.</li>\n\n    <li>cleanup remaining quoted includes, preferring bracketed\n    form.</li>\n\n    <li>minor configure-script macro updates from tin and\n    vile.</li>\n\n    <li>add configure-script option for using utempter library,\n    adapted from Redhat 6.1 patch for XFree86 3.3.5</li>\n\n    <li>resync with XFree86 3.9.17a:\n      <ul>\n        <li>correction to QNX support (Frank Guangxin Liu)</li>\n\n        <li>some cosmetic changes that did not correct any reported\n        problems.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_122\" id=\"xterm_122\">Patch #122 - 1999/12/28 -\n  XFree86 3.9.16f</a></h1>\n\n  <ul>\n    <li>move the suggested wheel-mouse button translations into\n    charproc.c to simplify customization. Correct some minor logic\n    errors in the support for buttons 4 and 5, used for wheel mice\n    (reported by Bram Moolenaar).</li>\n\n    <li>implement <em>metaSendsEscape</em> resource, with\n    corresponding control sequence and menu entry. Like\n    <em>eightBitInput</em>, this causes xterm to send ESC prefixing\n    the given key, but applies to all keys and is independent of\n    the 8-bit/7-bit terminal setting. (requests by Alexander V\n    Lukyanov and Marc Feeley).</li>\n\n    <li>correct potential indexing with negative subscript in\n    udk_lookup(), (reported by Ian Collier\n    &lt;Ian.Collier@comlab.ox.ac.uk&gt;).</li>\n\n    <li>modify configure script that sets TERMINFO_DIR to use\n    ${prefix} rather than /usr if the --prefix option was specified\n    (request by Zdenek Sekera &lt;zs@sgi.com&gt;).</li>\n\n    <li>modify checks for repeat-character control sequence to test\n    the character class against xterm's state table, rather than\n    the isprint() macro (patch by Alexander V Lukyanov).</li>\n\n    <li>change several functions to macros to improve speed</li>\n\n    <li>two corrections to simulation of bold font via\n    overstriking:\n      <ul>\n        <li>use clipping to avoid leaving trash at end of the text,\n        and</li>\n\n        <li>add brackets so wide-character logic does not\n        fall-through into the overstriking logic (reported by Marc\n        Feeley &lt;feeley@IRO.UMontreal.CA&gt;)</li>\n      </ul>\n    </li>\n\n    <li>add several entries to termcap file to make it have the\n    same set of aliases as the terminfo file.</li>\n\n    <li>scale the color values used for xterm-256color terminfo\n    entry to 0..1000, as expected by ncurses.</li>\n\n    <li>change xterm-r6 terminfo definitions for F1-F4 to match\n    program.</li>\n\n    <li>Add QNX/Neutrino support (Frank Guangxin Liu\n    &lt;frank@ctcqnx4.ctc.cummins.com&gt;)</li>\n  </ul>\n\n  <h1><a name=\"xterm_121\" id=\"xterm_121\">Patch #121 - 1999/11/14 -\n  XFree86 3.9.16c</a></h1>\n\n  <ul>\n    <li>change label on \"Sun/PC Keyboard\" popup menu entry to\n    \"VT220 Keyboard\", since the checked state corresponds to VT220\n    rather than Sun/PC.</li>\n\n    <li>add configure test CF_UTMP_UT_XSTATUS to handle the\n    variants of utmp exit status (reports by Dave Ellement, Jeremie\n    Petit, Tomas Vanhala).</li>\n\n    <li>amend treatment of ALT key (see <a href=\"#xterm_94\">patch\n    #94</a>) so that if ALT is used as a modifier in key\n    translations, then no parameter will be sent in escape\n    sequences for Sun/PC function keys (request by Dr Werner\n    Fink).</li>\n\n    <li>modify default for OPT_I18N_SUPPORT to assume that\n    <code>XtSetLanguageProc()</code> is available in X11R5.\n      <p>Caveat: <code>XtSetLanguageProc()</code> was added fairly\n      late in the X11R5 patches, and some vendors shipped buggy\n      versions of this function (request by Tomas Vanhala).</p>\n    </li>\n\n    <li>correct configure macro CF_SYSV_UTMP to test-link with\n    functions consistent with the header, e.g., getutent() for\n    utmp.h and getutxent() for utmpx.h (reported by Greg\n    Smith).</li>\n\n    <li>modify terminfo entry for <code>xterm-xfree86</code> to\n    reflect modifiers for shift and control (from a patch by\n    Alexander V Lukyanov).</li>\n\n    <li>modify terminfo entry for <code>xterm-sun</code> to match\n    the function-key definitions in ncurses. The pageup/pagedown\n    and related function keys correspond to the Sun keyboard, which\n    does not necessarily correspond with X's notion of those\n    keys.</li>\n\n    <li>modify treatment of XK_Delete keysym so it transmits\n    parameterized VT220-style <code>&lt;ESC&gt;[3~</code> if\n    modifiers (shift, control alt) are given (request by Alexander\n    V Lukyanov).</li>\n\n    <li>corrected misspelled resource name in command-line option\n    for HP function keys.</li>\n  </ul>\n\n  <h1><a name=\"xterm_120\" id=\"xterm_120\">Patch #120 - 1999/10/28 -\n  XFree86 3.9.16c</a></h1>\n\n  <ul>\n    <li>refine the change to <code>SGR_Background()</code> in patch\n    #119, by not flushing the pending scrolling operation if the\n    background color is not actually changing. This combination\n    occurs when using color-ls to display a long listing, since\n    each line ends with an SGR0 which affects only the foreground\n    color. The unnecessary flushing made it noticeably slower\n    (reported by D Roland Walker &lt;walker@pobox.com&gt;).</li>\n\n    <li>remove obsolete documentation about modifiers which can be\n    returned in mouse tracking mode, and modify logic to ignore\n    modifiers other than the existing ones, e.g., NumLock (prompted\n    by discussions with Christian Weisgerber and Brad Pepers\n    &lt;brad@linuxcanada.com&gt;).</li>\n\n    <li>use free bit from obsolete shift-modifier coding of mouse\n    tracking button events to encode buttons 4 and 5, e.g., for a\n    wheel mouse (requests by Brad Pepers and Bram Moolenaar).</li>\n\n    <li>correct a place where the ptyInitialErase logic did not set\n    the backarrowKey state, and modify it further to use tgetstr()\n    rather than parse the termcap data returned from tgetent() so\n    the ptyInitialErase logic will work when xterm is linked with a\n    terminfo library (based on a patch by Dr Werner Fink\n    &lt;werner@suse.de&gt;).</li>\n\n    <li>fix definition of HAVE_UTMP_UT_HOST for ISC configuration\n    (patch by Michael Rohleder).</li>\n\n    <li>improve configure script's utmp tests (based on reports by\n    Greg Smith for os390, and David Ellement for HPUX).</li>\n\n    <li>modify sinstall.sh to use uid=0 rather than 'root' to\n    determine if the installer is privileged. This is needed on\n    some systems since more than one account may be privileged\n    (report by Greg Smith).</li>\n\n    <li>add an application resource, <code>messages</code> (and a\n    corresponding -/+mesg option) which controls the initial\n    permission on the terminal: if messages is set to true (the\n    default), behavior is as without the patch; if it is set to\n    false (as per -mesg), the terminal is opened in mode 0600, thus\n    producing the effect of the <code>mesg n</code> command. This\n    is useful for users who want to redirect all their messages to\n    one particular xterm: it is more pleasant to do this with xterm\n    resources than with explicit calls to the <code>mesg</code>\n    program (patch, description by David Madore\n    &lt;david.madore@ens.fr&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_119\" id=\"xterm_119\">Patch #119 - 1999/10/16 -\n  XFree86 3.9.16c</a></h1>\n\n  <ul>\n    <li>add responses (DA and DSR) for DEC locator mode</li>\n\n    <li>add coding for ANSI color to DA response</li>\n\n    <li>implement UTF-8 translation for Media Copy (print)\n    operations.</li>\n\n    <li>implement vt320 control sequences for Print Composed Main\n    Display and for Print All Pages. The latter directs xterm to\n    print the current screen as well as the scrollback buffer.</li>\n\n    <li>correct error in _GNU_SOURCE configure test, which left it\n    always defined.</li>\n\n    <li>add more information, i.e., with strerror for some system\n    calls in the main program which may fail due to insufficient\n    permissions (prompted by a problem report for <code>-C</code>\n    by Jeremie Petit &lt;Jeremie.Petit@digital.com&gt;).</li>\n\n    <li>add workaround for conflict between &lt;X11/Xpoll.h&gt; and\n    &lt;sys/select.h&gt; on AIX 4.3 (Richard Griswold\n    &lt;griswold@acm.org&gt;).</li>\n\n    <li>add configure script test to resolve conflict between\n    between &lt;X11/Xpoll.h&gt; and &lt;sys/select.h&gt;</li>\n\n    <li>modify translation of UTF-8 sequences to reject \"overly\n    long\" variations (patch by Markus Kuhn).</li>\n\n    <li>remove <code>utf8controls</code> resource, since Markus'\n    change removes the corresponding logic.</li>\n\n    <li>correct a case where colors were not rendered properly.\n    This happened when an application inserted several lines, then\n    changed colors. If this was done all in one write, then there\n    would be no intervening refresh, and the new color was applied\n    to the pending scrolling operation which was awaiting the next\n    refresh (reported by Stephane Chazelas\n    &lt;Stephane_Chazelas@Raytheon.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_118\" id=\"xterm_118\">Patch #118 - 1999/10/5 -\n  XFree86 3.9.16b</a></h1>\n\n  <ul>\n    <li>refine configure test for utmp versus utmpx, to build on\n    HP-UX 10.x (reported by David Ellement).</li>\n\n    <li>move the configure check for <code>const</code> after the\n    check for ANSI C compiler options, since those may be required\n    to make it work properly on HP-UX.</li>\n\n    <li>add configure test for defining\n    <code>_GNU_SOURCE</code></li>\n\n    <li>correction to <em>-hold</em> option, ensure that if data is\n    already in the output buffer that it will be displayed before\n    closing the PTY.</li>\n\n    <li>move the configure checks for setuid install of xterm into\n    a script to avoid installing it setuid'd to a non-root user\n    (reported by Adam Sulmicki &lt;adam@cfar.umd.edu&gt;).</li>\n\n    <li>correct configure script's check for termcap.h to avoid\n    using ncurses' version of it on systems that have a working\n    <code>tgetent()</code> function. This is needed to make\n    <code>resize</code> work properly.</li>\n\n    <li>fix some typography in ctlseqs.ms description of DEC\n    locator events (reported by Stephen P Wall).</li>\n  </ul>\n\n  <h1><a name=\"xterm_117\" id=\"xterm_117\">Patch #117 - 1999/9/29 -\n  XFree86 3.9.16b</a></h1>\n\n  <ul>\n    <li>change order of tests in configure script for utmp and\n    utmpx to test utmpx first, to compile on Solaris (reported by\n    Leena Heino &lt;liinu@uta.fi&gt; and Patrik Hagglund\n    &lt;patha@ida.liu.se&gt;).</li>\n\n    <li>add a configure test for utmp.ut_xtime, needed for SCO\n    Openserver, and for lastlog, needed for Redhat 6.0, to refine\n    the utmp/utmpx auto-configure.</li>\n\n    <li>remove a spurious comma in an #undef (reported by David\n    Green &lt;greendjf@cvhp152.marconicomms.com&gt; and David\n    Ellement &lt;ellement@sdd.hp.com&gt; both on HP-UX, whose\n    compiler does care about syntax).</li>\n\n    <li>change ifdef's using __CYGWIN32__ to __CYGWIN__ (reported\n    by Suhaib M. Siddiqi &lt;Ssiddiqi@InspirePharm.Com&gt;, who is\n    told that the next Cygnus release will drop that symbol in\n    their next release).</li>\n\n    <li>minor cleanup of ifdef's for makeColorPair (patch by\n    Stephen P Wall).</li>\n\n    <li>work around problem observed in XFree86 3.3.5 (patch by\n    Alexander V Lukyanov, Redhat #5419). From the problem report:\n      <blockquote>\n        <p>xterm consumes cpu when selecting text with mouse\n        (holding down left mouse button) and when a program working\n        under the xterm outputs something to stdout.</p>\n\n        <p>Easy way to reproduce:<br>\n        <code>while :; do echo aaa; sleep 1; done</code><br>\n        (while this runs, select text and hold down left mouse\n        button) watch cpu load.<br>\n        release left mouse button - spinning stops.</p>\n      </blockquote>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_116\" id=\"xterm_116\">Patch #116 - 1999/9/25 -\n  XFree86 3.9.16a</a></h1>\n\n  <ul>\n    <li>modify warning if change-ownership of PTY fails; some\n    configurations may not happen to have old-style pty's (reported\n    by Bob Maynard).</li>\n\n    <li>improve check in configure script for group ownership of\n    installed xterm; some platforms use the -g option of ls to\n    toggle group off rather than on (reported by Greg Smith).</li>\n\n    <li>minor improvement to toolbar geometry, to make it not\n    resizable. This still is not satisfactory (but is usable) since\n    the toolbar overlaps the xterm widget if the window is resized\n    to make it smaller. It appears that some work is needed for the\n    xterm widget's geometry management to make it function\n    properly.</li>\n\n    <li>implement configure script tests for utmp, tty group.</li>\n\n    <li>implement <em>-hold</em> option, allowing users to retain\n    the window after a shell has exited (this is recently an FAQ,\n    but prompted by a comment by Joachim Plaettner-Hochwarth\n    &lt;plaettner@aem.umn.edu&gt; in comp.unix.programmer, that the\n    IRIX winterm provides this option).</li>\n\n    <li>add support for DEC Locator control sequences for xterm\n    (integrated patch by Stephen P Wall):\n\n      <pre>\n                DECEFR, \"Enable Filter Rectangle\"\n                DECELR, \"Enable Locator Reports\"\n                DECSLE, \"Select Locator Events\"\n                DECRQLP, \"Request Locator Position\"\n</pre>\n      <p>This allows the xterm mouse to be used with applications\n      that use the DEC Locator sequences, such as VAX Tpu, or SMG$\n      based applications.</p>\n    </li>\n\n    <li>improve print action (patch by Matthias Baake). From his\n    notes,\n      <ul>\n        <li>Bug 1<br>\n        Underlined text is preceded by ESC&nbsp;[0;2m . This should\n        be ESC&nbsp;[0;4m&nbsp;, ESC&nbsp;[2m doesn't seem to have\n        any effect. (print.c/send_SGR)</li>\n\n        <li>Bug 2<br>\n        The check for the last non-empty column (while (last &gt;\n        0) ... in print.c/printLine) omits the rightmost column of\n        the screen, the loop must start with last =\n        screen-&gt;max_col+1 instead of last =\n        screen-&gt;max_col.</li>\n\n        <li>Bug 3<br>\n        Any attributes of the first character (and of all\n        immediately following characters with the same attributes)\n        are ignored. The variable attr (print.c/printLine) should\n        be initialized with 0, not with *a &amp; SGR_MASK.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_115\" id=\"xterm_115\">Patch #115 - 1999/9/18 -\n  XFree86 3.9.16a</a></h1>\n\n  <ul>\n    <li>integrated changes by Stephen P Wall to implement an\n    88-color model for systems where 256-colors cannot be\n    allocated.</li>\n\n    <li>when 256-color configuration is compiled, colored bold and\n    underlining is not available; ifdef'd to avoid possible odd\n    effects in this case (reported by Stephen P Wall).</li>\n\n    <li>add resource <em>cacheDoublesize</em>, to limit the caching\n    of font information for double-sized characters. This addresses\n    a problem reported by Aryeh Koenigsberg for X terminals with\n    limited font memory.</li>\n\n    <li>modify treatment of line-drawing characters in UTF-8 mode\n    so that the Unicode values are used rather than the C0 codes\n    for storing the translated characters (request by Markus\n    Kuhn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_114\" id=\"xterm_114\">Patch #114 - 1999/9/15 -\n  XFree86 3.9.16</a></h1>\n\n  <ul>\n    <li>add configure script checks for Athena headers and\n    libraries under /usr/contrib to work on HPUX (reported by\n    several people: David Nixon &lt;djn@csc.liv.ac.uk&gt; Aryeh\n    Koenigsberg &lt;aryeh.koenigsberg@telrad.co.il&gt; Johannes\n    M&auml;hner &lt;johanm@camline.com&gt; Andrew Gaylard\n    &lt;andrew.gaylard@bsw.co.za&gt;).</li>\n\n    <li>add check to configure script if xterm is installed setgid\n    rather than setuid, since wtmp and utmp may be installed with\n    group-writable permissions other than root (based on Debian bug\n    report #7112 by Bo Branten &lt;bosse@ing.umu.se&gt;).</li>\n\n    <li>rewrote logic that removes data from termcap entry, e.g.,\n    for titeInhibit, to make it less likely to remove the wrong\n    data.</li>\n\n    <li>correct logic which checks for missing characters used for\n    line drawing. The 0 character was tested unnecessarily, leading\n    to some inefficiency when rendering.</li>\n\n    <li>change termcap capability which is used as input or output\n    of ptyInitialErase logic from <em>kD</em> to <em>kb</em>.\n    Christian Weisgerber &lt;naddy@mips.rhein-neckar.de&gt; pointed\n    out in effect that <em>kD</em> (in terminfo <em>kdch1</em>)\n    should correspond to the control sequence for <em>dch1</em>,\n    which deletes from the current position toward the right.</li>\n\n    <li>check for failure to change ownership of the PTY device and\n    warn when xterm is running setuid'd to root. This was reported\n    to happen on the FreeBSD/NetBSD/OpenBSD systems as a result of\n    the chflags() call.</li>\n\n    <li>add xterm-noapp terminfo entry to illustate a nominally\n    bash-compatible terminal description.</li>\n  </ul>\n\n  <h1><a name=\"xterm_113\" id=\"xterm_113\">Patch #113 - 1999/8/15 -\n  XFree86 3.9.15b</a></h1>\n\n  <p>Several fixes. The main one is a first draft of pulldown\n  menus. It's not complete (I have some minor/annoying geometry\n  problems to correct), but is usable. Once it's complete I plan to\n  add a menu to support additional selections that won't fit on the\n  current popup menus. Also, this fits into my longterm plan to\n  allow configuring with Motif libraries.</p>\n\n  <ul>\n    <li>correct error in input conversion for NRC mode (reported by\n    Stefan Traby &lt;stefan@sime.com&gt;).</li>\n\n    <li>fix initialization of num_lock data in Misc struct (since\n    those fields of the reference widget aren't initialized), and\n    add logic to deal with XVision whose NumLock key does not\n    transmit but does alter keypad state.</li>\n\n    <li>correct a missing return-value in get_pty(), for SCO</li>\n\n    <li>add E2A fix for backspace (patch by Greg Smith), i.e.,<br>\n    #define VAL_INITIAL_ERASE A2E(127)</li>\n\n    <li>correct foreground color within cursor outline when the\n    window is unfocused (reported by Stephane Chazelas).</li>\n\n    <li>corrected position of scrollbar set in ResizeScrollBar(),\n    which left it positioned incorrectly if the right scrollbar\n    were enabled from the popup menu but was not initially enabled.\n      <p>I have noticed some additional problems with\n      right-scrollbar on X11R5 which I will correct later.</p>\n    </li>\n\n    <li>integrate changes by Jean-Claude Michot for QNX from\n    XFree86 3.3.4c</li>\n\n    <li>add resources menuBar/MenuBar, menuHeight/MenuHeight for\n    later use in toolbar geometry.</li>\n\n    <li>add configure option --enable-toolbar</li>\n\n    <li>add missing definition to make ziconbeep logic not\n    compile-in when configure script disables it.</li>\n\n    <li>add configure-check for input-method support in X\n    libraries</li>\n  </ul>\n\n  <h1><a name=\"xterm_112\" id=\"xterm_112\">Patch #112 - 1999/7/17 -\n  XFree86 3.9Pw</a></h1>\n\n  <ul>\n    <li>add null-pointer check to FlushLog(), fixes a core dump\n    when both -l and -lf options are used when xterm is configured\n    with wide-character support.</li>\n\n    <li>remove \"ISO\" case for SD, which was due to a typographical\n    error in ECMA-48 (reported by Paul Williams\n    &lt;paul@celigne.co.uk&gt; for vttest).</li>\n\n    <li>add \"FILES\" section to manpage.</li>\n\n    <li>generate header file to initialize default resources for\n    colors 16-255.</li>\n\n    <li>fixes for os390 (Greg Smith):\n      <ul>\n        <li>add README.os390</li>\n\n        <li>use the pty_search() function to find an available\n        pty/tty pair.</li>\n\n        <li>move E2A() call out of getXtermCell() to SaveText()\n        function so it will be available in all\n        configurations.</li>\n      </ul>\n    </li>\n\n    <li>patches by Todd Larason:\n      <ul>\n        <li>enable SGR 48 5 in ISO color mode, not just 256 color\n        mode</li>\n\n        <li>change configure's --disable-256-color option to\n        --enable-256-color, to match its effect</li>\n\n        <li>fix OSC 4 xx ? (report ansi color) to report a string\n        which can actually be used to set the color back</li>\n\n        <li>fix OSC 4 xx yy (change ansi color) to not allow\n        setting colors &gt; 15 in 16 color mode</li>\n\n        <li>simplify the COLOR_ settings a bit in ptyx.h, along\n        with setting NUM_ANSI_COLORS needed for #1 and #4\n        above</li>\n\n        <li>correct string-terminator code passed for reference to\n        OSC responses; when in 7-bit mode, only the final byte of\n        ST was seen.</li>\n\n        <li>Allow multiple color #;name pairs in OSC 4, and\n        document changes to match.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_111\" id=\"xterm_111\">Patch #111 - 1999/7/10 -\n  XFree86 3.9Pw</a></h1>\n\n  <ul>\n    <li>add control sequences for specifying the RGB value of the\n    ANSI colors, and for configuring with 256 colors (patch by Todd\n    Larason &lt;jtl@molehill.org&gt;). I made the default\n    configuration to 16-colors, because xterm uses the default\n    color map (which has only 256 colors).</li>\n\n    <li>correct an error in DCS $ q m reporting for colors 8-15\n    (Todd Larason).</li>\n\n    <li>add test/demo script for double size characters. Used this\n    to test/correct display of double size characters that should\n    wrap, underlined double size characters.</li>\n\n    <li>increased cache size for double size fonts to 8, to allow\n    for both normal and bold fonts (discussion with Aryeh\n    Koenigsberg &lt;aryeh.koenigsberg@telrad.co.il&gt;).</li>\n\n    <li>add fixes for port to OS390 aka MVS (integrated patch from\n    Greg Smith &lt;rys@epaibm.rtpnc.epa.gov&gt;). OS390 uses EBCDIC\n    rather than ASCII.</li>\n\n    <li>correct an off-by-one in binary search limits in\n    keysym2ucs.c (Markus Kuhn).</li>\n\n    <li>implement logging for UTF-8 mode. The output is written in\n    UTF-8 form.</li>\n  </ul>\n\n  <h1><a name=\"xterm_110\" id=\"xterm_110\">Patch #110 - 1999/6/29 -\n  XFree86 3.9Pu</a></h1>\n\n  <ul>\n    <li>If colorMode is enabled by default, compile-in default\n    resources to match the colors listed in XTerm-col.ad (this\n    should fix a longstanding FAQ).</li>\n\n    <li>added new OSC&nbsp;3&nbsp;;&nbsp;PROPNAME=VALUE&nbsp;ST\n    escape sequence to set an arbitrary X property on the top level\n    xterm X11 window. Omit \"=VALUE\" to delete the X property (patch\n    by Greg Badros &lt;gjb@cs.washington.edu&gt;).</li>\n\n    <li>change internal flag used for <em>utf8controls</em>\n    resource so we allow 31-bit range of characters (suggested by\n    Thomas Wolff).</li>\n\n    <li>add check for 16-bit characters in OSC strings, change them\n    to '?' (reported by Thomas Wolff).</li>\n\n    <li>modify logic of same_font_name() to avoid trying to\n    interpret both parameters as wildcard patterns. That does not\n    (cannot) work, and in some instances the font server will\n    return unresolved wildcards for the normal or bold fontnames,\n    making them match inadvertently, triggering the fallback\n    overstrike logic (reported by Tim Adye).</li>\n  </ul>\n\n  <h1><a name=\"xterm_109\" id=\"xterm_109\">Patch #109 - 1999/6/23 -\n  XFree86 3.9Pt</a></h1>\n\n  <ul>\n    <li>correct range-check from patch #108, which resulted in not\n    being able to select from the scrollback buffer (reported by\n    Tim Adye &lt;T.J.Adye@rl.ac.uk&gt;)</li>\n\n    <li>correct \"no available ptys\" problem with Cygwin B20.1\n    (patch by Tim Adye).</li>\n\n    <li>modified install-ti rule in Makefile.in to allow override\n    of the terminfo directory when doing a \"make install\", i.e., by\n    assigning to TERMINFO_DIR (request by Zdenek Sekera\n    &lt;zs@sgi.com&gt;).</li>\n\n    <li>added install-full rule to Makefile.in</li>\n\n    <li>resync mkdirs.sh and install.sh scripts against current\n    autoconf</li>\n\n    <li>implement $(DESTDIR) in Makefile.in, making it simple to\n    install xterm and associated files into a directory just for\n    packaging a binary release (suggested by CaT\n    &lt;cat@zip.com.au&gt;).</li>\n\n    <li>change IChar type to unsigned, rather than unsigned short,\n    making room for a flag to keep with 16-bit characters to\n    prevent them from being interpreted as C0 or C1 controls\n    (reported by Thomas Wolff).</li>\n\n    <li>correct a typo from patch #107, incorrect array name, in\n    the filterUTF8 function (patch by Bruno Haible\n    &lt;haible@ilog.fr&gt;)</li>\n\n    <li>add <em>utf8controls</em> resource to specify whether xterm\n    should interpret 16-bit characters unpacked from UTF-8 form as\n    control characters if they happen to fall into that range. This\n    behavior is left unspecified by the Unicode standard (request\n    by Thomas Wolff).</li>\n\n    <li>modify handling of OSC to recover if application sends\n    16-bit characters with codes above 255. We cannot display them\n    as is, but translate out-of-range characters to a '?' (reported\n    by Thomas Wolff).</li>\n  </ul>\n\n  <h1><a name=\"xterm_108\" id=\"xterm_108\">Patch #108 - 1999/6/19 -\n  XFree86 3.9Ps</a></h1>\n\n  <ul>\n    <li>add a range-check to LastTextCol(), to guard against\n    indexing before the beginning of the scrollback buffer. This\n    appears to happen with certain fonts under X11R5 (reported by\n    Stephane Chazelas &lt;Stephane_Chazelas@Raytheon.com&gt;).</li>\n\n    <li>implement resource <em>boldMode</em>, to allow disabling\n    the simulation of bold fonts when the bold and normal fonts are\n    not different (requested by Will Day\n    &lt;willday@rom.oit.gatech.edu&gt;).</li>\n\n    <li>change the atom \"UTF-8\" to \"UTF8_STRING\", and fixes a few\n    bugs in the UTF-8 selection (patch by Juliusz Chroboczek).</li>\n\n    <li>correct logic of binary-search in keysym2ucs.c (patch by\n    Markus Kuhn).</li>\n\n    <li>add special interpretation of keysym codes above 0x1000000\n    as the corresponding UCS value plus 0x1000000 (patch by Markus\n    Kuhn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_107\" id=\"xterm_107\">Patch #107 - 1999/6/12 -\n  XFree86 3.9Pq</a></h1>\n\n  <ul>\n    <li>Two changes from Stephen P Wall. From his description:\n      <blockquote>\n        <p>The first change is simple - I added ESC[3J to erase the\n        stored lines above the screen. That's what the changes to\n        util.c and ctlseqs.ms are.</p>\n\n        <p>The second change is to get the blinking cursor working.\n        I took out the cursorBlinkTime resource, and put in\n        cursorBlink (Boolean), cursorOnTime (time cursor is on in\n        msecs) and cursorOffTime, and added a cursorblink item to\n        the vtMenu to enable/disable it.</p>\n      </blockquote>\n    </li>\n\n    <li>improve selection (integrated patch by Juliusz Chroboczek).\n    From his description:\n      <blockquote>\n        <p>With this patch, selection conversion works\n        properly:</p>\n\n        <pre>\n        ISO 8859-1 xterm -&gt; ISO 8859-1 xterm (transferred as STRING);\n        ISO 8859-1 xterm -&gt; UTF-8 xterm (transferred as STRING);\n        UTF-8 xterm -&gt; ISO 8859-1 xterm (transferred as STRING);\n        UTF-8 xterm -&gt; UTF-8 xterm (transferred as UTF-8).\n</pre>\n        <p>It will not work properly if one xterm is in, say, ISO\n        8859-2. Actually, for this case xterm breaks the ICCCM\n        routinely (sending ISO 8859-2 data as STRING), so I\n        wouldn't worry too much about it. I have not changed the\n        behaviour in eight-bit mode in any way.</p>\n      </blockquote>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_106\" id=\"xterm_106\">Patch #106 - 1999/6/9 -\n  XFree86 3.9Pq</a></h1>\n\n  <ul>\n    <li>remove duplicate fix for OpenBSD in resize.c</li>\n\n    <li>correct logic in ScreenWrite, which did not reset the high\n    bytes of 16-bit characters when overwriting them with a 8-bit\n    character string (reported by Thomas Wolff).</li>\n\n    <li>provide limited support for input of UTF-8 16-bit data by a\n    lookup table (integrated patch by Markus Kuhn).</li>\n\n    <li>correct check in non_blank_line to ensure we're in\n    wide-character mode before looking at the high bytes, for\n    InsertChar.</li>\n  </ul>\n\n  <h1><a name=\"xterm_105\" id=\"xterm_105\">Patch #105 - 1999/6/5 -\n  XFree86 3.9Pp</a></h1>\n\n  <ul>\n    <li>implement new resource <em>trimSelection</em>, which allows\n    xterm to trim trailing blanks from selected lines. This does\n    not affect the highlighting. (reported by several people using\n    <em>mutt</em>, including Hans Morten Kind &lt;edphk@uib.no&gt;,\n    Jeremy &lt;jeremy@exit109.com&gt; and (Michael Fuller\n    &lt;msf@mds.rmit.edu.au&gt;).</li>\n\n    <li>include term.h in resize for OpenBSD (patch by Matthieu\n    Herrb).</li>\n\n    <li>correct logic for UTF-8 in functions that hide and show the\n    cursor; it was displaying a space whenever the low byte of the\n    character at the cursor position was zero (reported by Thomas\n    Wolff &lt;Thomas.Wolff@icn.siemens.de&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_104\" id=\"xterm_104\">Patch #104 - 1999/5/30 -\n  XFree86 3.9Pn</a></h1>\n\n  <p>This is a resync patch against XFree86 3.9Pn, reflecting\n  changes which were submitted by Branden Robinson, who worked with\n  Wichert Akkerman &lt;wichert@cs.leidenuniv.nl&gt; to set up\n  ifdef's to handle GNU libc 2.1, and use getpt() which lets xterm\n  avoid having to know the actual PTY name.</p>\n\n  <p>I have also added a few fixes for signed/unsigned mismatches,\n  and corrected a problem in the configure script (the UTF-8 code\n  was always configured since the Imakefile defines this).</p>\n\n  <h1><a name=\"xterm_103\" id=\"xterm_103\">Patch #103 - 1999/5/14 -\n  XFree86 3.9Pm</a></h1>\n\n  <ul>\n    <li>correct selection logic: I omitted an offset that accounts\n    for the distance into the scrollback buffer when rewriting this\n    for patch #101. Also fixed a similar problem for selecting\n    double size characters from the scrollback buffer (first was\n    reported by D Roland Walker &lt;walker@pobox.com&gt;).</li>\n\n    <li>improved support for Unix98 PTY's, using patch in Debian\n    bug report #35650, by J.H.M. Dassen\n    &lt;jdassen@wi.leidenuniv.nl&gt;. From the patch description:\n      <blockquote>\n        <ul>\n          <li>No longer links xterm against libutil on a glibc2.1\n          system. libutil is a compatibility library and should\n          only be used when necessary. Rather than having get_pty()\n          use openpty() from this compatibility library, use the\n          real UNIX98 pty support in get_pty() (open()ing the\n          master pty, through getpt() if available (glibc\n          extension)). Use openpty() only under glibc2.0.</li>\n\n          <li>GNU libc2 is not Linux-specific; already it runs on\n          the Hurd. It provides the UNIX98 pty functions (plus the\n          getpt() extension), regardless of the underlying OS.\n          Changed two constructs to look for GNU libc2 only, not\n          GNU libc2 on Linux.</li>\n        </ul>\n      </blockquote>\n    </li>\n\n    <li>improve font configuration, by checking if the user's\n    resource settings for normal and bold fonts give the same font\n    sizes (fixes problem reported by Peter Waltenberg\n    &lt;peterw@dascom.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_102\" id=\"xterm_102\">Patch #102 - 1999/5/12 -\n  XFree86 3.9Pm</a></h1>\n\n  <ul>\n    <li>revert change to openpty call in patch #101; this causes\n    xterm to fail on DEC-Alpha OSF/1 4.0B (reported by H Merijn\n    Brand).</li>\n\n    <li>modify print.c to move include of stdio.h after the\n    autoconf'd xtermcfg.h since HP's ANSI C compiler otherwise sees\n    inconsistent prototype for getopt, probably due to problem with\n    const (reported by H Merijn Brand).</li>\n  </ul>\n\n  <h1><a name=\"xterm_101\" id=\"xterm_101\">Patch #101 - 1999/5/10 -\n  XFree86 3.9Pm</a></h1>\n\n  <ul>\n    <li>moved includes and definitions for 'select' from data.h to\n    xterm.h to fix problem introduced by prototype for getPtyData,\n    part of UTF-8 changes (reported by Jens Schleusener\n    &lt;Jens.Schleusener@dlr.de&gt;)</li>\n\n    <li>added \"Meta &lt;Btn2Down&gt;:clear-saved-lines()\" default\n    translation (patch by H Merijn Brand)</li>\n\n    <li>fixes to configure script and ifdef's in main.c to build on\n    a HP9000/D390 (hppa-2.0w) running HP-UX 11.00 (64 bit) with\n    egcs 1.1.2 and HP's ANSI C compiler (patch by H Merijn Brand\n    &lt;PROCURA_BV@CompuServe.com&gt;)</li>\n\n    <li>add more parentheses in ifdef's (patch by Bob\n    Maynard).</li>\n\n    <li>eliminate conflicting definitions for USE_TERMINFO in\n    resize.c (reported by Jeremy Buhler).</li>\n\n    <li>change openpty call to pass NULL rather than ttydev\n    parameter, since that was used only to estimate the length of\n    the corresponding data, and may not really be long enough\n    (reported by Andreas Jaeger)</li>\n\n    <li>update description in xterm manpage for character class\n    table, which said it handles only 7-bit codes.</li>\n\n    <li>correct a typo in ScrnDeleteChar() which made it not clear\n    the high byte of wide-character data.</li>\n\n    <li>add logic to convert selection to UTF-8 form when\n    appropriate. This makes select/paste \"work\", but further work\n    is needed to make UTF-8 recognized as a locale in Xlib.</li>\n\n    <li>correct right-limit check when selecting double-width\n    characters.</li>\n\n    <li>change default answerback response to an empty string.</li>\n  </ul>\n\n  <h1><a name=\"xterm_100\" id=\"xterm_100\">Patch #100 - 1999/5/3 -\n  XFree86 3.9Pl</a></h1>\n\n  <ul>\n    <li>Correct a typo in the default resource value for\n    backarrowKeyIsErase: it was always true (reported by Bram\n    Moolenaar).</li>\n\n    <li>improve configure script's test if the installed xterm is\n    setuid, in case that is a symbolic link.</li>\n\n    <li>correct \"install-ti\" rule in Makefile.in, by not setting a\n    blank $TERMINFO value. That is interpreted as \".\" by ncurses'\n    tic.</li>\n  </ul>\n\n  <h1><a name=\"xterm_99\" id=\"xterm_99\">Patch #99 - 1999/5/2 -\n  XFree86 3.9Pk</a></h1>\n\n  <ul>\n    <li>correct logic that computes num_ptrs count of the number of\n    indices into the screen buffer. This is the maximum of the\n    colors and character-set indices; was incorrect in patch\n    #97.</li>\n\n    <li>correct argument type for sigsetjmp, incidental change in\n    patch #96's Unix88 PTY patch (reported by Bram Moolenaar).</li>\n\n    <li>correct description of secondary DA in ctlseqs.ms (reported\n    by Bram Moolenaar).</li>\n\n    <li>decouple the backarrowKey and ptyInitialErase resources by\n    adding a new resource backarrowKeyIsErase, to accommodate\n    people using applications which have hardcoded tests for\n    characters 8 and 127 rather than relying on the stty\n    settings.</li>\n\n    <li>modify the UTF-8 decoder so that all possible illegal UTF-8\n    sequences are properly represented by U+FFFD. This should be\n    very helpful for developers of code that output UTF-8 strings\n    for debugging. See the file utf-8-test.txt in\n    http://www.cl.cam.ac.uk/~mgk25/download/ucs-fonts.tar.gz for a\n    demonstration text that contains numerous illegal UTF-8 values.\n    (patch by Markus Kuhn).</li>\n\n    <li>correct a place in ScrnRefresh where I was filling the high\n    byte of a wide character with a space rather than a null\n    (reported by Markus Kuhn).</li>\n  </ul>\n\n  <h1><a name=\"xterm_98\" id=\"xterm_98\">Patch #98 - 1999/4/26 -\n  XFree86 3.9Pk</a></h1>\n\n  <ul>\n    <li>correct data manipulation in unparseputc(), broken for\n    little-endian machines by patch #97's UTF-8 changes. This meant\n    that keyboard input on SunOS did not work, though Linux i386\n    was fine.</li>\n\n    <li>modify initialization for backarrowKey and logic for\n    initial-erase to prevent the initial-erase from overriding an\n    explicitly set backarrowKey resource (reported by Vikas\n    Agnihotri).</li>\n\n    <li>add a missing null-pointer check in ScrnRefresh, for the\n    wide-characters configuration.</li>\n  </ul>\n\n  <h1><a name=\"xterm_97\" id=\"xterm_97\">Patch #97 - 1999/4/25 -\n  XFree86 3.9Pk</a></h1>\n\n  <ul>\n    <li>add configure script test for -lutil, needed for openpty\n    call when configuring xterm for Glibc-2.1 and Unix98 PTY's\n    (first reported by Martin Lorentz\"\n    &lt;m.lorentz@w12.link-goe.de&gt;).</li>\n\n    <li>completely parenthesize ifdef expressions for Glibc\n    (suggested by Bob Maynard).</li>\n\n    <li>add initial-erase options (-ie, +ie) to help message\n    (reported by Vikas Agnihotri).</li>\n\n    <li>remove duplicate definition of USE_USG_PTYS (reported by\n    Jeremy Buhler).</li>\n\n    <li>change termcap <em>kD</em> and terminfo <em>kdch1</em> to a\n    DEL (\\177). I overlooked this when separating the styles of\n    keyboard with the <em>sunKeyboard</em> resources in patch #94,\n    so that it normally matches the value of the stty erase\n    character:\n      <ul>\n        <li>Reported by Jae Gangemi\n        &lt;jgangemi@ccf.rutgers.edu&gt;, this caused emacs to not\n        process the DEL properly, combining it with succeeding\n        characters.</li>\n\n        <li>This does not appear to be related to a problem which I\n        have found with <em>screen</em>, which translates the stty\n        erase into the termcap <em>kD</em> or terminfo\n        <em>kdch1</em> value (depending on how it is linked) if the\n        $TERMCAP variable is set when <em>screen</em> is\n        invoked.</li>\n      </ul>\n    </li>\n\n    <li>add command-line options for enabling UTF-8 mode: -u8 and\n    +u8. The more obvious -utf8 and +utf8 would conflict with\n    xterm's -ut and +ut (utmp) options. The UTF-8 changes were\n    requested by Markus Kuhn &lt;Markus.Kuhn@cl.cam.ac.uk&gt;. This\n    patch does not complete UTF-8 implementation, but makes it\n    usable, i.e., display and refresh work, and I am able to\n    display the test cases which Markus provides. More work is\n    needed to complete this feature:\n      <ul>\n        <li>the control sequences for switching in/out of UTF-8\n        mode are partly implemented (don't use them). Similarly,\n        the switching between vt100 and tek4014 emulations when\n        UTF-8 mode is enabled will not work properly.\n          <p>You must use the -u8 command line option to use this\n          feature, as well as compile with the OPT_WIDE_CHARS\n          definition.</p>\n        </li>\n\n        <li>cut/paste only copies 8-bit characters.</li>\n\n        <li>logging is disabled in the wide-character\n        configuration</li>\n\n        <li>printing only writes 8-bit characters.</li>\n\n        <li>input only does 8-bit characters. This is the area that\n        I know least about.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_96\" id=\"xterm_96\">Patch #96 - 1999/4/19 -\n  XFree86 3.9Pj</a></h1>\n\n  <ul>\n    <li>modify Makefile.in to work with configure script's --srcdir\n    option. (patch by Jeremy Buhler\n    &lt;jbuhler@cs.washington.edu&gt;)</li>\n\n    <li>add checks for 'echo -n' equivalent for 8colors.sh and\n    16colors.sh scripts (reported by Vikas Agnihotri).</li>\n\n    <li>improve logic that looks for bold fonts to allow for\n    wildcards in the specification for normal fonts, and to ensure\n    that if a bold font is specified as normal, that xterm will\n    simulate a bold version of that using a one-pixel offset\n    overstrike (reported by Henrik Harmsen\n    &lt;harmsen@erv.ericsson.se&gt;).</li>\n\n    <li>correct horizontal spacing of double width line-drawing\n    characters that xterm simulates.</li>\n\n    <li>improve support for Unix98 PTY's, using patch in Debian bug\n    report #35650, by Topi Miettinen\n    &lt;Topi.Miettinen@medialab.sonera.fi&gt;. Andreas Jaeger says\n    this also corrects a permissions problem reported by\n    cat@zip.net.au</li>\n\n    <li>modify initial-erase logic to ensure that\n    <code>ttyModes</code> resource overrides it.</li>\n  </ul>\n\n  <h1><a name=\"xterm_95\" id=\"xterm_95\">Patch #95 - 1999/4/5 -\n  XFree86 3.9Ph</a></h1>\n\n  <ul>\n    <li>modify primary DA response to allow a '1' parameter.</li>\n\n    <li>add printer and national replacement character sets to\n    VT220 primary DA response.</li>\n\n    <li>document primary and secondary DA responses in\n    ctlseqs.ms</li>\n\n    <li>use the patch number (e.g., 95) in the secondary DA\n    response, providing user applications a means of determining\n    the version of xterm for feature comparison (request by Bram\n    Moolenaar).</li>\n\n    <li>make xterm respond to secondary DA when the decTerminalID\n    is set for VT100.</li>\n\n    <li>limit user-defined keys (DECUDK) to VT220-style keyboard\n    when sunKeyBoard resource is true.</li>\n\n    <li>modify ifdef's for Linux-2.2.x with Glibc-2.1 to work with\n    Glibc-2.1 and no Unix98 PTY support (patch from Andreas Jaeger\n    &lt;aj@arthur.rhein-neckar.de&gt;)</li>\n\n    <li>add optional feature (resource and command-line options) to\n    make xterm use the PTY's sense of erase character on startup,\n    rather than requiring it to be \\177, or set the PTY's erase\n    character to match xterm's configuration. Note that while\n    $TERMCAP is modified to reflect the actual configuration, the\n    terminfo kdch1 string is not (request by Dirk H Hohndel\n    &lt;hohndel@suse.de&gt;)</li>\n\n    <li>improve scripts in vttests to work with newer shells that\n    do not use 'echo -n'.</li>\n\n    <li>add fonts.sh example script</li>\n\n    <li>correct inequality in handling of \"#1\" font\n    specification.</li>\n\n    <li>correct call to XGetWMNormalHints() used for computing\n    maximum screen size; the size hints may not have been set.</li>\n\n    <li>begin implementation of support for wide-characters\n    (configure option --enable-wide-chars defines OPT_WIDE_CHARS,\n    invoke xterm with -wc option to activate this feature). This\n    patch optionally widens internal data structures, invokes the\n    16-bit text output rather than the 8-bit version and adds some\n    tables.</li>\n  </ul>\n\n  <h1><a name=\"xterm_94\" id=\"xterm_94\">Patch #94 - 1999/3/27 -\n  XFree86 3.9Pf</a></h1>\n\n  <ul>\n    <li>further fixes for terminfo: ka1, ka3, etc., differ between\n    the default xterm-xfree86 and xterm-vt220 entries.</li>\n\n    <li>change default (with sunKeyboard resource false) behavior\n    of the editing keypad \"Delete\" to send a 127, like xterm-r6.\n    The VT220-style <code>&lt;ESC&gt;[3~</code> is sent when\n    sunKeyboard is true (reported by Tomas Vanhala).</li>\n\n    <li>add parameters to function keys to indicate if shift,\n    control or alt are set. The codes are based on a description of\n    a DEC VT510 with a PC keyboard, from Jeffrey Altman\n    &lt;jaltman@watsun.cc.columbia.edu&gt;.</li>\n\n    <li>add control sequence 1035, set-num-lock action and num-lock\n    menu entry to control the use of the NumLock and Alt keys for\n    the Sun/PC and VT220 keyboard extensions.</li>\n\n    <li>implement DECSET/DECRST numeric keypad (DECNKM) mode.</li>\n\n    <li>modify terminfo and termcap to use recommended \"X Window\"\n    or \"X11\" names rather than \"X Windows\" (reported by Tomas\n    Vanhala).</li>\n\n    <li>suppress translation of shifted keypad \"+\" when sunKeyboard\n    is true.</li>\n\n    <li>workaround unexpected behavior (perhaps bug) in\n    XmbLookupString, which returns trash in the string buffer for\n    numlock and control-key combined with keypad-keys.</li>\n\n    <li>modify ScrollBarReverseVideo() to keep scrollbar border\n    visible when reverse video is toggled.</li>\n\n    <li>correct missing case for parameter 17 (set highlight color)\n    in dynamic colors control sequences.</li>\n\n    <li>extend dynamic colors control sequences to allow users to\n    determine the colors and font which are currently active.</li>\n\n    <li>minor tweak to OSC responses, to use BEL if the application\n    used that to end the request, rather than ST. This works better\n    with shell scripts, which may not handle an\n    <code>&lt;ESC&gt;backslash</code> very well.</li>\n\n    <li>separate menu settings for reverse video from that done\n    under program control.</li>\n\n    <li>corrected ifdef's for menus, which did not allow tek4014 to\n    be suppressed properly (reported by Clint Olsen).</li>\n\n    <li>changes for Linux-2.2.x with GLibc-2.1 and /dev/ptmx\n    support (integrated patch from Pavel Roskin):\n      <ul>\n        <li>main.c and resize.c were using different rules to\n        determine whether ATT should be defined (actually\n        USE_USG_PTYS is more apt).</li>\n\n        <li>copy definitions from main.c to resize.c to prevent\n        sys/stream.h and sys/ptem.h from inclusion when SYSV is not\n        defined</li>\n\n        <li>define CNUL if not already defined like other\n        variables.</li>\n\n        <li>/dev/tty does exist in Linux, but it doesn't mean, it\n        should be used. Therefore EACCES is now an acceptable\n        result.</li>\n\n        <li>ifdef'd several calls such as <code>ioctl (ptyfd,\n        I_PUSH, \"ptem\")</code> to build on Linux (I_PUSH is not\n        defined when sys/stropts.h is not included).</li>\n      </ul>\n    </li>\n\n    <li>initialize second \"ltc\" variable in main.c (reported by\n    David Dawes).</li>\n\n    <li>provide definition for USE_USG_PTYS in screen.c</li>\n\n    <li>add resource-files to install rule in standalone\n    Makefile.in</li>\n\n    <li>add sample scripts to illustrate titlebar controls,\n    resizing and colors.</li>\n  </ul>\n\n  <h1><a name=\"xterm_93\" id=\"xterm_93\">Patch #93 - 1999/3/14 -\n  XFree86 3.9Pd</a></h1>\n\n  <p>Here are several fixes and minor enhancements. The chief ones\n  are the fixes for NumLock mode and reverse video, since we had\n  become used to working around the problems.</p>\n\n  <ul>\n    <li>remove kfnd/kll/kslt strings from terminfo, because curses\n    applications do not necessarily return khome/kend pairs\n    (reported by Vikas Agnihotri).</li>\n\n    <li>implement NumLock resource which overrides the keyboard\n    tables for the special case of keypad keys. This is a problem\n    introduced in xterm by X11R6 changes, i.e., an ambiguity which\n    in effect discarded vt100 keypad support.</li>\n\n    <li>modify Sun/PC keyboard mode to extend this (emulation of\n    DEC vt100 keypad) to the remainder of the numeric keypad. Now,\n    the default operating mode of xterm uses the keyboard tables\n    as-is (except if the NumLock mode overrides), but provides good\n    vt100 keypad compatibility if the Sun/PC keyboard menu item is\n    checked.</li>\n\n    <li>separate command-line settings for reverse video from that\n    done under program control. This is a problem which was\n    introduced by X11R6. Though <em>correct</em>, most users are\n    confused by allowing the reset command to undo the effect of\n    the command-line <kbd>-rv</kbd> option.</li>\n\n    <li>add description of function keys, keypad and cursor keys to\n    ctlseqs.ms</li>\n\n    <li>add terminfo entries for xterm-vt52, xterm-sun and\n    xterm-hp</li>\n\n    <li>correct typo (missing case value) for DECSET 35,\n    enable/disable shifted keypad action and a few compiler\n    warnings (reported by Zdenek Sekera &lt;zs@sgi.com&gt;).</li>\n\n    <li>correct reporting of color values 8-15 in DECRQSS (reported\n    by Vikas Agnihotri).</li>\n\n    <li>modify parsing of ttyModes resource to recognize \"^-\" as\n    \"undef\" (requested by Tomas Vanhala).</li>\n\n    <li>integrate/extend changes to add iconify/maximize actions\n    (from Edward S. Arthur &lt;eda@ultranet.com&gt;).</li>\n\n    <li>add control sequences for maximizing/restoring window, and\n    for reporting maximum screen size.</li>\n\n    <li>add 'interpret' action, to support local function-key\n    interpretation. Used properly, this makes most of the\n    specialized actions of xterm redundant.</li>\n\n    <li>add control sequence private modes 1051, 1052 and 1052, for\n    setting the Sun and HP function key modes, and for setting the\n    Sun/PC keyboard mode.</li>\n\n    <li>add configure option --disable-maximize</li>\n\n    <li>add configure option --disable-num-lcok</li>\n\n    <li>extend descriptions of configure script options in\n    INSTALL.</li>\n  </ul>\n\n  <h1><a name=\"xterm_92\" id=\"xterm_92\">Patch #92 - 1999/2/5 -\n  XFree86 3.9Nz</a></h1>\n\n  <ul>\n    <li>increase buffer size for tgetent (i.e., termcap) to 1500.\n    This fixes a problem where <em>screen</em> is built using\n    ncurses or GNU termcap and <em>xterm</em> is built using the\n    standard termcap interface. The former does not limit the\n    termcap size, while the latter is assumed to be no longer than\n    1023 characters. The <em>screen</em> program's termcap entry is\n    about 1200 characters long.</li>\n\n    <li>change update_menu_item() to a function, to simplify\n    debugging. This also reduces the executable by 4Kb.</li>\n\n    <li>add control sequences for DECSET 30, 1010, 1011 like rxvt\n    (enable or disable some features that were only settable via\n    resources or command line arguments).</li>\n\n    <li>add control sequence for DECSET 35, which enables/disables\n    the shifted keypad functions.</li>\n\n    <li>add support for switching font sizes, by stepping through\n    the font menu using shifted keypad plus and minus.</li>\n\n    <li>correct missing initialization of tekInhibit and tekSmall\n    resources.</li>\n\n    <li>correct ifdef's in charproc.c for XtNgeometry and\n    XtCGeometry (reported by Bram Moolenaar).</li>\n  </ul>\n\n  <h1><a name=\"xterm_91\" id=\"xterm_91\">Patch #91 - 1999/1/21 -\n  XFree86 3.9Nw</a></h1>\n\n  <ul>\n    <li>Implement logic to translate input characters which are\n    mapped when in vt220 National Replacement Character mode\n    (requested by Tomas Vanhala).</li>\n\n    <li>Resync configure scripts with my patches to autoconf\n    2.13</li>\n\n    <li>Change order of -lXmu and -lXext to accommodate cygwin32\n    (reported by Vikas Agnihotri).</li>\n\n    <li>Add \"-ti\" option to set terminal emulation level from\n    command line rather than via resource.</li>\n\n    <li>Simplify some of the preprocessor logic using #elif.</li>\n  </ul>\n\n  <h1><a name=\"xterm_90\" id=\"xterm_90\">Patch #90 - 1998/12/13 -\n  XFree86 3.9Nq</a></h1>\n\n  <p>This implements several small fixes and enhancements. The\n  chief one implements fallback support for line drawing characters\n  with fonts that do not include those characters. But I\n  implemented that last.</p>\n\n  <ul>\n    <li>If any of the glyphs in positions 0-31 (used by xterm to\n    implement the VT100 alternate character set) are zero-sized\n    (i.e., missing), xterm will reserve a normal space for the\n    glyph when drawing. I implemented a simple stroke-drawing\n    function to draw the line-drawing characters and a couple of\n    the other (simpler) characters such as diamond. (This was\n    suggested by Vikas Agnihotri).</li>\n\n    <li>Modify the computation of doublesize characters to work\n    around font servers which shift the scaled characters up/down\n    or do not give the correct width.</li>\n\n    <li>Add popup menu item and corresponding resource settings to\n    disable the font-scaling logic for doublesize characters to\n    work around (older) font servers which simply do not draw the\n    fonts scaled to the size that they said they would. I see this\n    problem on a SunOS system running X11R5; the X11R6 servers seem\n    well behaved.</li>\n\n    <li>Implement new escape sequence, private mode 1049, which\n    combines the switch to/from alternate screen mode with screen\n    clearing and cursor save/restore. Unlike the existing escape\n    sequence, this clears the alternate screen when switching to it\n    rather than when switching to the normal screen, thus retaining\n    the alternate screen contents for select/paste operations.\n      <p>When I implemented the popup menu entry to toggle between\n      the normal and alternate screens, I considered only pasting\n      from the normal screen to the alternate; this improvement\n      allows either direction.</p>\n    </li>\n\n    <li>Changed the termcap and terminfo for xterm-xfree86 and\n    xterm-8bit to use the new 1049 private mode.</li>\n\n    <li>Modify the logic which switches between normal and\n    alternate screens so that the save/restore cursor operations\n    apply only to the current screen. That means that applications\n    which use the terminfo smcur/rmcur or termcap ti/te\n    capabilities will restore the cursor to the original position\n    on the normal screen rather than to the most recent place where\n    a save-cursor operation was performed.\n      <p>I note that a real VT100 terminal would not behave in this\n      way, but it is a moot point since the VT100 does not\n      implement alternate screen, and therefore the save/restore\n      cursor sequence would not be used in this context. I reviewed\n      the logic which switches between normal and alternate screens\n      based on some recent newsgroup postings as well as a proposed\n      patch in the Debian group which attempts to do this (the\n      patch has a bug, however, so I did not use it).</p>\n    </li>\n\n    <li>Add popup menu entry for toggling the titeInhibit\n    resource.</li>\n\n    <li>Add new resource answerbackString, which overrides the\n    default \"xterm\" returned by xterm when responding to an ENQ\n    (control/E) character (request by Rajesh Vaidheeswarran\n    &lt;rv@fore.com&gt;).</li>\n\n    <li>Add new resource keyboardDialect for setting the NRC\n    display character set (request by Tomas Vanhala, who notes that\n    I should add logic to translate the keyboard as well).</li>\n\n    <li>Add new command-line option and corresponding resources for\n    making xterm generate escape sequences compatible with HP\n    terminals. Like the existing Sun escape sequences, this is\n    available as a popup menu item. It is enabled by the configure\n    script with the option --enable-hp-fkeys (requested by Toni\n    Mueller &lt;sales@oeko.net&gt;).</li>\n\n    <li>Add configure script option --disable-boxchars to disable\n    the fallback support for line drawing characters.</li>\n\n    <li>Fix ifdef's for configure script --disable-ansi-color, and\n    reviewed all configure options to ensure that all can be\n    enabled/disabled appropriately.</li>\n\n    <li>Update config.guess and config.sub, from Lynx.</li>\n  </ul>\n\n  <h1><a name=\"xterm_89\" id=\"xterm_89\">Patch #89 - 1998/11/20 -\n  XFree86 3.9Nm</a></h1>\n\n  <p>This patch completes the implementation of double-sized\n  character support for the VT100 emulation, and fixes a few minor\n  bugs:</p>\n\n  <ul>\n    <li>corrected the cursor position in HideCursor, which did not\n    multiply the column by two when in doublesize mode. This bug,\n    which did not appear in normal use, dates back to my original\n    <a href=\"#xterm_44\">changes</a> to partly implement\n    double-sized characters. I noticed it when cat'ing a typescript\n    from vttest's double-sized character test.</li>\n\n    <li>ensure that the current line is repainted when switching\n    between single and double width characters.</li>\n\n    <li>reduce the number of bits used for double-sized character\n    coding from 3 to 2, to make more room for soft-font codes.</li>\n\n    <li>copy newer ifdef's from the XFree86 3.3.3 release's main.c,\n    which address details of glibc and powerpc.</li>\n\n    <li>moved definition of DECL_ERRNO in xterm.h to match XFree86\n    3.3.3</li>\n\n    <li>modify <em>resize</em> to remove the ifdef on SVr4 that\n    suppressed printing the script for $LINES and $COLUMNS.\n    Solaris' resize utility does this; suppressing the behavior is\n    unnecessary.</li>\n  </ul>\n\n  <p>I tested the double-sized characters using vttest and the\n  xfsft patch. These fonts worked reasonably well:</p>\n\n  <pre>\n        -bitstream-courier-medium-r-normal--0-0-0-0-m-0-iso8859-1\n        9x15\n</pre>\n  <p>The iso8859 font does not include box characters, of course,\n  but looks good.</p>\n\n  <h1><a name=\"xterm_88\" id=\"xterm_88\">Patch #88 - 1998/10/31 -\n  XFree86 3.9Nk and 3.3.2h</a></h1>\n\n  <p>This refines my #85 patch by checking for a case where the\n  font server returns a bold font that does not quite correspond to\n  the normal font. When I asked for a bold version of the 6x12\n  font, the font server returned a near equivalent where the ascent\n  and descent values did not match, causing xterm to leave lines\n  across the display. This patch makes xterm reject that type of\n  mismatch, falling back to the old font behavior.</p>\n\n  <h1><a name=\"xterm_87\" id=\"xterm_87\">Patch #87 - 1998/10/21 -\n  XFree86 3.9Nj and 3.3.2f</a></h1>\n\n  <p>This corrects a problem reported by Stefan Dalibor. My table\n  entries for the <em>printerExtent</em> and\n  <em>printerFormFeed</em> resources used the wrong types for\n  sizeof, causing the printer to not work properly on some\n  platforms because the <em>printAttributes</em> resource was\n  overwritten (e.g., Digital Unix with DEC Alpha).</p>\n\n  <p>I reviewed all of the resource table entries and fixed a\n  potential problem with <em>resizeGravity</em>, which was typed as\n  <em>int</em> rather than <em>XtGravity</em>.</p>\n\n  <h1><a name=\"xterm_86\" id=\"xterm_86\">Patch #86 - 1998/10/14 -\n  XFree86 3.9Nj and 3.3.2e</a></h1>\n\n  <p>A small fix: when switching to/from the continuous mouse\n  reporting mode, the event mask was incorrect if xterm was built\n  under X11R5 because the original data was saved under an ifdef\n  for active-icon.</p>\n\n  <h1><a name=\"xterm_85\" id=\"xterm_85\">Patch #85 - 1998/10/12 -\n  XFree86 3.9Nj and 3.3.2e</a></h1>\n\n  <p>Some cleanup (I noticed the pixel droppings a few months ago\n  after getting a new 17\" monitor):</p>\n\n  <ul>\n    <li>split-out the functions that load/reload fonts for xterm as\n    new file fontutils.c to extend them to support automatic\n    loading of bold font corresponding to the normal font. Adapted\n    logic from EMU 1.3 for this purpose. This fixes most\n    occurrences of pixel droppings from bold characters.</li>\n\n    <li>modified by renaming variables and adding casts to permit\n    compile with g++.</li>\n\n    <li>modify headers so they can all be compiled without order\n    dependencies, and use bracketed rather than quoting includes to\n    allow compile from separate directory.</li>\n\n    <li>renamed xtermm terminfo entry to xterm-mono, to avoid\n    conflict with Solaris entry now in ncurses.</li>\n  </ul>\n\n  <h1><a name=\"xterm_84\" id=\"xterm_84\">Patch #84 - 1998/10/9 -\n  XFree86 3.9Ni and 3.3.2e</a></h1>\n\n  <p>Several small fixes and enhancements, including a patch from\n  Bjorn Helgaas:</p>\n\n  <ul>\n    <li>correct initialization of TERMCAP environment variable,\n    which was frequently set to garbage on non-Linux systems\n    because \"termcap\" and \"newtc\" contained random data from the\n    stack.</li>\n\n    <li>remove the LINEWRAPPED attribute from lines as they are\n    cleared. Previously, the attribute was set but never\n    cleared.</li>\n\n    <li>make word and line selections work even when lines are\n    wrapped by xterm. Previously, selections were limited to one\n    screen line.</li>\n  </ul>\n\n  <p>as well as</p>\n\n  <ul>\n    <li>modify logic for line-wrapping to reset the associated flag\n    if the application deletes a character. This fixes a problem\n    reported by Bjorn Helgaas where word/line selection would still\n    wrap even after deleting characters from the first line.</li>\n\n    <li>add kll/kH capabilities to xterm-xfree86 entries in termcap\n    and terminfo (request by Michael Schroeder).</li>\n\n    <li>shorten descriptions in termcap to make resolved entries\n    all shorter than 1023 character limit.</li>\n\n    <li>use DECSTR control sequence to shorten initialization and\n    reset strings in xterm-xfree86 termcap and terminfo.</li>\n\n    <li>use rmul/smul and rmir/smir in xterm-r5 terminfo to match\n    termcap.</li>\n\n    <li>correct typos in initialization and reset strings in\n    xterm-r5 termcap and terminfo.</li>\n\n    <li>disable special translations of key symbols (the backarrow\n    key, the editing keypad and the keypad \"+\") when a modifier\n    other than shift, control or numlock is used. This makes xterm\n    handle the meta key as expected by people using emacs (reported\n    by Pete Harlan &lt;harlan@pointofchoice.com&gt; in\n    linux.debian.user newsgroup).</li>\n  </ul>\n\n  <h1><a name=\"sync_83\" id=\"sync_83\">Resync #83 - 1998/10/7 -\n  XFree86 3.3.2e</a></h1>\n\n  <p>Merge changes through patch #83 with the 3.3.2e version.</p>\n\n  <p>This follows a change from XFree86 CVS which adds checks for\n  non-null return from malloc (patch by Matthieu Herrb).</p>\n\n  <h1><a name=\"xterm_83\" id=\"xterm_83\">Patch #83 - 1998/8/25 -\n  XFree86 3.9Nb</a></h1>\n\n  <p>Several small fixes and enhancements:</p>\n\n  <ul>\n    <li>add configure test to infer if xterm should be installed\n    setuid based on previously installed xterm (reported by Stephen\n    Marley and Stefan Dalibor).</li>\n\n    <li>implement quasi-continuous mouse reporting (integrated\n    patch by Jason Bacon).</li>\n\n    <li>correct control sequences transmitted by function keys F1\n    to F4 when sunFunctionKeys resource is true (it was still using\n    the VT100 control sequences).</li>\n\n    <li>modify handling of backarrow key so that the control\n    modifier toggles the backspace/delete interpretation set by the\n    backarrowKey resource.</li>\n\n    <li>limit the row and column values used to report mouse\n    position.</li>\n  </ul>\n\n  <p>From resync with XFree86 3.9Nb:</p>\n\n  <ul>\n    <li>add support for the VSTATUS control character (patch by\n    Robert Earl &lt;rearl@teleport.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_82\" id=\"xterm_82\">Patch #82 - 1998/7/15 -\n  XFree86 3.9Aj</a></h1>\n\n  <p>Bug fix for patch #81:</p>\n\n  <ul>\n    <li>remove an #undef for NBBY, which caused compile problem on\n    FreeBSD (reported by David Dawes).</li>\n  </ul>\n\n  <h1><a name=\"xterm_81\" id=\"xterm_81\">Patch #81 - 1998/7/14 -\n  XFree86 3.9Aj</a></h1>\n\n  <p>More bug fixes:</p>\n\n  <ul>\n    <li>fix conflicting ifdef's for TIOCSLTC when building with\n    Linux on AXP aka DEC Alpha (reported by Robin Cutshaw).</li>\n\n    <li>correction to patch #79, move assignment for\n    *utptr-&gt;ut_user = 0; back into non-SVR4 ifdef in main.c,\n    since this clobbers username on Solaris 2.5.1 (analysis by Will\n    Day &lt;willday@rom.oit.gatech.edu&gt;).</li>\n\n    <li>corrected khome/kend in xterm-8bit terminfo\n    description.</li>\n\n    <li>improve cursor color by making it always the reverse of\n    fg/bg unless the cursorColor resource is set, i.e., to\n    something other than the default foreground (reported by Vikas\n    Agnihotri and Bram Moolenaar).</li>\n\n    <li>minor fixes for compiler warnings, including a syntax error\n    in the AMOEBA ifdef's.</li>\n  </ul>\n\n  <p>From resync with XFree86 3.9Aj:</p>\n\n  <ul>\n    <li>correction to patch #73, supply missing #else for fallback\n    definitions of size_t, time_t (Robin Cutshaw\n    &lt;robin@intercore.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_80\" id=\"xterm_80\">Patch #80 - 1998/6/29 -\n  XFree86 3.9Ai</a></h1>\n\n  <p>This fixes a couple of items leftover or introduced by patch\n  79:</p>\n\n  <ul>\n    <li>take out the logic that suppresses editing-keypad in vt100\n    mode (those keys are too valuable to give up for a fine point\n    of emulation).</li>\n\n    <li>corrected a couple of places in terminfo where I missed\n    using the vt220-style editing-keypad codes for Find/Select\n    (mapped to Home/End).</li>\n\n    <li>checked termcap file against terminfo, fix several places\n    where it was inconsistent.</li>\n  </ul>\n\n  <h1><a name=\"xterm_79\" id=\"xterm_79\">Patch #79 - 1998/6/28 -\n  XFree86 3.9Ai</a></h1>\n\n  <p>This patch fixes several small bugs:</p>\n\n  <ul>\n    <li>use X_EXTRA_LIBS in standalone Makefile.in (patch by Tomas\n    Vanhala).</li>\n\n    <li>add new resource 'oldXtermFKeys' which provides backward\n    compatibility for F1-F4 control sequences with TOG's\n    xterm.</li>\n\n    <li>determine the server's default foreground/background Pixel\n    values, needed if the -flipPixels X server option is used\n    (reported by David Dawes).</li>\n\n    <li>correct logic for F1-F4 function keys so that they generate\n    VT100 compatible escape sequences in VT220 mode, since that is\n    what the numeric keypad is supposed to do (reported by Ron\n    Johnson, Jr. &lt;ronjohn@communique.net&gt;).</li>\n\n    <li>modify logic for editing keypad to work more like VT220:\n    don't pass those codes in VT100-mode unless oldXtermFKeys mode\n    is set.</li>\n\n    <li>correct an interaction with the editing-keypad logic that\n    prevented backarrow key from sending a 127 for the delete key\n    (the 'remove' escape sequence was being sent instead).</li>\n\n    <li>use return-value from getuid() rather than the parameter,\n    to work on systems which do not update the latter (patch by\n    Kevin Buhr &lt;buhr@mozart.stat.wisc.edu&gt;)</li>\n\n    <li>correct scrollbar border color when toggling to/from secure\n    keyboard mode (patch by Jeff Uphoff\n    &lt;juphoff@tarsier.cv.nrao.edu&gt;)</li>\n\n    <li>modifications to terminfo file:\n      <ul>\n        <li>rename description to xterm-xfree86, adding an entry\n        'xterm' which is derived from xterm-xfree86 to simplify\n        customization.</li>\n\n        <li>change string for kdch1 from \\177 to \\E[3~, to address\n        complaints from Debian developers. (This applies to the key\n        labeled \"Delete\", and does not affect the backarrow\n        key).</li>\n\n        <li>add user-strings u6, u7, u8, u9 to entries to make them\n        work with Daniel Weaver's \"tack\" program.</li>\n\n        <li>modify xterm-24, xterm-bold, xterm-boldso entries to\n        disentangle them from explicit dependency upon\n        xterm-xfree86.</li>\n\n        <li>add generic 'xterm-color' entry.</li>\n\n        <li>minor corrections to xterm-xfree86, xterm-8bit,\n        xterm-r5 and xterm-r6 entries.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_78\" id=\"xterm_78\">Patch #78 - 1998/6/3 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>Again, most of the bulk of this patch is for ANSI conversion.\n  I used the IRIX compiler's -wlint option to find the remaining\n  functions that use K&amp;R syntax (since gcc does not do this\n  properly). Also, I changed the logic in the print code slightly\n  to close unwanted files before opening a pipe to the printer.\n  This may help in some configurations where the line printer hangs\n  until xterm closes the pipe.</p>\n\n  <h1><a name=\"xterm_77\" id=\"xterm_77\">Patch #77 - 1998/5/26 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>Most of the bulk of this patch is to convert the extended C\n  (K&amp;R functions with prototypes) to ANSI. I verified that on\n  Linux by comparing object files, to ensure that I did not, for\n  example, interchange parameters in the function declarations.</p>\n\n  <p>The rest of the patch fixes several minor bugs, and adds a few\n  features:</p>\n\n  <ul>\n    <li>back-out my use of ncurses \"captoinfo -f\" option\n    (if/then/else/endif) formatting, since ncurses did not\n    correctly filter embedded newlines in terminfo capability\n    strings until _after_ ncurses 4.1, thus corrupting\n    setf/setb/sgr strings (reported by Darren Hiebert and\n    others).</li>\n\n    <li>document SGR 8, 28 (invisible/visible), add corresponding\n    capabilities to terminfo description.\n      <p>I would also add the 'prot protected capability, but the\n      control sequences for that would not be recognized or\n      properly ignored by the older xterm programs.</p>\n    </li>\n\n    <li>modify ChangeGroup to not suppress a null-resource, but\n    treat it as an empty string (recommended by Stefan\n    Dalibor).</li>\n\n    <li>add printerAutoClose resource to control whether printer is\n    closed when going offline. More than one person reports\n    problems (on Solaris 2.6 and Digital Unix 4.0) getting the\n    printer to proceed unless xterm exits; I think that it is a\n    problem flushing the pipe. Closing it ought to flush it.</li>\n\n    <li>adapt TOG fix-3 to in HandleKeymapChange and VTInitI18N\n    (but adapt XtStackAlloc/XtStackFree for clarity, as well as\n    fixing memory leak).</li>\n\n    <li>change calls on FillCurBackground to ClearCurBackground, in\n    effect using XClearArea rather than XFillRectangle when\n    clearing as a side-effect of scrolling and insertion (patch by\n    Alexander V Lukyanov)</li>\n\n    <li>correct some places where insert/delete did not _move_ the\n    color attributes, using memmove (patch by Alexander V Lukyanov\n    &lt;lav@long.yar.ru&gt;)</li>\n\n    <li>add ifdef's for __CYGWIN32__, for port to cygnus version\n    B19.1 (patch by Andrew Sumner\n    &lt;andrew_sumner@hotmail.com&gt;).</li>\n\n    <li>remove #define for hpux that turned on USE_SYSV_ENVVARS,\n    since this causes some applications (such as 'less') to get\n    incorrect $LINES and $COLUMNS values (reported by Clint\n    Olsen).</li>\n\n    <li>modify behavior for HP-UX, to set the \"reserved\" process\n    group controls to _POSIX_VDISABLE so the TIOCSLTC ioctl does\n    not produce an error (patch by Ben Yoshino\n    &lt;ben@wiliki.eng.hawaii.edu&gt;).</li>\n\n    <li>correct length of underlining, reducing it by one pixel to\n    avoid leaving a dot when the application does not clear the\n    whole screen I noticed this only recently myself (and other\n    people as well); it depends on the font chosen. A 6x10 font\n    shows it, but the other fonts from XTerm.ad do not. I also see\n    a similar problem with the emulation of bold fonts. (patch by\n    Sergei Laskavy &lt;Laskavy@cs.msu.su&gt;).</li>\n\n    <li>add include for Xos.h to xterm.h, to ensure proper\n    definitions (reported by Holger Veit).</li>\n\n    <li>update config.guess to recognize Unixware 2.1 and 7 (patch\n    by Mike Hopkirk &lt;hops@sco.com&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_76\" id=\"xterm_76\">Patch #76 - 1998/5/8 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>A fix for the print-window function, and some minor\n  cleanup:</p>\n\n  <ul>\n    <li>modify logic that closes pipe in the print-window function\n    to not use pclose, which does not work on all systems, since I\n    did not open the pipe with popen (reported by Stefan\n    Dalibor).</li>\n\n    <li>correct name of $(EXTRA_LOAD_FLAGS) imake variable\n    (reported by Stefan Dalibor).</li>\n\n    <li>guard logic in ChangeGroup() function against null pointer\n    (reported by Stefan Dalibor).</li>\n\n    <li>ensure that menu entry for toggling sunKeyboard resource is\n    initialized (reported by Branden Robinson\n    &lt;branden@purdue.edu&gt;).</li>\n\n    <li>gcc unused-variable warnings (reported by Bernd Ernesti\n    &lt;bernd@arresum.inka.de&gt;)</li>\n\n    <li>rename global variable 'buffer' to 'VTbuffer'</li>\n  </ul>\n\n  <h1><a name=\"xterm_75\" id=\"xterm_75\">Patch #75 - 1998/5/7 -\n  XFree86 3.9Ah and 3.3.2</a></h1>\n\n  <p>This incorporates fixes from several people, as well as some\n  improvements that I made based on feedback from users:</p>\n\n  <ul>\n    <li>add option to standalone configure script,\n    \"--with-own-terminfo-dir\", which causes xterm to pass a\n    predefined value of $TERMINFO to the application. Also use this\n    value in install rule \"make install-ti\", for the standalone\n    configure script. (patch &amp; feedback from Tor Lillqvist\n    &lt;tml@hemuli.tte.vtt.fi&gt;)</li>\n\n    <li>change ifdef's for \"hpux\" to \"__hpux\" (patch by Tor\n    Lillqvist). The imake configuration uses the former, but the\n    latter is predefined by HP's compilers.</li>\n\n    <li>define USE_SYSV_ENVVARS for HP-UX, curses does not use\n    $TERMCAP (patch by Tor Lillqvist).</li>\n\n    <li>on HP-UX, use the /dev/ptym/clone device to allocate PTY's.\n    Works both on HP-UX 9 and 10. (patch by Tor Lillqvist).</li>\n\n    <li>modify configure script to obtain the $(EXTRA_LOADFLAGS)\n    value from imake, needed for compiling under DEC OSF/1\n    (reported by Stefan Dalibor)</li>\n\n    <li>modify print-window action so that the printer is closed\n    after printing a window, unless the printer was already opened\n    (i.e., by an application running in the window). This makes the\n    printing complete without having to exit xterm, since not all\n    systems treat fflush through a pipe very well (reported by\n    Stefan Dalibor)</li>\n\n    <li>modify printing code so that the ^M's are not printed if\n    the printAttribute resource is set to zero (request by Stefan\n    Dalibor).</li>\n\n    <li>correct typo in xterm.man, for the default value of\n    printAttribute (reported by Stefan Dalibor).</li>\n\n    <li>correct printing code so that the alternate character set\n    is printed, like other attributes, with escape sequences.</li>\n\n    <li>correct termcap description, removing spurious 'm'\n    character from the 'op' capability (reported by Greg Woods\n    &lt;woods@weird.com&gt;).</li>\n\n    <li>correct trace code so that the initial timestamp is\n    set.</li>\n\n    <li>correct/modify utmp data for the Linux glibc 2\n    configuration, so that the ut_line member is set before using\n    it to update wtmp (patch by Bill Nottingham\n    &lt;wen1@cec.wustl.edu&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_74\" id=\"xterm_74\">Patch #74 - 1998/4/27 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This corrects a couple of recent bugs and adds a new\n  resource:</p>\n\n  <ul>\n    <li>modify definition of TRACE_CHILD so that it does not\n    conflict with ifdef's for USE_USG_PTYS in main.c (reported by\n    Vikas Agnihotri &lt;VikasA@att.com&gt; and Stefan\n    Dalibor).</li>\n\n    <li>correct ownership of file (actually pipe) written by the\n    print controls. When undoing the setuid changes in patch #69, I\n    overlooked this. Now xterm forks a process which resets setuid\n    and routes the printer data as the real user.</li>\n\n    <li>add a new resource, \"printAttributes\", which controls\n    whether color attributes (or any attributes) are sent to the\n    printer.</li>\n  </ul>\n\n  <h1><a name=\"xterm_73\" id=\"xterm_73\">Patch #73 - 1998/4/25 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>implements a print-window facility for xterm. Though useful\n    in itself, I added it as part of some debugging which I am\n    doing. (Occasionally during an exposure event xterm fails to\n    restore the proper colors for highlighted text, and printing\n    the screen will show the internal states nicely).\n      <p>The print facility now also displays the color\n      information. (I will probably make this a resource).</p>\n    </li>\n\n    <li>modified the xterm-16color terminfo description to use the\n    setaf and setab strings, which is a little more efficient\n    (requested by Stephen Marley).</li>\n\n    <li>reduced some clutter of the ifdef/includes (e.g., stdlib.h,\n    unistd.h, errno) making the configure script test for these.\n      <p>I removed the symbols Size_t and Time_t, since they no\n      longer serve a useful purpose.</p>\n    </li>\n\n    <li>added some debugging traces to show the initial screen\n    size, and the success/failure of the ioctl calls pass handle\n    window resizing events to the application (for Clint Olsen).\n      <p>I also modified the trace code to produce two files since\n      some of the information is produced by the child process. So\n      now they are Trace-parent.out and Trace-child.out</p>\n    </li>\n\n    <li>updated configure test for ANSI compiler options to handle\n    a special case for HP-UX 10.x (reported by Clint Olsen).</li>\n  </ul>\n\n  <h1><a name=\"xterm_72\" id=\"xterm_72\">Patch #72 - 1998/4/17 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This is a patch from Chris Siebenmann\n  &lt;cks@hawkwind.utcs.toronto.edu&gt;, which I have cleaned up a\n  little, and integrated into the configure script.</p>\n\n  <p>From his description:</p>\n\n  <blockquote>\n    <p>This set of patches is the latest incarnation of patches\n    originally written by Ian! D Allen, then of the University of\n    Waterloo and now of who knows where; I have been carrying them\n    forward from xterm to xterm ever since about X11R4. What they\n    do is add an option so that when an iconified xterm receives\n    output it prepends '*** ' to its icon title and (optionally)\n    beeps the bell; deiconifying the xterm removes the '*** '. Over\n    the years I've found this to be incredibly convenient for\n    monitoring all sorts of low-activity things.</p>\n  </blockquote>\n\n  <h1><a name=\"xterm_71\" id=\"xterm_71\">Patch #71 - 1998/4/12 -\n  XFree86 3.9Ag and 3.3.2</a></h1>\n\n  <p>This patch is a slightly modified version of one by Richard\n  Braakman, which prevents buffer overflow in the input-method and\n  preedit-type parsing in xterm. I changed a couple of details to\n  make the code more maintainable, and looked for similar things -\n  copying into a fixed-size buffer (found none, though I did spot\n  an unused variable).</p>\n\n  <h1><a name=\"xterm_70\" id=\"xterm_70\">Patch #70 - 1998/3/29 -\n  XFree86 3.9Af and 3.3.2</a></h1>\n\n  <p>This patch corrects some minor bugs in xterm, and fills in\n  some more details in the VT220 emulation:</p>\n\n  <ul>\n    <li>modify Imakefile to use SpecialCObjectRule for menu and\n    data modules, making xterm build properly if logging is enabled\n    (patch by Scott Sewall &lt;scott@iprg.nokia.com&gt;).</li>\n\n    <li>restore \"ich\" capability to terminfo entries, since Michael\n    Schroeder points out that \"ich1\" is the one which is the\n    problem in Solaris vi.</li>\n\n    <li>correct color of cursor, which would disappear on\n    inverse-video since the initialization did not compare the\n    cursor color against both foreground and background (reported\n    by Olivier Calle).</li>\n\n    <li>correct abbreviation-test for -version and -help options,\n    making command-line option -vb work (reported by Stefan\n    Dalibor).</li>\n\n    <li>correct a dependency between ifdef's for OPT_I18N_SUPPORT\n    and OPT_INPUT_METHOD (reported by Stefan Dalibor).</li>\n\n    <li>split-out character-set translations as new module\n    charsets.c, to implement VT220 national replacement character\n    sets (a mode where some of the characters are displayed as\n    specific European glyphs). This relies on xterm using an ISO\n    8859-1 font (approach suggested by Kenneth R. Robinette\n    &lt;zkrr01@mailbox.neosoft.com&gt;).</li>\n\n    <li>correct a missing increment, which made SS2 and SS3\n    controls repeat the shifted character.</li>\n\n    <li>add xterm-nrc to terminfo to illustrate the VT220 national\n    replacement character sets.</li>\n\n    <li>reformat terminfo using new ncurses tic option \"-f\", which\n    makes if/then/else/endif expressions easier to read.</li>\n  </ul>\n\n  <h1><a name=\"xterm_69\" id=\"xterm_69\">Patch #69 - 1998/3/16 -\n  XFree86 3.9Ad and 3.3.2</a></h1>\n\n  <p>This corrects the problem in xterm with utmp, reported by\n  Olivier Calle &lt;olivier@tc.fluke.com&gt; as well as some other\n  people after the XFree86 3.3.2 release.</p>\n\n  <p>The error was introduced by my patch #53 in XFree86 3.9r\n  (October 1997).</p>\n\n  <p>The correction removes the reset of setuid/setgid before the\n  main event loop, and solves the problem which I had worked around\n  in a different manner: for some reason, the particular waitpid()\n  call in creat_as() hangs, does not return when the child process\n  exits. I changed the ifdef's to force the Linux configuration to\n  use wait() instead. This call appears to work properly on other\n  platforms such as SunOS and Solaris.</p>\n\n  <p>I also added tests in the standalone configure script to check\n  for the existence of waitpid().</p>\n\n  <h1><a name=\"xterm_68\" id=\"xterm_68\">Patch #68 - 1998/3/4 -\n  XFree86 3.9Ad and 3.3.1z</a></h1>\n\n  <p>This corrects another problem with the logic for\n  highlightColor resource. As reported by David Dawes:</p>\n\n  <blockquote>\n    <p>I've just noticed a problem with with the \"inverse\" control\n    sequence (ESC[7m) with the 3.3.2 xterm. What it does is sets\n    the background black, and the text the usual foreground colour\n    rather than simply swapping the foreground/background.</p>\n  </blockquote>\n\n  <p>This appears to be because when I added logic to check that\n  the highlightColor was distinct from foreground and background\n  colors, I did not add a further check to see that it was not\n  black (I would make an explicit check for the resource not being\n  set, but see nothing definite in the headers that would let me\n  reference an explicitly-undefined Pixel value, though there are\n  some implications in xpm.h). But this should work.</p>\n\n  <h1><a name=\"xterm_67\" id=\"xterm_67\">Patch #67 - 1998/2/23 -\n  XFree86 3.9Ad and 3.3.1e</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>improve test for highlightColor so that xterm does not\n    attempt to use that unless it is different from the foreground\n    and background colors (reported by Stefan Dalibor\n    &lt;Stefan.Dalibor@informatik.uni-erlangen.de&gt;.\n      <p>I could not reproduce this until I noticed that the -rev\n      option exposed it nicely.</p>\n    </li>\n\n    <li>remove ich and ich1 from xterm and xterm-8bit terminfo\n    descriptions. SVr4 terminfo documents that you must not combine\n    these with smir/rmir, but ncurses allows it, opening a hole.\n    Solaris 2.6 vi does not work properly if it is using a terminfo\n    description when these are combined, since it was written to\n    accommodate old terminals that required it (reported by Stephen\n    Marley).</li>\n\n    <li>restore 1-pixel overlap of scrollbar border with left edge\n    of window (reported by Jim Burmeister\n    &lt;jimb@metrolink.com&gt;).</li>\n\n    <li>add a configure option, --enable-logfile-exec, which allows\n    the user to specify a pipe for logfile. This defines\n    ALLOWLOGFILEEXEC.</li>\n\n    <li>makes the ALLOWLOGFILEEXEC code compile &amp; run, if\n    configured.</li>\n\n    <li>minor documentation nits.</li>\n  </ul>\n\n  <h1><a name=\"xterm_66\" id=\"xterm_66\">Patch #66 - 1998/2/16 -\n  XFree86 3.9Ad and 3.3.1d</a></h1>\n\n  <p>This fixes the problem reported with failure to build the\n  <em>resize</em> program (BSDI, OSF/1) due to not having\n  &lt;termcap.h&gt;, by changing the ifdef to one that would be set\n  only if the file exists (not currently specified, except by the\n  standalone configure script). We do not really need to include\n  &lt;termcap.h&gt; to build, but only for a clean compile, since\n  it may declare the tgetent() prototype. I also updated the\n  man-page for <em>resize</em>, since I had recently noticed that\n  it can be used to resize <em>xterm</em> using the \"Sun\" control\n  sequences option.</p>\n\n  <h1><a name=\"xterm_65\" id=\"xterm_65\">Patch #65 - 1998/2/14 -\n  XFree86 3.9Ad and 3.3.1c</a></h1>\n\n  <p>This is a small patch to xterm's 8-bit terminal description. I\n  noticed while testing ncurses that I had specified the wrong\n  (VT100-style) codes for the F1-F4. Xterm only uses VT220-style\n  function keys in 8-bit mode.</p>\n\n  <h1><a name=\"xterm_64\" id=\"xterm_64\">Patch #64 - 1998/2/8 -\n  XFree86 3.9Ad</a></h1>\n\n  <p>This fixes the following problems with xterm:</p>\n\n  <ul>\n    <li>save/restore the ANSI foreground and background colors with\n    the other visible attributes in the save-cursor and\n    restore-cursor operations. This works around a problem with\n    vim, which apparently assumed that switching between the normal\n    and alternate screens resets the colors (reported by Jim Battle\n    &lt;jb@chromatic.com&gt;).\n      <p>It would be nice to implement save/restore cursor as a\n      stack (and solve this type of problem completely), but that\n      would lead to incompatibility with applications which assume\n      they are running with a VT100 or VT220.</p>\n    </li>\n\n    <li>corrects behavior of a restore-cursor operation which does\n    not follow a save-cursor (it is supposed to set the character\n    sets to a known initial state).</li>\n\n    <li>extends the sunKeyboard resource (and menu toggle) to\n    modify the home, end and delete keys on a Sun or PC editing\n    keypad, making them generate codes compatible with DEC VT220's\n    Find, Select and Remove keys.</li>\n\n    <li>corrects a length in checking command-line options, which\n    caused the \"-help\" message to not work when X was not\n    running.</li>\n\n    <li>add some detail to the man-page (requested by Jason Bacon\n    &lt;acadix@execpc.com&gt;)</li>\n\n    <li>modify the standalone configure script to ignore the broken\n    nsl and socket libraries on IRIX 6.2 (the ones on 5.2 also are\n    broken, so this change just widens the check for the system\n    version number).</li>\n  </ul>\n\n  <h1><a name=\"xterm_63\" id=\"xterm_63\">Patch #63 - 1998/2/5 -\n  XFree86 3.9Ad</a></h1>\n\n  <p>This is another patch from Bjorn Helgaas\n  &lt;helgaas@rsn.hp.com&gt;, which I've reviewed (and learned\n  some). Following are his notes:</p>\n\n  <p>I poked around some more and finally got xterm-62 to build and\n  run cleanly on HP-UX 10.20. Here are the patches. They look sort\n  of ugly, so here's a little explanation:</p>\n\n  <ul>\n    <li>aclocal.m4: Removed side effects from the AC_CACHE_VAL\n    commands in CF_FUNC_TGETENT. Previously, LIBS was set inside\n    AC_CACHE_VAL, which worked fine the first time configure was\n    run, but failed if there were cached values.</li>\n\n    <li>aclocal.m4: Added temporary setting of LIBS before\n    AC_TRY_LINK in CF_FUNC_TGETENT. Previously, the last value set\n    by the AC_TRY_RUN loop was used, so only -lcurses was\n    checked.</li>\n\n    <li>configure.in: Added temporary setting of CPPFLAGS before\n    AC_CHECK_HEADERS for X11 files. Previously\n    &lt;X11/DECkeysym.h&gt; and &lt;X11/Xpoll.h&gt; were found only\n    if they were in the compiler's default include directories,\n    even if `--x-includes=DIR' had been used or AC_PATH_XTRA had\n    found them elsewhere.</li>\n  </ul>\n\n  <p>The problem on HP-UX was that we were linking with -lcurses\n  rather than -ltermcap due to the second bullet above, and\n  apparently something in HP-UX curses is broken. This seems very\n  strange, because the only thing used is tgetent, which should\n  affect any tty/pty configuration, but I lost interest in tracking\n  down the exact problem.</p>\n\n  <h1><a name=\"xterm_62\" id=\"xterm_62\">Patch #62 - 1998/1/23 -\n  XFree86 3.9Ac</a></h1>\n\n  <p>This is a patch mostly by Bjorn Helgaas\n  &lt;helgaas@dhc.net&gt; (I added the os2main.c change, and a\n  little of the documentation). From Bjorn's description:</p>\n\n  <ul>\n    <li>If you use the \"-hc &lt;color&gt;\" option or set the\n    \"highlightColor\" resource, text is highlighted by changing only\n    the background color, rather than using reverse video. I find\n    this easier to read, especially when selecting multi-colored\n    text, and it is similar to the way Netscape shows\n    selections.</li>\n\n    <li>Most of the code changes are under \"#if\n    OPT_HIGHLIGHT_COLOR\". The principal exception is in screen.c,\n    where I added a couple calls to resetXtermGC(). This seems like\n    it could be a bug even without the color highlighting changes\n    (though I don't pretend to understand all the logic).</li>\n  </ul>\n\n  <h1><a name=\"xterm_61\" id=\"xterm_61\">Patch #61 - 1998/1/17 -\n  XFree86 3.9Ac</a></h1>\n\n  <p>This patch modifies the reset behavior of xterm slightly:</p>\n\n  <ul>\n    <li>change the terminfo entry so that rs1 (one of the strings\n    used by the 'reset' program) does a hard reset rather than\n    switching character sets. This is more in accord with other\n    terminal descriptions.</li>\n\n    <li>modifies the treatment of hard reset by the xterm program\n    to reset the saved lines.</li>\n\n    <li>corrects hard reset by also resetting user-defined keys,\n    i.e., DECUDK.</li>\n  </ul>\n\n  <h1><a name=\"xterm_60\" id=\"xterm_60\">Patch #60 - 1998/1/10 -\n  XFree86 3.9Ab</a></h1>\n\n  <p>This fixes some minor bugs and adds new functionality:</p>\n\n  <ul>\n    <li>add support for blinking text.\n      <ul>\n        <li>This does not actually cause the text to flash, but\n        text with the blink attribute can be displayed in color,\n        using new resources colorBL and colorBLMode.</li>\n\n        <li>If colors are not used, the blinking text will be\n        displayed as before (just like bold). The main purpose of\n        this is to make applications work properly when they assume\n        the emulator supports blinking text.</li>\n\n        <li>I did this by moving the per-cell LINEWRAPPED flag to a\n        per-line flag, to make room for the new BLINK flag. There\n        were no per-line flags, so this changes a lot of\n        logic.</li>\n      </ul>\n    </li>\n\n    <li>corrected missing save-cursor logic in the handling of SGR\n    1048 (the new control sequence I added in patch #54,\n    1997/10/17). Reported by Darren Hiebert.</li>\n\n    <li>flush the output of the transparent printing after each\n    line Reported by Tomas Vanhala\n    &lt;vanhala@ling.helsinki.fi&gt;.</li>\n\n    <li>correct the modes that are affected by save/restore cursor\n    by adding WRAPAROUND and PROTECTED.</li>\n\n    <li>corrected placement of one of the XSync calls that I added\n    in patch #51, 1997/9/15, which had the side-effect of writing\n    on the window border when the xterm was resizing from 132 to 80\n    columns.</li>\n\n    <li>work around an incompatibility of the XKB definition used\n    in xterm versus that symbol from IRIX 6.2's imake definitions\n    (by adjusting the standalone configure script).</li>\n  </ul>\n\n  <h1><a name=\"xterm_59\" id=\"xterm_59\">Patch #59 - 1998/1/5 -\n  XFree86 3.9Ab</a></h1>\n\n  <p>My last patch has an off-by-one error in the comparison for\n  argc. Douglas Kosovic &lt;douglask@dstc.edu.au&gt; showed me\n  where (he got a core dump). Also, I think this explains Clint\n  Olsen's problem, but the symptoms were more subtle (EINVAL for a\n  system call if the -display option is omitted).</p>\n\n  <h1><a name=\"xterm_58\" id=\"xterm_58\">Patch #58 - 1998/1/3 -\n  XFree86 3.9Ab</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>implement logic to permit xterm to work with proportional\n    fonts.\n      <ul>\n        <li>Thomas Wolff &lt;Thomas.Wolff@sietec.de&gt; requested\n        this (but it isn't exactly what he's asking for - that's a\n        more involved task).</li>\n\n        <li>I chose to do this by rendering the characters on a\n        fixed pitch, because it would not be useful for existing\n        applications to display varying numbers of characters on\n        each line.</li>\n\n        <li>Except that this forces the display to be wider, it\n        works reasonably well. A couple of special cases (reverse +\n        colorBD, for example) do not display with proper colors,\n        since the inter-character gaps are painted with the\n        background.</li>\n      </ul>\n    </li>\n\n    <li>added a version number to the program (several people have\n    requested this).</li>\n\n    <li>make the -version and -help options interpreted before the\n    program attempts to open the display.</li>\n\n    <li>minor reorganization of the man-page (ordered the options,\n    resources and translations alphabetically - and eliminated some\n    duplication).</li>\n\n    <li>corrected a misspelled filename in Makefile.in, and added a\n    lint rule.</li>\n\n    <li>updated the configure script to correct behavior when it\n    cannot find imake, as well as to fix the IRIX+gcc build\n    (conflict with /usr/include).</li>\n\n    <li>regenerated the configure script with a newer patch to\n    autoconf that fixes a problem with environment space vs the\n    configure --help message.</li>\n  </ul>\n\n  <h1><a name=\"xterm_57\" id=\"xterm_57\">Patch #57 - 1997/12/26 -\n  XFree86 3.9Aa</a></h1>\n\n  <p>This patch is mostly concerned with the standalone configure\n  script; a few minor corrections are added:</p>\n\n  <ul>\n    <li>add configure option --disable-tek4014, to allow xterm to\n    be built without the tek4014 emulation.</li>\n\n    <li>add configure option --with-terminal-type, to allow xterm\n    to be compiled with default $TERM value other than \"xterm\"\n    (e.g., \"xterm-16color\") -- requested by Stephen Marley\n    &lt;stephen@memex.com&gt;.</li>\n\n    <li>fix a typo in the configure --help message -- reported by\n    Darren Hiebert &lt;darren@hmi.com&gt;.</li>\n\n    <li>review diffs between main.c and os2main.c, to make them\n    more alike. (applies some minor bug-fixes to OS/2's\n    version).</li>\n\n    <li>add missing quotes in memmove/bcopy configure test</li>\n  </ul>\n\n  <h1><a name=\"xterm_56\" id=\"xterm_56\">Patch #56 - 1997/11/28 -\n  XFree86 3.9x</a></h1>\n\n  <p>This patch is based on analysis by Arfst Ludwig\n  &lt;arfst@luxor.IN-Berlin.DE&gt;, who reported:</p>\n\n  <blockquote>\n    <p>Setting the following resources xterm (all current versions)\n    receives a segmentation fault on &lt;Btn2Up&gt; after\n    scrolling:</p>\n\n    <pre>\n          *XTerm*VT100*translations:    #override \\\n              ~Shift~Ctrl&lt;Btn2Up&gt;: insert-selection(PRIMARY, CUT_BUFFER0)\\n\\\n              Shift~Ctrl&lt;Btn2Up&gt;:  insert-selection(CLIPBOARD, CUT_BUFFER1)\\n\\\n              ~Shift&lt;BtnUp&gt;:       select-end(PRIMARY, CUT_BUFFER0)\\n\\\n              Shift&lt;BtnUp&gt;:        select-end(CLIPBOARD, CUT_BUFFER1)\n</pre>\n    <p>(The above resources intention is to be able to paste the\n    latest selection even if the xterm was cleared.)</p>\n\n    <p>And here is how it works (and a fix!): The widget given to\n    the action handler as first argument is not guaranteed to be a\n    XtermWidget (it can be the ScrollbarWidget). Instead of\n    accessing the widget's member directly XtDisplay gives the\n    required pointer in a safe way.</p>\n  </blockquote>\n\n  <p>I noticed that this was not the only instance (by reading the\n  code, and testing with his example), and extended the solution to\n  check the widget-class to ensure that it is indeed xterm's widget\n  class before attempting to use it in the context of\n  translations.</p>\n\n  <h1><a name=\"xterm_55\" id=\"xterm_55\">Patch #55 - 1997/11/25 -\n  XFree86 3.9x</a></h1>\n\n  <p>This fixes the segmentation violation noted by Rogier Wolff\n  about a month ago. He'd set xterm to 400 (rows) by 150 columns,\n  which broke because there were limited buffers (200 rows) used\n  for juggling data when adding or deleting lines and for switching\n  between alternate and normal screens. I replaced this by an\n  allocated buffer.</p>\n\n  <p>The bug is simple to test if you set titeInhibit false.</p>\n\n  <h1><a name=\"xterm_54\" id=\"xterm_54\">Patch #54 - 1997/10/17 -\n  XFree86 3.9s</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>correct a minor placement problem with the right\n    scrollbar.</li>\n\n    <li>implement a new set of control sequences for switching\n    between the normal and alternate VT100 screens. These work\n    around the older sequences limitation that required\n    modification of the runtime $TERMCAP to cooperate with the\n    titeInhibit resource (that can't work with terminfo). I do this\n    by moving all of the functionality of the rmcur terminfo\n    capability into the control sequences.</li>\n\n    <li>implement the alternate-screen menu entry</li>\n  </ul>\n\n  <h1><a name=\"xterm_53\" id=\"xterm_53\">Patch #53 - 1997/10/12 -\n  XFree86 3.9r</a></h1>\n\n  <p>This patch adds a fix and implements a new feature (as well as\n  some minor typos):</p>\n\n  <ul>\n    <li>JCHANDRA@Inf.COM (JCHANDRA) noted that there was still a\n    problem with the wait call with the logging option. It hung\n    when the logfile was opened as a command-line option. I fixed\n    this by moving the StartLogging() call down past the place\n    where I'd reset the setuid mode. So the logfile is opened as\n    the real user, without having to fork.</li>\n\n    <li>improve Rohleder's changes by renaming the command-line\n    options and reducing the number of ifdef's.</li>\n\n    <li>implement right-scrollbars for xterm (patch by Michael\n    Rohleder &lt;michael.rohleder@stadt-frankfurt.de&gt;).</li>\n  </ul>\n\n  <h1><a name=\"xterm_52\" id=\"xterm_52\">Patch #52 - 1997/9/29 -\n  XFree86 3.9q</a></h1>\n\n  <p>This patch addresses bugs and requests reported by</p>\n\n  <ul>\n    <li>Bob Maynard &lt;rmaynard@montana.com&gt;,</li>\n\n    <li>Clint Olsen &lt;olsenc@ichips.intel.com&gt;,</li>\n\n    <li>JCHANDRA@Inf.COM (JCHANDRA),</li>\n\n    <li>Michael Schroeder\n    &lt;Michael.Schroeder@informatik.uni-erlangen.de&gt;,</li>\n\n    <li>Pablo Ariel Kohan &lt;pablo@memco.co.il&gt;</li>\n  </ul>\n\n  <p>Some of the changes are interrelated (it was an unusually busy\n  week).</p>\n\n  <ul>\n    <li>change the default resource value for colorMode to true,\n    matching the Xterm.ad file.</li>\n\n    <li>correct behavior of 'ech' control, making the default and 0\n    parameters erase one character rather than to the end of line\n    (reported by Michael Schroeder).</li>\n\n    <li>add resource boldColors, command-line options +pc and -pc\n    and configure-script option to specify behavior of xterm's\n    mapping bold colors 0 through 7 to colors 8 through 15.\n    (request by Pablo Ariel Kohan).</li>\n\n    <li>add resource colorAttrMode to specify whether colorULMode\n    and colorBDMode can override the ANSI colors (report by Clint\n    Olsen).</li>\n\n    <li>correct a conflict between colorULMode/colorBDMode versus\n    ANSI colors, where exposure events would occasionally pick up\n    the former (e.g., colorBD) rather than ANSI colors. Testing the\n    colorAttrMode made this apparent, though it has been in the\n    code since 3.2A (patch #35 in Jan 1997).</li>\n\n    <li>correct two problems with the optional logging support. On\n    Linux at least, the waitpid call in creat_as hangs when the\n    logging is toggled from the popup menu. Also, the mktemp\n    template has the wrong number of X's (since X11R5!). Fixed the\n    waitpid problem by exploiting the fact that the setuid behavior\n    is reset before the popup menus are available. (reported by\n    Jayachandran C.).</li>\n\n    <li>add configure script options for building with the Xaw3d\n    and neXtaw libraries.</li>\n\n    <li>correct CF_IMAKE_CFLAGS standalone configure script macro,\n    so that it will pick up $(ALLDEFINES) rather than\n    $(STD_DEFINES). This is needed to make scrollbars work on\n    Linux, since that uses narrow prototypes. (reported by Bob\n    Maynard).</li>\n\n    <li>various minor updates to configure-script macros.</li>\n  </ul>\n\n  <h1><a name=\"xterm_51\" id=\"xterm_51\">Patch #51 - 1997/9/15 -\n  XFree86 3.9p</a></h1>\n\n  <p>Most of this patch is related to the standalone configure\n  script, though there are fixes/enhancements as well:</p>\n\n  <ul>\n    <li>add a new resource sunKeyboard, with associated\n    command-line option and menu-toggle that allows using a normal\n    Sun or PC keyboard to generated the complete DEC-style function\n    keys and keypad.</li>\n\n    <li>correct a reversed foreground/background test in the\n    control sequence that replies with the current SGR\n    settings.</li>\n\n    <li>correct, by invoking XSync, a display problem that caused\n    the program to not properly update newly exposed areas when a\n    font change or 80/132 resize request was not completely\n    accepted.</li>\n\n    <li>restructured autoconf macros (I made a library of all of\n    the macros across the complicated configure scripts I'm working\n    on).</li>\n\n    <li>use the autoconf config.guess and config.sub scripts to\n    better identify the host-os.</li>\n\n    <li>improve the configure script that uses 'imake' as a\n    fallback for definitions.</li>\n\n    <li>correct several instances of unsigned/signed mixed\n    expressions.</li>\n  </ul>\n\n  <p>I've tested the configure script on Linux, SunOS 4.1.3,\n  Solaris 2.5.1, IRIX 5.2 and 6.2, AIX 3.2.5 and CLIX 3.1 (all but\n  the last run properly as well).</p>\n\n  <h1><a name=\"xterm_50\" id=\"xterm_50\">Patch #50 - 1997/8/22 -\n  XFree86 3.9m</a></h1>\n\n  <p>This is a collection of small fixes, and a couple of minor\n  enhancements:</p>\n\n  <ul>\n    <li>plug a security hole in the implementation of Media Copy\n    (print) by invoking setuid just before the main loop.</li>\n\n    <li>add an ifdef'd include for &lt;sys/termio.h&gt; for HP-UX,\n    which allows the program to process SIGWINCH events (this is a\n    bug in X11R6.3)</li>\n\n    <li>add state-table entries for VT52 emulation to enter/exit\n    keypad application mode.</li>\n\n    <li>disable the popup-menu entry for 8-bit controls when the\n    terminal-id is less than 200 (e.g., VT52 or VT100).</li>\n\n    <li>ensure that the popup-menu entry for 8-bit controls is\n    updated when the application enables/disables this mode,\n    including the response to a full-reset.</li>\n\n    <li>implement VT300 DECBKM feature: set interpretation of the\n    backarrow key to either backspace or delete. The initial\n    setting is via resource; it can also be modified in the main\n    popup menu.</li>\n\n    <li>implement VTxxx KAM (ISO AM), which allows a keyboard to be\n    locked (i.e., the terminal discards input).</li>\n\n    <li>implement VTxxx SRM, which is used to control local echoing\n    of input on the terminal.</li>\n\n    <li>add terminfo and termcap entries for xterm-8bit, a\n    variation of the xterm description that uses 8-bit control\n    characters.</li>\n\n    <li>add fallback definitions for Imakefile to allow it to work\n    on some X11R5 systems that have no SpecialCObjectRule or\n    ProgramTargetName macros.</li>\n\n    <li>add .c.o and .c.i rules to standalone Makefile.in</li>\n\n    <li>correct order of -lXmu and -lXext in standalone configure\n    script.</li>\n\n    <li>add configure script options to allow selective disabling\n    of active-icon, input-method and i18n code (mainly for users\n    with X11R5 or an incomplete X11R6 configuration).</li>\n\n    <li>change menu-indices from #define's to enum values, thereby\n    making it work better with the ifdef's for logging and\n    active-icon (the X11R6.3 active-icon code is incorrectly\n    ifdef'd; this corrects an error introduced by incorporating\n    that code).</li>\n\n    <li>correct minor compile errors in the configuration where\n    active-icon is not used.</li>\n\n    <li>add configure option to suppress echoing of long compiler\n    commands</li>\n\n    <li>correct spelling of decTerminalID in configure script help\n    message</li>\n\n    <li>use gcc __attribute__((unused)) to quiet warnings about\n    unused parameters when compiling with -W (to make it simpler to\n    find the real problems).</li>\n  </ul>\n\n  <h1><a name=\"xterm_49\" id=\"xterm_49\">Patch #49 - 1997/8/10 -\n  XFree86 3.9k</a></h1>\n\n  <p>This patch implements the VT100/VT220 Media Copy (i.e.,\n  print-screen) control sequences.</p>\n\n  <h1><a name=\"xterm_48\" id=\"xterm_48\">Patch #48 - 1997/7/26 -\n  XFree86 3.9j</a></h1>\n\n  <p>This patch does the following (all but the first affect only\n  the standalone configure script):</p>\n\n  <ul>\n    <li>minor correction to positioning of underlines for small\n    (e.g., 5x8) font size.\n      <p>The existing behavior allowed underlines to be drawn\n      outside the character-cell, so they weren't cleared properly\n      under some circumstances.</p>\n    </li>\n\n    <li>adds more special-case tokens to the standalone configure\n    script's imake-option filter (e.g., \"&amp;&amp;\", since a \"make\n    -n main.o\" on my IRIX system uses that shell construct).</li>\n\n    <li>adds a '--enable-logging' option for the standalone\n    configure script.</li>\n\n    <li>adds check and ifdef's for the standalone configure script\n    to allow for building on platforms with X11R6, which lacks\n    Xpoll.h (introduced in X11R6.1).</li>\n  </ul>\n\n  <h1><a name=\"xterm_47\" id=\"xterm_47\">Patch #47 - 1997/7/13 -\n  XFree86 3.9i</a></h1>\n\n  <p>This patch does the following</p>\n\n  <ul>\n    <li>corrects an indexing error in the doublesize character\n    logic (button.c) that caused core dump (this was reported by J.\n    Wunsch).</li>\n\n    <li>corrects the logic of ShowCursor when it is painting in a\n    doublesize cell (charproc.c).</li>\n\n    <li>corrects, according to vttest, the behavior when switching\n    to doublesize characters and back again (doublechr.c).</li>\n\n    <li>adds cbt (back_tab) to the terminfo description (this was\n    something that I'd overlooked as applicable to curses\n    optimization last summer).</li>\n\n    <li>corrects, for the standalone xmc test, the logic for\n    disabling xmc.</li>\n  </ul>\n\n  <h1><a name=\"xterm_46\" id=\"xterm_46\">Patch #46 - 1997/7/4 -\n  XFree86 3.9h</a></h1>\n\n  <p>This is a patch to provide test-support for some work I'm\n  doing on ncurses. It does not modify the normal configuration of\n  xterm; the code is compiled if the standalone configure option\n  \"--enable-xmc-glitch\" is specified.</p>\n\n  <h1><a name=\"xterm_45\" id=\"xterm_45\">Patch #45 - 1997/7/2 -\n  XFree86 3.9h</a></h1>\n\n  <p>This fixes the problem reported with xterm's cursor color\n  versus the background (the second chunk in this patch) and also\n  removes some duplicate initialization of the cursor GC's. If the\n  cursor color at startup is the same as the background, then xterm\n  will use the reverse GC, ignoring the setting of the colorMode\n  resource.</p>\n\n  <h1><a name=\"xterm_44\" id=\"xterm_44\">Patch #44 - 1997/6/22 -\n  XFree86 3.9g</a></h1>\n\n  <p>This implements the first part of the VT100 doublesize\n  characters for xterm, as well as fixing a handful of bugs:</p>\n\n  <ul>\n    <li>the doublesize character support uses the normal font\n    (using scaled fonts will be another patch) with blanks to\n    simulate doublesize characters. This patch does most of the\n    global changes that'll be required. I've hidden most of the\n    details in macros and ifdef's so it's easy to configure out\n    (part of the patch is a configure option for that\n    purpose).</li>\n\n    <li>corrected limits in DeleteChar() function -- it's always\n    ignored the size of the left border and scrollbar. I noticed\n    this when working on the doublesize characters since the glitch\n    was doubled in size (i.e., it wrapped some garbage around the\n    right margin).</li>\n\n    <li>corrected 'memmove()' logic, for standalone builds (it\n    referenced a malloc wrapper from my development library).</li>\n\n    <li>add a check for HideCursor() to prevent repeated screen\n    updates (which can cause a spurious cursor glitch to appear,\n    e.g., during scrolling). I noticed this with the 3.2A version\n    (but only a few weeks ago, when I started working on this\n    patch).</li>\n  </ul>\n\n  <h1><a name=\"xterm_43\" id=\"xterm_43\">Patch #43 - 1997/6/10 -\n  XFree86 3.9d</a></h1>\n\n  <p>Here's a fix for two problems:</p>\n\n  <ul>\n    <li>modify handling of tgetent results in xterm and resize\n    programs to make them tolerant of missing termcap file, or\n    unknown terminal name. In this scheme, an explicit \"-tn\" option\n    will succeed, overriding the fallback list.</li>\n\n    <li>a nit in the configure script (log extra information to\n    help diagnose which case of the test-compile of tgetent was\n    used).</li>\n  </ul>\n\n  <h1><a name=\"xterm_42\" id=\"xterm_42\">Patch #42 - 1997/6/8 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>Bram Moolenaar reported that the cursor color changed\n  unexpectedly while scrolling. The cause was that it used the same\n  GC's as the logic that draws the ANSI colors. The bug only\n  appears if the cursorColor resource isn't set, and has been\n  present since the initial implementation early last year. (The\n  same bug also appears in rxvt ;-). Here's a fix.</p>\n\n  <h1><a name=\"xterm_41\" id=\"xterm_41\">Patch #41 - 1997/5/28 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>Some nits found by Darren Hiebert (missing part of\n  install-rule, incorrect assignment for --enable-color-mode\n  option).</p>\n\n  <h1><a name=\"xterm_40\" id=\"xterm_40\">Patch #40 - 1997/5/26 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>Patch for the configure script's logic for obtaining imake\n  predefined symbols.</p>\n\n  <h1><a name=\"xterm_39\" id=\"xterm_39\">Patch #39 - 1997/5/24 -\n  XFree86 3.2Xl</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>integrate the 16-color change for 'xterm'</li>\n\n    <li>minor fixes/clarification of tgetent in terminfo vs termcap\n    to 'resize'</li>\n  </ul>\n\n  <p>(both changes also modify the configure script)</p>\n\n  <h1><a name=\"xterm_38\" id=\"xterm_38\">Patch #38 - 1997/5/22 -\n  XFree86 3.2Xh</a></h1>\n\n  <p>This implements a simple configuration script with autoconf\n  (to which I'll add more options later). It does the\n  following:</p>\n\n  <ul>\n    <li>configures xterm to build with X11R5 (at least on SunOS\n    4.1, Solaris 2.4, possibly IRIX - sorry network was down today,\n    but I did test an earlier version yesterday).</li>\n\n    <li>enables/disables the configuration ifdef's for ANSI color\n    and VT52 emulation.</li>\n  </ul>\n\n  <p>It does not make tests for the things that imake does (that's\n  another project), instead it uses a hybrid of the autoconf tests\n  for libraries and adds imake's compiler options (which are\n  necessary in some cases to get main.c to compile).</p>\n\n  <h1><a name=\"xterm_37\" id=\"xterm_37\">Patch #37 - 1997/5/7 -\n  XFree86 3.9a</a></h1>\n\n  <p>This corrects a minor, but annoying error in the vt220\n  emulation: the DECUDK is only supposed to be interpreted for\n  _shifted_ function keys.</p>\n\n  <h1><a name=\"xterm_36\" id=\"xterm_36\">Patch #36 - 1997/1/16 -\n  XFree86 3.2r</a></h1>\n\n  <p>This corrects something that I overlooked in patch #27\n  (21-aug-1996), which is that when trimming the region to be\n  repainted for the highlightSelection resource of xterm, I still\n  have to paint the background past the highlighted region. This\n  only happens when I first do a selection in a window that's\n  partly off-screen, then move the window on-screen.</p>\n\n  <h1><a name=\"xterm_35\" id=\"xterm_35\">Patch #35 - 1997/1/7 -\n  XFree86 3.2o</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>combines the coding for foreground and background colors\n    into a single byte, reducing the memory required to store\n    saved-lines in color. (I'll take back that byte in a following\n    patch to use to ensure the character-set, so there's no\n    long-term decrease in memory use).</li>\n\n    <li>modifies the PF1-PF4 coding in termcap/terminfo. Because\n    xterm is still by default emulating vt100, the function key\n    codes are vt100-compatible (I overlooked this in patch #31). I\n    also reformatted the whole terminfo file into a single-column,\n    for consistency.</li>\n\n    <li>adds an interim xterm-vt220 description to accommodate the\n    old and new styles of function-keys (though probably it'd be\n    better to drop the old-style altogether).</li>\n  </ul>\n\n  <h1><a name=\"xterm_34\" id=\"xterm_34\">Patch #34 - 1997/1/5 -\n  XFree86 3.2o</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>implement DECSTR (soft terminal reset). The biggest diff is\n    due to adding another state table (note that there's only one\n    useful state here, but it's only 256 bytes rather than 1k as it\n    would have been before I reduced the size of state\n    entries).</li>\n\n    <li>some minor tidying up (e.g., signed/unsigned use bitcpy,\n    MODE_DECCKM, resetColor, resetCharsets). More is done in patch\n    #35.</li>\n  </ul>\n\n  <p>I got the description of DECSTR from a vt420 user's manual.\n  I'll do some testing with vttest to ensure that there's nothing\n  else to do than what was documented.</p>\n\n  <h1><a name=\"xterm_33\" id=\"xterm_33\">Patch #33 - 1996/11/24 -\n  XFree86 3.2</a></h1>\n\n  <p>This adds to the reset-fix by Matthieu Herrb\n  &lt;Mathieu.Herrb@mipnet.fr&gt; a small change to make xterm able\n  to output 8-bit characters in VT100 mode. Applications that run\n  on real VT100's don't do that anyway, and this feature should be\n  removed sometime after finishing off the VT220 emulation (VT220's\n  can do 8-bit characters). That would be a good time to change the\n  default terminal-id to 220.</p>\n\n  <h1><a name=\"xterm_32\" id=\"xterm_32\">Patch #32 - 1996/11/21 -\n  XFree86 3.2</a></h1>\n\n  <p>This implements the REP (repeat) control for xterm. That isn't\n  part of the DEC VTxxx series, but is defined in ISO 6429. (Note\n  that the base xterm terminal description is <em>not</em> changed\n  -- I added a variant, \"xterm-rep\").</p>\n\n  <h1><a name=\"xterm_31\" id=\"xterm_31\">Patch #31 - 1996/11/16 -\n  XFree86 3.2</a></h1>\n\n  <p>This implements vt52 emulation in xterm (ifdef'd so it can be\n  removed). I've been using it for testing for the past month or\n  so.</p>\n\n  <h1><a name=\"xterm_30\" id=\"xterm_30\">Patch #30 - 1996/11/16 -\n  XFree86 3.2</a></h1>\n\n  <p>From bug-report by &lt;auroux@clipper.ens.fr&gt; (Denis\n  Auroux), missing reset to ground state. I checked through the\n  rest of <em>that</em> table and found another, in the\n  unimplemented MC (screen print).</p>\n\n  <h1><a name=\"xterm_29\" id=\"xterm_29\">Patch #29 - 1996/9/15 -\n  XFree86 3.1.2Gb</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>corrects the restoration of color for bold/underline color\n    mode</li>\n\n    <li>adds a resource 'decTerminalID' to control the reporting\n    level of xterm (e.g., VT100, VT220).</li>\n\n    <li>uses the new resource to implement/correct the DA1, DA2 and\n    DECRPTUI reports.</li>\n\n    <li>change valid-response code in DECRQSS from 0 to 1 (the\n    manual says 0, but the VT420 terminal I've been testing on says\n    1).</li>\n  </ul>\n\n  <p>All of these changes are based on vttest 2.6</p>\n\n  <p>(Most of the volume in the patch is to add 2 more state tables\n  for parsing the 2nd/3rd device-attribute controls).</p>\n\n  <h1><a name=\"xterm_28\" id=\"xterm_28\">Patch #28 - 1996/8/31 -\n  XFree86 3.1.2F</a></h1>\n\n  <p>This patch corrects the following reported by Roland Rosenfeld\n  &lt;roland@spinnaker.rhein.de&gt;:</p>\n\n  <ul>\n    <li>handle SGR 22, 24 and 25 in combination with colorUL and\n    colorBD resources. Also noted &amp; fixed reset of colored\n    underline/bold with SGR 0.</li>\n\n    <li>a typo in the termcap (missing '['), from 3.1.2Dj (my\n    error)</li>\n  </ul>\n\n  <p>Roland also complained that he couldn't use box characters\n  with</p>\n\n  <pre>\n        -adobe-courier-bold-r-normal--12-120-75-75-m-70-iso8859-1\n</pre>\n  <p>but that's a known xterm limitation (the box characters must\n  be part of the font, in the first 32 locations).</p>\n\n  <h1><a name=\"xterm_27\" id=\"xterm_27\">Patch #27 - 1996/8/21 -\n  XFree86 3.1.2Ek</a></h1>\n\n  <p>This patch fixes one of my long-term gripes: xterm's selection\n  doesn't clearly show what's being selected (as per David's\n  request, it's controlled by a resource, which defaults to the\n  older behavior).</p>\n\n  <h1><a name=\"xterm_26\" id=\"xterm_26\">Patch #26 - 1996/8/20 -\n  XFree86 3.1.2Ei</a></h1>\n\n  <p>Here's a patch to fix a problem with xterm's cut/paste and\n  another to modify the appearance of the highlighting while\n  selecting. (The changes are independent, so you can see if the\n  change to screen.c is desirable).</p>\n\n  <h1><a name=\"xterm_25\" id=\"xterm_25\">Patch #25 - 1996/8/18 -\n  XFree86 3.1.2Ei</a></h1>\n\n  <p>Here's a correction for two minor bugs that I picked up in\n  testing, plus some lint (from Solaris 2.5) where NULL was used\n  incorrectly:</p>\n\n  <ul>\n    <li>make the second alternate font the same as the first\n    (that's what vt420 and dtterm do)</li>\n\n    <li>corrected DECSCL report when DECSCL hasn't been set (i.e.,\n    don't return a '60').</li>\n  </ul>\n\n  <h1><a name=\"xterm_24\" id=\"xterm_24\">Patch #24 - 1996/8/11 -\n  XFree86 3.1.2Ee</a></h1>\n\n  <p>This patch does several things. In effect, xterm can (I think)\n  do a reasonably good job of emulating vt220 and vt320 terminals\n  (as well as it was doing vt100, at any rate ;-).</p>\n\n  <p>It does NOT do:</p>\n\n  <ul>\n    <li>soft fonts</li>\n\n    <li>rigel or sixel graphics</li>\n  </ul>\n\n  <p>Anyway, I:</p>\n\n  <ul>\n    <li>added ECH, CPL, CNL, SU, SD, CBT, CHT controls</li>\n\n    <li>added popup-menu for switching between DEC and Sun function\n    keys. (corrected alignment err wrt logging entry at that\n    point).</li>\n\n    <li>make xterm recognize both 8-bit and 7-bit controls\n    (including popup menu for switching modes).</li>\n\n    <li>add user-definable function keys (aka DECUDK)</li>\n\n    <li>support concealed text</li>\n\n    <li>support protected text (both ISO compatible and DEC\n    compatible - that's not the same thing, btw), with SPA, EPA,\n    DECSCA, DECSED, DECSEL controls.</li>\n\n    <li>implement DECSCL.</li>\n  </ul>\n\n  <p>I'll be continuing to test this patch for a while, but don't\n  expect to add any new functionality (it passes all of the current\n  tests I've built in vttest, but I need to make more tests)..</p>\n\n  <h1><a name=\"xterm_23\" id=\"xterm_23\">Patch #23 - 1996/7/31 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This removes the blinking cursor I added last week (for\n  performance reasons). Time-permitting, I'll revisit this after\n  3.2 is released (there <em>will</em> be more work after XFree86\n  3.2, I assume).</p>\n\n  <h1><a name=\"xterm_22\" id=\"xterm_22\">Patch #22 - 1996/7/26 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>I looked more closely at my \"double-negative\" and realized\n  that I had been confused by the default color scheme (black on\n  white) in combination with reverse video. However, I did see that\n  the original_fg and original_bg data weren't really used - so I\n  removed that logic.</p>\n\n  <p>Also:</p>\n\n  <ul>\n    <li>during initialization, check if ANSI colors are set with\n    non fg/bg values, disable color mode if not. This makes xterm\n    tolerant of applications that allocate the whole color\n    map.</li>\n\n    <li>implemented blinking cursor (default is <em>off</em>)</li>\n  </ul>\n\n  <h1><a name=\"xterm_21\" id=\"xterm_21\">Patch #21 - 1996/7/24 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>fixes some minor typography in the control-sequences\n    documentation (it didn't occur to me til I'd sent the last\n    patch that I could use ghostview for previewing the troff\n    output ;-)</li>\n\n    <li>adjusts the shell's background color in ReverseVideo so\n    that flicker in resizing is reduced</li>\n\n    <li>adds an ifdef OPT_ISO_COLORS to allow configuring xterm\n    without the ISO color support (saves a lot of memory)</li>\n\n    <li>used that ifdef to isolate/modify logic so that if the user\n    doesn't have the colorMode enabled, then ISO color support is\n    disabled (saving memory).\n      <p>(If anyone needs numbers, I had savedLines set to 2000,\n      and found a reduction from ~700k to ~400k of allocated\n      memory, according to Purify).</p>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_20\" id=\"xterm_20\">Patch #20 - 1996/7/24 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This documents the changes in control sequences for window\n  operations that I added in my previous patch. I'm testing another\n  patch that allows the user to use less memory if colors aren't\n  needed.</p>\n\n  <h1><a name=\"xterm_19\" id=\"xterm_19\">Patch #19 - 1996/7/21 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This patch does the following:</p>\n\n  <ul>\n    <li>fixes the core dump that I reported on IRIX 5.2 (in main.c)\n      <p>(it's worth noting that this bug exists in X11R6.1, so I'd\n      like to assume that someone's already submitted a fix to X\n      Consortium...)</p>\n    </li>\n\n    <li>change the interpretation of zero rows or columns in a\n    resize-window request to use the root window's size (looking\n    more carefully at dtterm, that seems to be what it does).</li>\n\n    <li>change some memmove calls to memcpy for slightly better\n    performance. also, a couple of memset calls to bzero, since\n    Quantify says bzero runs 20% faster, I assume because there's\n    one less argument.</li>\n\n    <li>interpret character sets 1 and 2 (so that vttest gives a\n    reasonable result) Both rxvt and dtterm do something\n    equivalent.</li>\n\n    <li>fix a minor memory leak in the logic that retrieves the\n    window or icon names (Purify found this for me while I ran\n    vttest).</li>\n  </ul>\n\n  <h1><a name=\"xterm_18\" id=\"xterm_18\">Patch #18 - 1996/7/18 -\n  XFree86 3.1.2Ec</a></h1>\n\n  <p>This implements the following:</p>\n\n  <ul>\n    <li>escape sequences that act like the CDE dtterm's window\n    operations (though I have implemented the default width and\n    height -- I've seen a rather buggy dtterm running that seems to\n    treat width=0 or height=0 literally -- maybe that's a feature,\n    not a bug?)</li>\n\n    <li>minor tweak to the screen-repainting when resizing (I still\n    cannot entirely get rid of flicker).</li>\n\n    <li>still more fixes to terminfo &amp; termcap (I corrected my\n    error for the hpa code and added some other stuff by comparing\n    to ncurses' description and rxvt's).</li>\n\n    <li>a tweak to the changes by Michael Rohleder for the color\n    translation</li>\n\n    <li>re-order attribute codes to allow later implementation of\n    protected fields (dtterm supposedly does this; it's probably\n    more useful than blinking or invisible text -- that uses up all\n    of the available bits without changing the attribute scheme\n    radically).</li>\n  </ul>\n\n  <h1><a name=\"xterm_17\" id=\"xterm_17\">Patch #17 - 1996/7/2 -\n  XFree86 3.1.2Eb</a></h1>\n\n  <p>This patch implements for xterm several minor features from\n  ISO 6429 which are useful for terminfo applications. The HPA and\n  VPA control sequences allow cursor movement along a row or\n  column, cutting down a little on the characters transmitted. The\n  other codes allow resetting specific graphic rendition attributes\n  without modifying the other attributes. (now if someone just had\n  time to implement blinking cursors...)</p>\n\n  <h1><a name=\"xterm_16\" id=\"xterm_16\">Patch #16 - 1996/6/25 -\n  XFree86 3.1.2Ea</a></h1>\n\n  <p>Adam Tla/lka &lt;atlka@pg.gda.pl&gt; told me a couple of weeks\n  ago that I'd missed some of the background coloring in xterm. I\n  investigated, and found that while I'd picked up on the\n  clear-to-bottom and clear-to-end-of-line operations, I'd\n  overlooked the insert/delete lines. Just so I wouldn't overlook\n  any more of these, I updated a copy of vttest to test ISO colors\n  and bce (background color erase). This patch introduces a new\n  function, ClearCurBackground, whose calls replace the direct\n  XClearArea calls that I'd overlooked. (There's also a few\n  compiler warnings fixed, etc ;-)</p>\n\n  <h1><a name=\"xterm_15\" id=\"xterm_15\">Patch #15 - 1996/5/29 -\n  XFree86 3.1.2E</a></h1>\n\n  <p>This fixes the problem reported by David Dawes, by making the\n  50msec select timeout for the Xaw3d arrow scrollbar a resource.\n  (I made it a boolean for a variety of reasons -- to make it a\n  number, you'd need an additional resource, to avoid breaking the\n  logic).</p>\n\n  <h1><a name=\"xterm_14\" id=\"xterm_14\">Patch #14 - 1996/5/12 -\n  XFree86 3.1.2Dj</a></h1>\n\n  <p>This patch brings the termcap and terminfo descriptions for\n  xterm up to date. I made the following changes:</p>\n\n  <ul>\n    <li>reformatted the terminfo description in a single-column\n    (this is ok for terminfo, and will simplify future patches --\n    can't do that for termcap, since it would impact buffer\n    requirements on some systems).</li>\n\n    <li>omitted obsolete features in termcap to save a little space\n    (bs, pt)</li>\n\n    <li>added color capabilities to termcap (ut, Co, NC, op, AB,\n    AF)</li>\n\n    <li>corrected some capabilities (vi, ve)</li>\n\n    <li>added 'st' (set tab)</li>\n\n    <li>reduced function keys in termcap for 'xterm' to 12 because\n    color capabilities makes that description larger than 1023\n    characters.</li>\n\n    <li>created new termcap name 'xtermm' (monochrome) to match the\n    terminfo list, and make that description have 20 function\n    keys.</li>\n\n    <li>added corresponding color capabilities to terminfo (bce,\n    colors, pairs, op, ncv, setab, setaf)</li>\n\n    <li>corrected corresponding capabilities in terminfo (civis,\n    cnorm, rmcup, smcup)</li>\n\n    <li>added capabilities (el1, hts)</li>\n\n    <li>in both, corrected home/end keys to match the code\n    correction made by Thomas Mueller in 3.1.2Bk\n      <p>=&gt; (I'm still considering modifying the code &amp;\n      description to match the rxvt program).</p>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_13\" id=\"xterm_13\">Patch #13 - 1996/4/23 -\n  XFree86 3.1.2Df</a></h1>\n\n  <p>This corrects my earlier changes for colors - the inner border\n  of the xterm was getting painted with the wrong color, since I'd\n  moved the call to set the background into the logic that tracks\n  SGR information.</p>\n\n  <h1><a name=\"xterm_12\" id=\"xterm_12\">Patch #12 - 1996/3/16 -\n  XFree86 3.1.2Dc</a></h1>\n\n  <p>This corrects a memory leak in xterm that happens whenever one\n  switches fonts.</p>\n\n  <h1><a name=\"xterm_11\" id=\"xterm_11\">Patch #11 - 1996/3/5 -\n  XFree86 3.1.2Db</a></h1>\n\n  <p>This patch corrects the behavior of the ANSI colors in xterm\n  when reverse video is used, as well as some other lesser\n  sins:</p>\n\n  <ul>\n    <li>button.c\n      <ul>\n        <li>(compiler warnings: shadowing of 'time', redundant\n        cast)</li>\n      </ul>\n    </li>\n\n    <li>charproc.c\n      <ul>\n        <li>renamed screen.colors[] array to screen.Acolors[] to\n        more easily distinguish the non-ANSI colors from the ANSI\n        colors.</li>\n\n        <li>moved logic of SGR_Save() into VTInitialize, getting\n        rid of local private variables original_fg and\n        original_bg.</li>\n\n        <li>moved some logic into getXtermForeground and\n        getXtermBackground from SGR_Foreground, SGR_Background,\n        etc.</li>\n\n        <li>corrected misleading 'row' to 'col' in case for CUF,\n        CUB sequences.</li>\n      </ul>\n    </li>\n\n    <li>ctlseqs.ms</li>\n\n    <li>xterm.man\n      <ul>\n        <li>(correct a misconception which I'd added that the\n        color0 through color6 resource values apply to non-ANSI\n        colors)</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h\n      <ul>\n        <li>added original_fg, original_bg to TScreen\n        structure.</li>\n      </ul>\n    </li>\n\n    <li>scrollbar.c\n      <ul>\n        <li>(compiler warnings: redundant cast)</li>\n      </ul>\n    </li>\n\n    <li>util.c\n      <ul>\n        <li>new functions getXtermForeground and getXtermBackground\n        replace the macros GET_FG and GET_BG, with the added\n        functionality of checking for the reverse-video status of\n        xterm.</li>\n\n        <li>in ReverseVideo, swap the SGR foreground and background\n        colors also.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_10\" id=\"xterm_10\">Patch #10 - 1996/2/14 -\n  XFree86 3.1.2Cd</a></h1>\n\n  <p>I observed an occasional glitch in the xterm's color behavior;\n  a clear to end of line would get a color that had been used in a\n  program that supposedly reset colors. I traced this down to the\n  way xterm was modifying colors of GC's on the fly; it didn't\n  restore the original color of the GC, even though it would later\n  be used in functions (such as ClearRight) that assumed (my error)\n  that the GC would have the current foreground or background\n  color.</p>\n\n  <p>I fixed this by resetting the GC's colors with a new function\n  'resetXtermGC()', and direct calls on\n  SGR_Foreground/SGR_Background, as appropriate and using a new\n  function 'updatedXtermGC()' to encapsulate the logic that\n  modifies the GC's color. (I also removed some commented-out code\n  that was trying to do this -- the problem was a little more\n  obscure).</p>\n\n  <h1><a name=\"xterm_09\" id=\"xterm_09\">Patch #9 - 1996/2/10 -\n  XFree86 3.1.2Cb</a></h1>\n\n  <p>This patch fixes the remaining problems that I had making\n  xterm run with x11r5, as well as a couple of other bugs. It\n  follows my patch from yesterday, that added ifdef's for some of\n  the input-method resources.</p>\n\n  <ul>\n    <li>corrected ifdef's that suppress the input-method code\n    (doesn't exist in my x11r5, and xterm works adequately without\n    it).</li>\n\n    <li>corrected fallback definition for 'Select()' macro (oops:\n    I'd copied the wrong text...)</li>\n\n    <li>moved the declarations for the fd_set variables to\n    data.[ch]</li>\n\n    <li>corrected an ifdef in resize.c (sunos 4.x doesn't have\n    termcap.h)</li>\n\n    <li>corrected (in main.c) some unused/orphaned variables.</li>\n  </ul>\n\n  <h1><a name=\"xterm_08\" id=\"xterm_08\">Patch #8 - 1996/2/9 -\n  XFree86 3.1.2Cb</a></h1>\n\n  <p>This is mostly a documentation patch for xterm. It describes\n  the color control sequences in more detail, and documents some\n  other features of xterm that aren't described elsewhere.</p>\n\n  <p>I've also added a couple of ifdef's to fix (part of) the\n  problem that I'm working on (making the program work properly on\n  x11r5, where I'm doing memory testing -- I have a \"good\" version\n  from mid-January, but my resync version doesn't work properly on\n  x11r5). I'm not done with <em>that</em> yet.</p>\n\n  <h1><a name=\"xterm_07\" id=\"xterm_07\">Patch #7 - 1996/1/28 -\n  XFree86 3.1.2n</a></h1>\n\n  <p>I did a (clean) build of 3.1.2n on Linux 1.2.13 (ELF). I've\n  got an S3 card.</p>\n\n  <p>This fixes the following in the 3.1.2n xterm:</p>\n\n  <ul>\n    <li>initialize cur_foreground, cur_background in charproc.c\n    (Purify told me they weren't initialized).</li>\n\n    <li>add interpretation of codes 39, 49, to reset background and\n    foreground to default value (I'm told that ISO 6429 does this;\n    but I don't have a written reference -- yet -- can anyone help\n    here?). Anyway, rxvt does it, and it'll solve my remaining\n    color management problems.</li>\n\n    <li>shadowing of 'time' in menu.c</li>\n\n    <li>'Cardinal' vs 'int' in scrollbar.c</li>\n\n    <li>several changes to permit compile with X11R5 (the system\n    that I've got Purify on won't be upgraded to X11R6 for a long\n    time).</li>\n  </ul>\n\n  <p>I built this version (with a minor nit that I'll patch soon)\n  on SunOS 4.1.3 so that I can test it some more with Purify.</p>\n\n  <p><em>btw</em>: the changes made in Xpoll.h won't work on some\n  older systems, because fd_set isn't a defined type (I've got one\n  machine at least that this applies to).</p>\n\n  <h1><a name=\"xterm_06\" id=\"xterm_06\">Patch #6 - 1996/1/8</a></h1>\n\n  <p>This patch does all of the SGR foreground/background fixes\n  (i.e., clearing the screen after an SGR color is set causes that\n  color to be used in the foreground and/or background). If the\n  FG_COLOR and/or BG_COLOR flags aren't set, then the xterm\n  foreground and background default to the window's values. This\n  usage is consistent with various types of hardware (especially\n  the IBM PC), and is also used in rxvt.</p>\n\n  <ul>\n    <li>charproc.c:\n      <ul>\n        <li>add/use new macros GET_FG, GET_BG - n/c.</li>\n\n        <li>add/use new functions SGR_Foreground() and\n        SGR_Background() to set corresponding colors in GC's, and\n        to retain sense of \"original\" colors.\n          <p>=&gt; This makes redundant some of the corresponding\n          logic in HideCursor to set the foreground and background,\n          but I left it in since it <em>may</em> be fixing an\n          unrelated requirement.</p>\n        </li>\n\n        <li>set GC's in LoadNewFont() according to whether the SGR\n        fg/bg colors are active.\n          <p>=&gt; This fixes some glitches in the accompanying\n          resize, that leaves parts of the window in the original\n          background color.</p>\n        </li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>modified ClearBufRows() to use the SGR fg/bg colors if\n        they're set.</li>\n\n        <li>added function ScrnClearLines(), used this to replace\n        portions of ScrnInsertLine() and ScrnDeleteLine(). The new\n        function uses the SGR fg/bg colors if they're set.\n          <p>=&gt; Otherwise, selection after an index or reverse\n          index will paint the wrong colors.</p>\n        </li>\n\n        <li>modified ScrnDeleteChar() and ScrnInsertChar() to use\n        SGR fg/bg colors.</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>modified ClearRight() so that if either of the SGR\n        fg/bg colors is set, we don't bzero the attributes and\n        color arrays, but instead fill them with the appropriate\n        codes.</li>\n\n        <li>modified ClearLeft to use SGR fg/bg colors.</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_05\" id=\"xterm_05\">Patch #5 - 1996/1/7</a></h1>\n\n  <p>This patch modifies the object code, by replacing indexing\n  expressions with temporary variables with the full indexing\n  expression. At first glance, this seems inefficient (it did to me\n  ;-), until remembering comments made in the compilers newsgroups\n  that trying to \"help\" the compiler doesn't really work that well.\n  A good optimizing compiler can do a better job than the\n  programmer can. (There's a moral in the use of 'register'\n  variables also, but I won't fix those...).</p>\n\n  <p>Anyway, the revised code generates a smaller object...</p>\n\n  <ul>\n    <li>charproc.c:\n      <ul>\n        <li>recode index expressions in ShowCursor() and\n        HideCursor() using SCRN_BUF_xxxxS macros - changes\n        object.</li>\n\n        <li>replace constant '4' by MAX_PTRS - n/c.</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h:\n      <ul>\n        <li>defined the SCRN_BUF_xxxxS macros in terms of BUF_xxxxS\n        macros, to pick up references to ScrnBuf data directly, and\n        added MAX_PTRS symbol to pick up those '4' constants strewn\n        about the code - n/c.</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>recode index expressions in ScreenWrite() using\n        SCRN_BUF_xxxxS macros - changes object.</li>\n\n        <li>replace constant '4' by MAX_PTRS - n/c.</li>\n\n        <li>use macros BUF_CHARS, BUF_ATTRS - n/c.</li>\n\n        <li>cast calloc to 'Char *' to fix compiler warning on IRIX\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>scrollbar.c:\n      <ul>\n        <li>replace constant '4' by MAX_PTRS - n/c.</li>\n\n        <li>cast calloc to 'Char *' to fix compiler warning on IRIX\n        - n/c</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_04\" id=\"xterm_04\">Patch #4 - 1996/1/7</a></h1>\n\n  <p>When setting up for this phase, I saw that you'd corrected the\n  bug that I found in ClearLeft. I decided to make this series of\n  patches anyway, since readability never hurt (and there's the\n  potential for finding another bug while reviewing this set).</p>\n\n  <ul>\n    <li>button.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n\n    <li>charproc.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h:\n      <ul>\n        <li>added four macros: SCRN_BUF_CHARS, SCRN_BUF_ATTRS,\n        SCRN_BUF_FORES, SCRN_BUF_BACKS to represent the four arrays\n        that are derived from screen-&gt;buf.</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>use SCRN_BUF_xxxxS macros - n/c</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_03\" id=\"xterm_03\">Patch #3 - 1996/1/7</a></h1>\n\n  <p>This is my third (and final cleanup) patch for xterm. It gets\n  rid of the unused stuff, and converts several functions to static\n  (thereby reducing their scope).</p>\n\n  <p>At this point, the only compile warnings I've got (on Linux)\n  are those about the select arguments (int vs fd_set type), and a\n  missing declaration for waitpid. Those both are hard to get right\n  without autoconfigure.</p>\n\n  <p>The next patches will address the functional changes...</p>\n\n  <ul>\n    <li>Tekproc.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n      </ul>\n    </li>\n\n    <li>charproc.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n\n        <li>deleted unused function unparsefputs -- changes\n        object.</li>\n      </ul>\n    </li>\n\n    <li>main.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n\n        <li>ifdef'd out unused function 'consolepr()' -- changes\n        object</li>\n\n        <li>removed unused variable 'dummy_tio' -- changes\n        object</li>\n\n        <li>moved variable 'discipline' to quiet unused-warning --\n        changes object</li>\n      </ul>\n    </li>\n\n    <li>main.h:\n      <ul>\n        <li>deleted unused definition of DEFBORDERWIDTH - n/c</li>\n      </ul>\n    </li>\n\n    <li>misc.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n\n        <li>provide dummy return statements for xerror and xioerror\n        to quiet compiler warnings -- changes object</li>\n      </ul>\n    </li>\n\n    <li>ptyx.h:\n      <ul>\n        <li>change sbuf_address and abuf_address to 'Char *' -\n        n/c</li>\n      </ul>\n    </li>\n\n    <li>resize.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>remove unnecessary 'Char **' casts - n/c</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>changed several functions to 'static' that aren't used\n        outside this module -- changes object</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_02\" id=\"xterm_02\">Patch #2 - 1996/1/7</a></h1>\n\n  <p>This is my second patch to xterm. It corrects most of the gcc\n  warnings (except for some that are due to X header files ;-). I\n  compared objects to keep track of the changes that don't affect\n  the object code (n/c) versus those that do.</p>\n\n  <p>At this point, I'm compiling (fairly) clean with gcc\n  options</p>\n\n  <pre>\n        -Wall -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wnested-externs\n</pre>\n  <p>(I also compiled with -Wshadow, but while that found some\n  things that I wanted to find, there's far too many warnings from\n  the X headers to be usable in this context).</p>\n\n  <p>The changes:</p>\n\n  <ul>\n    <li>Tekproc.c:\n      <ul>\n        <li>parenthesized expression to avoid gcc warning --\n        n/c.</li>\n\n        <li>corrected nested-extern declaration for Bool\n        waiting_for_initial_map; ourTopLevelShellArgs, and\n        number_ourTopLevelShellArgs - n/c</li>\n      </ul>\n    </li>\n\n    <li>charproc.c:\n      <ul>\n        <li>corrected potentially-unintialized variables 'scstype',\n        'xim', and 'input_style' -- changes object.</li>\n\n        <li>adjusted logic of VTparse so that gcc won't warn about\n        setjmp clobbering parsestate -- changes object.</li>\n\n        <li>corrected initialization of 'scstype', which could have\n        been clobbered by setjmp/longjmp - changes object.</li>\n\n        <li>corrected nested-extern declaration of 'term',\n        'ProgramName' - n/c</li>\n      </ul>\n    </li>\n\n    <li>cursor.c:\n      <ul>\n        <li>corrected nested-extern declaration of 'term' --\n        n/c</li>\n\n        <li>renamed 'term' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>input.c:\n      <ul>\n        <li>change interface of StringInput to assume size_t (i.e.,\n        unsigned) nbytes -- changes object.</li>\n\n        <li>change interface of funcvalue, and sunfuncvalue to use\n        'KeySym' type instead of 'int' - changes object.</li>\n      </ul>\n    </li>\n\n    <li>main.c:\n      <ul>\n        <li>moved definitions of SIGNAL_T, SIGNAL_RETURN to proto.h\n        - n/c</li>\n\n        <li>corrected missing params of 'do_hangup()' -- changes\n        object (note: the missing params were not used).</li>\n\n        <li>corrected missing param of 'Error()' -- changes\n        object</li>\n\n        <li>corrected nested-extern 'environ' - n/c</li>\n\n        <li>adjusted assignments to 'tty_got_hung' and 'no_dev_tty'\n        so that gcc can see they won't be clobbered by the longjmp\n        - changes object.</li>\n\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>menu.c:\n      <ul>\n        <li>removed redundant prototype for 'do_hangup()' --\n        n/c.</li>\n\n        <li>renamed 'time' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>menu.h:\n      <ul>\n        <li>renamed 'time' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>misc.c:\n      <ul>\n        <li>corrected definition of 'HandleFocusChange()' --\n        changes object</li>\n\n        <li>cast parameters in call to 'TekExpose()' -- n/c</li>\n\n        <li>corrected nested-extern declarations of 'term',\n        'toplevel', ProgramName, and 'environ' -- n/c.</li>\n\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>proto.h:\n      <ul>\n        <li>moved definition of SIGNAL_T (and SIGNAL_RETURN) here\n        from main.c, resize.c to allow use of this symbol in\n        prototypes (mostly in xterm.h).</li>\n\n        <li>added definition 'Size_t' to use as corrected type for\n        strncpy, malloc sizes - n/c.</li>\n      </ul>\n    </li>\n\n    <li>resize.c:\n      <ul>\n        <li>moved SIGNAL_T definition to proto.h -- n/c.</li>\n\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>screen.c:\n      <ul>\n        <li>use Size_t type - n/c.</li>\n      </ul>\n    </li>\n\n    <li>tabs.c:\n      <ul>\n        <li>corrected nested-extern declaration of 'term' --\n        n/c</li>\n      </ul>\n    </li>\n\n    <li>util.c:\n      <ul>\n        <li>corrected/supplied parameters to 'TekExpose()' --\n        changes object (note: 'TekExpose()' doesn't use its\n        parameters).</li>\n\n        <li>corrected nested-extern declaration of\n        'waiting_for_initial_map' -- n/c.</li>\n\n        <li>renamed 'term' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n\n    <li>xterm.h:\n      <ul>\n        <li>prototype 'do_hangup()', 'HandleFocusChange()',\n        'TekExpose()', 'Error()', 'Exit()' - forces changes in\n        various places.</li>\n\n        <li>adjusted prototypes that pass 'Boolean' arguments to\n        use 'int' (this is the \"correct\" ANSI approach to extended\n        compiles; it's worth mentioning that gcc doesn't meet the\n        ANSI spec here). I used gcc -Wconversion to find these, but\n        there's a lot of unrelated warnings that are due to setting\n        NARROWPROTO in the config - n/c.</li>\n\n        <li>renamed 'term' parameters to avoid gcc -Wshadow warning\n        - n/c</li>\n      </ul>\n    </li>\n  </ul>\n\n  <h1><a name=\"xterm_01\" id=\"xterm_01\">Patch #1 - 1996/1/6</a></h1>\n\n  <p>This is my first cleanup patch for xterm. It addresses all of\n  the gcc warnings for -Wall, -Wmissing-prototypes and\n  -Wstrict-prototypes that I can change without modifying the\n  object code. (I'm compiling this with gcc 2.7.0 for an aout\n  target, which makes it simple to compare objects. When I do\n  ELF-only, I've got a tool that compares that sort of thing as\n  well).</p>\n\n  <p>Briefly, this patch adds (and uses) two header files in the\n  xterm directory:</p>\n\n  <pre>\n        proto.h\n        xterm.h\n</pre>\n  <p>I expect this to be the biggest patch by far. However (barring\n  a misplaced prototype), it shouldn't break anything, since the\n  intent of the patch is to provide missing declarations.</p>\n</body>\n</html>\n"], "filenames": ["MANIFEST", "button.c", "xterm.log.html"], "buggy_code_start_loc": [1, 1, 33], "buggy_code_end_loc": [2, 4402, 1015], "fixing_code_start_loc": [1, 1, 33], "fixing_code_end_loc": [2, 4417, 1019], "type": "NVD-CWE-noinfo", "message": "xterm before Patch #366 allows remote attackers to execute arbitrary code or cause a denial of service (segmentation fault) via a crafted UTF-8 combining character sequence.", "other": {"cve": {"id": "CVE-2021-27135", "sourceIdentifier": "cve@mitre.org", "published": "2021-02-10T16:15:13.787", "lastModified": "2022-09-30T12:50:06.937", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "xterm before Patch #366 allows remote attackers to execute arbitrary code or cause a denial of service (segmentation fault) via a crafted UTF-8 combining character sequence."}, {"lang": "es", "value": "xterm antes del parche #366 permite a los atacantes remotos ejecutar c\u00f3digo arbitrario o provocar una denegaci\u00f3n de servicio (fallo de segmentaci\u00f3n) a trav\u00e9s de una secuencia de caracteres de combinaci\u00f3n UTF-8 manipulada"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:invisible-island:xterm:*:*:*:*:*:*:*:*", "versionEndExcluding": "366", "matchCriteriaId": "06CEF6AB-8CBF-4325-8EB9-6979AEBB1F9D"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*", "matchCriteriaId": "E460AA51-FCDA-46B9-AE97-E6676AA5E194"}]}]}], "references": [{"url": "http://seclists.org/fulldisclosure/2021/May/52", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2021/02/10/7", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://access.redhat.com/security/cve/CVE-2021-27135", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1927559", "source": "cve@mitre.org", "tags": ["Issue Tracking"]}, {"url": "https://bugzilla.suse.com/show_bug.cgi?id=1182091", "source": "cve@mitre.org", "tags": ["Issue Tracking"]}, {"url": "https://github.com/ThomasDickey/xterm-snapshots/commit/82ba55b8f994ab30ff561a347b82ea340ba7075c", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://invisible-island.net/xterm/xterm.log.html", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2021/02/msg00019.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/35LK2ZXEIJUOGOA7FV2TJL3L6LFJ4X5S/", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "https://news.ycombinator.com/item?id=26524650", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/202208-22", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.openwall.com/lists/oss-security/2021/02/09/7", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://www.openwall.com/lists/oss-security/2021/02/09/9", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ThomasDickey/xterm-snapshots/commit/82ba55b8f994ab30ff561a347b82ea340ba7075c"}}