{"buggy_code": ["<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n/*\n| -------------------------------------------------------------------------\n| URI ROUTING\n| -------------------------------------------------------------------------\n| This file lets you re-map URI requests to specific controller functions.\n|\n| Typically there is a one-to-one relationship between a URL string\n| and its corresponding controller class/method. The segments in a\n| URL normally follow this pattern:\n|\n|\texample.com/class/method/id/\n|\n| In some instances, however, you may want to remap this relationship\n| so that a different class/function is called than the one\n| corresponding to the URL.\n|\n| Please see the user guide for complete details:\n|\n|\thttp://codeigniter.com/user_guide/general/routing.html\n|\n| -------------------------------------------------------------------------\n| RESERVED ROUTES\n| -------------------------------------------------------------------------\n|\n| There area two reserved routes:\n|\n|\t$route['default_controller'] = 'welcome';\n|\n| This route indicates which controller class should be loaded if the\n| URI contains no data. In the above example, the \"welcome\" class\n| would be loaded.\n|\n|\t$route['404_override'] = 'errors/page_missing';\n|\n| This route will tell the Router what URI segments to use if those provided\n| in the URL cannot be matched to a valid route.\n|\n*/\n\n//_______________________________________________\n//Admin : global features\n$route['admin/qrcode'] = 'admin/qrCode';\n$route['admin/settings'] = 'admin/settings';\n$route['admin/diagnostic'] = 'admin/diagnostic';\n$route['admin/oauthclients'] = 'admin/oauthClients';\n$route['admin/oauthclients/create'] = 'admin/oauthClientsCreate';\n$route['admin/oauthclients/delete'] = 'admin/oauthClientsDelete';\n$route['admin/oauthtokens/purge'] = 'admin/oauthTokensPurge';\n$route['admin'] = 'admin/settings';\n\n//_______________________________________________\n//Admin : user management\n$route['users/myprofile'] = 'users/myProfile';\n$route['users/employees'] = 'users/employees';\n$route['users/employeesMultiSelect'] = 'users/employeesMultiSelect';\n$route['users/export'] = 'users/export';\n$route['users/reset/(:num)'] = 'users/reset/$1';\n$route['users/create'] = 'users/create';\n$route['users/edit/(:num)'] = 'users/edit/$1';\n$route['users/delete/(:num)'] = 'users/delete/$1';\n$route['users/check/login'] = 'users/checkLoginByAjax';\n$route['users/enable/(:num)'] = 'users/enable/$1';\n$route['users/disable/(:num)'] = 'users/disable/$1';\n$route['users'] = 'users';\n\n//_______________________________________________\n//Human Resources Management\n$route['hr/employees'] = 'hr/employees';\n$route['hr/employees/entity/(:num)/(:any)/(:any)/(:any)/(:any)/(:any)/(:any)'] = 'hr/employeesOfEntity/$1/$2/$3/$4/$5/$6/$7';\n$route['hr/employees/export/(:num)/(:any)/(:any)/(:any)/(:any)/(:any)/(:any)'] = 'hr/exportEmployees/$1/$2/$3/$4/$5/$6/$7';\n$route['hr/employees/edit/manager'] = 'hr/editManager';\n$route['hr/employees/edit/entity'] = 'hr/editEntity';\n$route['hr/employees/edit/contract'] = 'hr/editContract';\n$route['hr/employees/edit/entitlements'] = 'hr/editEntitlements';\n$route['hr/employees/create/leave'] = 'hr/createLeaveRequest';\n$route['hr/leaves/(:num)'] = 'hr/leaves/$1';\n$route['hr/leaves/export/(:num)'] = 'hr/exportLeaves/$1';\n$route['hr/overtime/(:num)'] = 'hr/overtime/$1';\n$route['hr/counters/([^/]+)/(:num)'] = 'hr/counters/$1/$2';\n$route['hr/counters/([^/]+)/(:num)/(:num)'] = 'hr/counters/$1/$2/$3';\n$route['hr/overtime/export/(:num)'] = 'hr/exportOvertime/$1';\n$route['hr/entitleddays/(:num)'] = 'hr/entitleddays/$1';\n$route['hr/leaves/create/(:num)'] = 'hr/createleave/$1';\n$route['hr/presence/([^/]+)/(:num)'] = 'hr/presence/$1/$2';\n$route['hr/presence/([^/]+)/(:num)/(:num)/(:num)'] = 'hr/presence/$1/$2/$3/$4';\n$route['hr/presence/export/([^/]+)/(:num)/(:num)/(:num)'] = 'hr/exportPresence/$1/$2/$3/$4';\n$route['hr'] = 'hr/employees';\n\n//_______________________________________________\n//HR edit leave types\n$route['leavetypes/delete/(:num)'] = 'leavetypes/delete/$1';\n$route['leavetypes/edit/(:num)'] = 'leavetypes/edit/$1';\n$route['leavetypes/index'] = 'leavetypes/index';\n$route['leavetypes/create'] = 'leavetypes/create';\n$route['leavetypes/export'] = 'leavetypes/export';\n$route['leavetypes'] = 'leavetypes';\n\n//_______________________________________________\n//HR edit positions\n$route['positions/delete/(:num)'] = 'positions/delete/$1';\n$route['positions/edit/(:num)'] = 'positions/edit/$1';\n$route['positions/index'] = 'positions/index';\n$route['positions/select'] = 'positions/select';\n$route['positions/create'] = 'positions/create';\n$route['positions/export'] = 'positions/export';\n$route['positions'] = 'positions';\n\n//_______________________________________________\n//HR edit contracts\n$route['contracts/export'] = 'contracts/export';\n$route['contracts/create'] = 'contracts/create';\n$route['contracts/edit/(:num)'] = 'contracts/edit/$1';\n$route['contracts/update'] = 'contracts/update';\n$route['contracts/delete/(:num)'] = 'contracts/delete/$1';\n$route['contracts/(:num)/calendar/(:num)'] = 'contracts/calendar/$1/$2';\n$route['contracts/(:num)/calendar'] = 'contracts/calendar/$1';\n$route['contracts/(:num)/calendar/(:num)/copy/(:num)'] = 'contracts/copydayoff/$1/$3/$2';\n$route['contracts/(:num)/excludetypes'] = 'contracts/excludeTypes/$1';\n$route['contracts/(:num)/types/(:num)/include'] = 'contracts/includeTypeFromContract/$1/$2';\n$route['contracts/(:num)/types/(:num)/exclude'] = 'contracts/excludeTypeFromContract/$1/$2';\n$route['contracts/calendar/edit'] = 'contracts/editdayoff';\n$route['contracts/calendar/series'] = 'contracts/series';\n$route['contracts/calendar/import'] = 'contracts/import';\n$route['contracts/calendar/userdayoffs/(:num)'] = 'contracts/userDayoffs/$1';\n$route['contracts/calendar/userdayoffs'] = 'contracts/userDayoffs';\n$route['contracts/calendar/alldayoffs'] = 'contracts/allDayoffs';\n$route['contracts/calendar/alldayoffs/lists'] = 'contracts/allDayoffsForList';\n$route['contracts'] = 'contracts';\n\n//_______________________________________________\n//HR Organization\n$route['organization/select'] = 'organization/select';\n$route['organization/root'] = 'organization/root';\n$route['organization/delete'] = 'organization/delete';\n$route['organization/create'] = 'organization/create';\n$route['organization/rename'] = 'organization/rename';\n$route['organization/move'] = 'organization/move';\n$route['organization/copy'] = 'organization/copy';\n$route['organization/employees'] = 'organization/employees';\n$route['organization/addemployee'] = 'organization/addemployee';\n$route['organization/delemployee'] = 'organization/delemployee';\n$route['organization/getsupervisor'] = 'organization/getsupervisor';\n$route['organization/setsupervisor'] = 'organization/setsupervisor';\n$route['organization/lists'] = 'organization/listsIndex';\n$route['organization/lists/employees'] = 'organization/listsEmployees';\n$route['organization/lists/create'] = 'organization/listsCreate';\n$route['organization/lists/rename'] = 'organization/listsRename';\n$route['organization/lists/delete'] = 'organization/listsDelete';\n$route['organization/lists/addemployees'] = 'organization/listsAddEmployees';\n$route['organization/lists/removeemployees'] = 'organization/listsRemoveEmployees';\n$route['organization/lists/reorder'] = 'organization/listsReorder';\n$route['organization/lists/name'] = 'organization/listName';\n$route['organization'] = 'organization';\n\n//_______________________________________________\n//Various calendars\n$route['calendar/individual'] = 'calendar/individual';\n$route['calendar/workmates'] = 'calendar/workmates';\n$route['calendar/collaborators'] = 'calendar/collaborators';\n$route['calendar/organization'] = 'calendar/organization';\n$route['calendar/department'] = 'calendar/department';\n$route['calendar/tabular'] = 'calendar/tabular';\n$route['calendar/tabular/(:num)/(:num)/(:num)/(:any)/(:any)'] = 'calendar/tabular/$1/$2/$3/$4/$5';\n$route['calendar/tabular/partial/(:num)/(:num)/(:num)/(:any)/(:any)'] = 'calendar/tabularPartial/$1/$2/$3/$4/$5';\n$route['calendar/tabular/export/(:num)/(:num)/(:num)/(:any)/(:any)'] = 'calendar/exportTabular/$1/$2/$3/$4/$5';\n$route['calendar/tabular/list/partial/(:num)/(:num)/(:num)/(:any)'] = 'calendar/tabularPartialFromList/$1/$2/$3/$4';\n$route['calendar/tabular/list/export/(:num)/(:num)/(:num)/(:any)'] = 'calendar/exportTabularFromList/$1/$2/$3/$4';\n$route['calendar/year/(:num)/(:num)'] = 'calendar/year/$1/$2';\n$route['calendar/year/(:num)'] = 'calendar/year/$1';\n$route['calendar/year'] = 'calendar/year';\n$route['calendar/year/export/(:num)/(:num)'] = 'calendar/exportYear/$1/$2';\n$route['calendar'] = 'calendar/individual';\n\n//_______________________________________________\n//private Fullcalendar feeds\n$route['leaves/individual/(:num)'] = 'leaves/individual/$1';\n$route['leaves/individual'] = 'leaves/individual';\n$route['leaves/workmates'] = 'leaves/workmates';\n$route['leaves/department'] = 'leaves/department';\n$route['leaves/organization/(:num)'] = 'leaves/organization/$1';\n$route['leaves/list/(:num)'] = 'leaves/listEvents/$1';\n$route['leaves/collaborators'] = 'leaves/collaborators';\n$route['leaves/team'] = 'leaves/team';\n\n//_______________________________________________\n//public Fullcalendar feeds (available when public calendars are activated)\n$route['leaves/public/organization/(:num)'] = 'calendar/publicOrganization/$1';\n$route['contracts/public/calendar/alldayoffs'] = 'calendar/publicDayoffs';\n\n//_______________________________________________\n//Leave requests created by an employee\n$route['leaves/counters'] = 'leaves/counters';\n$route['leaves/counters/(:num)'] = 'leaves/counters/$1';\n$route['leaves/export'] = 'leaves/export';\n$route['leaves/create'] = 'leaves/create';\n$route['leaves/edit/(:num)'] = 'leaves/edit/$1';\n$route['leaves/request/(:num)'] = 'leaves/requestLeave/$1';\n$route['leaves/cancel/(:num)'] = 'leaves/cancel/$1';\n$route['leaves/update'] = 'leaves/update';\n$route['leaves/delete/(:num)'] = 'leaves/delete/$1';\n$route['leaves/(:num)/history'] = 'leaves/history/$1';\n$route['leaves/(:num)/comments/add'] = 'leaves/createComment/$1';\n$route['leaves/cancellation/(:num)'] = 'leaves/cancellation/$1';\n$route['leaves/reminder/(:num)'] = 'leaves/reminder/$1';\n$route['leaves/([^/]+)/(:num)'] = 'leaves/view/$1/$2';\n$route['leaves/validate'] = 'leaves/validate';\n$route['leaves'] = 'leaves';\n\n//_______________________________________________\n//leave requests (submitted to the line manager)\n$route['requests/collaborators'] = 'requests/collaborators';\n$route['requests/balance'] = 'requests/balance';\n$route['requests/balance/(:num)'] = 'requests/balance/$1';\n$route['requests/createleave/(:num)'] = 'requests/createleave/$1';\n$route['requests/counters/(:num)'] = 'requests/counters/$1';\n$route['requests/counters/(:num)/(:num)'] = 'requests/counters/$1/$2';\n$route['requests/export/(:any)'] = 'requests/export/$1';\n$route['requests/accept/(:num)'] = 'requests/accept/$1';\n$route['requests/reject/(:num)'] = 'requests/reject/$1';\n$route['requests/cancellation/accept/(:num)'] = 'requests/acceptCancellation/$1';\n$route['requests/cancellation/reject/(:num)'] = 'requests/rejectCancellation/$1';\n$route['requests/delegations/(:num)'] = 'requests/delegations/$1';\n$route['requests/delegations'] = 'requests/delegations';\n$route['requests/ajax/delegations/delete'] = 'requests/deleteDelegations';\n$route['requests/ajax/delegations/add'] = 'requests/addDelegations';\n$route['requests/(:any)'] = 'requests/index/$1';\n$route['requests'] = 'requests/index/requested';\n\n//_______________________________________________\n//overtime requests\n$route['extra/export'] = 'extra/export';\n$route['extra/create'] = 'extra/create';\n$route['extra/edit/(:num)'] = 'extra/edit/$1';\n$route['extra/delete/(:num)'] = 'extra/delete/$1';\n$route['extra/([^/]+)/(:num)'] = 'extra/view/$1/$2';\n$route['extra'] = 'extra';\n\n//_______________________________________________\n//overtime validation\n$route['overtime/export/(:any)'] = 'overtime/export/$1';\n$route['overtime/accept/(:num)'] = 'overtime/accept/$1';\n$route['overtime/reject/(:num)'] = 'overtime/reject/$1';\n$route['overtime/(:any)'] = 'overtime/index/$1';\n$route['overtime'] = 'overtime/index/requested';\n\n//_______________________________________________\n//Entitled days\n$route['entitleddays/user/(:num)'] = 'entitleddays/user/$1';\n$route['entitleddays/ajax/user'] = 'entitleddays/ajax_user';\n$route['entitleddays/userdelete/(:num)'] = 'entitleddays/userdelete/$1';\n$route['entitleddays/contract/(:num)'] = 'entitleddays/contract/$1';\n$route['entitleddays/ajax/contract'] = 'entitleddays/ajax_contract';\n$route['entitleddays/contractdelete/(:num)'] = 'entitleddays/contractdelete/$1';\n$route['entitleddays/ajax/update'] = 'entitleddays/ajax_update';\n\n//_______________________________________________\n//Reports\n$route['reports/balance'] = 'reports/balance';\n$route['reports/balance/execute'] = 'reports/executeBalanceReport';\n$route['reports/balance/export'] = 'reports/exportBalanceReport';\n$route['reports/leaves'] = 'reports/leaves';\n$route['reports/leaves/execute'] = 'reports/executeLeavesReport';\n$route['reports/leaves/export'] = 'reports/exportLeavesReport';\n$route['reports'] = 'reports';\n\n//_______________________________________________\n//HTTP API\n$route['api/doc'] = 'api/doc';\n$route['api/token'] = 'api/token';\n$route['api/contracts/(:num)'] = 'api/contracts/$1';\n$route['api/contracts/'] = 'api/contracts';\n$route['api/contracts'] = 'api/contracts';\n$route['api/entitleddayscontract/(:num)'] = 'api/entitleddayscontract/$1';\n$route['api/addentitleddayscontract/(:num)'] = 'api/addentitleddayscontract/$1';\n$route['api/entitleddaysemployee/(:num)'] = 'api/entitleddaysemployee/$1';\n$route['api/addentitleddaysemployee/(:num)'] = 'api/addentitleddaysemployee/$1';\n$route['api/leavessummary/(:num)/(:num)'] = 'api/leavessummary/$1/$2';\n$route['api/leavessummary/(:num)'] = 'api/leavessummary/$1';\n$route['api/leaves/(:any)/(:any)'] = 'api/leavesInRange/$1/$2';\n$route['api/leavetypes/'] = 'api/leavetypes';\n$route['api/leavetypes'] = 'api/leavetypes';\n$route['api/positions/'] = 'api/positions';\n$route['api/positions'] = 'api/positions';\n$route['api/userdepartment/(:num)'] = 'api/userdepartment/$1';\n$route['api/userextras/(:num)'] = 'api/userextras/$1';\n$route['api/userleaves/(:num)'] = 'api/userleaves/$1';\n$route['api/users/(:num)/leaves/'] = 'api/userleaves/$1';\n$route['api/users/(:num)']['GET'] = 'api/users/$1';\n$route['api/users/']['GET'] = 'api/users';\n$route['api/users'] = 'api/users';\n//v0.4.0\n$route['api/monthlypresence/(:num)/(:num)/(:num)'] = 'api/monthlypresence/$1/$2/$3';\n$route['api/deleteuser/(:num)'] = 'api/deleteuser/$1';\n$route['api/users/(:num)']['DELETE'] = 'api/deleteuser/$1';\n$route['api/updateuser/(:num)'] = 'api/updateuser/$1';\n$route['api/users/(:num)']['PATCH'] = 'api/updateuser/$1';\n$route['api/createuser/(:any)'] = 'api/createuser/$1';\n$route['api/createuser'] = 'api/createuser';\n$route['api/users/']['POST'] = 'api/createuser/$1';\n$route['api/users/(:any)']['POST'] = 'api/createuser/$1';\n$route['api/createleave'] = 'api/createleave';\n$route['api/leaves']['POST'] = 'api/createleave';\n$route['api/leaves/']['POST'] = 'api/createleave';\n//v0.4.3\n$route['api/getListOfEmployeesInEntity/(:num)/(:any)'] = 'api/getListOfEmployeesInEntity/$1/$2';\n//v0.4.4\n$route['api/acceptleaves/(:num)'] = 'api/acceptleave/$1';\n$route['api/acceptleave/(:num)'] = 'api/acceptleave/$1';\n$route['api/rejectleaves/(:num)'] = 'api/rejectleave/$1';\n$route['api/rejectleave/(:num)'] = 'api/rejectleave/$1';\n//v0.6.0\n$route['api/users/ext'] = 'api/usersExt';\n\n//_______________________________________________\n//ICS Feeds\n$route['ics/individual/(:num)'] = 'ics/individual/$1';\n$route['ics/dayoffs/(:num)/(:num)'] = 'ics/dayoffs/$1/$2';\n$route['ics/entity/(:num)/(:num)/(:any)'] = 'ics/entity/$1/$2/$3';\n$route['ics/collaborators/(:num)'] = 'ics/collaborators/$1';\n$route['ics/ical/(:num)'] = 'ics/ical/$1';\n\n//_______________________________________________\n//Session management\n$route['session/login'] = 'connection/login';\n$route['session/logout'] = 'connection/logout';\n$route['session/oauth2'] = 'connection/loginOAuth2';\n$route['session/language'] = 'connection/language';\n$route['session/forgetpassword'] = 'connection/forgetpassword';\n$route['api/metadata'] = 'connection/metadata';\n$route['api/acs'] = 'connection/acs';\n$route['api/slo'] = 'connection/slo';\n$route['api/sls'] = 'connection/sls';\n$route['api/sso'] = 'connection/sso';\n\n//_______________________________________________\n//Authorization endpoint\n$route['api/authorization/authorize'] = 'authorization/authorize';\n$route['api/authorization/login'] = 'authorization/login';\n$route['api/authorization/userinfo'] = 'authorization/userinfo';\n\n//_______________________________________________\n//REST API (for mobile/HTML Clients)\n$route['api/rest/self']['OPTIONS'] = 'Rest/options';\n$route['api/rest/self']['GET'] = 'Rest/self';\n$route['api/rest/profile']['OPTIONS'] = 'Rest/options';\n$route['api/rest/profile']['GET'] = 'Rest/profile';\n\n$route['api/rest/config']['OPTIONS'] = 'Rest/options';\n$route['api/rest/config']['GET'] = 'Rest/config';\n$route['api/rest/checksum/(:any)']['OPTIONS'] = 'Rest/options';\n$route['api/rest/checksum/(:any)']['GET'] = 'Rest/checksum/$1';\n$route['api/rest/checksum']['OPTIONS'] = 'Rest/options';\n$route['api/rest/checksum']['GET'] = 'Rest/checksum';\n$route['api/rest/submissions']['OPTIONS'] = 'Rest/options';\n$route['api/rest/submissions']['GET'] = 'Rest/submissions';\n\n$route['api/rest/leaves']['OPTIONS'] = 'RestLeaves/options';\n$route['api/rest/leaves']['GET'] = 'RestLeaves/leaves';\n$route['api/rest/leaves']['POST'] = 'RestLeaves/create';\n$route['api/rest/leaves/(:num)']['OPTIONS'] = 'RestLeaves/options';\n$route['api/rest/leaves/(:num)']['GET'] = 'RestLeaves/leaves/$1';\n$route['api/rest/leaves/(:num)']['PATCH'] = 'RestLeaves/edit/$1';\n$route['api/rest/leaves/(:num)']['DELETE'] = 'RestLeaves/delete/$1';\n\n$route['api/rest/requests']['OPTIONS'] = 'RestRequests/options';\n$route['api/rest/requests']['GET'] = 'RestRequests/requests';\n$route['api/rest/requests/(:any)']['OPTIONS'] = 'RestRequests/requests/$1';\n$route['api/rest/requests/(:any)']['GET'] = 'RestRequests/requests/$1';\n\n//User properties : is admin, is manager, id, id of manager, manager, contract..\n$route['api/rest/users/(:num)']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users/(:num)']['GET'] = 'RestUsers/users/$1';\n$route['api/rest/users']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users']['GET'] = 'RestUsers/users';\n\n$route['api/rest/users/(:num)/enable']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users/(:num)/enable']['GET'] = 'RestUsers/enable/$1';\n$route['api/rest/users/(:num)/disable']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users/(:num)/disable']['GET'] = 'RestUsers/disable/$1';\n\n$route['api/rest/admin/logs/(:any)']['OPTIONS'] = 'RestAdmin/options';\n$route['api/rest/admin/logs/(:any)']['GET'] = 'RestAdmin/logs/$1';\n$route['api/rest/admin/logs']['OPTIONS'] = 'RestAdmin/options';\n$route['api/rest/admin/logs']['GET'] = 'RestAdmin/logs';\n\n//_______________________________________________\n//Default controllers\n$route['default_controller'] = 'leaves';\n$route['404_override'] = 'pages/notfound';\n$route['(:any)'] = 'pages/view/$1';\n", "<?php\n/**\n * This controller serves the user management pages and tools.\n * @copyright  Copyright (c) 2014-2019 Benjamin BALET\n * @license      http://opensource.org/licenses/AGPL-3.0 AGPL-3.0\n * @link            https://github.com/bbalet/jorani\n * @since         0.4.2\n */\n\nif (!defined('BASEPATH')) { exit('No direct script access allowed'); }\n\n/**\n * This controller serves the user management pages and tools.\n * The difference with HR Controller is that operations are technical (CRUD, etc.).\n */\nclass Users extends CI_Controller {\n\n    /**\n     * Default constructor\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function __construct() {\n        parent::__construct();\n        setUserContext($this);\n        $this->load->model('users_model');\n        $this->lang->load('users', $this->language);\n    }\n\n    /**\n     * Display the list of all users\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function index() {\n        $this->auth->checkIfOperationIsAllowed('list_users');\n        $data = getUserContext($this);\n        $this->load->helper('form');\n        $this->lang->load('datatable', $this->language);\n        $data['users'] = $this->users_model->getUsersAndRoles();\n        $data['title'] = lang('users_index_title');\n        $data['help'] = $this->help->create_help_link('global_link_doc_page_list_users');\n        $data['flash_partial_view'] = $this->load->view('templates/flash', $data, TRUE);\n        $this->load->view('templates/header', $data);\n        $this->load->view('menu/index', $data);\n        $this->load->view('users/index', $data);\n        $this->load->view('templates/footer');\n    }\n\n    /**\n     * Set a user as active (TRUE) or inactive (FALSE)\n     * @param int $id User identifier\n     * @param bool $active active (TRUE) or inactive (FALSE)\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function active($id, $active) {\n        $this->auth->checkIfOperationIsAllowed('list_users');\n        $this->users_model->setActive($id, $active);\n        $this->session->set_flashdata('msg', lang('users_edit_flash_msg_success'));\n        redirect('users');\n    }\n\n    /**\n     * Enable a user\n     * @param int $id User identifier\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function enable($id) {\n        $this->active($id, TRUE);\n    }\n\n    /**\n     * Disable a user\n     * @param int $id User identifier\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function disable($id) {\n        $this->active($id, FALSE);\n    }\n\n    /**\n     * Display the modal pop-up content of the list of employees\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function employees() {\n        $this->auth->checkIfOperationIsAllowed('employees_list');\n        $data = getUserContext($this);\n        $this->lang->load('datatable', $this->language);\n        $data['employees'] = $this->users_model->getAllEmployees();\n        $data['title'] = lang('employees_index_title');\n        $this->load->view('users/employees', $data);\n    }\n\n    /**\n     * Display the modal pop-up content of the list of employees.\n     * The differences with the function employees are that multi select is\n     * allowed and the last column contains the name of the entity the employee\n     * belongs to.\n     * @see employees\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function employeesMultiSelect() {\n        $this->auth->checkIfOperationIsAllowed('employees_list');\n        $data = getUserContext($this);\n        $this->lang->load('datatable', $this->language);\n        $data['employees'] = $this->users_model->getAllEmployeesAndTheirEntities();\n        $data['title'] = lang('employees_index_title');\n        $this->load->view('users/multiselect', $data);\n    }\n\n    /**\n     * Display details of the connected user (contract, line manager, etc.)\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function myProfile() {\n        $this->auth->checkIfOperationIsAllowed('view_myprofile');\n        $this->load->library('polyglot');\n        $data = getUserContext($this);\n        $data['user'] = $this->users_model->getUsers($this->user_id);\n        if (empty($data['user'])) {\n            redirect('notfound');\n        }\n        $data['title'] = lang('users_myprofile_html_title');\n        $this->load->model('positions_model');\n        $this->load->model('contracts_model');\n        $this->load->model('organization_model');\n        $this->load->model('oauthclients_model');\n        $data['manager_label'] = $this->users_model->getName($data['user']['manager']);\n        $data['contract_id'] = intval($data['user']['contract']);\n        $data['contract_label'] = $this->contracts_model->getName($data['user']['contract']);\n        $data['position_label'] = $this->positions_model->getName($data['user']['position']);\n        $data['organization_label'] = $this->organization_model->getName($data['user']['organization']);\n        $data['apps'] = $this->oauthclients_model->listOAuthApps($this->user_id);\n        $this->load->view('templates/header', $data);\n        $this->load->view('menu/index', $data);\n        $this->load->view('users/myprofile', $data);\n        $this->load->view('templates/footer');\n    }\n\n    /**\n     * Display a for that allows updating a given user\n     * @param int $id User identifier\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function edit($id) {\n        $this->auth->checkIfOperationIsAllowed('edit_user');\n        $data = getUserContext($this);\n        $this->load->helper('form');\n        $this->load->library('form_validation');\n        $this->load->library('polyglot');\n        $data['title'] = lang('users_edit_html_title');\n        $data['help'] = $this->help->create_help_link('global_link_doc_page_create_user');\n\n        $this->form_validation->set_rules('firstname', lang('users_edit_field_firstname'), 'required|strip_tags');\n        $this->form_validation->set_rules('lastname', lang('users_edit_field_lastname'), 'required|strip_tags');\n        $this->form_validation->set_rules('login', lang('users_edit_field_login'), 'required|strip_tags');\n        $this->form_validation->set_rules('email', lang('users_edit_field_email'), 'required|strip_tags');\n        $this->form_validation->set_rules('role[]', lang('users_edit_field_role'), 'required');\n        $this->form_validation->set_rules('manager', lang('users_edit_field_manager'), 'required|strip_tags');\n        $this->form_validation->set_rules('contract', lang('users_edit_field_contract'), 'strip_tags');\n        $this->form_validation->set_rules('entity', lang('users_edit_field_entity'), 'strip_tags');\n        $this->form_validation->set_rules('position', lang('users_edit_field_position'), 'strip_tags');\n        $this->form_validation->set_rules('datehired', lang('users_edit_field_hired'), 'strip_tags');\n        $this->form_validation->set_rules('identifier', lang('users_edit_field_identifier'), 'strip_tags');\n        $this->form_validation->set_rules('language', lang('users_edit_field_language'), 'strip_tags');\n        $this->form_validation->set_rules('timezone', lang('users_edit_field_timezone'), 'strip_tags');\n        if ($this->config->item('ldap_basedn_db')) $this->form_validation->set_rules('ldap_path', lang('users_edit_field_ldap_path'), 'strip_tags');\n\n        $data['users_item'] = $this->users_model->getUsers($id);\n        if (empty($data['users_item'])) {\n            redirect('notfound');\n        }\n\n        if ($this->form_validation->run() === FALSE) {\n            $this->load->model('roles_model');\n            $this->load->model('positions_model');\n            $this->load->model('organization_model');\n            $this->load->model('contracts_model');\n            $data['contracts'] = $this->contracts_model->getContracts();\n            $data['manager_label'] = $this->users_model->getName($data['users_item']['manager']);\n            $data['position_label'] = $this->positions_model->getName($data['users_item']['position']);\n            $data['organization_label'] = $this->organization_model->getName($data['users_item']['organization']);\n            $data['roles'] = $this->roles_model->getRoles();\n            $this->load->view('templates/header', $data);\n            $this->load->view('menu/index', $data);\n            $this->load->view('users/edit', $data);\n            $this->load->view('templates/footer');\n        } else {\n            $this->users_model->updateUsers();\n            $this->session->set_flashdata('msg', lang('users_edit_flash_msg_success'));\n            if (isset($_GET['source'])) {\n                redirect($_GET['source']);\n            } else {\n                redirect('users');\n            }\n        }\n    }\n\n    /**\n     * Delete a user. Log it as an error.\n     * @param int $id User identifier\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function delete($id) {\n        $this->auth->checkIfOperationIsAllowed('delete_user');\n        //Test if user exists\n        $data['users_item'] = $this->users_model->getUsers($id);\n        if (empty($data['users_item'])) {\n            redirect('notfound');\n        } else {\n            $this->users_model->deleteUser($id);\n        }\n        log_message('error', 'User #' . $id . ' has been deleted by user #' . $this->session->userdata('id'));\n        $this->session->set_flashdata('msg', lang('users_delete_flash_msg_success'));\n        redirect('users');\n    }\n\n    /**\n     * Reset the password of a user\n     * Can be accessed by the user itself or by admin\n     * @param int $id User identifier\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function reset($id) {\n        $this->auth->checkIfOperationIsAllowed('change_password', $id);\n\n        //Test if user exists\n        $data['users_item'] = $this->users_model->getUsers($id);\n        if (empty($data['users_item'])) {\n            log_message('debug', '{controllers/users/reset} user not found');\n            redirect('notfound');\n        } else {\n            $data = getUserContext($this);\n            $data['target_user_id'] = $id;\n            $this->load->helper('form');\n            $this->load->library('form_validation');\n            $this->form_validation->set_rules('CipheredValue', 'Password', 'required');\n            if ($this->form_validation->run() === FALSE) {\n                $data['public_key'] = file_get_contents('./assets/keys/public.pem', TRUE);\n                $this->load->view('users/reset', $data);\n            } else {\n                $this->users_model->resetPassword($id, $this->input->post('CipheredValue'));\n\n                //Send an e-mail to the user so as to inform that its password has been changed\n                $user = $this->users_model->getUsers($id);\n                $this->load->library('email');\n                $this->load->library('polyglot');\n                $usr_lang = $this->polyglot->code2language($user['language']);\n                //We need to instance an different object as the languages of connected user may differ from the UI lang\n                $lang_mail = new CI_Lang();\n                $lang_mail->load('email', $usr_lang);\n\n                $this->load->library('parser');\n                $data = array(\n                    'Title' => $lang_mail->line('email_password_reset_title'),\n                    'Firstname' => $user['firstname'],\n                    'Lastname' => $user['lastname']\n                );\n                $message = $this->parser->parse('emails/' . $user['language'] . '/password_reset', $data, TRUE);\n                $this->email->set_encoding('quoted-printable');\n\n                if ($this->config->item('from_mail') != FALSE && $this->config->item('from_name') != FALSE ) {\n                    $this->email->from($this->config->item('from_mail'), $this->config->item('from_name'));\n                } else {\n                    $this->email->from('do.not@reply.me', 'LMS');\n                }\n                $this->email->to($user['email']);\n                if ($this->config->item('subject_prefix') != FALSE) {\n                    $subject = $this->config->item('subject_prefix');\n                } else {\n                   $subject = '[Jorani] ';\n                }\n                $this->email->subject($subject . $lang_mail->line('email_password_reset_subject'));\n                $this->email->message($message);\n                $this->email->send();\n\n                //Inform back the user by flash message\n                $this->session->set_flashdata('msg', lang('users_reset_flash_msg_success'));\n                if ($this->is_hr) {\n                    redirect('users');\n                }\n                else {\n                    redirect('home');\n                }\n            }\n        }\n    }\n\n    /**\n     * Display the form / action Create a new user\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function create() {\n        $this->auth->checkIfOperationIsAllowed('create_user');\n        $data = getUserContext($this);\n        $this->load->helper('form');\n        $this->load->library('form_validation');\n        $this->load->library('polyglot');\n        $data['title'] = lang('users_create_title');\n        $data['help'] = $this->help->create_help_link('global_link_doc_page_create_user');\n\n        $this->load->model('roles_model');\n        $data['roles'] = $this->roles_model->getRoles();\n        $this->load->model('contracts_model');\n        $data['contracts'] = $this->contracts_model->getContracts();\n        $data['public_key'] = file_get_contents('./assets/keys/public.pem', TRUE);\n\n        $this->form_validation->set_rules('firstname', lang('users_create_field_firstname'), 'required|strip_tags');\n        $this->form_validation->set_rules('lastname', lang('users_create_field_lastname'), 'required|strip_tags');\n        $this->form_validation->set_rules('login', lang('users_create_field_login'), 'required|callback_checkLogin|strip_tags');\n        $this->form_validation->set_rules('email', lang('users_create_field_email'), 'required|strip_tags');\n        if (!$this->config->item('ldap_enabled')) $this->form_validation->set_rules('CipheredValue', lang('users_create_field_password'), 'required');\n        $this->form_validation->set_rules('role[]', lang('users_create_field_role'), 'required');\n        $this->form_validation->set_rules('manager', lang('users_create_field_manager'), 'required|strip_tags');\n        $this->form_validation->set_rules('contract', lang('users_create_field_contract'), 'strip_tags');\n        $this->form_validation->set_rules('position', lang('users_create_field_position'), 'strip_tags');\n        $this->form_validation->set_rules('entity', lang('users_create_field_entity'), 'strip_tags');\n        $this->form_validation->set_rules('datehired', lang('users_create_field_hired'), 'strip_tags');\n        $this->form_validation->set_rules('identifier', lang('users_create_field_identifier'), 'strip_tags');\n        $this->form_validation->set_rules('language', lang('users_create_field_language'), 'strip_tags');\n        $this->form_validation->set_rules('timezone', lang('users_create_field_timezone'), 'strip_tags');\n        if ($this->config->item('ldap_basedn_db')) $this->form_validation->set_rules('ldap_path', lang('users_create_field_ldap_path'), 'strip_tags');\n\n        if ($this->form_validation->run() === FALSE) {\n            $this->load->view('templates/header', $data);\n            $this->load->view('menu/index', $data);\n            $this->load->view('users/create', $data);\n            $this->load->view('templates/footer');\n        } else {\n            $password = $this->users_model->setUsers();\n\n            //Send an e-mail to the user so as to inform that its account has been created\n            $this->load->library('email');\n            $usr_lang = $this->polyglot->code2language($this->input->post('language'));\n            //We need to instance an different object as the languages of connected user may differ from the UI lang\n            $lang_mail = new CI_Lang();\n            $lang_mail->load('email', $usr_lang);\n\n            $this->load->library('parser');\n            $data = array(\n                'Title' => $lang_mail->line('email_user_create_title'),\n                'BaseURL' => base_url(),\n                'Firstname' => $this->input->post('firstname'),\n                'Lastname' => $this->input->post('lastname'),\n                'Login' => $this->input->post('login'),\n                'Password' => $password\n            );\n            $message = $this->parser->parse('emails/' . $this->input->post('language') . '/new_user', $data, TRUE);\n            $this->email->set_encoding('quoted-printable');\n\n            if ($this->config->item('from_mail') != FALSE && $this->config->item('from_name') != FALSE ) {\n                $this->email->from($this->config->item('from_mail'), $this->config->item('from_name'));\n            } else {\n               $this->email->from('do.not@reply.me', 'LMS');\n            }\n            $this->email->to($this->input->post('email'));\n            if ($this->config->item('subject_prefix') != FALSE) {\n                $subject = $this->config->item('subject_prefix');\n            } else {\n               $subject = '[Jorani] ';\n            }\n            $this->email->subject($subject . $lang_mail->line('email_user_create_subject'));\n            $this->email->message($message);\n            $this->email->send();\n\n            $this->session->set_flashdata('msg', lang('users_create_flash_msg_success'));\n            redirect('users');\n        }\n    }\n\n    /**\n     * Form validation callback : prevent from login duplication\n     * @param string $login Login\n     * @return boolean TRUE if the field is valid, FALSE otherwise\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function checkLogin($login) {\n        if (!$this->users_model->isLoginAvailable($login)) {\n            $this->form_validation->set_message('checkLogin', lang('users_create_checkLogin'));\n            return FALSE;\n        } else {\n            return TRUE;\n        }\n    }\n\n    /**\n     * Ajax endpoint : check login duplication\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function checkLoginByAjax() {\n        $this->output->set_content_type('text/plain');\n        if ($this->users_model->isLoginAvailable($this->input->post('login'))) {\n            $this->output->set_output('true');\n        } else {\n            $this->output->set_output('false');\n        }\n    }\n\n    /**\n     * Action: export the list of all users into an Excel file\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function export() {\n        $this->auth->checkIfOperationIsAllowed('export_user');\n        $this->load->view('users/export');\n    }\n}\n", "<?php\n/**\n * This view displays the list of users.\n * @copyright  Copyright (c) 2014-2019 Benjamin BALET\n * @license    http://opensource.org/licenses/AGPL-3.0 AGPL-3.0\n * @link       https://github.com/bbalet/jorani\n * @since      0.1.0\n */\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n\n<h2><?php echo lang('users_index_title');?><?php echo $help;?></h2>\n\n<?php echo $flash_partial_view;?>\n\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"display\" id=\"users\" width=\"100%\">\n    <thead>\n        <tr>\n            <th><?php echo lang('users_index_thead_id');?></th>\n            <th><?php echo lang('users_index_thead_firstname');?></th>\n            <th><?php echo lang('users_index_thead_lastname');?></th>\n            <th><?php echo lang('users_index_thead_login');?></th>\n            <th><?php echo lang('users_index_thead_email');?></th>\n            <th><?php echo lang('users_index_thead_role');?></th>\n        </tr>\n    </thead>\n    <tbody>\n<?php foreach ($users as $users_item): ?>\n    <tr>\n        <td data-order=\"<?php echo $users_item['id']; ?>\">\n            <?php echo $users_item['id'] ?>&nbsp;\n            <div class=\"pull-right\">\n                <?php if ($users_item['active']) { ?>\n                <a href=\"<?php echo base_url();?>users/disable/<?php echo $users_item['id'] ?>\" title=\"<?php echo lang('users_index_thead_tip_active');?>\"><i class=\"mdi mdi-account-off nolink\"></i></a>\n                <?php } else { ?>\n                <a href=\"<?php echo base_url();?>users/enable/<?php echo $users_item['id'] ?>\" title=\"<?php echo lang('users_index_thead_tip_inactive');?>\"><i class=\"mdi mdi-account mdi-dark mdi-inactive\"></i></a>\n                <?php } ?>\n                &nbsp;\n                <a href=\"<?php echo base_url();?>users/edit/<?php echo $users_item['id'] ?>\" title=\"<?php echo lang('users_index_thead_tip_edit');?>\"><i class=\"mdi mdi-account-edit nolink\"></i></a>\n                &nbsp;\n                <a href=\"#\" class=\"confirm-delete\" data-id=\"<?php echo $users_item['id'];?>\" title=\"<?php echo lang('users_index_thead_tip_delete');?>\"><i class=\"mdi mdi-delete nolink\"></i></a>\n                &nbsp;\n                <a href=\"<?php echo base_url();?>users/reset/<?php echo $users_item['id'] ?>\" title=\"<?php echo lang('users_index_thead_tip_reset');?>\" data-target=\"#frmResetPwd\" data-toggle=\"modal\"><i class=\"mdi mdi-lock nolink\"></i></a>\n            </div>\n        </td>\n        <td><?php echo $users_item['firstname']; ?></td>\n        <td><?php echo $users_item['lastname']; ?></td>\n        <td><?php echo $users_item['login']; ?></td>\n        <td><a href=\"mailto:<?php echo $users_item['email']; ?>\"><?php echo $users_item['email']; ?></a></td>\n        <td><?php echo $users_item['roles_list']; ?></td>\n    </tr>\n<?php endforeach ?>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<div class=\"row-fluid\"><div class=\"span12\">&nbsp;</div></div>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n      <a href=\"<?php echo base_url();?>users/export\" class=\"btn btn-primary\"><i class=\"mdi mdi-download\"></i>&nbsp;<?php echo lang('users_index_button_export');?></a>\n      &nbsp;\n      <a href=\"<?php echo base_url();?>users/create\" class=\"btn btn-primary\"><i class=\"mdi mdi-account-plus\"></i>&nbsp;<?php echo lang('users_index_button_create_user');?></a>\n    </div>\n</div>\n\n<div class=\"row-fluid\"><div class=\"span12\">&nbsp;</div></div>\n\n<div id=\"frmConfirmDelete\" class=\"modal hide fade\">\n    <div class=\"modal-header\">\n        <a href=\"#\" onclick=\"$('#frmConfirmDelete').modal('hide');\" class=\"close\">&times;</a>\n         <h3><?php echo lang('users_index_popup_delete_title');?></h3>\n    </div>\n    <div class=\"modal-body\">\n        <p><?php echo lang('users_index_popup_delete_message');?></p>\n        <p><?php echo lang('users_index_popup_delete_question');?></p>\n    </div>\n    <div class=\"modal-footer\">\n        <a href=\"#\" class=\"btn btn-danger\" id=\"lnkDeleteUser\"><?php echo lang('users_index_popup_delete_button_yes');?></a>\n        <a href=\"#\" onclick=\"$('#frmConfirmDelete').modal('hide');\" class=\"btn\"><?php echo lang('users_index_popup_delete_button_no');?></a>\n    </div>\n</div>\n\n<div id=\"frmResetPwd\" class=\"modal hide fade\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n         <h3><?php echo lang('users_index_popup_password_title');?></h3>\n    </div>\n    <div class=\"modal-body\">\n        <img src=\"<?php echo base_url();?>assets/images/loading.gif\">\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" data-dismiss=\"modal\"><?php echo lang('users_index_popup_password_button_cancel');?></button>\n    </div>\n</div>\n\n<div id=\"frmImportUsers\" class=\"modal hide fade\">\n\n    <div class=\"modal-header\">\n        <a href=\"#\" onclick=\"$('#frmImportUsers').modal('hide');\" class=\"close\">&times;</a>\n         <h3><?php echo lang('users_index_popup_import_title');?></h3>\n    </div>\n    <div class=\"modal-body\">\n        <?php echo form_open_multipart('users/import');?>\n            <label for=\"importFile\"><?php echo lang('users_index_popup_field_filename');?>\n            <input type=\"file\" name=\"importFile\" size=\"20\" />\n            </label>\n            <input class=\"btn btn-primary\" type=\"submit\" value=\"<?php echo lang('OK');?>\" />\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <a href=\"#\" onclick=\"$('#frmImportUsers').modal('hide');\" class=\"btn btn-danger\"><?php echo lang('Cancel');?></a>\n    </div>\n\n</div>\n\n<link href=\"<?php echo base_url();?>assets/datatable/DataTables-1.10.11/css/jquery.dataTables.min.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\" src=\"<?php echo base_url();?>assets/datatable/DataTables-1.10.11/js/jquery.dataTables.min.js\"></script>\n\n<script type=\"text/javascript\">\n$(document).ready(function() {\n    //Transform the HTML table in a fancy datatable\n    $('#users').dataTable({\n        stateSave: true,\n        language: {\n            decimal:            \"<?php echo lang('datatable_sInfoThousands');?>\",\n            processing:       \"<?php echo lang('datatable_sProcessing');?>\",\n            search:              \"<?php echo lang('datatable_sSearch');?>\",\n            lengthMenu:     \"<?php echo lang('datatable_sLengthMenu');?>\",\n            info:                   \"<?php echo lang('datatable_sInfo');?>\",\n            infoEmpty:          \"<?php echo lang('datatable_sInfoEmpty');?>\",\n            infoFiltered:       \"<?php echo lang('datatable_sInfoFiltered');?>\",\n            infoPostFix:        \"<?php echo lang('datatable_sInfoPostFix');?>\",\n            loadingRecords: \"<?php echo lang('datatable_sLoadingRecords');?>\",\n            zeroRecords:    \"<?php echo lang('datatable_sZeroRecords');?>\",\n            emptyTable:     \"<?php echo lang('datatable_sEmptyTable');?>\",\n            paginate: {\n                first:          \"<?php echo lang('datatable_sFirst');?>\",\n                previous:   \"<?php echo lang('datatable_sPrevious');?>\",\n                next:           \"<?php echo lang('datatable_sNext');?>\",\n                last:           \"<?php echo lang('datatable_sLast');?>\"\n            },\n            aria: {\n                sortAscending:  \"<?php echo lang('datatable_sSortAscending');?>\",\n                sortDescending: \"<?php echo lang('datatable_sSortDescending');?>\"\n            }\n        },\n    });\n    $(\"#frmResetPwd\").alert();\n    $(\"#frmImportUsers\").alert();\n\n    //On showing the confirmation pop-up, add the user id at the end of the delete url action\n    $('#frmConfirmDelete').on('show', function() {\n        var link = \"<?php echo base_url();?>users/delete/\" + $(this).data('id');\n        $(\"#lnkDeleteUser\").attr('href', link);\n    });\n\n    //Display a modal pop-up so as to confirm if a user has to be deleted or not\n    //We build a complex selector because datatable does horrible things on DOM...\n    //a simplier selector doesn't work when the delete is on page >1\n    $(\"#users tbody\").on('click', '.confirm-delete',  function(){\n        var id = $(this).data('id');\n        $('#frmConfirmDelete').data('id', id).modal('show');\n    });\n\n    //Prevent to load always the same content (refreshed each time)\n    $('#frmConfirmDelete').on('hidden', function() {\n        $(this).removeData('modal');\n    });\n    $('#frmResetPwd').on('hidden', function() {\n        $(this).removeData('modal');\n    });\n});\n</script>\n"], "fixing_code": ["<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n/*\n| -------------------------------------------------------------------------\n| URI ROUTING\n| -------------------------------------------------------------------------\n| This file lets you re-map URI requests to specific controller functions.\n|\n| Typically there is a one-to-one relationship between a URL string\n| and its corresponding controller class/method. The segments in a\n| URL normally follow this pattern:\n|\n|\texample.com/class/method/id/\n|\n| In some instances, however, you may want to remap this relationship\n| so that a different class/function is called than the one\n| corresponding to the URL.\n|\n| Please see the user guide for complete details:\n|\n|\thttp://codeigniter.com/user_guide/general/routing.html\n|\n| -------------------------------------------------------------------------\n| RESERVED ROUTES\n| -------------------------------------------------------------------------\n|\n| There area two reserved routes:\n|\n|\t$route['default_controller'] = 'welcome';\n|\n| This route indicates which controller class should be loaded if the\n| URI contains no data. In the above example, the \"welcome\" class\n| would be loaded.\n|\n|\t$route['404_override'] = 'errors/page_missing';\n|\n| This route will tell the Router what URI segments to use if those provided\n| in the URL cannot be matched to a valid route.\n|\n*/\n\n//_______________________________________________\n//Admin : global features\n$route['admin/qrcode'] = 'admin/qrCode';\n$route['admin/settings'] = 'admin/settings';\n$route['admin/diagnostic'] = 'admin/diagnostic';\n$route['admin/oauthclients'] = 'admin/oauthClients';\n$route['admin/oauthclients/create'] = 'admin/oauthClientsCreate';\n$route['admin/oauthclients/delete'] = 'admin/oauthClientsDelete';\n$route['admin/oauthtokens/purge'] = 'admin/oauthTokensPurge';\n$route['admin'] = 'admin/settings';\n\n//_______________________________________________\n//Admin : user management\n$route['users/myprofile'] = 'users/myProfile';\n$route['users/employees'] = 'users/employees';\n$route['users/employeesMultiSelect'] = 'users/employeesMultiSelect';\n$route['users/export'] = 'users/export';\n$route['users/reset/(:num)'] = 'users/reset/$1';\n$route['users/create'] = 'users/create';\n$route['users/edit/(:num)'] = 'users/edit/$1';\n$route['users/check/login'] = 'users/checkLoginByAjax';\n$route['users/account']['POST'] = 'users/account';\n$route['users'] = 'users';\n\n//_______________________________________________\n//Human Resources Management\n$route['hr/employees'] = 'hr/employees';\n$route['hr/employees/entity/(:num)/(:any)/(:any)/(:any)/(:any)/(:any)/(:any)'] = 'hr/employeesOfEntity/$1/$2/$3/$4/$5/$6/$7';\n$route['hr/employees/export/(:num)/(:any)/(:any)/(:any)/(:any)/(:any)/(:any)'] = 'hr/exportEmployees/$1/$2/$3/$4/$5/$6/$7';\n$route['hr/employees/edit/manager'] = 'hr/editManager';\n$route['hr/employees/edit/entity'] = 'hr/editEntity';\n$route['hr/employees/edit/contract'] = 'hr/editContract';\n$route['hr/employees/edit/entitlements'] = 'hr/editEntitlements';\n$route['hr/employees/create/leave'] = 'hr/createLeaveRequest';\n$route['hr/leaves/(:num)'] = 'hr/leaves/$1';\n$route['hr/leaves/export/(:num)'] = 'hr/exportLeaves/$1';\n$route['hr/overtime/(:num)'] = 'hr/overtime/$1';\n$route['hr/counters/([^/]+)/(:num)'] = 'hr/counters/$1/$2';\n$route['hr/counters/([^/]+)/(:num)/(:num)'] = 'hr/counters/$1/$2/$3';\n$route['hr/overtime/export/(:num)'] = 'hr/exportOvertime/$1';\n$route['hr/entitleddays/(:num)'] = 'hr/entitleddays/$1';\n$route['hr/leaves/create/(:num)'] = 'hr/createleave/$1';\n$route['hr/presence/([^/]+)/(:num)'] = 'hr/presence/$1/$2';\n$route['hr/presence/([^/]+)/(:num)/(:num)/(:num)'] = 'hr/presence/$1/$2/$3/$4';\n$route['hr/presence/export/([^/]+)/(:num)/(:num)/(:num)'] = 'hr/exportPresence/$1/$2/$3/$4';\n$route['hr'] = 'hr/employees';\n\n//_______________________________________________\n//HR edit leave types\n$route['leavetypes/delete/(:num)'] = 'leavetypes/delete/$1';\n$route['leavetypes/edit/(:num)'] = 'leavetypes/edit/$1';\n$route['leavetypes/index'] = 'leavetypes/index';\n$route['leavetypes/create'] = 'leavetypes/create';\n$route['leavetypes/export'] = 'leavetypes/export';\n$route['leavetypes'] = 'leavetypes';\n\n//_______________________________________________\n//HR edit positions\n$route['positions/delete/(:num)'] = 'positions/delete/$1';\n$route['positions/edit/(:num)'] = 'positions/edit/$1';\n$route['positions/index'] = 'positions/index';\n$route['positions/select'] = 'positions/select';\n$route['positions/create'] = 'positions/create';\n$route['positions/export'] = 'positions/export';\n$route['positions'] = 'positions';\n\n//_______________________________________________\n//HR edit contracts\n$route['contracts/export'] = 'contracts/export';\n$route['contracts/create'] = 'contracts/create';\n$route['contracts/edit/(:num)'] = 'contracts/edit/$1';\n$route['contracts/update'] = 'contracts/update';\n$route['contracts/delete/(:num)'] = 'contracts/delete/$1';\n$route['contracts/(:num)/calendar/(:num)'] = 'contracts/calendar/$1/$2';\n$route['contracts/(:num)/calendar'] = 'contracts/calendar/$1';\n$route['contracts/(:num)/calendar/(:num)/copy/(:num)'] = 'contracts/copydayoff/$1/$3/$2';\n$route['contracts/(:num)/excludetypes'] = 'contracts/excludeTypes/$1';\n$route['contracts/(:num)/types/(:num)/include'] = 'contracts/includeTypeFromContract/$1/$2';\n$route['contracts/(:num)/types/(:num)/exclude'] = 'contracts/excludeTypeFromContract/$1/$2';\n$route['contracts/calendar/edit'] = 'contracts/editdayoff';\n$route['contracts/calendar/series'] = 'contracts/series';\n$route['contracts/calendar/import'] = 'contracts/import';\n$route['contracts/calendar/userdayoffs/(:num)'] = 'contracts/userDayoffs/$1';\n$route['contracts/calendar/userdayoffs'] = 'contracts/userDayoffs';\n$route['contracts/calendar/alldayoffs'] = 'contracts/allDayoffs';\n$route['contracts/calendar/alldayoffs/lists'] = 'contracts/allDayoffsForList';\n$route['contracts'] = 'contracts';\n\n//_______________________________________________\n//HR Organization\n$route['organization/select'] = 'organization/select';\n$route['organization/root'] = 'organization/root';\n$route['organization/delete'] = 'organization/delete';\n$route['organization/create'] = 'organization/create';\n$route['organization/rename'] = 'organization/rename';\n$route['organization/move'] = 'organization/move';\n$route['organization/copy'] = 'organization/copy';\n$route['organization/employees'] = 'organization/employees';\n$route['organization/addemployee'] = 'organization/addemployee';\n$route['organization/delemployee'] = 'organization/delemployee';\n$route['organization/getsupervisor'] = 'organization/getsupervisor';\n$route['organization/setsupervisor'] = 'organization/setsupervisor';\n$route['organization/lists'] = 'organization/listsIndex';\n$route['organization/lists/employees'] = 'organization/listsEmployees';\n$route['organization/lists/create'] = 'organization/listsCreate';\n$route['organization/lists/rename'] = 'organization/listsRename';\n$route['organization/lists/delete'] = 'organization/listsDelete';\n$route['organization/lists/addemployees'] = 'organization/listsAddEmployees';\n$route['organization/lists/removeemployees'] = 'organization/listsRemoveEmployees';\n$route['organization/lists/reorder'] = 'organization/listsReorder';\n$route['organization/lists/name'] = 'organization/listName';\n$route['organization'] = 'organization';\n\n//_______________________________________________\n//Various calendars\n$route['calendar/individual'] = 'calendar/individual';\n$route['calendar/workmates'] = 'calendar/workmates';\n$route['calendar/collaborators'] = 'calendar/collaborators';\n$route['calendar/organization'] = 'calendar/organization';\n$route['calendar/department'] = 'calendar/department';\n$route['calendar/tabular'] = 'calendar/tabular';\n$route['calendar/tabular/(:num)/(:num)/(:num)/(:any)/(:any)'] = 'calendar/tabular/$1/$2/$3/$4/$5';\n$route['calendar/tabular/partial/(:num)/(:num)/(:num)/(:any)/(:any)'] = 'calendar/tabularPartial/$1/$2/$3/$4/$5';\n$route['calendar/tabular/export/(:num)/(:num)/(:num)/(:any)/(:any)'] = 'calendar/exportTabular/$1/$2/$3/$4/$5';\n$route['calendar/tabular/list/partial/(:num)/(:num)/(:num)/(:any)'] = 'calendar/tabularPartialFromList/$1/$2/$3/$4';\n$route['calendar/tabular/list/export/(:num)/(:num)/(:num)/(:any)'] = 'calendar/exportTabularFromList/$1/$2/$3/$4';\n$route['calendar/year/(:num)/(:num)'] = 'calendar/year/$1/$2';\n$route['calendar/year/(:num)'] = 'calendar/year/$1';\n$route['calendar/year'] = 'calendar/year';\n$route['calendar/year/export/(:num)/(:num)'] = 'calendar/exportYear/$1/$2';\n$route['calendar'] = 'calendar/individual';\n\n//_______________________________________________\n//private Fullcalendar feeds\n$route['leaves/individual/(:num)'] = 'leaves/individual/$1';\n$route['leaves/individual'] = 'leaves/individual';\n$route['leaves/workmates'] = 'leaves/workmates';\n$route['leaves/department'] = 'leaves/department';\n$route['leaves/organization/(:num)'] = 'leaves/organization/$1';\n$route['leaves/list/(:num)'] = 'leaves/listEvents/$1';\n$route['leaves/collaborators'] = 'leaves/collaborators';\n$route['leaves/team'] = 'leaves/team';\n\n//_______________________________________________\n//public Fullcalendar feeds (available when public calendars are activated)\n$route['leaves/public/organization/(:num)'] = 'calendar/publicOrganization/$1';\n$route['contracts/public/calendar/alldayoffs'] = 'calendar/publicDayoffs';\n\n//_______________________________________________\n//Leave requests created by an employee\n$route['leaves/counters'] = 'leaves/counters';\n$route['leaves/counters/(:num)'] = 'leaves/counters/$1';\n$route['leaves/export'] = 'leaves/export';\n$route['leaves/create'] = 'leaves/create';\n$route['leaves/edit/(:num)'] = 'leaves/edit/$1';\n$route['leaves/request/(:num)'] = 'leaves/requestLeave/$1';\n$route['leaves/cancel/(:num)'] = 'leaves/cancel/$1';\n$route['leaves/update'] = 'leaves/update';\n$route['leaves/delete/(:num)'] = 'leaves/delete/$1';\n$route['leaves/(:num)/history'] = 'leaves/history/$1';\n$route['leaves/(:num)/comments/add'] = 'leaves/createComment/$1';\n$route['leaves/cancellation/(:num)'] = 'leaves/cancellation/$1';\n$route['leaves/reminder/(:num)'] = 'leaves/reminder/$1';\n$route['leaves/([^/]+)/(:num)'] = 'leaves/view/$1/$2';\n$route['leaves/validate'] = 'leaves/validate';\n$route['leaves'] = 'leaves';\n\n//_______________________________________________\n//leave requests (submitted to the line manager)\n$route['requests/collaborators'] = 'requests/collaborators';\n$route['requests/balance'] = 'requests/balance';\n$route['requests/balance/(:num)'] = 'requests/balance/$1';\n$route['requests/createleave/(:num)'] = 'requests/createleave/$1';\n$route['requests/counters/(:num)'] = 'requests/counters/$1';\n$route['requests/counters/(:num)/(:num)'] = 'requests/counters/$1/$2';\n$route['requests/export/(:any)'] = 'requests/export/$1';\n$route['requests/accept/(:num)'] = 'requests/accept/$1';\n$route['requests/reject/(:num)'] = 'requests/reject/$1';\n$route['requests/cancellation/accept/(:num)'] = 'requests/acceptCancellation/$1';\n$route['requests/cancellation/reject/(:num)'] = 'requests/rejectCancellation/$1';\n$route['requests/delegations/(:num)'] = 'requests/delegations/$1';\n$route['requests/delegations'] = 'requests/delegations';\n$route['requests/ajax/delegations/delete'] = 'requests/deleteDelegations';\n$route['requests/ajax/delegations/add'] = 'requests/addDelegations';\n$route['requests/(:any)'] = 'requests/index/$1';\n$route['requests'] = 'requests/index/requested';\n\n//_______________________________________________\n//overtime requests\n$route['extra/export'] = 'extra/export';\n$route['extra/create'] = 'extra/create';\n$route['extra/edit/(:num)'] = 'extra/edit/$1';\n$route['extra/delete/(:num)'] = 'extra/delete/$1';\n$route['extra/([^/]+)/(:num)'] = 'extra/view/$1/$2';\n$route['extra'] = 'extra';\n\n//_______________________________________________\n//overtime validation\n$route['overtime/export/(:any)'] = 'overtime/export/$1';\n$route['overtime/accept/(:num)'] = 'overtime/accept/$1';\n$route['overtime/reject/(:num)'] = 'overtime/reject/$1';\n$route['overtime/(:any)'] = 'overtime/index/$1';\n$route['overtime'] = 'overtime/index/requested';\n\n//_______________________________________________\n//Entitled days\n$route['entitleddays/user/(:num)'] = 'entitleddays/user/$1';\n$route['entitleddays/ajax/user'] = 'entitleddays/ajax_user';\n$route['entitleddays/userdelete/(:num)'] = 'entitleddays/userdelete/$1';\n$route['entitleddays/contract/(:num)'] = 'entitleddays/contract/$1';\n$route['entitleddays/ajax/contract'] = 'entitleddays/ajax_contract';\n$route['entitleddays/contractdelete/(:num)'] = 'entitleddays/contractdelete/$1';\n$route['entitleddays/ajax/update'] = 'entitleddays/ajax_update';\n\n//_______________________________________________\n//Reports\n$route['reports/balance'] = 'reports/balance';\n$route['reports/balance/execute'] = 'reports/executeBalanceReport';\n$route['reports/balance/export'] = 'reports/exportBalanceReport';\n$route['reports/leaves'] = 'reports/leaves';\n$route['reports/leaves/execute'] = 'reports/executeLeavesReport';\n$route['reports/leaves/export'] = 'reports/exportLeavesReport';\n$route['reports'] = 'reports';\n\n//_______________________________________________\n//HTTP API\n$route['api/doc'] = 'api/doc';\n$route['api/token'] = 'api/token';\n$route['api/contracts/(:num)'] = 'api/contracts/$1';\n$route['api/contracts/'] = 'api/contracts';\n$route['api/contracts'] = 'api/contracts';\n$route['api/entitleddayscontract/(:num)'] = 'api/entitleddayscontract/$1';\n$route['api/addentitleddayscontract/(:num)'] = 'api/addentitleddayscontract/$1';\n$route['api/entitleddaysemployee/(:num)'] = 'api/entitleddaysemployee/$1';\n$route['api/addentitleddaysemployee/(:num)'] = 'api/addentitleddaysemployee/$1';\n$route['api/leavessummary/(:num)/(:num)'] = 'api/leavessummary/$1/$2';\n$route['api/leavessummary/(:num)'] = 'api/leavessummary/$1';\n$route['api/leaves/(:any)/(:any)'] = 'api/leavesInRange/$1/$2';\n$route['api/leavetypes/'] = 'api/leavetypes';\n$route['api/leavetypes'] = 'api/leavetypes';\n$route['api/positions/'] = 'api/positions';\n$route['api/positions'] = 'api/positions';\n$route['api/userdepartment/(:num)'] = 'api/userdepartment/$1';\n$route['api/userextras/(:num)'] = 'api/userextras/$1';\n$route['api/userleaves/(:num)'] = 'api/userleaves/$1';\n$route['api/users/(:num)/leaves/'] = 'api/userleaves/$1';\n$route['api/users/(:num)']['GET'] = 'api/users/$1';\n$route['api/users/']['GET'] = 'api/users';\n$route['api/users'] = 'api/users';\n//v0.4.0\n$route['api/monthlypresence/(:num)/(:num)/(:num)'] = 'api/monthlypresence/$1/$2/$3';\n$route['api/deleteuser/(:num)'] = 'api/deleteuser/$1';\n$route['api/users/(:num)']['DELETE'] = 'api/deleteuser/$1';\n$route['api/updateuser/(:num)'] = 'api/updateuser/$1';\n$route['api/users/(:num)']['PATCH'] = 'api/updateuser/$1';\n$route['api/createuser/(:any)'] = 'api/createuser/$1';\n$route['api/createuser'] = 'api/createuser';\n$route['api/users/']['POST'] = 'api/createuser/$1';\n$route['api/users/(:any)']['POST'] = 'api/createuser/$1';\n$route['api/createleave'] = 'api/createleave';\n$route['api/leaves']['POST'] = 'api/createleave';\n$route['api/leaves/']['POST'] = 'api/createleave';\n//v0.4.3\n$route['api/getListOfEmployeesInEntity/(:num)/(:any)'] = 'api/getListOfEmployeesInEntity/$1/$2';\n//v0.4.4\n$route['api/acceptleaves/(:num)'] = 'api/acceptleave/$1';\n$route['api/acceptleave/(:num)'] = 'api/acceptleave/$1';\n$route['api/rejectleaves/(:num)'] = 'api/rejectleave/$1';\n$route['api/rejectleave/(:num)'] = 'api/rejectleave/$1';\n//v0.6.0\n$route['api/users/ext'] = 'api/usersExt';\n\n//_______________________________________________\n//ICS Feeds\n$route['ics/individual/(:num)'] = 'ics/individual/$1';\n$route['ics/dayoffs/(:num)/(:num)'] = 'ics/dayoffs/$1/$2';\n$route['ics/entity/(:num)/(:num)/(:any)'] = 'ics/entity/$1/$2/$3';\n$route['ics/collaborators/(:num)'] = 'ics/collaborators/$1';\n$route['ics/ical/(:num)'] = 'ics/ical/$1';\n\n//_______________________________________________\n//Session management\n$route['session/login'] = 'connection/login';\n$route['session/logout'] = 'connection/logout';\n$route['session/oauth2'] = 'connection/loginOAuth2';\n$route['session/language'] = 'connection/language';\n$route['session/forgetpassword'] = 'connection/forgetpassword';\n$route['api/metadata'] = 'connection/metadata';\n$route['api/acs'] = 'connection/acs';\n$route['api/slo'] = 'connection/slo';\n$route['api/sls'] = 'connection/sls';\n$route['api/sso'] = 'connection/sso';\n\n//_______________________________________________\n//Authorization endpoint\n$route['api/authorization/authorize'] = 'authorization/authorize';\n$route['api/authorization/login'] = 'authorization/login';\n$route['api/authorization/userinfo'] = 'authorization/userinfo';\n\n//_______________________________________________\n//REST API (for mobile/HTML Clients)\n$route['api/rest/self']['OPTIONS'] = 'Rest/options';\n$route['api/rest/self']['GET'] = 'Rest/self';\n$route['api/rest/profile']['OPTIONS'] = 'Rest/options';\n$route['api/rest/profile']['GET'] = 'Rest/profile';\n\n$route['api/rest/config']['OPTIONS'] = 'Rest/options';\n$route['api/rest/config']['GET'] = 'Rest/config';\n$route['api/rest/checksum/(:any)']['OPTIONS'] = 'Rest/options';\n$route['api/rest/checksum/(:any)']['GET'] = 'Rest/checksum/$1';\n$route['api/rest/checksum']['OPTIONS'] = 'Rest/options';\n$route['api/rest/checksum']['GET'] = 'Rest/checksum';\n$route['api/rest/submissions']['OPTIONS'] = 'Rest/options';\n$route['api/rest/submissions']['GET'] = 'Rest/submissions';\n\n$route['api/rest/leaves']['OPTIONS'] = 'RestLeaves/options';\n$route['api/rest/leaves']['GET'] = 'RestLeaves/leaves';\n$route['api/rest/leaves']['POST'] = 'RestLeaves/create';\n$route['api/rest/leaves/(:num)']['OPTIONS'] = 'RestLeaves/options';\n$route['api/rest/leaves/(:num)']['GET'] = 'RestLeaves/leaves/$1';\n$route['api/rest/leaves/(:num)']['PATCH'] = 'RestLeaves/edit/$1';\n$route['api/rest/leaves/(:num)']['DELETE'] = 'RestLeaves/delete/$1';\n\n$route['api/rest/requests']['OPTIONS'] = 'RestRequests/options';\n$route['api/rest/requests']['GET'] = 'RestRequests/requests';\n$route['api/rest/requests/(:any)']['OPTIONS'] = 'RestRequests/requests/$1';\n$route['api/rest/requests/(:any)']['GET'] = 'RestRequests/requests/$1';\n\n//User properties : is admin, is manager, id, id of manager, manager, contract..\n$route['api/rest/users/(:num)']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users/(:num)']['GET'] = 'RestUsers/users/$1';\n$route['api/rest/users']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users']['GET'] = 'RestUsers/users';\n\n$route['api/rest/users/(:num)/enable']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users/(:num)/enable']['GET'] = 'RestUsers/enable/$1';\n$route['api/rest/users/(:num)/disable']['OPTIONS'] = 'RestUsers/options';\n$route['api/rest/users/(:num)/disable']['GET'] = 'RestUsers/disable/$1';\n\n$route['api/rest/admin/logs/(:any)']['OPTIONS'] = 'RestAdmin/options';\n$route['api/rest/admin/logs/(:any)']['GET'] = 'RestAdmin/logs/$1';\n$route['api/rest/admin/logs']['OPTIONS'] = 'RestAdmin/options';\n$route['api/rest/admin/logs']['GET'] = 'RestAdmin/logs';\n\n//_______________________________________________\n//Default controllers\n$route['default_controller'] = 'leaves';\n$route['404_override'] = 'pages/notfound';\n$route['(:any)'] = 'pages/view/$1';\n", "<?php\n/**\n * This controller serves the user management pages and tools.\n * @copyright  Copyright (c) 2014-2019 Benjamin BALET\n * @license      http://opensource.org/licenses/AGPL-3.0 AGPL-3.0\n * @link            https://github.com/bbalet/jorani\n * @since         0.4.2\n */\n\nif (!defined('BASEPATH')) { exit('No direct script access allowed'); }\n\n/**\n * This controller serves the user management pages and tools.\n * The difference with HR Controller is that operations are technical (CRUD, etc.).\n */\nclass Users extends CI_Controller {\n\n    /**\n     * Default constructor\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function __construct() {\n        parent::__construct();\n        setUserContext($this);\n        $this->load->model('users_model');\n        $this->lang->load('users', $this->language);\n    }\n\n    /**\n     * Display the list of all users\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function index() {\n        $this->auth->checkIfOperationIsAllowed('list_users');\n        $data = getUserContext($this);\n        $this->load->helper('form');\n        $this->lang->load('datatable', $this->language);\n        $data['users'] = $this->users_model->getUsersAndRoles();\n        $data['title'] = lang('users_index_title');\n        $data['help'] = $this->help->create_help_link('global_link_doc_page_list_users');\n        $data['flash_partial_view'] = $this->load->view('templates/flash', $data, TRUE);\n        $this->load->view('templates/header', $data);\n        $this->load->view('menu/index', $data);\n        $this->load->view('users/index', $data);\n        $this->load->view('templates/footer');\n    }\n\n    /**\n     * Account management (activate/disable/delete) is done by a \n     * POST request with a CSRF token for an improved security\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function account() {\n        $this->auth->checkIfOperationIsAllowed('list_users');\n        $id = $this->input->post('id');\n        $operation = $this->input->post('operation');\n        //Test if user exists\n        $data['users_item'] = $this->users_model->getUsers($id);\n        if (empty($data['users_item'])) {\n            redirect('notfound');\n        } else {\n            switch ($operation) {\n                case 'enable': \n                    $this->users_model->setActive($id, TRUE);\n                    log_message('error', 'User #' . $id . ' has been enabled by user #' . $this->session->userdata('id'));\n                    break;\n                case 'disable':\n                    $this->users_model->setActive($id, FALSE);\n                    log_message('error', 'User #' . $id . ' has been disabled by user #' . $this->session->userdata('id'));\n                    break;\n                case 'delete':\n                    $this->auth->checkIfOperationIsAllowed('delete_user');\n                    $this->users_model->deleteUser($id);\n                    log_message('error', 'User #' . $id . ' has been deleted by user #' . $this->session->userdata('id'));\n            }\n        }\n    }\n\n    /**\n     * Display the modal pop-up content of the list of employees\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function employees() {\n        $this->auth->checkIfOperationIsAllowed('employees_list');\n        $data = getUserContext($this);\n        $this->lang->load('datatable', $this->language);\n        $data['employees'] = $this->users_model->getAllEmployees();\n        $data['title'] = lang('employees_index_title');\n        $this->load->view('users/employees', $data);\n    }\n\n    /**\n     * Display the modal pop-up content of the list of employees.\n     * The differences with the function employees are that multi select is\n     * allowed and the last column contains the name of the entity the employee\n     * belongs to.\n     * @see employees\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function employeesMultiSelect() {\n        $this->auth->checkIfOperationIsAllowed('employees_list');\n        $data = getUserContext($this);\n        $this->lang->load('datatable', $this->language);\n        $data['employees'] = $this->users_model->getAllEmployeesAndTheirEntities();\n        $data['title'] = lang('employees_index_title');\n        $this->load->view('users/multiselect', $data);\n    }\n\n    /**\n     * Display details of the connected user (contract, line manager, etc.)\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function myProfile() {\n        $this->auth->checkIfOperationIsAllowed('view_myprofile');\n        $this->load->library('polyglot');\n        $data = getUserContext($this);\n        $data['user'] = $this->users_model->getUsers($this->user_id);\n        if (empty($data['user'])) {\n            redirect('notfound');\n        }\n        $data['title'] = lang('users_myprofile_html_title');\n        $this->load->model('positions_model');\n        $this->load->model('contracts_model');\n        $this->load->model('organization_model');\n        $this->load->model('oauthclients_model');\n        $data['manager_label'] = $this->users_model->getName($data['user']['manager']);\n        $data['contract_id'] = intval($data['user']['contract']);\n        $data['contract_label'] = $this->contracts_model->getName($data['user']['contract']);\n        $data['position_label'] = $this->positions_model->getName($data['user']['position']);\n        $data['organization_label'] = $this->organization_model->getName($data['user']['organization']);\n        $data['apps'] = $this->oauthclients_model->listOAuthApps($this->user_id);\n        $this->load->view('templates/header', $data);\n        $this->load->view('menu/index', $data);\n        $this->load->view('users/myprofile', $data);\n        $this->load->view('templates/footer');\n    }\n\n    /**\n     * Display a for that allows updating a given user\n     * @param int $id User identifier\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function edit($id) {\n        $this->auth->checkIfOperationIsAllowed('edit_user');\n        $data = getUserContext($this);\n        $this->load->helper('form');\n        $this->load->library('form_validation');\n        $this->load->library('polyglot');\n        $data['title'] = lang('users_edit_html_title');\n        $data['help'] = $this->help->create_help_link('global_link_doc_page_create_user');\n\n        $this->form_validation->set_rules('firstname', lang('users_edit_field_firstname'), 'required|strip_tags');\n        $this->form_validation->set_rules('lastname', lang('users_edit_field_lastname'), 'required|strip_tags');\n        $this->form_validation->set_rules('login', lang('users_edit_field_login'), 'required|strip_tags');\n        $this->form_validation->set_rules('email', lang('users_edit_field_email'), 'required|strip_tags');\n        $this->form_validation->set_rules('role[]', lang('users_edit_field_role'), 'required');\n        $this->form_validation->set_rules('manager', lang('users_edit_field_manager'), 'required|strip_tags');\n        $this->form_validation->set_rules('contract', lang('users_edit_field_contract'), 'strip_tags');\n        $this->form_validation->set_rules('entity', lang('users_edit_field_entity'), 'strip_tags');\n        $this->form_validation->set_rules('position', lang('users_edit_field_position'), 'strip_tags');\n        $this->form_validation->set_rules('datehired', lang('users_edit_field_hired'), 'strip_tags');\n        $this->form_validation->set_rules('identifier', lang('users_edit_field_identifier'), 'strip_tags');\n        $this->form_validation->set_rules('language', lang('users_edit_field_language'), 'strip_tags');\n        $this->form_validation->set_rules('timezone', lang('users_edit_field_timezone'), 'strip_tags');\n        if ($this->config->item('ldap_basedn_db')) $this->form_validation->set_rules('ldap_path', lang('users_edit_field_ldap_path'), 'strip_tags');\n\n        $data['users_item'] = $this->users_model->getUsers($id);\n        if (empty($data['users_item'])) {\n            redirect('notfound');\n        }\n\n        if ($this->form_validation->run() === FALSE) {\n            $this->load->model('roles_model');\n            $this->load->model('positions_model');\n            $this->load->model('organization_model');\n            $this->load->model('contracts_model');\n            $data['contracts'] = $this->contracts_model->getContracts();\n            $data['manager_label'] = $this->users_model->getName($data['users_item']['manager']);\n            $data['position_label'] = $this->positions_model->getName($data['users_item']['position']);\n            $data['organization_label'] = $this->organization_model->getName($data['users_item']['organization']);\n            $data['roles'] = $this->roles_model->getRoles();\n            $this->load->view('templates/header', $data);\n            $this->load->view('menu/index', $data);\n            $this->load->view('users/edit', $data);\n            $this->load->view('templates/footer');\n        } else {\n            $this->users_model->updateUsers();\n            $this->session->set_flashdata('msg', lang('users_edit_flash_msg_success'));\n            if (isset($_GET['source'])) {\n                redirect($_GET['source']);\n            } else {\n                redirect('users');\n            }\n        }\n    }\n\n    /**\n     * Reset the password of a user\n     * Can be accessed by the user itself or by admin\n     * @param int $id User identifier\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function reset($id) {\n        $this->auth->checkIfOperationIsAllowed('change_password', $id);\n\n        //Test if user exists\n        $data['users_item'] = $this->users_model->getUsers($id);\n        if (empty($data['users_item'])) {\n            log_message('debug', '{controllers/users/reset} user not found');\n            redirect('notfound');\n        } else {\n            $data = getUserContext($this);\n            $data['target_user_id'] = $id;\n            $this->load->helper('form');\n            $this->load->library('form_validation');\n            $this->form_validation->set_rules('CipheredValue', 'Password', 'required');\n            if ($this->form_validation->run() === FALSE) {\n                $data['public_key'] = file_get_contents('./assets/keys/public.pem', TRUE);\n                $this->load->view('users/reset', $data);\n            } else {\n                $this->users_model->resetPassword($id, $this->input->post('CipheredValue'));\n\n                //Send an e-mail to the user so as to inform that its password has been changed\n                $user = $this->users_model->getUsers($id);\n                $this->load->library('email');\n                $this->load->library('polyglot');\n                $usr_lang = $this->polyglot->code2language($user['language']);\n                //We need to instance an different object as the languages of connected user may differ from the UI lang\n                $lang_mail = new CI_Lang();\n                $lang_mail->load('email', $usr_lang);\n\n                $this->load->library('parser');\n                $data = array(\n                    'Title' => $lang_mail->line('email_password_reset_title'),\n                    'Firstname' => $user['firstname'],\n                    'Lastname' => $user['lastname']\n                );\n                $message = $this->parser->parse('emails/' . $user['language'] . '/password_reset', $data, TRUE);\n                $this->email->set_encoding('quoted-printable');\n\n                if ($this->config->item('from_mail') != FALSE && $this->config->item('from_name') != FALSE ) {\n                    $this->email->from($this->config->item('from_mail'), $this->config->item('from_name'));\n                } else {\n                    $this->email->from('do.not@reply.me', 'LMS');\n                }\n                $this->email->to($user['email']);\n                if ($this->config->item('subject_prefix') != FALSE) {\n                    $subject = $this->config->item('subject_prefix');\n                } else {\n                   $subject = '[Jorani] ';\n                }\n                $this->email->subject($subject . $lang_mail->line('email_password_reset_subject'));\n                $this->email->message($message);\n                $this->email->send();\n\n                //Inform back the user by flash message\n                $this->session->set_flashdata('msg', lang('users_reset_flash_msg_success'));\n                if ($this->is_hr) {\n                    redirect('users');\n                }\n                else {\n                    redirect('home');\n                }\n            }\n        }\n    }\n\n    /**\n     * Display the form / action Create a new user\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function create() {\n        $this->auth->checkIfOperationIsAllowed('create_user');\n        $data = getUserContext($this);\n        $this->load->helper('form');\n        $this->load->library('form_validation');\n        $this->load->library('polyglot');\n        $data['title'] = lang('users_create_title');\n        $data['help'] = $this->help->create_help_link('global_link_doc_page_create_user');\n\n        $this->load->model('roles_model');\n        $data['roles'] = $this->roles_model->getRoles();\n        $this->load->model('contracts_model');\n        $data['contracts'] = $this->contracts_model->getContracts();\n        $data['public_key'] = file_get_contents('./assets/keys/public.pem', TRUE);\n\n        $this->form_validation->set_rules('firstname', lang('users_create_field_firstname'), 'required|strip_tags');\n        $this->form_validation->set_rules('lastname', lang('users_create_field_lastname'), 'required|strip_tags');\n        $this->form_validation->set_rules('login', lang('users_create_field_login'), 'required|callback_checkLogin|strip_tags');\n        $this->form_validation->set_rules('email', lang('users_create_field_email'), 'required|strip_tags');\n        if (!$this->config->item('ldap_enabled')) $this->form_validation->set_rules('CipheredValue', lang('users_create_field_password'), 'required');\n        $this->form_validation->set_rules('role[]', lang('users_create_field_role'), 'required');\n        $this->form_validation->set_rules('manager', lang('users_create_field_manager'), 'required|strip_tags');\n        $this->form_validation->set_rules('contract', lang('users_create_field_contract'), 'strip_tags');\n        $this->form_validation->set_rules('position', lang('users_create_field_position'), 'strip_tags');\n        $this->form_validation->set_rules('entity', lang('users_create_field_entity'), 'strip_tags');\n        $this->form_validation->set_rules('datehired', lang('users_create_field_hired'), 'strip_tags');\n        $this->form_validation->set_rules('identifier', lang('users_create_field_identifier'), 'strip_tags');\n        $this->form_validation->set_rules('language', lang('users_create_field_language'), 'strip_tags');\n        $this->form_validation->set_rules('timezone', lang('users_create_field_timezone'), 'strip_tags');\n        if ($this->config->item('ldap_basedn_db')) $this->form_validation->set_rules('ldap_path', lang('users_create_field_ldap_path'), 'strip_tags');\n\n        if ($this->form_validation->run() === FALSE) {\n            $this->load->view('templates/header', $data);\n            $this->load->view('menu/index', $data);\n            $this->load->view('users/create', $data);\n            $this->load->view('templates/footer');\n        } else {\n            $password = $this->users_model->setUsers();\n\n            //Send an e-mail to the user so as to inform that its account has been created\n            $this->load->library('email');\n            $usr_lang = $this->polyglot->code2language($this->input->post('language'));\n            //We need to instance an different object as the languages of connected user may differ from the UI lang\n            $lang_mail = new CI_Lang();\n            $lang_mail->load('email', $usr_lang);\n\n            $this->load->library('parser');\n            $data = array(\n                'Title' => $lang_mail->line('email_user_create_title'),\n                'BaseURL' => base_url(),\n                'Firstname' => $this->input->post('firstname'),\n                'Lastname' => $this->input->post('lastname'),\n                'Login' => $this->input->post('login'),\n                'Password' => $password\n            );\n            $message = $this->parser->parse('emails/' . $this->input->post('language') . '/new_user', $data, TRUE);\n            $this->email->set_encoding('quoted-printable');\n\n            if ($this->config->item('from_mail') != FALSE && $this->config->item('from_name') != FALSE ) {\n                $this->email->from($this->config->item('from_mail'), $this->config->item('from_name'));\n            } else {\n               $this->email->from('do.not@reply.me', 'LMS');\n            }\n            $this->email->to($this->input->post('email'));\n            if ($this->config->item('subject_prefix') != FALSE) {\n                $subject = $this->config->item('subject_prefix');\n            } else {\n               $subject = '[Jorani] ';\n            }\n            $this->email->subject($subject . $lang_mail->line('email_user_create_subject'));\n            $this->email->message($message);\n            $this->email->send();\n\n            $this->session->set_flashdata('msg', lang('users_create_flash_msg_success'));\n            redirect('users');\n        }\n    }\n\n    /**\n     * Form validation callback : prevent from login duplication\n     * @param string $login Login\n     * @return boolean TRUE if the field is valid, FALSE otherwise\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function checkLogin($login) {\n        if (!$this->users_model->isLoginAvailable($login)) {\n            $this->form_validation->set_message('checkLogin', lang('users_create_checkLogin'));\n            return FALSE;\n        } else {\n            return TRUE;\n        }\n    }\n\n    /**\n     * Ajax endpoint : check login duplication\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function checkLoginByAjax() {\n        $this->output->set_content_type('text/plain');\n        if ($this->users_model->isLoginAvailable($this->input->post('login'))) {\n            $this->output->set_output('true');\n        } else {\n            $this->output->set_output('false');\n        }\n    }\n\n    /**\n     * Action: export the list of all users into an Excel file\n     * @author Benjamin BALET <benjamin.balet@gmail.com>\n     */\n    public function export() {\n        $this->auth->checkIfOperationIsAllowed('export_user');\n        $this->load->view('users/export');\n    }\n}\n", "<?php\n/**\n * This view displays the list of users.\n * @copyright  Copyright (c) 2014-2019 Benjamin BALET\n * @license    http://opensource.org/licenses/AGPL-3.0 AGPL-3.0\n * @link       https://github.com/bbalet/jorani\n * @since      0.1.0\n */\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n\n<h2><?php echo lang('users_index_title');?><?php echo $help;?></h2>\n\n<?php echo $flash_partial_view;?>\n\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" class=\"display\" id=\"users\" width=\"100%\">\n    <thead>\n        <tr>\n            <th><?php echo lang('users_index_thead_id');?></th>\n            <th><?php echo lang('users_index_thead_firstname');?></th>\n            <th><?php echo lang('users_index_thead_lastname');?></th>\n            <th><?php echo lang('users_index_thead_login');?></th>\n            <th><?php echo lang('users_index_thead_email');?></th>\n            <th><?php echo lang('users_index_thead_role');?></th>\n        </tr>\n    </thead>\n    <tbody>\n<?php foreach ($users as $users_item): ?>\n    <tr data-id=\"<?php echo $users_item['id']; ?>\">\n        <td data-order=\"<?php echo $users_item['id']; ?>\">\n            <?php echo $users_item['id'] ?>&nbsp;\n            <div class=\"pull-right\">\n            <?php if ($users_item['id'] != $this->session->userdata('id')) { ?>\n                <?php if ($users_item['active']) { ?>\n                <a href=\"#\" class=\"action-disable\" data-id=\"<?php echo $users_item['id'];?>\" title=\"<?php echo lang('users_index_thead_tip_active');?>\"><i class=\"mdi mdi-account-off nolink\"></i></a>\n                <?php } else { ?>\n                <a href=\"#\" class=\"action-enable\" data-id=\"<?php echo $users_item['id'];?>\" title=\"<?php echo lang('users_index_thead_tip_inactive');?>\"><i class=\"mdi mdi-account mdi-dark mdi-inactive\"></i></a>\n                <?php } ?>\n            <?php } ?>\n                &nbsp;\n                <a href=\"<?php echo base_url();?>users/edit/<?php echo $users_item['id'] ?>\" title=\"<?php echo lang('users_index_thead_tip_edit');?>\"><i class=\"mdi mdi-account-edit nolink\"></i></a>\n                &nbsp;\n                <?php if ($users_item['id'] != $this->session->userdata('id')) { ?>\n                <a href=\"#\" class=\"confirm-delete\" data-id=\"<?php echo $users_item['id'];?>\" title=\"<?php echo lang('users_index_thead_tip_delete');?>\"><i class=\"mdi mdi-delete nolink\"></i></a>\n                &nbsp;\n                <?php } ?>\n                <a href=\"<?php echo base_url();?>users/reset/<?php echo $users_item['id'] ?>\" title=\"<?php echo lang('users_index_thead_tip_reset');?>\" data-target=\"#frmResetPwd\" data-toggle=\"modal\"><i class=\"mdi mdi-lock nolink\"></i></a>\n            </div>\n        </td>\n        <td><?php echo $users_item['firstname']; ?></td>\n        <td><?php echo $users_item['lastname']; ?></td>\n        <td><?php echo $users_item['login']; ?></td>\n        <td><a href=\"mailto:<?php echo $users_item['email']; ?>\"><?php echo $users_item['email']; ?></a></td>\n        <td><?php echo $users_item['roles_list']; ?></td>\n    </tr>\n<?php endforeach ?>\n            </tbody>\n        </table>\n    </div>\n</div>\n\n<div class=\"row-fluid\"><div class=\"span12\">&nbsp;</div></div>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n      <a href=\"<?php echo base_url();?>users/export\" class=\"btn btn-primary\"><i class=\"mdi mdi-download\"></i>&nbsp;<?php echo lang('users_index_button_export');?></a>\n      &nbsp;\n      <a href=\"<?php echo base_url();?>users/create\" class=\"btn btn-primary\"><i class=\"mdi mdi-account-plus\"></i>&nbsp;<?php echo lang('users_index_button_create_user');?></a>\n    </div>\n</div>\n\n<div class=\"row-fluid\"><div class=\"span12\">&nbsp;</div></div>\n\n<div id=\"frmConfirmDelete\" class=\"modal hide fade\">\n    <div class=\"modal-header\">\n        <a href=\"#\" onclick=\"$('#frmConfirmDelete').modal('hide');\" class=\"close\">&times;</a>\n         <h3><?php echo lang('users_index_popup_delete_title');?></h3>\n    </div>\n    <div class=\"modal-body\">\n        <p><?php echo lang('users_index_popup_delete_message');?></p>\n        <p><?php echo lang('users_index_popup_delete_question');?></p>\n    </div>\n    <div class=\"modal-footer\">\n        <a href=\"#\" class=\"btn btn-danger\" id=\"action-delete\"><?php echo lang('users_index_popup_delete_button_yes');?></a>\n        <a href=\"#\" onclick=\"$('#frmConfirmDelete').modal('hide');\" class=\"btn\"><?php echo lang('users_index_popup_delete_button_no');?></a>\n    </div>\n</div>\n\n<div id=\"frmResetPwd\" class=\"modal hide fade\">\n    <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n         <h3><?php echo lang('users_index_popup_password_title');?></h3>\n    </div>\n    <div class=\"modal-body\">\n        <img src=\"<?php echo base_url();?>assets/images/loading.gif\">\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" data-dismiss=\"modal\"><?php echo lang('users_index_popup_password_button_cancel');?></button>\n    </div>\n</div>\n\n<div id=\"frmImportUsers\" class=\"modal hide fade\">\n\n    <div class=\"modal-header\">\n        <a href=\"#\" onclick=\"$('#frmImportUsers').modal('hide');\" class=\"close\">&times;</a>\n         <h3><?php echo lang('users_index_popup_import_title');?></h3>\n    </div>\n    <div class=\"modal-body\">\n        <?php echo form_open_multipart('users/import');?>\n            <label for=\"importFile\"><?php echo lang('users_index_popup_field_filename');?>\n            <input type=\"file\" name=\"importFile\" size=\"20\" />\n            </label>\n            <input class=\"btn btn-primary\" type=\"submit\" value=\"<?php echo lang('OK');?>\" />\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <a href=\"#\" onclick=\"$('#frmImportUsers').modal('hide');\" class=\"btn btn-danger\"><?php echo lang('Cancel');?></a>\n    </div>\n\n</div>\n\n<link href=\"<?php echo base_url();?>assets/datatable/DataTables-1.10.11/css/jquery.dataTables.min.css\" rel=\"stylesheet\">\n<script type=\"text/javascript\" src=\"<?php echo base_url();?>assets/datatable/DataTables-1.10.11/js/jquery.dataTables.min.js\"></script>\n<script src=\"<?php echo base_url();?>assets/js/bootbox.min.js\"></script>\n\n<script type=\"text/javascript\">\n$(document).ready(function() {\n\n    <?php if ($this->config->item('csrf_protection') == TRUE) {?>\n    $.ajaxSetup({\n        data: {\n            <?php echo $this->security->get_csrf_token_name();?>: \"<?php echo $this->security->get_csrf_hash();?>\",\n        }\n    });\n    <?php }?>\n\n    //Global Ajax error handling mainly used for session expiration\n    $( document ).ajaxError(function(event, jqXHR, settings, errorThrown) {\n        $('#frmModalAjaxWait').modal('hide');\n        if (jqXHR.status == 401) {\n            bootbox.alert(\"<?php echo lang('global_ajax_timeout');?>\", function() {\n                //After the login page, we'll be redirected to the current page\n                location.reload();\n            });\n        } else { //Oups\n            bootbox.alert(\"<?php echo lang('global_ajax_error');?>\");\n        }\n    });\n\n    //Transform the HTML table in a fancy datatable\n    oTable = $('#users').DataTable({\n        stateSave: true,\n        language: {\n            decimal:            \"<?php echo lang('datatable_sInfoThousands');?>\",\n            processing:       \"<?php echo lang('datatable_sProcessing');?>\",\n            search:              \"<?php echo lang('datatable_sSearch');?>\",\n            lengthMenu:     \"<?php echo lang('datatable_sLengthMenu');?>\",\n            info:                   \"<?php echo lang('datatable_sInfo');?>\",\n            infoEmpty:          \"<?php echo lang('datatable_sInfoEmpty');?>\",\n            infoFiltered:       \"<?php echo lang('datatable_sInfoFiltered');?>\",\n            infoPostFix:        \"<?php echo lang('datatable_sInfoPostFix');?>\",\n            loadingRecords: \"<?php echo lang('datatable_sLoadingRecords');?>\",\n            zeroRecords:    \"<?php echo lang('datatable_sZeroRecords');?>\",\n            emptyTable:     \"<?php echo lang('datatable_sEmptyTable');?>\",\n            paginate: {\n                first:          \"<?php echo lang('datatable_sFirst');?>\",\n                previous:   \"<?php echo lang('datatable_sPrevious');?>\",\n                next:           \"<?php echo lang('datatable_sNext');?>\",\n                last:           \"<?php echo lang('datatable_sLast');?>\"\n            },\n            aria: {\n                sortAscending:  \"<?php echo lang('datatable_sSortAscending');?>\",\n                sortDescending: \"<?php echo lang('datatable_sSortDescending');?>\"\n            }\n        },\n    });\n    $(\"#frmResetPwd\").alert();\n    $(\"#frmImportUsers\").alert();\n\n    //On showing the confirmation pop-up, add the user id as an attribute of the delete url link\n    $('#frmConfirmDelete').on('show', function() {\n        $(\"#action-delete\").attr('data-id', $(this).data('id'));\n    });\n\n    //Display a modal pop-up so as to confirm if a user has to be deleted or not\n    //We build a complex selector because datatable does horrible things on DOM...\n    //a simplier selector doesn't work when the delete is on page >1\n    $(\"#users tbody\").on('click', '.confirm-delete',  function(){\n        var id = $(this).data('id');\n        $('#frmConfirmDelete').data('id', id).modal('show');\n    });\n\n    //Enable a user\n    $(\"#users tbody\").on('click', '.action-enable',  function(){\n        var id = $(this).data('id');\n        var ref = $(this);\n        $.post( \"<?php echo base_url();?>users/account\", { operation: \"enable\", id: id }).done(function() {\n            ref.attr('class', 'action-disable');\n            ref.attr('title', '<?php echo lang('users_index_thead_tip_active');?>');\n            ref.children(\":first\").attr('class', 'mdi mdi-account-off nolink');\n        });\n    });\n\n    //Disable a user\n    $(\"#users tbody\").on('click', '.action-disable',  function(){\n        var id = $(this).data('id');\n        var ref = $(this);\n        $.post( \"<?php echo base_url();?>users/account\", { operation: \"disable\", id: id }).done(function() {\n            ref.attr('class', 'action-enable');\n            ref.attr('title', '<?php echo lang('users_index_thead_tip_inactive');?>');\n            ref.children(\":first\").attr('class', 'mdi mdi-account mdi-dark mdi-inactive');\n        });\n    });\n\n    //Delete a user\n    $(\"#action-delete\").on('click',  function(){\n        var id = $(this).data('id');\n        $.post( \"<?php echo base_url();?>users/account\", { operation: \"delete\", id: id }).done(function() {\n            oTable.rows('tr[data-id=\"' + id + '\"]').remove().draw();\n            $('#frmConfirmDelete').modal('hide');\n        });\n    });\n\n    //Prevent to load always the same content (refreshed each time)\n    $('#frmConfirmDelete').on('hidden', function() {\n        $(this).removeData('modal');\n    });\n    $('#frmResetPwd').on('hidden', function() {\n        $(this).removeData('modal');\n    });\n});\n</script>\n"], "filenames": ["application/config/routes.php", "application/controllers/Users.php", "application/views/users/index.php"], "buggy_code_start_loc": [61, 49, 31], "buggy_code_end_loc": [65, 217, 168], "fixing_code_start_loc": [60, 49, 31], "fixing_code_end_loc": [63, 197, 226], "type": "CWE-352", "message": "Benjamin BALET Jorani v1.0 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /application/controllers/Users.php.", "other": {"cve": {"id": "CVE-2022-34134", "sourceIdentifier": "cve@mitre.org", "published": "2022-06-28T00:15:08.407", "lastModified": "2022-07-06T18:55:09.587", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Benjamin BALET Jorani v1.0 was discovered to contain a Cross-Site Request Forgery (CSRF) via the component /application/controllers/Users.php."}, {"lang": "es", "value": "Se ha detectado que Benjamin BALET Jorani versi\u00f3n v1.0, contiene una vulnerabilidad de tipo Cross-Site Request Forgery (CSRF) por medio del componente /application/controllers/Users.php"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jorani_project:jorani:1.0.0:*:*:*:*:*:*:*", "matchCriteriaId": "00665EA7-7D22-4226-801E-ABA4BD94D0D7"}]}]}], "references": [{"url": "https://github.com/bbalet/jorani/commit/299b5a3a66add4ac643e3ba78ada4d9637c8baff", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/bbalet/jorani/issues/369", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/bbalet/jorani/commit/299b5a3a66add4ac643e3ba78ada4d9637c8baff"}}