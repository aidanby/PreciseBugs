{"buggy_code": ["<template>\n<MkModal ref=\"modal\" @click=\"done(true)\" @closed=\"$emit('closed')\">\n\t<div class=\"mk-dialog\">\n\t\t<div class=\"icon\" v-if=\"icon\">\n\t\t\t<Fa :icon=\"icon\"/>\n\t\t</div>\n\t\t<div class=\"icon\" v-else-if=\"!input && !select\" :class=\"type\">\n\t\t\t<Fa :icon=\"faCheck\" v-if=\"type === 'success'\"/>\n\t\t\t<Fa :icon=\"faTimesCircle\" v-if=\"type === 'error'\"/>\n\t\t\t<Fa :icon=\"faExclamationTriangle\" v-if=\"type === 'warning'\"/>\n\t\t\t<Fa :icon=\"faInfoCircle\" v-if=\"type === 'info'\"/>\n\t\t\t<Fa :icon=\"faQuestionCircle\" v-if=\"type === 'question'\"/>\n\t\t\t<Fa :icon=\"faSpinner\" pulse v-if=\"type === 'waiting'\"/>\n\t\t</div>\n\t\t<header v-if=\"title\" v-html=\"title\"></header>\n\t\t<div class=\"body\" v-if=\"text\" v-html=\"text\"></div>\n\t\t<MkInput v-if=\"input\" v-model:value=\"inputValue\" autofocus :type=\"input.type || 'text'\" :placeholder=\"input.placeholder\" @keydown=\"onInputKeydown\"></MkInput>\n\t\t<MkSelect v-if=\"select\" v-model:value=\"selectedValue\" autofocus>\n\t\t\t<template v-if=\"select.items\">\n\t\t\t\t<option v-for=\"item in select.items\" :value=\"item.value\">{{ item.text }}</option>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<optgroup v-for=\"groupedItem in select.groupedItems\" :label=\"groupedItem.label\">\n\t\t\t\t\t<option v-for=\"item in groupedItem.items\" :value=\"item.value\">{{ item.text }}</option>\n\t\t\t\t</optgroup>\n\t\t\t</template>\n\t\t</MkSelect>\n\t\t<div class=\"buttons\" v-if=\"(showOkButton || showCancelButton) && !actions\">\n\t\t\t<MkButton inline @click=\"ok\" v-if=\"showOkButton\" primary :autofocus=\"!input && !select\">{{ (showCancelButton || input || select) ? $t('ok') : $t('gotIt') }}</MkButton>\n\t\t\t<MkButton inline @click=\"cancel\" v-if=\"showCancelButton || input || select\">{{ $t('cancel') }}</MkButton>\n\t\t</div>\n\t\t<div class=\"buttons\" v-if=\"actions\">\n\t\t\t<MkButton v-for=\"action in actions\" inline @click=\"() => { action.callback(); close(); }\" :primary=\"action.primary\" :key=\"action.text\">{{ action.text }}</MkButton>\n\t\t</div>\n\t</div>\n</MkModal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { faSpinner, faInfoCircle, faExclamationTriangle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTimesCircle, faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\nimport MkModal from '@/components/ui/modal.vue';\nimport MkButton from '@/components/ui/button.vue';\nimport MkInput from '@/components/ui/input.vue';\nimport MkSelect from '@/components/ui/select.vue';\n\nexport default defineComponent({\n\tcomponents: {\n\t\tMkModal,\n\t\tMkButton,\n\t\tMkInput,\n\t\tMkSelect,\n\t},\n\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: 'info'\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tinput: {\n\t\t\trequired: false\n\t\t},\n\t\tselect: {\n\t\t\trequired: false\n\t\t},\n\t\ticon: {\n\t\t\trequired: false\n\t\t},\n\t\tactions: {\n\t\t\trequired: false\n\t\t},\n\t\tshowOkButton: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tshowCancelButton: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tcancelableByBgClick: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t},\n\n\temits: ['done', 'closed'],\n\n\tdata() {\n\t\treturn {\n\t\t\tinputValue: this.input && this.input.default ? this.input.default : null,\n\t\t\tselectedValue: this.select ? this.select.default ? this.select.default : this.select.items ? this.select.items[0].value : this.select.groupedItems[0].items[0].value : null,\n\t\t\tfaTimesCircle, faQuestionCircle, faSpinner, faInfoCircle, faExclamationTriangle, faCheck\n\t\t};\n\t},\n\n\tmounted() {\n\t\tdocument.addEventListener('keydown', this.onKeydown);\n\t},\n\n\tbeforeUnmount() {\n\t\tdocument.removeEventListener('keydown', this.onKeydown);\n\t},\n\n\tmethods: {\n\t\tdone(canceled, result?) {\n\t\t\tthis.$emit('done', { canceled, result });\n\t\t\tthis.$refs.modal.close();\n\t\t},\n\n\t\tasync ok() {\n\t\t\tif (!this.showOkButton) return;\n\n\t\t\tconst result =\n\t\t\t\tthis.input ? this.inputValue :\n\t\t\t\tthis.select ? this.selectedValue :\n\t\t\t\ttrue;\n\t\t\tthis.done(false, result);\n\t\t},\n\n\t\tcancel() {\n\t\t\tthis.done(true);\n\t\t},\n\n\t\tonBgClick() {\n\t\t\tif (this.cancelableByBgClick) {\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t},\n\n\t\tonKeydown(e) {\n\t\t\tif (e.which === 27) { // ESC\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t},\n\n\t\tonInputKeydown(e) {\n\t\t\tif (e.which === 13) { // Enter\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.ok();\n\t\t\t}\n\t\t}\n\t}\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.mk-dialog {\n\tposition: relative;\n\tpadding: 32px;\n\tmin-width: 320px;\n\tmax-width: 480px;\n\tbox-sizing: border-box;\n\ttext-align: center;\n\tbackground: var(--panel);\n\tborder-radius: var(--radius);\n\n\t> .icon {\n\t\tfont-size: 32px;\n\n\t\t&.success {\n\t\t\tcolor: var(--accent);\n\t\t}\n\n\t\t&.error {\n\t\t\tcolor: #ec4137;\n\t\t}\n\n\t\t&.warning {\n\t\t\tcolor: #ecb637;\n\t\t}\n\n\t\t> * {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 auto;\n\t\t}\n\n\t\t& + header {\n\t\t\tmargin-top: 16px;\n\t\t}\n\t}\n\n\t> header {\n\t\tmargin: 0 0 8px 0;\n\t\tfont-weight: bold;\n\t\tfont-size: 20px;\n\n\t\t& + .body {\n\t\t\tmargin-top: 8px;\n\t\t}\n\t}\n\n\t> .body {\n\t\tmargin: 16px 0 0 0;\n\t}\n\n\t> .buttons {\n\t\tmargin-top: 16px;\n\n\t\t> * {\n\t\t\tmargin: 0 8px;\n\t\t}\n\t}\n}\n</style>\n"], "fixing_code": ["<template>\n<MkModal ref=\"modal\" @click=\"done(true)\" @closed=\"$emit('closed')\">\n\t<div class=\"mk-dialog\">\n\t\t<div class=\"icon\" v-if=\"icon\">\n\t\t\t<Fa :icon=\"icon\"/>\n\t\t</div>\n\t\t<div class=\"icon\" v-else-if=\"!input && !select\" :class=\"type\">\n\t\t\t<Fa :icon=\"faCheck\" v-if=\"type === 'success'\"/>\n\t\t\t<Fa :icon=\"faTimesCircle\" v-if=\"type === 'error'\"/>\n\t\t\t<Fa :icon=\"faExclamationTriangle\" v-if=\"type === 'warning'\"/>\n\t\t\t<Fa :icon=\"faInfoCircle\" v-if=\"type === 'info'\"/>\n\t\t\t<Fa :icon=\"faQuestionCircle\" v-if=\"type === 'question'\"/>\n\t\t\t<Fa :icon=\"faSpinner\" pulse v-if=\"type === 'waiting'\"/>\n\t\t</div>\n\t\t<header v-if=\"title\"><Mfm :text=\"title\"/></header>\n\t\t<div class=\"body\" v-if=\"text\"><Mfm :text=\"text\"/></div>\n\t\t<MkInput v-if=\"input\" v-model:value=\"inputValue\" autofocus :type=\"input.type || 'text'\" :placeholder=\"input.placeholder\" @keydown=\"onInputKeydown\"></MkInput>\n\t\t<MkSelect v-if=\"select\" v-model:value=\"selectedValue\" autofocus>\n\t\t\t<template v-if=\"select.items\">\n\t\t\t\t<option v-for=\"item in select.items\" :value=\"item.value\">{{ item.text }}</option>\n\t\t\t</template>\n\t\t\t<template v-else>\n\t\t\t\t<optgroup v-for=\"groupedItem in select.groupedItems\" :label=\"groupedItem.label\">\n\t\t\t\t\t<option v-for=\"item in groupedItem.items\" :value=\"item.value\">{{ item.text }}</option>\n\t\t\t\t</optgroup>\n\t\t\t</template>\n\t\t</MkSelect>\n\t\t<div class=\"buttons\" v-if=\"(showOkButton || showCancelButton) && !actions\">\n\t\t\t<MkButton inline @click=\"ok\" v-if=\"showOkButton\" primary :autofocus=\"!input && !select\">{{ (showCancelButton || input || select) ? $t('ok') : $t('gotIt') }}</MkButton>\n\t\t\t<MkButton inline @click=\"cancel\" v-if=\"showCancelButton || input || select\">{{ $t('cancel') }}</MkButton>\n\t\t</div>\n\t\t<div class=\"buttons\" v-if=\"actions\">\n\t\t\t<MkButton v-for=\"action in actions\" inline @click=\"() => { action.callback(); close(); }\" :primary=\"action.primary\" :key=\"action.text\">{{ action.text }}</MkButton>\n\t\t</div>\n\t</div>\n</MkModal>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { faSpinner, faInfoCircle, faExclamationTriangle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTimesCircle, faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\nimport MkModal from '@/components/ui/modal.vue';\nimport MkButton from '@/components/ui/button.vue';\nimport MkInput from '@/components/ui/input.vue';\nimport MkSelect from '@/components/ui/select.vue';\n\nexport default defineComponent({\n\tcomponents: {\n\t\tMkModal,\n\t\tMkButton,\n\t\tMkInput,\n\t\tMkSelect,\n\t},\n\n\tprops: {\n\t\ttype: {\n\t\t\ttype: String,\n\t\t\trequired: false,\n\t\t\tdefault: 'info'\n\t\t},\n\t\ttitle: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\ttext: {\n\t\t\ttype: String,\n\t\t\trequired: false\n\t\t},\n\t\tinput: {\n\t\t\trequired: false\n\t\t},\n\t\tselect: {\n\t\t\trequired: false\n\t\t},\n\t\ticon: {\n\t\t\trequired: false\n\t\t},\n\t\tactions: {\n\t\t\trequired: false\n\t\t},\n\t\tshowOkButton: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t\tshowCancelButton: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\t\tcancelableByBgClick: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: true\n\t\t},\n\t},\n\n\temits: ['done', 'closed'],\n\n\tdata() {\n\t\treturn {\n\t\t\tinputValue: this.input && this.input.default ? this.input.default : null,\n\t\t\tselectedValue: this.select ? this.select.default ? this.select.default : this.select.items ? this.select.items[0].value : this.select.groupedItems[0].items[0].value : null,\n\t\t\tfaTimesCircle, faQuestionCircle, faSpinner, faInfoCircle, faExclamationTriangle, faCheck\n\t\t};\n\t},\n\n\tmounted() {\n\t\tdocument.addEventListener('keydown', this.onKeydown);\n\t},\n\n\tbeforeUnmount() {\n\t\tdocument.removeEventListener('keydown', this.onKeydown);\n\t},\n\n\tmethods: {\n\t\tdone(canceled, result?) {\n\t\t\tthis.$emit('done', { canceled, result });\n\t\t\tthis.$refs.modal.close();\n\t\t},\n\n\t\tasync ok() {\n\t\t\tif (!this.showOkButton) return;\n\n\t\t\tconst result =\n\t\t\t\tthis.input ? this.inputValue :\n\t\t\t\tthis.select ? this.selectedValue :\n\t\t\t\ttrue;\n\t\t\tthis.done(false, result);\n\t\t},\n\n\t\tcancel() {\n\t\t\tthis.done(true);\n\t\t},\n\n\t\tonBgClick() {\n\t\t\tif (this.cancelableByBgClick) {\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t},\n\n\t\tonKeydown(e) {\n\t\t\tif (e.which === 27) { // ESC\n\t\t\t\tthis.cancel();\n\t\t\t}\n\t\t},\n\n\t\tonInputKeydown(e) {\n\t\t\tif (e.which === 13) { // Enter\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.ok();\n\t\t\t}\n\t\t}\n\t}\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.mk-dialog {\n\tposition: relative;\n\tpadding: 32px;\n\tmin-width: 320px;\n\tmax-width: 480px;\n\tbox-sizing: border-box;\n\ttext-align: center;\n\tbackground: var(--panel);\n\tborder-radius: var(--radius);\n\n\t> .icon {\n\t\tfont-size: 32px;\n\n\t\t&.success {\n\t\t\tcolor: var(--accent);\n\t\t}\n\n\t\t&.error {\n\t\t\tcolor: #ec4137;\n\t\t}\n\n\t\t&.warning {\n\t\t\tcolor: #ecb637;\n\t\t}\n\n\t\t> * {\n\t\t\tdisplay: block;\n\t\t\tmargin: 0 auto;\n\t\t}\n\n\t\t& + header {\n\t\t\tmargin-top: 16px;\n\t\t}\n\t}\n\n\t> header {\n\t\tmargin: 0 0 8px 0;\n\t\tfont-weight: bold;\n\t\tfont-size: 20px;\n\n\t\t& + .body {\n\t\t\tmargin-top: 8px;\n\t\t}\n\t}\n\n\t> .body {\n\t\tmargin: 16px 0 0 0;\n\t}\n\n\t> .buttons {\n\t\tmargin-top: 16px;\n\n\t\t> * {\n\t\t\tmargin: 0 8px;\n\t\t}\n\t}\n}\n</style>\n"], "filenames": ["src/client/components/dialog.vue"], "buggy_code_start_loc": [15], "buggy_code_end_loc": [17], "fixing_code_start_loc": [15], "fixing_code_end_loc": [17], "type": "CWE-79", "message": "Misskey is a decentralized microblogging platform. In versions of Misskey prior to 12.51.0, malicious actors can use the web client built-in dialog to display a malicious string, leading to cross-site scripting (XSS). XSS could compromise the API request token. This issue has been fixed in version 12.51.0. There are no known workarounds aside from upgrading.", "other": {"cve": {"id": "CVE-2021-39169", "sourceIdentifier": "security-advisories@github.com", "published": "2021-08-27T13:15:07.020", "lastModified": "2021-09-08T13:14:55.150", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Misskey is a decentralized microblogging platform. In versions of Misskey prior to 12.51.0, malicious actors can use the web client built-in dialog to display a malicious string, leading to cross-site scripting (XSS). XSS could compromise the API request token. This issue has been fixed in version 12.51.0. There are no known workarounds aside from upgrading."}, {"lang": "es", "value": "Misskey es una platamanera de microblogging descentralizada. En las versiones de Misskey anteriores a 12.51.0, unos actores maliciosos pueden usar el di\u00e1logo incorporado en el cliente web para mostrar una cadena maliciosa, conllevando a un ataque de tipo cross-site scripting (XSS). El ataque de  tipo XSS podr\u00eda comprometer el token de petici\u00f3n de la API. Este problema ha sido corregido en la versi\u00f3n 12.51.0. No se conocen soluciones aparte de la actualizaci\u00f3n."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.0, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.1, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:misskey:misskey:*:*:*:*:*:*:*:*", "versionEndExcluding": "12.51.0", "matchCriteriaId": "8E6D51FB-70AB-4EF8-B173-168D76D8338A"}]}]}], "references": [{"url": "https://github.com/misskey-dev/misskey/commit/ec203f7f795766f76b55fecc9248168c1cdf6c99", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/misskey-dev/misskey/security/advisories/GHSA-pmmv-jwqh-f5ww", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/misskey-dev/misskey/commit/ec203f7f795766f76b55fecc9248168c1cdf6c99"}}