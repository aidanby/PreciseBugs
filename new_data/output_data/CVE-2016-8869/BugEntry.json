{"buggy_code": ["<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<extension version=\"3.6\" type=\"file\" method=\"upgrade\">\n\t<name>files_joomla</name>\n\t<author>Joomla! Project</author>\n\t<authorEmail>admin@joomla.org</authorEmail>\n\t<authorUrl>www.joomla.org</authorUrl>\n\t<copyright>(C) 2005 - 2016 Open Source Matters. All rights reserved</copyright>\n\t<license>GNU General Public License version 2 or later; see LICENSE.txt</license>\n\t<version>3.6.4-dev</version>\n\t<creationDate>October 2016</creationDate>\n\t<description>FILES_JOOMLA_XML_DESCRIPTION</description>\n\n\t<scriptfile>administrator/components/com_admin/script.php</scriptfile>\n\n\t<update>\n\t\t<schemas>\n\t\t\t<schemapath type=\"mysql\">administrator/components/com_admin/sql/updates/mysql</schemapath>\n\t\t\t<schemapath type=\"sqlsrv\">administrator/components/com_admin/sql/updates/sqlsrv</schemapath>\n\t\t\t<schemapath type=\"sqlazure\">administrator/components/com_admin/sql/updates/sqlazure</schemapath>\n\t\t\t<schemapath type=\"postgresql\">administrator/components/com_admin/sql/updates/postgresql</schemapath>\n\t\t</schemas>\n\t</update>\n\n\t<fileset>\n\t\t<files>\n\t\t\t<folder>administrator</folder>\n\t\t\t<folder>bin</folder>\n\t\t\t<folder>cache</folder>\n\t\t\t<folder>cli</folder>\n\t\t\t<folder>components</folder>\n\t\t\t<folder>images</folder>\n\t\t\t<folder>includes</folder>\n\t\t\t<folder>language</folder>\n\t\t\t<folder>layouts</folder>\n\t\t\t<folder>libraries</folder>\n\t\t\t<folder>media</folder>\n\t\t\t<folder>modules</folder>\n\t\t\t<folder>plugins</folder>\n\t\t\t<folder>templates</folder>\n\t\t\t<folder>tmp</folder>\n\t\t\t<file>htaccess.txt</file>\n\t\t\t<file>web.config.txt</file>\n\t\t\t<file>LICENSE.txt</file>\n\t\t\t<file>README.txt</file>\n\t\t\t<file>index.php</file>\n\t\t</files>\n\t</fileset>\n\n\t<updateservers>\n\t\t<server name=\"Joomla! Core\" type=\"collection\">https://update.joomla.org/core/list.xml</server>\n\t\t<server name=\"Joomla! Extension Directory\" type=\"collection\">https://update.joomla.org/jed/list.xml</server>\n\t</updateservers>\n</extension>\n", "<?php\n/**\n * @package     Joomla.Site\n * @subpackage  com_users\n *\n * @copyright   Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved.\n * @license     GNU General Public License version 2 or later; see LICENSE.txt\n */\n\ndefined('_JEXEC') or die;\n\nJLoader::register('UsersController', JPATH_COMPONENT . '/controller.php');\n\n/**\n * Registration controller class for Users.\n *\n * @since  1.6\n */\nclass UsersControllerUser extends UsersController\n{\n\t/**\n\t * Method to log in a user.\n\t *\n\t * @return  void\n\t *\n\t * @since   1.6\n\t */\n\tpublic function login()\n\t{\n\t\tJSession::checkToken('post') or jexit(JText::_('JINVALID_TOKEN'));\n\n\t\t$app    = JFactory::getApplication();\n\t\t$input  = $app->input;\n\t\t$method = $input->getMethod();\n\n\t\t// Populate the data array:\n\t\t$data = array();\n\n\t\t$data['return']    = base64_decode($app->input->post->get('return', '', 'BASE64'));\n\t\t$data['username']  = $input->$method->get('username', '', 'USERNAME');\n\t\t$data['password']  = $input->$method->get('password', '', 'RAW');\n\t\t$data['secretkey'] = $input->$method->get('secretkey', '', 'RAW');\n\n\t\t// Check for a simple menu item id\n\t\tif (is_numeric($data['return']))\n\t\t{\n\t\t\tif (JLanguageMultilang::isEnabled())\n\t\t\t{\n\n\t\t\t\t$db = JFactory::getDbo();\n\t\t\t\t$query = $db->getQuery(true)\n\t\t\t\t\t->select('language')\n\t\t\t\t\t->from($db->quoteName('#__menu'))\n\t\t\t\t\t->where('client_id = 0')\n\t\t\t\t\t->where('id =' . $data['return']);\n\n\t\t\t\t$db->setQuery($query);\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t$language = $db->loadResult();\n\t\t\t\t}\n\t\t\t\tcatch (RuntimeException $e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ($language !== '*')\n\t\t\t\t{\n\t\t\t\t\t$lang = '&lang=' . $language;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$lang = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$lang = '';\n\t\t\t}\n\n\t\t\t$data['return'] = 'index.php?Itemid=' . $data['return'] . $lang;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Don't redirect to an external URL.\n\t\t\tif (!JUri::isInternal($data['return']))\n\t\t\t{\n\t\t\t\t$data['return'] = '';\n\t\t\t}\n\t\t}\n\n\t\t// Set the return URL if empty.\n\t\tif (empty($data['return']))\n\t\t{\n\t\t\t$data['return'] = 'index.php?option=com_users&view=profile';\n\t\t}\n\n\t\t// Set the return URL in the user state to allow modification by plugins\n\t\t$app->setUserState('users.login.form.return', $data['return']);\n\n\t\t// Get the log in options.\n\t\t$options = array();\n\t\t$options['remember'] = $this->input->getBool('remember', false);\n\t\t$options['return']   = $data['return'];\n\n\t\t// Get the log in credentials.\n\t\t$credentials = array();\n\t\t$credentials['username']  = $data['username'];\n\t\t$credentials['password']  = $data['password'];\n\t\t$credentials['secretkey'] = $data['secretkey'];\n\n\t\t// Perform the log in.\n\t\tif (true !== $app->login($credentials, $options))\n\t\t{\n\t\t\t// Login failed !\n\t\t\t// Clear user name, password and secret key before sending the login form back to the user.\n\t\t\t$data['remember'] = (int) $options['remember'];\n\t\t\t$data['username'] = '';\n\t\t\t$data['password'] = '';\n\t\t\t$data['secretkey'] = '';\n\t\t\t$app->setUserState('users.login.form.data', $data);\n\t\t\t$app->redirect(JRoute::_('index.php?option=com_users&view=login', false));\n\t\t}\n\n\t\t// Success\n\t\tif ($options['remember'] == true)\n\t\t{\n\t\t\t$app->setUserState('rememberLogin', true);\n\t\t}\n\n\t\t$app->setUserState('users.login.form.data', array());\n\t\t$app->redirect(JRoute::_($app->getUserState('users.login.form.return'), false));\n\t}\n\n\t/**\n\t * Method to log out a user.\n\t *\n\t * @return  void\n\t *\n\t * @since   1.6\n\t */\n\tpublic function logout()\n\t{\n\t\tJSession::checkToken('request') or jexit(JText::_('JINVALID_TOKEN'));\n\n\t\t$app = JFactory::getApplication();\n\n\t\t// Perform the log out.\n\t\t$error  = $app->logout();\n\t\t$input  = $app->input;\n\t\t$method = $input->getMethod();\n\n\t\t// Check if the log out succeeded.\n\t\tif ($error instanceof Exception)\n\t\t{\n\t\t\t$app->redirect(JRoute::_('index.php?option=com_users&view=login', false));\n\t\t}\n\n\t\t// Get the return url from the request and validate that it is internal.\n\t\t$return = $input->$method->get('return', '', 'BASE64');\n\t\t$return = base64_decode($return);\n\n\t\t// Check for a simple menu item id\n\t\tif (is_numeric($return))\n\t\t{\n\t\t\tif (JLanguageMultilang::isEnabled())\n\t\t\t{\n\n\t\t\t\t$db = JFactory::getDbo();\n\t\t\t\t$query = $db->getQuery(true)\n\t\t\t\t\t->select('language')\n\t\t\t\t\t->from($db->quoteName('#__menu'))\n\t\t\t\t\t->where('client_id = 0')\n\t\t\t\t\t->where('id =' . $return);\n\n\t\t\t\t$db->setQuery($query);\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t$language = $db->loadResult();\n\t\t\t\t}\n\t\t\t\tcatch (RuntimeException $e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ($language !== '*')\n\t\t\t\t{\n\t\t\t\t\t$lang = '&lang=' . $language;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$lang = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$lang = '';\n\t\t\t}\n\n\t\t\t$return = 'index.php?Itemid=' . $return . $lang;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Don't redirect to an external URL.\n\t\t\tif (!JUri::isInternal($return))\n\t\t\t{\n\t\t\t\t$return = '';\n\t\t\t}\n\t\t}\n\n\t\t// Redirect the user.\n\t\t$app->redirect(JRoute::_($return, false));\n\t}\n\n\t/**\n\t * Method to logout directly and redirect to page.\n\t *\n\t * @return  void\n\t *\n\t * @since   3.5\n\t */\n\tpublic function menulogout()\n\t{\n\t\t// Get the ItemID of the page to redirect after logout\n\t\t$app    = JFactory::getApplication();\n\t\t$itemid = $app->getMenu()->getActive()->params->get('logout');\n\n\t\t// Get the language of the page when multilang is on\n\t\tif (JLanguageMultilang::isEnabled())\n\t\t{\n\t\t\tif ($itemid)\n\t\t\t{\n\t\t\t\t$db = JFactory::getDbo();\n\t\t\t\t$query = $db->getQuery(true)\n\t\t\t\t\t->select('language')\n\t\t\t\t\t->from($db->quoteName('#__menu'))\n\t\t\t\t\t->where('client_id = 0')\n\t\t\t\t\t->where('id =' . $itemid);\n\n\t\t\t\t$db->setQuery($query);\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t$language = $db->loadResult();\n\t\t\t\t}\n\t\t\t\tcatch (RuntimeException $e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ($language !== '*')\n\t\t\t\t{\n\t\t\t\t\t$lang = '&lang=' . $language;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$lang = '';\n\t\t\t\t}\n\n\t\t\t\t// URL to redirect after logout\n\t\t\t\t$url = 'index.php?Itemid=' . $itemid . $lang;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Logout is set to default. Get the home page ItemID\n\t\t\t\t$lang_code = $app->input->cookie->getString(JApplicationHelper::getHash('language'));\n\t\t\t\t$item      = $app->getMenu()->getDefault($lang_code);\n\t\t\t\t$itemid    = $item->id;\n\n\t\t\t\t// Redirect to Home page after logout\n\t\t\t\t$url = 'index.php?Itemid=' . $itemid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// URL to redirect after logout, default page if no ItemID is set\n\t\t\t$url = $itemid ? 'index.php?Itemid=' . $itemid : JUri::root();\n\t\t}\n\n\t\t// Logout and redirect\n\t\t$this->setRedirect('index.php?option=com_users&task=user.logout&' . JSession::getFormToken() . '=1&return=' . base64_encode($url));\n\t}\n\n\t/**\n\t * Method to register a user.\n\t *\n\t * @return  boolean\n\t *\n\t * @since   1.6\n\t */\n\tpublic function register()\n\t{\n\t\tJSession::checkToken('post') or jexit(JText::_('JINVALID_TOKEN'));\n\n\t\t// Get the application\n\t\t$app = JFactory::getApplication();\n\n\t\t// Get the form data.\n\t\t$data = $this->input->post->get('user', array(), 'array');\n\n\t\t// Get the model and validate the data.\n\t\t$model  = $this->getModel('Registration', 'UsersModel');\n\n\t\t$form = $model->getForm();\n\n\t\tif (!$form)\n\t\t{\n\t\t\tJError::raiseError(500, $model->getError());\n\n\t\t\treturn false;\n\t\t}\n\n\t\t$return = $model->validate($form, $data);\n\n\t\t// Check for errors.\n\t\tif ($return === false)\n\t\t{\n\t\t\t// Get the validation messages.\n\t\t\t$errors = $model->getErrors();\n\n\t\t\t// Push up to three validation messages out to the user.\n\t\t\tfor ($i = 0, $n = count($errors); $i < $n && $i < 3; $i++)\n\t\t\t{\n\t\t\t\tif ($errors[$i] instanceof Exception)\n\t\t\t\t{\n\t\t\t\t\t$app->enqueueMessage($errors[$i]->getMessage(), 'notice');\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$app->enqueueMessage($errors[$i], 'notice');\n\t\t\t}\n\n\t\t\t// Save the data in the session.\n\t\t\t$app->setUserState('users.registration.form.data', $data);\n\n\t\t\t// Redirect back to the registration form.\n\t\t\t$this->setRedirect('index.php?option=com_users&view=registration');\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Finish the registration.\n\t\t$return = $model->register($data);\n\n\t\t// Check for errors.\n\t\tif ($return === false)\n\t\t{\n\t\t\t// Save the data in the session.\n\t\t\t$app->setUserState('users.registration.form.data', $data);\n\n\t\t\t// Redirect back to the registration form.\n\t\t\t$message = JText::sprintf('COM_USERS_REGISTRATION_SAVE_FAILED', $model->getError());\n\t\t\t$this->setRedirect('index.php?option=com_users&view=registration', $message, 'error');\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Flush the data from the session.\n\t\t$app->setUserState('users.registration.form.data', null);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method to login a user.\n\t *\n\t * @return  boolean\n\t *\n\t * @since   1.6\n\t */\n\tpublic function remind()\n\t{\n\t\t// Check the request token.\n\t\tJSession::checkToken('post') or jexit(JText::_('JINVALID_TOKEN'));\n\n\t\t$app   = JFactory::getApplication();\n\t\t$model = $this->getModel('User', 'UsersModel');\n\t\t$data  = $this->input->post->get('jform', array(), 'array');\n\n\t\t// Submit the username remind request.\n\t\t$return = $model->processRemindRequest($data);\n\n\t\t// Check for a hard error.\n\t\tif ($return instanceof Exception)\n\t\t{\n\t\t\t// Get the error message to display.\n\t\t\t$message = $app->get('error_reporting')\n\t\t\t\t? $return->getMessage()\n\t\t\t\t: JText::_('COM_USERS_REMIND_REQUEST_ERROR');\n\n\t\t\t// Get the route to the next page.\n\t\t\t$itemid = UsersHelperRoute::getRemindRoute();\n\t\t\t$itemid = $itemid !== null ? '&Itemid=' . $itemid : '';\n\t\t\t$route  = 'index.php?option=com_users&view=remind' . $itemid;\n\n\t\t\t// Go back to the complete form.\n\t\t\t$this->setRedirect(JRoute::_($route, false), $message, 'error');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ($return === false)\n\t\t{\n\t\t\t// Complete failed.\n\t\t\t// Get the route to the next page.\n\t\t\t$itemid = UsersHelperRoute::getRemindRoute();\n\t\t\t$itemid = $itemid !== null ? '&Itemid=' . $itemid : '';\n\t\t\t$route  = 'index.php?option=com_users&view=remind' . $itemid;\n\n\t\t\t// Go back to the complete form.\n\t\t\t$message = JText::sprintf('COM_USERS_REMIND_REQUEST_FAILED', $model->getError());\n\t\t\t$this->setRedirect(JRoute::_($route, false), $message, 'notice');\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Complete succeeded.\n\t\t// Get the route to the next page.\n\t\t$itemid = UsersHelperRoute::getLoginRoute();\n\t\t$itemid = $itemid !== null ? '&Itemid=' . $itemid : '';\n\t\t$route\t= 'index.php?option=com_users&view=login' . $itemid;\n\n\t\t// Proceed to the login form.\n\t\t$message = JText::_('COM_USERS_REMIND_REQUEST_SUCCESS');\n\t\t$this->setRedirect(JRoute::_($route, false), $message);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method to login a user.\n\t *\n\t * @return  void\n\t *\n\t * @since   1.6\n\t */\n\tpublic function resend()\n\t{\n\t\t// Check for request forgeries\n\t\tJSession::checkToken('post') or jexit(JText::_('JINVALID_TOKEN'));\n\t}\n}\n", "<?php\n/**\n * @package     Joomla.Libraries\n * @subpackage  Version\n *\n * @copyright   Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved.\n * @license     GNU General Public License version 2 or later; see LICENSE\n */\n\ndefined('JPATH_PLATFORM') or die;\n\n/**\n * Version information class for the Joomla CMS.\n *\n * @since  1.0\n */\nfinal class JVersion\n{\n\t/**\n\t * Product name.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst PRODUCT = 'Joomla!';\n\n\t/**\n\t * Release version.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELEASE = '3.6';\n\n\t/**\n\t * Maintenance version.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst DEV_LEVEL = '4-dev';\n\n\t/**\n\t * Development status.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst DEV_STATUS = 'Development';\n\n\t/**\n\t * Build number.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst BUILD = '';\n\n\t/**\n\t * Code name.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst CODENAME = 'Noether';\n\n\t/**\n\t * Release date.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELDATE = '18-October-2016';\n\n\t/**\n\t * Release time.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELTIME = '16:37';\n\n\t/**\n\t * Release timezone.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELTZ = 'GMT';\n\n\t/**\n\t * Copyright Notice.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst COPYRIGHT = 'Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved.';\n\n\t/**\n\t * Link text.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst URL = '<a href=\"https://www.joomla.org\">Joomla!</a> is Free Software released under the GNU General Public License.';\n\n\t/**\n\t * Magic getter providing access to constants previously defined as class member vars.\n\t *\n\t * @param   string  $name  The name of the property.\n\t *\n\t * @return  mixed   A value if the property name is valid.\n\t *\n\t * @since   3.5\n\t * @deprecated  4.0  Access the constants directly\n\t */\n\tpublic function __get($name)\n\t{\n\t\tif (defined(\"JVersion::$name\"))\n\t\t{\n\t\t\tJLog::add(\n\t\t\t\t'Accessing JVersion data through class member variables is deprecated, use the corresponding constant instead.',\n\t\t\t\tJLog::WARNING,\n\t\t\t\t'deprecated'\n\t\t\t);\n\n\t\t\treturn constant(\"JVersion::$name\");\n\t\t}\n\n\t\t$trace = debug_backtrace();\n\t\ttrigger_error(\n\t\t\t'Undefined constant via __get(): ' . $name . ' in ' . $trace[0]['file'] . ' on line ' . $trace[0]['line'],\n\t\t\tE_USER_NOTICE\n\t\t);\n\t}\n\n\t/**\n\t * Check if we are in development mode\n\t *\n\t * @return  boolean\n\t *\n\t * @since   3.4.3\n\t */\n\tpublic function isInDevelopmentState()\n\t{\n\t\treturn strtolower(self::DEV_STATUS) != 'stable';\n\t}\n\n\t/**\n\t * Compares two a \"PHP standardized\" version number against the current Joomla version.\n\t *\n\t * @param   string  $minimum  The minimum version of the Joomla which is compatible.\n\t *\n\t * @return  boolean True if the version is compatible.\n\t *\n\t * @see     https://secure.php.net/version_compare\n\t * @since   1.0\n\t */\n\tpublic function isCompatible($minimum)\n\t{\n\t\treturn version_compare(JVERSION, $minimum, 'ge');\n\t}\n\n\t/**\n\t * Method to get the help file version.\n\t *\n\t * @return  string  Version suffix for help files.\n\t *\n\t * @since   1.0\n\t */\n\tpublic function getHelpVersion()\n\t{\n\t\treturn '.' . str_replace('.', '', self::RELEASE);\n\t}\n\n\t/**\n\t * Gets a \"PHP standardized\" version string for the current Joomla.\n\t *\n\t * @return  string  Version string.\n\t *\n\t * @since   1.5\n\t */\n\tpublic function getShortVersion()\n\t{\n\t\treturn self::RELEASE . '.' . self::DEV_LEVEL;\n\t}\n\n\t/**\n\t * Gets a version string for the current Joomla with all release information.\n\t *\n\t * @return  string  Complete version string.\n\t *\n\t * @since   1.5\n\t */\n\tpublic function getLongVersion()\n\t{\n\t\treturn self::PRODUCT . ' ' . self::RELEASE . '.' . self::DEV_LEVEL . ' '\n\t\t\t. self::DEV_STATUS . ' [ ' . self::CODENAME . ' ] ' . self::RELDATE . ' '\n\t\t\t. self::RELTIME . ' ' . self::RELTZ;\n\t}\n\n\t/**\n\t * Returns the user agent.\n\t *\n\t * @param   string  $component    Name of the component.\n\t * @param   bool    $mask         Mask as Mozilla/5.0 or not.\n\t * @param   bool    $add_version  Add version afterwards to component.\n\t *\n\t * @return  string  User Agent.\n\t *\n\t * @since   1.0\n\t */\n\tpublic function getUserAgent($component = null, $mask = false, $add_version = true)\n\t{\n\t\tif ($component === null)\n\t\t{\n\t\t\t$component = 'Framework';\n\t\t}\n\n\t\tif ($add_version)\n\t\t{\n\t\t\t$component .= '/' . self::RELEASE;\n\t\t}\n\n\t\t// If masked pretend to look like Mozilla 5.0 but still identify ourselves.\n\t\tif ($mask)\n\t\t{\n\t\t\treturn 'Mozilla/5.0 ' . self::PRODUCT . '/' . self::RELEASE . '.' . self::DEV_LEVEL . ($component ? ' ' . $component : '');\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn self::PRODUCT . '/' . self::RELEASE . '.' . self::DEV_LEVEL . ($component ? ' ' . $component : '');\n\t\t}\n\t}\n\n\t/**\n\t * Generate a media version string for assets\n\t * Public to allow third party developers to use it\n\t *\n\t * @return  string\n\t *\n\t * @since   3.2\n\t */\n\tpublic function generateMediaVersion()\n\t{\n\t\t$date   = new JDate;\n\t\t$config = JFactory::getConfig();\n\n\t\treturn md5($this->getLongVersion() . $config->get('secret') . $date->toSql());\n\t}\n\n\t/**\n\t * Gets a media version which is used to append to Joomla core media files.\n\t *\n\t * This media version is used to append to Joomla core media in order to trick browsers into\n\t * reloading the CSS and JavaScript, because they think the files are renewed.\n\t * The media version is renewed after Joomla core update, install, discover_install and uninstallation.\n\t *\n\t * @return  string  The media version.\n\t *\n\t * @since   3.2\n\t */\n\tpublic function getMediaVersion()\n\t{\n\t\t// Load the media version and cache it for future use\n\t\tstatic $mediaVersion = null;\n\n\t\tif ($mediaVersion === null)\n\t\t{\n\t\t\t$config = JFactory::getConfig();\n\t\t\t$debugEnabled = $config->get('debug', 0);\n\n\t\t\t// Get the joomla library params\n\t\t\t$params = JLibraryHelper::getParams('joomla');\n\n\t\t\t// Get the media version\n\t\t\t$mediaVersion = $params->get('mediaversion', '');\n\n\t\t\t// Refresh assets in debug mode or when the media version is not set\n\t\t\tif ($debugEnabled || empty($mediaVersion))\n\t\t\t{\n\t\t\t\t$mediaVersion = $this->generateMediaVersion();\n\n\t\t\t\t$this->setMediaVersion($mediaVersion);\n\t\t\t}\n\t\t}\n\n\t\treturn $mediaVersion;\n\t}\n\n\t/**\n\t * Function to refresh the media version\n\t *\n\t * @return  JVersion  Instance of $this to allow chaining.\n\t *\n\t * @since   3.2\n\t */\n\tpublic function refreshMediaVersion()\n\t{\n\t\t$newMediaVersion = $this->generateMediaVersion();\n\n\t\treturn $this->setMediaVersion($newMediaVersion);\n\t}\n\n\t/**\n\t * Sets the media version which is used to append to Joomla core media files.\n\t *\n\t * @param   string  $mediaVersion  The media version.\n\t *\n\t * @return  JVersion  Instance of $this to allow chaining.\n\t *\n\t * @since   3.2\n\t */\n\tpublic function setMediaVersion($mediaVersion)\n\t{\n\t\t// Do not allow empty media versions\n\t\tif (!empty($mediaVersion))\n\t\t{\n\t\t\t// Get library parameters\n\t\t\t$params = JLibraryHelper::getParams('joomla');\n\n\t\t\t$params->set('mediaversion', $mediaVersion);\n\n\t\t\t// Save modified params\n\t\t\tJLibraryHelper::saveParams('joomla', $params);\n\t\t}\n\n\t\treturn $this;\n\t}\n}\n"], "fixing_code": ["<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<extension version=\"3.6\" type=\"file\" method=\"upgrade\">\n\t<name>files_joomla</name>\n\t<author>Joomla! Project</author>\n\t<authorEmail>admin@joomla.org</authorEmail>\n\t<authorUrl>www.joomla.org</authorUrl>\n\t<copyright>(C) 2005 - 2016 Open Source Matters. All rights reserved</copyright>\n\t<license>GNU General Public License version 2 or later; see LICENSE.txt</license>\n\t<version>3.6.4</version>\n\t<creationDate>October 2016</creationDate>\n\t<description>FILES_JOOMLA_XML_DESCRIPTION</description>\n\n\t<scriptfile>administrator/components/com_admin/script.php</scriptfile>\n\n\t<update>\n\t\t<schemas>\n\t\t\t<schemapath type=\"mysql\">administrator/components/com_admin/sql/updates/mysql</schemapath>\n\t\t\t<schemapath type=\"sqlsrv\">administrator/components/com_admin/sql/updates/sqlsrv</schemapath>\n\t\t\t<schemapath type=\"sqlazure\">administrator/components/com_admin/sql/updates/sqlazure</schemapath>\n\t\t\t<schemapath type=\"postgresql\">administrator/components/com_admin/sql/updates/postgresql</schemapath>\n\t\t</schemas>\n\t</update>\n\n\t<fileset>\n\t\t<files>\n\t\t\t<folder>administrator</folder>\n\t\t\t<folder>bin</folder>\n\t\t\t<folder>cache</folder>\n\t\t\t<folder>cli</folder>\n\t\t\t<folder>components</folder>\n\t\t\t<folder>images</folder>\n\t\t\t<folder>includes</folder>\n\t\t\t<folder>language</folder>\n\t\t\t<folder>layouts</folder>\n\t\t\t<folder>libraries</folder>\n\t\t\t<folder>media</folder>\n\t\t\t<folder>modules</folder>\n\t\t\t<folder>plugins</folder>\n\t\t\t<folder>templates</folder>\n\t\t\t<folder>tmp</folder>\n\t\t\t<file>htaccess.txt</file>\n\t\t\t<file>web.config.txt</file>\n\t\t\t<file>LICENSE.txt</file>\n\t\t\t<file>README.txt</file>\n\t\t\t<file>index.php</file>\n\t\t</files>\n\t</fileset>\n\n\t<updateservers>\n\t\t<server name=\"Joomla! Core\" type=\"collection\">https://update.joomla.org/core/list.xml</server>\n\t\t<server name=\"Joomla! Extension Directory\" type=\"collection\">https://update.joomla.org/jed/list.xml</server>\n\t</updateservers>\n</extension>\n", "<?php\n/**\n * @package     Joomla.Site\n * @subpackage  com_users\n *\n * @copyright   Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved.\n * @license     GNU General Public License version 2 or later; see LICENSE.txt\n */\n\ndefined('_JEXEC') or die;\n\nJLoader::register('UsersController', JPATH_COMPONENT . '/controller.php');\n\n/**\n * Registration controller class for Users.\n *\n * @since  1.6\n */\nclass UsersControllerUser extends UsersController\n{\n\t/**\n\t * Method to log in a user.\n\t *\n\t * @return  void\n\t *\n\t * @since   1.6\n\t */\n\tpublic function login()\n\t{\n\t\tJSession::checkToken('post') or jexit(JText::_('JINVALID_TOKEN'));\n\n\t\t$app    = JFactory::getApplication();\n\t\t$input  = $app->input;\n\t\t$method = $input->getMethod();\n\n\t\t// Populate the data array:\n\t\t$data = array();\n\n\t\t$data['return']    = base64_decode($app->input->post->get('return', '', 'BASE64'));\n\t\t$data['username']  = $input->$method->get('username', '', 'USERNAME');\n\t\t$data['password']  = $input->$method->get('password', '', 'RAW');\n\t\t$data['secretkey'] = $input->$method->get('secretkey', '', 'RAW');\n\n\t\t// Check for a simple menu item id\n\t\tif (is_numeric($data['return']))\n\t\t{\n\t\t\tif (JLanguageMultilang::isEnabled())\n\t\t\t{\n\n\t\t\t\t$db = JFactory::getDbo();\n\t\t\t\t$query = $db->getQuery(true)\n\t\t\t\t\t->select('language')\n\t\t\t\t\t->from($db->quoteName('#__menu'))\n\t\t\t\t\t->where('client_id = 0')\n\t\t\t\t\t->where('id =' . $data['return']);\n\n\t\t\t\t$db->setQuery($query);\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t$language = $db->loadResult();\n\t\t\t\t}\n\t\t\t\tcatch (RuntimeException $e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ($language !== '*')\n\t\t\t\t{\n\t\t\t\t\t$lang = '&lang=' . $language;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$lang = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$lang = '';\n\t\t\t}\n\n\t\t\t$data['return'] = 'index.php?Itemid=' . $data['return'] . $lang;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Don't redirect to an external URL.\n\t\t\tif (!JUri::isInternal($data['return']))\n\t\t\t{\n\t\t\t\t$data['return'] = '';\n\t\t\t}\n\t\t}\n\n\t\t// Set the return URL if empty.\n\t\tif (empty($data['return']))\n\t\t{\n\t\t\t$data['return'] = 'index.php?option=com_users&view=profile';\n\t\t}\n\n\t\t// Set the return URL in the user state to allow modification by plugins\n\t\t$app->setUserState('users.login.form.return', $data['return']);\n\n\t\t// Get the log in options.\n\t\t$options = array();\n\t\t$options['remember'] = $this->input->getBool('remember', false);\n\t\t$options['return']   = $data['return'];\n\n\t\t// Get the log in credentials.\n\t\t$credentials = array();\n\t\t$credentials['username']  = $data['username'];\n\t\t$credentials['password']  = $data['password'];\n\t\t$credentials['secretkey'] = $data['secretkey'];\n\n\t\t// Perform the log in.\n\t\tif (true !== $app->login($credentials, $options))\n\t\t{\n\t\t\t// Login failed !\n\t\t\t// Clear user name, password and secret key before sending the login form back to the user.\n\t\t\t$data['remember'] = (int) $options['remember'];\n\t\t\t$data['username'] = '';\n\t\t\t$data['password'] = '';\n\t\t\t$data['secretkey'] = '';\n\t\t\t$app->setUserState('users.login.form.data', $data);\n\t\t\t$app->redirect(JRoute::_('index.php?option=com_users&view=login', false));\n\t\t}\n\n\t\t// Success\n\t\tif ($options['remember'] == true)\n\t\t{\n\t\t\t$app->setUserState('rememberLogin', true);\n\t\t}\n\n\t\t$app->setUserState('users.login.form.data', array());\n\t\t$app->redirect(JRoute::_($app->getUserState('users.login.form.return'), false));\n\t}\n\n\t/**\n\t * Method to log out a user.\n\t *\n\t * @return  void\n\t *\n\t * @since   1.6\n\t */\n\tpublic function logout()\n\t{\n\t\tJSession::checkToken('request') or jexit(JText::_('JINVALID_TOKEN'));\n\n\t\t$app = JFactory::getApplication();\n\n\t\t// Perform the log out.\n\t\t$error  = $app->logout();\n\t\t$input  = $app->input;\n\t\t$method = $input->getMethod();\n\n\t\t// Check if the log out succeeded.\n\t\tif ($error instanceof Exception)\n\t\t{\n\t\t\t$app->redirect(JRoute::_('index.php?option=com_users&view=login', false));\n\t\t}\n\n\t\t// Get the return url from the request and validate that it is internal.\n\t\t$return = $input->$method->get('return', '', 'BASE64');\n\t\t$return = base64_decode($return);\n\n\t\t// Check for a simple menu item id\n\t\tif (is_numeric($return))\n\t\t{\n\t\t\tif (JLanguageMultilang::isEnabled())\n\t\t\t{\n\n\t\t\t\t$db = JFactory::getDbo();\n\t\t\t\t$query = $db->getQuery(true)\n\t\t\t\t\t->select('language')\n\t\t\t\t\t->from($db->quoteName('#__menu'))\n\t\t\t\t\t->where('client_id = 0')\n\t\t\t\t\t->where('id =' . $return);\n\n\t\t\t\t$db->setQuery($query);\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t$language = $db->loadResult();\n\t\t\t\t}\n\t\t\t\tcatch (RuntimeException $e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ($language !== '*')\n\t\t\t\t{\n\t\t\t\t\t$lang = '&lang=' . $language;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$lang = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$lang = '';\n\t\t\t}\n\n\t\t\t$return = 'index.php?Itemid=' . $return . $lang;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// Don't redirect to an external URL.\n\t\t\tif (!JUri::isInternal($return))\n\t\t\t{\n\t\t\t\t$return = '';\n\t\t\t}\n\t\t}\n\n\t\t// Redirect the user.\n\t\t$app->redirect(JRoute::_($return, false));\n\t}\n\n\t/**\n\t * Method to logout directly and redirect to page.\n\t *\n\t * @return  void\n\t *\n\t * @since   3.5\n\t */\n\tpublic function menulogout()\n\t{\n\t\t// Get the ItemID of the page to redirect after logout\n\t\t$app    = JFactory::getApplication();\n\t\t$itemid = $app->getMenu()->getActive()->params->get('logout');\n\n\t\t// Get the language of the page when multilang is on\n\t\tif (JLanguageMultilang::isEnabled())\n\t\t{\n\t\t\tif ($itemid)\n\t\t\t{\n\t\t\t\t$db = JFactory::getDbo();\n\t\t\t\t$query = $db->getQuery(true)\n\t\t\t\t\t->select('language')\n\t\t\t\t\t->from($db->quoteName('#__menu'))\n\t\t\t\t\t->where('client_id = 0')\n\t\t\t\t\t->where('id =' . $itemid);\n\n\t\t\t\t$db->setQuery($query);\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\t$language = $db->loadResult();\n\t\t\t\t}\n\t\t\t\tcatch (RuntimeException $e)\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ($language !== '*')\n\t\t\t\t{\n\t\t\t\t\t$lang = '&lang=' . $language;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t$lang = '';\n\t\t\t\t}\n\n\t\t\t\t// URL to redirect after logout\n\t\t\t\t$url = 'index.php?Itemid=' . $itemid . $lang;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Logout is set to default. Get the home page ItemID\n\t\t\t\t$lang_code = $app->input->cookie->getString(JApplicationHelper::getHash('language'));\n\t\t\t\t$item      = $app->getMenu()->getDefault($lang_code);\n\t\t\t\t$itemid    = $item->id;\n\n\t\t\t\t// Redirect to Home page after logout\n\t\t\t\t$url = 'index.php?Itemid=' . $itemid;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\t// URL to redirect after logout, default page if no ItemID is set\n\t\t\t$url = $itemid ? 'index.php?Itemid=' . $itemid : JUri::root();\n\t\t}\n\n\t\t// Logout and redirect\n\t\t$this->setRedirect('index.php?option=com_users&task=user.logout&' . JSession::getFormToken() . '=1&return=' . base64_encode($url));\n\t}\n\n\t/**\n\t * Method to login a user.\n\t *\n\t * @return  boolean\n\t *\n\t * @since   1.6\n\t */\n\tpublic function remind()\n\t{\n\t\t// Check the request token.\n\t\tJSession::checkToken('post') or jexit(JText::_('JINVALID_TOKEN'));\n\n\t\t$app   = JFactory::getApplication();\n\t\t$model = $this->getModel('User', 'UsersModel');\n\t\t$data  = $this->input->post->get('jform', array(), 'array');\n\n\t\t// Submit the username remind request.\n\t\t$return = $model->processRemindRequest($data);\n\n\t\t// Check for a hard error.\n\t\tif ($return instanceof Exception)\n\t\t{\n\t\t\t// Get the error message to display.\n\t\t\t$message = $app->get('error_reporting')\n\t\t\t\t? $return->getMessage()\n\t\t\t\t: JText::_('COM_USERS_REMIND_REQUEST_ERROR');\n\n\t\t\t// Get the route to the next page.\n\t\t\t$itemid = UsersHelperRoute::getRemindRoute();\n\t\t\t$itemid = $itemid !== null ? '&Itemid=' . $itemid : '';\n\t\t\t$route  = 'index.php?option=com_users&view=remind' . $itemid;\n\n\t\t\t// Go back to the complete form.\n\t\t\t$this->setRedirect(JRoute::_($route, false), $message, 'error');\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ($return === false)\n\t\t{\n\t\t\t// Complete failed.\n\t\t\t// Get the route to the next page.\n\t\t\t$itemid = UsersHelperRoute::getRemindRoute();\n\t\t\t$itemid = $itemid !== null ? '&Itemid=' . $itemid : '';\n\t\t\t$route  = 'index.php?option=com_users&view=remind' . $itemid;\n\n\t\t\t// Go back to the complete form.\n\t\t\t$message = JText::sprintf('COM_USERS_REMIND_REQUEST_FAILED', $model->getError());\n\t\t\t$this->setRedirect(JRoute::_($route, false), $message, 'notice');\n\n\t\t\treturn false;\n\t\t}\n\n\t\t// Complete succeeded.\n\t\t// Get the route to the next page.\n\t\t$itemid = UsersHelperRoute::getLoginRoute();\n\t\t$itemid = $itemid !== null ? '&Itemid=' . $itemid : '';\n\t\t$route\t= 'index.php?option=com_users&view=login' . $itemid;\n\n\t\t// Proceed to the login form.\n\t\t$message = JText::_('COM_USERS_REMIND_REQUEST_SUCCESS');\n\t\t$this->setRedirect(JRoute::_($route, false), $message);\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Method to login a user.\n\t *\n\t * @return  void\n\t *\n\t * @since   1.6\n\t */\n\tpublic function resend()\n\t{\n\t\t// Check for request forgeries\n\t\tJSession::checkToken('post') or jexit(JText::_('JINVALID_TOKEN'));\n\t}\n}\n", "<?php\n/**\n * @package     Joomla.Libraries\n * @subpackage  Version\n *\n * @copyright   Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved.\n * @license     GNU General Public License version 2 or later; see LICENSE\n */\n\ndefined('JPATH_PLATFORM') or die;\n\n/**\n * Version information class for the Joomla CMS.\n *\n * @since  1.0\n */\nfinal class JVersion\n{\n\t/**\n\t * Product name.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst PRODUCT = 'Joomla!';\n\n\t/**\n\t * Release version.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELEASE = '3.6';\n\n\t/**\n\t * Maintenance version.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst DEV_LEVEL = '4';\n\n\t/**\n\t * Development status.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst DEV_STATUS = 'Stable';\n\n\t/**\n\t * Build number.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst BUILD = '';\n\n\t/**\n\t * Code name.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst CODENAME = 'Noether';\n\n\t/**\n\t * Release date.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELDATE = '21-October-2016';\n\n\t/**\n\t * Release time.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELTIME = '16:33';\n\n\t/**\n\t * Release timezone.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst RELTZ = 'GMT';\n\n\t/**\n\t * Copyright Notice.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst COPYRIGHT = 'Copyright (C) 2005 - 2016 Open Source Matters, Inc. All rights reserved.';\n\n\t/**\n\t * Link text.\n\t *\n\t * @var    string\n\t * @since  3.5\n\t */\n\tconst URL = '<a href=\"https://www.joomla.org\">Joomla!</a> is Free Software released under the GNU General Public License.';\n\n\t/**\n\t * Magic getter providing access to constants previously defined as class member vars.\n\t *\n\t * @param   string  $name  The name of the property.\n\t *\n\t * @return  mixed   A value if the property name is valid.\n\t *\n\t * @since   3.5\n\t * @deprecated  4.0  Access the constants directly\n\t */\n\tpublic function __get($name)\n\t{\n\t\tif (defined(\"JVersion::$name\"))\n\t\t{\n\t\t\tJLog::add(\n\t\t\t\t'Accessing JVersion data through class member variables is deprecated, use the corresponding constant instead.',\n\t\t\t\tJLog::WARNING,\n\t\t\t\t'deprecated'\n\t\t\t);\n\n\t\t\treturn constant(\"JVersion::$name\");\n\t\t}\n\n\t\t$trace = debug_backtrace();\n\t\ttrigger_error(\n\t\t\t'Undefined constant via __get(): ' . $name . ' in ' . $trace[0]['file'] . ' on line ' . $trace[0]['line'],\n\t\t\tE_USER_NOTICE\n\t\t);\n\t}\n\n\t/**\n\t * Check if we are in development mode\n\t *\n\t * @return  boolean\n\t *\n\t * @since   3.4.3\n\t */\n\tpublic function isInDevelopmentState()\n\t{\n\t\treturn strtolower(self::DEV_STATUS) != 'stable';\n\t}\n\n\t/**\n\t * Compares two a \"PHP standardized\" version number against the current Joomla version.\n\t *\n\t * @param   string  $minimum  The minimum version of the Joomla which is compatible.\n\t *\n\t * @return  boolean True if the version is compatible.\n\t *\n\t * @see     https://secure.php.net/version_compare\n\t * @since   1.0\n\t */\n\tpublic function isCompatible($minimum)\n\t{\n\t\treturn version_compare(JVERSION, $minimum, 'ge');\n\t}\n\n\t/**\n\t * Method to get the help file version.\n\t *\n\t * @return  string  Version suffix for help files.\n\t *\n\t * @since   1.0\n\t */\n\tpublic function getHelpVersion()\n\t{\n\t\treturn '.' . str_replace('.', '', self::RELEASE);\n\t}\n\n\t/**\n\t * Gets a \"PHP standardized\" version string for the current Joomla.\n\t *\n\t * @return  string  Version string.\n\t *\n\t * @since   1.5\n\t */\n\tpublic function getShortVersion()\n\t{\n\t\treturn self::RELEASE . '.' . self::DEV_LEVEL;\n\t}\n\n\t/**\n\t * Gets a version string for the current Joomla with all release information.\n\t *\n\t * @return  string  Complete version string.\n\t *\n\t * @since   1.5\n\t */\n\tpublic function getLongVersion()\n\t{\n\t\treturn self::PRODUCT . ' ' . self::RELEASE . '.' . self::DEV_LEVEL . ' '\n\t\t\t. self::DEV_STATUS . ' [ ' . self::CODENAME . ' ] ' . self::RELDATE . ' '\n\t\t\t. self::RELTIME . ' ' . self::RELTZ;\n\t}\n\n\t/**\n\t * Returns the user agent.\n\t *\n\t * @param   string  $component    Name of the component.\n\t * @param   bool    $mask         Mask as Mozilla/5.0 or not.\n\t * @param   bool    $add_version  Add version afterwards to component.\n\t *\n\t * @return  string  User Agent.\n\t *\n\t * @since   1.0\n\t */\n\tpublic function getUserAgent($component = null, $mask = false, $add_version = true)\n\t{\n\t\tif ($component === null)\n\t\t{\n\t\t\t$component = 'Framework';\n\t\t}\n\n\t\tif ($add_version)\n\t\t{\n\t\t\t$component .= '/' . self::RELEASE;\n\t\t}\n\n\t\t// If masked pretend to look like Mozilla 5.0 but still identify ourselves.\n\t\tif ($mask)\n\t\t{\n\t\t\treturn 'Mozilla/5.0 ' . self::PRODUCT . '/' . self::RELEASE . '.' . self::DEV_LEVEL . ($component ? ' ' . $component : '');\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn self::PRODUCT . '/' . self::RELEASE . '.' . self::DEV_LEVEL . ($component ? ' ' . $component : '');\n\t\t}\n\t}\n\n\t/**\n\t * Generate a media version string for assets\n\t * Public to allow third party developers to use it\n\t *\n\t * @return  string\n\t *\n\t * @since   3.2\n\t */\n\tpublic function generateMediaVersion()\n\t{\n\t\t$date   = new JDate;\n\t\t$config = JFactory::getConfig();\n\n\t\treturn md5($this->getLongVersion() . $config->get('secret') . $date->toSql());\n\t}\n\n\t/**\n\t * Gets a media version which is used to append to Joomla core media files.\n\t *\n\t * This media version is used to append to Joomla core media in order to trick browsers into\n\t * reloading the CSS and JavaScript, because they think the files are renewed.\n\t * The media version is renewed after Joomla core update, install, discover_install and uninstallation.\n\t *\n\t * @return  string  The media version.\n\t *\n\t * @since   3.2\n\t */\n\tpublic function getMediaVersion()\n\t{\n\t\t// Load the media version and cache it for future use\n\t\tstatic $mediaVersion = null;\n\n\t\tif ($mediaVersion === null)\n\t\t{\n\t\t\t$config = JFactory::getConfig();\n\t\t\t$debugEnabled = $config->get('debug', 0);\n\n\t\t\t// Get the joomla library params\n\t\t\t$params = JLibraryHelper::getParams('joomla');\n\n\t\t\t// Get the media version\n\t\t\t$mediaVersion = $params->get('mediaversion', '');\n\n\t\t\t// Refresh assets in debug mode or when the media version is not set\n\t\t\tif ($debugEnabled || empty($mediaVersion))\n\t\t\t{\n\t\t\t\t$mediaVersion = $this->generateMediaVersion();\n\n\t\t\t\t$this->setMediaVersion($mediaVersion);\n\t\t\t}\n\t\t}\n\n\t\treturn $mediaVersion;\n\t}\n\n\t/**\n\t * Function to refresh the media version\n\t *\n\t * @return  JVersion  Instance of $this to allow chaining.\n\t *\n\t * @since   3.2\n\t */\n\tpublic function refreshMediaVersion()\n\t{\n\t\t$newMediaVersion = $this->generateMediaVersion();\n\n\t\treturn $this->setMediaVersion($newMediaVersion);\n\t}\n\n\t/**\n\t * Sets the media version which is used to append to Joomla core media files.\n\t *\n\t * @param   string  $mediaVersion  The media version.\n\t *\n\t * @return  JVersion  Instance of $this to allow chaining.\n\t *\n\t * @since   3.2\n\t */\n\tpublic function setMediaVersion($mediaVersion)\n\t{\n\t\t// Do not allow empty media versions\n\t\tif (!empty($mediaVersion))\n\t\t{\n\t\t\t// Get library parameters\n\t\t\t$params = JLibraryHelper::getParams('joomla');\n\n\t\t\t$params->set('mediaversion', $mediaVersion);\n\n\t\t\t// Save modified params\n\t\t\tJLibraryHelper::saveParams('joomla', $params);\n\t\t}\n\n\t\treturn $this;\n\t}\n}\n"], "filenames": ["administrator/manifests/files/joomla.xml", "components/com_users/controllers/user.php", "libraries/cms/version/version.php"], "buggy_code_start_loc": [9, 287, 41], "buggy_code_end_loc": [10, 368, 82], "fixing_code_start_loc": [9, 286, 41], "fixing_code_end_loc": [10, 286, 82], "type": "CWE-20", "message": "The register method in the UsersModelRegistration class in controllers/user.php in the Users component in Joomla! before 3.6.4 allows remote attackers to gain privileges by leveraging incorrect use of unfiltered data when registering on a site.", "other": {"cve": {"id": "CVE-2016-8869", "sourceIdentifier": "cve@mitre.org", "published": "2016-11-04T21:59:07.553", "lastModified": "2016-11-07T19:15:50.997", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The register method in the UsersModelRegistration class in controllers/user.php in the Users component in Joomla! before 3.6.4 allows remote attackers to gain privileges by leveraging incorrect use of unfiltered data when registering on a site."}, {"lang": "es", "value": "El m\u00e9todo de registro en la clase UsersModelRegistration en controllers/user.php en el componente Users en Joomla! en versiones anteriores a 3.6.4 permite a atacantes remotos obtener privilegios aprovechando el uso incorrecto de datos no filtrados al registrarse en un sitio."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:joomla:joomla\\!:*:*:*:*:*:*:*:*", "versionEndIncluding": "3.6.3", "matchCriteriaId": "59292C00-859C-4F23-B92F-D525DDA76582"}]}]}], "references": [{"url": "http://www.rapid7.com/db/modules/auxiliary/admin/http/joomla_registration_privesc", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/93883", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "http://www.securitytracker.com/id/1037108", "source": "cve@mitre.org", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://blog.sucuri.net/2016/10/details-on-the-privilege-escalation-vulnerability-in-joomla.html", "source": "cve@mitre.org", "tags": ["Exploit", "Technical Description", "Third Party Advisory"]}, {"url": "https://developer.joomla.org/security-centre/660-20161002-core-elevated-privileges.html", "source": "cve@mitre.org", "tags": ["Vendor Advisory"]}, {"url": "https://github.com/joomla/joomla-cms/commit/bae1d43938c878480cfd73671e4945211538fdcf", "source": "cve@mitre.org", "tags": ["Patch"]}, {"url": "https://medium.com/@showthread/joomla-3-6-4-account-creation-elevated-privileges-write-up-and-exploit-965d8fb46fa2#.rq4qh1v4r", "source": "cve@mitre.org", "tags": ["Exploit", "Technical Description", "Third Party Advisory"]}, {"url": "https://www.exploit-db.com/exploits/40637/", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/joomla/joomla-cms/commit/bae1d43938c878480cfd73671e4945211538fdcf"}}