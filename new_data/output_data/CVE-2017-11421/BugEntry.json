{"buggy_code": ["#!/bin/bash\n\nshopt -s nocasematch\n\nINPUTFILE=\"$1\"\nOUTPUTFILE=\"$2\"\n\n# application/x-ms-shortcut (.lnk) support, thanks to jopka (https://launchpad.net/~jopka)\nif [[ ${INPUTFILE##*.} = 'lnk' ]]\nthen\n\twhich winepath >&2 || exit\n\n\tINPUTFILE=\"$(\n\t\twinepath -u \"$(winedump \"$INPUTFILE\" \\\n\t\t| sed -n -r '/^LocalPath of/s/.*\\(\"(.*\\.[Ee][Xx][Ee])\"\\)$/\\1/p')\"\n\t)\"\n\n\t[ ! \"$INPUTFILE\" ] && exit\n\tSHORTCUT='TRUE'\n\nfi\n\nTEMPFILE1=$(mktemp)\nTEMPFILE2=$(mktemp)\nTEMPTHUMB=$(mktemp)\n\n# Get the current icon theme (or override it by 4th parameter):\neval THEME=\"${4:-$(gsettings get org.gnome.desktop.interface icon-theme)}\"\n#THEME=\"${THEME:-$(gconftool-2 --get /desktop/gnome/interface/icon_theme)}\"\n\n# Delete previously created thumbnails if icon theme has been changed since last run\nif [ -d $HOME/.cache/thumbnails ] \nthen\n\tTHUMBNAILS_PATH=$HOME/.cache/thumbnails\n\nelse\n\tTHUMBNAILS_PATH=$HOME/.thumbnails\n\nfi\n\nif [ ! \"$THEME\" = \"$(cat $THUMBNAILS_PATH/gnome-exe-thumbnailer.cfg)\" ]\nthen\n\trm $(cat $THUMBNAILS_PATH/gnome-exe-thumbnailer.files)\n\t> $THUMBNAILS_PATH/gnome-exe-thumbnailer.files\n\techo \"$THEME\" > $THUMBNAILS_PATH/gnome-exe-thumbnailer.cfg\n\nfi\n\necho \"$THUMBNAILS_PATH/*/$(echo -n \"$3\" | md5sum | cut -d' ' -f1).png\" \\\n>> \"$THUMBNAILS_PATH/gnome-exe-thumbnailer.files\"\n\ncase \"$THEME\" in\n\tFaience*)\n\t\tTHEME='faience'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\telementary*|Ubuntu-Mono*|Humanity*)\n\t\tTHEME='elementary'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\tFaenza*)\n\t\tTHEME='faenza'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\telementary*|Ubuntu-Mono*|Humanity*)\n\t\tTHEME='elementary'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\tAwOken)\n\t\tTHEME='awoken'\n\t\tDRAW='roundRectangle 3,3 44,44 3,3'\n\t\tSHADOW='-1'\n\t;;\n\n\tAwOkenWhite)\n\t\tTHEME='awoken-white'\n\t\tDRAW='roundRectangle 3,3 44,44 3,3'\n\t\tSHADOW='-1'\n\t;;\n\n\tAwOkenDark)\n\t\tTHEME='awoken-dark'\n\t\tDRAW='roundRectangle 4,4 43,43 3,3'\n\t\tSHADOW='-1'\n\t;;\n\n\tgnome|Human)\n\t\tTHEME='gnome'\n\t\tDRAW='roundRectangle 2,2 45,45 4,4'\n\t\tSHADOW='+0'\n\t;;\n\n\tBreathe)\n\t\tTHEME='breathe'\n\t\tDRAW='roundRectangle 1,2 46,45 2,2'\n\t\tSHADOW='+1'\n\t;;\n\n\tNITRUX-Buttons)\n\t\tTHEME='nitrux-buttons'\n\t\tDRAW='roundRectangle 1,1 46,46 6,6'\n\t\tSHADOW='+0'\n\t;;\n\n\tNITRUX-Buttons-2)\n\t\tTHEME='nitrux-buttons-2'\n\t\tDRAW='roundRectangle 1,1 46,46 6,6'\n\t\tSHADOW='+0'\n\t;;\n\n\tNITRUX*)\n\t\tTHEME='nitrux'\n\t\tDRAW='roundRectangle 2,2 45,45 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tCaptiva)\n\t\tTHEME='captiva'\n\t\tDRAW='roundRectangle 2,1 45,43 15,15'\n\t\tSHADOW='+0'\n\t;;\n\n\tPaper)\n\t\tTHEME='paper'\n\t\tDRAW='roundRectangle 4,4 43,43 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tSquare-Beam)\n\t\tTHEME='square-beam'\n\t\tDRAW='roundRectangle 0,0 47,44 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tbox)\n\t\tTHEME='box'\n\t\tDRAW='roundRectangle 5,5 42,42 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tMoka)\n\t\tTHEME='moka'\n\t\tDRAW='roundRectangle 2,2 45,45 11,11'\n\t\tSHADOW='+0'\n\t;;\n\n\tEvolvere-*vivid*)\n\t\tTHEME='evolvere-vivid'\n\t\tDRAW='roundRectangle 0,0 47,47, 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tEvolvere)\n\t\tTHEME='evolvere'\n\t\tDRAW='roundRectangle 0,0 47,47, 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tCompass)\n\t\tTHEME='compass'\n\t\tDRAW='roundRectangle 3,3 44,44 5,5'\n\t\tSHADOW='+0'\n\t;;\n\n\tVibrancy*)\n\t\tTHEME='vibrancy'\n\t\tDRAW='roundRectangle 3,3 44,44 8,8'\n\t\tSHADOW='+0'\n\t;;\n\n\tTango*|*)\n\t\tTHEME='tango'\n\t\tDRAW='roundRectangle 2,2 45,45 4,4'\n\t\tSHADOW='+1'\n\t;;\n\nesac\n\nINPUTFILE_SIZE=$(du -b \"$INPUTFILE\" | cut -f1 -d$'\\t')\n# Try to fetch the max. size for thumbnailed executables from gsettings, but fall back to 10485760 bytes if that fails.\nTHUMBNAIL_LIMIT=$(gsettings get org.gnome.nautilus.preferences thumbnail-limit | cut -f2 -d' ')\n\nif [[ ! \"$THUMBNAIL_LIMIT\" ]]\nthen\n\tTHUMBNAIL_LIMIT=10485760\nfi\n\n\nif [[ ${INPUTFILE##*.} = 'msi' ]]\nthen\n\t# Use generic installer icon for a .msi package:\n\tICON=/usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/installer.png\n\tTUNE='-modulate 120,100,0'\n\nelif [ $INPUTFILE_SIZE -lt $THUMBNAIL_LIMIT ]\nthen\n\t# Extract group_icon resource. If we get the \"wrestool: $INPUTFILE could not find `1' in\n\t# `group_icon' resource.\" error, there is a 99.9% chance that input file is an installer.\n\n\t# Warning: Some redirection magic ahead.\n\n\tif wrestool --extract --type=group_icon \"$INPUTFILE\" 2>&1 >$TEMPFILE1 \\\n\t| grep \"could not find \\`1' in \\`group_icon' resource\"\n\tthen\n\t\t# Use generic installer icon:\n\t\tICON=/usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/installer.png\n\t\tTUNE='-modulate 120'\n\n\telse\n\t\t# Process extracted data, if we have some:\n\t\tif [ -s $TEMPFILE1 ]\n\t\tthen\n\t\t\t# Look for the best usable icon. 32x32x32 is the first choice, but sometimes is that icon only\n\t\t\t# an empty box with no visible pixels (e.g. in Simon Tatham's Portable Puzzle Collection).\n\t\t\t# In that case we can try to lower the bit depth and look again.\n\t\t\tfor BITDEPTH in 32 24 8 4 1\n\t\t\tdo\n\t\t\t\tread OFFSET INDEX < <(\n\t\t\t\t\ticotool --list $TEMPFILE1 | awk '{\n\t\t\t\t\t\tci=int(substr($2,index($2,\"=\") + 1));\n\t\t\t\t\t\tcw=int(substr($3,index($3,\"=\") + 1));\n\t\t\t\t\t\tcb=int(substr($5,index($5,\"=\") + 1));\n\n\t\t\t\t\t\tif (((cw > w && cw <= 32) || (cw == w && cb > b)) && cb <= '$BITDEPTH') {\n\t\t\t\t\t\t\tb = cb;\n\t\t\t\t\t\t\tw = cw;\n\t\t\t\t\t\t\ti = ci;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tEND {\n\t\t\t\t\t\tprint (32 - w) / 2, i;\n\t\t\t\t\t}'\n\t\t\t\t)\n\n\t\t\t\t# Use a resized 48x48 icon if 32x32 or smaller isn't available.\n\t\t\t\t# This is very rare (e.g. peazip.exe), but it happens sometimes:\n\t\t\t\tif [ \"$INDEX\" = '' ]\n\t\t\t\tthen\n\t\t\t\t\tINDEX=1\n\t\t\t\t\tRESIZE=yes\n\t\t\t\t\tOFFSET=$(($OFFSET - 16))\n\t\t\t\tfi\n\n\t\t\t\t# Finally try to extract chosen icon:\n\t\t\t\ticotool --extract --index=$INDEX $TEMPFILE1 -o $TEMPFILE2\n\n\t\t\t\tif [ -s $TEMPFILE2 ]\n\t\t\t\tthen\n\t\t\t\t\tICON=$TEMPFILE2\n\t\t\t\t\t[ \"$RESIZE\" ] && mogrify -resize 32x32 $ICON\n\n\t\t\t\telse\n\t\t\t\t\t# This case generally happens when the hi-res icons are in new \"Vista\" icon format (bunch of compressed PNGs).\n\t\t\t\t\t# Icotool from icoutils 0.29.1 supports it already, but is unable to extract the one selected icon only.\n\n\t\t\t\t\t# Try to extract all icons:\n\t\t\t\t\ticotool --extract $TEMPFILE1 -o /tmp\n\n\t\t\t\t\t# There's always a 32x32x32 icon in \"Vista\" icons, but just to be sure:\n\t\t\t\t\t[ -s ${TEMPFILE1}_${INDEX}_32x32x${BITDEPTH}.png ] && ICON=${TEMPFILE1}_${INDEX}_32x32x${BITDEPTH}.png\n\n\t\t\t\tfi\n\n\t\t\t\tif [ \"$ICON\" ]\n\t\t\t\tthen\n\t\t\t\t\t# Verify that the selected icon is not just an empty box:\n\t\t\t\t\tif [ \"$(convert $ICON -filter box -resize 1x1! -format \"%[fx:u]\" info:)\" = '0' ]\n\t\t\t\t\tthen\n\t\t\t\t\t\t# Take next iteration with lower bit depth\n\t\t\t\t\t\tunset ICON\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tfi\n\n\t\t\t\telse\n\t\t\t\t\tbreak\n\n\t\t\t\tfi\n\n\t\t\tdone\n\n\t\tfi\n\n\tfi\n\nfi\n\n\n# Create the basic thumbnail:\nif [ \"$ICON\" ]\nthen\n\t# Calculate the backgroud color:\n\tCOLOR=$(\n\t\tconvert $ICON -background white -flatten -fill white \\\n\t\t-fuzz 40% -opaque black -level 33%,66% -scale 1x1! $TUNE txt:- \\\n\t\t| tail -1 \\\n\t\t| grep -o '#......'\n\t)\n\nelse\n\t# Just use the generic icon with backgroud color based on md5sum:\n\tHUE=$(md5sum \"$INPUTFILE\" | cut -c 1-2)\n\tHUE=$(printf \"%d\" 0x$HUE)\n\tCOLOR=\"hsb($HUE, 50%, 90%)\"\n\n\tLABEL=${INPUTFILE##*/}\n\tLABEL=$(sed 's/^./\\U&/; s/.$/\\L&/' <<< \"${LABEL:0:2}\")\n\n\t# Dim color for non-executable files:\n\tif [[ ! ${INPUTFILE##*.} = 'exe' ]]\n\tthen\n\t\tLIGHT=80\n\t\tTUNE_NX='-modulate 100,20'\n\tfi\n\n\tconvert -size 48x48 xc:none -gravity center -font Helvetica-Narrow-Bold -pointsize 24 \\\n\t-fill '#0000005C' -annotate $SHADOW+3 \"$LABEL\" \\\n\t-fill \"hsb($HUE, 3%, ${LIGHT:-100}%)\" -annotate +0+2 \"$LABEL\" \\\n\tpng:$TEMPFILE1\n\n\tICON=$TEMPFILE1\n\tOFFSET=-8\n\nfi\n\n# Create the final thumbnail:\nOFFSET=$(($OFFSET + 8))\n\nif [ \"$SHORTCUT\" ]\nthen\n\t# Variant with MS shortcut emblem in bottom left corner for .lnk files\n\tconvert -size 48x48 xc:none -fill \"$COLOR\" -draw \"$DRAW\" $TUNE_NX miff:- \\\n\t| composite -compose multiply /usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/template.png - miff:- \\\n\t| composite -geometry +$OFFSET+$OFFSET $ICON - png:- \\\n\t| composite -gravity southwest /usr/share/pixmaps/gnome-exe-thumbnailer/shortcut.png - $TEMPTHUMB\n\nelse\n\t# Plain variant\n\tconvert -size 48x48 xc:none -fill \"$COLOR\" -draw \"$DRAW\" $TUNE_NX miff:- \\\n\t| composite -compose multiply /usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/template.png - png:- \\\n\t| composite -geometry +$OFFSET+$OFFSET $ICON - $TEMPTHUMB\n\nfi\n\n# Get the version number:\nif [[ ${INPUTFILE##*.} = 'msi' ]]\nthen\n\t# Look for the ProductVersion property if user has the Microsoft (R) Windows Script Host installed:\n\tif which wine && grep -v 'Wine placeholder DLL' $HOME/.wine/drive_c/windows/system32/cscript.exe\n\tthen\n\t\t# Workaround wine bug #19799: cscript crashes if you call WScript.Arguments(0)\n\t\t# http://bugs.winehq.org/show_bug.cgi?id=19799\n\t\t<<< \"\n\t\t\tDim WI, DB, View, Record\n\t\t\tSet WI = CreateObject(\\\"WindowsInstaller.Installer\\\")\n\t\t\tSet DB = WI.OpenDatabase(\\\"$INPUTFILE\\\",0)\n\t\t\tSet View = DB.OpenView(\\\"SELECT Value FROM Property WHERE Property = 'ProductVersion'\\\")\n\t\t\tView.Execute\n\t\t\tWscript.Echo View.Fetch.StringData(1)\n\t\t\" iconv -f utf8 -t unicode > $TEMPFILE1.vbs\n\n\t\tVERSION=$(\n\t\t\tDISPLAY=NONE wine cscript.exe //E:vbs //NoLogo Z:\\\\tmp\\\\${TEMPFILE1##*/}.vbs 2>/dev/null \\\n\t\t\t| egrep -o '^[0-9]+\\.[0-9]+(\\.[0-9][0-9]?)?(beta)?'\n\t\t)\n\n\telse\n\t\t# Try to get the version number from extended file properties at least:\n\t\tVERSION=$(\n\t\t\tfile \"$INPUTFILE\" \\\n\t\t\t| grep -o ', Subject: .*, Author: ' \\\n\t\t\t| egrep -o '[0-9]+\\.[0-9]+(\\.[0-9][0-9]?)?(beta)?' \\\n\t\t\t| head -1\n\t\t)\n\tfi\n\nelif [ $INPUTFILE_SIZE -lt $THUMBNAIL_LIMIT ]\nthen\n\t# Extract raw version resource:\n\twrestool --extract --raw --type=version \"$INPUTFILE\" > $TEMPFILE1\n\n\tif [ -s $TEMPFILE1 ]\n\tthen\n\t\t# Search for a sane version string.\n\t\t# This (especially the final regexp) took me really long time to figure out. Am I that lame?\n\t\tVERSION=$(< $TEMPFILE1 \\\n\t\t\ttr '\\0, ' '\\t.\\0' \\\n\t\t\t| sed 's/\\t\\t/_/g' \\\n\t\t\t| tr -c -d '[:print:]' \\\n\t\t\t| sed -r -n 's/.*Version[^0-9]*([0-9]+\\.[0-9]+(\\.[0-9][0-9]?)?).*/\\1/p'\n\t\t)\n\tfi\n\nfi\n\n\n# Put a version label on the thumbnail:\nif [ \"$VERSION\" ]\nthen\n\tconvert -font -*-clean-medium-r-*-*-6-*-*-*-*-*-*-* \\\n\t-background transparent -fill white label:\"$VERSION\" \\\n\t-trim -bordercolor '#00001090' -border 2 \\\n\t-fill '#00001048' \\\n\t-draw $'color 0,0 point\\ncolor 0,8 point' -flop \\\n\t-draw $'color 0,0 point\\ncolor 0,8 point' -flop \\\n\tmiff:- | composite -gravity southeast - $TEMPTHUMB $OUTPUTFILE\nelse\n\tcp $TEMPTHUMB $OUTPUTFILE\nfi\n\nrm $TEMPFILE1* $TEMPFILE2 $TEMPTHUMB\n\n"], "fixing_code": ["#!/bin/bash\n\nshopt -s nocasematch\n\nINPUTFILE=\"$1\"\nOUTPUTFILE=\"$2\"\n\n# application/x-ms-shortcut (.lnk) support, thanks to jopka (https://launchpad.net/~jopka)\nif [[ ${INPUTFILE##*.} = 'lnk' ]]\nthen\n\twhich winepath >&2 || exit\n\n\tINPUTFILE=\"$(\n\t\twinepath -u \"$(winedump \"$INPUTFILE\" \\\n\t\t| sed -n -r '/^LocalPath of/s/.*\\(\"(.*\\.[Ee][Xx][Ee])\"\\)$/\\1/p')\"\n\t)\"\n\n\t[ ! \"$INPUTFILE\" ] && exit\n\tSHORTCUT='TRUE'\n\nfi\n\nTEMPFILE1=$(mktemp)\nTEMPFILE2=$(mktemp)\nTEMPTHUMB=$(mktemp)\n\n# Get the current icon theme (or override it by 4th parameter):\neval THEME=\"${4:-$(gsettings get org.gnome.desktop.interface icon-theme)}\"\n#THEME=\"${THEME:-$(gconftool-2 --get /desktop/gnome/interface/icon_theme)}\"\n\n# Delete previously created thumbnails if icon theme has been changed since last run\nif [ -d $HOME/.cache/thumbnails ] \nthen\n\tTHUMBNAILS_PATH=$HOME/.cache/thumbnails\n\nelse\n\tTHUMBNAILS_PATH=$HOME/.thumbnails\n\nfi\n\nif [ ! \"$THEME\" = \"$(cat $THUMBNAILS_PATH/gnome-exe-thumbnailer.cfg)\" ]\nthen\n\trm $(cat $THUMBNAILS_PATH/gnome-exe-thumbnailer.files)\n\t> $THUMBNAILS_PATH/gnome-exe-thumbnailer.files\n\techo \"$THEME\" > $THUMBNAILS_PATH/gnome-exe-thumbnailer.cfg\n\nfi\n\necho \"$THUMBNAILS_PATH/*/$(echo -n \"$3\" | md5sum | cut -d' ' -f1).png\" \\\n>> \"$THUMBNAILS_PATH/gnome-exe-thumbnailer.files\"\n\ncase \"$THEME\" in\n\tFaience*)\n\t\tTHEME='faience'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\telementary*|Ubuntu-Mono*|Humanity*)\n\t\tTHEME='elementary'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\tFaenza*)\n\t\tTHEME='faenza'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\telementary*|Ubuntu-Mono*|Humanity*)\n\t\tTHEME='elementary'\n\t\tDRAW='roundRectangle 2,2 45,45 3,3'\n\t\tSHADOW='+1'\n\t;;\n\n\tAwOken)\n\t\tTHEME='awoken'\n\t\tDRAW='roundRectangle 3,3 44,44 3,3'\n\t\tSHADOW='-1'\n\t;;\n\n\tAwOkenWhite)\n\t\tTHEME='awoken-white'\n\t\tDRAW='roundRectangle 3,3 44,44 3,3'\n\t\tSHADOW='-1'\n\t;;\n\n\tAwOkenDark)\n\t\tTHEME='awoken-dark'\n\t\tDRAW='roundRectangle 4,4 43,43 3,3'\n\t\tSHADOW='-1'\n\t;;\n\n\tgnome|Human)\n\t\tTHEME='gnome'\n\t\tDRAW='roundRectangle 2,2 45,45 4,4'\n\t\tSHADOW='+0'\n\t;;\n\n\tBreathe)\n\t\tTHEME='breathe'\n\t\tDRAW='roundRectangle 1,2 46,45 2,2'\n\t\tSHADOW='+1'\n\t;;\n\n\tNITRUX-Buttons)\n\t\tTHEME='nitrux-buttons'\n\t\tDRAW='roundRectangle 1,1 46,46 6,6'\n\t\tSHADOW='+0'\n\t;;\n\n\tNITRUX-Buttons-2)\n\t\tTHEME='nitrux-buttons-2'\n\t\tDRAW='roundRectangle 1,1 46,46 6,6'\n\t\tSHADOW='+0'\n\t;;\n\n\tNITRUX*)\n\t\tTHEME='nitrux'\n\t\tDRAW='roundRectangle 2,2 45,45 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tCaptiva)\n\t\tTHEME='captiva'\n\t\tDRAW='roundRectangle 2,1 45,43 15,15'\n\t\tSHADOW='+0'\n\t;;\n\n\tPaper)\n\t\tTHEME='paper'\n\t\tDRAW='roundRectangle 4,4 43,43 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tSquare-Beam)\n\t\tTHEME='square-beam'\n\t\tDRAW='roundRectangle 0,0 47,44 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tbox)\n\t\tTHEME='box'\n\t\tDRAW='roundRectangle 5,5 42,42 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tMoka)\n\t\tTHEME='moka'\n\t\tDRAW='roundRectangle 2,2 45,45 11,11'\n\t\tSHADOW='+0'\n\t;;\n\n\tEvolvere-*vivid*)\n\t\tTHEME='evolvere-vivid'\n\t\tDRAW='roundRectangle 0,0 47,47, 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tEvolvere)\n\t\tTHEME='evolvere'\n\t\tDRAW='roundRectangle 0,0 47,47, 1,1'\n\t\tSHADOW='+0'\n\t;;\n\n\tCompass)\n\t\tTHEME='compass'\n\t\tDRAW='roundRectangle 3,3 44,44 5,5'\n\t\tSHADOW='+0'\n\t;;\n\n\tVibrancy*)\n\t\tTHEME='vibrancy'\n\t\tDRAW='roundRectangle 3,3 44,44 8,8'\n\t\tSHADOW='+0'\n\t;;\n\n\tTango*|*)\n\t\tTHEME='tango'\n\t\tDRAW='roundRectangle 2,2 45,45 4,4'\n\t\tSHADOW='+1'\n\t;;\n\nesac\n\nINPUTFILE_SIZE=$(du -b \"$INPUTFILE\" | cut -f1 -d$'\\t')\n# Try to fetch the max. size for thumbnailed executables from gsettings, but fall back to 10485760 bytes if that fails.\nTHUMBNAIL_LIMIT=$(gsettings get org.gnome.nautilus.preferences thumbnail-limit | cut -f2 -d' ')\n\nif [[ ! \"$THUMBNAIL_LIMIT\" ]]\nthen\n\tTHUMBNAIL_LIMIT=10485760\nfi\n\n\nif [[ ${INPUTFILE##*.} = 'msi' ]]\nthen\n\t# Use generic installer icon for a .msi package:\n\tICON=/usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/installer.png\n\tTUNE='-modulate 120,100,0'\n\nelif [ $INPUTFILE_SIZE -lt $THUMBNAIL_LIMIT ]\nthen\n\t# Extract group_icon resource. If we get the \"wrestool: $INPUTFILE could not find `1' in\n\t# `group_icon' resource.\" error, there is a 99.9% chance that input file is an installer.\n\n\t# Warning: Some redirection magic ahead.\n\n\tif wrestool --extract --type=group_icon \"$INPUTFILE\" 2>&1 >$TEMPFILE1 \\\n\t| grep \"could not find \\`1' in \\`group_icon' resource\"\n\tthen\n\t\t# Use generic installer icon:\n\t\tICON=/usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/installer.png\n\t\tTUNE='-modulate 120'\n\n\telse\n\t\t# Process extracted data, if we have some:\n\t\tif [ -s $TEMPFILE1 ]\n\t\tthen\n\t\t\t# Look for the best usable icon. 32x32x32 is the first choice, but sometimes is that icon only\n\t\t\t# an empty box with no visible pixels (e.g. in Simon Tatham's Portable Puzzle Collection).\n\t\t\t# In that case we can try to lower the bit depth and look again.\n\t\t\tfor BITDEPTH in 32 24 8 4 1\n\t\t\tdo\n\t\t\t\tread OFFSET INDEX < <(\n\t\t\t\t\ticotool --list $TEMPFILE1 | awk '{\n\t\t\t\t\t\tci=int(substr($2,index($2,\"=\") + 1));\n\t\t\t\t\t\tcw=int(substr($3,index($3,\"=\") + 1));\n\t\t\t\t\t\tcb=int(substr($5,index($5,\"=\") + 1));\n\n\t\t\t\t\t\tif (((cw > w && cw <= 32) || (cw == w && cb > b)) && cb <= '$BITDEPTH') {\n\t\t\t\t\t\t\tb = cb;\n\t\t\t\t\t\t\tw = cw;\n\t\t\t\t\t\t\ti = ci;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tEND {\n\t\t\t\t\t\tprint (32 - w) / 2, i;\n\t\t\t\t\t}'\n\t\t\t\t)\n\n\t\t\t\t# Use a resized 48x48 icon if 32x32 or smaller isn't available.\n\t\t\t\t# This is very rare (e.g. peazip.exe), but it happens sometimes:\n\t\t\t\tif [ \"$INDEX\" = '' ]\n\t\t\t\tthen\n\t\t\t\t\tINDEX=1\n\t\t\t\t\tRESIZE=yes\n\t\t\t\t\tOFFSET=$(($OFFSET - 16))\n\t\t\t\tfi\n\n\t\t\t\t# Finally try to extract chosen icon:\n\t\t\t\ticotool --extract --index=$INDEX $TEMPFILE1 -o $TEMPFILE2\n\n\t\t\t\tif [ -s $TEMPFILE2 ]\n\t\t\t\tthen\n\t\t\t\t\tICON=$TEMPFILE2\n\t\t\t\t\t[ \"$RESIZE\" ] && mogrify -resize 32x32 $ICON\n\n\t\t\t\telse\n\t\t\t\t\t# This case generally happens when the hi-res icons are in new \"Vista\" icon format (bunch of compressed PNGs).\n\t\t\t\t\t# Icotool from icoutils 0.29.1 supports it already, but is unable to extract the one selected icon only.\n\n\t\t\t\t\t# Try to extract all icons:\n\t\t\t\t\ticotool --extract $TEMPFILE1 -o /tmp\n\n\t\t\t\t\t# There's always a 32x32x32 icon in \"Vista\" icons, but just to be sure:\n\t\t\t\t\t[ -s ${TEMPFILE1}_${INDEX}_32x32x${BITDEPTH}.png ] && ICON=${TEMPFILE1}_${INDEX}_32x32x${BITDEPTH}.png\n\n\t\t\t\tfi\n\n\t\t\t\tif [ \"$ICON\" ]\n\t\t\t\tthen\n\t\t\t\t\t# Verify that the selected icon is not just an empty box:\n\t\t\t\t\tif [ \"$(convert $ICON -filter box -resize 1x1! -format \"%[fx:u]\" info:)\" = '0' ]\n\t\t\t\t\tthen\n\t\t\t\t\t\t# Take next iteration with lower bit depth\n\t\t\t\t\t\tunset ICON\n\t\t\t\t\t\tcontinue\n\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tfi\n\n\t\t\t\telse\n\t\t\t\t\tbreak\n\n\t\t\t\tfi\n\n\t\t\tdone\n\n\t\tfi\n\n\tfi\n\nfi\n\n\n# Create the basic thumbnail:\nif [ \"$ICON\" ]\nthen\n\t# Calculate the backgroud color:\n\tCOLOR=$(\n\t\tconvert $ICON -background white -flatten -fill white \\\n\t\t-fuzz 40% -opaque black -level 33%,66% -scale 1x1! $TUNE txt:- \\\n\t\t| tail -1 \\\n\t\t| grep -o '#......'\n\t)\n\nelse\n\t# Just use the generic icon with backgroud color based on md5sum:\n\tHUE=$(md5sum \"$INPUTFILE\" | cut -c 1-2)\n\tHUE=$(printf \"%d\" 0x$HUE)\n\tCOLOR=\"hsb($HUE, 50%, 90%)\"\n\n\tLABEL=${INPUTFILE##*/}\n\tLABEL=$(sed 's/^./\\U&/; s/.$/\\L&/' <<< \"${LABEL:0:2}\")\n\n\t# Dim color for non-executable files:\n\tif [[ ! ${INPUTFILE##*.} = 'exe' ]]\n\tthen\n\t\tLIGHT=80\n\t\tTUNE_NX='-modulate 100,20'\n\tfi\n\n\tconvert -size 48x48 xc:none -gravity center -font Helvetica-Narrow-Bold -pointsize 24 \\\n\t-fill '#0000005C' -annotate $SHADOW+3 \"$LABEL\" \\\n\t-fill \"hsb($HUE, 3%, ${LIGHT:-100}%)\" -annotate +0+2 \"$LABEL\" \\\n\tpng:$TEMPFILE1\n\n\tICON=$TEMPFILE1\n\tOFFSET=-8\n\nfi\n\n# Create the final thumbnail:\nOFFSET=$(($OFFSET + 8))\n\nif [ \"$SHORTCUT\" ]\nthen\n\t# Variant with MS shortcut emblem in bottom left corner for .lnk files\n\tconvert -size 48x48 xc:none -fill \"$COLOR\" -draw \"$DRAW\" $TUNE_NX miff:- \\\n\t| composite -compose multiply /usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/template.png - miff:- \\\n\t| composite -geometry +$OFFSET+$OFFSET $ICON - png:- \\\n\t| composite -gravity southwest /usr/share/pixmaps/gnome-exe-thumbnailer/shortcut.png - $TEMPTHUMB\n\nelse\n\t# Plain variant\n\tconvert -size 48x48 xc:none -fill \"$COLOR\" -draw \"$DRAW\" $TUNE_NX miff:- \\\n\t| composite -compose multiply /usr/share/pixmaps/gnome-exe-thumbnailer/$THEME/template.png - png:- \\\n\t| composite -geometry +$OFFSET+$OFFSET $ICON - $TEMPTHUMB\n\nfi\n\n# Get the version number:\nif [[ ${INPUTFILE##*.} = 'msi' ]]\nthen\n\t# Look for the ProductVersion property using msitools' msiinfo if present\n\tif which msiinfo\n\tthen\n\t\tVERSION=$(msiinfo export \"$INPUTFILE\" 'Property' | grep 'ProductVersion' | cut -f 2)\n\telse\n\t\t# Try to get the version number from extended file properties at least:\n\t\tVERSION=$(\n\t\t\tfile \"$INPUTFILE\" \\\n\t\t\t| grep -o ', Subject: .*, Author: ' \\\n\t\t\t| egrep -o '[0-9]+\\.[0-9]+(\\.[0-9][0-9]?)?(beta)?' \\\n\t\t\t| head -1\n\t\t)\n\tfi\n\nelif [ $INPUTFILE_SIZE -lt $THUMBNAIL_LIMIT ]\nthen\n\t# Extract raw version resource:\n\twrestool --extract --raw --type=version \"$INPUTFILE\" > $TEMPFILE1\n\n\tif [ -s $TEMPFILE1 ]\n\tthen\n\t\t# Search for a sane version string.\n\t\t# This (especially the final regexp) took me really long time to figure out. Am I that lame?\n\t\tVERSION=$(< $TEMPFILE1 \\\n\t\t\ttr '\\0, ' '\\t.\\0' \\\n\t\t\t| sed 's/\\t\\t/_/g' \\\n\t\t\t| tr -c -d '[:print:]' \\\n\t\t\t| sed -r -n 's/.*Version[^0-9]*([0-9]+\\.[0-9]+(\\.[0-9][0-9]?)?).*/\\1/p'\n\t\t)\n\tfi\n\nfi\n\n\n# Put a version label on the thumbnail:\nif [ \"$VERSION\" ]\nthen\n\tconvert -font -*-clean-medium-r-*-*-6-*-*-*-*-*-*-* \\\n\t-background transparent -fill white label:\"$VERSION\" \\\n\t-trim -bordercolor '#00001090' -border 2 \\\n\t-fill '#00001048' \\\n\t-draw $'color 0,0 point\\ncolor 0,8 point' -flop \\\n\t-draw $'color 0,0 point\\ncolor 0,8 point' -flop \\\n\tmiff:- | composite -gravity southeast - $TEMPTHUMB $OUTPUTFILE\nelse\n\tcp $TEMPTHUMB $OUTPUTFILE\nfi\n\nrm $TEMPFILE1* $TEMPFILE2 $TEMPTHUMB\n\n"], "filenames": ["usr/bin/gnome-exe-thumbnailer"], "buggy_code_start_loc": [359], "buggy_code_end_loc": [378], "fixing_code_start_loc": [359], "fixing_code_end_loc": [363], "type": "CWE-94", "message": "gnome-exe-thumbnailer before 0.9.5 is prone to a VBScript Injection when generating thumbnails for MSI files, aka the \"Bad Taste\" issue. There is a local attack if the victim uses the GNOME Files file manager, and navigates to a directory containing a .msi file with VBScript code in its filename.", "other": {"cve": {"id": "CVE-2017-11421", "sourceIdentifier": "cve@mitre.org", "published": "2017-07-18T19:29:00.193", "lastModified": "2017-07-26T12:42:15.713", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "gnome-exe-thumbnailer before 0.9.5 is prone to a VBScript Injection when generating thumbnails for MSI files, aka the \"Bad Taste\" issue. There is a local attack if the victim uses the GNOME Files file manager, and navigates to a directory containing a .msi file with VBScript code in its filename."}, {"lang": "es", "value": "\"gnome-exe-thumbnailer anterior a versi\u00f3n 0.9.5, es susceptible a una inyecci\u00f3n VBScript cuando se generan miniaturas (thumbnails) para archivos MSI, tambi\u00e9n se conoce como el problema \"\"Bad Taste\"\". Se presenta un ataque local si la v\u00edctima utiliza el administrador de archivos GNOME Files y navega en un directorio que contiene un archivo .msi con el c\u00f3digo de VBScript en su nombre de archivo."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 7.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 1.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:L/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "LOCAL", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 4.6}, "baseSeverity": "MEDIUM", "exploitabilityScore": 3.9, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:gnome-exe-thumbnailer_project:gnome-exe-thumbnailer:*:*:*:*:*:*:*:*", "versionEndIncluding": "0.9.4", "matchCriteriaId": "9BE7335B-A720-4AD6-874E-366A8BCFB1D5"}]}]}], "references": [{"url": "http://news.dieweltistgarnichtso.net/posts/gnome-thumbnailer-msi-fail.html", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.securityfocus.com/bid/99922", "source": "cve@mitre.org"}, {"url": "https://bugs.debian.org/868705", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Third Party Advisory"]}, {"url": "https://github.com/gnome-exe-thumbnailer/gnome-exe-thumbnailer/commit/1d8e3102dd8fd23431ae6127d14a236da6b4a4a5", "source": "cve@mitre.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/gnome-exe-thumbnailer/gnome-exe-thumbnailer/commit/1d8e3102dd8fd23431ae6127d14a236da6b4a4a5"}}