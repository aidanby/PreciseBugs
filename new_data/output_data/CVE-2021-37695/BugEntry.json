{"buggy_code": ["\ufeff/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n( function() {\n\tvar cssStyle = CKEDITOR.htmlParser.cssStyle,\n\t\tcssLength = CKEDITOR.tools.cssLength;\n\n\tvar cssLengthRegex = /^((?:\\d*(?:\\.\\d+))|(?:\\d+))(.*)?$/i;\n\n\t// Replacing the former CSS length value with the later one, with\n\t// adjustment to the length  unit.\n\tfunction replaceCssLength( length1, length2 ) {\n\t\tvar parts1 = cssLengthRegex.exec( length1 ),\n\t\t\tparts2 = cssLengthRegex.exec( length2 );\n\n\t\t// Omit pixel length unit when necessary,\n\t\t// e.g. replaceCssLength( 10, '20px' ) -> 20\n\t\tif ( parts1 ) {\n\t\t\tif ( !parts1[ 2 ] && parts2[ 2 ] == 'px' )\n\t\t\t\treturn parts2[ 1 ];\n\t\t\tif ( parts1[ 2 ] == 'px' && !parts2[ 2 ] )\n\t\t\t\treturn parts2[ 1 ] + 'px';\n\t\t}\n\n\t\treturn length2;\n\t}\n\n\tvar htmlFilterRules = {\n\t\telements: {\n\t\t\t$: function( element ) {\n\t\t\t\tvar attributes = element.attributes,\n\t\t\t\t\trealHtml = attributes && attributes[ 'data-cke-realelement' ],\n\t\t\t\t\trealFragment = realHtml && new CKEDITOR.htmlParser.fragment.fromHtml( decodeURIComponent( realHtml ) ),\n\t\t\t\t\trealElement = realFragment && realFragment.children[ 0 ];\n\n\t\t\t\t// Width/height in the fake object are subjected to clone into the real element.\n\t\t\t\tif ( realElement && element.attributes[ 'data-cke-resizable' ] ) {\n\t\t\t\t\tvar styles = new cssStyle( element ).rules,\n\t\t\t\t\t\trealAttrs = realElement.attributes,\n\t\t\t\t\t\twidth = styles.width,\n\t\t\t\t\t\theight = styles.height;\n\n\t\t\t\t\twidth && ( realAttrs.width = replaceCssLength( realAttrs.width, width ) );\n\t\t\t\t\theight && ( realAttrs.height = replaceCssLength( realAttrs.height, height ) );\n\t\t\t\t}\n\n\t\t\t\treturn realElement;\n\t\t\t}\n\t\t}\n\t};\n\n\tCKEDITOR.plugins.add( 'fakeobjects', {\n\t\t// jscs:disable maximumLineLength\n\t\tlang: 'af,ar,az,bg,bn,bs,ca,cs,cy,da,de,de-ch,el,en,en-au,en-ca,en-gb,eo,es,es-mx,et,eu,fa,fi,fo,fr,fr-ca,gl,gu,he,hi,hr,hu,id,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,oc,pl,pt,pt-br,ro,ru,si,sk,sl,sq,sr,sr-latn,sv,th,tr,tt,ug,uk,vi,zh,zh-cn', // %REMOVE_LINE_CORE%\n\t\t// jscs:enable maximumLineLength\n\n\t\tinit: function( editor ) {\n\t\t\t// Allow image with all styles and classes plus src, alt and title attributes.\n\t\t\t// We need them when fakeobject is pasted.\n\t\t\teditor.filter.allow( 'img[!data-cke-realelement,src,alt,title](*){*}', 'fakeobjects' );\n\t\t},\n\n\t\tafterInit: function( editor ) {\n\t\t\tvar dataProcessor = editor.dataProcessor,\n\t\t\t\thtmlFilter = dataProcessor && dataProcessor.htmlFilter;\n\n\t\t\tif ( htmlFilter ) {\n\t\t\t\thtmlFilter.addRules( htmlFilterRules, {\n\t\t\t\t\tapplyToAll: true\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/**\n\t * Creates fake {@link CKEDITOR.dom.element} based on real element.\n\t * Fake element is an img with special attributes, which keep real element properties.\n\t *\n\t * @member CKEDITOR.editor\n\t * @param {CKEDITOR.dom.element} realElement Real element to transform.\n\t * @param {String} className Class name which will be used as class of fake element.\n\t * @param {String} realElementType Stores type of fake element.\n\t * @param {Boolean} isResizable Keeps information if element is resizable.\n\t * @returns {CKEDITOR.dom.element} Fake element.\n\t */\n\tCKEDITOR.editor.prototype.createFakeElement = function( realElement, className, realElementType, isResizable ) {\n\t\tvar lang = this.lang.fakeobjects,\n\t\t\tlabel = lang[ realElementType ] || lang.unknown;\n\n\t\tvar attributes = {\n\t\t\t'class': className,\n\t\t\t'data-cke-realelement': encodeURIComponent( realElement.getOuterHtml() ),\n\t\t\t'data-cke-real-node-type': realElement.type,\n\t\t\talt: label,\n\t\t\ttitle: label,\n\t\t\talign: realElement.getAttribute( 'align' ) || ''\n\t\t};\n\n\t\t// Do not set \"src\" on high-contrast so the alt text is displayed. (https://dev.ckeditor.com/ticket/8945)\n\t\tif ( !CKEDITOR.env.hc )\n\t\t\tattributes.src = CKEDITOR.tools.transparentImageData;\n\n\t\tif ( realElementType )\n\t\t\tattributes[ 'data-cke-real-element-type' ] = realElementType;\n\n\t\tif ( isResizable ) {\n\t\t\tattributes[ 'data-cke-resizable' ] = isResizable;\n\n\t\t\tvar fakeStyle = new cssStyle();\n\n\t\t\tvar width = realElement.getAttribute( 'width' ),\n\t\t\t\theight = realElement.getAttribute( 'height' );\n\n\t\t\twidth && ( fakeStyle.rules.width = cssLength( width ) );\n\t\t\theight && ( fakeStyle.rules.height = cssLength( height ) );\n\t\t\tfakeStyle.populate( attributes );\n\t\t}\n\n\t\treturn this.document.createElement( 'img', { attributes: attributes } );\n\t};\n\n\t/**\n\t * Creates fake {@link CKEDITOR.htmlParser.element} based on real element.\n\t *\n\t * @member CKEDITOR.editor\n\t * @param {CKEDITOR.dom.element} realElement Real element to transform.\n\t * @param {String} className Class name which will be used as class of fake element.\n\t * @param {String} realElementType Store type of fake element.\n\t * @param {Boolean} isResizable Keep information if element is resizable.\n\t * @returns {CKEDITOR.htmlParser.element} Fake htmlParser element.\n\t */\n\tCKEDITOR.editor.prototype.createFakeParserElement = function( realElement, className, realElementType, isResizable ) {\n\t\tvar lang = this.lang.fakeobjects,\n\t\t\tlabel = lang[ realElementType ] || lang.unknown,\n\t\t\thtml;\n\n\t\tvar writer = new CKEDITOR.htmlParser.basicWriter();\n\t\trealElement.writeHtml( writer );\n\t\thtml = writer.getHtml();\n\n\t\tvar attributes = {\n\t\t\t'class': className,\n\t\t\t'data-cke-realelement': encodeURIComponent( html ),\n\t\t\t'data-cke-real-node-type': realElement.type,\n\t\t\talt: label,\n\t\t\ttitle: label,\n\t\t\talign: realElement.attributes.align || ''\n\t\t};\n\n\t\t// Do not set \"src\" on high-contrast so the alt text is displayed. (https://dev.ckeditor.com/ticket/8945)\n\t\tif ( !CKEDITOR.env.hc )\n\t\t\tattributes.src = CKEDITOR.tools.transparentImageData;\n\n\t\tif ( realElementType )\n\t\t\tattributes[ 'data-cke-real-element-type' ] = realElementType;\n\n\t\tif ( isResizable ) {\n\t\t\tattributes[ 'data-cke-resizable' ] = isResizable;\n\t\t\tvar realAttrs = realElement.attributes,\n\t\t\t\tfakeStyle = new cssStyle();\n\n\t\t\tvar width = realAttrs.width,\n\t\t\t\theight = realAttrs.height;\n\n\t\t\twidth !== undefined && ( fakeStyle.rules.width = cssLength( width ) );\n\t\t\theight !== undefined && ( fakeStyle.rules.height = cssLength( height ) );\n\t\t\tfakeStyle.populate( attributes );\n\t\t}\n\n\t\treturn new CKEDITOR.htmlParser.element( 'img', attributes );\n\t};\n\n\t/**\n\t * Creates {@link CKEDITOR.dom.element} from fake element.\n\t *\n\t * @member CKEDITOR.editor\n\t * @param {CKEDITOR.dom.element} fakeElement Fake element to transform.\n\t * @returns {CKEDITOR.dom.element/null} Returns real element or `null` if transformed element wasn't fake.\n\t */\n\tCKEDITOR.editor.prototype.restoreRealElement = function( fakeElement ) {\n\t\tif ( fakeElement.data( 'cke-real-node-type' ) != CKEDITOR.NODE_ELEMENT )\n\t\t\treturn null;\n\n\t\tvar element = CKEDITOR.dom.element.createFromHtml( decodeURIComponent( fakeElement.data( 'cke-realelement' ) ), this.document );\n\n\t\tif ( fakeElement.data( 'cke-resizable' ) ) {\n\t\t\tvar width = fakeElement.getStyle( 'width' ),\n\t\t\t\theight = fakeElement.getStyle( 'height' );\n\n\t\t\twidth && element.setAttribute( 'width', replaceCssLength( element.getAttribute( 'width' ), width ) );\n\t\t\theight && element.setAttribute( 'height', replaceCssLength( element.getAttribute( 'height' ), height ) );\n\t\t}\n\n\t\treturn element;\n\t};\n\n} )();\n", "\ufeff/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n( function() {\n\tvar flashFilenameRegex = /\\.swf(?:$|\\?)/i;\n\n\tfunction isFlashEmbed( element ) {\n\t\tvar attributes = element.attributes;\n\n\t\treturn ( attributes.type == 'application/x-shockwave-flash' || flashFilenameRegex.test( attributes.src || '' ) );\n\t}\n\n\tfunction createFakeElement( editor, realElement ) {\n\t\treturn editor.createFakeParserElement( realElement, 'cke_flash', 'flash', true );\n\t}\n\n\tCKEDITOR.plugins.add( 'flash', {\n\t\trequires: 'dialog,fakeobjects',\n\t\t// jscs:disable maximumLineLength\n\t\tlang: 'af,ar,az,bg,bn,bs,ca,cs,cy,da,de,de-ch,el,en,en-au,en-ca,en-gb,eo,es,es-mx,et,eu,fa,fi,fo,fr,fr-ca,gl,gu,he,hi,hr,hu,id,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,oc,pl,pt,pt-br,ro,ru,si,sk,sl,sq,sr,sr-latn,sv,th,tr,tt,ug,uk,vi,zh,zh-cn', // %REMOVE_LINE_CORE%\n\t\t// jscs:enable maximumLineLength\n\t\ticons: 'flash', // %REMOVE_LINE_CORE%\n\t\thidpi: true, // %REMOVE_LINE_CORE%\n\t\tonLoad: function() {\n\t\t\tCKEDITOR.addCss( 'img.cke_flash' +\n\t\t\t\t'{' +\n\t\t\t\t\t'background-image: url(' + CKEDITOR.getUrl( this.path + 'images/placeholder.png' ) + ');' +\n\t\t\t\t\t'background-position: center center;' +\n\t\t\t\t\t'background-repeat: no-repeat;' +\n\t\t\t\t\t'border: 1px solid #a9a9a9;' +\n\t\t\t\t\t'width: 80px;' +\n\t\t\t\t\t'height: 80px;' +\n\t\t\t\t'}'\n\t\t\t\t);\n\n\t\t},\n\t\tinit: function( editor ) {\n\t\t\tvar allowed = 'object[classid,codebase,height,hspace,vspace,width];' +\n\t\t\t\t'param[name,value];' +\n\t\t\t\t'embed[height,hspace,pluginspage,src,type,vspace,width]';\n\n\t\t\tif ( CKEDITOR.dialog.isTabEnabled( editor, 'flash', 'properties' ) )\n\t\t\t\tallowed += ';object[align]; embed[allowscriptaccess,quality,scale,wmode]';\n\t\t\tif ( CKEDITOR.dialog.isTabEnabled( editor, 'flash', 'advanced' ) )\n\t\t\t\tallowed += ';object[id]{*}; embed[bgcolor]{*}(*)';\n\n\t\t\teditor.addCommand( 'flash', new CKEDITOR.dialogCommand( 'flash', {\n\t\t\t\tallowedContent: allowed,\n\t\t\t\trequiredContent: 'embed'\n\t\t\t} ) );\n\t\t\teditor.ui.addButton && editor.ui.addButton( 'Flash', {\n\t\t\t\tlabel: editor.lang.common.flash,\n\t\t\t\tcommand: 'flash',\n\t\t\t\ttoolbar: 'insert,20'\n\t\t\t} );\n\t\t\tCKEDITOR.dialog.add( 'flash', this.path + 'dialogs/flash.js' );\n\n\t\t\t// If the \"menu\" plugin is loaded, register the menu items.\n\t\t\tif ( editor.addMenuItems ) {\n\t\t\t\teditor.addMenuItems( {\n\t\t\t\t\tflash: {\n\t\t\t\t\t\tlabel: editor.lang.flash.properties,\n\t\t\t\t\t\tcommand: 'flash',\n\t\t\t\t\t\tgroup: 'flash'\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\teditor.on( 'doubleclick', function( evt ) {\n\t\t\t\tvar element = evt.data.element;\n\n\t\t\t\tif ( element.is( 'img' ) && element.data( 'cke-real-element-type' ) == 'flash' )\n\t\t\t\t\tevt.data.dialog = 'flash';\n\t\t\t} );\n\n\t\t\t// If the \"contextmenu\" plugin is loaded, register the listeners.\n\t\t\tif ( editor.contextMenu ) {\n\t\t\t\teditor.contextMenu.addListener( function( element ) {\n\t\t\t\t\tif ( element && element.is( 'img' ) && !element.isReadOnly() && element.data( 'cke-real-element-type' ) == 'flash' )\n\t\t\t\t\t\treturn { flash: CKEDITOR.TRISTATE_OFF };\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tafterInit: function( editor ) {\n\t\t\tvar dataProcessor = editor.dataProcessor,\n\t\t\t\tdataFilter = dataProcessor && dataProcessor.dataFilter;\n\n\t\t\tif ( dataFilter ) {\n\t\t\t\tdataFilter.addRules( {\n\t\t\t\t\telements: {\n\t\t\t\t\t\t'cke:object': function( element ) {\n\t\t\t\t\t\t\tvar attributes = element.attributes,\n\t\t\t\t\t\t\t\tclassId = attributes.classid && String( attributes.classid ).toLowerCase();\n\n\t\t\t\t\t\t\tif ( !classId && !isFlashEmbed( element ) ) {\n\t\t\t\t\t\t\t\t// Look for the inner <embed>\n\t\t\t\t\t\t\t\tfor ( var i = 0; i < element.children.length; i++ ) {\n\t\t\t\t\t\t\t\t\tif ( element.children[ i ].name == 'cke:embed' ) {\n\t\t\t\t\t\t\t\t\t\tif ( !isFlashEmbed( element.children[ i ] ) )\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\t\t\treturn createFakeElement( editor, element );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn createFakeElement( editor, element );\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t'cke:embed': function( element ) {\n\t\t\t\t\t\t\tif ( !isFlashEmbed( element ) )\n\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\treturn createFakeElement( editor, element );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 5 );\n\t\t\t}\n\t\t}\n\t} );\n} )();\n\nCKEDITOR.tools.extend( CKEDITOR.config, {\n\t/**\n\t * Save as `<embed>` tag only. This tag is unrecommended.\n\t *\n\t * @cfg {Boolean} [flashEmbedTagOnly=false]\n\t * @member CKEDITOR.config\n\t */\n\tflashEmbedTagOnly: false,\n\n\t/**\n\t * Add `<embed>` tag as alternative: `<object><embed></embed></object>`.\n\t *\n\t * @cfg {Boolean} [flashAddEmbedTag=false]\n\t * @member CKEDITOR.config\n\t */\n\tflashAddEmbedTag: true,\n\n\t/**\n\t * Use {@link #flashEmbedTagOnly} and {@link #flashAddEmbedTag} values on edit.\n\t *\n\t * @cfg {Boolean} [flashConvertOnEdit=false]\n\t * @member CKEDITOR.config\n\t */\n\tflashConvertOnEdit: false\n} );\n", "/* bender-tags: editor */\n/* bender-ckeditor-plugins: fakeobjects */\n\n'use strict';\n\n// Shorthand for creating a fake object element.\n// @returns {CKEDITOR.dom.element}\nfunction fake( editor, elHtml, className, type ) {\n\tvar el = CKEDITOR.dom.element.createFromHtml( elHtml );\n\n\treturn editor.createFakeElement( el, className || 'foo', type || 'foo' );\n}\n\n// Shorthand for creating a fake object element.\n// @returns {String} Element's outer HTML.\nfunction fakeHtml( editor, elHtml, className, type ) {\n\treturn fake( editor, elHtml, className, type ).getOuterHtml();\n}\n\nbender.editors = {\n\teditor: {\n\t\tname: 'editor1'\n\t}\n};\n\nbender.test( {\n\t'test downcasting': function() {\n\t\tvar editor = this.editors.editor;\n\n\t\teditor.editable().setHtml( '<p>' + fakeHtml( editor, '<em>foo</em>' ) + '</p>' );\n\t\tassert.areSame( '<p><em>foo</em></p>', editor.getData() );\n\t},\n\n\t// https://dev.ckeditor.com/ticket/11850\n\t'test downcasting non-editable element': function() {\n\t\tvar editor = this.editors.editor,\n\t\t\tel = fake( editor, '<em>foo</em>' );\n\n\t\tel.setAttribute( 'contenteditable', 'false' );\n\n\t\teditor.editable().setHtml( '<p>' + el.getOuterHtml() + '</p>' );\n\t\tassert.areSame( '<p><em>foo</em></p>', editor.getData() );\n\t}\n} );\n"], "fixing_code": ["\ufeff/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n( function() {\n\tvar cssStyle = CKEDITOR.htmlParser.cssStyle,\n\t\tcssLength = CKEDITOR.tools.cssLength;\n\n\tvar cssLengthRegex = /^((?:\\d*(?:\\.\\d+))|(?:\\d+))(.*)?$/i;\n\n\t// Replacing the former CSS length value with the later one, with\n\t// adjustment to the length  unit.\n\tfunction replaceCssLength( length1, length2 ) {\n\t\tvar parts1 = cssLengthRegex.exec( length1 ),\n\t\t\tparts2 = cssLengthRegex.exec( length2 );\n\n\t\t// Omit pixel length unit when necessary,\n\t\t// e.g. replaceCssLength( 10, '20px' ) -> 20\n\t\tif ( parts1 ) {\n\t\t\tif ( !parts1[ 2 ] && parts2[ 2 ] == 'px' )\n\t\t\t\treturn parts2[ 1 ];\n\t\t\tif ( parts1[ 2 ] == 'px' && !parts2[ 2 ] )\n\t\t\t\treturn parts2[ 1 ] + 'px';\n\t\t}\n\n\t\treturn length2;\n\t}\n\n\tCKEDITOR.plugins.add( 'fakeobjects', {\n\t\t// jscs:disable maximumLineLength\n\t\tlang: 'af,ar,az,bg,bn,bs,ca,cs,cy,da,de,de-ch,el,en,en-au,en-ca,en-gb,eo,es,es-mx,et,eu,fa,fi,fo,fr,fr-ca,gl,gu,he,hi,hr,hu,id,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,oc,pl,pt,pt-br,ro,ru,si,sk,sl,sq,sr,sr-latn,sv,th,tr,tt,ug,uk,vi,zh,zh-cn', // %REMOVE_LINE_CORE%\n\t\t// jscs:enable maximumLineLength\n\n\t\tinit: function( editor ) {\n\t\t\t// Allow image with all styles and classes plus src, alt and title attributes.\n\t\t\t// We need them when fakeobject is pasted.\n\t\t\teditor.filter.allow( 'img[!data-cke-realelement,src,alt,title](*){*}', 'fakeobjects' );\n\t\t},\n\n\t\tafterInit: function( editor ) {\n\t\t\tvar dataProcessor = editor.dataProcessor,\n\t\t\t\thtmlFilter = dataProcessor && dataProcessor.htmlFilter;\n\n\t\t\tif ( htmlFilter ) {\n\t\t\t\thtmlFilter.addRules( createHtmlFilterRules( editor ), {\n\t\t\t\t\tapplyToAll: true\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t} );\n\n\t/**\n\t * Creates fake {@link CKEDITOR.dom.element} based on real element.\n\t * Fake element is an img with special attributes, which keep real element properties.\n\t *\n\t * @member CKEDITOR.editor\n\t * @param {CKEDITOR.dom.element} realElement Real element to transform.\n\t * @param {String} className Class name which will be used as class of fake element.\n\t * @param {String} realElementType Stores type of fake element.\n\t * @param {Boolean} isResizable Keeps information if element is resizable.\n\t * @returns {CKEDITOR.dom.element} Fake element.\n\t */\n\tCKEDITOR.editor.prototype.createFakeElement = function( realElement, className, realElementType, isResizable ) {\n\t\tvar lang = this.lang.fakeobjects,\n\t\t\tlabel = lang[ realElementType ] || lang.unknown;\n\n\t\tvar attributes = {\n\t\t\t'class': className,\n\t\t\t'data-cke-realelement': encodeURIComponent( realElement.getOuterHtml() ),\n\t\t\t'data-cke-real-node-type': realElement.type,\n\t\t\talt: label,\n\t\t\ttitle: label,\n\t\t\talign: realElement.getAttribute( 'align' ) || ''\n\t\t};\n\n\t\t// Do not set \"src\" on high-contrast so the alt text is displayed. (https://dev.ckeditor.com/ticket/8945)\n\t\tif ( !CKEDITOR.env.hc )\n\t\t\tattributes.src = CKEDITOR.tools.transparentImageData;\n\n\t\tif ( realElementType )\n\t\t\tattributes[ 'data-cke-real-element-type' ] = realElementType;\n\n\t\tif ( isResizable ) {\n\t\t\tattributes[ 'data-cke-resizable' ] = isResizable;\n\n\t\t\tvar fakeStyle = new cssStyle();\n\n\t\t\tvar width = realElement.getAttribute( 'width' ),\n\t\t\t\theight = realElement.getAttribute( 'height' );\n\n\t\t\twidth && ( fakeStyle.rules.width = cssLength( width ) );\n\t\t\theight && ( fakeStyle.rules.height = cssLength( height ) );\n\t\t\tfakeStyle.populate( attributes );\n\t\t}\n\n\t\treturn this.document.createElement( 'img', { attributes: attributes } );\n\t};\n\n\t/**\n\t * Creates fake {@link CKEDITOR.htmlParser.element} based on real element.\n\t *\n\t * @member CKEDITOR.editor\n\t * @param {CKEDITOR.dom.element} realElement Real element to transform.\n\t * @param {String} className Class name which will be used as class of fake element.\n\t * @param {String} realElementType Store type of fake element.\n\t * @param {Boolean} isResizable Keep information if element is resizable.\n\t * @returns {CKEDITOR.htmlParser.element} Fake htmlParser element.\n\t */\n\tCKEDITOR.editor.prototype.createFakeParserElement = function( realElement, className, realElementType, isResizable ) {\n\t\tvar lang = this.lang.fakeobjects,\n\t\t\tlabel = lang[ realElementType ] || lang.unknown,\n\t\t\thtml;\n\n\t\tvar writer = new CKEDITOR.htmlParser.basicWriter();\n\t\trealElement.writeHtml( writer );\n\t\thtml = writer.getHtml();\n\n\t\tvar attributes = {\n\t\t\t'class': className,\n\t\t\t'data-cke-realelement': encodeURIComponent( html ),\n\t\t\t'data-cke-real-node-type': realElement.type,\n\t\t\talt: label,\n\t\t\ttitle: label,\n\t\t\talign: realElement.attributes.align || ''\n\t\t};\n\n\t\t// Do not set \"src\" on high-contrast so the alt text is displayed. (https://dev.ckeditor.com/ticket/8945)\n\t\tif ( !CKEDITOR.env.hc )\n\t\t\tattributes.src = CKEDITOR.tools.transparentImageData;\n\n\t\tif ( realElementType )\n\t\t\tattributes[ 'data-cke-real-element-type' ] = realElementType;\n\n\t\tif ( isResizable ) {\n\t\t\tattributes[ 'data-cke-resizable' ] = isResizable;\n\t\t\tvar realAttrs = realElement.attributes,\n\t\t\t\tfakeStyle = new cssStyle();\n\n\t\t\tvar width = realAttrs.width,\n\t\t\t\theight = realAttrs.height;\n\n\t\t\twidth !== undefined && ( fakeStyle.rules.width = cssLength( width ) );\n\t\t\theight !== undefined && ( fakeStyle.rules.height = cssLength( height ) );\n\t\t\tfakeStyle.populate( attributes );\n\t\t}\n\n\t\treturn new CKEDITOR.htmlParser.element( 'img', attributes );\n\t};\n\n\t/**\n\t * Creates {@link CKEDITOR.dom.element} from fake element.\n\t *\n\t * @member CKEDITOR.editor\n\t * @param {CKEDITOR.dom.element} fakeElement Fake element to transform.\n\t * @returns {CKEDITOR.dom.element/null} Returns real element or `null` if transformed element wasn't fake.\n\t */\n\tCKEDITOR.editor.prototype.restoreRealElement = function( fakeElement ) {\n\t\tif ( fakeElement.data( 'cke-real-node-type' ) != CKEDITOR.NODE_ELEMENT )\n\t\t\treturn null;\n\n\t\tvar realElementHtml = decodeURIComponent( fakeElement.data( 'cke-realelement' ) ),\n\t\t\tfilteredHtml = filterHtml( this, realElementHtml ),\n\t\t\trealElement = CKEDITOR.dom.element.createFromHtml( filteredHtml, this.document );\n\n\t\tif ( fakeElement.data( 'cke-resizable' ) ) {\n\t\t\tvar width = fakeElement.getStyle( 'width' ),\n\t\t\t\theight = fakeElement.getStyle( 'height' );\n\n\t\t\twidth && realElement.setAttribute( 'width', replaceCssLength( realElement.getAttribute( 'width' ), width ) );\n\t\t\theight && realElement.setAttribute( 'height', replaceCssLength( realElement.getAttribute( 'height' ), height ) );\n\t\t}\n\n\t\treturn realElement;\n\t};\n\n\tfunction createHtmlFilterRules( editor ) {\n\t\treturn {\n\t\t\telements: {\n\t\t\t\t$: function( element ) {\n\t\t\t\t\tvar attributes = element.attributes,\n\t\t\t\t\t\trealHtml = attributes && attributes[ 'data-cke-realelement' ],\n\t\t\t\t\t\tfilteredRealHtml = filterHtml( editor, decodeURIComponent( realHtml ) ),\n\t\t\t\t\t\trealFragment = realHtml && new CKEDITOR.htmlParser.fragment.fromHtml( filteredRealHtml ),\n\t\t\t\t\t\trealElement = realFragment && realFragment.children[ 0 ];\n\n\t\t\t\t\t// Width/height in the fake object are subjected to clone into the real element.\n\t\t\t\t\tif ( realElement && element.attributes[ 'data-cke-resizable' ] ) {\n\t\t\t\t\t\tvar styles = new cssStyle( element ).rules,\n\t\t\t\t\t\t\trealAttrs = realElement.attributes,\n\t\t\t\t\t\t\twidth = styles.width,\n\t\t\t\t\t\t\theight = styles.height;\n\n\t\t\t\t\t\twidth && ( realAttrs.width = replaceCssLength( realAttrs.width, width ) );\n\t\t\t\t\t\theight && ( realAttrs.height = replaceCssLength( realAttrs.height, height ) );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn realElement;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\t// Content stored inside fake element is raw and should be explicitly\n\t// passed to ACF filter. Additionally some elements can have prefixes in tag names,\n\t// which should be removed before filtering and added after it.\n\tfunction filterHtml( editor, html ) {\n\t\tvar unprefixedElements = [],\n\t\t\tprefixRegex = /^cke:/i,\n\t\t\tdataFilter =  new CKEDITOR.htmlParser.filter( {\n\t\t\t\telements: {\n\t\t\t\t\t'^': function( element ) {\n\t\t\t\t\t\tif ( prefixRegex.test( element.name ) ) {\n\t\t\t\t\t\t\telement.name = element.name.replace( prefixRegex, '' );\n\n\t\t\t\t\t\t\tunprefixedElements.push( element );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tiframe: function( element ) {\n\t\t\t\t\t\telement.children = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ),\n\t\t\tacfFilter = editor.activeFilter,\n\t\t\twriter = new CKEDITOR.htmlParser.basicWriter(),\n\t\t\tfragment = CKEDITOR.htmlParser.fragment.fromHtml( html );\n\n\t\tdataFilter.applyTo( fragment );\n\t\tacfFilter.applyTo( fragment );\n\n\t\tCKEDITOR.tools.array.forEach( unprefixedElements, function( element ) {\n\t\t\telement.name = 'cke:' + element.name;\n\t\t} );\n\n\t\tfragment.writeHtml( writer );\n\n\t\treturn writer.getHtml();\n\t}\n} )();\n", "\ufeff/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n( function() {\n\tvar flashFilenameRegex = /\\.swf(?:$|\\?)/i;\n\n\tfunction isFlashEmbed( element ) {\n\t\tvar attributes = element.attributes;\n\n\t\treturn ( attributes.type == 'application/x-shockwave-flash' || flashFilenameRegex.test( attributes.src || '' ) );\n\t}\n\n\tfunction createFakeElement( editor, realElement ) {\n\t\treturn editor.createFakeParserElement( realElement, 'cke_flash', 'flash', true );\n\t}\n\n\tCKEDITOR.plugins.add( 'flash', {\n\t\trequires: 'dialog,fakeobjects',\n\t\t// jscs:disable maximumLineLength\n\t\tlang: 'af,ar,az,bg,bn,bs,ca,cs,cy,da,de,de-ch,el,en,en-au,en-ca,en-gb,eo,es,es-mx,et,eu,fa,fi,fo,fr,fr-ca,gl,gu,he,hi,hr,hu,id,is,it,ja,ka,km,ko,ku,lt,lv,mk,mn,ms,nb,nl,no,oc,pl,pt,pt-br,ro,ru,si,sk,sl,sq,sr,sr-latn,sv,th,tr,tt,ug,uk,vi,zh,zh-cn', // %REMOVE_LINE_CORE%\n\t\t// jscs:enable maximumLineLength\n\t\ticons: 'flash', // %REMOVE_LINE_CORE%\n\t\thidpi: true, // %REMOVE_LINE_CORE%\n\t\tonLoad: function() {\n\t\t\tCKEDITOR.addCss( 'img.cke_flash' +\n\t\t\t\t'{' +\n\t\t\t\t\t'background-image: url(' + CKEDITOR.getUrl( this.path + 'images/placeholder.png' ) + ');' +\n\t\t\t\t\t'background-position: center center;' +\n\t\t\t\t\t'background-repeat: no-repeat;' +\n\t\t\t\t\t'border: 1px solid #a9a9a9;' +\n\t\t\t\t\t'width: 80px;' +\n\t\t\t\t\t'height: 80px;' +\n\t\t\t\t'}'\n\t\t\t\t);\n\n\t\t},\n\t\tinit: function( editor ) {\n\t\t\tvar allowed = 'object[classid,codebase,height,hspace,vspace,width];' +\n\t\t\t\t'param[name,value];' +\n\t\t\t\t'embed[allowfullscreen,height,hspace,pluginspage,src,type,vspace,width]';\n\n\t\t\tif ( CKEDITOR.dialog.isTabEnabled( editor, 'flash', 'properties' ) )\n\t\t\t\tallowed += ';object[align]; embed[allowscriptaccess,quality,scale,wmode]';\n\t\t\tif ( CKEDITOR.dialog.isTabEnabled( editor, 'flash', 'advanced' ) )\n\t\t\t\tallowed += ';object[id]{*}; embed[bgcolor]{*}(*)';\n\n\t\t\teditor.addCommand( 'flash', new CKEDITOR.dialogCommand( 'flash', {\n\t\t\t\tallowedContent: allowed,\n\t\t\t\trequiredContent: 'embed'\n\t\t\t} ) );\n\t\t\teditor.ui.addButton && editor.ui.addButton( 'Flash', {\n\t\t\t\tlabel: editor.lang.common.flash,\n\t\t\t\tcommand: 'flash',\n\t\t\t\ttoolbar: 'insert,20'\n\t\t\t} );\n\t\t\tCKEDITOR.dialog.add( 'flash', this.path + 'dialogs/flash.js' );\n\n\t\t\t// If the \"menu\" plugin is loaded, register the menu items.\n\t\t\tif ( editor.addMenuItems ) {\n\t\t\t\teditor.addMenuItems( {\n\t\t\t\t\tflash: {\n\t\t\t\t\t\tlabel: editor.lang.flash.properties,\n\t\t\t\t\t\tcommand: 'flash',\n\t\t\t\t\t\tgroup: 'flash'\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\teditor.on( 'doubleclick', function( evt ) {\n\t\t\t\tvar element = evt.data.element;\n\n\t\t\t\tif ( element.is( 'img' ) && element.data( 'cke-real-element-type' ) == 'flash' )\n\t\t\t\t\tevt.data.dialog = 'flash';\n\t\t\t} );\n\n\t\t\t// If the \"contextmenu\" plugin is loaded, register the listeners.\n\t\t\tif ( editor.contextMenu ) {\n\t\t\t\teditor.contextMenu.addListener( function( element ) {\n\t\t\t\t\tif ( element && element.is( 'img' ) && !element.isReadOnly() && element.data( 'cke-real-element-type' ) == 'flash' )\n\t\t\t\t\t\treturn { flash: CKEDITOR.TRISTATE_OFF };\n\t\t\t\t} );\n\t\t\t}\n\t\t},\n\n\t\tafterInit: function( editor ) {\n\t\t\tvar dataProcessor = editor.dataProcessor,\n\t\t\t\tdataFilter = dataProcessor && dataProcessor.dataFilter;\n\n\t\t\tif ( dataFilter ) {\n\t\t\t\tdataFilter.addRules( {\n\t\t\t\t\telements: {\n\t\t\t\t\t\t'cke:object': function( element ) {\n\t\t\t\t\t\t\tvar attributes = element.attributes,\n\t\t\t\t\t\t\t\tclassId = attributes.classid && String( attributes.classid ).toLowerCase();\n\n\t\t\t\t\t\t\tif ( !classId && !isFlashEmbed( element ) ) {\n\t\t\t\t\t\t\t\t// Look for the inner <embed>\n\t\t\t\t\t\t\t\tfor ( var i = 0; i < element.children.length; i++ ) {\n\t\t\t\t\t\t\t\t\tif ( element.children[ i ].name == 'cke:embed' ) {\n\t\t\t\t\t\t\t\t\t\tif ( !isFlashEmbed( element.children[ i ] ) )\n\t\t\t\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\t\t\t\treturn createFakeElement( editor, element );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn createFakeElement( editor, element );\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t'cke:embed': function( element ) {\n\t\t\t\t\t\t\tif ( !isFlashEmbed( element ) )\n\t\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t\treturn createFakeElement( editor, element );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, 5 );\n\t\t\t}\n\t\t}\n\t} );\n} )();\n\nCKEDITOR.tools.extend( CKEDITOR.config, {\n\t/**\n\t * Save as `<embed>` tag only. This tag is unrecommended.\n\t *\n\t * @cfg {Boolean} [flashEmbedTagOnly=false]\n\t * @member CKEDITOR.config\n\t */\n\tflashEmbedTagOnly: false,\n\n\t/**\n\t * Add `<embed>` tag as alternative: `<object><embed></embed></object>`.\n\t *\n\t * @cfg {Boolean} [flashAddEmbedTag=false]\n\t * @member CKEDITOR.config\n\t */\n\tflashAddEmbedTag: true,\n\n\t/**\n\t * Use {@link #flashEmbedTagOnly} and {@link #flashAddEmbedTag} values on edit.\n\t *\n\t * @cfg {Boolean} [flashConvertOnEdit=false]\n\t * @member CKEDITOR.config\n\t */\n\tflashConvertOnEdit: false\n} );\n", "/* bender-tags: editor */\n/* bender-ckeditor-plugins: fakeobjects */\n\n'use strict';\n\n// Shorthand for creating a fake object element.\n// @returns {CKEDITOR.dom.element}\nfunction fake( editor, elHtml, className, type ) {\n\tvar el = CKEDITOR.dom.element.createFromHtml( elHtml );\n\n\treturn editor.createFakeElement( el, className || 'foo', type || 'foo' );\n}\n\n// Shorthand for creating a fake object element.\n// @returns {String} Element's outer HTML.\nfunction fakeHtml( editor, elHtml, className, type ) {\n\treturn fake( editor, elHtml, className, type ).getOuterHtml();\n}\n\nbender.editors = {\n\teditor: {\n\t\tname: 'editor1',\n\t\tconfig: {\n\t\t\textraAllowedContent: 'em'\n\t\t}\n\t}\n};\n\nbender.test( {\n\t'test downcasting': function() {\n\t\tvar editor = this.editors.editor;\n\n\t\teditor.editable().setHtml( '<p>' + fakeHtml( editor, '<em>foo</em>' ) + '</p>' );\n\t\tassert.areSame( '<p><em>foo</em></p>', editor.getData() );\n\t},\n\n\t// https://dev.ckeditor.com/ticket/11850\n\t'test downcasting non-editable element': function() {\n\t\tvar editor = this.editors.editor,\n\t\t\tel = fake( editor, '<em>foo</em>' );\n\n\t\tel.setAttribute( 'contenteditable', 'false' );\n\n\t\teditor.editable().setHtml( '<p>' + el.getOuterHtml() + '</p>' );\n\t\tassert.areSame( '<p><em>foo</em></p>', editor.getData() );\n\t}\n} );\n"], "filenames": ["plugins/fakeobjects/plugin.js", "plugins/flash/plugin.js", "tests/plugins/fakeobjects/fakeobjects.js"], "buggy_code_start_loc": [30, 42, 22], "buggy_code_end_loc": [198, 43, 23], "fixing_code_start_loc": [29, 42, 22], "fixing_code_end_loc": [239, 43, 26], "type": "CWE-79", "message": "ckeditor is an open source WYSIWYG HTML editor with rich content support. A potential vulnerability has been discovered in CKEditor 4 [Fake Objects](https://ckeditor.com/cke4/addon/fakeobjects) package. The vulnerability allowed to inject malformed Fake Objects HTML, which could result in executing JavaScript code. It affects all users using the CKEditor 4 plugins listed above at version < 4.16.2. The problem has been recognized and patched. The fix will be available in version 4.16.2.", "other": {"cve": {"id": "CVE-2021-37695", "sourceIdentifier": "security-advisories@github.com", "published": "2021-08-13T00:15:07.397", "lastModified": "2022-02-28T14:57:51.923", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "ckeditor is an open source WYSIWYG HTML editor with rich content support. A potential vulnerability has been discovered in CKEditor 4 [Fake Objects](https://ckeditor.com/cke4/addon/fakeobjects) package. The vulnerability allowed to inject malformed Fake Objects HTML, which could result in executing JavaScript code. It affects all users using the CKEditor 4 plugins listed above at version < 4.16.2. The problem has been recognized and patched. The fix will be available in version 4.16.2."}, {"lang": "es", "value": "ckeditor es un editor HTML WYSIWYG de c\u00f3digo abierto con soporte de contenido enriquecido.&#xa0;Se ha detectado una vulnerabilidad potencial en el paquete CKEditor 4 [Fake Objects] (https://ckeditor.com/cke4/addon/fakeobjects).&#xa0;La vulnerabilidad permiti\u00f3 inyectar Fake Objects HTML con formato malformado, lo que podr\u00eda resultar en una ejecuci\u00f3n de c\u00f3digo JavaScript.&#xa0;Afecta a todos los usuarios que utilizan los plugins de CKEditor 4 enumerados anteriormente en las versiones anteriores a 4.16.2.&#xa0;El problema ha sido reconocido y solucionado.&#xa0;La correcci\u00f3n estar\u00e1 disponible en la versi\u00f3n 4.16.2."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 7.3, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.1, "impactScore": 5.2}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:ckeditor:ckeditor:*:*:*:*:*:*:*:*", "versionEndExcluding": "4.16.2", "matchCriteriaId": "6BEAA71B-F9E5-441E-AB08-E76DAF0A32F8"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:33:*:*:*:*:*:*:*", "matchCriteriaId": "E460AA51-FCDA-46B9-AE97-E6676AA5E194"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:34:*:*:*:*:*:*:*", "matchCriteriaId": "A930E247-0B43-43CB-98FF-6CE7B8189835"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:oracle:application_express:*:*:*:*:*:*:*:*", "versionEndExcluding": "21.1.4", "matchCriteriaId": "485DEB26-3C1D-4FEC-A9C1-D95BFE3B967E"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:banking_party_management:2.7.0:*:*:*:*:*:*:*", "matchCriteriaId": "C542DC5E-6657-4178-9C69-46FD3C187D56"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:commerce_guided_search:11.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "2A3622F5-5976-4BBC-A147-FC8A6431EA79"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:commerce_merchandising:11.3.2:*:*:*:*:*:*:*", "matchCriteriaId": "C91E0944-A93B-4E6C-9547-4FC1A01DEAC6"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:documaker:12.6.3:*:*:*:*:*:*:*", "matchCriteriaId": "34019365-E6E3-4DBC-89EA-5783A29B61B0"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:documaker:12.6.4:*:*:*:*:*:*:*", "matchCriteriaId": "3A1427F8-50F3-45B2-8836-A80ADA70F431"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:financial_services_analytical_applications_infrastructure:*:*:*:*:*:*:*:*", "versionStartIncluding": "8.0.7", "versionEndIncluding": "8.1.1", "matchCriteriaId": "7EA4D3C5-6A7C-4421-88EF-445A96DBCE0C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:financial_services_analytical_applications_infrastructure:8.0.3:*:*:*:*:*:*:*", "matchCriteriaId": "F238CB66-886D-47E8-8DC0-7FC2025771EB"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:financial_services_model_management_and_governance:*:*:*:*:*:*:*:*", "versionStartIncluding": "8.0.8.0.0", "versionEndIncluding": "8.1.0.0.0", "matchCriteriaId": "2D0E8BB8-DB96-48F2-833A-D246193EEDD4"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:jd_edwards_enterpriseone_tools:*:*:*:*:*:*:*:*", "versionEndExcluding": "9.2.6.0", "matchCriteriaId": "86305E47-33E9-411C-B932-08C395C09982"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.57:*:*:*:*:*:*:*", "matchCriteriaId": "7E1E416B-920B-49A0-9523-382898C2979D"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.58:*:*:*:*:*:*:*", "matchCriteriaId": "D9DB4A14-2EF5-4B54-95D2-75E6CF9AA0A9"}, {"vulnerable": true, "criteria": "cpe:2.3:a:oracle:peoplesoft_enterprise_peopletools:8.59:*:*:*:*:*:*:*", "matchCriteriaId": "C8AF00C6-B97F-414D-A8DF-057E6BFD8597"}]}]}], "references": [{"url": "https://github.com/ckeditor/ckeditor4/commit/de3c001540715f9c3801aaa38a1917de46cfcf58", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/ckeditor/ckeditor4/security/advisories/GHSA-m94c-37g6-cjhc", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2021/11/msg00007.html", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/NYA354LJP47KCVJMTUO77ZCX3ZK42G3T/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/UVOYN2WKDPLKCNILIGEZM236ABQASLGW/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/WAGNWHFIQAVCP537KFFS2A2GDG66J7XD/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://www.oracle.com/security-alerts/cpujan2022.html", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://www.oracle.com/security-alerts/cpuoct2021.html", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/ckeditor/ckeditor4/commit/de3c001540715f9c3801aaa38a1917de46cfcf58"}}