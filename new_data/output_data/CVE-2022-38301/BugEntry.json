{"buggy_code": ["package io.onedev.server.web.page.project.builds.detail.artifacts;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.concurrent.Callable;\n\nimport org.apache.commons.compress.utils.IOUtils;\nimport org.apache.wicket.ajax.AjaxRequestTarget;\nimport org.apache.wicket.ajax.markup.html.AjaxLink;\nimport org.apache.wicket.ajax.markup.html.form.AjaxButton;\nimport org.apache.wicket.feedback.FencedFeedbackPanel;\nimport org.apache.wicket.markup.html.form.Form;\nimport org.apache.wicket.markup.html.form.TextField;\nimport org.apache.wicket.markup.html.panel.Panel;\nimport org.apache.wicket.model.Model;\nimport org.apache.wicket.model.PropertyModel;\nimport org.apache.wicket.util.lang.Bytes;\n\nimport io.onedev.commons.utils.FileUtils;\nimport io.onedev.commons.utils.LockUtils;\nimport io.onedev.server.OneDev;\nimport io.onedev.server.entitymanager.SettingManager;\nimport io.onedev.server.model.Build;\nimport io.onedev.server.util.FilenameUtils;\nimport io.onedev.server.web.component.dropzonefield.DropzoneField;\nimport io.onedev.server.web.util.FileUpload;\n\n@SuppressWarnings(\"serial\")\npublic abstract class ArtifactUploadPanel extends Panel {\n\n\tprivate String directory;\n\t\n\tprivate final Collection<FileUpload> uploads = new ArrayList<>();\n\t\n\tpublic ArtifactUploadPanel(String id) {\n\t\tsuper(id);\n\t}\n\n\t@Override\n\tprotected void onInitialize() {\n\t\tsuper.onInitialize();\n\t\t\n\t\tint maxUploadFileSize = OneDev.getInstance(SettingManager.class)\n\t\t\t\t.getPerformanceSetting().getMaxUploadFileSize();\n\t\t\n\t\tForm<?> form = new Form<Void>(\"form\");\n\t\tform.setMultiPart(true);\n\t\tform.setFileMaxSize(Bytes.megabytes(maxUploadFileSize));\n\t\tadd(form);\n\t\t\n\t\tform.add(new AjaxLink<Void>(\"close\") {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\tonCancel(target);\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tFencedFeedbackPanel feedback = new FencedFeedbackPanel(\"feedback\", form);\n\t\tfeedback.setOutputMarkupPlaceholderTag(true);\n\t\tform.add(feedback);\n\t\t\n\t\tDropzoneField dropzone = new DropzoneField(\n\t\t\t\t\"files\", \n\t\t\t\tnew PropertyModel<Collection<FileUpload>>(this, \"uploads\"), \n\t\t\t\tnull, 0, maxUploadFileSize);\n\t\tdropzone.setRequired(true).setLabel(Model.of(\"File\"));\n\t\tform.add(dropzone);\n\t\t\n\t\tform.add(new AjaxButton(\"upload\") {\n\n\t\t\t@Override\n\t\t\tprotected void onSubmit(AjaxRequestTarget target, Form<?> form) {\n\t\t\t\tsuper.onSubmit(target, form);\n\t\t\t\t\n\t\t\t\tLockUtils.write(getBuild().getArtifactsLockKey(), new Callable<Void>() {\n\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic Void call() throws Exception {\n\t\t\t\t\t\tFile artifactsDir = getBuild().getArtifactsDir();\n\t\t\t\t\t\tfor (FileUpload upload: uploads) {\n\t\t\t\t\t\t\tString filePath = FilenameUtils.sanitizeFilename(upload.getFileName());\n\t\t\t\t\t\t\tif (directory != null)\n\t\t\t\t\t\t\t\tfilePath = directory + \"/\" + filePath;\n\t\t\t\t\t\t\tFile file = new File(artifactsDir, filePath);\n\t\t\t\t\t\t\tFileUtils.createDir(file.getParentFile());\n\t\t\t\t\t\t\ttry (\tInputStream is = upload.getInputStream();\n\t\t\t\t\t\t\t\t\tOutputStream os = new FileOutputStream(file)) {\n\t\t\t\t\t\t\t\tIOUtils.copy(is, os);\n\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\tupload.release();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tonUploaded(target);\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected void onError(AjaxRequestTarget target, Form<?> form) {\n\t\t\t\tsuper.onError(target, form);\n\t\t\t\ttarget.add(feedback);\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tform.add(new TextField<String>(\"directory\", new PropertyModel<String>(this, \"directory\")));\n\t\t\n\t\tform.add(new AjaxLink<Void>(\"cancel\") {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\tonCancel(target);\n\t\t\t}\n\t\t\t\n\t\t});\n\t}\n\n\tpublic abstract void onUploaded(AjaxRequestTarget target);\n\t\n\tpublic abstract void onCancel(AjaxRequestTarget target);\n\t\n\tprotected abstract Build getBuild();\n\t\n}\n"], "fixing_code": ["package io.onedev.server.web.page.project.builds.detail.artifacts;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.InputStream;\nimport java.io.OutputStream;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.concurrent.Callable;\n\nimport org.apache.commons.compress.utils.IOUtils;\nimport org.apache.wicket.ajax.AjaxRequestTarget;\nimport org.apache.wicket.ajax.markup.html.AjaxLink;\nimport org.apache.wicket.ajax.markup.html.form.AjaxButton;\nimport org.apache.wicket.feedback.FencedFeedbackPanel;\nimport org.apache.wicket.markup.html.form.Form;\nimport org.apache.wicket.markup.html.form.TextField;\nimport org.apache.wicket.markup.html.panel.Panel;\nimport org.apache.wicket.model.Model;\nimport org.apache.wicket.model.PropertyModel;\nimport org.apache.wicket.util.lang.Bytes;\n\nimport io.onedev.commons.utils.FileUtils;\nimport io.onedev.commons.utils.LockUtils;\nimport io.onedev.server.OneDev;\nimport io.onedev.server.entitymanager.SettingManager;\nimport io.onedev.server.model.Build;\nimport io.onedev.server.util.FilenameUtils;\nimport io.onedev.server.web.component.dropzonefield.DropzoneField;\nimport io.onedev.server.web.util.FileUpload;\n\n@SuppressWarnings(\"serial\")\npublic abstract class ArtifactUploadPanel extends Panel {\n\n\tprivate String directory;\n\t\n\tprivate final Collection<FileUpload> uploads = new ArrayList<>();\n\t\n\tpublic ArtifactUploadPanel(String id) {\n\t\tsuper(id);\n\t}\n\n\t@Override\n\tprotected void onInitialize() {\n\t\tsuper.onInitialize();\n\t\t\n\t\tint maxUploadFileSize = OneDev.getInstance(SettingManager.class)\n\t\t\t\t.getPerformanceSetting().getMaxUploadFileSize();\n\t\t\n\t\tForm<?> form = new Form<Void>(\"form\");\n\t\tform.setMultiPart(true);\n\t\tform.setFileMaxSize(Bytes.megabytes(maxUploadFileSize));\n\t\tadd(form);\n\t\t\n\t\tform.add(new AjaxLink<Void>(\"close\") {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\tonCancel(target);\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tFencedFeedbackPanel feedback = new FencedFeedbackPanel(\"feedback\", form);\n\t\tfeedback.setOutputMarkupPlaceholderTag(true);\n\t\tform.add(feedback);\n\t\t\n\t\tDropzoneField dropzone = new DropzoneField(\n\t\t\t\t\"files\", \n\t\t\t\tnew PropertyModel<Collection<FileUpload>>(this, \"uploads\"), \n\t\t\t\tnull, 0, maxUploadFileSize);\n\t\tdropzone.setRequired(true).setLabel(Model.of(\"File\"));\n\t\tform.add(dropzone);\n\t\t\n\t\tform.add(new AjaxButton(\"upload\") {\n\n\t\t\t@Override\n\t\t\tprotected void onSubmit(AjaxRequestTarget target, Form<?> form) {\n\t\t\t\tsuper.onSubmit(target, form);\n\t\t\t\t\n\t\t\t\tif (directory.contains(\"..\")) {\n\t\t\t\t\terror(\"'..' is not allowed in the directory\");\n\t\t\t\t\ttarget.add(feedback);\n\t\t\t\t} else {\n\t\t\t\t\tLockUtils.write(getBuild().getArtifactsLockKey(), new Callable<Void>() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic Void call() throws Exception {\n\t\t\t\t\t\t\tFile artifactsDir = getBuild().getArtifactsDir();\n\t\t\t\t\t\t\tfor (FileUpload upload: uploads) {\n\t\t\t\t\t\t\t\tString filePath = FilenameUtils.sanitizeFilename(upload.getFileName());\n\t\t\t\t\t\t\t\tif (directory != null)\n\t\t\t\t\t\t\t\t\tfilePath = directory + \"/\" + filePath;\n\t\t\t\t\t\t\t\tFile file = new File(artifactsDir, filePath);\n\t\t\t\t\t\t\t\tFileUtils.createDir(file.getParentFile());\n\t\t\t\t\t\t\t\ttry (\tInputStream is = upload.getInputStream();\n\t\t\t\t\t\t\t\t\t\tOutputStream os = new FileOutputStream(file)) {\n\t\t\t\t\t\t\t\t\tIOUtils.copy(is, os);\n\t\t\t\t\t\t\t\t} finally {\n\t\t\t\t\t\t\t\t\tupload.release();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tonUploaded(target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tprotected void onError(AjaxRequestTarget target, Form<?> form) {\n\t\t\t\tsuper.onError(target, form);\n\t\t\t\ttarget.add(feedback);\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\tform.add(new TextField<String>(\"directory\", new PropertyModel<String>(this, \"directory\")));\n\t\t\n\t\tform.add(new AjaxLink<Void>(\"cancel\") {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(AjaxRequestTarget target) {\n\t\t\t\tonCancel(target);\n\t\t\t}\n\t\t\t\n\t\t});\n\t}\n\n\tpublic abstract void onUploaded(AjaxRequestTarget target);\n\t\n\tpublic abstract void onCancel(AjaxRequestTarget target);\n\t\n\tprotected abstract Build getBuild();\n\t\n}\n"], "filenames": ["server-core/src/main/java/io/onedev/server/web/page/project/builds/detail/artifacts/ArtifactUploadPanel.java"], "buggy_code_start_loc": [81], "buggy_code_end_loc": [105], "fixing_code_start_loc": [81], "fixing_code_end_loc": [110], "type": "CWE-22", "message": "Onedev v7.4.14 contains a path traversal vulnerability which allows attackers to access restricted files and directories via uploading a crafted JAR file into the directory /opt/onedev/lib.", "other": {"cve": {"id": "CVE-2022-38301", "sourceIdentifier": "cve@mitre.org", "published": "2022-09-14T21:15:10.483", "lastModified": "2022-09-16T19:26:36.133", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Onedev v7.4.14 contains a path traversal vulnerability which allows attackers to access restricted files and directories via uploading a crafted JAR file into the directory /opt/onedev/lib."}, {"lang": "es", "value": "Onedev versi\u00f3n v7.4.14, contiene una vulnerabilidad de salto de rutas que permite a atacantes acceder a archivos y directorios restringidos por medio de una carga de un archivo JAR dise\u00f1ado en el directorio /opt/onedev/lib"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:onedev_project:onedev:7.4.14:*:*:*:*:*:*:*", "matchCriteriaId": "064D287F-87DC-47FE-A122-7972558C98C2"}]}]}], "references": [{"url": "https://github.com/theonedev/onedev/commit/5b6a19c1f7fe9c271acc4268bcd261a9a1cbb3ea", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://research.loginsoft.com/vulnerability/path-traversal-in-onedev-v7-4-14/", "source": "cve@mitre.org", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/theonedev/onedev/commit/5b6a19c1f7fe9c271acc4268bcd261a9a1cbb3ea"}}