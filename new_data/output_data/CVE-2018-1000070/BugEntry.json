{"buggy_code": ["from importlib import import_module\nfrom os import path, listdir\nfrom string import lower\n\nfrom debug import logger\nimport paths\n\nclass MsgBase(object):\n    def encode(self):\n        self.data = {\"\": lower(type(self).__name__)}\n\n\ndef constructObject(data):\n    try:\n        classBase = eval(data[\"\"] + \".\" + data[\"\"].title())\n    except NameError:\n        logger.error(\"Don't know how to handle message type: \\\"%s\\\"\", data[\"\"])\n        return None\n    try:\n        returnObj = classBase()\n        returnObj.decode(data)\n    except KeyError as e:\n        logger.error(\"Missing mandatory key %s\", e)\n        return None\n    except:\n        logger.error(\"classBase fail\", exc_info=True)\n        return None\n    else:\n        return returnObj\n\nif paths.frozen is not None:\n    import messagetypes.message\n    import messagetypes.vote\nelse:\n    for mod in listdir(path.dirname(__file__)):\n        if mod == \"__init__.py\":\n            continue\n        splitted = path.splitext(mod)\n        if splitted[1] != \".py\":\n            continue\n        try:\n            import_module(\".\" + splitted[0], \"messagetypes\")\n        except ImportError:\n            logger.error(\"Error importing %s\", mod, exc_info=True)\n        else:\n            logger.debug(\"Imported message type module %s\", mod)\n"], "fixing_code": ["from importlib import import_module\nfrom os import path, listdir\nfrom string import lower\n\nfrom debug import logger\nimport paths\n\nclass MsgBase(object):\n    def encode(self):\n        self.data = {\"\": lower(type(self).__name__)}\n\n\ndef constructObject(data):\n    try:\n        m = import_module(\"messagetypes.\" + data[\"\"])\n        classBase = getattr(m, data[\"\"].title())\n    except (NameError, ImportError):\n        logger.error(\"Don't know how to handle message type: \\\"%s\\\"\", data[\"\"], exc_info=True)\n        return None\n    try:\n        returnObj = classBase()\n        returnObj.decode(data)\n    except KeyError as e:\n        logger.error(\"Missing mandatory key %s\", e)\n        return None\n    except:\n        logger.error(\"classBase fail\", exc_info=True)\n        return None\n    else:\n        return returnObj\n\nif paths.frozen is not None:\n    import messagetypes.message\n    import messagetypes.vote\nelse:\n    for mod in listdir(path.dirname(__file__)):\n        if mod == \"__init__.py\":\n            continue\n        splitted = path.splitext(mod)\n        if splitted[1] != \".py\":\n            continue\n        try:\n            import_module(\".\" + splitted[0], \"messagetypes\")\n        except ImportError:\n            logger.error(\"Error importing %s\", mod, exc_info=True)\n        else:\n            logger.debug(\"Imported message type module %s\", mod)\n"], "filenames": ["src/messagetypes/__init__.py"], "buggy_code_start_loc": [15], "buggy_code_end_loc": [18], "fixing_code_start_loc": [15], "fixing_code_end_loc": [19], "type": "CWE-94", "message": "Bitmessage PyBitmessage version v0.6.2 (and introduced in or after commit 8ce72d8d2d25973b7064b1cf76a6b0b3d62f0ba0) contains a Eval injection vulnerability in main program, file src/messagetypes/__init__.py function constructObject that can result in Code Execution. This attack appears to be exploitable via remote attacker using a malformed message which must be processed by the victim - e.g. arrive from any sender on bitmessage network. This vulnerability appears to have been fixed in v0.6.3.", "other": {"cve": {"id": "CVE-2018-1000070", "sourceIdentifier": "cve@mitre.org", "published": "2018-03-13T15:29:00.283", "lastModified": "2020-08-24T17:37:01.140", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Bitmessage PyBitmessage version v0.6.2 (and introduced in or after commit 8ce72d8d2d25973b7064b1cf76a6b0b3d62f0ba0) contains a Eval injection vulnerability in main program, file src/messagetypes/__init__.py function constructObject that can result in Code Execution. This attack appears to be exploitable via remote attacker using a malformed message which must be processed by the victim - e.g. arrive from any sender on bitmessage network. This vulnerability appears to have been fixed in v0.6.3."}, {"lang": "es", "value": "Bitmessage PyBitmessage v0.6.2 (e introducido en o despu\u00e9s del commit con ID 8ce72d8d2d25973b7064b1cf76a6b0b3d62f0ba0) contiene una vulnerabilidad de inyecci\u00f3n de Eval en el programa principal, en la funci\u00f3n constructObject del archivo src/messagetypes/__init__.py que puede resultar en la ejecuci\u00f3n de c\u00f3digo. Este ataque parece ser explotable mediante un atacante remoto que emplee un mensaje mal formado, el cual debe ser procesado por la v\u00edctima, por ejemplo, llegando de cualquier remitente en la red bitmessage. La vulnerabilidad parece haber sido solucionada en la versi\u00f3n v0.6.3."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-94"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:bitmessage:pybitmessage:0.6.2:*:*:*:*:*:*:*", "matchCriteriaId": "2BCF3FBE-0932-43A8-9744-63B1168586F2"}]}]}], "references": [{"url": "https://github.com/Bitmessage/PyBitmessage/commit/3a8016d31f517775d226aa8b902480f4a3a148a9#comments", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Bitmessage/PyBitmessage/commit/3a8016d31f517775d226aa8b902480f4a3a148a9#comments"}}