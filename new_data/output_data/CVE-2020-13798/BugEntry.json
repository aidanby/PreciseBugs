{"buggy_code": ["<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/paths/path.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/external/feedcreator/feedcreator.class.php');\r\n\r\nclass feed\r\n{\r\n\tpublic $id;\r\n\tpublic $website;\r\n\tpublic $categories;\r\n\tpublic $image;\t\r\n\tpublic $format;\r\n\tpublic $entries;\r\n\tpublic $content;\r\n\tpublic $views;\r\n\tpublic $permission;\r\n\tpublic $enabled;\r\n\t\r\n\tpublic $dictionary;\r\n\tpublic $paths;\r\n\t\r\n\tpublic function load($id)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\t\r\n\t\tif($DB->query('SELECT * FROM nv_feeds WHERE id = '.intval($id).' AND website = '.$website->id))\r\n\t\t{\r\n\t\t\t$data = $DB->result();\r\n\t\t\t$this->load_from_resultset($data); // there will be as many entries as languages enabled\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\t$main = $rs[0];\r\n\t\t\r\n\t\t$this->id\t\t\t= $main->id;\r\n\t\t$this->website\t\t= $main->website;\t\t\r\n\t\t$this->title  \t\t= $main->title;\r\n\t\t$this->categories\t= explode(',', $main->categories);\r\n\t\t$this->format\t\t= $main->format;\r\n\t\t$this->image\t\t= $main->image;\r\n\t\t$this->entries\t\t= $main->entries;\r\n\t\t$this->content\t\t= $main->content;\t\t\t\t\r\n\t\t$this->views\t\t= $main->views;\t\t\r\n\t\t$this->permission\t= $main->permission;\t\t\r\n\t\t$this->enabled\t\t= $main->enabled;\t\r\n\t\t\r\n\t\t$this->dictionary\t= webdictionary::load_element_strings('feed', $this->id);\r\n\t\t$this->paths \t\t= path::loadElementPaths('feed', $this->id);\r\n\t}\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n\t\t$this->permission\t= intval($_REQUEST['permission']);\r\n\t\t$this->enabled\t\t= intval($_REQUEST['enabled']);\r\n\t\t$this->format  \t\t= $_REQUEST['format'];\r\n\t\t$this->image\t\t= intval($_REQUEST['image']);\r\n\t\t$this->content \t\t= $_REQUEST['content'];\r\n\t\t$this->entries\t\t= intval($_REQUEST['entries']);\r\n\r\n\t\r\n\t\t// language strings and options\r\n\t\t$this->dictionary = array();\r\n\t\t$this->paths = array();\r\n\t\t$fields = array('title', 'description');\r\n\t\t\r\n\t\tforeach($_REQUEST as $key => $value)\r\n\t\t{\r\n\t\t\tif(empty($value)) continue;\r\n\t\t\t\r\n\t\t\tforeach($fields as $field)\r\n\t\t\t{\r\n\t\t\t\tif(substr($key, 0, strlen($field.'-'))==$field.'-')\r\n\t\t\t\t\t$this->dictionary[substr($key, strlen($field.'-'))][$field] = $value;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(substr($key, 0, strlen('path-'))=='path-')\r\n\t\t\t\t$this->paths[substr($key, strlen('path-'))] = $value;\r\n\t\t}\t\r\n\t\t\r\n\t\t$this->categories \t= '';\r\n\t\tif($_REQUEST['categories']!='true')\r\n\t\t\t$this->categories\t= explode(',', $_REQUEST['categories']);\t\t\t\t\r\n\t}\r\n\r\n\tpublic function save()\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\tif(!empty($this->id))\r\n\t\t\treturn $this->update();\r\n\t\telse\r\n\t\t\treturn $this->insert();\t\t\t\r\n\t}\r\n\t\r\n\tpublic function delete()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\t$affected_rows = 0;\r\n\r\n\t\t// remove all old entries\r\n\t\tif(!empty($this->id))\r\n        {\r\n            $DB->execute('\r\n\t\t\t\tDELETE FROM nv_feeds\r\n\t\t\t\t\t  WHERE id = ' . intval($this->id) . ' AND \r\n\t\t\t\t\t        website = ' . $this->website\r\n            );\r\n\r\n            $affected_rows = $DB->get_affected_rows();\r\n\r\n            // remove dictionary elements\r\n            webdictionary::save_element_strings('feed', $this->id, array());\r\n\r\n            // remove path elements\r\n            path::saveElementPaths('feed', $this->id, array());\r\n\r\n            if(method_exists($events, 'trigger'))\r\n            {\r\n                $events->trigger(\r\n                    'feed',\r\n                    'delete',\r\n                    array(\r\n                        'feed' => $this\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\r\n\t\treturn $affected_rows;\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\tglobal $events;\r\n\t\t\r\n\t\t$ok = $DB->execute(' \r\n \t\t\tINSERT INTO nv_feeds\r\n\t\t\t\t(id, website, categories, format, image, entries, content, views, permission, enabled)\r\n\t\t\tVALUES \r\n\t\t\t\t( 0, :website, :categories, :format, :image, :entries, :content, :views, :permission, :enabled)\r\n\t\t\t',\r\n\t\t\tarray(\r\n\t\t\t\t'website' => value_or_default($this->website, $website->id),\r\n\t\t\t\t'categories' => implode(',', $this->categories),\r\n\t\t\t\t'format' => $this->format,\r\n\t\t\t\t'image' => value_or_default($this->image, 0),\r\n\t\t\t\t'entries' => value_or_default($this->entries, 10),\r\n\t\t\t\t'content' => $this->content,\r\n\t\t\t\t'views' => value_or_default($this->views, 0),\r\n\t\t\t\t'permission' => value_or_default($this->permission, 0),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n\t\t);\r\n\r\n        if(!$ok)\r\n            throw new Exception($DB->get_last_error());\r\n\r\n\t\t$this->id = $DB->get_last_id();\r\n\t\t\t\r\n\t\twebdictionary::save_element_strings('feed', $this->id, $this->dictionary);\r\n\t\tpath::saveElementPaths('feed', $this->id, $this->paths);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'feed',\r\n                'save',\r\n                array(\r\n                    'feed' => $this\r\n                )\r\n            );\r\n        }\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\tif(!is_array($this->categories))\r\n\t\t\t$this->categories = array();\r\n\t\t\t\r\n\t\t$ok = $DB->execute(' \r\n \t\t\tUPDATE nv_feeds\r\n\t\t\t  SET categories = :categories, format = :format, image = :image, entries = :entries, \r\n\t\t\t  \t  content = :content, views = :views, permission = :permission, enabled = :enabled\r\n\t\t\tWHERE id = :id\tAND\twebsite = :website',\r\n\t\t\tarray(\r\n\t\t\t\t'id' => $this->id,\r\n\t\t\t\t'website' => $this->website,\r\n\t\t\t\t'categories' => implode(',', $this->categories),\r\n\t\t\t\t'format' => $this->format,\r\n\t\t\t\t'image' => value_or_default($this->image, 0),\r\n\t\t\t\t'entries' => value_or_default($this->entries, 10),\r\n\t\t\t\t'content' => $this->content,\r\n\t\t\t\t'views' => value_or_default($this->views, 0),\r\n\t\t\t\t'permission' => value_or_default($this->permission, 0),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n\t\t);\r\n\t\t\t\t\t\t\t  \r\n\t\tif(!$ok)\r\n\t\t    throw new Exception($DB->get_last_error());\r\n\t\t\r\n\t\twebdictionary::save_element_strings('feed', $this->id, $this->dictionary);\r\n\t\tpath::saveElementPaths('feed', $this->id, $this->paths);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'feed',\r\n                'save',\r\n                array(\r\n                    'feed' => $this\r\n                )\r\n            );\r\n        }\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function quicksearch($text)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\t\r\n\t\t$like = ' LIKE '.protect('%'.$text.'%');\r\n\t\t\r\n\t\t// we search for the IDs at the dictionary NOW (to avoid inefficient requests)\r\n\t\t\r\n\t\t$DB->query('SELECT DISTINCT (nvw.node_id)\r\n\t\t\t\t\t FROM nv_webdictionary nvw\r\n\t\t\t\t\t WHERE nvw.node_type = \"feed\" \r\n\t\t\t\t\t   AND nvw.website = '.$website->id.' \r\n\t\t\t\t\t   AND nvw.text '.$like, 'array');\r\n\t\t\t\t\t\t   \r\n\t\t$dict_ids = $DB->result(\"node_id\");\r\n\t\t\r\n\t\t// all columns to look for\t\r\n\t\t$cols[] = 'i.id' . $like;\r\n\r\n\t\tif(!empty($dict_ids))\r\n\t\t\t$cols[] = 'i.id IN ('.implode(',', $dict_ids).')';\r\n\t\t\t\r\n\t\t$where = ' AND ( ';\t\r\n\t\t$where.= implode( ' OR ', $cols); \r\n\t\t$where .= ')';\r\n\t\t\r\n\t\treturn $where;\r\n\t}\t\r\n\t\r\n\tpublic static function generate_feed($id = NULL)\r\n\t{\r\n\t\tglobal $current;\r\n\t\tglobal $website;\r\n\t\tglobal $DB;\r\n\t\r\n\t\tif(empty($id))\r\n\t\t\t$id = $current['id'];\r\n\r\n\t\t$item = new feed();\r\n\t\t$item->load($id);\r\n\t\t\r\n\t\t$permission = nvweb_object_enabled($item);\r\n\t\r\n\t\tif(!$permission)\r\n            return;\r\n\r\n        $feed = new UniversalFeedCreator();\r\n\t\t\r\n\t\t$feed->encoding = 'UTF-8';\r\n\t\t$feed->title = $item->dictionary[$current['lang']]['title'];\r\n\t\t$feed->description = $item->dictionary[$current['lang']]['description'];\r\n\t\t$feed->link = $website->absolute_path();\r\n\t\t$feed->syndicationURL = $website->absolute_path().$item->paths[$current['lang']];\r\n\r\n\t\tif(!empty($item->image))\r\n\t\t{\r\n\t\t\t$image = new FeedImage(); \r\n\t\t\t$image->url = $website->absolute_path().'/object?type=image&amp;id='.$item->image;\r\n\t\t\t$image->link = $website->absolute_path(); \r\n\t\t\t//$image->description = $feed->title;\r\n\t\t\t$image->title = $feed->title;\r\n\t\t\t$feed->image = $image;\r\n\t\t}\r\n\r\n\t\t// TODO: include products in feed content\r\n\t\tif(!empty($item->categories[0]))\r\n\t\t{\t\t\t\r\n\t\t\t$limit = intval($item->entries);\t\t \r\n\t\t\tif($limit <= 0)\t$limit = 10;\r\n\r\n            $DB->query(' SELECT SQL_CALC_FOUND_ROWS i.id, i.permission, i.date_published, i.date_unpublish,\r\n                                i.date_to_display, COALESCE(NULLIF(i.date_to_display, 0), i.date_created) as pdate, d.text as title, i.position as position,\r\n                                i.galleries as galleries, i.template as template\r\n                          FROM nv_items i, nv_structure s, nv_webdictionary d\r\n                         WHERE i.category IN('.implode(\",\", $item->categories).')\r\n                           AND i.website = '.$website->id.'\r\n                           AND i.permission = 0\r\n                           AND (i.date_published = 0 OR i.date_published < '.core_time().')\r\n                           AND (i.date_unpublish = 0 OR i.date_unpublish > '.core_time().')\r\n                           AND s.id = i.category\r\n                           AND (s.date_published = 0 OR s.date_published < '.core_time().')\r\n                           AND (s.date_unpublish = 0 OR s.date_unpublish > '.core_time().')\r\n                           AND s.permission = 0\r\n                           AND (s.access = 0)\r\n                           AND (i.access = 0)\r\n                           AND d.website = i.website\r\n                           AND d.node_type = \"item\"\r\n                           AND d.subtype = \"title\"\r\n                           AND d.node_id = i.id\r\n                           AND d.lang = :lang\r\n                         ORDER BY pdate DESC\r\n                         LIMIT '.$limit.'\r\n                        OFFSET 0',\r\n                'object',\r\n                array(\r\n                    ':lang' => $current['lang']\r\n                )\r\n            );\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t$rs = $DB->result();\r\n\t\t\t\r\n\t\t\tfor($x=0; $x < count($rs); $x++)\r\n\t\t\t{\r\n\t\t\t\tif(nvweb_object_enabled($rs[$x]))\r\n\t\t\t\t{\r\n\t\t\t\t\t$texts = webdictionary::load_element_strings('item', $rs[$x]->id);\r\n\t\t\t\t\t$paths = path::loadElementPaths('item', $rs[$x]->id);\t\t\t\t\r\n\t\t\r\n\t\t\t\t\t$fitem = new FeedItem(); \r\n\t\t\t\t\t$fitem->title = $texts[$current['lang']]['title'];\r\n\r\n                    $encoded_path = implode('/', array_map('urlencode', explode('/', $paths[$current['lang']])));\r\n\t\t\t\t\t$fitem->link = $website->absolute_path().$encoded_path;\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch($item->content)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'title':\r\n\t\t\t\t\t\t\t// no description\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'content':\r\n\t\t\t\t\t\t\t$html = $texts[$current['lang']]['section-main'];\r\n                            $html = nvweb_template_tweaks($html);\r\n                            $html = nvweb_template_convert_nv_paths($html);\r\n                            $fitem->description = $html;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'summary':\r\n\t\t\t\t\t\tdefault:\r\n                            $fitem->description = $texts[$current['lang']]['section-main'];\r\n                            $fitem->description = str_replace(\r\n                                array('</p>', '<br />', '<br/>', '<br>'),\r\n                                array('</p>'.\"\\n\", '<br />'.\"\\n\", '<br/>'.\"\\n\", '<br>'.\"\\n\"),\r\n                                $fitem->description\r\n                            );\r\n\t\t\t\t\t\t\t$fitem->description = core_string_cut($fitem->description, 500, '&hellip;');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t$fitem->date = $rs[$x]->date_to_display;\r\n\r\n                    // find an image to attach to the item\r\n                    // A) first enabled image in item gallery\r\n                    // B) first image on properties\r\n\r\n                    $image = '';\r\n\r\n                    if(!empty($rs[$x]->galleries))\r\n                    {\r\n                        $galleries = mb_unserialize($rs[$x]->galleries);\r\n                        $photo = @array_shift(array_keys($galleries[0]));\r\n                        if(!empty($photo))\r\n                            $image = $website->absolute_path(false) . '/object?type=image&id='.$photo;\r\n                    }\r\n\r\n                    if(empty($image))\r\n                    {\r\n                        // no image found on galleries, look for image properties\r\n                        $properties = property::load_properties(\"item\", $rs[$x]->template, \"item\", $rs[$x]->id);\r\n\r\n                        for($p=0; $p < count($properties); $p++)\r\n                        {\r\n                            if($properties[$p]->type=='image')\r\n                            {\r\n                                if(!empty($properties[$p]->value))\r\n                                    $image = $properties[$p]->value;\r\n                                else if(!empty($properties[$p]->dvalue))\r\n                                    $image = $properties[$p]->dvalue;\r\n\r\n                                if(is_array($image))\r\n                                {\r\n                                    $image = array_values($image);\r\n                                    $image = $image[0];\r\n                                }\r\n\r\n                                if(!empty($image))\r\n                                    $image = $website->absolute_path(false) . '/object?type=image&id='.$image;\r\n                            }\r\n\r\n                            // we only need the first image\r\n                            if(!empty($image))\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    if(!empty($image))\r\n                    {\r\n                        $fitem->image = $image;\r\n\t                    // feedly will only display images of >450px --> http://blog.feedly.com/2015/07/31/10-ways-to-optimize-your-feed-for-feedly/\r\n\t\t\t\t\t\tif(strpos($item->format, 'RSS')!==false)\r\n\t\t\t\t\t\t\t$fitem->description = '<img src=\"'.$image.'&width=640\"><br />'.$fitem->description;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//$item->author = $contents->rows[$x]->author_name;\r\n\t\t\t\t\t$feed->addItem($fitem); \t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// valid format strings are: RSS0.91, RSS1.0, RSS2.0, PIE0.1 (deprecated),\r\n\t\t\t// MBOX, OPML, ATOM, ATOM10, ATOM0.3, HTML, JS\r\n\t\t\t//echo $rss->saveFeed(\"RSS1.0\", \"news/feed.xml\");\r\n\t\t}\r\n\t\t\r\n\t\t$xml = $feed->createFeed($item->format);\r\n\r\n\t\tif($item->format==\"RSS2.0\")\r\n\t\t{\r\n\t\t\t// add extra tweaks to improve the feed\r\n\t\t\t$xml = str_replace('<rss ', '<rss xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:webfeeds=\"http://webfeeds.org/rss/1.0\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" ', $xml);\r\n\r\n\t\t\t// also available:\r\n\t\t\t// <webfeeds:cover image=\"http://yoursite.com/a-large-cover-image.png\" />\\n\r\n\t\t\t// <webfeeds:accentColor>00FF00</webfeeds:accentColor>\r\n\t\t\t$xml = str_replace('<channel>', '<channel>'.\"\\n\\t\\t\".'<webfeeds:related layout=\"card\" target=\"browser\" />', $xml);\r\n\t\t\t$xml = str_replace('<channel>', '<channel>'.\"\\n\\t\\t\".'<webfeeds:logo>'.file::file_url($item->image).'</webfeeds:logo>', $xml);\r\n\t\t\t$xml = str_replace('<channel>', '<channel>'.\"\\n\\t\\t\".'<webfeeds:icon>'.file::file_url($website->favicon).'</webfeeds:icon>', $xml);\r\n\t\t}\r\n\r\n\t\treturn $xml;\r\n\t}\t\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n        global $website;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_feeds WHERE website = '.intval($website->id), 'object');\r\n        $out = $DB->result();\r\n\r\n        if($type='json')\r\n            $out = json_encode($out);\r\n\r\n        return $out;\r\n    }\r\n\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass menu\r\n{\r\n\tpublic $id;\r\n\tpublic $codename;\r\n\tpublic $icon;\r\n\tpublic $lid;\r\n\tpublic $notes;\r\n\tpublic $enabled;\r\n\t\r\n\tpublic $functions;\r\n  \t\r\n\tpublic function load($id)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tif($DB->query('SELECT * FROM nv_menus WHERE id = '.intval($id)))\r\n\t\t{\r\n\t\t\t$data = $DB->result();\r\n\t\t\t$this->load_from_resultset($data); // there will be as many entries as languages enabled\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\t\r\n\t\t$main = $rs[0];\r\n\t\t\r\n\t\t$this->id      \t\t= $main->id;\r\n\t\t$this->codename\t\t= $main->codename;\r\n\t\t$this->icon\t\t    = $main->icon;\r\n   \t\t$this->lid\t\t    = $main->lid;    \r\n   \t\t$this->notes\t    = $main->notes;    \r\n\t\t$this->enabled\t\t= $main->enabled;\r\n\t\t\r\n\t\t/*\r\n\t\t$DB->query('SELECT function_id \r\n\t\t\t\t\t  FROM nv_menu_items \r\n\t\t\t\t\t WHERE menu_id = '.$this->id.' ORDER BY position ASC');\r\n\t\t\t\t\t \r\n\t\t$this->functions = $DB->result('function_id');\r\n\t\t*/\r\n\t\t$this->functions\t= json_decode($main->functions);\r\n\t\tif(empty($this->functions))\t$this->functions = array();\t\t\r\n\t}\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n\t\t$this->codename\t\t= $_REQUEST['codename'];\r\n\t\t$this->icon\t\t    = $_REQUEST['icon'];\r\n   \t\t$this->lid\t\t    = $_REQUEST['lid']; \r\n   \t\t$this->notes\t    = $_REQUEST['notes']; \t\t   \r\n\t\t$this->enabled\t\t= ($_REQUEST['enabled']=='1'? '1' : '0');\r\n\t\t\r\n\t\t// load associated functions\r\n\t\t$functions = explode('#', $_REQUEST['menu-functions']);\r\n\t\t$this->functions = array();\r\n\t\tforeach($functions as $function)\r\n\t\t{\r\n\t\t\tif(!empty($function))\r\n\t\t\t\t$this->functions[] = $function;\r\n\t\t}\r\n\t}\t\r\n\t\r\n\t\r\n\tpublic function save()\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\tif(!empty($this->id))\r\n\t\t  return $this->update();\r\n\t\telse\r\n\t\t  return $this->insert();\r\n\t}\r\n\t\r\n\tpublic function delete()\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\t// remove all old entries\r\n\t\tif(!empty($this->id))\r\n\t\t{\r\n\t\t\t$DB->execute(' \r\n \t\t\t\tDELETE FROM nv_menus\r\n\t\t\t\t\tWHERE id = '.intval($this->id).'\r\n              \t\tLIMIT 1 '\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn $DB->get_affected_rows();\t\t\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n    \r\n\t\t$ok = $DB->execute(' \r\n \t\t\tINSERT INTO nv_menus\r\n\t\t\t\t(id, codename, icon, lid, notes, functions, enabled)\r\n\t\t\tVALUES \r\n\t\t\t\t( 0, :codename, :icon, :lid, :notes, :functions, :enabled)',\r\n\t\t\tarray(\r\n\t\t\t\t'codename' => value_or_default($this->codename, \"\"),\r\n\t\t\t\t'icon' => value_or_default($this->icon, \"\"),\r\n\t\t\t\t'lid' => value_or_default($this->lid, 0),\r\n\t\t\t\t'notes' => value_or_default($this->notes, \"\"),\r\n\t\t\t\t'functions' => json_encode($this->functions),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n\t\t);\r\n\t\t\t\t\r\n\t\tif(!$ok)\r\n\t\t\tthrow new Exception($DB->get_last_error());\r\n\t\t\r\n\t\t$this->id = $DB->get_last_id();\r\n\t\t\r\n\t\treturn true;\r\n\t}\t\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t    \r\n\t\t$ok = $DB->execute(' \r\n \t\t\tUPDATE nv_menus\r\n\t\t\t   SET codename = :codename, icon = :icon, lid = :lid, notes = :notes, \r\n\t\t\t   \t   functions = :functions, enabled = :enabled\r\n            WHERE id = :id',\r\n\t\t\tarray(\r\n\t\t\t\t'id' => $this->id,\r\n\t\t\t\t'codename' => value_or_default($this->codename, \"\"),\r\n\t\t\t\t'icon' => value_or_default($this->icon, \"\"),\r\n\t\t\t\t'lid' => value_or_default($this->lid, 0),\r\n\t\t\t\t'notes' => value_or_default($this->notes, \"\"),\r\n\t\t\t\t'functions' => json_encode($this->functions),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n        );\r\n\t\t\r\n\t\tif(!$ok)\r\n\t\t\tthrow new Exception($DB->get_last_error());\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function quicksearch($text)\r\n\t{\r\n\t\t$like = ' LIKE '.protect('%'.$text.'%');\r\n\t\t\r\n\t\t$cols[] = 'id' . $like;\r\n\t\t$cols[] = 'codename' . $like;\r\n\t\t$cols[] = 'icon' . $like;\t\t\r\n\t\t$cols[] = 'notes' . $like;\r\n\t\r\n\t\t$where = ' AND ( ';\t\r\n\t\t$where.= implode( ' OR ', $cols); \r\n\t\t$where .= ')';\r\n\t\t\r\n\t\treturn $where;\r\n\t}\t\r\n\t\r\n\tpublic static function load_all_menus()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\t\r\n\t\t$DB->query('SELECT * FROM nv_menus');\r\n\t\t\r\n\t\treturn $DB->result();\r\n\t}\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_menus', 'object');\r\n        $out = $DB->result();\r\n\r\n        if($type='json')\r\n            $out = json_encode($out);\r\n\r\n        return $out;\r\n    }\r\n}\r\n\r\n?>", "<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/menus/menu.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/functions/nv_function.class.php');\r\n\r\nfunction run()\r\n{\r\n\tglobal $user;\t\r\n\tglobal $layout;\r\n\tglobal $DB;\r\n\t\r\n\t$out = '';\r\n\t$item = new menu();\r\n\t\t\t\r\n\tswitch($_REQUEST['act'])\r\n\t{\r\n        case 'json':\r\n\t\tcase 1:\t// json data retrieval & operations\r\n\t\t\tswitch($_REQUEST['oper'])\r\n\t\t\t{\r\n\t\t\t\tcase 'del':\t// remove rows\r\n\t\t\t\t\t$ids = $_REQUEST['ids'];\r\n\t\t\t\t\tforeach($ids as $id)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$item->load($id);\r\n\t\t\t\t\t\t$item->delete();\r\n\t\t\t\t\t}\r\n\t\t\t\t\techo json_encode(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tdefault: // list or search\t\r\n\t\t\t\t\t$page = intval($_REQUEST['page']);\r\n\t\t\t\t\t$max\t= intval($_REQUEST['rows']);\r\n\t\t\t\t\t$offset = ($page - 1) * $max;\r\n\t\t\t\t\t$where = \" 1=1 \";\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif($_REQUEST['_search']=='true' || isset($_REQUEST['quicksearch']))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(isset($_REQUEST['quicksearch']))\r\n                        {\r\n                            $where .= $item->quicksearch($_REQUEST['quicksearch']);\r\n                        }\r\n\t\t\t\t\t\telse if(isset($_REQUEST['filters']))\r\n                        {\r\n                            $where .= navitable::jqgridsearch($_REQUEST['filters']);\r\n                        }\r\n\t\t\t\t\t\telse\t// single search\r\n                        {\r\n                            $where .= ' AND '.navitable::jqgridcompare($_REQUEST['searchField'], $_REQUEST['searchOper'], $_REQUEST['searchString']);\r\n                        }\r\n\t\t\t\t\t}\r\n\r\n                    // filter orderby vars\r\n                    if( !in_array($_REQUEST['sord'], array('', 'desc', 'DESC', 'asc', 'ASC')) ||\r\n                        !in_array($_REQUEST['sidx'], array('id', 'codename', 'icon', 'lid', 'enabled'))\r\n                    )\r\n                    {\r\n                        return false;\r\n                    }\r\n                    $orderby = $_REQUEST['sidx'].' '.$_REQUEST['sord'];\r\n\t\t\t\t\r\n\t\t\t\t\t$DB->queryLimit('id,lid,codename,icon,enabled', \r\n\t\t\t\t\t\t\t\t\t'nv_menus', \r\n\t\t\t\t\t\t\t\t\t$where, \r\n\t\t\t\t\t\t\t\t\t$orderby, \r\n\t\t\t\t\t\t\t\t\t$offset, \r\n\t\t\t\t\t\t\t\t\t$max);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t$dataset = $DB->result();\r\n\t\t\t\t\t$total = $DB->foundRows();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//echo $DB->get_last_error();\r\n\t\t\t\t\t\r\n\t\t\t\t\t$out = array();\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor($i=0; $i < count($dataset); $i++)\r\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t$out[$i] = array(\r\n\t\t\t\t\t\t\t0\t=> $dataset[$i]['id'],\r\n\t\t\t\t\t\t\t1\t=> $dataset[$i]['codename'],\r\n\t\t\t\t\t\t\t2\t=> '<img src=\"'.NAVIGATE_URL.'/'.$dataset[$i]['icon'].'\" />',\t\t\r\n\t\t\t\t\t\t\t3 \t=> '['.$dataset[$i]['lid'].'] '.t($dataset[$i]['lid'], $dataset[$i]['lid']),\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t4\t=> (($dataset[$i]['enabled']==1)? '<img src=\"img/icons/silk/accept.png\" />' : '<img src=\"img/icons/silk/cancel.png\" />')\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tnavitable::jqgridJson($out, $page, $offset, $max, $total);\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsession_write_close();\r\n\t\t\texit;\r\n\t\t\tbreak;\r\n\r\n        case 'edit':\r\n\t\tcase 2: // edit/new form\t\t\r\n\t\t\tif(!empty($_REQUEST['id']))\r\n\t\t\t{\r\n\t\t\t\t$item->load(intval($_REQUEST['id']));\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(isset($_REQUEST['form-sent']))\r\n\t\t\t{\r\n\t\t\t\t$item->load_from_post();\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n                    naviforms::check_csrf_token();\r\n\r\n\t\t\t\t\t$item->save();\r\n                    $layout->navigate_notification(t(53, \"Data saved successfully.\"), false, false, 'fa fa-check');\r\n\t\t\t\t}\r\n\t\t\t\tcatch(Exception $e)\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification($e->getMessage(), true, true);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t$out = functions_form($item);\r\n\t\t\tbreak;\r\n\r\n        case 'delete':\r\n\t\tcase 4: // remove \r\n\t\t\tif(!empty($_REQUEST['id']))\r\n\t\t\t{\r\n\t\t\t\t$item->load(intval($_REQUEST['id']));\t\r\n\t\t\t\tif($item->delete() > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification(t(55, 'Item removed successfully.'), false);\r\n\t\t\t\t\t$out = functions_list();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification(t(56, 'Unexpected error.'), false);\r\n\t\t\t\t\t$out = functions_form($item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n        case 'list':\r\n\t\tcase 0: // list / search result\r\n\t\tdefault:\t\t\t\r\n\t\t\t$out = functions_list();\r\n\t\t\tbreak;\r\n\t}\r\n\t\r\n\treturn $out;\r\n}\r\n\r\nfunction functions_list()\r\n{\r\n\t$navibars = new navibars();\r\n\t$navitable = new navitable(\"functions_list\");\r\n\t\r\n\t$navibars->title(t(244, 'Menus'));\r\n\r\n\t$navibars->add_actions(\tarray(\t'<a href=\"?fid='.$_REQUEST['fid'].'&act=2\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/add.png\"> '.t(38, 'Create').'</a>',\r\n\t\t\t\t\t\t\t\t\t'<a href=\"?fid='.$_REQUEST['fid'].'&act=0\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/application_view_list.png\"> '.t(39, 'List').'</a>',\r\n\t\t\t\t\t\t\t\t\t'search_form' ));\r\n\t\r\n\tif($_REQUEST['quicksearch']=='true')\r\n    {\r\n        $navitable->setInitialURL(\"?fid=\".$_REQUEST['fid'].'&act=json&_search=true&quicksearch='.$_REQUEST['navigate-quicksearch']);\r\n    }\r\n\t\r\n\t$navitable->setURL('?fid='.$_REQUEST['fid'].'&act=json');\r\n\t$navitable->sortBy('id');\r\n\t$navitable->setDataIndex('id');\r\n\t$navitable->setEditUrl('id', '?fid='.$_REQUEST['fid'].'&act=edit&id=');\r\n\t\r\n\t$navitable->addCol(\"ID\", 'id', \"80\", \"true\", \"left\");\t\r\n\t$navitable->addCol(t(237, 'Code'), 'codename', \"100\", \"true\", \"left\");\t\t\r\n\t$navitable->addCol(t(242, 'Icon'), 'icon', \"50\", \"true\", \"center\");\t\t\r\n\t$navitable->addCol(t(67, 'Title'), 'lid', \"200\", \"true\", \"left\");\t\r\n\t$navitable->addCol(t(65, 'Enabled'), 'enabled', \"80\", \"true\", \"center\");\t\t\r\n\t\r\n\t$navibars->add_content($navitable->generate());\t\r\n\t\r\n\treturn $navibars->generate();\r\n\t\r\n}\r\n\r\nfunction functions_form($item)\r\n{\r\n\tglobal $user;\r\n\tglobal $DB;\r\n\tglobal $website;\r\n\tglobal $layout;\r\n\t\r\n\t$navibars = new navibars();\r\n\t$naviforms = new naviforms();\r\n\t\r\n\tif(empty($item->id))\r\n\t\t$navibars->title(t(244, 'Menus').' / '.t(38, 'Create'));\t\r\n\telse\r\n\t\t$navibars->title(t(244, 'Menus').' / '.t(170, 'Edit').' ['.$item->id.']');\t\t\r\n\r\n\tif(empty($item->id))\r\n\t{\r\n\t\t$navibars->add_actions(\r\n\t\t    array(\r\n\t\t        '<a href=\"#\" onclick=\"navigate_tabform_submit(1);\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/accept.png\"> '.t(34, 'Save').'</a>'\r\n            )\r\n        );\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$navibars->add_actions(\r\n\t\t    array(\r\n\t\t        '<a href=\"#\" onclick=\"navigate_tabform_submit(1);\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/accept.png\"> '.t(34, 'Save').'</a>',\r\n\t\t\t\t'<a href=\"#\" onclick=\"navigate_delete_dialog();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/cancel.png\"> '.t(35, 'Delete').'</a>'\r\n            )\r\n        );\r\n\r\n        $layout->add_script('\r\n            function navigate_delete_dialog()\r\n            {\r\n                navigate_confirmation_dialog(\r\n                    function() { window.location.href = \"?fid=menus&act=delete&id='.$item->id.'\"; }, \r\n                    null, null, \"'.t(35, 'Delete').'\"\r\n                );\r\n            }\r\n        ');\r\n\t}\r\n\t\r\n\t$navibars->add_actions(\tarray(\t(!empty($item->id)? '<a href=\"?fid=menus&act=2\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/add.png\"> '.t(38, 'Create').'</a>' : ''),\r\n\t\t\t\t\t\t\t\t\t'<a href=\"?fid=menus&act=0\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/application_view_list.png\"> '.t(39, 'List').'</a>',\r\n\t\t\t\t\t\t\t\t\t'search_form' ));\r\n\r\n\t$navibars->form();\r\n\r\n\t$navibars->add_tab(t(43, \"Main\"));\r\n\t\r\n\t$navibars->add_tab_content($naviforms->hidden('form-sent', 'true'));\r\n\t$navibars->add_tab_content($naviforms->hidden('id', $item->id));\r\n    $navibars->add_tab_content($naviforms->csrf_token());\r\n\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>ID</label>',\r\n\t\t\t'<span>'.(!empty($item->id)? $item->id : t(52, '(new)')).'</span>'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(237, 'Code').'</label>',\r\n\t\t\t$naviforms->textfield('codename', $item->codename),\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(242, 'Icon').'</label>',\r\n\t\t\t$naviforms->textfield('icon', $item->icon),\r\n\t\t\t'<img src=\"'.NAVIGATE_URL.'/'.$item->icon.'\" align=\"absmiddle\" />'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>#'.t(67, 'Title').' (lid)</label>',\r\n\t\t\t$naviforms->textfield('lid', $item->lid),\r\n\t\t\t(empty($item->lid)? '' : '<em>'.$item->lid.': <strong>'.t($item->lid, $item->lid).'</strong></em>')\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(245, 'Notes').'</label>',\r\n\t\t\t$naviforms->textarea('notes', $item->notes),\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(65, 'Enabled').'</label>',\r\n\t\t\t$naviforms->checkbox('enabled', $item->enabled),\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t$navibars->add_tab(t(200, \"Options\"));\r\n\t\r\n\t$functions = nv_function::load_all_functions();\r\n\t$func_cats = array_unique($DB->result('category'));\r\n\tsort($func_cats);\r\n\t\r\n\t$sortable_assigned = array();\r\n\t$sortable_unassigned = array();\r\n\t\r\n\t$sortable_assigned[] = '<ul id=\"sortable_assigned\" class=\"connectedSortable\">';\r\n\t$sortable_unassigned[] = '<ul id=\"sortable_unassigned\" class=\"connectedSortable\">';\t\r\n\t\r\n\tif(empty($item->functions)) $item->functions = array();\r\n\t\r\n\t// already included menus on the profile\r\n\tforeach($item->functions as $f)\r\n\t{\r\n\t\tforeach($functions as $function)\r\n\t\t{\t\t\r\n\t\t\tif($function->id == $f)\r\n\t\t\t{\r\n\t\t\t\tif($function->enabled=='1')\r\n\t\t\t\t\t$sortable_assigned[] = '<li class=\"ui-state-highlight\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n\t\t\t\telse\r\n\t\t\t\t\t$sortable_assigned[] = '<li class=\"ui-state-highlight ui-state-disabled\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t// the other menus not included on the profile\r\n\tforeach($functions as $function)\r\n\t{\r\n\t\tif(!in_array($function->id, $item->functions))\r\n\t\t{\r\n\t\t\tif($function->enabled=='1')\r\n\t\t\t\t$sortable_unassigned[] = '<li class=\"ui-state-default\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n\t\t\telse\r\n\t\t\t\t$sortable_unassigned[] = '<li class=\"ui-state-default ui-state-disabled\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n\t\t}\r\n\t}\r\n\t\r\n\t$sortable_assigned[] = '</ul>';\r\n\t$sortable_unassigned[] = '</ul>';\r\n\r\n\t//$navibars->add_tab_content('<pre>'.print_r($item->menus, true).'</pre>'); // margin-top: 12px; margin-left: 5px; float: left;\r\n\t// position: absolute; margin-left: 483px; margin-top: -9px; width: 291px; height: 20px;\r\n\r\n\t$navibars->add_tab_content_row(array(\t'<label>'.t(78, 'Category').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\t$naviforms->selectfield('menus_functions_category_select', $func_cats, $func_cats, 'web', \"navigate_menus_change_functions_category();\", false)\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\r\n\t$navibars->add_tab_content($naviforms->hidden(\"menu-functions\", implode('#', $item->functions)));\t\r\n\t$navibars->add_tab_content_row(array(\t'<label>'.t(240, 'Functions').'</label>',\r\n\t\t\t\t\t\t\t\t\t\t\timplode(\"\\n\", $sortable_assigned),\r\n\t\t\t\t\t\t\t\t\t\t\timplode(\"\\n\", $sortable_unassigned)\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\r\n\t$layout->add_script('\r\n\t\t$(\"#menus_functions_category_select\").css({ \"width\": \"300px\", \"margin-left\": \"303px\" });\r\n\t\t\r\n\t\t$(\"#sortable_assigned\").sortable({\r\n\t\t\t\tconnectWith: \".connectedSortable\",\r\n\t\t\t\treceive: function(event, ui)\r\n\t\t\t\t{\r\n\t\t\t\t\t$(ui.item).addClass(\"ui-state-highlight\");\r\n\t\t\t\t\t$(ui.item).removeClass(\"ui-state-default\");\r\n\t\t\t\t},\r\n\t\t\t\tupdate: function()\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#menu-functions\").val(\"\");\r\n\t\t\t\t\t$(\"#sortable_assigned li\").each(function()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#menu-functions\").val($(\"#menu-functions\").val() + $(this).attr(\"value\") + \"#\");\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}).disableSelection();\r\n\t\t\t\r\n\t\t$(\"#sortable_unassigned\").sortable({\r\n\t\t\t\tconnectWith: \".connectedSortable\",\r\n\t\t\t\treceive: function(event, ui)\r\n\t\t\t\t{\r\n\t\t\t\t\t$(ui.item).addClass(\"ui-state-default\");\r\n\t\t\t\t\t$(ui.item).removeClass(\"ui-state-highlight\");\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}).disableSelection();\t\t\t\r\n\t\t\r\n\t\tfunction navigate_menus_change_functions_category()\r\n\t\t{\t\r\n\t\t\tvar cat = $(\"#menus_functions_category_select\").val();\r\n\t\t\t$(\"#sortable_unassigned li\").each(function()\r\n\t\t\t{\r\n\t\t\t\tif($(this).attr(\"category\")==cat)\t$(this).show();\r\n\t\t\t\telse\t\t\t\t\t\t\t\t$(this).hide();\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tnavigate_menus_change_functions_category();\r\n\t');\r\n\r\n\treturn $navibars->generate();\r\n}\r\n\r\n?>", "<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/webdictionary/webdictionary.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/paths/path.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/webuser_votes/webuser_vote.class.php');\r\n\r\nclass structure\r\n{\r\n\tpublic $id;\r\n\tpublic $website;\r\n\tpublic $parent;\r\n\tpublic $position;\r\n\tpublic $access; // 0 => everyone, 1 => logged in, 2 => not logged in, 3 => selected webuser groups\r\n    public $groups; // webuser groups\r\n\tpublic $permission;\r\n\tpublic $icon;\r\n\tpublic $metatags;\r\n\tpublic $template;\r\n\tpublic $date_published;\r\n\tpublic $date_unpublish;\r\n\tpublic $views;\r\n\tpublic $votes;\r\n\tpublic $score;\t\r\n\tpublic $visible; // in menus\r\n\t\r\n\tpublic $dictionary;\r\n\tpublic $paths;\r\n\t\r\n\tpublic function load($id)\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\tif($DB->query('SELECT * FROM nv_structure WHERE id = '.intval($id)))\r\n\t\t{\r\n\t\t\t$data = $DB->result();\r\n\t\t\t$this->load_from_resultset($data); // there will be as many entries as languages enabled\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function reload()\r\n\t{\r\n\t\t$item = new structure();\r\n\t\t$item->load($this->id);\r\n\t\treturn $item;\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\t$main = $rs[0];\r\n\t\t\r\n\t\t$this->id\t\t\t= $main->id;\r\n\t\t$this->website\t\t= $main->website;\r\n\t\t$this->parent  \t\t= $main->parent;\r\n\t\t$this->position\t\t= $main->position;\r\n\t\t$this->template  \t= $main->template;\r\n\t\t$this->access\t\t= $main->access;\t\t\t\r\n\t\t$this->permission  \t= $main->permission;\r\n\t\t$this->icon\t\t\t= $main->icon;\r\n\t\t$this->metatags  \t= $main->metatags;\r\n\t\t$this->date_published\t= (empty($main->date_published)? '' : $main->date_published);\r\n\t\t$this->date_unpublish\t= (empty($main->date_unpublish)? '' : $main->date_unpublish);\r\n\t\t\r\n\t\t$this->votes\t\t= $main->votes;\r\n\t\t$this->score\t\t= $main->score;\r\n\t\t$this->views\t\t= $main->views;\t\t\t\r\n\r\n\t\t$this->dictionary\t= webdictionary::load_element_strings('structure', $this->id);\r\n\t\t$this->paths\t\t= path::loadElementPaths('structure', $this->id, $this->website);\r\n\t\t$this->visible\t\t= $main->visible;\r\n\r\n        $this->groups       = $main->groups;\r\n        if(!is_array($this->groups))\r\n        {\r\n            // to get the array of groups first we remove the \"g\" character\r\n            $groups = str_replace('g', '', $this->groups);\r\n            $this->groups = explode(',', $groups);\r\n        }\r\n\r\n        if(!is_array($this->groups))\r\n        {\r\n            $this->groups = array($this->groups);\r\n        }\r\n    }\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n\t\tif(intval($_REQUEST['parent'])!=$this->id)\t// protection against selecting this same category as parent of itself\r\n        {\r\n            $this->parent \t\t= intval($_REQUEST['parent']);\r\n        }\r\n\t\t\t\r\n\t\t$this->template \t= $_REQUEST['template'];\r\n\t\t$this->access\t\t= intval($_REQUEST['access']);\r\n\r\n        $this->groups\t    = $_REQUEST['groups'];\r\n        if($this->access < 3)\r\n        {\r\n            $this->groups = array();\r\n        }\r\n\r\n\t\t$this->permission\t= intval($_REQUEST['permission']);\t\t\r\n\t\t$this->visible\t\t= intval($_REQUEST['visible']);\t\t\r\n\t\t\r\n\t\t$this->date_published\t= (empty($_REQUEST['date_published'])? '' : core_date2ts($_REQUEST['date_published']));\t\r\n\t\t$this->date_unpublish\t= (empty($_REQUEST['date_unpublish'])? '' : core_date2ts($_REQUEST['date_unpublish']));\t\r\n\t\t\r\n\t\t// language strings and options\r\n\t\t$this->dictionary = array();\r\n\t\t$this->paths = array();\r\n\r\n\t\t$fields = array('title', 'action-type', 'action-jump-item', 'action-jump-branch', 'action-new-window', 'action-masked-redirect'); //, 'path', 'visible');\r\n\t\tforeach($_REQUEST as $key => $value)\r\n\t\t{\r\n\t\t\tif(empty($value))\r\n            {\r\n                continue;\r\n            }\r\n\t\t\t\r\n\t\t\tforeach($fields as $field)\r\n\t\t\t{\r\n\t\t\t\tif(substr($key, 0, strlen($field.'-'))==$field.'-')\r\n                {\r\n                    $this->dictionary[substr($key, strlen($field.'-'))][$field] = $value;\r\n                }\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(substr($key, 0, strlen('path-'))=='path-')\r\n            {\r\n                $this->paths[substr($key, strlen('path-'))] = $value;\r\n            }\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tpublic function save()\r\n\t{\r\n\t\tif(!empty($this->id))\r\n        {\r\n            return $this->update();\r\n        }\r\n\t\telse\r\n        {\r\n            return $this->insert();\r\n        }\r\n\t}\r\n\t\r\n\tpublic function delete()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\t$affected_rows = 0;\r\n\r\n\t\tif(!empty($this->id))\r\n\t\t{\r\n\t\t\t// remove dictionary entries\r\n\t\t\twebdictionary::save_element_strings('structure', $this->id, array());\r\n\r\n            // remove paths\r\n\t\t\tpath::saveElementPaths('structure', $this->id, array(), $this->website);\r\n\r\n            // remove all votes assigned\r\n\t\t\twebuser_vote::remove_object_votes('structure', $this->id);\r\n\r\n            // remove the properties\r\n            property::remove_properties('structure', $this->id, $this->website);\r\n\r\n            // remove the structure entry\r\n\t\t\t$DB->execute('\r\n\t\t\t\tDELETE FROM nv_structure\r\n\t\t\t\t\tWHERE id = '.intval($this->id).'\r\n\t\t\t\t\t  AND website = '.$this->website.'\r\n\t\t\t\t\tLIMIT 1'\r\n\t\t\t);\r\n\r\n            $affected_rows = $DB->get_affected_rows();\r\n\r\n            if(method_exists($events, 'trigger'))\r\n            {\r\n                $events->trigger(\r\n                    'structure',\r\n                    'delete',\r\n                    array(\r\n                        'structure' => $this\r\n                    )\r\n                );\r\n            }\r\n\r\n        }\r\n\t\treturn $affected_rows;\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\tglobal $events;\r\n\r\n\t\tif(empty($this->website))\r\n        {\r\n            $this->website = $website->id;\r\n        }\r\n\r\n        if(empty($this->position))\r\n        {\r\n            // no position given, so find the first position free in the same parent (after all existing children)\r\n            $DB->query('\r\n\t\t\t\tSELECT MAX(position) as max_position\r\n                  FROM nv_structure\r\n                 WHERE parent = '.intval($this->parent).'\r\n                   AND website = '.intval($this->website)\r\n            );\r\n\r\n            $max = $DB->result('max_position');\r\n            $this->position = intval($max[0]) + 1;\r\n        }\r\n\r\n        $groups = '';\r\n        if(is_array($this->groups))\r\n        {\r\n            $this->groups = array_unique($this->groups); // remove duplicates\r\n            $this->groups = array_filter($this->groups); // remove empty\r\n            if(!empty($this->groups))\r\n            {\r\n                $groups = 'g'.implode(',g', $this->groups);\r\n            }\r\n        }\r\n\r\n        if($groups == 'g')\r\n        {\r\n            $groups = '';\r\n        }\r\n\r\n        $ok = $DB->execute('\r\n\t\t\tINSERT INTO nv_structure\r\n\t\t\t\t(\tid, website, parent, position, access, groups, permission,\r\n\t\t\t\t\ticon, metatags, template, date_published, date_unpublish,\r\n\t\t\t\t\tvisible, views, votes, score\r\n\t\t\t\t)\r\n\t\t\t\tVALUES\r\n\t\t\t\t(\t0, :website, :parent, :position, :access, :groups, :permission,\r\n\t\t\t\t\t:icon, :metatags, :template, :date_published, :date_unpublish,\r\n\t\t\t\t\t:visible, :views, :votes, :score\r\n\t\t\t\t)\r\n\t\t\t',\r\n            array(\r\n\t            \":website\" => value_or_default($this->website, $website->id),\r\n\t            \":parent\" => value_or_default($this->parent, 0),\r\n\t            \":position\" => value_or_default($this->position, 0),\r\n\t            \":access\" => value_or_default($this->access, 0),\r\n\t            \":groups\" => $groups,\r\n\t            \":permission\" => value_or_default($this->permission, 0),\r\n\t\t\t\t\":icon\" => value_or_default($this->icon, 0),\r\n\t\t\t\t\":metatags\" => value_or_default($this->metatags, ''),\r\n\t\t\t\t\":template\" =>  value_or_default($this->template, ''),\r\n\t\t\t\t\":date_published\" => value_or_default($this->date_published, 0),\r\n\t\t\t\t\":date_unpublish\" => value_or_default($this->date_unpublish, 0),\r\n\t\t\t\t\":visible\" => value_or_default($this->visible, 0),\r\n\t\t\t\t\":views\" => 0,\r\n\t\t\t\t\":votes\" => 0,\r\n\t\t\t\t\":score\" => 0\r\n            )\r\n        );\r\n\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\t$this->id = $DB->get_last_id();\r\n\r\n\t\twebdictionary::save_element_strings('structure', $this->id, $this->dictionary, $this->website);\r\n   \t\tpath::saveElementPaths('structure', $this->id, $this->paths, $this->website);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'structure',\r\n                'save',\r\n                array(\r\n                    'structure' => $this\r\n                )\r\n            );\r\n        }\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n        $groups = '';\r\n        if(is_array($this->groups))\r\n        {\r\n            $this->groups = array_unique($this->groups); // remove duplicates\r\n            $this->groups = array_filter($this->groups); // remove empty\r\n            if(!empty($this->groups))\r\n            {\r\n                $groups = 'g'.implode(',g', $this->groups);\r\n            }\r\n        }\r\n\r\n        if($groups == 'g')\r\n        {\r\n            $groups = '';\r\n        }\r\n\r\n\t\t$ok = $DB->execute('\r\n \t\t\tUPDATE nv_structure\r\n\t\t\t   SET  parent = :parent, position = :position, access = :access, groups = :groups,\r\n\t\t\t   \t\tpermission = :permission, icon = :icon, metatags = :metatags,\r\n\t\t\t\t\tdate_published = :date_published, date_unpublish = :date_unpublish,\r\n\t\t\t\t\ttemplate = :template, visible = :visible, views = :views, votes = :votes, score = :score\r\n\t\t\t WHERE id = :id\r\n\t\t\t   AND website = :website\r\n\t\t   ',\r\n\t\t\tarray(\r\n\t\t\t\t\":id\" => $this->id,\r\n\t\t\t\t\":website\" => $this->website,\r\n\t            \":parent\" => value_or_default($this->parent, 0),\r\n\t            \":position\" => $this->position,\r\n\t            \":access\" => $this->access,\r\n\t            \":groups\" => $groups,\r\n\t            \":permission\" => $this->permission,\r\n\t\t\t\t\":icon\" => value_or_default($this->icon, ''),\r\n\t\t\t\t\":metatags\" => value_or_default($this->metatags, ''),\r\n\t\t\t\t\":template\" => $this->template,\r\n\t\t\t\t\":date_published\" => value_or_default($this->date_published, 0),\r\n\t\t\t\t\":date_unpublish\" => value_or_default($this->date_unpublish, 0),\r\n\t\t\t\t\":visible\" => $this->visible,\r\n\t\t\t\t\":views\" => $this->views,\r\n\t\t\t\t\":votes\" => $this->votes,\r\n\t\t\t\t\":score\" => $this->score\r\n\t\t\t)\r\n\t\t);\r\n\t\t\t      \r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\twebdictionary::save_element_strings('structure', $this->id, $this->dictionary, $this->website);\r\n\t\tpath::saveElementPaths('structure', $this->id, $this->paths, $this->website);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'structure',\r\n                'save',\r\n                array(\r\n                    'structure' => $this\r\n                )\r\n            );\r\n        }\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n    // retrieve all elements associated with this structure entry\r\n    public function elements($position=NULL)\r\n    {\r\n        global $DB;\r\n\r\n        $elements = array();\r\n\r\n        if(!empty($this->id))\r\n        {\r\n            $DB->query('\r\n                SELECT id\r\n                  FROM nv_items\r\n                 WHERE category = '.$this->id.'\r\n              ORDER BY position ASC, id ASC\r\n            ');\r\n            $ids = $DB->result('id');\r\n\r\n            if(!empty($position))\r\n            {\r\n                $element = new item();\r\n                $element->load($ids[$position]);\r\n                return $element;\r\n            }\r\n            else\r\n            {\r\n                for($i = 0; $i < count($ids); $i++)\r\n                {\r\n                    $elements[$i] = new item();\r\n                    $elements[$i]->load($ids[$i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return $elements;\r\n    }\r\n\r\n    public function elements_count()\r\n    {\r\n        global $DB;\r\n        global $webuser;\r\n        $permission = (!empty($_SESSION['APP_USER#'.APP_UNIQUE])? 1 : 0);\r\n\r\n        // public access / webuser based / webuser groups based\r\n        $access = 2;\r\n        if(!empty($current['webuser']))\r\n        {\r\n            $access = 1;\r\n            if(!empty($webuser->groups))\r\n            {\r\n                $access_groups = array();\r\n                foreach($webuser->groups as $wg)\r\n                {\r\n                    if(empty($wg))\r\n                    {\r\n                        continue;\r\n                    }\r\n                    $access_groups[] = 'groups LIKE \"%g'.$wg.'%\"';\r\n                }\r\n                if(!empty($access_groups))\r\n                {\r\n                    $access_extra = ' OR (access = 3 AND ('.implode(' OR ', $access_groups).'))';\r\n                }\r\n            }\r\n        }\r\n\r\n        $out = $DB->query_single(\r\n            'COUNT(id)',\r\n            'nv_items',\r\n            ' category = '.intval($this->id).' AND\r\n              website = '.intval($this->website).' AND\r\n              permission <= '.$permission.' AND \r\n              (date_published = 0 OR date_published < '.core_time().') AND \r\n              (date_unpublish = 0 OR date_unpublish > '.core_time().') AND \r\n              (access = 0 OR access = '.$access.$access_extra.')\r\n            ');\r\n\r\n        return $out;\r\n    }\r\n\t\r\n\tpublic static function loadTree($id_parent=0, $ws_id=null)\r\n\t{\r\n\t\tglobal $DB;\t\r\n\t\tglobal $website;\r\n\r\n\t\tif(empty($ws_id))\r\n        {\r\n            $ws_id = $website->id;\r\n        }\r\n\r\n\t\t$ws = new website();\r\n\t\t$ws->load($ws_id);\r\n\r\n        // TODO: consider implementing a cache to avoid extra database queries\r\n\t\t$DB->query('\r\n            SELECT *\r\n              FROM nv_structure\r\n\t\t\t WHERE parent = '.intval($id_parent).' AND\r\n\t\t\t       website = '.$ws->id.'\r\n\t\t  ORDER BY position ASC, id DESC\r\n\t    ');\r\n\r\n\t\t$result = $DB->result();\r\n\r\n\t\tfor($i=0; $i < count($result); $i++)\r\n\t\t{\r\n\t\t\tif(empty($result[$i]->date_published)) \r\n            {\r\n                $result[$i]->date_published = '&infin;';\r\n            }\r\n\t\t\telse\r\n            {\r\n                $result[$i]->date_published = core_ts2date($result[$i]->date_published, false);\r\n            }\r\n\t\t\t\t\r\n\t\t\tif(empty($result[$i]->date_unpublish)) \r\n            {\r\n                $result[$i]->date_unpublish = '&infin;';\r\n            }\r\n\t\t\telse\r\n            {\r\n                $result[$i]->date_unpublish = core_ts2date($result[$i]->date_unpublish, false);\r\n            }\r\n\t\t\t\t\r\n\t\t\t$result[$i]->dates = $result[$i]->date_published.' - '.$result[$i]->date_unpublish;\r\n\t\t}\r\n\t\t\r\n\t\treturn $result;\r\n\t}\r\n\t\r\n\tpublic static function hierarchy($id_parent=0, $ws_id=null)\r\n\t{\r\n\t\tglobal $website;\r\n        global $theme;\r\n\r\n\t\tif(empty($ws_id))\r\n        {\r\n            $ws_id = $website->id;\r\n        }\r\n\r\n\t\t$ws = new website();\r\n\t\t$ws->load($ws_id);\r\n\r\n\t\t$flang = $ws->languages_list[0];\r\n\t\tif(empty($flang))\r\n        {\r\n            return array();\r\n        }\r\n\t\t\r\n\t\t$tree = array();\r\n\t\t\r\n\t\tif($id_parent==-1)\r\n\t\t{\r\n            // create the virtual root structure entry (the website)\r\n\t\t\t$obj = new structure();\r\n\t\t\t$obj->id = 0;\r\n\t\t\t$obj->label = $ws->name;\r\n            $obj->_multilanguage_label = $ws->name;\r\n\t\t\t$obj->parent = -1;\r\n\t\t\t$obj->children = structure::hierarchy(0, $ws_id);\r\n\t\t\t$obj->paths = $ws->homepage();\r\n\r\n\t\t\t$tree[] = $obj;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$tree = structure::loadTree($id_parent, $ws_id);\r\n\r\n            $templates = template::elements('structure');\r\n            if(empty($templates))\r\n            {\r\n                $templates = array();\r\n            }\r\n\r\n\t\t\tfor($i=0; $i < count($tree); $i++)\r\n            {\r\n\t\t\t\t$tree[$i]->dictionary = webdictionary::load_element_strings('structure', $tree[$i]->id);\r\n                $tree[$i]->paths\t  = path::loadElementPaths('structure', $tree[$i]->id, $ws_id);\r\n                $tree[$i]->label = $tree[$i]->dictionary[$ws->languages_list[0]]['title'];\r\n\r\n                $tree[$i]->template_title = $tree[$i]->template;\r\n\r\n                foreach($templates as $template_def)\r\n                {\r\n                    if($template_def->type == $tree[$i]->template)\r\n                    {\r\n                        $tree[$i]->template_title = $template_def->title;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(method_exists($theme, \"t\"))\r\n                {\r\n                    $tree[$i]->template_title = $theme->t($tree[$i]->template_title);\r\n                }\r\n\r\n                for($wl=0; $wl < count($ws->languages_list); $wl++)\r\n                {\r\n                    $lang = $ws->languages_list[$wl];\r\n\r\n                    if(empty($tree[$i]->dictionary[$lang]['title']))\r\n                    {\r\n                        $tree[$i]->dictionary[$lang]['title'] = '[ ? ]';\r\n                    }\r\n                    else\r\n                    {\r\n                        core_special_chars($tree[$i]->dictionary[$lang]['title']);\r\n                    }\r\n\r\n                    // the following could be removed? seems like is not used\r\n                        $style = '';\r\n                        if($lang != $flang)\r\n                        {\r\n                            $style = 'display: none';\r\n                        }\r\n\r\n                        $label[] = '<span class=\"structure-label\" lang=\"'.$lang.'\" style=\"'.$style.'\">'\r\n                                  .core_special_chars($tree[$i]->dictionary[$lang]['title'])\r\n                                  .'</span>';\r\n\r\n                        $bc[$tree[$i]->id][$lang] = $tree[$i]->dictionary[$lang]['title'];\r\n                }\r\n\r\n                $children = structure::hierarchy($tree[$i]->id, $ws_id);\r\n                $tree[$i]->children = $children;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\treturn $tree;\r\n\t}\r\n\t\r\n\tpublic static function hierarchyList($hierarchy, $selected=0, $lang=\"\", $ignore_permissions=false)\r\n\t{\r\n\t    global $website;\r\n\r\n\t\t$html = array();\r\n\t\t\t\t\r\n\t\tif(!is_array($hierarchy))\r\n        {\r\n            $hierarchy = array();\r\n        }\r\n\t\t\r\n\t\tif(!is_array($selected))\r\n        {\r\n            $selected = array($selected);\r\n        }\r\n\r\n\t\tforeach($hierarchy as $node)\r\n\t\t{\t\r\n\t\t\t$li_class = '';\r\n\r\n\t\t\t$post_html = structure::hierarchyList($node->children, $selected, $lang, $ignore_permissions);\r\n            $has_children = !empty($post_html);\r\n\r\n\t\t\tif(strpos($post_html, 'class=\"active\"')!==false)\r\n            {\r\n                $li_class = ' class=\"open\" ';\r\n            }\r\n\r\n\t\t\t// disable option if not allowed AND all of its children are not allowed either\r\n\t\t\tif(!$ignore_permissions && !structure::category_allowed($node->id) && strpos($post_html, \"ui-state-disabled\") > 0)\r\n            {\r\n                $li_class = ' class=\"ui-state-disabled\" ';\r\n            }\r\n\r\n\t\t\tif(empty($html))\r\n            {\r\n                $html[] = '<ul>';\r\n            }\r\n\r\n            if(empty($lang))\r\n            {\r\n                $title = core_special_chars($node->label);\r\n                $path = array_values($node->paths)[0];\r\n            }\r\n            else\r\n            {\r\n                $title = core_special_chars($node->dictionary[$lang]['title']);\r\n                $path = $node->paths[$lang];\r\n            }\r\n\r\n            $path = nvweb_prepare_link($path, $website->absolute_path());\r\n\r\n\t\t\tif(empty($title))\r\n\t\t\t{\r\n\t\t\t\tforeach($node->dictionary as $lkey => $lval)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!empty($lval['title']) && $lval['title'] != '[ ? ]')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$title  = '<span style=\"opacity: 0.8;\">'.core_special_chars($lval['title']).' <img align=\"absmiddle\" src=\"img/icons/silk/comment.png\" class=\"silk-sprite\" /><i>'.$lkey.'</i></span>';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(empty($title)) // no translation for ANY language, so just add a placeholder\r\n                {\r\n                    $title = '<span style=\"opacity: 0.75;\"><i class=\"fa fa-fw fa-language\"></i> #'.$node->id.'</span>';\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\tif(!$ignore_permissions && !structure::category_allowed($node->id))\r\n            {\r\n                $title = '<div class=\"ui-state-disabled\">'.$title.'</div>';\r\n            }\r\n\r\n            $node_type = 'folder';\r\n            if(!$has_children)\r\n            {\r\n                $node_type = 'leaf';\r\n            }\r\n\r\n\t\t\tif(in_array($node->id, $selected))\r\n            {\r\n                $html[] = '<li '.$li_class.' value=\"'.$node->id.'\" data-node-id=\"'.$node->id.'\" data-node-path=\"'.$path.'\" data-selected=\"true\" data-jstree=\\'{\"selected\": true, \"type\": \"'.$node_type.'\"}\\'><span class=\"active\">'.$title.'</span>';\r\n            }\r\n\t\t\telse\r\n            {\r\n                $html[] = '<li '.$li_class.' value=\"'.$node->id.'\" data-node-id=\"'.$node->id.'\" data-node-path=\"'.$path.'\" data-selected=\"false\" data-jstree=\\'{\"selected\": false, \"type\": \"'.$node_type.'\"}\\'><span>'.$title.'</span>';\r\n            }\r\n\r\n\t\t\t$html[] = $post_html;\r\n\t\t\t$html[] = '</li>';\r\n\t\t}\r\n\r\n\t\tif(!empty($html))\r\n        {\r\n            $html[] = '</ul>';\r\n        }\r\n\t\t\r\n\t\treturn implode(\"\\n\", $html);\r\n\t}\r\n\r\n\tpublic static function category_allowed($id)\r\n\t{\r\n\t\tglobal $user;\r\n\r\n\t\t$allowed = true;\r\n\r\n\t\tif(!empty($user->id))\r\n\t\t{\r\n\t\t\t$categories_allowed = $user->permission(\"structure.categories.allowed\");\r\n\r\n\t\t\tif(!empty($categories_allowed))\r\n\t\t\t{\r\n\t\t\t\tif(!in_array($id, $categories_allowed))\r\n                {\r\n                    $allowed = false;\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\t$categories_excluded = $user->permission(\"structure.categories.excluded\");\r\n\t\t\tif(!empty($categories_excluded))\r\n\t\t\t{\r\n\t\t\t\tif(in_array($id, $categories_excluded))\r\n                {\r\n                    $allowed = false;\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $allowed;\r\n\t}\r\n\r\n    public static function hierarchyPath($hierarchy, $category)\r\n    {\r\n        if(is_array($hierarchy))\r\n        {\r\n            foreach($hierarchy as $node)\r\n            {\r\n                if(!empty($node->children))\r\n                {\r\n                    $val = structure::hierarchyPath($node->children, $category);\r\n                }\r\n\r\n                if($node->id == $category || (!empty($val)) )\r\n                {\r\n                    if(empty($val))\r\n                    {\r\n                        return array($node->label);\r\n                    }\r\n\r\n                    return array_merge(array($node->label), $val);\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    public static function hierarchyListClasses($hierarchy, $level=1)\r\n    {\r\n        $html = array();\r\n\r\n        if(!is_array($hierarchy))\r\n        {\r\n            $hierarchy = array();\r\n        }\r\n\r\n        foreach($hierarchy as $node)\r\n        {\r\n            $post_html = structure::hierarchyListClasses($node->children, $level+1);\r\n\r\n            if(empty($html) && $level==1)\r\n            {\r\n                $html[] = '<ul>';\r\n            }\r\n\r\n            $extra = '';\r\n            if(!empty($post_html))\r\n            {\r\n                $extra = 'group';\r\n            }\r\n\r\n            $html[] = '<li class=\"level'.$level.' '.$extra.'\" data-value=\"'.$node->id.'\"><span>'.core_special_chars($node->label).'</span>';\r\n\r\n            $html[] = $post_html;\r\n            $html[] = '</li>';\r\n        }\r\n\r\n        if(!empty($html) && $level==1)\r\n        {\r\n            $html[] = '</ul>';\r\n        }\r\n\r\n        return implode(\"\\n\", $html);\r\n    }\r\n\t\r\n\tpublic static function reorder($parent, $children)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\t\r\n\t\t$children = explode(\"#\", $children);\r\n\t\t\t\t\r\n\t\tfor($i=0; $i < count($children); $i++)\r\n\t\t{\t\t\r\n\t\t\tif(empty($children[$i]))\r\n            {\r\n                continue;\r\n            }\r\n\r\n\t\t\t$ok =\t$DB->execute('UPDATE nv_structure \r\n\t\t\t\t\t\t\t\t\t SET position = '.($i+1).'\r\n\t\t\t\t\t\t\t\t   WHERE id = '.$children[$i].' \r\n\t\t\t\t\t\t\t\t\t AND parent = '.intval($parent).'\r\n\t\t\t\t\t\t\t\t\t AND website = '.$website->id);\r\n\t\t\t\t\t\t\t \r\n\t\t\tif(!$ok)\r\n            {\r\n                return array(\"error\" => $DB->get_last_error());\r\n            }\r\n\t\t}\r\n\t\t\t\r\n\t\treturn true;\t\r\n\t}\r\n\r\n\tpublic function property($property_name, $raw=false)\r\n\t{\r\n\t\t// load properties if not already done\r\n\t\tif(empty($this->properties))\r\n        {\r\n            $this->properties = property::load_properties('structure', $this->template, 'structure', $this->id);\r\n        }\r\n\r\n\t\tfor($p=0; $p < count($this->properties); $p++)\r\n\t\t{\r\n\t\t\tif($this->properties[$p]->name==$property_name || $this->properties[$p]->id==$property_name)\r\n\t\t\t{\r\n\t\t\t\tif($raw)\r\n                {\r\n                    $out = $this->properties[$p]->value;\r\n                }\r\n\t\t\t\telse\r\n                {\r\n                    $out = $this->properties[$p]->value;\r\n                }\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $out;\r\n\t}\r\n\r\n\tpublic function property_definition($property_name)\r\n\t{\r\n\t\t// load properties if not already done\r\n\t\tif(empty($this->properties))\r\n        {\r\n            $this->properties = property::load_properties('structure', $this->template, 'structure', $this->id);\r\n        }\r\n\r\n\t\tfor($p=0; $p < count($this->properties); $p++)\r\n\t\t{\r\n\t\t\tif($this->properties[$p]->name==$property_name || $this->properties[$p]->id==$property_name)\r\n\t\t\t{\r\n\t\t\t\t$out = $this->properties[$p];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $out;\r\n\t}\r\n\r\n    public function property_exists($property_name)\r\n    {\r\n        // load properties if not already done\r\n        if(empty($this->properties))\r\n        {\r\n            $this->properties = property::load_properties('structure', $this->template, 'structure', $this->id);\r\n        }\r\n\r\n        for($p=0; $p < count($this->properties); $p++)\r\n        {\r\n            if($this->properties[$p]->name==$property_name || $this->properties[$p]->id==$property_name)\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n        global $website;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_structure WHERE website = '.intval($website->id), 'object');\r\n\r\n        if($type='json')\r\n        {\r\n            $out = json_encode($DB->result());\r\n        }\r\n\r\n        return $out;\r\n    }\r\n\r\n\tpublic static function __set_state(array $obj)\r\n\t{\r\n\t\t$tmp = new structure();\r\n\t\tforeach($obj as $key => $val)\r\n        {\r\n            $tmp->$key = $val;\r\n        }\r\n\r\n\t\treturn $tmp;\r\n\t}\r\n}\r\n\r\n?>", "<?php\r\nclass website\r\n{\r\n\tpublic $id; \r\n\tpublic $name;\r\n\tpublic $protocol; // default http://\r\n\tpublic $subdomain; // usually \"www\"\r\n\tpublic $domain; // naviwebs.net\r\n\tpublic $folder; // usually empty, used when the website is IN a folder, ex. http://www.naviwebs.com/demo/homepage\r\n    public $redirect_to; // if the website is private or closed, redirect anonymous visitors to a real path\r\n    public $wrong_path_action;\r\n    public $wrong_path_redirect;\r\n\tpublic $empty_path_action;\r\n\tpublic $languages; // array('en' => array( 'language' => 'en', 'variant' => 'US', 'code' => 'en_US' => 'system_locale' => 'ENU_USA'), 'es_ES' => array(...), ...)\r\n\tpublic $languages_published; // array ('en', 'es_ES')\r\n\tpublic $date_format;\r\n    public $tinymce_css;\r\n    public $resize_uploaded_images;\t// what to do with the uploaded images, 0 => keep original files, \"yy\" px => autoresize to yy pixels\r\n    public $comments_enabled_for;\r\n    public $comments_default_moderator;\r\n    public $share_files_media_browser;\r\n    public $page_cache;\r\n\tpublic $tracking_scripts;\r\n\tpublic $additional_scripts;\r\n\tpublic $additional_styles;\r\n\tpublic $permission;\t//  0 => public | 1 => private | 2 => only navigate users\r\n\tpublic $block_types;    // deprecated, will be removed in NV 3.0!!!\r\n\tpublic $homepage;\r\n\tpublic $default_timezone;\r\n    public $aliases;\r\n\t//public $server_time_offset;\r\n    public $word_separator;\r\n    public $metatag_title_order;\r\n\tpublic $metatag_description;  // multilanguage\r\n\tpublic $metatag_keywords;  // multilanguage\r\n    public $metatags; // multilanguage\r\n    public $mail_mailer; // smtp or sendmail\r\n\tpublic $mail_server;\r\n\tpublic $mail_port;\r\n\tpublic $mail_user;\r\n\tpublic $mail_address;\r\n\tpublic $mail_password;\r\n    public $mail_security;\r\n    public $mail_ignore_ssl_security;\r\n\tpublic $contact_emails;\r\n\tpublic $favicon;\r\n\tpublic $decimal_separator;\r\n\tpublic $thousands_separator;\r\n\tpublic $currency;\r\n\tpublic $size_unit;\r\n\tpublic $weight_unit;\r\n\t\r\n    public $shop_logo;\r\n    public $shop_address;       // multilanguage\r\n    public $shop_legal_info;    // multilanguage\r\n    public $shop_purchase_conditions_path;\r\n\r\n\tpublic $theme;\r\n\tpublic $theme_options;\r\n\t\r\n\tpublic $languages_list;\r\n\r\n\tpublic function load($id=\"\")\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\tif(empty($id)) // we suppose we only have one website or we just want the first\r\n\t\t{\r\n\t\t\tif($DB->query('SELECT * FROM nv_websites LIMIT 1'))\r\n\t\t\t{\r\n\t\t\t\t$data = $DB->result();\r\n\t\t\t\t$this->load_from_resultset($data); // we'll catch the first website there\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif($DB->query('SELECT * FROM nv_websites WHERE id = '.intval($id)))\r\n\t\t\t{\r\n\t\t\t\t$data = $DB->result();\r\n\t\t\t\t$this->load_from_resultset($data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\t$main = $rs[0];\r\n\r\n\t\t$this->id\t\t\t\t= $main->id; \r\n\t\t$this->name\t\t\t\t= $main->name;\r\n\r\n\t\t// the fields below give an absoulte path to the website: protocol://subdomain.domain/folder\r\n\t\t$this->protocol\t\t\t= $main->protocol;\r\n\t\t$this->subdomain\t\t= $main->subdomain;\r\n\t\t$this->domain\t\t\t= $main->domain;\t\t\t\t\r\n\t\t$this->folder\t\t\t= $main->folder;\r\n        $this->word_separator\t= value_or_default($main->word_separator, '_');\r\n\r\n\t\t$this->redirect_to\t\t    = $main->redirect_to;\r\n        $this->wrong_path_action    = $main->wrong_path_action;\r\n        $this->wrong_path_redirect  = $main->wrong_path_redirect;\r\n        $this->empty_path_action    = $main->empty_path_action;\r\n\r\n\t\t$this->languages\t\t    = mb_unserialize($main->languages);\r\n\t\t$this->languages_published  = array_filter(mb_unserialize($main->languages_published));\r\n\t\t$this->date_format\t\t    = $main->date_format;\r\n\t\t$this->tinymce_css\t\t    = $main->tinymce_css;\r\n\t\t$this->resize_uploaded_images       = $main->resize_uploaded_images;\r\n        $this->comments_enabled_for         = $main->comments_enabled_for;\r\n        $this->comments_default_moderator   = $main->comments_default_moderator;\r\n\t\t$this->share_files_media_browser    = $main->share_files_media_browser;\r\n\t\t$this->page_cache           = $main->page_cache;\r\n\r\n\t\t$this->tracking_scripts             = $main->tracking_scripts;\r\n\t\t$this->additional_scripts           = $main->additional_scripts;\r\n\t\t$this->additional_styles            = $main->additional_styles;\r\n\t\t$this->permission\t\t= $main->permission;\r\n\t\t$this->block_types\t\t= mb_unserialize($main->block_types);\r\n\t\t$this->homepage\t\t\t= $main->homepage;\t\r\n\t\t$this->default_timezone = $main->default_timezone;\t\r\n\t\t$this->metatag_title_order\t= $main->metatag_title_order;\r\n\t\t$this->metatag_description\t= json_decode($main->metatag_description, true);\r\n\t\t$this->metatag_keywords \t= json_decode($main->metatag_keywords, true);\r\n\t\t$this->metatags\t\t\t    = json_decode($main->metatags, true);\r\n\t\t$this->favicon\t\t\t    = $main->favicon;\r\n\r\n\t\t$this->decimal_separator    = $main->decimal_separator;\r\n\t\t$this->thousands_separator\t= $main->thousands_separator;\r\n\t\t$this->currency             = $main->currency;\r\n\t\t$this->size_unit            = $main->size_unit;\r\n\t\t$this->weight_unit          = $main->weight_unit;\r\n\r\n        $this->shop_logo                        = $main->shop_logo;\r\n        $this->shop_address                     = json_decode($main->shop_address, true);\r\n        $this->shop_legal_info                  = json_decode($main->shop_legal_info, true);\r\n        $this->shop_purchase_conditions_path    = $main->shop_purchase_conditions_path;\r\n\r\n\t\t$this->mail_mailer\t\t            = $main->mail_mailer;\r\n\t\t$this->mail_server\t\t            = $main->mail_server;\r\n\t\t$this->mail_port\t\t            = $main->mail_port;\r\n        $this->mail_security\t            = $main->mail_security;\r\n        $this->mail_ignore_ssl_security\t    = $main->mail_ignore_ssl_security;\r\n\t\t$this->mail_user\t\t            = $main->mail_user;\r\n\t\t$this->mail_address\t\t            = $main->mail_address;\r\n        $this->mail_password\t            = $main->mail_password;\r\n\t\t\r\n\t\t$this->theme\t\t\t= $main->theme;\r\n\t\t$this->theme_options\t= json_decode($main->theme_options);\r\n\r\n        $this->aliases          = json_decode($main->aliases, true);\r\n\t\t\r\n\t\t$this->contact_emails\t= mb_unserialize($main->contact_emails);\r\n\t\tif(!is_array($this->contact_emails))\r\n        {\r\n            $this->contact_emails = array();\r\n        }\r\n\t\t\t\t\r\n\t\tif(!is_array($this->languages))\r\n        {\r\n            $this->languages = array();\r\n        }\r\n\t\t$this->languages_list\t= array_keys($this->languages);\r\n\t\t\r\n\t\tdate_default_timezone_set($this->default_timezone);\r\n\t}\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n        global $theme;\r\n\r\n\t\t$ws_theme = $theme;\r\n\t\tif($this->theme != $theme->name)\r\n\t\t{\r\n\t\t\t$ws_theme = new theme();\r\n\t\t\t$ws_theme->load($this->theme);\r\n\t\t}\r\n\r\n\t\t$this->name\t\t\t\t= $_REQUEST['title'];\r\n\t\t\r\n\t\t$this->protocol\t\t\t= $_REQUEST['protocol'];\r\n\t\t$this->subdomain\t\t= $_REQUEST['subdomain'];\r\n\t\t$this->domain\t\t\t= $_REQUEST['domain'];\t\t\t\t\r\n\t\t$this->folder\t\t\t= $_REQUEST['folder'];\r\n        $this->word_separator\t= $_REQUEST['word_separator'];\r\n\r\n        $this->redirect_to\t\t    = $_REQUEST['redirect_to'];\r\n        $this->wrong_path_action    = $_REQUEST['wrong_path_action'];\r\n        $this->wrong_path_redirect  = $_REQUEST['wrong_path_redirect'];\r\n        $this->empty_path_action    = $_REQUEST['empty_path_action'];\r\n\r\n        $this->date_format\t\t= $_REQUEST['date_format'];\r\n\t\t$this->tinymce_css\t\t= $_REQUEST['tinymce_css'];\r\n\t\t$this->resize_uploaded_images = intval($_REQUEST['resize_uploaded_images']);\r\n\r\n        $this->comments_enabled_for         =   intval($_REQUEST['comments_enabled_for']);\r\n        $this->comments_default_moderator   =   $_REQUEST['comments_default_moderator'];\r\n\t\t$this->share_files_media_browser    =   intval($_REQUEST['share_files_media_browser']);\r\n\t\t$this->page_cache                   =   ($_REQUEST['page_cache']=='1'? 1 : 0);\r\n\r\n\t\t$this->tracking_scripts             = $_REQUEST['tracking_scripts'];\r\n\t\t$this->additional_scripts           = $_REQUEST['additional_scripts'];\r\n\t\t$this->additional_styles            = $_REQUEST['additional_styles'];\r\n\r\n\t\tif(empty($_REQUEST['homepage_from_structure']))\r\n        {\r\n            $this->homepage\t\t\t= $_REQUEST['homepage'];\r\n        }\r\n\r\n\t\t$this->permission\t\t= intval($_REQUEST['permission']);\r\n\t\t$this->default_timezone\t= $_REQUEST['default_timezone'];\r\n\t\t\r\n\t\t$this->mail_mailer\t\t= $_REQUEST['mail_mailer'][0];\r\n\t\t$this->mail_server\t\t= $_REQUEST['mail_server'];\r\n\t\t$this->mail_port\t\t= intval($_REQUEST['mail_port']);\r\n        $this->mail_security\t= intval($_REQUEST['mail_security']);\r\n        $this->mail_ignore_ssl_security = ($_REQUEST['mail_ignore_ssl_security']=='1'? 1 : 0);\r\n\t\t$this->mail_user\t\t= $_REQUEST['mail_user'];\r\n\t\t$this->mail_address\t\t= $_REQUEST['mail_address'];\r\n\r\n\t\tif(!empty($_REQUEST['mail_password']))\r\n        {\r\n            $this->mail_password\t= $_REQUEST['mail_password'];\r\n        }\r\n\r\n\t\t$ce\t= explode(\"\\n\", $_REQUEST['contact_emails']);\r\n\t\t\t\r\n\t\t$this->contact_emails = array();\r\n\t\tforeach($ce as $cemail)\r\n\t\t{\r\n\t\t\t$cemail = trim($cemail);\r\n\t\t\tif(empty($cemail))\r\n            {\r\n                continue;\r\n            }\r\n\t\t\t$this->contact_emails[] = $cemail;\r\n\t\t}\r\n\t\t\r\n\t\t$this->favicon\t= intval($_REQUEST['website-favicon']);\r\n\r\n        $this->decimal_separator = $_REQUEST['website-decimal_separator'];\r\n        $this->thousands_separator = $_REQUEST['website-thousands_separator'];\r\n        $this->currency = $_REQUEST['website-default_currency'];\r\n        $this->size_unit = $_REQUEST['website-default_size_unit'];\r\n        $this->weight_unit = $_REQUEST['website-default_weight_unit'];\r\n\r\n        // languages and locales\r\n        $this->languages = array();\r\n        $this->languages_published = array();\r\n\r\n        $language_ids = array_values($_REQUEST['language-id']);\r\n        $language_variants = array_values($_REQUEST['language-variant-code']);\r\n        $language_locales = array_values($_REQUEST['language-locale']);\r\n        $language_published = array_values($_REQUEST['language-published']);\r\n\r\n        for($li=0; $li < count($language_ids); $li++)\r\n        {\r\n            $variant = trim($language_variants[$li]);\r\n            $code = $language_ids[$li];\r\n            if(!empty($variant))\r\n            {\r\n                $code .= '_'.$variant;\r\n            }\r\n\r\n            $this->languages[$code] = array(\r\n                'language' => $language_ids[$li],\r\n                'variant' => $variant,\r\n                'code' => $code,\r\n                'system_locale' => $language_locales[$li]\r\n            );\r\n\r\n            $this->languages_published[] = ($language_published[$li]=='1'? $code : '');\r\n        }\r\n\r\n        // website metatags\r\n        $this->metatag_title_order = $_REQUEST['metatag_title_order'];\r\n        $this->metatag_description = array();\r\n        $this->metatag_keywords = array();\r\n        $this->metatags = array();\r\n\r\n        foreach($this->languages as $language)\r\n        {\r\n            $lcode = $language['code'];\r\n            $this->metatag_description[$lcode]\t= $_REQUEST['metatag_description-'.$lcode];\r\n            $this->metatag_keywords[$lcode]\t= $_REQUEST['metatag_keywords-'.$lcode];\r\n            $this->metatags[$lcode]\t= $_REQUEST['metatags-'.$lcode];\r\n        }\r\n\r\n        // website aliases\r\n        $this->aliases = array();\r\n        if(empty($_POST['website-aliases-alias']))\r\n        {\r\n            $_POST['website-aliases-alias'] = array();\r\n        }\r\n\r\n        foreach($_POST['website-aliases-alias'] as $key => $value)\r\n        {\r\n            $value = trim($value);\r\n            if(!empty($value))\r\n            {\r\n                $value_real = trim($_POST['website-aliases-real'][$key]);\r\n                if(!empty($value_real))\r\n                {\r\n                    $this->aliases[$value] = $value_real;\r\n                }\r\n            }\r\n        }\r\n\r\n        $this->theme_options = array();\r\n\r\n        // theme style (common property)\r\n        $this->theme_options['style'] = $_REQUEST['property-style'];\r\n\r\n        if(!empty($ws_theme->options))\r\n        {\r\n            foreach($ws_theme->options as $theme_option)\r\n            {\r\n                // get property info\r\n                $property = new property();\r\n                $property->load_from_theme($theme_option, NULL, NULL, NULL, $this->id);\r\n\r\n                $value = '';\r\n\r\n                switch($property->type)\r\n                {\r\n                    case 'text':\r\n                    case 'textarea':\r\n                    case 'rich_textarea':\r\n                        // multilang\r\n                        $value = array();\r\n                        if(!is_array($this->languages_list))\r\n                        {\r\n                            $this->languages_list = array();\r\n                        }\r\n\r\n                        foreach($this->languages_list as $lang)\r\n                        {\r\n                            $value[$lang] = $_REQUEST['property-'.$theme_option->id.'-'.$lang];\r\n                        }\r\n                        break;\r\n\r\n                    case 'link':\r\n                        // multilang and title+link\r\n                        $value = array();\r\n                        foreach($this->languages_list as $lang)\r\n                        {\r\n                            $value[$lang] = $_REQUEST['property-'.$theme_option->id.'-'.$lang.'-link'].'##'.$_REQUEST['property-'.$theme_option->id.'-'.$lang.'-title'];\r\n                        }\r\n                        break;\r\n\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        $value = core_date2ts($_REQUEST['property-'.$theme_option->id]);\r\n                        break;\r\n\r\n                    case 'moption':\r\n                        $value = implode(',', $_REQUEST['property-'.$theme_option->id]);\r\n                        break;\r\n\r\n                    case 'coordinates':\r\n                        $value = $_REQUEST['property-'.$theme_option->id.'-latitude'].'#'.$_REQUEST['property-'.$theme_option->id.'-longitude'];\r\n                        break;\r\n\r\n                    case 'decimal':\r\n                        $value = $_REQUEST['property-'.$theme_option->id];\r\n                        $value = core_string2decimal($value);\r\n                        break;\r\n\r\n                    default:\r\n                        // direct value\r\n                       $value = $_REQUEST['property-'.$theme_option->id];\r\n                }\r\n\r\n                $this->theme_options[$theme_option->id] = $value;\r\n            }\r\n        }\r\n\r\n        // shop information\r\n        $this->shop_logo            = $_REQUEST['website-shop_logo'];\r\n        $this->shop_purchase_conditions_path = $_REQUEST['website-shop_purchase_conditions_path'];\r\n\r\n        $this->shop_address = array();\r\n        $this->shop_legal_info = array();\r\n\r\n        foreach($this->languages as $language)\r\n        {\r\n            $lcode = $language['code'];\r\n\r\n            $this->shop_address[$lcode]     = $_REQUEST['website-shop_address-'.$lcode];\r\n            $this->shop_legal_info[$lcode]  = $_REQUEST['website-shop_legal_info-'.$lcode];\r\n        }\r\n\t}\r\n\t\t\r\n\tpublic function save()\r\n\t{\r\n\t\tif(!empty($this->id))\r\n        {\r\n            return $this->update();\r\n        }\r\n\t\telse\r\n        {\r\n            return $this->insert();\r\n        }\r\n\t}\r\n\t\r\n\tpublic function delete($delete_related_content=true)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n        $affected_rows = 0;\r\n\r\n        set_time_limit(0);\r\n\r\n\t\tif(!empty($this->id))\r\n        {\r\n            if ($delete_related_content)\r\n            {\r\n                // delete all content related to the website\r\n                // EXCEPTION: webusers, as they may be shared between websites\r\n                $tables = array(\r\n                    'nv_comments',              // comments\r\n                    'nv_extensions',            // extensions settings\r\n                    'nv_notes',                 // notes\r\n                    'nv_paths',                 // paths\r\n                    'nv_properties',            // custom properties definitions\r\n                    'nv_properties_items',      // custom properties values\r\n                    'nv_templates',             //  templates\r\n                    'nv_webuser_votes',         //  webusers votes\r\n                    'nv_webuser_favorites',     //  webusers favorites\r\n                    'nv_blocks',                //  blocks\r\n                    'nv_items',                 //  elements\r\n                    'nv_feeds',                 //  feeds\r\n                    'nv_structure',             //  structure\r\n                    'nv_webdictionary',         //  web dictionary\r\n                    'nv_webdictionary_history', // web dictionary history\r\n                    'nv_backups',               // backups\r\n                    'nv_files',                 // files & folders\r\n                );\r\n\r\n                foreach ($tables as $table)\r\n                {\r\n                    $DB->execute('\r\n                        DELETE FROM ' . $table . '\r\n                         WHERE website = ' . intval($this->id) . '\r\n                    ');\r\n                }\r\n\r\n                // remove ALL files associated to the website\r\n                // including: images, documents, thumbnails, backups, cache, custom templates...\r\n                core_remove_folder(NAVIGATE_PRIVATE . '/' . $this->id);\r\n            }\r\n\r\n            // remove all associated website notes\r\n            grid_notes::remove_all('website', $this->id);\r\n\r\n            // finally delete the website entry\r\n            $DB->execute('\r\n\t\t\t    DELETE FROM nv_websites\r\n\t\t\t\t WHERE id = ' . intval($this->id) . '\r\n\t\t\t\t LIMIT 1\r\n            ');\r\n\r\n            $affected_rows = $DB->get_affected_rows();\r\n\r\n            // if allowed, send statistics to navigatecms.com\r\n            if (NAVIGATECMS_STATS)\r\n            {\r\n                global $user;\r\n                @core_curl_post(\r\n                    'http://statistics.navigatecms.com/website/remove',\r\n                    array(\r\n                        'name'            => $this->name,\r\n                        'ip'              => $_SERVER['SERVER_ADDR'],\r\n                        'website_id'      => $this->id,\r\n                        'url'             => $this->absolute_path(),\r\n                        'folder'          => $this->folder,\r\n                        'word_separator'  => $this->word_separator,\r\n                        'homepage'        => $this->homepage,\r\n                        'theme'           => $this->theme,\r\n                        'emails'          => serialize($this->contact_emails),\r\n                        'languages'       => serialize($this->languages_published),\r\n                        'permission'      => $this->permission,\r\n                        'author_name'     => $user->username,\r\n                        'author_email'    => $user->email,\r\n                        'author_language' => $user->language\r\n                    ),\r\n                    NULL,\r\n                    10,\r\n                    'post'\r\n                );\r\n            }\r\n\r\n            if(method_exists($events, 'trigger'))\r\n            {\r\n                $events->trigger(\r\n                    'website',\r\n                    'delete',\r\n                    array(\r\n                        'website' => $this\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\t\t\r\n\t\treturn $affected_rows;\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n        global $events;\r\n\r\n\t\t$ok = $DB->execute('\r\n\t\t    INSERT INTO nv_websites\r\n            (\tid, name, protocol, subdomain, domain, folder, redirect_to, \r\n            \twrong_path_action, wrong_path_redirect, empty_path_action,\r\n                languages, languages_published, aliases,\r\n                word_separator, date_format, tinymce_css, resize_uploaded_images,\r\n                comments_enabled_for, comments_default_moderator, share_files_media_browser, page_cache,\r\n                tracking_scripts, additional_scripts, additional_styles, permission,\r\n                mail_mailer, mail_server, mail_port, mail_security, mail_ignore_ssl_security, mail_user, mail_address, mail_password, \r\n                contact_emails, homepage, default_timezone, \r\n                metatag_title_order, metatag_description, metatag_keywords, metatags,\r\n                favicon, decimal_separator, thousands_separator, currency, size_unit, weight_unit,\r\n                shop_logo, shop_address, shop_legal_info, shop_purchase_conditions_path,\r\n                theme, theme_options, block_types\r\n            )\r\n            VALUES\r\n            ( 0,\r\n              :name,\r\n              :protocol,\r\n              :subdomain,\r\n              :domain,\r\n              :folder,\r\n              :redirect_to,\r\n              :wrong_path_action,\r\n              :wrong_path_redirect,\r\n              :empty_path_action,\r\n              :languages,\r\n              :languages_published,\r\n              :aliases,\r\n              :word_separator,\r\n              :date_format,\r\n              :tinymce_css,\r\n              :resize_uploaded_images,\r\n              :comments_enabled_for,\r\n              :comments_default_moderator,\r\n              :share_files_media_browser,\r\n              :page_cache,\r\n              :tracking_scripts,\r\n              :additional_scripts,\r\n              :additional_styles,\r\n              :permission,\r\n              :mail_mailer,\r\n              :mail_server,\r\n              :mail_port,\r\n              :mail_security,\r\n              :mail_ignore_ssl_security,\r\n              :mail_user,\r\n              :mail_address,\r\n              :mail_password,\r\n              :contact_emails,\r\n              :homepage,\r\n              :default_timezone,\r\n              :metatag_title_order,\r\n              :metatag_description,\r\n              :metatag_keywords,\r\n              :metatags,\r\n              :favicon,\r\n              :decimal_separator, \r\n              :thousands_separator, \r\n              :currency, \r\n              :size_unit, \r\n              :weight_unit,              \r\n              :shop_logo,\r\n              :shop_address,\r\n              :shop_legal_info,\r\n              :shop_purchase_conditions_path,\r\n              :theme,\r\n              :theme_options,\r\n              :block_types\r\n            )',\r\n\t\t\tarray(\r\n\t\t\t\t\":name\" => value_or_default($this->name, \"\"),\r\n\t\t\t\t\":protocol\" => value_or_default($this->protocol, \"http://\"),\r\n\t\t\t\t\":subdomain\" => value_or_default($this->subdomain, \"\"),\r\n\t\t\t\t\":domain\" => value_or_default($this->domain, \"\"),\r\n\t\t\t\t\":folder\" => value_or_default($this->folder, \"\"),\r\n\t\t\t\t\":redirect_to\" => value_or_default($this->redirect_to, \"\"),\r\n\t\t\t\t\":wrong_path_action\" => value_or_default($this->wrong_path_action, 'blank'),\r\n\t\t\t\t\":wrong_path_redirect\" => value_or_default($this->wrong_path_redirect, ''),\r\n\t\t\t\t\":empty_path_action\" => value_or_default($this->empty_path_action, 'homepage_redirect'),\r\n\t\t\t\t\":languages\" => (is_array($this->languages)? serialize($this->languages) : $this->languages),\r\n\t\t\t\t\":languages_published\" => (is_array($this->languages_published)? serialize($this->languages_published) : $this->languages_published),\r\n                \":aliases\" => json_encode($this->aliases),\r\n                \":word_separator\" => value_or_default($this->word_separator, \"-\"),\r\n                \":date_format\" => $this->date_format,\r\n\t\t\t\t\":tinymce_css\" => value_or_default($this->tinymce_css, ''),\r\n\t\t\t\t\":resize_uploaded_images\" => value_or_default($this->resize_uploaded_images, 0),\r\n\t\t\t\t\":comments_enabled_for\" => value_or_default($this->comments_enabled_for, 0),\r\n\t\t\t\t\":comments_default_moderator\" => value_or_default($this->comments_default_moderator, ''),\r\n\t\t\t\t\":share_files_media_browser\" => value_or_default($this->share_files_media_browser, 0),\r\n\t\t\t\t\":page_cache\" => value_or_default($this->page_cache, 0),\r\n\t\t\t\t\":tracking_scripts\" => value_or_default($this->tracking_scripts, ''),\r\n\t\t\t\t\":additional_scripts\" => value_or_default($this->additional_scripts, ''),\r\n\t\t\t\t\":additional_styles\" => value_or_default($this->additional_styles, ''),\r\n\t\t\t\t\":permission\" => $this->permission,\r\n\t\t\t\t\":mail_mailer\" => value_or_default($this->mail_mailer, ''),\r\n\t\t\t\t\":mail_server\" => value_or_default($this->mail_server, ''),\r\n\t\t\t\t\":mail_port\" => value_or_default($this->mail_port, 25),\r\n\t\t\t\t\":mail_security\" => value_or_default($this->mail_security, 0),\r\n\t\t\t\t\":mail_ignore_ssl_security\" => value_or_default($this->mail_ignore_ssl_security, 0),\r\n\t\t\t\t\":mail_user\" => value_or_default($this->mail_user, ''),\r\n\t\t\t\t\":mail_address\" => value_or_default($this->mail_address, ''),\r\n\t\t\t\t\":mail_password\" => value_or_default($this->mail_password, ''),\r\n\t\t\t\t\":contact_emails\" => serialize($this->contact_emails),\r\n\t\t\t\t\":homepage\" => value_or_default($this->homepage, ''),\r\n\t\t\t\t\":default_timezone\" => value_or_default($this->default_timezone, ''),\r\n\t\t\t\t\":metatag_title_order\" => value_or_default($this->metatag_title_order, 'website | category | section'),\r\n\t\t\t\t\":metatag_description\" => json_encode($this->metatag_description),\r\n\t\t\t\t\":metatag_keywords\" => json_encode($this->metatag_keywords),\r\n\t\t\t\t\":metatags\" => json_encode($this->metatags),\r\n\t\t\t\t\":favicon\" => value_or_default($this->favicon, 0),\r\n                \":decimal_separator\" => value_or_default($this->decimal_separator, '.'),\r\n                \":thousands_separator\" => value_or_default($this->thousands_separator, \"\"),\r\n                \":currency\" => value_or_default($this->currency, \"dollar\"),\r\n                \":size_unit\" => value_or_default($this->size_unit, 'cm'),\r\n                \":weight_unit\" => value_or_default($this->weight_unit, \"g\"),\r\n\t\t\t\t\":shop_logo\" => value_or_default($this->shop_logo, 0),\r\n\t\t\t\t\":shop_address\" => json_encode(value_or_default($this->shop_address, \"\")),\r\n\t\t\t\t\":shop_legal_info\" => json_encode(value_or_default($this->shop_legal_info, \"\")),\r\n\t\t\t\t\":shop_purchase_conditions_path\" => value_or_default($this->shop_purchase_conditions_path, \"\"),\r\n\t\t\t\t\":theme\" => value_or_default($this->theme, ''),\r\n\t\t\t\t\":theme_options\" => json_encode($this->theme_options),\r\n                \":block_types\" => \"\"\r\n\t\t\t)\r\n        );\r\n\t\t\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\t// finally we create the private folder\r\n\t\t$this->id = $DB->get_last_id();\r\n\t\t\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id, 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/files', 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/templates', 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/thumbnails', 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/webgets', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/backups', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/cache', 0744, true);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'website',\r\n                'insert',\r\n                array(\r\n                    'website' => $this\r\n                )\r\n            );\r\n        }\r\n\r\n\t\t// if allowed, send statistics to navigatecms.com\r\n\t\tif(NAVIGATECMS_STATS)\r\n\t\t{\r\n\t\t\tglobal $user;\r\n\t\t\t@core_curl_post(\r\n                'http://statistics.navigatecms.com/website/new',\r\n                array(\r\n                    'name' => $this->name,\r\n                    'ip' => $_SERVER['SERVER_ADDR'],\r\n                    'website_id' => $this->id,\r\n                    'url' => $this->absolute_path(),\r\n                    'folder' => $this->folder,\r\n                    'word_separator' => $this->word_separator,\r\n                    'homepage' => $this->homepage,\r\n                    'theme' => $this->theme,\r\n                    'emails' => serialize($this->contact_emails),\r\n                    'languages' => serialize($this->languages_published),\r\n                    'permission' => $this->permission,\r\n                    'author_name' => $user->username,\r\n                    'author_email' => $user->email,\r\n                    'author_language' => $user->language\r\n                ),\r\n\t\t\t\tNULL,\r\n\t\t\t\t10,\r\n\t\t\t\t'post'\r\n            );\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\t\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n        $ok = $DB->execute('\r\n            UPDATE nv_websites\r\n                SET\r\n                    name\t=   ?,\r\n                    protocol =  ?,\r\n                    subdomain = ?,\r\n                    domain\t=   ?,\r\n                    folder\t=   ?,\r\n                    redirect_to = ?,\r\n                    wrong_path_action = ?,\r\n                    wrong_path_redirect = ?,\r\n                    empty_path_action = ?,\r\n                    languages = ?,\r\n                    languages_published = ?,\r\n                    aliases = ?,\r\n                    word_separator = ?,\r\n                    date_format = ?,\r\n                    tinymce_css = ?,\r\n                    resize_uploaded_images = ?,\r\n                    comments_enabled_for = ?,\r\n\t\t\t\t\tcomments_default_moderator = ?,\r\n\t\t\t\t\tshare_files_media_browser = ?,\r\n\t\t\t\t\tpage_cache = ?,\r\n                    tracking_scripts = ?,\r\n                    additional_scripts = ?,\r\n                    additional_styles = ?,\r\n                    permission = ?,\r\n                    mail_mailer = ?,\r\n                    mail_server = ?,\r\n                    mail_port = ?,\r\n                    mail_security = ?,\r\n                    mail_ignore_ssl_security = ?,\r\n                    mail_user = ?,\r\n                    mail_address = ?,\r\n                    mail_password = ?,\r\n                    contact_emails = ?,\r\n                    homepage = ?,\r\n                    default_timezone = ?,\r\n                    metatag_title_order = ?,\r\n                    metatag_description = ?,\r\n                    metatag_keywords = ?,\r\n                    metatags = ?,\r\n                    favicon = ?,\r\n                    decimal_separator = ?,\r\n                    thousands_separator = ?,\r\n                    currency = ?,\r\n                    size_unit = ?,\r\n                    weight_unit = ?,\r\n                    shop_logo = ?,\r\n                    shop_address = ?,\r\n                    shop_legal_info = ?,\r\n                    shop_purchase_conditions_path = ?,\r\n                    theme = ?,\r\n                    theme_options = ?\r\n                WHERE id = '.$this->id,\r\n            array(\r\n                value_or_default($this->name, \"\"),\r\n                value_or_default($this->protocol, \"http://\"),\r\n                value_or_default($this->subdomain, \"\"),\r\n                value_or_default($this->domain, \"\"),\r\n                value_or_default($this->folder, \"\"),\r\n                value_or_default($this->redirect_to, \"\"),\r\n                value_or_default($this->wrong_path_action, \"blank\"),\r\n                value_or_default($this->wrong_path_redirect, \"\"),\r\n                value_or_default($this->empty_path_action, \"homepage_redirect\"),\r\n                (is_array($this->languages)? serialize($this->languages) : $this->languages),\r\n\t\t\t\t(is_array($this->languages_published)? serialize($this->languages_published) : $this->languages_published),\r\n                json_encode($this->aliases),\r\n                value_or_default($this->word_separator, \"-\"),\r\n                $this->date_format,\r\n                value_or_default($this->tinymce_css, \"\"),\r\n                $this->resize_uploaded_images,\r\n                $this->comments_enabled_for,\r\n                $this->comments_default_moderator,\r\n                $this->share_files_media_browser,\r\n                value_or_default($this->page_cache, 0),\r\n                $this->tracking_scripts,\r\n                $this->additional_scripts,\r\n                $this->additional_styles,\r\n                $this->permission,\r\n                value_or_default($this->mail_mailer, \"\"),\r\n                value_or_default($this->mail_server, \"\"),\r\n                value_or_default($this->mail_port, 25),\r\n                value_or_default($this->mail_security, 0),\r\n                value_or_default($this->mail_ignore_ssl_security, 0),\r\n                value_or_default($this->mail_user, \"\"),\r\n                value_or_default($this->mail_address, \"\"),\r\n                value_or_default($this->mail_password, \"\"),\r\n                serialize($this->contact_emails),\r\n                $this->homepage,\r\n                $this->default_timezone,\r\n                value_or_default($this->metatag_title_order, 'website | category | section'),\r\n                json_encode($this->metatag_description),\r\n                json_encode($this->metatag_keywords),\r\n                json_encode($this->metatags),\r\n                value_or_default($this->favicon, 0),\r\n                value_or_default($this->decimal_separator, '.'),\r\n                value_or_default($this->thousands_separator, \"\"),\r\n                value_or_default($this->currency, \"dollar\"),\r\n                value_or_default($this->size_unit, 'cm'),\r\n                value_or_default($this->weight_unit, \"g\"),\r\n                value_or_default($this->shop_logo, 0),\r\n                json_encode(value_or_default($this->shop_address, \"\")),\r\n                json_encode(value_or_default($this->shop_legal_info, \"\")),\r\n                value_or_default($this->shop_purchase_conditions_path, \"\"),\r\n                value_or_default($this->theme, \"\"),\r\n                json_encode($this->theme_options)\r\n            )\r\n        );\r\n\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\r\n\t\t// try to create any missing folder\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id, 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/files', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/templates', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/thumbnails', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/webgets', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/backups', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/cache', 0744, true);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'website',\r\n                'save',\r\n                array(\r\n                    'website' => $this\r\n                )\r\n            );\r\n        }\r\n\r\n\t\t// if allowed, send statistics to navigatecms.com\r\n\t\tif(NAVIGATECMS_STATS)\r\n\t\t{\r\n\t\t\tglobal $user;\r\n\t\t\t@core_curl_post(\r\n                'http://statistics.navigatecms.com/website/update',\r\n                array(\r\n                    'ip' => $_SERVER['SERVER_ADDR'],\r\n                    'website_id' => $this->id,\r\n                    'name' => $this->name,\r\n                    'url' => $this->absolute_path(),\r\n                    'folder' => $this->folder,\r\n                    'word_separator' => $this->word_separator,\r\n                    'homepage' => $this->homepage,\r\n                    'theme' => $this->theme,\r\n                    'emails' => serialize($this->contact_emails),\r\n                    'languages' => serialize($this->languages_published),\r\n                    'permission' => $this->permission,\r\n                    'author_name' => $user->username,\r\n                    'author_email' => $user->email,\r\n                    'author_language' => $user->language\r\n                ),\r\n\t\t\t\tNULL,\r\n\t\t\t\t10,\r\n\t\t\t\t'post'\r\n            );\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n    function create_default()\r\n    {\r\n        global $DB;\r\n        global $user;\r\n\r\n        // check if there are really NO websites\r\n        $test = $DB->query_single('id', 'nv_websites');\r\n        if(!empty($test))\r\n        {\r\n            //header('location: '.NAVIGATE_MAIN.'?logout');\r\n            //core_terminate();\r\n            $this->load();\r\n            return $this;\r\n        }\r\n\r\n        $url = NAVIGATE_URL;\r\n        $url = parse_url($url);\r\n\r\n        // do we have a subdomain in the url?\r\n        if(preg_match(\"/^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}$/\", $url['host']))\r\n        {\r\n            $domain = $url['host'];\r\n            $subdomain = '';\r\n        }\r\n        else\r\n        {\r\n            $host = explode('.', $url['host']);\r\n\r\n            $domain = array_pop($host);\r\n            if(!empty($host))\r\n            {\r\n                $domain = array_pop($host) . '.' . $domain;\r\n            }\r\n\r\n            $subdomain = implode('.', $host);\r\n        }\r\n\r\n        // navigate url --> default folder\r\n        // http://localhost/navigate            -->     (empty)\r\n        // http://www.domain.com/test/navigate  -->     /test\r\n        // http://192.168.0.1/foo/foo2/navigate -->     /foo/foo2\r\n\r\n        $folder = dirname($url['path']);\r\n        if($folder=='/' || $folder=='\\\\')\r\n        {\r\n            $folder = '';\r\n        }\r\n\r\n        $this->name\t\t\t\t= APP_OWNER;\r\n\r\n        $this->protocol\t\t\t= \"http://\";\r\n        $this->subdomain\t\t= $subdomain;\r\n        $this->domain\t\t\t= $domain;\r\n        $this->folder\t\t\t= $folder;\r\n        $this->redirect_to      = '';\r\n        $this->word_separator   = '-';\r\n        $this->date_format\t\t= 'Y/m/d';\r\n        $this->homepage\t\t\t= '/en/home';\r\n        $this->permission\t\t= 0;\r\n        $this->default_timezone\t= 'UTC';\r\n        $this->contact_emails   = $user->email;\r\n\r\n        // languages and locales\r\n        $this->languages = array();\r\n        $this->languages_published = array();\r\n\r\n        $this->languages = array(\r\n\t        'en' => array(\r\n\t            'language' => 'en',\r\n\t            'variant' => '',\r\n\t            'code' => 'en',\r\n\t            'system_locale' => 'en_US.utf8'\r\n\t        )\r\n        );\r\n\r\n\t    $this->languages_published = array('en');\r\n\r\n        $this->aliases = array();\r\n        $this->theme_options = array();\r\n\r\n        $this->insert();\r\n\r\n\t    // add the just created website to user allowed websites (if he has a restricted list of sites)\r\n\t    if(!empty($user->websites))\r\n\t    {\r\n\t\t    $user->websites[] = $this->id;\r\n\t\t    $user->save();\r\n\t    }\r\n\r\n        return true;\r\n    }\r\n\r\n\tfunction language_compare($a, $b)\r\n\t{\r\n\t\tif(array_search($a->code, $this->languages_list) < array_search($b->code, $this->languages_list))\r\n        {\r\n            return -1;\r\n        }\r\n\t\telse\r\n        {\r\n            return 1;\r\n        }\r\n\t}\r\n\t\r\n\tfunction absolute_path($folder=true)\r\n\t{\t\r\n\t\t$nvweb_absolute = (empty($this->protocol)? 'http://' : $this->protocol);\r\n\r\n\t\tif(!empty($this->subdomain))\r\n        {\r\n            $nvweb_absolute .= $this->subdomain.'.';\r\n        }\r\n\r\n        $nvweb_absolute .= $this->domain;\r\n\r\n\t\tif(!empty($folder))\r\n        {\r\n            $nvweb_absolute .= $this->folder;\r\n        }\r\n\r\n\t\treturn $nvweb_absolute;\r\n\t}\r\n\t\r\n\tfunction current_time()\r\n\t{\r\n\t\t$utc = core_time();\r\n\t\t\r\n\t\t$utc_timezone = new DateTimeZone('UTC');\r\n\t\t$utc_time = new DateTime('now', $utc_timezone);\r\n\t\t$website_timezone = new DateTimeZone($this->default_timezone);\r\n\t\t//$website_time = new DateTime('now', $website_timezone);\r\n\r\n\t    $offset = $website_timezone->getOffset($utc_time);\r\n   \t\t$ts = $utc + $offset;\r\n\r\n\t\treturn $ts;\r\n\t}\r\n\r\n    public function languages()\r\n    {\r\n        $options = array();\r\n        foreach($this->languages_list as $active_language_code)\r\n        {\r\n            $options[$active_language_code] = language::name_by_code($active_language_code);\r\n        }\r\n\r\n        return $options;\r\n    }\r\n\r\n    public function content_stylesheets($format='tinymce', $name='content', $merge=false, $ws_theme=null)\r\n    {\r\n        global $theme;\r\n\r\n        if(empty($ws_theme))\r\n        {\r\n\t\t    $ws_theme = $theme;\r\n\r\n            if($this->theme != $theme->name)\r\n            {\r\n                $ws_theme = new theme();\r\n                $ws_theme->load($this->theme);\r\n            }\r\n        }\r\n\r\n        // determine stylesheets for content (website > theme + default navigate cms)\r\n        $content_css = array();\r\n\r\n        if(defined('NAVIGATE_URL'))\r\n        {\r\n            $content_css[] = NAVIGATE_URL . '/css/tools/tinymce.defaults.css';\r\n        }\r\n        else\r\n        {\r\n            $content_css[] = '/css/tools/tinymce.defaults.css';\r\n        }\r\n\r\n        // deprecated field (will be removed at some point)\r\n        if(!empty($this->tinymce_css))\r\n        {\r\n            $content_css[] = $this->tinymce_css.'?bogus='.time();\r\n        }\r\n\r\n        if(!empty($this->theme) && !empty($ws_theme))\r\n        {\r\n            $style = \"\";\r\n            if(isset($this->theme_options->style))\r\n            {\r\n                $style = @$this->theme_options->style;\r\n            }\r\n\r\n\t\t\tif(empty($style))\r\n\t\t\t{\r\n\t\t\t\t$theme_styles = get_object_vars($ws_theme->styles);\r\n\t\t\t\t$theme_styles = array_values($theme_styles);\r\n\t\t\t\t$style = $theme_styles[0]->name;\r\n\t\t\t}\r\n\r\n\t        if(($name=='content_selectable' && !isset($ws_theme->styles->$style->$name)) || empty($name))\r\n            {\r\n                $name = 'content';\r\n            }\r\n\r\n            if(!empty($style) && !empty($ws_theme->styles->$style->$name))\r\n            {\r\n                $style_content_css = explode(',', $ws_theme->styles->$style->$name);\r\n                foreach($style_content_css as $scc)\r\n                {\r\n                    if(strpos($scc, 'http')===false && defined('NAVIGATE_URL'))\r\n                    {\r\n                        $content_css[] = NAVIGATE_URL.'/themes/'.$this->theme.'/'.$scc.'?bogus='.time();\r\n                    }\r\n                    else\r\n                    {\r\n                        $content_css[] = $scc;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\t    $merge = false; // MERGE option is not completely developed\r\n\t    if($merge)\r\n\t    {\r\n\t\t    /*\r\n\t\t    $css_merged_rules = '';\r\n\t\t    $css_merged_file = 'cache/'.$website->id.'/editor_css.'.md5(json_encode($content_css)).'.css';\r\n\r\n\t\t    foreach($content_css as $csa)\r\n            {\r\n\t            $css_rules = @file_get_contents($csa);\r\n                $css_merged_rules .= $css_rules;\r\n            }\r\n\r\n\t\t    mkdir(NAVIGATE_PATH.'/cache/'.$website->id, 0744, true);\r\n\r\n\t\t    file_put_contents(NAVIGATE_PATH.'/'.$css_merged_file, $css_merged_rules);\r\n\r\n\t\t    if(!empty($css_merged))\r\n\t\t    {\r\n\t\t\t    if($format=='link_tag')\r\n\t\t\t\t    $content_css = '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.NAVIGATE_URL.'/'.$css_merged_file.'\" />'.\"\\n\";\r\n\t\t\t    else\r\n\t\t\t\t    $content_css = NAVIGATE_URL.'/'.$css_merged_file;\r\n\t\t    }\r\n\t\t    else\r\n\t\t\t    $content_css = '';\r\n\t\t    */\r\n\t    }\r\n\t\telse\r\n\t\t{\r\n\t\t\tif($format=='link_tag')\r\n            {\r\n\t            $content_html = '';\r\n\t            foreach($content_css as $csa)\r\n\t            {\r\n\t                if(!empty($csa))\r\n                    {\r\n                        $content_html .= '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.trim($csa).'\" />'.\"\\n\";\r\n                    }\r\n\t            }\r\n\r\n\t            $content_css = $content_html;\r\n\t        }\r\n\t        else if($format=='array')\r\n            {\r\n\t            // do nothing, already an array\r\n            }\r\n\t        else\r\n            {\r\n                $content_css = implode(',', $content_css);\r\n            }\r\n        }\r\n\r\n        return $content_css;\r\n    }\r\n\r\n    public function purge_cache()\r\n    {\r\n        // thumbnails\r\n        $files = glob(NAVIGATE_PRIVATE . '/'.$this->id.'/thumbnails/*x*');\r\n        for($t=0; $t < count($files); $t++)\r\n        {\r\n            @unlink($files[$t]);\r\n        }\r\n\r\n        // feeds\r\n        $files = glob(NAVIGATE_PRIVATE . '/'.$this->id.'/cache/*.feed');\r\n        for($t=0; $t < count($files); $t++)\r\n        {\r\n            @unlink($files[$t]);\r\n        }\r\n\r\n        $this->purge_pages_cache();\r\n    }\r\n\r\n    public function purge_pages_cache()\r\n    {\r\n        $files = glob(NAVIGATE_PRIVATE . '/'.$this->id.'/cache/*.page');\r\n        for($t=0; $t < count($files); $t++)\r\n        {\r\n            @unlink($files[$t]);\r\n        }\r\n    }\r\n\r\n    public function bind_events()\r\n    {\r\n        global $events;\r\n\r\n        $events->bind('website', 'save', 'website', array($this, 'purge_cache'));\r\n        // note: on delete event is not necessary to purge cache, as the whole private folder is removed\r\n\r\n        $events->bind('item', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('item', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('block', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('block', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('structure', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('structure', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('feed', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('feed', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('comment', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('comment', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('product', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('product', 'delete', 'website', array($this, 'purge_cache'));\r\n    }\r\n\r\n    // check if we need to execute any programmed event\r\n    public function cron()\r\n    {\r\n        global $current;\r\n        global $events;\r\n\r\n        $website_cron_path = NAVIGATE_PRIVATE . '/'.$this->id.'/cache/website.cron';\r\n\r\n        $last_cron = null;\r\n        if(file_exists($website_cron_path))\r\n        {\r\n            $last_cron = file_get_contents($website_cron_path);\r\n        }\r\n\r\n        // we only run the following checks once a minute (on the next visit)\r\n        // when was the last cron execution?\r\n        if(is_null($last_cron))\r\n        {\r\n            file_put_contents($website_cron_path, core_time());\r\n        }\r\n        else if(($last_cron + 60 < core_time()))\r\n        {\r\n            // if cache is enabled and there was a programmed publication (item, structure, block, product) since the last visit or cron execution\r\n            // then purge the cache\r\n            if($current['pagecache_enabled'])\r\n            {\r\n                $next_change = $this->find_next_publication_event_time($last_cron);\r\n                if(!empty($next_change))\r\n                {\r\n                    if($next_change < core_time()) // the change had to happen since the last cron execution?\r\n                    {\r\n                        $this->purge_cache();\r\n                    }\r\n                    // else, the change will happen at a later time, the current cache is still valid\r\n                }\r\n            }\r\n\r\n            // remove very old PHP session files (TODO: that should be executed once a day, not every minute)\r\n            core_remove_sessions(365); // 365 days\r\n\r\n            $events->trigger('website', 'cron', array());\r\n\r\n            file_put_contents($website_cron_path, core_time());\r\n        }\r\n    }\r\n\r\n    public function find_next_publication_event_time($from_time=null)\r\n    {\r\n        global $DB;\r\n\r\n        $next_change = PHP_INT_MAX; // set the largest integer, a very very far date in the future\r\n\r\n        // item: date_published\r\n\r\n        if(is_null($from_time))\r\n        {\r\n            $from_time = core_time();\r\n        }\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_items\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        $rsnc = intval($rsnc[0]);\r\n\r\n        if(!empty($rsnc))\r\n        {\r\n            $next_change = $rsnc;\r\n        }\r\n\r\n        // item: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_items\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n        // structure: date_published\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_structure\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // structure: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_structure\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // block: date_published\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_blocks\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // block: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_blocks\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // product: date_published\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_products\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // product: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_products\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n        if(!$next_change || $next_change == PHP_INT_MAX)\r\n        {\r\n            $next_change = 0;\r\n        } // no publication event found!\r\n\r\n        return $next_change;\r\n    }\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n        global $website;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_websites WHERE id = '.intval($website->id), 'object');\r\n\r\n        if($type='json')\r\n        {\r\n            $out = json_encode($DB->result());\r\n        }\r\n\r\n        return $out;\r\n    }\r\n\r\n    public function windows_locales()\r\n    {\r\n        global $session;\r\n\r\n        // http://www.microsoft.com/resources/msdn/goglobal/default.mspx?submitted=3409&OS=Windows+Vista\r\n        $win_loc = '{   \"af\":{\"id\":\"0x0036\",\"lang_name\":\"Afrikaans\",\"country\":\"ZAF\",\"locale\":\"AFK_ZAF\"},\r\n                        \"af-ZA\":{\"id\":\"0x0436\",\"lang_name\":\"Afrikaans\",\"country\":\"ZAF\",\"locale\":\"AFK_ZAF\"},\r\n                        \"sq\":{\"id\":\"0x001C\",\"lang_name\":\"Albanian\",\"country\":\"ALB\",\"locale\":\"SQI_ALB\"},\r\n                        \"sq-AL\":{\"id\":\"0x041C\",\"lang_name\":\"Albanian\",\"country\":\"ALB\",\"locale\":\"SQI_ALB\"},\r\n                        \"gsw\":{\"id\":\"0x0084\",\"lang_name\":\"Alsatian\",\"country\":\"FRA\",\"locale\":\"GSW_FRA\"},\r\n                        \"gsw-FR\":{\"id\":\"0x0484\",\"lang_name\":\"Alsatian\",\"country\":\"FRA\",\"locale\":\"GSW_FRA\"},\r\n                        \"am\":{\"id\":\"0x005E\",\"lang_name\":\"Amharic\",\"country\":\"ETH\",\"locale\":\"AMH_ETH\"},\r\n                        \"am-ET\":{\"id\":\"0x045E\",\"lang_name\":\"Amharic\",\"country\":\"ETH\",\"locale\":\"AMH_ETH\"},\r\n                        \"ar\":{\"id\":\"0x0001\",\"lang_name\":\"Arabic\",\"country\":\"SAU\",\"locale\":\"ARA_SAU\"},\r\n                        \"ar-DZ\":{\"id\":\"0x1401\",\"lang_name\":\"Arabic\",\"country\":\"DZA\",\"locale\":\"ARG_DZA\"},\r\n                        \"ar-BH\":{\"id\":\"0x3C01\",\"lang_name\":\"Arabic\",\"country\":\"BHR\",\"locale\":\"ARH_BHR\"},\r\n                        \"ar-EG\":{\"id\":\"0x0C01\",\"lang_name\":\"Arabic\",\"country\":\"EGY\",\"locale\":\"ARE_EGY\"},\r\n                        \"ar-IQ\":{\"id\":\"0x0801\",\"lang_name\":\"Arabic\",\"country\":\"IRQ\",\"locale\":\"ARI_IRQ\"},\r\n                        \"ar-JO\":{\"id\":\"0x2C01\",\"lang_name\":\"Arabic\",\"country\":\"JOR\",\"locale\":\"ARJ_JOR\"},\r\n                        \"ar-KW\":{\"id\":\"0x3401\",\"lang_name\":\"Arabic\",\"country\":\"KWT\",\"locale\":\"ARK_KWT\"},\r\n                        \"ar-LB\":{\"id\":\"0x3001\",\"lang_name\":\"Arabic\",\"country\":\"LBN\",\"locale\":\"ARB_LBN\"},\r\n                        \"ar-LY\":{\"id\":\"0x1001\",\"lang_name\":\"Arabic\",\"country\":\"LBY\",\"locale\":\"ARL_LBY\"},\r\n                        \"ar-MA\":{\"id\":\"0x1801\",\"lang_name\":\"Arabic\",\"country\":\"MAR\",\"locale\":\"ARM_MAR\"},\r\n                        \"ar-OM\":{\"id\":\"0x2001\",\"lang_name\":\"Arabic\",\"country\":\"OMN\",\"locale\":\"ARO_OMN\"},\r\n                        \"ar-QA\":{\"id\":\"0x4001\",\"lang_name\":\"Arabic\",\"country\":\"QAT\",\"locale\":\"ARQ_QAT\"},\r\n                        \"ar-SA\":{\"id\":\"0x0401\",\"lang_name\":\"Arabic\",\"country\":\"SAU\",\"locale\":\"ARA_SAU\"},\r\n                        \"ar-SY\":{\"id\":\"0x2801\",\"lang_name\":\"Arabic\",\"country\":\"SYR\",\"locale\":\"ARS_SYR\"},\r\n                        \"ar-TN\":{\"id\":\"0x1C01\",\"lang_name\":\"Arabic\",\"country\":\"TUN\",\"locale\":\"ART_TUN\"},\r\n                        \"ar-AE\":{\"id\":\"0x3801\",\"lang_name\":\"Arabic\",\"country\":\"ARE\",\"locale\":\"ARU_ARE\"},\r\n                        \"ar-YE\":{\"id\":\"0x2401\",\"lang_name\":\"Arabic\",\"country\":\"YEM\",\"locale\":\"ARY_YEM\"},\r\n                        \"hy\":{\"id\":\"0x002B\",\"lang_name\":\"Armenian\",\"country\":\"ARM\",\"locale\":\"HYE_ARM\"},\r\n                        \"hy-AM\":{\"id\":\"0x042B\",\"lang_name\":\"Armenian\",\"country\":\"ARM\",\"locale\":\"HYE_ARM\"},\r\n                        \"as\":{\"id\":\"0x004D\",\"lang_name\":\"Assamese\",\"country\":\"IND\",\"locale\":\"ASM_IND\"},\r\n                        \"as-IN\":{\"id\":\"0x044D\",\"lang_name\":\"Assamese\",\"country\":\"IND\",\"locale\":\"ASM_IND\"},\r\n                        \"az\":{\"id\":\"0x002C\",\"lang_name\":\"Azeri (Latin)\",\"country\":\"AZE\",\"locale\":\"AZE_AZE\"},\r\n                        \"az-Cyrl\":{\"id\":\"0x742C\",\"lang_name\":\"Azeri (Cyrillic)\",\"country\":\"AZE\",\"locale\":\"AZC_AZE\"},\r\n                        \"az-Cyrl-AZ\":{\"id\":\"0x082C\",\"lang_name\":\"Azeri (Cyrillic)\",\"country\":\"AZE\",\"locale\":\"AZC_AZE\"},\r\n                        \"az-Latn\":{\"id\":\"0x782C\",\"lang_name\":\"Azeri (Latin)\",\"country\":\"AZE\",\"locale\":\"AZE_AZE\"},\r\n                        \"az-Latn-AZ\":{\"id\":\"0x042C\",\"lang_name\":\"Azeri (Latin)\",\"country\":\"AZE\",\"locale\":\"AZE_AZE\"},\r\n                        \"ba\":{\"id\":\"0x006D\",\"lang_name\":\"Bashkir\",\"country\":\"RUS\",\"locale\":\"BAS_RUS\"},\r\n                        \"ba-RU\":{\"id\":\"0x046D\",\"lang_name\":\"Bashkir\",\"country\":\"RUS\",\"locale\":\"BAS_RUS\"},\r\n                        \"eu\":{\"id\":\"0x002D\",\"lang_name\":\"Basque\",\"country\":\"ESP\",\"locale\":\"EUQ_ESP\"},\r\n                        \"eu-ES\":{\"id\":\"0x042D\",\"lang_name\":\"Basque\",\"country\":\"ESP\",\"locale\":\"EUQ_ESP\"},\r\n                        \"be\":{\"id\":\"0x0023\",\"lang_name\":\"Belarusian\",\"country\":\"BLR\",\"locale\":\"BEL_BLR\"},\r\n                        \"be-BY\":{\"id\":\"0x0423\",\"lang_name\":\"Belarusian\",\"country\":\"BLR\",\"locale\":\"BEL_BLR\"},\r\n                        \"bn\":{\"id\":\"0x0045\",\"lang_name\":\"Bengali\",\"country\":\"IND\",\"locale\":\"BNG_IND\"},\r\n                        \"bn-BD\":{\"id\":\"0x0845\",\"lang_name\":\"Bengali\",\"country\":\"BGD\",\"locale\":\"BNB_BGD\"},\r\n                        \"bn-IN\":{\"id\":\"0x0445\",\"lang_name\":\"Bengali\",\"country\":\"IND\",\"locale\":\"BNG_IND\"},\r\n                        \"bs\":{\"id\":\"0x781A\",\"lang_name\":\"Bosnian (Latin)\",\"country\":\"BIH\",\"locale\":\"BSB_BIH\"},\r\n                        \"bs-Cyrl\":{\"id\":\"0x641A\",\"lang_name\":\"Bosnian (Cyrillic)\",\"country\":\"BIH\",\"locale\":\"BSC_BIH\"},\r\n                        \"bs-Cyrl-BA\":{\"id\":\"0x201A\",\"lang_name\":\"Bosnian (Cyrillic)\",\"country\":\"BIH\",\"locale\":\"BSC_BIH\"},\r\n                        \"bs-Latn\":{\"id\":\"0x681A\",\"lang_name\":\"Bosnian (Latin)\",\"country\":\"BIH\",\"locale\":\"BSB_BIH\"},\r\n                        \"bs-Latn-BA\":{\"id\":\"0x141A\",\"lang_name\":\"Bosnian (Latin)\",\"country\":\"BIH\",\"locale\":\"BSB_BIH\"},\r\n                        \"br\":{\"id\":\"0x007E\",\"lang_name\":\"Breton\",\"country\":\"FRA\",\"locale\":\"BRE_FRA\"},\r\n                        \"br-FR\":{\"id\":\"0x047E\",\"lang_name\":\"Breton\",\"country\":\"FRA\",\"locale\":\"BRE_FRA\"},\r\n                        \"bg\":{\"id\":\"0x0002\",\"lang_name\":\"Bulgarian\",\"country\":\"BGR\",\"locale\":\"BGR_BGR\"},\r\n                        \"bg-BG\":{\"id\":\"0x0402\",\"lang_name\":\"Bulgarian\",\"country\":\"BGR\",\"locale\":\"BGR_BGR\"},\r\n                        \"ca\":{\"id\":\"0x0003\",\"lang_name\":\"Catalan\",\"country\":\"ESP\",\"locale\":\"CAT_ESP\"},\r\n                        \"ca-ES\":{\"id\":\"0x0403\",\"lang_name\":\"Catalan\",\"country\":\"ESP\",\"locale\":\"CAT_ESP\"},\r\n                        \"zh\":{\"id\":\"0x7804\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"CHN\",\"locale\":\"CHS_CHN\"},\r\n                        \"zh-Hans\":{\"id\":\"0x0004\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"CHN\",\"locale\":\"CHS_CHN\"},\r\n                        \"zh-CN\":{\"id\":\"0x0804\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"CHN\",\"locale\":\"CHS_CHN\"},\r\n                        \"zh-SG\":{\"id\":\"0x1004\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"SGP\",\"locale\":\"ZHI_SGP\"},\r\n                        \"zh-Hant\":{\"id\":\"0x7C04\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"HKG\",\"locale\":\"ZHH_HKG\"},\r\n                        \"zh-HK\":{\"id\":\"0x0C04\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"HKG\",\"locale\":\"ZHH_HKG\"},\r\n                        \"zh-MO\":{\"id\":\"0x1404\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"MCO\",\"locale\":\"ZHM_MCO\"},\r\n                        \"zh-TW\":{\"id\":\"0x0404\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"TWN\",\"locale\":\"CHT_TWN\"},\r\n                        \"co\":{\"id\":\"0x0083\",\"lang_name\":\"Corsican\",\"country\":\"FRA\",\"locale\":\"COS_FRA\"},\r\n                        \"co-FR\":{\"id\":\"0x0483\",\"lang_name\":\"Corsican\",\"country\":\"FRA\",\"locale\":\"COS_FRA\"},\r\n                        \"hr\":{\"id\":\"0x001A\",\"lang_name\":\"Croatian\",\"country\":\"HRV\",\"locale\":\"HRV_HRV\"},\r\n                        \"hr-HR\":{\"id\":\"0x041A\",\"lang_name\":\"Croatian\",\"country\":\"HRV\",\"locale\":\"HRV_HRV\"},\r\n                        \"hr-BA\":{\"id\":\"0x101A\",\"lang_name\":\"Croatian (Latin)\",\"country\":\"BIH\",\"locale\":\"HRB_BIH\"},\r\n                        \"cs\":{\"id\":\"0x0005\",\"lang_name\":\"Czech\",\"country\":\"CZE\",\"locale\":\"CSY_CZE\"},\r\n                        \"cs-CZ\":{\"id\":\"0x0405\",\"lang_name\":\"Czech\",\"country\":\"CZE\",\"locale\":\"CSY_CZE\"},\r\n                        \"da\":{\"id\":\"0x0006\",\"lang_name\":\"Danish\",\"country\":\"DNK\",\"locale\":\"DAN_DNK\"},\r\n                        \"da-DK\":{\"id\":\"0x0406\",\"lang_name\":\"Danish\",\"country\":\"DNK\",\"locale\":\"DAN_DNK\"},\r\n                        \"prs\":{\"id\":\"0x008C\",\"lang_name\":\"Dari\",\"country\":\"AFG\",\"locale\":\"PRS_AFG\"},\r\n                        \"prs-AF\":{\"id\":\"0x048C\",\"lang_name\":\"Dari\",\"country\":\"AFG\",\"locale\":\"PRS_AFG\"},\r\n                        \"dv\":{\"id\":\"0x0065\",\"lang_name\":\"Divehi\",\"country\":\"MDV\",\"locale\":\"DIV_MDV\"},\r\n                        \"dv-MV\":{\"id\":\"0x0465\",\"lang_name\":\"Divehi\",\"country\":\"MDV\",\"locale\":\"DIV_MDV\"},\r\n                        \"nl\":{\"id\":\"0x0013\",\"lang_name\":\"Dutch\",\"country\":\"NLD\",\"locale\":\"NLD_NLD\"},\r\n                        \"nl-BE\":{\"id\":\"0x0813\",\"lang_name\":\"Dutch\",\"country\":\"BEL\",\"locale\":\"NLB_BEL\"},\r\n                        \"nl-NL\":{\"id\":\"0x0413\",\"lang_name\":\"Dutch\",\"country\":\"NLD\",\"locale\":\"NLD_NLD\"},\r\n                        \"en\":{\"id\":\"0x0009\",\"lang_name\":\"English\",\"country\":\"USA\",\"locale\":\"ENU_USA\"},\r\n                        \"en-AU\":{\"id\":\"0x0C09\",\"lang_name\":\"English\",\"country\":\"AUS\",\"locale\":\"ENA_AUS\"},\r\n                        \"en-BZ\":{\"id\":\"0x2809\",\"lang_name\":\"English\",\"country\":\"BLZ\",\"locale\":\"ENL_BLZ\"},\r\n                        \"en-CA\":{\"id\":\"0x1009\",\"lang_name\":\"English\",\"country\":\"CAN\",\"locale\":\"ENC_CAN\"},\r\n                        \"en-029\":{\"id\":\"0x2409\",\"lang_name\":\"English\",\"country\":\"CAR\",\"locale\":\"ENB_CAR\"},\r\n                        \"en-IN\":{\"id\":\"0x4009\",\"lang_name\":\"English\",\"country\":\"IND\",\"locale\":\"ENN_IND\"},\r\n                        \"en-IE\":{\"id\":\"0x1809\",\"lang_name\":\"English\",\"country\":\"IRL\",\"locale\":\"ENI_IRL\"},\r\n                        \"en-JM\":{\"id\":\"0x2009\",\"lang_name\":\"English\",\"country\":\"JAM\",\"locale\":\"ENJ_JAM\"},\r\n                        \"en-MY\":{\"id\":\"0x4409\",\"lang_name\":\"English\",\"country\":\"MYS\",\"locale\":\"ENM_MYS\"},\r\n                        \"en-NZ\":{\"id\":\"0x1409\",\"lang_name\":\"English\",\"country\":\"NZL\",\"locale\":\"ENZ_NZL\"},\r\n                        \"en-PH\":{\"id\":\"0x3409\",\"lang_name\":\"English\",\"country\":\"PHL\",\"locale\":\"ENP_PHL\"},\r\n                        \"en-SG\":{\"id\":\"0x4809\",\"lang_name\":\"English\",\"country\":\"SGP\",\"locale\":\"ENE_SGP\"},\r\n                        \"en-ZA\":{\"id\":\"0x1C09\",\"lang_name\":\"English\",\"country\":\"ZAF\",\"locale\":\"ENS_ZAF\"},\r\n                        \"en-TT\":{\"id\":\"0x2C09\",\"lang_name\":\"English\",\"country\":\"TTO\",\"locale\":\"ENT_TTO\"},\r\n                        \"en-GB\":{\"id\":\"0x0809\",\"lang_name\":\"English\",\"country\":\"GBR\",\"locale\":\"ENG_GBR\"},\r\n                        \"en-US\":{\"id\":\"0x0409\",\"lang_name\":\"English\",\"country\":\"USA\",\"locale\":\"ENU_USA\"},\r\n                        \"en-ZW\":{\"id\":\"0x3009\",\"lang_name\":\"English\",\"country\":\"ZWE\",\"locale\":\"ENW_ZWE\"},\r\n                        \"et\":{\"id\":\"0x0025\",\"lang_name\":\"Estonian\",\"country\":\"EST\",\"locale\":\"ETI_EST\"},\r\n                        \"et-EE\":{\"id\":\"0x0425\",\"lang_name\":\"Estonian\",\"country\":\"EST\",\"locale\":\"ETI_EST\"},\r\n                        \"fo\":{\"id\":\"0x0038\",\"lang_name\":\"Faroese\",\"country\":\"FRO\",\"locale\":\"FOS_FRO\"},\r\n                        \"fo-FO\":{\"id\":\"0x0438\",\"lang_name\":\"Faroese\",\"country\":\"FRO\",\"locale\":\"FOS_FRO\"},\r\n                        \"fil\":{\"id\":\"0x0064\",\"lang_name\":\"Filipino\",\"country\":\"PHL\",\"locale\":\"FPO_PHL\"},\r\n                        \"fil-PH\":{\"id\":\"0x0464\",\"lang_name\":\"Filipino\",\"country\":\"PHL\",\"locale\":\"FPO_PHL\"},\r\n                        \"fi\":{\"id\":\"0x000B\",\"lang_name\":\"Finnish\",\"country\":\"FIN\",\"locale\":\"FIN_FIN\"},\r\n                        \"fi-FI\":{\"id\":\"0x040B\",\"lang_name\":\"Finnish\",\"country\":\"FIN\",\"locale\":\"FIN_FIN\"},\r\n                        \"fr\":{\"id\":\"0x000C\",\"lang_name\":\"French\",\"country\":\"FRA\",\"locale\":\"FRA_FRA\"},\r\n                        \"fr-BE\":{\"id\":\"0x080C\",\"lang_name\":\"French\",\"country\":\"BEL\",\"locale\":\"FRB_BEL\"},\r\n                        \"fr-CA\":{\"id\":\"0x0C0C\",\"lang_name\":\"French\",\"country\":\"CAN\",\"locale\":\"FRC_CAN\"},\r\n                        \"fr-FR\":{\"id\":\"0x040C\",\"lang_name\":\"French\",\"country\":\"FRA\",\"locale\":\"FRA_FRA\"},\r\n                        \"fr-LU\":{\"id\":\"0x140C\",\"lang_name\":\"French\",\"country\":\"LUX\",\"locale\":\"FRL_LUX\"},\r\n                        \"fr-MC\":{\"id\":\"0x180C\",\"lang_name\":\"French\",\"country\":\"MCO\",\"locale\":\"FRM_MCO\"},\r\n                        \"fr-CH\":{\"id\":\"0x100C\",\"lang_name\":\"French\",\"country\":\"CHE\",\"locale\":\"FRS_CHE\"},\r\n                        \"fy\":{\"id\":\"0x0062\",\"lang_name\":\"Frisian\",\"country\":\"NLD\",\"locale\":\"FYN_NLD\"},\r\n                        \"fy-NL\":{\"id\":\"0x0462\",\"lang_name\":\"Frisian\",\"country\":\"NLD\",\"locale\":\"FYN_NLD\"},\r\n                        \"gl\":{\"id\":\"0x0056\",\"lang_name\":\"Galician\",\"country\":\"ESP\",\"locale\":\"GLC_ESP\"},\r\n                        \"gl-ES\":{\"id\":\"0x0456\",\"lang_name\":\"Galician\",\"country\":\"ESP\",\"locale\":\"GLC_ESP\"},\r\n                        \"ka\":{\"id\":\"0x0037\",\"lang_name\":\"Georgian\",\"country\":\"GEO\",\"locale\":\"KAT_GEO\"},\r\n                        \"ka-GE\":{\"id\":\"0x0437\",\"lang_name\":\"Georgian\",\"country\":\"GEO\",\"locale\":\"KAT_GEO\"},\r\n                        \"de\":{\"id\":\"0x0007\",\"lang_name\":\"German\",\"country\":\"DEU\",\"locale\":\"DEU_DEU\"},\r\n                        \"de-AT\":{\"id\":\"0x0C07\",\"lang_name\":\"German\",\"country\":\"AUT\",\"locale\":\"DEA_AUT\"},\r\n                        \"de-DE\":{\"id\":\"0x0407\",\"lang_name\":\"German\",\"country\":\"DEU\",\"locale\":\"DEU_DEU\"},\r\n                        \"de-LI\":{\"id\":\"0x1407\",\"lang_name\":\"German\",\"country\":\"LIE\",\"locale\":\"DEC_LIE\"},\r\n                        \"de-LU\":{\"id\":\"0x1007\",\"lang_name\":\"German\",\"country\":\"LUX\",\"locale\":\"DEL_LUX\"},\r\n                        \"de-CH\":{\"id\":\"0x0807\",\"lang_name\":\"German\",\"country\":\"CHE\",\"locale\":\"DES_CHE\"},\r\n                        \"el\":{\"id\":\"0x0008\",\"lang_name\":\"Greek\",\"country\":\"GRC\",\"locale\":\"ELL_GRC\"},\r\n                        \"el-GR\":{\"id\":\"0x0408\",\"lang_name\":\"Greek\",\"country\":\"GRC\",\"locale\":\"ELL_GRC\"},\r\n                        \"kl\":{\"id\":\"0x006F\",\"lang_name\":\"Greenlandic\",\"country\":\"GRL\",\"locale\":\"KAL_GRL\"},\r\n                        \"kl-GL\":{\"id\":\"0x046F\",\"lang_name\":\"Greenlandic\",\"country\":\"GRL\",\"locale\":\"KAL_GRL\"},\r\n                        \"gu\":{\"id\":\"0x0047\",\"lang_name\":\"Gujarati\",\"country\":\"IND\",\"locale\":\"GUJ_IND\"},\r\n                        \"gu-IN\":{\"id\":\"0x0447\",\"lang_name\":\"Gujarati\",\"country\":\"IND\",\"locale\":\"GUJ_IND\"},\r\n                        \"ha\":{\"id\":\"0x0068\",\"lang_name\":\"Hausa (Latin)\",\"country\":\"NGA\",\"locale\":\"HAU_NGA\"},\r\n                        \"ha-Latn\":{\"id\":\"0x7C68\",\"lang_name\":\"Hausa (Latin)\",\"country\":\"NGA\",\"locale\":\"HAU_NGA\"},\r\n                        \"ha-Latn-NG\":{\"id\":\"0x0468\",\"lang_name\":\"Hausa (Latin)\",\"country\":\"NGA\",\"locale\":\"HAU_NGA\"},\r\n                        \"he\":{\"id\":\"0x000D\",\"lang_name\":\"Hebrew\",\"country\":\"ISR\",\"locale\":\"HEB_ISR\"},\r\n                        \"he-IL\":{\"id\":\"0x040D\",\"lang_name\":\"Hebrew\",\"country\":\"ISR\",\"locale\":\"HEB_ISR\"},\r\n                        \"hi\":{\"id\":\"0x0039\",\"lang_name\":\"Hindi\",\"country\":\"IND\",\"locale\":\"HIN_IND\"},\r\n                        \"hi-IN\":{\"id\":\"0x0439\",\"lang_name\":\"Hindi\",\"country\":\"IND\",\"locale\":\"HIN_IND\"},\r\n                        \"hu\":{\"id\":\"0x000E\",\"lang_name\":\"Hungarian\",\"country\":\"HUN\",\"locale\":\"HUN_HUN\"},\r\n                        \"hu-HU\":{\"id\":\"0x040E\",\"lang_name\":\"Hungarian\",\"country\":\"HUN\",\"locale\":\"HUN_HUN\"},\r\n                        \"is\":{\"id\":\"0x000F\",\"lang_name\":\"Icelandic\",\"country\":\"ISL\",\"locale\":\"ISL_ISL\"},\r\n                        \"is-IS\":{\"id\":\"0x040F\",\"lang_name\":\"Icelandic\",\"country\":\"ISL\",\"locale\":\"ISL_ISL\"},\r\n                        \"ig\":{\"id\":\"0x0070\",\"lang_name\":\"Igbo\",\"country\":\"NGA\",\"locale\":\"IBO_NGA\"},\r\n                        \"ig-NG\":{\"id\":\"0x0470\",\"lang_name\":\"Igbo\",\"country\":\"NGA\",\"locale\":\"IBO_NGA\"},\r\n                        \"id\":{\"id\":\"0x0021\",\"lang_name\":\"Indonesian\",\"country\":\"IDN\",\"locale\":\"IND_IDN\"},\r\n                        \"id-ID\":{\"id\":\"0x0421\",\"lang_name\":\"Indonesian\",\"country\":\"IDN\",\"locale\":\"IND_IDN\"},\r\n                        \"iu\":{\"id\":\"0x005D\",\"lang_name\":\"Inuktitut (Latin)\",\"country\":\"CAN\",\"locale\":\"IUK_CAN\"},\r\n                        \"iu-Latn\":{\"id\":\"0x7C5D\",\"lang_name\":\"Inuktitut (Latin)\",\"country\":\"CAN\",\"locale\":\"IUK_CAN\"},\r\n                        \"iu-Latn-CA\":{\"id\":\"0x085D\",\"lang_name\":\"Inuktitut (Latin)\",\"country\":\"CAN\",\"locale\":\"IUK_CAN\"},\r\n                        \"iu-Cans\":{\"id\":\"0x785D\",\"lang_name\":\"Inuktitut (Syllabics)\",\"country\":\"CAN\",\"locale\":\"IUS_CAN\"},\r\n                        \"iu-Cans-CA\":{\"id\":\"0x045D\",\"lang_name\":\"Inuktitut (Syllabics)\",\"country\":\"CAN\",\"locale\":\"IUS_CAN\"},\r\n                        \"ga\":{\"id\":\"0x003C\",\"lang_name\":\"Irish\",\"country\":\"IRL\",\"locale\":\"IRE_IRL\"},\r\n                        \"ga-IE\":{\"id\":\"0x083C\",\"lang_name\":\"Irish\",\"country\":\"IRL\",\"locale\":\"IRE_IRL\"},\r\n                        \"xh\":{\"id\":\"0x0034\",\"lang_name\":\"isiXhosa\",\"country\":\"ZAF\",\"locale\":\"XHO_ZAF\"},\r\n                        \"xh-ZA\":{\"id\":\"0x0434\",\"lang_name\":\"isiXhosa\",\"country\":\"ZAF\",\"locale\":\"XHO_ZAF\"},\r\n                        \"zu\":{\"id\":\"0x0035\",\"lang_name\":\"isiZulu\",\"country\":\"ZAF\",\"locale\":\"ZUL_ZAF\"},\r\n                        \"zu-ZA\":{\"id\":\"0x0435\",\"lang_name\":\"isiZulu\",\"country\":\"ZAF\",\"locale\":\"ZUL_ZAF\"},\r\n                        \"it\":{\"id\":\"0x0010\",\"lang_name\":\"Italian\",\"country\":\"ITA\",\"locale\":\"ITA_ITA\"},\r\n                        \"it-IT\":{\"id\":\"0x0410\",\"lang_name\":\"Italian\",\"country\":\"ITA\",\"locale\":\"ITA_ITA\"},\r\n                        \"it-CH\":{\"id\":\"0x0810\",\"lang_name\":\"Italian\",\"country\":\"CHE\",\"locale\":\"ITS_CHE\"},\r\n                        \"ja\":{\"id\":\"0x0011\",\"lang_name\":\"Japanese\",\"country\":\"JPN\",\"locale\":\"JPN_JPN\"},\r\n                        \"ja-JP\":{\"id\":\"0x0411\",\"lang_name\":\"Japanese\",\"country\":\"JPN\",\"locale\":\"JPN_JPN\"},\r\n                        \"kn\":{\"id\":\"0x004B\",\"lang_name\":\"Kannada\",\"country\":\"IND\",\"locale\":\"KDI_IND\"},\r\n                        \"kn-IN\":{\"id\":\"0x044B\",\"lang_name\":\"Kannada\",\"country\":\"IND\",\"locale\":\"KDI_IND\"},\r\n                        \"kk\":{\"id\":\"0x003F\",\"lang_name\":\"Kazakh\",\"country\":\"KAZ\",\"locale\":\"KKZ_KAZ\"},\r\n                        \"kk-KZ\":{\"id\":\"0x043F\",\"lang_name\":\"Kazakh\",\"country\":\"KAZ\",\"locale\":\"KKZ_KAZ\"},\r\n                        \"km\":{\"id\":\"0x0053\",\"lang_name\":\"Khmer\",\"country\":\"KHM\",\"locale\":\"KHM_KHM\"},\r\n                        \"km-KH\":{\"id\":\"0x0453\",\"lang_name\":\"Khmer\",\"country\":\"KHM\",\"locale\":\"KHM_KHM\"},\r\n                        \"qut\":{\"id\":\"0x0086\",\"lang_name\":\"K\\'iche\",\"country\":\"GTM\",\"locale\":\"QUT_GTM\"},\r\n                        \"qut-GT\":{\"id\":\"0x0486\",\"lang_name\":\"K\\'iche\",\"country\":\"GTM\",\"locale\":\"QUT_GTM\"},\r\n                        \"rw\":{\"id\":\"0x0087\",\"lang_name\":\"Kinyarwanda\",\"country\":\"RWA\",\"locale\":\"KIN_RWA\"},\r\n                        \"rw-RW\":{\"id\":\"0x0487\",\"lang_name\":\"Kinyarwanda\",\"country\":\"RWA\",\"locale\":\"KIN_RWA\"},\r\n                        \"sw\":{\"id\":\"0x0041\",\"lang_name\":\"Kiswahili\",\"country\":\"KEN\",\"locale\":\"SWK_KEN\"},\r\n                        \"sw-KE\":{\"id\":\"0x0441\",\"lang_name\":\"Kiswahili\",\"country\":\"KEN\",\"locale\":\"SWK_KEN\"},\r\n                        \"kok\":{\"id\":\"0x0057\",\"lang_name\":\"Konkani\",\"country\":\"IND\",\"locale\":\"KNK_IND\"},\r\n                        \"kok-IN\":{\"id\":\"0x0457\",\"lang_name\":\"Konkani\",\"country\":\"IND\",\"locale\":\"KNK_IND\"},\r\n                        \"ko\":{\"id\":\"0x0012\",\"lang_name\":\"Korean\",\"country\":\"KOR\",\"locale\":\"KOR_KOR\"},\r\n                        \"ko-KR\":{\"id\":\"0x0412\",\"lang_name\":\"Korean\",\"country\":\"KOR\",\"locale\":\"KOR_KOR\"},\r\n                        \"ky\":{\"id\":\"0x0040\",\"lang_name\":\"Kyrgyz\",\"country\":\"KGZ\",\"locale\":\"KYR_KGZ\"},\r\n                        \"ky-KG\":{\"id\":\"0x0440\",\"lang_name\":\"Kyrgyz\",\"country\":\"KGZ\",\"locale\":\"KYR_KGZ\"},\r\n                        \"lo\":{\"id\":\"0x0054\",\"lang_name\":\"Lao\",\"country\":\"LAO\",\"locale\":\"LAO_LAO\"},\r\n                        \"lo-LA\":{\"id\":\"0x0454\",\"lang_name\":\"Lao\",\"country\":\"LAO\",\"locale\":\"LAO_LAO\"},\r\n                        \"lv\":{\"id\":\"0x0026\",\"lang_name\":\"Latvian\",\"country\":\"LVA\",\"locale\":\"LVI_LVA\"},\r\n                        \"lv-LV\":{\"id\":\"0x0426\",\"lang_name\":\"Latvian\",\"country\":\"LVA\",\"locale\":\"LVI_LVA\"},\r\n                        \"lt\":{\"id\":\"0x0027\",\"lang_name\":\"Lithuanian\",\"country\":\"LTU\",\"locale\":\"LTH_LTU\"},\r\n                        \"lt-LT\":{\"id\":\"0x0427\",\"lang_name\":\"Lithuanian\",\"country\":\"LTU\",\"locale\":\"LTH_LTU\"},\r\n                        \"dsb\":{\"id\":\"0x7C2E\",\"lang_name\":\"Lower Sorbian\",\"country\":\"GER\",\"locale\":\"DSB_GER\"},\r\n                        \"dsb-DE\":{\"id\":\"0x082E\",\"lang_name\":\"Lower Sorbian\",\"country\":\"GER\",\"locale\":\"DSB_GER\"},\r\n                        \"lb\":{\"id\":\"0x006E\",\"lang_name\":\"Luxembourgish\",\"country\":\"LUX\",\"locale\":\"LBX_LUX\"},\r\n                        \"lb-LU\":{\"id\":\"0x046E\",\"lang_name\":\"Luxembourgish\",\"country\":\"LUX\",\"locale\":\"LBX_LUX\"},\r\n                        \"mk-MK\":{\"id\":\"0x042F\",\"lang_name\":\"Macedonian (FYROM)\",\"country\":\"MKD\",\"locale\":\"MKI_MKD\"},\r\n                        \"mk\":{\"id\":\"0x002F\",\"lang_name\":\"Macedonian (FYROM)\",\"country\":\"MKD\",\"locale\":\"MKI_MKD\"},\r\n                        \"ms\":{\"id\":\"0x003E\",\"lang_name\":\"Malay\",\"country\":\"MYS\",\"locale\":\"MSL_MYS\"},\r\n                        \"ms-BN\":{\"id\":\"0x083E\",\"lang_name\":\"Malay\",\"country\":\"BRN\",\"locale\":\"MSB_BRN\"},\r\n                        \"ms-MY\":{\"id\":\"0x043E\",\"lang_name\":\"Malay\",\"country\":\"MYS\",\"locale\":\"MSL_MYS\"},\r\n                        \"ml\":{\"id\":\"0x004C\",\"lang_name\":\"Malayalam\",\"country\":\"IND\",\"locale\":\"MYM_IND\"},\r\n                        \"ml-IN\":{\"id\":\"0x044C\",\"lang_name\":\"Malayalam\",\"country\":\"IND\",\"locale\":\"MYM_IND\"},\r\n                        \"mt\":{\"id\":\"0x003A\",\"lang_name\":\"Maltese\",\"country\":\"MLT\",\"locale\":\"MLT_MLT\"},\r\n                        \"mt-MT\":{\"id\":\"0x043A\",\"lang_name\":\"Maltese\",\"country\":\"MLT\",\"locale\":\"MLT_MLT\"},\r\n                        \"mi\":{\"id\":\"0x0081\",\"lang_name\":\"Maori\",\"country\":\"NZL\",\"locale\":\"MRI_NZL\"},\r\n                        \"mi-NZ\":{\"id\":\"0x0481\",\"lang_name\":\"Maori\",\"country\":\"NZL\",\"locale\":\"MRI_NZL\"},\r\n                        \"arn\":{\"id\":\"0x007A\",\"lang_name\":\"Mapudungun\",\"country\":\"CHL\",\"locale\":\"MPD_CHL\"},\r\n                        \"arn-CL\":{\"id\":\"0x047A\",\"lang_name\":\"Mapudungun\",\"country\":\"CHL\",\"locale\":\"MPD_CHL\"},\r\n                        \"mr\":{\"id\":\"0x004E\",\"lang_name\":\"Marathi\",\"country\":\"IND\",\"locale\":\"MAR_IND\"},\r\n                        \"mr-IN\":{\"id\":\"0x044E\",\"lang_name\":\"Marathi\",\"country\":\"IND\",\"locale\":\"MAR_IND\"},\r\n                        \"moh\":{\"id\":\"0x007C\",\"lang_name\":\"Mohawk\",\"country\":\"CAN\",\"locale\":\"MWK_CAN\"},\r\n                        \"moh-CA\":{\"id\":\"0x047C\",\"lang_name\":\"Mohawk\",\"country\":\"CAN\",\"locale\":\"MWK_CAN\"},\r\n                        \"mn\":{\"id\":\"0x0050\",\"lang_name\":\"Mongolian (Cyrillic)\",\"country\":\"MNG\",\"locale\":\"MNN_MNG\"},\r\n                        \"mn-Cyrl\":{\"id\":\"0x7850\",\"lang_name\":\"Mongolian (Cyrillic)\",\"country\":\"MNG\",\"locale\":\"MNN_MNG\"},\r\n                        \"mn-MN\":{\"id\":\"0x0450\",\"lang_name\":\"Mongolian (Cyrillic)\",\"country\":\"MNG\",\"locale\":\"MNN_MNG\"},\r\n                        \"mn-Mong\":{\"id\":\"0x7C50\",\"lang_name\":\"Mongolian (Traditional Mongolian)\",\"country\":\"CHN\",\"locale\":\"MNG_CHN\"},\r\n                        \"mn-Mong-CN\":{\"id\":\"0x0850\",\"lang_name\":\"Mongolian (Traditional Mongolian)\",\"country\":\"CHN\",\"locale\":\"MNG_CHN\"},\r\n                        \"ne\":{\"id\":\"0x0061\",\"lang_name\":\"Nepali\",\"country\":\"NEP\",\"locale\":\"NEP_NEP\"},\r\n                        \"ne-NP\":{\"id\":\"0x0461\",\"lang_name\":\"Nepali\",\"country\":\"NEP\",\"locale\":\"NEP_NEP\"},\r\n                        \"no\":{\"id\":\"0x0014\",\"lang_name\":\"Norwegian (Bokm\\u00d5l)\",\"country\":\"NOR\",\"locale\":\"NOR_NOR\"},\r\n                        \"nb\":{\"id\":\"0x7C14\",\"lang_name\":\"Norwegian (Bokm\\u00d5l)\",\"country\":\"NOR\",\"locale\":\"NOR_NOR\"},\r\n                        \"nn\":{\"id\":\"0x7814\",\"lang_name\":\"Norwegian (Nynorsk)\",\"country\":\"NOR\",\"locale\":\"NON_NOR\"},\r\n                        \"nb-NO\":{\"id\":\"0x0414\",\"lang_name\":\"Norwegian (Bokm\\u00d5l)\",\"country\":\"NOR\",\"locale\":\"NOR_NOR\"},\r\n                        \"nn-NO\":{\"id\":\"0x0814\",\"lang_name\":\"Norwegian (Nynorsk)\",\"country\":\"NOR\",\"locale\":\"NON_NOR\"},\r\n                        \"oc\":{\"id\":\"0x0082\",\"lang_name\":\"Occitan\",\"country\":\"FRA\",\"locale\":\"OCI_FRA\"},\r\n                        \"oc-FR\":{\"id\":\"0x0482\",\"lang_name\":\"Occitan\",\"country\":\"FRA\",\"locale\":\"OCI_FRA\"},\r\n                        \"or\":{\"id\":\"0x0048\",\"lang_name\":\"Oriya\",\"country\":\"IND\",\"locale\":\"ORI_IND\"},\r\n                        \"or-IN\":{\"id\":\"0x0448\",\"lang_name\":\"Oriya\",\"country\":\"IND\",\"locale\":\"ORI_IND\"},\r\n                        \"ps\":{\"id\":\"0x0063\",\"lang_name\":\"Pashto\",\"country\":\"AFG\",\"locale\":\"PAS_AFG\"},\r\n                        \"ps-AF\":{\"id\":\"0x0463\",\"lang_name\":\"Pashto\",\"country\":\"AFG\",\"locale\":\"PAS_AFG\"},\r\n                        \"fa\":{\"id\":\"0x0029\",\"lang_name\":\"Persian\",\"country\":\"IRN\",\"locale\":\"FAR_IRN\"},\r\n                        \"fa-IR\":{\"id\":\"0x0429\",\"lang_name\":\"Persian\",\"country\":\"IRN\",\"locale\":\"FAR_IRN\"},\r\n                        \"pl\":{\"id\":\"0x0015\",\"lang_name\":\"Polish\",\"country\":\"POL\",\"locale\":\"PLK_POL\"},\r\n                        \"pl-PL\":{\"id\":\"0x0415\",\"lang_name\":\"Polish\",\"country\":\"POL\",\"locale\":\"PLK_POL\"},\r\n                        \"pt\":{\"id\":\"0x0016\",\"lang_name\":\"Portuguese\",\"country\":\"BRA\",\"locale\":\"PTB_BRA\"},\r\n                        \"pt-BR\":{\"id\":\"0x0416\",\"lang_name\":\"Portuguese\",\"country\":\"BRA\",\"locale\":\"PTB_BRA\"},\r\n                        \"pt-PT\":{\"id\":\"0x0816\",\"lang_name\":\"Portuguese\",\"country\":\"PRT\",\"locale\":\"PTG_PRT\"},\r\n                        \"pa\":{\"id\":\"0x0046\",\"lang_name\":\"Punjabi\",\"country\":\"IND\",\"locale\":\"PAN_IND\"},\r\n                        \"pa-IN\":{\"id\":\"0x0446\",\"lang_name\":\"Punjabi\",\"country\":\"IND\",\"locale\":\"PAN_IND\"},\r\n                        \"quz\":{\"id\":\"0x006B\",\"lang_name\":\"Quechua\",\"country\":\"BOL\",\"locale\":\"QUB_BOL\"},\r\n                        \"quz-BO\":{\"id\":\"0x046B\",\"lang_name\":\"Quechua\",\"country\":\"BOL\",\"locale\":\"QUB_BOL\"},\r\n                        \"quz-EC\":{\"id\":\"0x086B\",\"lang_name\":\"Quechua\",\"country\":\"ECU\",\"locale\":\"QUE_ECU\"},\r\n                        \"quz-PE\":{\"id\":\"0x0C6B\",\"lang_name\":\"Quechua\",\"country\":\"PER\",\"locale\":\"QUP_PER\"},\r\n                        \"ro\":{\"id\":\"0x0018\",\"lang_name\":\"Romanian\",\"country\":\"ROM\",\"locale\":\"ROM_ROM\"},\r\n                        \"ro-RO\":{\"id\":\"0x0418\",\"lang_name\":\"Romanian\",\"country\":\"ROM\",\"locale\":\"ROM_ROM\"},\r\n                        \"rm\":{\"id\":\"0x0017\",\"lang_name\":\"Romansh\",\"country\":\"CHE\",\"locale\":\"RMC_CHE\"},\r\n                        \"rm-CH\":{\"id\":\"0x0417\",\"lang_name\":\"Romansh\",\"country\":\"CHE\",\"locale\":\"RMC_CHE\"},\r\n                        \"ru\":{\"id\":\"0x0019\",\"lang_name\":\"Russian\",\"country\":\"RUS\",\"locale\":\"RUS_RUS\"},\r\n                        \"ru-RU\":{\"id\":\"0x0419\",\"lang_name\":\"Russian\",\"country\":\"RUS\",\"locale\":\"RUS_RUS\"},\r\n                        \"smn\":{\"id\":\"0x703B\",\"lang_name\":\"Sami (Inari)\",\"country\":\"FIN\",\"locale\":\"SMN_FIN\"},\r\n                        \"smj\":{\"id\":\"0x7C3B\",\"lang_name\":\"Sami (Lule)\",\"country\":\"SWE\",\"locale\":\"SMK_SWE\"},\r\n                        \"se\":{\"id\":\"0x003B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"NOR\",\"locale\":\"SME_NOR\"},\r\n                        \"sms\":{\"id\":\"0x743B\",\"lang_name\":\"Sami (Skolt)\",\"country\":\"FIN\",\"locale\":\"SMS_FIN\"},\r\n                        \"sma\":{\"id\":\"0x783B\",\"lang_name\":\"Sami (Southern)\",\"country\":\"SWE\",\"locale\":\"SMB_SWE\"},\r\n                        \"smn-FI\":{\"id\":\"0x243B\",\"lang_name\":\"Sami (Inari)\",\"country\":\"FIN\",\"locale\":\"SMN_FIN\"},\r\n                        \"smj-NO\":{\"id\":\"0x103B\",\"lang_name\":\"Sami (Lule)\",\"country\":\"NOR\",\"locale\":\"SMJ_NOR\"},\r\n                        \"smj-SE\":{\"id\":\"0x143B\",\"lang_name\":\"Sami (Lule)\",\"country\":\"SWE\",\"locale\":\"SMK_SWE\"},\r\n                        \"se-FI\":{\"id\":\"0x0C3B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"FIN\",\"locale\":\"SMG_FIN\"},\r\n                        \"se-NO\":{\"id\":\"0x043B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"NOR\",\"locale\":\"SME_NOR\"},\r\n                        \"se-SE\":{\"id\":\"0x083B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"SWE\",\"locale\":\"SMF_SWE\"},\r\n                        \"sms-FI\":{\"id\":\"0x203B\",\"lang_name\":\"Sami (Skolt)\",\"country\":\"FIN\",\"locale\":\"SMS_FIN\"},\r\n                        \"sma-NO\":{\"id\":\"0x183B\",\"lang_name\":\"Sami (Southern)\",\"country\":\"NOR\",\"locale\":\"SMA_NOR\"},\r\n                        \"sma-SE\":{\"id\":\"0x1C3B\",\"lang_name\":\"Sami (Southern)\",\"country\":\"SWE\",\"locale\":\"SMB_SWE\"},\r\n                        \"sa\":{\"id\":\"0x004F\",\"lang_name\":\"Sanskrit\",\"country\":\"IND\",\"locale\":\"SAN_IND\"},\r\n                        \"sa-IN\":{\"id\":\"0x044F\",\"lang_name\":\"Sanskrit\",\"country\":\"IND\",\"locale\":\"SAN_IND\"},\r\n                        \"gd\":{\"id\":\"0x0091\",\"lang_name\":\"Scottish Gaelic\",\"country\":\"GBR\",\"locale\":\"GLA_GBR\"},\r\n                        \"gd-GB\":{\"id\":\"0x0491\",\"lang_name\":\"Scottish Gaelic\",\"country\":\"GBR\",\"locale\":\"GLA_GBR\"},\r\n                        \"sr\":{\"id\":\"0x7C1A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SRB\",\"locale\":\"SRM_SRB\"},\r\n                        \"sr-Cyrl\":{\"id\":\"0x6C1A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"SRB\",\"locale\":\"SRO_SRB\"},\r\n                        \"sr-Cyrl-BA\":{\"id\":\"0x1C1A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"BIH\",\"locale\":\"SRN_BIH\"},\r\n                        \"sr-Cyrl-ME\":{\"id\":\"0x301A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"MNE\",\"locale\":\"SRQ_MNE\"},\r\n                        \"sr-Cyrl-CS\":{\"id\":\"0x0C1A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"SCG\",\"locale\":\"SRB_SCG\"},\r\n                        \"sr-Cyrl-RS\":{\"id\":\"0x281A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"SRB\",\"locale\":\"SRO_SRB\"},\r\n                        \"sr-Latn\":{\"id\":\"0x701A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SRB\",\"locale\":\"SRM_SRB\"},\r\n                        \"sr-Latn-BA\":{\"id\":\"0x181A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"BIH\",\"locale\":\"SRS_BIH\"},\r\n                        \"sr-Latn-ME\":{\"id\":\"0x2C1A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"MNE\",\"locale\":\"SRP_MNE\"},\r\n                        \"sr-Latn-CS\":{\"id\":\"0x081A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SCG\",\"locale\":\"SRL_SCG\"},\r\n                        \"sr-Latn-RS\":{\"id\":\"0x241A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SRB\",\"locale\":\"SRM_SRB\"},\r\n                        \"nso\":{\"id\":\"0x006C\",\"lang_name\":\"Sesotho sa Leboa\",\"country\":\"ZAF\",\"locale\":\"NSO_ZAF\"},\r\n                        \"nso-ZA\":{\"id\":\"0x046C\",\"lang_name\":\"Sesotho sa Leboa\",\"country\":\"ZAF\",\"locale\":\"NSO_ZAF\"},\r\n                        \"tn\":{\"id\":\"0x0032\",\"lang_name\":\"Setswana\",\"country\":\"ZAF\",\"locale\":\"TSN_ZAF\"},\r\n                        \"tn-ZA\":{\"id\":\"0x0432\",\"lang_name\":\"Setswana\",\"country\":\"ZAF\",\"locale\":\"TSN_ZAF\"},\r\n                        \"si\":{\"id\":\"0x005B\",\"lang_name\":\"Sinhala\",\"country\":\"LKA\",\"locale\":\"SIN_LKA\"},\r\n                        \"si-LK\":{\"id\":\"0x045B\",\"lang_name\":\"Sinhala\",\"country\":\"LKA\",\"locale\":\"SIN_LKA\"},\r\n                        \"sk\":{\"id\":\"0x001B\",\"lang_name\":\"Slovak\",\"country\":\"SVK\",\"locale\":\"SKY_SVK\"},\r\n                        \"sk-SK\":{\"id\":\"0x041B\",\"lang_name\":\"Slovak\",\"country\":\"SVK\",\"locale\":\"SKY_SVK\"},\r\n                        \"sl\":{\"id\":\"0x0024\",\"lang_name\":\"Slovenian\",\"country\":\"SVN\",\"locale\":\"SLV_SVN\"},\r\n                        \"sl-SI\":{\"id\":\"0x0424\",\"lang_name\":\"Slovenian\",\"country\":\"SVN\",\"locale\":\"SLV_SVN\"},\r\n                        \"es\":{\"id\":\"0x000A\",\"lang_name\":\"Spanish\",\"country\":\"ESP\",\"locale\":\"ESN_ESP\"},\r\n                        \"es-AR\":{\"id\":\"0x2C0A\",\"lang_name\":\"Spanish\",\"country\":\"ARG\",\"locale\":\"ESS_ARG\"},\r\n                        \"es-BO\":{\"id\":\"0x400A\",\"lang_name\":\"Spanish\",\"country\":\"BOL\",\"locale\":\"ESB_BOL\"},\r\n                        \"es-CL\":{\"id\":\"0x340A\",\"lang_name\":\"Spanish\",\"country\":\"CHL\",\"locale\":\"ESL_CHL\"},\r\n                        \"es-CO\":{\"id\":\"0x240A\",\"lang_name\":\"Spanish\",\"country\":\"COL\",\"locale\":\"ESO_COL\"},\r\n                        \"es-CR\":{\"id\":\"0x140A\",\"lang_name\":\"Spanish\",\"country\":\"CRI\",\"locale\":\"ESC_CRI\"},\r\n                        \"es-DO\":{\"id\":\"0x1C0A\",\"lang_name\":\"Spanish\",\"country\":\"DOM\",\"locale\":\"ESD_DOM\"},\r\n                        \"es-EC\":{\"id\":\"0x300A\",\"lang_name\":\"Spanish\",\"country\":\"ECU\",\"locale\":\"ESF_ECU\"},\r\n                        \"es-SV\":{\"id\":\"0x440A\",\"lang_name\":\"Spanish\",\"country\":\"SLV\",\"locale\":\"ESE_SLV\"},\r\n                        \"es-GT\":{\"id\":\"0x100A\",\"lang_name\":\"Spanish\",\"country\":\"GTM\",\"locale\":\"ESG_GTM\"},\r\n                        \"es-HN\":{\"id\":\"0x480A\",\"lang_name\":\"Spanish\",\"country\":\"HND\",\"locale\":\"ESH_HND\"},\r\n                        \"es-MX\":{\"id\":\"0x080A\",\"lang_name\":\"Spanish\",\"country\":\"MEX\",\"locale\":\"ESM_MEX\"},\r\n                        \"es-NI\":{\"id\":\"0x4C0A\",\"lang_name\":\"Spanish\",\"country\":\"NIC\",\"locale\":\"ESI_NIC\"},\r\n                        \"es-PA\":{\"id\":\"0x180A\",\"lang_name\":\"Spanish\",\"country\":\"PAN\",\"locale\":\"ESA_PAN\"},\r\n                        \"es-PY\":{\"id\":\"0x3C0A\",\"lang_name\":\"Spanish\",\"country\":\"PRY\",\"locale\":\"ESZ_PRY\"},\r\n                        \"es-PE\":{\"id\":\"0x280A\",\"lang_name\":\"Spanish\",\"country\":\"PER\",\"locale\":\"ESR_PER\"},\r\n                        \"es-PR\":{\"id\":\"0x500A\",\"lang_name\":\"Spanish\",\"country\":\"PRI\",\"locale\":\"ESU_PRI\"},\r\n                        \"es-ES\":{\"id\":\"0x0C0A\",\"lang_name\":\"Spanish\",\"country\":\"ESP\",\"locale\":\"ESN_ESP\"},\r\n                        \"es-US\":{\"id\":\"0x540A\",\"lang_name\":\"Spanish\",\"country\":\"USA\",\"locale\":\"EST_USA\"},\r\n                        \"es-UY\":{\"id\":\"0x380A\",\"lang_name\":\"Spanish\",\"country\":\"URY\",\"locale\":\"ESY_URY\"},\r\n                        \"es-VE\":{\"id\":\"0x200A\",\"lang_name\":\"Spanish\",\"country\":\"VEN\",\"locale\":\"ESV_VEN\"},\r\n                        \"sv\":{\"id\":\"0x001D\",\"lang_name\":\"Swedish\",\"country\":\"SWE\",\"locale\":\"SVE_SWE\"},\r\n                        \"sv-FI\":{\"id\":\"0x081D\",\"lang_name\":\"Swedish\",\"country\":\"FIN\",\"locale\":\"SVF_FIN\"},\r\n                        \"sv-SE\":{\"id\":\"0x041D\",\"lang_name\":\"Swedish\",\"country\":\"SWE\",\"locale\":\"SVE_SWE\"},\r\n                        \"syr\":{\"id\":\"0x005A\",\"lang_name\":\"Syriac\",\"country\":\"SYR\",\"locale\":\"SYR_SYR\"},\r\n                        \"syr-SY\":{\"id\":\"0x045A\",\"lang_name\":\"Syriac\",\"country\":\"SYR\",\"locale\":\"SYR_SYR\"},\r\n                        \"tg\":{\"id\":\"0x0028\",\"lang_name\":\"Tajik (Cyrillic)\",\"country\":\"TAJ\",\"locale\":\"TAJ_TAJ\"},\r\n                        \"tg-Cyrl\":{\"id\":\"0x7C28\",\"lang_name\":\"Tajik (Cyrillic)\",\"country\":\"TAJ\",\"locale\":\"TAJ_TAJ\"},\r\n                        \"tg-Cyrl-TJ\":{\"id\":\"0x0428\",\"lang_name\":\"Tajik (Cyrillic)\",\"country\":\"TAJ\",\"locale\":\"TAJ_TAJ\"},\r\n                        \"tzm\":{\"id\":\"0x005F\",\"lang_name\":\"Tamazight (Latin)\",\"country\":\"DZA\",\"locale\":\"TZM_DZA\"},\r\n                        \"tzm-Latn\":{\"id\":\"0x7C5F\",\"lang_name\":\"Tamazight (Latin)\",\"country\":\"DZA\",\"locale\":\"TZM_DZA\"},\r\n                        \"tzm-Latn-DZ\":{\"id\":\"0x085F\",\"lang_name\":\"Tamazight (Latin)\",\"country\":\"DZA\",\"locale\":\"TZM_DZA\"},\r\n                        \"ta\":{\"id\":\"0x0049\",\"lang_name\":\"Tamil\",\"country\":\"IND\",\"locale\":\"TAM_IND\"},\r\n                        \"ta-IN\":{\"id\":\"0x0449\",\"lang_name\":\"Tamil\",\"country\":\"IND\",\"locale\":\"TAM_IND\"},\r\n                        \"tt\":{\"id\":\"0x0044\",\"lang_name\":\"Tatar\",\"country\":\"RUS\",\"locale\":\"TTT_RUS\"},\r\n                        \"tt-RU\":{\"id\":\"0x0444\",\"lang_name\":\"Tatar\",\"country\":\"RUS\",\"locale\":\"TTT_RUS\"},\r\n                        \"te\":{\"id\":\"0x004A\",\"lang_name\":\"Telugu\",\"country\":\"IND\",\"locale\":\"TEL_IND\"},\r\n                        \"te-IN\":{\"id\":\"0x044A\",\"lang_name\":\"Telugu\",\"country\":\"IND\",\"locale\":\"TEL_IND\"},\r\n                        \"th\":{\"id\":\"0x001E\",\"lang_name\":\"Thai\",\"country\":\"THA\",\"locale\":\"THA_THA\"},\r\n                        \"th-TH\":{\"id\":\"0x041E\",\"lang_name\":\"Thai\",\"country\":\"THA\",\"locale\":\"THA_THA\"},\r\n                        \"bo\":{\"id\":\"0x0051\",\"lang_name\":\"Tibetan\",\"country\":\"CHN\",\"locale\":\"BOB_CHN\"},\r\n                        \"bo-CN\":{\"id\":\"0x0451\",\"lang_name\":\"Tibetan\",\"country\":\"CHN\",\"locale\":\"BOB_CHN\"},\r\n                        \"tr\":{\"id\":\"0x001F\",\"lang_name\":\"Turkish\",\"country\":\"TUR\",\"locale\":\"TRK_TUR\"},\r\n                        \"tr-TR\":{\"id\":\"0x041F\",\"lang_name\":\"Turkish\",\"country\":\"TUR\",\"locale\":\"TRK_TUR\"},\r\n                        \"tk\":{\"id\":\"0x0042\",\"lang_name\":\"Turkmen\",\"country\":\"TKM\",\"locale\":\"TUK_TKM\"},\r\n                        \"tk-TM\":{\"id\":\"0x0442\",\"lang_name\":\"Turkmen\",\"country\":\"TKM\",\"locale\":\"TUK_TKM\"},\r\n                        \"uk\":{\"id\":\"0x0022\",\"lang_name\":\"Ukrainian\",\"country\":\"UKR\",\"locale\":\"UKR_UKR\"},\r\n                        \"uk-UA\":{\"id\":\"0x0422\",\"lang_name\":\"Ukrainian\",\"country\":\"UKR\",\"locale\":\"UKR_UKR\"},\r\n                        \"hsb\":{\"id\":\"0x002E\",\"lang_name\":\"Upper Sorbian\",\"country\":\"GER\",\"locale\":\"HSB_GER\"},\r\n                        \"hsb-DE\":{\"id\":\"0x042E\",\"lang_name\":\"Upper Sorbian\",\"country\":\"GER\",\"locale\":\"HSB_GER\"},\r\n                        \"ur\":{\"id\":\"0x0020\",\"lang_name\":\"Urdu\",\"country\":\"PAK\",\"locale\":\"URD_PAK\"},\r\n                        \"ur-PK\":{\"id\":\"0x0420\",\"lang_name\":\"Urdu\",\"country\":\"PAK\",\"locale\":\"URD_PAK\"},\r\n                        \"ug\":{\"id\":\"0x0080\",\"lang_name\":\"Uyghur\",\"country\":\"CHN\",\"locale\":\"UIG_CHN\"},\r\n                        \"ug-CN\":{\"id\":\"0x0480\",\"lang_name\":\"Uyghur\",\"country\":\"CHN\",\"locale\":\"UIG_CHN\"},\r\n                        \"uz-Cyrl\":{\"id\":\"0x7843\",\"lang_name\":\"Uzbek (Cyrillic)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz-Cyrl-UZ\":{\"id\":\"0x0843\",\"lang_name\":\"Uzbek (Cyrillic)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz\":{\"id\":\"0x0043\",\"lang_name\":\"Uzbek (Latin)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz-Latn\":{\"id\":\"0x7C43\",\"lang_name\":\"Uzbek (Latin)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz-Latn-UZ\":{\"id\":\"0x0443\",\"lang_name\":\"Uzbek (Latin)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"vi\":{\"id\":\"0x002A\",\"lang_name\":\"Vietcountryse\",\"country\":\"VNM\",\"locale\":\"VIT_VNM\"},\r\n                        \"vi-VN\":{\"id\":\"0x042A\",\"lang_name\":\"Vietcountryse\",\"country\":\"VNM\",\"locale\":\"VIT_VNM\"},\r\n                        \"cy\":{\"id\":\"0x0052\",\"lang_name\":\"Welsh\",\"country\":\"GBR\",\"locale\":\"CYM_GBR\"},\r\n                        \"cy-GB\":{\"id\":\"0x0452\",\"lang_name\":\"Welsh\",\"country\":\"GBR\",\"locale\":\"CYM_GBR\"},\r\n                        \"wo\":{\"id\":\"0x0088\",\"lang_name\":\"Wolof\",\"country\":\"SEN\",\"locale\":\"WOL_SEN\"},\r\n                        \"wo-SN\":{\"id\":\"0x0488\",\"lang_name\":\"Wolof\",\"country\":\"SEN\",\"locale\":\"WOL_SEN\"},\r\n                        \"sah\":{\"id\":\"0x0085\",\"lang_name\":\"Yakut\",\"country\":\"RUS\",\"locale\":\"SAH_RUS\"},\r\n                        \"sah-RU\":{\"id\":\"0x0485\",\"lang_name\":\"Yakut\",\"country\":\"RUS\",\"locale\":\"SAH_RUS\"},\r\n                        \"ii\":{\"id\":\"0x0078\",\"lang_name\":\"Yi\",\"country\":\"CHN\",\"locale\":\"III_CHN\"},\r\n                        \"ii-CN\":{\"id\":\"0x0478\",\"lang_name\":\"Yi\",\"country\":\"CHN\",\"locale\":\"III_CHN\"},\r\n                        \"yo\":{\"id\":\"0x006A\",\"lang_name\":\"Yoruba\",\"country\":\"NGA\",\"locale\":\"YOR_NGA\"},\r\n                        \"yo-NG\":{\"id\":\"0x046A\",\"lang_name\":\"Yoruba\",\"country\":\"NGA\",\"locale\":\"YOR_NGA\"}\r\n                    }';\r\n\r\n        $win_loc = json_decode($win_loc, true);\r\n\r\n        $countries = property::countries($session['lang'], true);\r\n\r\n        $locales = array();\r\n        foreach($win_loc as $short => $locale)\r\n        {\r\n            $locales[$locale['locale']] = $locale['lang_name'].' ('.$countries[$locale['country']].') ['.$short.']';\r\n        }\r\n\r\n        return $locales;\r\n    }\r\n\r\n    public function unix_locales()\r\n    {\r\n        global $session;\r\n\r\n\t\tif(is_callable('shell_exec') && false === stripos(ini_get('disable_functions'), 'shell_exec'))\r\n\t\t{\r\n        \t$locales = shell_exec('locale -a');\r\n\t\t\t$tmp = explode(\"\\n\", $locales);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// default list of unix locales\r\n\t\t\t$locales = \"aa_DJ,aa_ER,aa_ER@saaho,aa_ET,af_ZA,am_ET,an_ES,ar_AE,ar_BH,ar_DZ,ar_EG,ar_IN,ar_IQ,ar_JO,ar_KW,ar_LB,ar_LY,ar_MA,ar_OM,ar_QA,ar_SA,ar_SD,ar_SY,ar_TN,ar_YE,as_IN,ast_ES,az_AZ,be_BY,be_BY@latin,ber_DZ,ber_MA,bg_BG,bn_BD,bn_IN,bo_CN,bo_IN,bokmal,bokm,br_FR,bs_BA,byn_ER,C,ca_AD,ca_ES,ca_FR,ca_IT,catalan,crh_UA,croatian,csb_PL,cs_CZ,cv_RU,cy_GB,czech,da_DK,danish,dansk,de_AT,de_BE,de_CH,de_DE,de_LU,deutsch,dutch,dv_MV,dv_MV.utf8,dz_BT,dz_BT.utf8,eesti,el_CY,el_GR,en_AG,en_AU,en_BW,en_CA,en_DK,en_GB,en_HK,en_IE,en_IN,en_NG,en_NZ,en_PH,en_SG,en_US,en_ZA,en_ZW,es_AR,es_BO,es_CL,es_CO,es_CR,es_DO,es_EC,es_ES,es_GT,es_HN,es_MX,es_NI,es_PA,es_PE,es_PR,es_PY,es_SV,estonian,es_US,es_UY,es_VE,et_EE,eu_ES,fa_IR,fi_FI,fil_PH,finnish,fo_FO,fran\u6829s,fr_BE,fr_CA,fr_CH,french,fr_FR,fr_LU,fur_IT,fy_DE,fy_NL,ga_IE,galego,galician,gd_GB,german,gez_ER,gez_ET,gl_ES,greek,gu_IN,gv_GB,ha_NG,hebrew,he_IL,hi_IN,hne_IN,hr_HR,hrvatski,hsb_DE,ht_HT,hu_HU,hungarian,hy_AM,icelandic,id_ID,ig_NG,ik_CA,is_IS,italian,it_CH,it_IT,iu_CA,iw_IL,ja_JP,japanese,ka_GE,kk_KZ,kl_GL,km_KH,kn_IN,kok_IN,ko_KR,korean,ks_IN,ku_TR,kw_GB,ky_KG,lg_UG,li_BE,li_NL,lithuanian,lo_LA,lt_LT,lv_LV,mai_IN,mg_MG,mi_NZ,mk_MK,ml_IN,mn_MN,mr_IN,ms_MY,mt_MT,my_MM,nb_NO,nds_DE,nds_NL,ne_NP,nl_AW,nl_BE,nl_NL,nn_NO,no_NO,norwegian,nr_ZA,nso_ZA,nynorsk,oc_FR,om_ET,om_KE,or_IN,pa_IN,pap_AN,pa_PK,pl_PL,polish,portuguese,POSIX,ps_AF,pt_BR,pt_PT,romanian,ro_RO,ru_RU,russian,ru_UA,rw_RW,sa_IN,sc_IT,sd_IN,se_NO,shs_CA,sid_ET,si_LK,sk_SK,slovak,slovene,slovenian,sl_SI,so_DJ,so_ET,so_KE,so_SO,spanish,sq_AL,sq_MK,sr_ME,sr_RS,ss_ZA,st_ZA,sv_FI,sv_SE,swedish,ta_IN,te_IN,tg_TJ,thai,th_TH,ti_ER,ti_ET,tig_ER,tk_TM,tl_PH,tn_ZA,tr_CY,tr_TR,ts_ZA,tt_RU,turkish,ug_CN,uk_UA,ur_PK,uz_UZ,ve_ZA,vi_VN,wa_BE,wo_SN,xh_ZA,yi_US,yo_NG,zh_CN,zh_HK,zh_SG,zh_TW,zu_ZA\";\r\n\t\t\t$tmp = explode(\",\", $locales);\r\n\t\t}\r\n\r\n        $locales = array();\r\n        $languages = language::language_names(false);\r\n        $countries = property::countries($session['lang'], true);\r\n        $tmp = array_filter($tmp);\r\n        foreach($tmp as $loc)\r\n        {\r\n            if(in_array($loc, array('C', 'POSIX')))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            if(strpos($loc, '.')===false)\r\n            {\r\n                if(in_array($loc.'.utf8', $tmp))\r\n                {\r\n                    continue;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                // there is a dot in the locale name\r\n                $check = substr($loc, 0, strpos($loc, '.')).'.utf8';\r\n                if(in_array($check, $tmp) && $check!=$loc)\r\n                {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            $language = @$languages[substr($loc, 0, 2)];\r\n            if(empty($language))\r\n            {\r\n                $language = '?';\r\n            }\r\n            $country = @$countries[substr($loc, 3,2)];\r\n            if(!empty($country))\r\n            {\r\n                $country = ' ('.$country.')';\r\n            }\r\n\r\n            $locales[$loc] = $language.$country.' ['.$loc.']';\r\n        }\r\n\r\n        return $locales;\r\n    }\r\n\r\n\tpublic function homepage()\r\n\t{\r\n\t\t// return homepage relative path depending on the active language\r\n\t\tglobal $current;\r\n\r\n\t\t$homepage_routes = $this->homepage_from_structure(true);    // want all possible homepage paths (language based)\r\n\r\n\t\tif(is_array($homepage_routes))\r\n\t\t{\r\n\t\t\tif(isset($current) && !empty($current['lang']))\r\n            {\r\n                $homepage = $homepage_routes[$current['lang']];\r\n            }\r\n\r\n\t\t\tif(empty($homepage))\r\n            {\r\n                $homepage = array_shift($homepage_routes);\r\n            }\r\n\t\t}\r\n\t\telse\r\n        {\r\n            $homepage = $homepage_routes;\r\n        }\r\n\r\n\t\treturn $homepage;\r\n\t}\r\n\r\n    public function homepage_from_structure($all_languages=false)\r\n    {\r\n        $homepage_relative_url = $this->homepage;\r\n        if(is_numeric($homepage_relative_url))\r\n        {\r\n            $homepage_relative_url = path::loadElementPaths('structure', $homepage_relative_url);\r\n\t        if(!$all_languages)\r\n            {\r\n                $homepage_relative_url = array_shift($homepage_relative_url);\r\n            }\r\n        }\r\n\r\n        return $homepage_relative_url;\r\n    }\r\n\r\n\tpublic static function all()\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\t$out = array();\r\n\r\n\t\t$DB->query(\"SELECT id, name FROM nv_websites ORDER BY id ASC\");\r\n\t\t$rs = $DB->result();\r\n\r\n\t\tfor($i=0; $i < count($rs); $i++)\r\n\t\t{\r\n\t\t\t$out[$rs[$i]->id] = $rs[$i]->name;\r\n\t\t}\r\n\r\n\t\treturn $out;\r\n\t}\r\n\r\n    public function quicksearch($text)\r\n    {\r\n        $like = ' LIKE '.protect('%'.$text.'%');\r\n\r\n        $cols[] = 'id' . $like;\r\n        $cols[] = 'name' . $like;\r\n        $cols[] = 'domain' . $like;\r\n        $cols[] = 'subdomain' . $like;\r\n\r\n        $where = ' AND ( ';\r\n        $where.= implode( ' OR ', $cols);\r\n        $where .= ')';\r\n\r\n        return $where;\r\n    }\r\n}\r\n\r\n?>"], "fixing_code": ["<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/paths/path.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/external/feedcreator/feedcreator.class.php');\r\n\r\nclass feed\r\n{\r\n\tpublic $id;\r\n\tpublic $website;\r\n\tpublic $categories;\r\n\tpublic $image;\t\r\n\tpublic $format;\r\n\tpublic $entries;\r\n\tpublic $content;\r\n\tpublic $views;\r\n\tpublic $permission;\r\n\tpublic $enabled;\r\n\t\r\n\tpublic $dictionary;\r\n\tpublic $paths;\r\n\t\r\n\tpublic function load($id)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\t\r\n\t\tif($DB->query('SELECT * FROM nv_feeds WHERE id = '.intval($id).' AND website = '.$website->id))\r\n\t\t{\r\n\t\t\t$data = $DB->result();\r\n\t\t\t$this->load_from_resultset($data); // there will be as many entries as languages enabled\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\t$main = $rs[0];\r\n\t\t\r\n\t\t$this->id\t\t\t= $main->id;\r\n\t\t$this->website\t\t= $main->website;\t\t\r\n\t\t$this->title  \t\t= $main->title;\r\n\t\t$this->categories\t= explode(',', $main->categories);\r\n\t\t$this->format\t\t= $main->format;\r\n\t\t$this->image\t\t= $main->image;\r\n\t\t$this->entries\t\t= $main->entries;\r\n\t\t$this->content\t\t= $main->content;\t\t\t\t\r\n\t\t$this->views\t\t= $main->views;\t\t\r\n\t\t$this->permission\t= $main->permission;\t\t\r\n\t\t$this->enabled\t\t= $main->enabled;\t\r\n\t\t\r\n\t\t$this->dictionary\t= webdictionary::load_element_strings('feed', $this->id);\r\n\t\t$this->paths \t\t= path::loadElementPaths('feed', $this->id);\r\n\t}\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n\t    global $purifier;\r\n\r\n\t\t$this->permission\t= intval($_REQUEST['permission']);\r\n\t\t$this->enabled\t\t= intval($_REQUEST['enabled']);\r\n\t\t$this->format  \t\t= $_REQUEST['format'];\r\n\t\t$this->image\t\t= intval($_REQUEST['image']);\r\n\t\t$this->content \t\t= $_REQUEST['content'];\r\n\t\t$this->entries\t\t= intval($_REQUEST['entries']);\r\n\r\n\t\r\n\t\t// language strings and options\r\n\t\t$this->dictionary = array();\r\n\t\t$this->paths = array();\r\n\t\t$fields = array('title', 'description');\r\n\t\t\r\n\t\tforeach($_REQUEST as $key => $value)\r\n\t\t{\r\n\t\t\tif(empty($value))\r\n            {\r\n                continue;\r\n            }\r\n\t\t\t\r\n\t\t\tforeach($fields as $field)\r\n\t\t\t{\r\n\t\t\t\tif(substr($key, 0, strlen($field.'-'))==$field.'-')\r\n                {\r\n                    $this->dictionary[substr($key, strlen($field.'-'))][$field] = $purifier->purify($value);\r\n                }\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(substr($key, 0, strlen('path-'))=='path-')\r\n            {\r\n                $this->paths[substr($key, strlen('path-'))] = $purifier->purify($value);\r\n            }\r\n\t\t}\t\r\n\t\t\r\n\t\t$this->categories \t= '';\r\n\t\tif($_REQUEST['categories']!='true')\r\n        {\r\n            $this->categories\t= explode(',', $_REQUEST['categories']);\r\n        }\r\n\t}\r\n\r\n\tpublic function save()\r\n\t{\r\n\t\tif(!empty($this->id))\r\n        {\r\n            return $this->update();\r\n        }\r\n\t\telse\r\n        {\r\n            return $this->insert();\r\n        }\r\n\t}\r\n\t\r\n\tpublic function delete()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\t$affected_rows = 0;\r\n\r\n\t\t// remove all old entries\r\n\t\tif(!empty($this->id))\r\n        {\r\n            $DB->execute('\r\n\t\t\t\tDELETE FROM nv_feeds\r\n\t\t\t\t\t  WHERE id = ' . intval($this->id) . ' AND \r\n\t\t\t\t\t        website = ' . $this->website\r\n            );\r\n\r\n            $affected_rows = $DB->get_affected_rows();\r\n\r\n            // remove dictionary elements\r\n            webdictionary::save_element_strings('feed', $this->id, array());\r\n\r\n            // remove path elements\r\n            path::saveElementPaths('feed', $this->id, array());\r\n\r\n            if(method_exists($events, 'trigger'))\r\n            {\r\n                $events->trigger(\r\n                    'feed',\r\n                    'delete',\r\n                    array(\r\n                        'feed' => $this\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\r\n\t\treturn $affected_rows;\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\tglobal $events;\r\n\t\t\r\n\t\t$ok = $DB->execute(' \r\n \t\t\tINSERT INTO nv_feeds\r\n\t\t\t\t(id, website, categories, format, image, entries, content, views, permission, enabled)\r\n\t\t\tVALUES \r\n\t\t\t\t( 0, :website, :categories, :format, :image, :entries, :content, :views, :permission, :enabled)\r\n\t\t\t',\r\n\t\t\tarray(\r\n\t\t\t\t'website' => value_or_default($this->website, $website->id),\r\n\t\t\t\t'categories' => implode(',', $this->categories),\r\n\t\t\t\t'format' => $this->format,\r\n\t\t\t\t'image' => value_or_default($this->image, 0),\r\n\t\t\t\t'entries' => value_or_default($this->entries, 10),\r\n\t\t\t\t'content' => $this->content,\r\n\t\t\t\t'views' => value_or_default($this->views, 0),\r\n\t\t\t\t'permission' => value_or_default($this->permission, 0),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n\t\t);\r\n\r\n        if(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\r\n\t\t$this->id = $DB->get_last_id();\r\n\t\t\t\r\n\t\twebdictionary::save_element_strings('feed', $this->id, $this->dictionary);\r\n\t\tpath::saveElementPaths('feed', $this->id, $this->paths);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'feed',\r\n                'save',\r\n                array(\r\n                    'feed' => $this\r\n                )\r\n            );\r\n        }\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\tif(!is_array($this->categories))\r\n\t\t\t$this->categories = array();\r\n\t\t\t\r\n\t\t$ok = $DB->execute(' \r\n \t\t\tUPDATE nv_feeds\r\n\t\t\t  SET categories = :categories, format = :format, image = :image, entries = :entries, \r\n\t\t\t  \t  content = :content, views = :views, permission = :permission, enabled = :enabled\r\n\t\t\tWHERE id = :id\tAND\twebsite = :website',\r\n\t\t\tarray(\r\n\t\t\t\t'id' => $this->id,\r\n\t\t\t\t'website' => $this->website,\r\n\t\t\t\t'categories' => implode(',', $this->categories),\r\n\t\t\t\t'format' => $this->format,\r\n\t\t\t\t'image' => value_or_default($this->image, 0),\r\n\t\t\t\t'entries' => value_or_default($this->entries, 10),\r\n\t\t\t\t'content' => $this->content,\r\n\t\t\t\t'views' => value_or_default($this->views, 0),\r\n\t\t\t\t'permission' => value_or_default($this->permission, 0),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n\t\t);\r\n\t\t\t\t\t\t\t  \r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\twebdictionary::save_element_strings('feed', $this->id, $this->dictionary);\r\n\t\tpath::saveElementPaths('feed', $this->id, $this->paths);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'feed',\r\n                'save',\r\n                array(\r\n                    'feed' => $this\r\n                )\r\n            );\r\n        }\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function quicksearch($text)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\t\r\n\t\t$like = ' LIKE '.protect('%'.$text.'%');\r\n\t\t\r\n\t\t// we search for the IDs at the dictionary NOW (to avoid inefficient requests)\r\n\t\t\r\n\t\t$DB->query('SELECT DISTINCT (nvw.node_id)\r\n\t\t\t\t\t FROM nv_webdictionary nvw\r\n\t\t\t\t\t WHERE nvw.node_type = \"feed\" \r\n\t\t\t\t\t   AND nvw.website = '.$website->id.' \r\n\t\t\t\t\t   AND nvw.text '.$like, 'array');\r\n\t\t\t\t\t\t   \r\n\t\t$dict_ids = $DB->result(\"node_id\");\r\n\t\t\r\n\t\t// all columns to look for\t\r\n\t\t$cols[] = 'i.id' . $like;\r\n\r\n\t\tif(!empty($dict_ids))\r\n        {\r\n            $cols[] = 'i.id IN ('.implode(',', $dict_ids).')';\r\n        }\r\n\t\t\t\r\n\t\t$where = ' AND ( ';\t\r\n\t\t$where.= implode( ' OR ', $cols); \r\n\t\t$where .= ')';\r\n\t\t\r\n\t\treturn $where;\r\n\t}\t\r\n\t\r\n\tpublic static function generate_feed($id = NULL)\r\n\t{\r\n\t\tglobal $current;\r\n\t\tglobal $website;\r\n\t\tglobal $DB;\r\n\t\r\n\t\tif(empty($id))\r\n        {\r\n            $id = $current['id'];\r\n        }\r\n\r\n\t\t$item = new feed();\r\n\t\t$item->load($id);\r\n\t\t\r\n\t\t$permission = nvweb_object_enabled($item);\r\n\t\r\n\t\tif(!$permission)\r\n        {\r\n            return;\r\n        }\r\n\r\n        $feed = new UniversalFeedCreator();\r\n\t\t\r\n\t\t$feed->encoding = 'UTF-8';\r\n\t\t$feed->title = $item->dictionary[$current['lang']]['title'];\r\n\t\t$feed->description = $item->dictionary[$current['lang']]['description'];\r\n\t\t$feed->link = $website->absolute_path();\r\n\t\t$feed->syndicationURL = $website->absolute_path().$item->paths[$current['lang']];\r\n\r\n\t\tif(!empty($item->image))\r\n\t\t{\r\n\t\t\t$image = new FeedImage(); \r\n\t\t\t$image->url = $website->absolute_path().'/object?type=image&amp;id='.$item->image;\r\n\t\t\t$image->link = $website->absolute_path(); \r\n\t\t\t//$image->description = $feed->title;\r\n\t\t\t$image->title = $feed->title;\r\n\t\t\t$feed->image = $image;\r\n\t\t}\r\n\r\n\t\t// TODO: include products in feed content\r\n\t\tif(!empty($item->categories[0]))\r\n\t\t{\t\t\t\r\n\t\t\t$limit = intval($item->entries);\t\t \r\n\t\t\tif($limit <= 0)\r\n            {\r\n                $limit = 10;\r\n            }\r\n\r\n            $DB->query(' SELECT SQL_CALC_FOUND_ROWS i.id, i.permission, i.date_published, i.date_unpublish,\r\n                                i.date_to_display, COALESCE(NULLIF(i.date_to_display, 0), i.date_created) as pdate, d.text as title, i.position as position,\r\n                                i.galleries as galleries, i.template as template\r\n                          FROM nv_items i, nv_structure s, nv_webdictionary d\r\n                         WHERE i.category IN('.implode(\",\", $item->categories).')\r\n                           AND i.website = '.$website->id.'\r\n                           AND i.permission = 0\r\n                           AND (i.date_published = 0 OR i.date_published < '.core_time().')\r\n                           AND (i.date_unpublish = 0 OR i.date_unpublish > '.core_time().')\r\n                           AND s.id = i.category\r\n                           AND (s.date_published = 0 OR s.date_published < '.core_time().')\r\n                           AND (s.date_unpublish = 0 OR s.date_unpublish > '.core_time().')\r\n                           AND s.permission = 0\r\n                           AND (s.access = 0)\r\n                           AND (i.access = 0)\r\n                           AND d.website = i.website\r\n                           AND d.node_type = \"item\"\r\n                           AND d.subtype = \"title\"\r\n                           AND d.node_id = i.id\r\n                           AND d.lang = :lang\r\n                         ORDER BY pdate DESC\r\n                         LIMIT '.$limit.'\r\n                        OFFSET 0',\r\n                'object',\r\n                array(\r\n                    ':lang' => $current['lang']\r\n                )\r\n            );\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t$rs = $DB->result();\r\n\t\t\t\r\n\t\t\tfor($x=0; $x < count($rs); $x++)\r\n\t\t\t{\r\n\t\t\t\tif(nvweb_object_enabled($rs[$x]))\r\n\t\t\t\t{\r\n\t\t\t\t\t$texts = webdictionary::load_element_strings('item', $rs[$x]->id);\r\n\t\t\t\t\t$paths = path::loadElementPaths('item', $rs[$x]->id);\t\t\t\t\r\n\t\t\r\n\t\t\t\t\t$fitem = new FeedItem(); \r\n\t\t\t\t\t$fitem->title = $texts[$current['lang']]['title'];\r\n\r\n                    $encoded_path = implode('/', array_map('urlencode', explode('/', $paths[$current['lang']])));\r\n\t\t\t\t\t$fitem->link = $website->absolute_path().$encoded_path;\r\n\t\t\t\t\t\r\n\t\t\t\t\tswitch($item->content)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcase 'title':\r\n\t\t\t\t\t\t\t// no description\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'content':\r\n\t\t\t\t\t\t\t$html = $texts[$current['lang']]['section-main'];\r\n                            $html = nvweb_template_tweaks($html);\r\n                            $html = nvweb_template_convert_nv_paths($html);\r\n                            $fitem->description = $html;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tcase 'summary':\r\n\t\t\t\t\t\tdefault:\r\n                            $fitem->description = $texts[$current['lang']]['section-main'];\r\n                            $fitem->description = str_replace(\r\n                                array('</p>', '<br />', '<br/>', '<br>'),\r\n                                array('</p>'.\"\\n\", '<br />'.\"\\n\", '<br/>'.\"\\n\", '<br>'.\"\\n\"),\r\n                                $fitem->description\r\n                            );\r\n\t\t\t\t\t\t\t$fitem->description = core_string_cut($fitem->description, 500, '&hellip;');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t$fitem->date = $rs[$x]->date_to_display;\r\n\r\n                    // find an image to attach to the item\r\n                    // A) first enabled image in item gallery\r\n                    // B) first image on properties\r\n\r\n                    $image = '';\r\n\r\n                    if(!empty($rs[$x]->galleries))\r\n                    {\r\n                        $galleries = mb_unserialize($rs[$x]->galleries);\r\n                        $photo = @array_shift(array_keys($galleries[0]));\r\n                        if(!empty($photo))\r\n                        {\r\n                            $image = $website->absolute_path(false) . '/object?type=image&id='.$photo;\r\n                        }\r\n                    }\r\n\r\n                    if(empty($image))\r\n                    {\r\n                        // no image found on galleries, look for image properties\r\n                        $properties = property::load_properties(\"item\", $rs[$x]->template, \"item\", $rs[$x]->id);\r\n\r\n                        for($p=0; $p < count($properties); $p++)\r\n                        {\r\n                            if($properties[$p]->type=='image')\r\n                            {\r\n                                if(!empty($properties[$p]->value))\r\n                                {\r\n                                    $image = $properties[$p]->value;\r\n                                }\r\n                                else if(!empty($properties[$p]->dvalue))\r\n                                {\r\n                                    $image = $properties[$p]->dvalue;\r\n                                }\r\n\r\n                                if(is_array($image))\r\n                                {\r\n                                    $image = array_values($image);\r\n                                    $image = $image[0];\r\n                                }\r\n\r\n                                if(!empty($image))\r\n                                {\r\n                                    $image = $website->absolute_path(false) . '/object?type=image&id='.$image;\r\n                                }\r\n                            }\r\n\r\n                            // we only need the first image\r\n                            if(!empty($image))\r\n                            {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if(!empty($image))\r\n                    {\r\n                        $fitem->image = $image;\r\n\t                    // feedly will only display images of >450px --> http://blog.feedly.com/2015/07/31/10-ways-to-optimize-your-feed-for-feedly/\r\n\t\t\t\t\t\tif(strpos($item->format, 'RSS')!==false)\r\n                        {\r\n                            $fitem->description = '<img src=\"'.$image.'&width=640\"><br />'.$fitem->description;\r\n                        }\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//$item->author = $contents->rows[$x]->author_name;\r\n\t\t\t\t\t$feed->addItem($fitem); \t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// valid format strings are: RSS0.91, RSS1.0, RSS2.0, PIE0.1 (deprecated),\r\n\t\t\t// MBOX, OPML, ATOM, ATOM10, ATOM0.3, HTML, JS\r\n\t\t\t//echo $rss->saveFeed(\"RSS1.0\", \"news/feed.xml\");\r\n\t\t}\r\n\t\t\r\n\t\t$xml = $feed->createFeed($item->format);\r\n\r\n\t\tif($item->format==\"RSS2.0\")\r\n\t\t{\r\n\t\t\t// add extra tweaks to improve the feed\r\n\t\t\t$xml = str_replace('<rss ', '<rss xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:webfeeds=\"http://webfeeds.org/rss/1.0\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" ', $xml);\r\n\r\n\t\t\t// also available:\r\n\t\t\t// <webfeeds:cover image=\"http://yoursite.com/a-large-cover-image.png\" />\\n\r\n\t\t\t// <webfeeds:accentColor>00FF00</webfeeds:accentColor>\r\n\t\t\t$xml = str_replace('<channel>', '<channel>'.\"\\n\\t\\t\".'<webfeeds:related layout=\"card\" target=\"browser\" />', $xml);\r\n\t\t\t$xml = str_replace('<channel>', '<channel>'.\"\\n\\t\\t\".'<webfeeds:logo>'.file::file_url($item->image).'</webfeeds:logo>', $xml);\r\n\t\t\t$xml = str_replace('<channel>', '<channel>'.\"\\n\\t\\t\".'<webfeeds:icon>'.file::file_url($website->favicon).'</webfeeds:icon>', $xml);\r\n\t\t}\r\n\r\n\t\treturn $xml;\r\n\t}\t\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n        global $website;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_feeds WHERE website = '.intval($website->id), 'object');\r\n        $out = $DB->result();\r\n\r\n        if($type='json')\r\n        {\r\n            $out = json_encode($out);\r\n        }\r\n\r\n        return $out;\r\n    }\r\n\r\n}\r\n\r\n?>", "<?php\r\n\r\nclass menu\r\n{\r\n\tpublic $id;\r\n\tpublic $codename;\r\n\tpublic $icon;\r\n\tpublic $lid;\r\n\tpublic $notes;\r\n\tpublic $enabled;\r\n\t\r\n\tpublic $functions;\r\n  \t\r\n\tpublic function load($id)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tif($DB->query('SELECT * FROM nv_menus WHERE id = '.intval($id)))\r\n\t\t{\r\n\t\t\t$data = $DB->result();\r\n\t\t\t$this->load_from_resultset($data); // there will be as many entries as languages enabled\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\t\r\n\t\t$main = $rs[0];\r\n\t\t\r\n\t\t$this->id      \t\t= $main->id;\r\n\t\t$this->codename\t\t= $main->codename;\r\n\t\t$this->icon\t\t    = $main->icon;\r\n   \t\t$this->lid\t\t    = $main->lid;    \r\n   \t\t$this->notes\t    = $main->notes;    \r\n\t\t$this->enabled\t\t= $main->enabled;\r\n\t\t\r\n\t\t/*\r\n\t\t$DB->query('SELECT function_id \r\n\t\t\t\t\t  FROM nv_menu_items \r\n\t\t\t\t\t WHERE menu_id = '.$this->id.' ORDER BY position ASC');\r\n\t\t\t\t\t \r\n\t\t$this->functions = $DB->result('function_id');\r\n\t\t*/\r\n\t\t$this->functions\t= json_decode($main->functions);\r\n\t\tif(empty($this->functions))\r\n        {\r\n            $this->functions = array();\r\n        }\r\n\t}\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n\t\t$this->codename\t\t= $_REQUEST['codename'];\r\n\t\t$this->icon\t\t    = $_REQUEST['icon'];\r\n   \t\t$this->lid\t\t    = $_REQUEST['lid']; \r\n   \t\t$this->notes\t    = $_REQUEST['notes']; \t\t   \r\n\t\t$this->enabled\t\t= ($_REQUEST['enabled']=='1'? '1' : '0');\r\n\t\t\r\n\t\t// load associated functions\r\n\t\t$functions = explode('#', $_REQUEST['menu-functions']);\r\n\t\t$this->functions = array();\r\n\t\tforeach($functions as $function)\r\n\t\t{\r\n\t\t\tif(!empty($function))\r\n            {\r\n                $this->functions[] = $function;\r\n            }\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function save()\r\n\t{\r\n\t\tif(!empty($this->id))\r\n        {\r\n            return $this->update();\r\n        }\r\n\t\telse\r\n        {\r\n            return $this->insert();\r\n        }\r\n\t}\r\n\t\r\n\tpublic function delete()\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\t// remove all old entries\r\n\t\tif(!empty($this->id))\r\n\t\t{\r\n\t\t\t$DB->execute(' \r\n \t\t\t\tDELETE FROM nv_menus\r\n\t\t\t\t\tWHERE id = '.intval($this->id).'\r\n              \t\tLIMIT 1 '\r\n\t\t\t);\r\n\t\t}\r\n\t\t\r\n\t\treturn $DB->get_affected_rows();\t\t\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n    \r\n\t\t$ok = $DB->execute(' \r\n \t\t\tINSERT INTO nv_menus\r\n\t\t\t\t(id, codename, icon, lid, notes, functions, enabled)\r\n\t\t\tVALUES \r\n\t\t\t\t( 0, :codename, :icon, :lid, :notes, :functions, :enabled)',\r\n\t\t\tarray(\r\n\t\t\t\t'codename' => value_or_default($this->codename, \"\"),\r\n\t\t\t\t'icon' => value_or_default($this->icon, \"\"),\r\n\t\t\t\t'lid' => value_or_default($this->lid, 0),\r\n\t\t\t\t'notes' => value_or_default($this->notes, \"\"),\r\n\t\t\t\t'functions' => json_encode($this->functions),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n\t\t);\r\n\t\t\t\t\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\t$this->id = $DB->get_last_id();\r\n\t\t\r\n\t\treturn true;\r\n\t}\t\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t    \r\n\t\t$ok = $DB->execute(' \r\n \t\t\tUPDATE nv_menus\r\n\t\t\t   SET codename = :codename, icon = :icon, lid = :lid, notes = :notes, \r\n\t\t\t   \t   functions = :functions, enabled = :enabled\r\n            WHERE id = :id',\r\n\t\t\tarray(\r\n\t\t\t\t'id' => $this->id,\r\n\t\t\t\t'codename' => value_or_default($this->codename, \"\"),\r\n\t\t\t\t'icon' => value_or_default($this->icon, \"\"),\r\n\t\t\t\t'lid' => value_or_default($this->lid, 0),\r\n\t\t\t\t'notes' => value_or_default($this->notes, \"\"),\r\n\t\t\t\t'functions' => json_encode($this->functions),\r\n\t\t\t\t'enabled' => value_or_default($this->enabled, 0)\r\n\t\t\t)\r\n        );\r\n\t\t\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function quicksearch($text)\r\n\t{\r\n\t\t$like = ' LIKE '.protect('%'.$text.'%');\r\n\t\t\r\n\t\t$cols[] = 'id' . $like;\r\n\t\t$cols[] = 'codename' . $like;\r\n\t\t$cols[] = 'icon' . $like;\t\t\r\n\t\t$cols[] = 'notes' . $like;\r\n\t\r\n\t\t$where = ' AND ( ';\t\r\n\t\t$where.= implode( ' OR ', $cols); \r\n\t\t$where .= ')';\r\n\t\t\r\n\t\treturn $where;\r\n\t}\t\r\n\t\r\n\tpublic static function load_all_menus()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\t\r\n\t\t$DB->query('SELECT * FROM nv_menus');\r\n\t\t\r\n\t\treturn $DB->result();\r\n\t}\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_menus', 'object');\r\n        $out = $DB->result();\r\n\r\n        if($type='json')\r\n        {\r\n            $out = json_encode($out);\r\n        }\r\n\r\n        return $out;\r\n    }\r\n}\r\n\r\n?>", "<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/menus/menu.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/functions/nv_function.class.php');\r\n\r\nfunction run()\r\n{\r\n\tglobal $user;\t\r\n\tglobal $layout;\r\n\tglobal $DB;\r\n\t\r\n\t$out = '';\r\n\t$item = new menu();\r\n\t\t\t\r\n\tswitch($_REQUEST['act'])\r\n\t{\r\n        case 'json':\r\n\t\tcase 1:\t// json data retrieval & operations\r\n\t\t\tswitch($_REQUEST['oper'])\r\n\t\t\t{\r\n\t\t\t\tcase 'del':\t// remove rows\r\n\t\t\t\t\t$ids = $_REQUEST['ids'];\r\n\t\t\t\t\tforeach($ids as $id)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$item->load($id);\r\n\t\t\t\t\t\t$item->delete();\r\n\t\t\t\t\t}\r\n\t\t\t\t\techo json_encode(true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tdefault: // list or search\t\r\n\t\t\t\t\t$page = intval($_REQUEST['page']);\r\n\t\t\t\t\t$max\t= intval($_REQUEST['rows']);\r\n\t\t\t\t\t$offset = ($page - 1) * $max;\r\n\t\t\t\t\t$where = \" 1=1 \";\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif($_REQUEST['_search']=='true' || isset($_REQUEST['quicksearch']))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(isset($_REQUEST['quicksearch']))\r\n                        {\r\n                            $where .= $item->quicksearch($_REQUEST['quicksearch']);\r\n                        }\r\n\t\t\t\t\t\telse if(isset($_REQUEST['filters']))\r\n                        {\r\n                            $where .= navitable::jqgridsearch($_REQUEST['filters']);\r\n                        }\r\n\t\t\t\t\t\telse\t// single search\r\n                        {\r\n                            $where .= ' AND '.navitable::jqgridcompare($_REQUEST['searchField'], $_REQUEST['searchOper'], $_REQUEST['searchString']);\r\n                        }\r\n\t\t\t\t\t}\r\n\r\n                    // filter orderby vars\r\n                    if( !in_array($_REQUEST['sord'], array('', 'desc', 'DESC', 'asc', 'ASC')) ||\r\n                        !in_array($_REQUEST['sidx'], array('id', 'codename', 'icon', 'lid', 'enabled'))\r\n                    )\r\n                    {\r\n                        return false;\r\n                    }\r\n                    $orderby = $_REQUEST['sidx'].' '.$_REQUEST['sord'];\r\n\t\t\t\t\r\n\t\t\t\t\t$DB->queryLimit(\r\n\t\t\t\t\t    'id,lid,codename,icon,enabled',\r\n                        'nv_menus',\r\n                        $where,\r\n                        $orderby,\r\n                        $offset,\r\n                        $max\r\n                    );\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t$dataset = $DB->result();\r\n\t\t\t\t\t$total = $DB->foundRows();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//echo $DB->get_last_error();\r\n\t\t\t\t\t\r\n\t\t\t\t\t$out = array();\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tfor($i=0; $i < count($dataset); $i++)\r\n\t\t\t\t\t{\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t$out[$i] = array(\r\n\t\t\t\t\t\t\t0\t=> $dataset[$i]['id'],\r\n\t\t\t\t\t\t\t1\t=> $dataset[$i]['codename'],\r\n\t\t\t\t\t\t\t2\t=> '<img src=\"'.NAVIGATE_URL.'/'.$dataset[$i]['icon'].'\" />',\t\t\r\n\t\t\t\t\t\t\t3 \t=> '['.$dataset[$i]['lid'].'] '.t($dataset[$i]['lid'], $dataset[$i]['lid']),\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t4\t=> (($dataset[$i]['enabled']==1)? '<img src=\"img/icons/silk/accept.png\" />' : '<img src=\"img/icons/silk/cancel.png\" />')\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tnavitable::jqgridJson($out, $page, $offset, $max, $total);\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsession_write_close();\r\n\t\t\texit;\r\n\t\t\tbreak;\r\n\r\n        case 'edit':\r\n\t\tcase 2: // edit/new form\t\t\r\n\t\t\tif(!empty($_REQUEST['id']))\r\n\t\t\t{\r\n\t\t\t\t$item->load(intval($_REQUEST['id']));\t\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(isset($_REQUEST['form-sent']))\r\n\t\t\t{\r\n\t\t\t\t$item->load_from_post();\r\n\t\t\t\ttry\r\n\t\t\t\t{\r\n                    naviforms::check_csrf_token();\r\n\r\n\t\t\t\t\t$item->save();\r\n                    $layout->navigate_notification(t(53, \"Data saved successfully.\"), false, false, 'fa fa-check');\r\n\t\t\t\t}\r\n\t\t\t\tcatch(Exception $e)\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification($e->getMessage(), true, true);\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t$out = functions_form($item);\r\n\t\t\tbreak;\r\n\r\n        case 'delete':\r\n\t\tcase 4: // remove \r\n\t\t\tif(!empty($_REQUEST['id']))\r\n\t\t\t{\r\n\t\t\t\t$item->load(intval($_REQUEST['id']));\t\r\n\t\t\t\tif($item->delete() > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification(t(55, 'Item removed successfully.'), false);\r\n\t\t\t\t\t$out = functions_list();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t$layout->navigate_notification(t(56, 'Unexpected error.'), false);\r\n\t\t\t\t\t$out = functions_form($item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n        case 'list':\r\n\t\tcase 0: // list / search result\r\n\t\tdefault:\t\t\t\r\n\t\t\t$out = functions_list();\r\n\t\t\tbreak;\r\n\t}\r\n\t\r\n\treturn $out;\r\n}\r\n\r\nfunction functions_list()\r\n{\r\n\t$navibars = new navibars();\r\n\t$navitable = new navitable(\"functions_list\");\r\n\t\r\n\t$navibars->title(t(244, 'Menus'));\r\n\r\n\t$navibars->add_actions(\r\n\t    array(\r\n\t        '<a href=\"?fid='.$_REQUEST['fid'].'&act=2\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/add.png\"> '.t(38, 'Create').'</a>',\r\n\t\t\t'<a href=\"?fid='.$_REQUEST['fid'].'&act=0\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/application_view_list.png\"> '.t(39, 'List').'</a>',\r\n\t\t\t'search_form'\r\n        )\r\n    );\r\n\t\r\n\tif($_REQUEST['quicksearch']=='true')\r\n    {\r\n        $navitable->setInitialURL(\"?fid=\".$_REQUEST['fid'].'&act=json&_search=true&quicksearch='.$_REQUEST['navigate-quicksearch']);\r\n    }\r\n\t\r\n\t$navitable->setURL('?fid='.$_REQUEST['fid'].'&act=json');\r\n\t$navitable->sortBy('id');\r\n\t$navitable->setDataIndex('id');\r\n\t$navitable->setEditUrl('id', '?fid='.$_REQUEST['fid'].'&act=edit&id=');\r\n\t\r\n\t$navitable->addCol(\"ID\", 'id', \"80\", \"true\", \"left\");\t\r\n\t$navitable->addCol(t(237, 'Code'), 'codename', \"100\", \"true\", \"left\");\t\t\r\n\t$navitable->addCol(t(242, 'Icon'), 'icon', \"50\", \"true\", \"center\");\t\t\r\n\t$navitable->addCol(t(67, 'Title'), 'lid', \"200\", \"true\", \"left\");\t\r\n\t$navitable->addCol(t(65, 'Enabled'), 'enabled', \"80\", \"true\", \"center\");\t\t\r\n\t\r\n\t$navibars->add_content($navitable->generate());\t\r\n\t\r\n\treturn $navibars->generate();\r\n\t\r\n}\r\n\r\nfunction functions_form($item)\r\n{\r\n\tglobal $user;\r\n\tglobal $DB;\r\n\tglobal $website;\r\n\tglobal $layout;\r\n\t\r\n\t$navibars = new navibars();\r\n\t$naviforms = new naviforms();\r\n\t\r\n\tif(empty($item->id))\r\n    {\r\n        $navibars->title(t(244, 'Menus').' / '.t(38, 'Create'));\r\n    }\r\n\telse\r\n    {\r\n        $navibars->title(t(244, 'Menus').' / '.t(170, 'Edit').' ['.$item->id.']');\r\n    }\r\n\r\n\tif(empty($item->id))\r\n\t{\r\n\t\t$navibars->add_actions(\r\n\t\t    array(\r\n\t\t        '<a href=\"#\" onclick=\"navigate_tabform_submit(1);\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/accept.png\"> '.t(34, 'Save').'</a>'\r\n            )\r\n        );\r\n\t}\r\n\telse\r\n\t{\r\n\t\t$navibars->add_actions(\r\n\t\t    array(\r\n\t\t        '<a href=\"#\" onclick=\"navigate_tabform_submit(1);\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/accept.png\"> '.t(34, 'Save').'</a>',\r\n\t\t\t\t'<a href=\"#\" onclick=\"navigate_delete_dialog();\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/cancel.png\"> '.t(35, 'Delete').'</a>'\r\n            )\r\n        );\r\n\r\n        $layout->add_script('\r\n            function navigate_delete_dialog()\r\n            {\r\n                navigate_confirmation_dialog(\r\n                    function() { window.location.href = \"?fid=menus&act=delete&id='.$item->id.'\"; }, \r\n                    null, null, \"'.t(35, 'Delete').'\"\r\n                );\r\n            }\r\n        ');\r\n\t}\r\n\t\r\n\t$navibars->add_actions(\r\n\t    array(\r\n\t        (!empty($item->id)? '<a href=\"?fid=menus&act=2\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/add.png\"> '.t(38, 'Create').'</a>' : ''),\r\n\t\t\t'<a href=\"?fid=menus&act=0\"><img height=\"16\" align=\"absmiddle\" width=\"16\" src=\"img/icons/silk/application_view_list.png\"> '.t(39, 'List').'</a>',\r\n\t\t\t'search_form'\r\n        )\r\n    );\r\n\r\n\t$navibars->form();\r\n\r\n\t$navibars->add_tab(t(43, \"Main\"));\r\n\t\r\n\t$navibars->add_tab_content($naviforms->hidden('form-sent', 'true'));\r\n\t$navibars->add_tab_content($naviforms->hidden('id', $item->id));\r\n    $navibars->add_tab_content($naviforms->csrf_token());\r\n\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>ID</label>',\r\n\t\t\t'<span>'.(!empty($item->id)? $item->id : t(52, '(new)')).'</span>'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(237, 'Code').'</label>',\r\n\t\t\t$naviforms->textfield('codename', $item->codename),\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(242, 'Icon').'</label>',\r\n\t\t\t$naviforms->textfield('icon', $item->icon),\r\n\t\t\t'<img src=\"'.NAVIGATE_URL.'/'.$item->icon.'\" align=\"absmiddle\" />'\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>#'.t(67, 'Title').' (lid)</label>',\r\n\t\t\t$naviforms->textfield('lid', $item->lid),\r\n\t\t\t(empty($item->lid)? '' : '<em>'.$item->lid.': <strong>'.t($item->lid, $item->lid).'</strong></em>')\r\n        )\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(245, 'Notes').'</label>',\r\n\t\t\t$naviforms->textarea('notes', $item->notes),\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(65, 'Enabled').'</label>',\r\n\t\t\t$naviforms->checkbox('enabled', $item->enabled),\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t$navibars->add_tab(t(200, \"Options\"));\r\n\t\r\n\t$functions = nv_function::load_all_functions();\r\n\t$func_cats = array_unique($DB->result('category'));\r\n\tsort($func_cats);\r\n\t\r\n\t$sortable_assigned = array();\r\n\t$sortable_unassigned = array();\r\n\t\r\n\t$sortable_assigned[] = '<ul id=\"sortable_assigned\" class=\"connectedSortable\">';\r\n\t$sortable_unassigned[] = '<ul id=\"sortable_unassigned\" class=\"connectedSortable\">';\t\r\n\t\r\n\tif(empty($item->functions))\r\n    {\r\n        $item->functions = array();\r\n    }\r\n\t\r\n\t// already included menus on the profile\r\n\tforeach($item->functions as $f)\r\n\t{\r\n\t\tforeach($functions as $function)\r\n\t\t{\t\t\r\n\t\t\tif($function->id == $f)\r\n\t\t\t{\r\n\t\t\t\tif($function->enabled=='1')\r\n                {\r\n                    $sortable_assigned[] = '<li class=\"ui-state-highlight\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n                }\r\n\t\t\t\telse\r\n                {\r\n                    $sortable_assigned[] = '<li class=\"ui-state-highlight ui-state-disabled\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n                }\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t// the other menus not included on the profile\r\n\tforeach($functions as $function)\r\n\t{\r\n\t\tif(!in_array($function->id, $item->functions))\r\n\t\t{\r\n\t\t\tif($function->enabled=='1')\r\n            {\r\n                $sortable_unassigned[] = '<li class=\"ui-state-default\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n            }\r\n\t\t\telse\r\n            {\r\n                $sortable_unassigned[] = '<li class=\"ui-state-default ui-state-disabled\" value=\"'.$function->id.'\" category=\"'.$function->category.'\"><img src=\"'.NAVIGATE_URL.'/'.$function->icon.'\" align=\"absmiddle\" /> '.t($function->lid, $function->lid).'</li>';\r\n            }\r\n\t\t}\r\n\t}\r\n\t\r\n\t$sortable_assigned[] = '</ul>';\r\n\t$sortable_unassigned[] = '</ul>';\r\n\r\n\t//$navibars->add_tab_content('<pre>'.print_r($item->menus, true).'</pre>'); // margin-top: 12px; margin-left: 5px; float: left;\r\n\t// position: absolute; margin-left: 483px; margin-top: -9px; width: 291px; height: 20px;\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(78, 'Category').'</label>',\r\n\t\t\t$naviforms->selectfield('menus_functions_category_select', $func_cats, $func_cats, 'web', \"navigate_menus_change_functions_category();\", false)\r\n        )\r\n    );\r\n\t\r\n\t$navibars->add_tab_content(\r\n\t    $naviforms->hidden(\"menu-functions\", implode('#', $item->functions))\r\n    );\r\n\r\n\t$navibars->add_tab_content_row(\r\n\t    array(\r\n\t        '<label>'.t(240, 'Functions').'</label>',\r\n\t\t\timplode(\"\\n\", $sortable_assigned),\r\n\t\t\timplode(\"\\n\", $sortable_unassigned)\r\n        )\r\n    );\r\n\t\t\t\t\t\t\t\t\t\r\n\t$layout->add_script('\r\n\t\t$(\"#menus_functions_category_select\").css({ \"width\": \"300px\", \"margin-left\": \"303px\" });\r\n\t\t\r\n\t\t$(\"#sortable_assigned\").sortable({\r\n\t\t\t\tconnectWith: \".connectedSortable\",\r\n\t\t\t\treceive: function(event, ui)\r\n\t\t\t\t{\r\n\t\t\t\t\t$(ui.item).addClass(\"ui-state-highlight\");\r\n\t\t\t\t\t$(ui.item).removeClass(\"ui-state-default\");\r\n\t\t\t\t},\r\n\t\t\t\tupdate: function()\r\n\t\t\t\t{\r\n\t\t\t\t\t$(\"#menu-functions\").val(\"\");\r\n\t\t\t\t\t$(\"#sortable_assigned li\").each(function()\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$(\"#menu-functions\").val($(\"#menu-functions\").val() + $(this).attr(\"value\") + \"#\");\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}).disableSelection();\r\n\t\t\t\r\n\t\t$(\"#sortable_unassigned\").sortable({\r\n\t\t\t\tconnectWith: \".connectedSortable\",\r\n\t\t\t\treceive: function(event, ui)\r\n\t\t\t\t{\r\n\t\t\t\t\t$(ui.item).addClass(\"ui-state-default\");\r\n\t\t\t\t\t$(ui.item).removeClass(\"ui-state-highlight\");\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}).disableSelection();\t\t\t\r\n\t\t\r\n\t\tfunction navigate_menus_change_functions_category()\r\n\t\t{\t\r\n\t\t\tvar cat = $(\"#menus_functions_category_select\").val();\r\n\t\t\t$(\"#sortable_unassigned li\").each(function()\r\n\t\t\t{\r\n\t\t\t\tif($(this).attr(\"category\")==cat)\t$(this).show();\r\n\t\t\t\telse\t\t\t\t\t\t\t\t$(this).hide();\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\tnavigate_menus_change_functions_category();\r\n\t');\r\n\r\n\treturn $navibars->generate();\r\n}\r\n\r\n?>", "<?php\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/webdictionary/webdictionary.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/paths/path.class.php');\r\nrequire_once(NAVIGATE_PATH.'/lib/packages/webuser_votes/webuser_vote.class.php');\r\n\r\nclass structure\r\n{\r\n\tpublic $id;\r\n\tpublic $website;\r\n\tpublic $parent;\r\n\tpublic $position;\r\n\tpublic $access; // 0 => everyone, 1 => logged in, 2 => not logged in, 3 => selected webuser groups\r\n    public $groups; // webuser groups\r\n\tpublic $permission;\r\n\tpublic $icon;\r\n\tpublic $metatags;\r\n\tpublic $template;\r\n\tpublic $date_published;\r\n\tpublic $date_unpublish;\r\n\tpublic $views;\r\n\tpublic $votes;\r\n\tpublic $score;\t\r\n\tpublic $visible; // in menus\r\n\t\r\n\tpublic $dictionary;\r\n\tpublic $paths;\r\n\t\r\n\tpublic function load($id)\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\tif($DB->query('SELECT * FROM nv_structure WHERE id = '.intval($id)))\r\n\t\t{\r\n\t\t\t$data = $DB->result();\r\n\t\t\t$this->load_from_resultset($data); // there will be as many entries as languages enabled\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function reload()\r\n\t{\r\n\t\t$item = new structure();\r\n\t\t$item->load($this->id);\r\n\t\treturn $item;\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\t$main = $rs[0];\r\n\t\t\r\n\t\t$this->id\t\t\t= $main->id;\r\n\t\t$this->website\t\t= $main->website;\r\n\t\t$this->parent  \t\t= $main->parent;\r\n\t\t$this->position\t\t= $main->position;\r\n\t\t$this->template  \t= $main->template;\r\n\t\t$this->access\t\t= $main->access;\t\t\t\r\n\t\t$this->permission  \t= $main->permission;\r\n\t\t$this->icon\t\t\t= $main->icon;\r\n\t\t$this->metatags  \t= $main->metatags;\r\n\t\t$this->date_published\t= (empty($main->date_published)? '' : $main->date_published);\r\n\t\t$this->date_unpublish\t= (empty($main->date_unpublish)? '' : $main->date_unpublish);\r\n\t\t\r\n\t\t$this->votes\t\t= $main->votes;\r\n\t\t$this->score\t\t= $main->score;\r\n\t\t$this->views\t\t= $main->views;\t\t\t\r\n\r\n\t\t$this->dictionary\t= webdictionary::load_element_strings('structure', $this->id);\r\n\t\t$this->paths\t\t= path::loadElementPaths('structure', $this->id, $this->website);\r\n\t\t$this->visible\t\t= $main->visible;\r\n\r\n        $this->groups       = $main->groups;\r\n        if(!is_array($this->groups))\r\n        {\r\n            // to get the array of groups first we remove the \"g\" character\r\n            $groups = str_replace('g', '', $this->groups);\r\n            $this->groups = explode(',', $groups);\r\n        }\r\n\r\n        if(!is_array($this->groups))\r\n        {\r\n            $this->groups = array($this->groups);\r\n        }\r\n    }\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n\t    global $purifier;\r\n\r\n\t\tif(intval($_REQUEST['parent'])!=$this->id)\t// protection against selecting this same category as parent of itself\r\n        {\r\n            $this->parent \t\t= intval($_REQUEST['parent']);\r\n        }\r\n\t\t\t\r\n\t\t$this->template \t= $_REQUEST['template'];\r\n\t\t$this->access\t\t= intval($_REQUEST['access']);\r\n\r\n        $this->groups\t    = $_REQUEST['groups'];\r\n        if($this->access < 3)\r\n        {\r\n            $this->groups = array();\r\n        }\r\n\r\n\t\t$this->permission\t= intval($_REQUEST['permission']);\t\t\r\n\t\t$this->visible\t\t= intval($_REQUEST['visible']);\t\t\r\n\t\t\r\n\t\t$this->date_published\t= (empty($_REQUEST['date_published'])? '' : core_date2ts($_REQUEST['date_published']));\t\r\n\t\t$this->date_unpublish\t= (empty($_REQUEST['date_unpublish'])? '' : core_date2ts($_REQUEST['date_unpublish']));\t\r\n\t\t\r\n\t\t// language strings and options\r\n\t\t$this->dictionary = array();\r\n\t\t$this->paths = array();\r\n\r\n\t\t$fields = array('title', 'action-type', 'action-jump-item', 'action-jump-branch', 'action-new-window', 'action-masked-redirect'); //, 'path', 'visible');\r\n\t\tforeach($_REQUEST as $key => $value)\r\n\t\t{\r\n\t\t\tif(empty($value))\r\n            {\r\n                continue;\r\n            }\r\n\t\t\t\r\n\t\t\tforeach($fields as $field)\r\n\t\t\t{\r\n\t\t\t\tif(substr($key, 0, strlen($field.'-'))==$field.'-')\r\n                {\r\n                    $this->dictionary[substr($key, strlen($field.'-'))][$field] = $purifier->purify($value);\r\n                }\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif(substr($key, 0, strlen('path-'))=='path-')\r\n            {\r\n                $this->paths[substr($key, strlen('path-'))] = $purifier->purify($value);\r\n            }\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tpublic function save()\r\n\t{\r\n\t\tif(!empty($this->id))\r\n        {\r\n            return $this->update();\r\n        }\r\n\t\telse\r\n        {\r\n            return $this->insert();\r\n        }\r\n\t}\r\n\t\r\n\tpublic function delete()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\t$affected_rows = 0;\r\n\r\n\t\tif(!empty($this->id))\r\n\t\t{\r\n\t\t\t// remove dictionary entries\r\n\t\t\twebdictionary::save_element_strings('structure', $this->id, array());\r\n\r\n            // remove paths\r\n\t\t\tpath::saveElementPaths('structure', $this->id, array(), $this->website);\r\n\r\n            // remove all votes assigned\r\n\t\t\twebuser_vote::remove_object_votes('structure', $this->id);\r\n\r\n            // remove the properties\r\n            property::remove_properties('structure', $this->id, $this->website);\r\n\r\n            // remove the structure entry\r\n\t\t\t$DB->execute('\r\n\t\t\t\tDELETE FROM nv_structure\r\n\t\t\t\t\tWHERE id = '.intval($this->id).'\r\n\t\t\t\t\t  AND website = '.$this->website.'\r\n\t\t\t\t\tLIMIT 1'\r\n\t\t\t);\r\n\r\n            $affected_rows = $DB->get_affected_rows();\r\n\r\n            if(method_exists($events, 'trigger'))\r\n            {\r\n                $events->trigger(\r\n                    'structure',\r\n                    'delete',\r\n                    array(\r\n                        'structure' => $this\r\n                    )\r\n                );\r\n            }\r\n\r\n        }\r\n\t\treturn $affected_rows;\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\tglobal $events;\r\n\r\n\t\tif(empty($this->website))\r\n        {\r\n            $this->website = $website->id;\r\n        }\r\n\r\n        if(empty($this->position))\r\n        {\r\n            // no position given, so find the first position free in the same parent (after all existing children)\r\n            $DB->query('\r\n\t\t\t\tSELECT MAX(position) as max_position\r\n                  FROM nv_structure\r\n                 WHERE parent = '.intval($this->parent).'\r\n                   AND website = '.intval($this->website)\r\n            );\r\n\r\n            $max = $DB->result('max_position');\r\n            $this->position = intval($max[0]) + 1;\r\n        }\r\n\r\n        $groups = '';\r\n        if(is_array($this->groups))\r\n        {\r\n            $this->groups = array_unique($this->groups); // remove duplicates\r\n            $this->groups = array_filter($this->groups); // remove empty\r\n            if(!empty($this->groups))\r\n            {\r\n                $groups = 'g'.implode(',g', $this->groups);\r\n            }\r\n        }\r\n\r\n        if($groups == 'g')\r\n        {\r\n            $groups = '';\r\n        }\r\n\r\n        $ok = $DB->execute('\r\n\t\t\tINSERT INTO nv_structure\r\n\t\t\t\t(\tid, website, parent, position, access, groups, permission,\r\n\t\t\t\t\ticon, metatags, template, date_published, date_unpublish,\r\n\t\t\t\t\tvisible, views, votes, score\r\n\t\t\t\t)\r\n\t\t\t\tVALUES\r\n\t\t\t\t(\t0, :website, :parent, :position, :access, :groups, :permission,\r\n\t\t\t\t\t:icon, :metatags, :template, :date_published, :date_unpublish,\r\n\t\t\t\t\t:visible, :views, :votes, :score\r\n\t\t\t\t)\r\n\t\t\t',\r\n            array(\r\n\t            \":website\" => value_or_default($this->website, $website->id),\r\n\t            \":parent\" => value_or_default($this->parent, 0),\r\n\t            \":position\" => value_or_default($this->position, 0),\r\n\t            \":access\" => value_or_default($this->access, 0),\r\n\t            \":groups\" => $groups,\r\n\t            \":permission\" => value_or_default($this->permission, 0),\r\n\t\t\t\t\":icon\" => value_or_default($this->icon, 0),\r\n\t\t\t\t\":metatags\" => value_or_default($this->metatags, ''),\r\n\t\t\t\t\":template\" =>  value_or_default($this->template, ''),\r\n\t\t\t\t\":date_published\" => value_or_default($this->date_published, 0),\r\n\t\t\t\t\":date_unpublish\" => value_or_default($this->date_unpublish, 0),\r\n\t\t\t\t\":visible\" => value_or_default($this->visible, 0),\r\n\t\t\t\t\":views\" => 0,\r\n\t\t\t\t\":votes\" => 0,\r\n\t\t\t\t\":score\" => 0\r\n            )\r\n        );\r\n\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\t$this->id = $DB->get_last_id();\r\n\r\n\t\twebdictionary::save_element_strings('structure', $this->id, $this->dictionary, $this->website);\r\n   \t\tpath::saveElementPaths('structure', $this->id, $this->paths, $this->website);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'structure',\r\n                'save',\r\n                array(\r\n                    'structure' => $this\r\n                )\r\n            );\r\n        }\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n        $groups = '';\r\n        if(is_array($this->groups))\r\n        {\r\n            $this->groups = array_unique($this->groups); // remove duplicates\r\n            $this->groups = array_filter($this->groups); // remove empty\r\n            if(!empty($this->groups))\r\n            {\r\n                $groups = 'g'.implode(',g', $this->groups);\r\n            }\r\n        }\r\n\r\n        if($groups == 'g')\r\n        {\r\n            $groups = '';\r\n        }\r\n\r\n\t\t$ok = $DB->execute('\r\n \t\t\tUPDATE nv_structure\r\n\t\t\t   SET  parent = :parent, position = :position, access = :access, groups = :groups,\r\n\t\t\t   \t\tpermission = :permission, icon = :icon, metatags = :metatags,\r\n\t\t\t\t\tdate_published = :date_published, date_unpublish = :date_unpublish,\r\n\t\t\t\t\ttemplate = :template, visible = :visible, views = :views, votes = :votes, score = :score\r\n\t\t\t WHERE id = :id\r\n\t\t\t   AND website = :website\r\n\t\t   ',\r\n\t\t\tarray(\r\n\t\t\t\t\":id\" => $this->id,\r\n\t\t\t\t\":website\" => $this->website,\r\n\t            \":parent\" => value_or_default($this->parent, 0),\r\n\t            \":position\" => $this->position,\r\n\t            \":access\" => $this->access,\r\n\t            \":groups\" => $groups,\r\n\t            \":permission\" => $this->permission,\r\n\t\t\t\t\":icon\" => value_or_default($this->icon, ''),\r\n\t\t\t\t\":metatags\" => value_or_default($this->metatags, ''),\r\n\t\t\t\t\":template\" => $this->template,\r\n\t\t\t\t\":date_published\" => value_or_default($this->date_published, 0),\r\n\t\t\t\t\":date_unpublish\" => value_or_default($this->date_unpublish, 0),\r\n\t\t\t\t\":visible\" => $this->visible,\r\n\t\t\t\t\":views\" => $this->views,\r\n\t\t\t\t\":votes\" => $this->votes,\r\n\t\t\t\t\":score\" => $this->score\r\n\t\t\t)\r\n\t\t);\r\n\t\t\t      \r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\twebdictionary::save_element_strings('structure', $this->id, $this->dictionary, $this->website);\r\n\t\tpath::saveElementPaths('structure', $this->id, $this->paths, $this->website);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'structure',\r\n                'save',\r\n                array(\r\n                    'structure' => $this\r\n                )\r\n            );\r\n        }\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n    // retrieve all elements associated with this structure entry\r\n    public function elements($position=NULL)\r\n    {\r\n        global $DB;\r\n\r\n        $elements = array();\r\n\r\n        if(!empty($this->id))\r\n        {\r\n            $DB->query('\r\n                SELECT id\r\n                  FROM nv_items\r\n                 WHERE category = '.$this->id.'\r\n              ORDER BY position ASC, id ASC\r\n            ');\r\n            $ids = $DB->result('id');\r\n\r\n            if(!empty($position))\r\n            {\r\n                $element = new item();\r\n                $element->load($ids[$position]);\r\n                return $element;\r\n            }\r\n            else\r\n            {\r\n                for($i = 0; $i < count($ids); $i++)\r\n                {\r\n                    $elements[$i] = new item();\r\n                    $elements[$i]->load($ids[$i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return $elements;\r\n    }\r\n\r\n    public function elements_count()\r\n    {\r\n        global $DB;\r\n        global $webuser;\r\n        $permission = (!empty($_SESSION['APP_USER#'.APP_UNIQUE])? 1 : 0);\r\n\r\n        // public access / webuser based / webuser groups based\r\n        $access = 2;\r\n        if(!empty($current['webuser']))\r\n        {\r\n            $access = 1;\r\n            if(!empty($webuser->groups))\r\n            {\r\n                $access_groups = array();\r\n                foreach($webuser->groups as $wg)\r\n                {\r\n                    if(empty($wg))\r\n                    {\r\n                        continue;\r\n                    }\r\n                    $access_groups[] = 'groups LIKE \"%g'.$wg.'%\"';\r\n                }\r\n                if(!empty($access_groups))\r\n                {\r\n                    $access_extra = ' OR (access = 3 AND ('.implode(' OR ', $access_groups).'))';\r\n                }\r\n            }\r\n        }\r\n\r\n        $out = $DB->query_single(\r\n            'COUNT(id)',\r\n            'nv_items',\r\n            ' category = '.intval($this->id).' AND\r\n              website = '.intval($this->website).' AND\r\n              permission <= '.$permission.' AND \r\n              (date_published = 0 OR date_published < '.core_time().') AND \r\n              (date_unpublish = 0 OR date_unpublish > '.core_time().') AND \r\n              (access = 0 OR access = '.$access.$access_extra.')\r\n            ');\r\n\r\n        return $out;\r\n    }\r\n\t\r\n\tpublic static function loadTree($id_parent=0, $ws_id=null)\r\n\t{\r\n\t\tglobal $DB;\t\r\n\t\tglobal $website;\r\n\r\n\t\tif(empty($ws_id))\r\n        {\r\n            $ws_id = $website->id;\r\n        }\r\n\r\n\t\t$ws = new website();\r\n\t\t$ws->load($ws_id);\r\n\r\n        // TODO: consider implementing a cache to avoid extra database queries\r\n\t\t$DB->query('\r\n            SELECT *\r\n              FROM nv_structure\r\n\t\t\t WHERE parent = '.intval($id_parent).' AND\r\n\t\t\t       website = '.$ws->id.'\r\n\t\t  ORDER BY position ASC, id DESC\r\n\t    ');\r\n\r\n\t\t$result = $DB->result();\r\n\r\n\t\tfor($i=0; $i < count($result); $i++)\r\n\t\t{\r\n\t\t\tif(empty($result[$i]->date_published)) \r\n            {\r\n                $result[$i]->date_published = '&infin;';\r\n            }\r\n\t\t\telse\r\n            {\r\n                $result[$i]->date_published = core_ts2date($result[$i]->date_published, false);\r\n            }\r\n\t\t\t\t\r\n\t\t\tif(empty($result[$i]->date_unpublish)) \r\n            {\r\n                $result[$i]->date_unpublish = '&infin;';\r\n            }\r\n\t\t\telse\r\n            {\r\n                $result[$i]->date_unpublish = core_ts2date($result[$i]->date_unpublish, false);\r\n            }\r\n\t\t\t\t\r\n\t\t\t$result[$i]->dates = $result[$i]->date_published.' - '.$result[$i]->date_unpublish;\r\n\t\t}\r\n\t\t\r\n\t\treturn $result;\r\n\t}\r\n\t\r\n\tpublic static function hierarchy($id_parent=0, $ws_id=null)\r\n\t{\r\n\t\tglobal $website;\r\n        global $theme;\r\n\r\n\t\tif(empty($ws_id))\r\n        {\r\n            $ws_id = $website->id;\r\n        }\r\n\r\n\t\t$ws = new website();\r\n\t\t$ws->load($ws_id);\r\n\r\n\t\t$flang = $ws->languages_list[0];\r\n\t\tif(empty($flang))\r\n        {\r\n            return array();\r\n        }\r\n\t\t\r\n\t\t$tree = array();\r\n\t\t\r\n\t\tif($id_parent==-1)\r\n\t\t{\r\n            // create the virtual root structure entry (the website)\r\n\t\t\t$obj = new structure();\r\n\t\t\t$obj->id = 0;\r\n\t\t\t$obj->label = $ws->name;\r\n            $obj->_multilanguage_label = $ws->name;\r\n\t\t\t$obj->parent = -1;\r\n\t\t\t$obj->children = structure::hierarchy(0, $ws_id);\r\n\t\t\t$obj->paths = $ws->homepage();\r\n\r\n\t\t\t$tree[] = $obj;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t$tree = structure::loadTree($id_parent, $ws_id);\r\n\r\n            $templates = template::elements('structure');\r\n            if(empty($templates))\r\n            {\r\n                $templates = array();\r\n            }\r\n\r\n\t\t\tfor($i=0; $i < count($tree); $i++)\r\n            {\r\n\t\t\t\t$tree[$i]->dictionary = webdictionary::load_element_strings('structure', $tree[$i]->id);\r\n                $tree[$i]->paths\t  = path::loadElementPaths('structure', $tree[$i]->id, $ws_id);\r\n                $tree[$i]->label = $tree[$i]->dictionary[$ws->languages_list[0]]['title'];\r\n\r\n                $tree[$i]->template_title = $tree[$i]->template;\r\n\r\n                foreach($templates as $template_def)\r\n                {\r\n                    if($template_def->type == $tree[$i]->template)\r\n                    {\r\n                        $tree[$i]->template_title = $template_def->title;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(method_exists($theme, \"t\"))\r\n                {\r\n                    $tree[$i]->template_title = $theme->t($tree[$i]->template_title);\r\n                }\r\n\r\n                for($wl=0; $wl < count($ws->languages_list); $wl++)\r\n                {\r\n                    $lang = $ws->languages_list[$wl];\r\n\r\n                    if(empty($tree[$i]->dictionary[$lang]['title']))\r\n                    {\r\n                        $tree[$i]->dictionary[$lang]['title'] = '[ ? ]';\r\n                    }\r\n                    else\r\n                    {\r\n                        core_special_chars($tree[$i]->dictionary[$lang]['title']);\r\n                    }\r\n\r\n                    // the following could be removed? seems like is not used\r\n                        $style = '';\r\n                        if($lang != $flang)\r\n                        {\r\n                            $style = 'display: none';\r\n                        }\r\n\r\n                        $label[] = '<span class=\"structure-label\" lang=\"'.$lang.'\" style=\"'.$style.'\">'\r\n                                  .core_special_chars($tree[$i]->dictionary[$lang]['title'])\r\n                                  .'</span>';\r\n\r\n                        $bc[$tree[$i]->id][$lang] = $tree[$i]->dictionary[$lang]['title'];\r\n                }\r\n\r\n                $children = structure::hierarchy($tree[$i]->id, $ws_id);\r\n                $tree[$i]->children = $children;\r\n            }\r\n\t\t}\r\n\t\t\r\n\t\treturn $tree;\r\n\t}\r\n\t\r\n\tpublic static function hierarchyList($hierarchy, $selected=0, $lang=\"\", $ignore_permissions=false)\r\n\t{\r\n\t    global $website;\r\n\r\n\t\t$html = array();\r\n\t\t\t\t\r\n\t\tif(!is_array($hierarchy))\r\n        {\r\n            $hierarchy = array();\r\n        }\r\n\t\t\r\n\t\tif(!is_array($selected))\r\n        {\r\n            $selected = array($selected);\r\n        }\r\n\r\n\t\tforeach($hierarchy as $node)\r\n\t\t{\t\r\n\t\t\t$li_class = '';\r\n\r\n\t\t\t$post_html = structure::hierarchyList($node->children, $selected, $lang, $ignore_permissions);\r\n            $has_children = !empty($post_html);\r\n\r\n\t\t\tif(strpos($post_html, 'class=\"active\"')!==false)\r\n            {\r\n                $li_class = ' class=\"open\" ';\r\n            }\r\n\r\n\t\t\t// disable option if not allowed AND all of its children are not allowed either\r\n\t\t\tif(!$ignore_permissions && !structure::category_allowed($node->id) && strpos($post_html, \"ui-state-disabled\") > 0)\r\n            {\r\n                $li_class = ' class=\"ui-state-disabled\" ';\r\n            }\r\n\r\n\t\t\tif(empty($html))\r\n            {\r\n                $html[] = '<ul>';\r\n            }\r\n\r\n            if(empty($lang))\r\n            {\r\n                $title = core_special_chars($node->label);\r\n                $path = array_values($node->paths)[0];\r\n            }\r\n            else\r\n            {\r\n                $title = core_special_chars($node->dictionary[$lang]['title']);\r\n                $path = $node->paths[$lang];\r\n            }\r\n\r\n            $path = nvweb_prepare_link($path, $website->absolute_path());\r\n\r\n\t\t\tif(empty($title))\r\n\t\t\t{\r\n\t\t\t\tforeach($node->dictionary as $lkey => $lval)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(!empty($lval['title']) && $lval['title'] != '[ ? ]')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$title  = '<span style=\"opacity: 0.8;\">'.core_special_chars($lval['title']).' <img align=\"absmiddle\" src=\"img/icons/silk/comment.png\" class=\"silk-sprite\" /><i>'.$lkey.'</i></span>';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(empty($title)) // no translation for ANY language, so just add a placeholder\r\n                {\r\n                    $title = '<span style=\"opacity: 0.75;\"><i class=\"fa fa-fw fa-language\"></i> #'.$node->id.'</span>';\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\tif(!$ignore_permissions && !structure::category_allowed($node->id))\r\n            {\r\n                $title = '<div class=\"ui-state-disabled\">'.$title.'</div>';\r\n            }\r\n\r\n            $node_type = 'folder';\r\n            if(!$has_children)\r\n            {\r\n                $node_type = 'leaf';\r\n            }\r\n\r\n\t\t\tif(in_array($node->id, $selected))\r\n            {\r\n                $html[] = '<li '.$li_class.' value=\"'.$node->id.'\" data-node-id=\"'.$node->id.'\" data-node-path=\"'.$path.'\" data-selected=\"true\" data-jstree=\\'{\"selected\": true, \"type\": \"'.$node_type.'\"}\\'><span class=\"active\">'.$title.'</span>';\r\n            }\r\n\t\t\telse\r\n            {\r\n                $html[] = '<li '.$li_class.' value=\"'.$node->id.'\" data-node-id=\"'.$node->id.'\" data-node-path=\"'.$path.'\" data-selected=\"false\" data-jstree=\\'{\"selected\": false, \"type\": \"'.$node_type.'\"}\\'><span>'.$title.'</span>';\r\n            }\r\n\r\n\t\t\t$html[] = $post_html;\r\n\t\t\t$html[] = '</li>';\r\n\t\t}\r\n\r\n\t\tif(!empty($html))\r\n        {\r\n            $html[] = '</ul>';\r\n        }\r\n\t\t\r\n\t\treturn implode(\"\\n\", $html);\r\n\t}\r\n\r\n\tpublic static function category_allowed($id)\r\n\t{\r\n\t\tglobal $user;\r\n\r\n\t\t$allowed = true;\r\n\r\n\t\tif(!empty($user->id))\r\n\t\t{\r\n\t\t\t$categories_allowed = $user->permission(\"structure.categories.allowed\");\r\n\r\n\t\t\tif(!empty($categories_allowed))\r\n\t\t\t{\r\n\t\t\t\tif(!in_array($id, $categories_allowed))\r\n                {\r\n                    $allowed = false;\r\n                }\r\n\t\t\t}\r\n\r\n\t\t\t$categories_excluded = $user->permission(\"structure.categories.excluded\");\r\n\t\t\tif(!empty($categories_excluded))\r\n\t\t\t{\r\n\t\t\t\tif(in_array($id, $categories_excluded))\r\n                {\r\n                    $allowed = false;\r\n                }\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $allowed;\r\n\t}\r\n\r\n    public static function hierarchyPath($hierarchy, $category)\r\n    {\r\n        if(is_array($hierarchy))\r\n        {\r\n            foreach($hierarchy as $node)\r\n            {\r\n                if(!empty($node->children))\r\n                {\r\n                    $val = structure::hierarchyPath($node->children, $category);\r\n                }\r\n\r\n                if($node->id == $category || (!empty($val)) )\r\n                {\r\n                    if(empty($val))\r\n                    {\r\n                        return array($node->label);\r\n                    }\r\n\r\n                    return array_merge(array($node->label), $val);\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    public static function hierarchyListClasses($hierarchy, $level=1)\r\n    {\r\n        $html = array();\r\n\r\n        if(!is_array($hierarchy))\r\n        {\r\n            $hierarchy = array();\r\n        }\r\n\r\n        foreach($hierarchy as $node)\r\n        {\r\n            $post_html = structure::hierarchyListClasses($node->children, $level+1);\r\n\r\n            if(empty($html) && $level==1)\r\n            {\r\n                $html[] = '<ul>';\r\n            }\r\n\r\n            $extra = '';\r\n            if(!empty($post_html))\r\n            {\r\n                $extra = 'group';\r\n            }\r\n\r\n            $html[] = '<li class=\"level'.$level.' '.$extra.'\" data-value=\"'.$node->id.'\"><span>'.core_special_chars($node->label).'</span>';\r\n\r\n            $html[] = $post_html;\r\n            $html[] = '</li>';\r\n        }\r\n\r\n        if(!empty($html) && $level==1)\r\n        {\r\n            $html[] = '</ul>';\r\n        }\r\n\r\n        return implode(\"\\n\", $html);\r\n    }\r\n\t\r\n\tpublic static function reorder($parent, $children)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $website;\r\n\t\t\r\n\t\t$children = explode(\"#\", $children);\r\n\t\t\t\t\r\n\t\tfor($i=0; $i < count($children); $i++)\r\n\t\t{\t\t\r\n\t\t\tif(empty($children[$i]))\r\n            {\r\n                continue;\r\n            }\r\n\r\n\t\t\t$ok =\t$DB->execute('UPDATE nv_structure \r\n\t\t\t\t\t\t\t\t\t SET position = '.($i+1).'\r\n\t\t\t\t\t\t\t\t   WHERE id = '.$children[$i].' \r\n\t\t\t\t\t\t\t\t\t AND parent = '.intval($parent).'\r\n\t\t\t\t\t\t\t\t\t AND website = '.$website->id);\r\n\t\t\t\t\t\t\t \r\n\t\t\tif(!$ok)\r\n            {\r\n                return array(\"error\" => $DB->get_last_error());\r\n            }\r\n\t\t}\r\n\t\t\t\r\n\t\treturn true;\t\r\n\t}\r\n\r\n\tpublic function property($property_name, $raw=false)\r\n\t{\r\n\t\t// load properties if not already done\r\n\t\tif(empty($this->properties))\r\n        {\r\n            $this->properties = property::load_properties('structure', $this->template, 'structure', $this->id);\r\n        }\r\n\r\n\t\tfor($p=0; $p < count($this->properties); $p++)\r\n\t\t{\r\n\t\t\tif($this->properties[$p]->name==$property_name || $this->properties[$p]->id==$property_name)\r\n\t\t\t{\r\n\t\t\t\tif($raw)\r\n                {\r\n                    $out = $this->properties[$p]->value;\r\n                }\r\n\t\t\t\telse\r\n                {\r\n                    $out = $this->properties[$p]->value;\r\n                }\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $out;\r\n\t}\r\n\r\n\tpublic function property_definition($property_name)\r\n\t{\r\n\t\t// load properties if not already done\r\n\t\tif(empty($this->properties))\r\n        {\r\n            $this->properties = property::load_properties('structure', $this->template, 'structure', $this->id);\r\n        }\r\n\r\n\t\tfor($p=0; $p < count($this->properties); $p++)\r\n\t\t{\r\n\t\t\tif($this->properties[$p]->name==$property_name || $this->properties[$p]->id==$property_name)\r\n\t\t\t{\r\n\t\t\t\t$out = $this->properties[$p];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $out;\r\n\t}\r\n\r\n    public function property_exists($property_name)\r\n    {\r\n        // load properties if not already done\r\n        if(empty($this->properties))\r\n        {\r\n            $this->properties = property::load_properties('structure', $this->template, 'structure', $this->id);\r\n        }\r\n\r\n        for($p=0; $p < count($this->properties); $p++)\r\n        {\r\n            if($this->properties[$p]->name==$property_name || $this->properties[$p]->id==$property_name)\r\n            {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n        global $website;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_structure WHERE website = '.intval($website->id), 'object');\r\n\r\n        if($type='json')\r\n        {\r\n            $out = json_encode($DB->result());\r\n        }\r\n\r\n        return $out;\r\n    }\r\n\r\n\tpublic static function __set_state(array $obj)\r\n\t{\r\n\t\t$tmp = new structure();\r\n\t\tforeach($obj as $key => $val)\r\n        {\r\n            $tmp->$key = $val;\r\n        }\r\n\r\n\t\treturn $tmp;\r\n\t}\r\n}\r\n\r\n?>", "<?php\r\nclass website\r\n{\r\n\tpublic $id; \r\n\tpublic $name;\r\n\tpublic $protocol; // default http://\r\n\tpublic $subdomain; // usually \"www\"\r\n\tpublic $domain; // naviwebs.net\r\n\tpublic $folder; // usually empty, used when the website is IN a folder, ex. http://www.naviwebs.com/demo/homepage\r\n    public $redirect_to; // if the website is private or closed, redirect anonymous visitors to a real path\r\n    public $wrong_path_action;\r\n    public $wrong_path_redirect;\r\n\tpublic $empty_path_action;\r\n\tpublic $languages; // array('en' => array( 'language' => 'en', 'variant' => 'US', 'code' => 'en_US' => 'system_locale' => 'ENU_USA'), 'es_ES' => array(...), ...)\r\n\tpublic $languages_published; // array ('en', 'es_ES')\r\n\tpublic $date_format;\r\n    public $tinymce_css;\r\n    public $resize_uploaded_images;\t// what to do with the uploaded images, 0 => keep original files, \"yy\" px => autoresize to yy pixels\r\n    public $comments_enabled_for;\r\n    public $comments_default_moderator;\r\n    public $share_files_media_browser;\r\n    public $page_cache;\r\n\tpublic $tracking_scripts;\r\n\tpublic $additional_scripts;\r\n\tpublic $additional_styles;\r\n\tpublic $permission;\t//  0 => public | 1 => private | 2 => only navigate users\r\n\tpublic $block_types;    // deprecated, will be removed in NV 3.0!!!\r\n\tpublic $homepage;\r\n\tpublic $default_timezone;\r\n    public $aliases;\r\n\t//public $server_time_offset;\r\n    public $word_separator;\r\n    public $metatag_title_order;\r\n\tpublic $metatag_description;  // multilanguage\r\n\tpublic $metatag_keywords;  // multilanguage\r\n    public $metatags; // multilanguage\r\n    public $mail_mailer; // smtp or sendmail\r\n\tpublic $mail_server;\r\n\tpublic $mail_port;\r\n\tpublic $mail_user;\r\n\tpublic $mail_address;\r\n\tpublic $mail_password;\r\n    public $mail_security;\r\n    public $mail_ignore_ssl_security;\r\n\tpublic $contact_emails;\r\n\tpublic $favicon;\r\n\tpublic $decimal_separator;\r\n\tpublic $thousands_separator;\r\n\tpublic $currency;\r\n\tpublic $size_unit;\r\n\tpublic $weight_unit;\r\n\t\r\n    public $shop_logo;\r\n    public $shop_address;       // multilanguage\r\n    public $shop_legal_info;    // multilanguage\r\n    public $shop_purchase_conditions_path;\r\n\r\n\tpublic $theme;\r\n\tpublic $theme_options;\r\n\t\r\n\tpublic $languages_list;\r\n\r\n\tpublic function load($id=\"\")\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n\t\tif(empty($id)) // we suppose we only have one website or we just want the first\r\n\t\t{\r\n\t\t\tif($DB->query('SELECT * FROM nv_websites LIMIT 1'))\r\n\t\t\t{\r\n\t\t\t\t$data = $DB->result();\r\n\t\t\t\t$this->load_from_resultset($data); // we'll catch the first website there\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif($DB->query('SELECT * FROM nv_websites WHERE id = '.intval($id)))\r\n\t\t\t{\r\n\t\t\t\t$data = $DB->result();\r\n\t\t\t\t$this->load_from_resultset($data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic function load_from_resultset($rs)\r\n\t{\r\n\t\t$main = $rs[0];\r\n\r\n\t\t$this->id\t\t\t\t= $main->id; \r\n\t\t$this->name\t\t\t\t= $main->name;\r\n\r\n\t\t// the fields below give an absoulte path to the website: protocol://subdomain.domain/folder\r\n\t\t$this->protocol\t\t\t= $main->protocol;\r\n\t\t$this->subdomain\t\t= $main->subdomain;\r\n\t\t$this->domain\t\t\t= $main->domain;\t\t\t\t\r\n\t\t$this->folder\t\t\t= $main->folder;\r\n        $this->word_separator\t= value_or_default($main->word_separator, '_');\r\n\r\n\t\t$this->redirect_to\t\t    = $main->redirect_to;\r\n        $this->wrong_path_action    = $main->wrong_path_action;\r\n        $this->wrong_path_redirect  = $main->wrong_path_redirect;\r\n        $this->empty_path_action    = $main->empty_path_action;\r\n\r\n\t\t$this->languages\t\t    = mb_unserialize($main->languages);\r\n\t\t$this->languages_published  = array_filter(mb_unserialize($main->languages_published));\r\n\t\t$this->date_format\t\t    = $main->date_format;\r\n\t\t$this->tinymce_css\t\t    = $main->tinymce_css;\r\n\t\t$this->resize_uploaded_images       = $main->resize_uploaded_images;\r\n        $this->comments_enabled_for         = $main->comments_enabled_for;\r\n        $this->comments_default_moderator   = $main->comments_default_moderator;\r\n\t\t$this->share_files_media_browser    = $main->share_files_media_browser;\r\n\t\t$this->page_cache           = $main->page_cache;\r\n\r\n\t\t$this->tracking_scripts             = $main->tracking_scripts;\r\n\t\t$this->additional_scripts           = $main->additional_scripts;\r\n\t\t$this->additional_styles            = $main->additional_styles;\r\n\t\t$this->permission\t\t= $main->permission;\r\n\t\t$this->block_types\t\t= mb_unserialize($main->block_types);\r\n\t\t$this->homepage\t\t\t= $main->homepage;\t\r\n\t\t$this->default_timezone = $main->default_timezone;\t\r\n\t\t$this->metatag_title_order\t= $main->metatag_title_order;\r\n\t\t$this->metatag_description\t= json_decode($main->metatag_description, true);\r\n\t\t$this->metatag_keywords \t= json_decode($main->metatag_keywords, true);\r\n\t\t$this->metatags\t\t\t    = json_decode($main->metatags, true);\r\n\t\t$this->favicon\t\t\t    = $main->favicon;\r\n\r\n\t\t$this->decimal_separator    = $main->decimal_separator;\r\n\t\t$this->thousands_separator\t= $main->thousands_separator;\r\n\t\t$this->currency             = $main->currency;\r\n\t\t$this->size_unit            = $main->size_unit;\r\n\t\t$this->weight_unit          = $main->weight_unit;\r\n\r\n        $this->shop_logo                        = $main->shop_logo;\r\n        $this->shop_address                     = json_decode($main->shop_address, true);\r\n        $this->shop_legal_info                  = json_decode($main->shop_legal_info, true);\r\n        $this->shop_purchase_conditions_path    = $main->shop_purchase_conditions_path;\r\n\r\n\t\t$this->mail_mailer\t\t            = $main->mail_mailer;\r\n\t\t$this->mail_server\t\t            = $main->mail_server;\r\n\t\t$this->mail_port\t\t            = $main->mail_port;\r\n        $this->mail_security\t            = $main->mail_security;\r\n        $this->mail_ignore_ssl_security\t    = $main->mail_ignore_ssl_security;\r\n\t\t$this->mail_user\t\t            = $main->mail_user;\r\n\t\t$this->mail_address\t\t            = $main->mail_address;\r\n        $this->mail_password\t            = $main->mail_password;\r\n\t\t\r\n\t\t$this->theme\t\t\t= $main->theme;\r\n\t\t$this->theme_options\t= json_decode($main->theme_options);\r\n\r\n        $this->aliases          = json_decode($main->aliases, true);\r\n\t\t\r\n\t\t$this->contact_emails\t= mb_unserialize($main->contact_emails);\r\n\t\tif(!is_array($this->contact_emails))\r\n        {\r\n            $this->contact_emails = array();\r\n        }\r\n\t\t\t\t\r\n\t\tif(!is_array($this->languages))\r\n        {\r\n            $this->languages = array();\r\n        }\r\n\t\t$this->languages_list\t= array_keys($this->languages);\r\n\t\t\r\n\t\tdate_default_timezone_set($this->default_timezone);\r\n\t}\r\n\t\r\n\tpublic function load_from_post()\r\n\t{\r\n        global $theme;\r\n        global $purifier;\r\n\r\n\t\t$ws_theme = $theme;\r\n\t\tif($this->theme != $theme->name)\r\n\t\t{\r\n\t\t\t$ws_theme = new theme();\r\n\t\t\t$ws_theme->load($this->theme);\r\n\t\t}\r\n\r\n\t\t$this->name\t\t\t\t= $purifier->purify($_REQUEST['title']);\r\n\t\t\r\n\t\t$this->protocol\t\t\t= $_REQUEST['protocol'];\r\n\t\t$this->subdomain\t\t= $_REQUEST['subdomain'];\r\n\t\t$this->domain\t\t\t= $_REQUEST['domain'];\t\t\t\t\r\n\t\t$this->folder\t\t\t= $_REQUEST['folder'];\r\n        $this->word_separator\t= $_REQUEST['word_separator'];\r\n\r\n        $this->redirect_to\t\t    = $_REQUEST['redirect_to'];\r\n        $this->wrong_path_action    = $_REQUEST['wrong_path_action'];\r\n        $this->wrong_path_redirect  = $_REQUEST['wrong_path_redirect'];\r\n        $this->empty_path_action    = $_REQUEST['empty_path_action'];\r\n\r\n        $this->date_format\t\t= $_REQUEST['date_format'];\r\n\t\t$this->tinymce_css\t\t= $_REQUEST['tinymce_css'];\r\n\t\t$this->resize_uploaded_images = intval($_REQUEST['resize_uploaded_images']);\r\n\r\n        $this->comments_enabled_for         =   intval($_REQUEST['comments_enabled_for']);\r\n        $this->comments_default_moderator   =   $_REQUEST['comments_default_moderator'];\r\n\t\t$this->share_files_media_browser    =   intval($_REQUEST['share_files_media_browser']);\r\n\t\t$this->page_cache                   =   ($_REQUEST['page_cache']=='1'? 1 : 0);\r\n\r\n\t\t$this->tracking_scripts             = $_REQUEST['tracking_scripts'];\r\n\t\t$this->additional_scripts           = $_REQUEST['additional_scripts'];\r\n\t\t$this->additional_styles            = $_REQUEST['additional_styles'];\r\n\r\n\t\tif(empty($_REQUEST['homepage_from_structure']))\r\n        {\r\n            $this->homepage\t\t\t= $_REQUEST['homepage'];\r\n        }\r\n\r\n\t\t$this->permission\t\t= intval($_REQUEST['permission']);\r\n\t\t$this->default_timezone\t= $_REQUEST['default_timezone'];\r\n\t\t\r\n\t\t$this->mail_mailer\t\t= $_REQUEST['mail_mailer'][0];\r\n\t\t$this->mail_server\t\t= $_REQUEST['mail_server'];\r\n\t\t$this->mail_port\t\t= intval($_REQUEST['mail_port']);\r\n        $this->mail_security\t= intval($_REQUEST['mail_security']);\r\n        $this->mail_ignore_ssl_security = ($_REQUEST['mail_ignore_ssl_security']=='1'? 1 : 0);\r\n\t\t$this->mail_user\t\t= $_REQUEST['mail_user'];\r\n\t\t$this->mail_address\t\t= $_REQUEST['mail_address'];\r\n\r\n\t\tif(!empty($_REQUEST['mail_password']))\r\n        {\r\n            $this->mail_password\t= $_REQUEST['mail_password'];\r\n        }\r\n\r\n\t\t$ce\t= explode(\"\\n\", $_REQUEST['contact_emails']);\r\n\t\t\t\r\n\t\t$this->contact_emails = array();\r\n\t\tforeach($ce as $cemail)\r\n\t\t{\r\n\t\t\t$cemail = trim($cemail);\r\n\t\t\tif(empty($cemail))\r\n            {\r\n                continue;\r\n            }\r\n\t\t\t$this->contact_emails[] = $cemail;\r\n\t\t}\r\n\t\t\r\n\t\t$this->favicon\t= intval($_REQUEST['website-favicon']);\r\n\r\n        $this->decimal_separator = $_REQUEST['website-decimal_separator'];\r\n        $this->thousands_separator = $_REQUEST['website-thousands_separator'];\r\n        $this->currency = $_REQUEST['website-default_currency'];\r\n        $this->size_unit = $_REQUEST['website-default_size_unit'];\r\n        $this->weight_unit = $_REQUEST['website-default_weight_unit'];\r\n\r\n        // languages and locales\r\n        $this->languages = array();\r\n        $this->languages_published = array();\r\n\r\n        $language_ids = array_values($_REQUEST['language-id']);\r\n        $language_variants = array_values($_REQUEST['language-variant-code']);\r\n        $language_locales = array_values($_REQUEST['language-locale']);\r\n        $language_published = array_values($_REQUEST['language-published']);\r\n\r\n        for($li=0; $li < count($language_ids); $li++)\r\n        {\r\n            $variant = trim($language_variants[$li]);\r\n            $code = $language_ids[$li];\r\n            if(!empty($variant))\r\n            {\r\n                $code .= '_'.$variant;\r\n            }\r\n\r\n            $this->languages[$code] = array(\r\n                'language' => $language_ids[$li],\r\n                'variant' => $variant,\r\n                'code' => $code,\r\n                'system_locale' => $language_locales[$li]\r\n            );\r\n\r\n            $this->languages_published[] = ($language_published[$li]=='1'? $code : '');\r\n        }\r\n\r\n        // website metatags\r\n        $this->metatag_title_order = $_REQUEST['metatag_title_order'];\r\n        $this->metatag_description = array();\r\n        $this->metatag_keywords = array();\r\n        $this->metatags = array();\r\n\r\n        foreach($this->languages as $language)\r\n        {\r\n            $lcode = $language['code'];\r\n            $this->metatag_description[$lcode]\t= $_REQUEST['metatag_description-'.$lcode];\r\n            $this->metatag_keywords[$lcode]\t= $_REQUEST['metatag_keywords-'.$lcode];\r\n            $this->metatags[$lcode]\t= $_REQUEST['metatags-'.$lcode];\r\n        }\r\n\r\n        // website aliases\r\n        $this->aliases = array();\r\n        if(empty($_POST['website-aliases-alias']))\r\n        {\r\n            $_POST['website-aliases-alias'] = array();\r\n        }\r\n\r\n        foreach($_POST['website-aliases-alias'] as $key => $value)\r\n        {\r\n            $value = trim($value);\r\n            if(!empty($value))\r\n            {\r\n                $value_real = trim($_POST['website-aliases-real'][$key]);\r\n                if(!empty($value_real))\r\n                {\r\n                    $this->aliases[$value] = $value_real;\r\n                }\r\n            }\r\n        }\r\n\r\n        $this->theme_options = array();\r\n\r\n        // theme style (common property)\r\n        $this->theme_options['style'] = $_REQUEST['property-style'];\r\n\r\n        if(!empty($ws_theme->options))\r\n        {\r\n            foreach($ws_theme->options as $theme_option)\r\n            {\r\n                // get property info\r\n                $property = new property();\r\n                $property->load_from_theme($theme_option, NULL, NULL, NULL, $this->id);\r\n\r\n                $value = '';\r\n\r\n                switch($property->type)\r\n                {\r\n                    case 'text':\r\n                    case 'textarea':\r\n                    case 'rich_textarea':\r\n                        // multilang\r\n                        $value = array();\r\n                        if(!is_array($this->languages_list))\r\n                        {\r\n                            $this->languages_list = array();\r\n                        }\r\n\r\n                        foreach($this->languages_list as $lang)\r\n                        {\r\n                            $value[$lang] = $_REQUEST['property-'.$theme_option->id.'-'.$lang];\r\n                        }\r\n                        break;\r\n\r\n                    case 'link':\r\n                        // multilang and title+link\r\n                        $value = array();\r\n                        foreach($this->languages_list as $lang)\r\n                        {\r\n                            $value[$lang] = $_REQUEST['property-'.$theme_option->id.'-'.$lang.'-link'].'##'.$_REQUEST['property-'.$theme_option->id.'-'.$lang.'-title'];\r\n                        }\r\n                        break;\r\n\r\n                    case 'date':\r\n                    case 'datetime':\r\n                        $value = core_date2ts($_REQUEST['property-'.$theme_option->id]);\r\n                        break;\r\n\r\n                    case 'moption':\r\n                        $value = implode(',', $_REQUEST['property-'.$theme_option->id]);\r\n                        break;\r\n\r\n                    case 'coordinates':\r\n                        $value = $_REQUEST['property-'.$theme_option->id.'-latitude'].'#'.$_REQUEST['property-'.$theme_option->id.'-longitude'];\r\n                        break;\r\n\r\n                    case 'decimal':\r\n                        $value = $_REQUEST['property-'.$theme_option->id];\r\n                        $value = core_string2decimal($value);\r\n                        break;\r\n\r\n                    default:\r\n                        // direct value\r\n                       $value = $_REQUEST['property-'.$theme_option->id];\r\n                }\r\n\r\n                $this->theme_options[$theme_option->id] = $value;\r\n            }\r\n        }\r\n\r\n        // shop information\r\n        $this->shop_logo            = $_REQUEST['website-shop_logo'];\r\n        $this->shop_purchase_conditions_path = $_REQUEST['website-shop_purchase_conditions_path'];\r\n\r\n        $this->shop_address = array();\r\n        $this->shop_legal_info = array();\r\n\r\n        foreach($this->languages as $language)\r\n        {\r\n            $lcode = $language['code'];\r\n\r\n            $this->shop_address[$lcode]     = $_REQUEST['website-shop_address-'.$lcode];\r\n            $this->shop_legal_info[$lcode]  = $_REQUEST['website-shop_legal_info-'.$lcode];\r\n        }\r\n\t}\r\n\t\t\r\n\tpublic function save()\r\n\t{\r\n\t\tif(!empty($this->id))\r\n        {\r\n            return $this->update();\r\n        }\r\n\t\telse\r\n        {\r\n            return $this->insert();\r\n        }\r\n\t}\r\n\t\r\n\tpublic function delete($delete_related_content=true)\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n        $affected_rows = 0;\r\n\r\n        set_time_limit(0);\r\n\r\n\t\tif(!empty($this->id))\r\n        {\r\n            if ($delete_related_content)\r\n            {\r\n                // delete all content related to the website\r\n                // EXCEPTION: webusers, as they may be shared between websites\r\n                $tables = array(\r\n                    'nv_comments',              // comments\r\n                    'nv_extensions',            // extensions settings\r\n                    'nv_notes',                 // notes\r\n                    'nv_paths',                 // paths\r\n                    'nv_properties',            // custom properties definitions\r\n                    'nv_properties_items',      // custom properties values\r\n                    'nv_templates',             //  templates\r\n                    'nv_webuser_votes',         //  webusers votes\r\n                    'nv_webuser_favorites',     //  webusers favorites\r\n                    'nv_blocks',                //  blocks\r\n                    'nv_items',                 //  elements\r\n                    'nv_feeds',                 //  feeds\r\n                    'nv_structure',             //  structure\r\n                    'nv_webdictionary',         //  web dictionary\r\n                    'nv_webdictionary_history', // web dictionary history\r\n                    'nv_backups',               // backups\r\n                    'nv_files',                 // files & folders\r\n                );\r\n\r\n                foreach ($tables as $table)\r\n                {\r\n                    $DB->execute('\r\n                        DELETE FROM ' . $table . '\r\n                         WHERE website = ' . intval($this->id) . '\r\n                    ');\r\n                }\r\n\r\n                // remove ALL files associated to the website\r\n                // including: images, documents, thumbnails, backups, cache, custom templates...\r\n                core_remove_folder(NAVIGATE_PRIVATE . '/' . $this->id);\r\n            }\r\n\r\n            // remove all associated website notes\r\n            grid_notes::remove_all('website', $this->id);\r\n\r\n            // finally delete the website entry\r\n            $DB->execute('\r\n\t\t\t    DELETE FROM nv_websites\r\n\t\t\t\t WHERE id = ' . intval($this->id) . '\r\n\t\t\t\t LIMIT 1\r\n            ');\r\n\r\n            $affected_rows = $DB->get_affected_rows();\r\n\r\n            // if allowed, send statistics to navigatecms.com\r\n            if (NAVIGATECMS_STATS)\r\n            {\r\n                global $user;\r\n                @core_curl_post(\r\n                    'http://statistics.navigatecms.com/website/remove',\r\n                    array(\r\n                        'name'            => $this->name,\r\n                        'ip'              => $_SERVER['SERVER_ADDR'],\r\n                        'website_id'      => $this->id,\r\n                        'url'             => $this->absolute_path(),\r\n                        'folder'          => $this->folder,\r\n                        'word_separator'  => $this->word_separator,\r\n                        'homepage'        => $this->homepage,\r\n                        'theme'           => $this->theme,\r\n                        'emails'          => serialize($this->contact_emails),\r\n                        'languages'       => serialize($this->languages_published),\r\n                        'permission'      => $this->permission,\r\n                        'author_name'     => $user->username,\r\n                        'author_email'    => $user->email,\r\n                        'author_language' => $user->language\r\n                    ),\r\n                    NULL,\r\n                    10,\r\n                    'post'\r\n                );\r\n            }\r\n\r\n            if(method_exists($events, 'trigger'))\r\n            {\r\n                $events->trigger(\r\n                    'website',\r\n                    'delete',\r\n                    array(\r\n                        'website' => $this\r\n                    )\r\n                );\r\n            }\r\n        }\r\n\t\t\r\n\t\treturn $affected_rows;\r\n\t}\r\n\t\r\n\tpublic function insert()\r\n\t{\r\n\t\tglobal $DB;\r\n        global $events;\r\n\r\n\t\t$ok = $DB->execute('\r\n\t\t    INSERT INTO nv_websites\r\n            (\tid, name, protocol, subdomain, domain, folder, redirect_to, \r\n            \twrong_path_action, wrong_path_redirect, empty_path_action,\r\n                languages, languages_published, aliases,\r\n                word_separator, date_format, tinymce_css, resize_uploaded_images,\r\n                comments_enabled_for, comments_default_moderator, share_files_media_browser, page_cache,\r\n                tracking_scripts, additional_scripts, additional_styles, permission,\r\n                mail_mailer, mail_server, mail_port, mail_security, mail_ignore_ssl_security, mail_user, mail_address, mail_password, \r\n                contact_emails, homepage, default_timezone, \r\n                metatag_title_order, metatag_description, metatag_keywords, metatags,\r\n                favicon, decimal_separator, thousands_separator, currency, size_unit, weight_unit,\r\n                shop_logo, shop_address, shop_legal_info, shop_purchase_conditions_path,\r\n                theme, theme_options, block_types\r\n            )\r\n            VALUES\r\n            ( 0,\r\n              :name,\r\n              :protocol,\r\n              :subdomain,\r\n              :domain,\r\n              :folder,\r\n              :redirect_to,\r\n              :wrong_path_action,\r\n              :wrong_path_redirect,\r\n              :empty_path_action,\r\n              :languages,\r\n              :languages_published,\r\n              :aliases,\r\n              :word_separator,\r\n              :date_format,\r\n              :tinymce_css,\r\n              :resize_uploaded_images,\r\n              :comments_enabled_for,\r\n              :comments_default_moderator,\r\n              :share_files_media_browser,\r\n              :page_cache,\r\n              :tracking_scripts,\r\n              :additional_scripts,\r\n              :additional_styles,\r\n              :permission,\r\n              :mail_mailer,\r\n              :mail_server,\r\n              :mail_port,\r\n              :mail_security,\r\n              :mail_ignore_ssl_security,\r\n              :mail_user,\r\n              :mail_address,\r\n              :mail_password,\r\n              :contact_emails,\r\n              :homepage,\r\n              :default_timezone,\r\n              :metatag_title_order,\r\n              :metatag_description,\r\n              :metatag_keywords,\r\n              :metatags,\r\n              :favicon,\r\n              :decimal_separator, \r\n              :thousands_separator, \r\n              :currency, \r\n              :size_unit, \r\n              :weight_unit,              \r\n              :shop_logo,\r\n              :shop_address,\r\n              :shop_legal_info,\r\n              :shop_purchase_conditions_path,\r\n              :theme,\r\n              :theme_options,\r\n              :block_types\r\n            )',\r\n\t\t\tarray(\r\n\t\t\t\t\":name\" => value_or_default($this->name, \"\"),\r\n\t\t\t\t\":protocol\" => value_or_default($this->protocol, \"http://\"),\r\n\t\t\t\t\":subdomain\" => value_or_default($this->subdomain, \"\"),\r\n\t\t\t\t\":domain\" => value_or_default($this->domain, \"\"),\r\n\t\t\t\t\":folder\" => value_or_default($this->folder, \"\"),\r\n\t\t\t\t\":redirect_to\" => value_or_default($this->redirect_to, \"\"),\r\n\t\t\t\t\":wrong_path_action\" => value_or_default($this->wrong_path_action, 'blank'),\r\n\t\t\t\t\":wrong_path_redirect\" => value_or_default($this->wrong_path_redirect, ''),\r\n\t\t\t\t\":empty_path_action\" => value_or_default($this->empty_path_action, 'homepage_redirect'),\r\n\t\t\t\t\":languages\" => (is_array($this->languages)? serialize($this->languages) : $this->languages),\r\n\t\t\t\t\":languages_published\" => (is_array($this->languages_published)? serialize($this->languages_published) : $this->languages_published),\r\n                \":aliases\" => json_encode($this->aliases),\r\n                \":word_separator\" => value_or_default($this->word_separator, \"-\"),\r\n                \":date_format\" => $this->date_format,\r\n\t\t\t\t\":tinymce_css\" => value_or_default($this->tinymce_css, ''),\r\n\t\t\t\t\":resize_uploaded_images\" => value_or_default($this->resize_uploaded_images, 0),\r\n\t\t\t\t\":comments_enabled_for\" => value_or_default($this->comments_enabled_for, 0),\r\n\t\t\t\t\":comments_default_moderator\" => value_or_default($this->comments_default_moderator, ''),\r\n\t\t\t\t\":share_files_media_browser\" => value_or_default($this->share_files_media_browser, 0),\r\n\t\t\t\t\":page_cache\" => value_or_default($this->page_cache, 0),\r\n\t\t\t\t\":tracking_scripts\" => value_or_default($this->tracking_scripts, ''),\r\n\t\t\t\t\":additional_scripts\" => value_or_default($this->additional_scripts, ''),\r\n\t\t\t\t\":additional_styles\" => value_or_default($this->additional_styles, ''),\r\n\t\t\t\t\":permission\" => $this->permission,\r\n\t\t\t\t\":mail_mailer\" => value_or_default($this->mail_mailer, ''),\r\n\t\t\t\t\":mail_server\" => value_or_default($this->mail_server, ''),\r\n\t\t\t\t\":mail_port\" => value_or_default($this->mail_port, 25),\r\n\t\t\t\t\":mail_security\" => value_or_default($this->mail_security, 0),\r\n\t\t\t\t\":mail_ignore_ssl_security\" => value_or_default($this->mail_ignore_ssl_security, 0),\r\n\t\t\t\t\":mail_user\" => value_or_default($this->mail_user, ''),\r\n\t\t\t\t\":mail_address\" => value_or_default($this->mail_address, ''),\r\n\t\t\t\t\":mail_password\" => value_or_default($this->mail_password, ''),\r\n\t\t\t\t\":contact_emails\" => serialize($this->contact_emails),\r\n\t\t\t\t\":homepage\" => value_or_default($this->homepage, ''),\r\n\t\t\t\t\":default_timezone\" => value_or_default($this->default_timezone, ''),\r\n\t\t\t\t\":metatag_title_order\" => value_or_default($this->metatag_title_order, 'website | category | section'),\r\n\t\t\t\t\":metatag_description\" => json_encode($this->metatag_description),\r\n\t\t\t\t\":metatag_keywords\" => json_encode($this->metatag_keywords),\r\n\t\t\t\t\":metatags\" => json_encode($this->metatags),\r\n\t\t\t\t\":favicon\" => value_or_default($this->favicon, 0),\r\n                \":decimal_separator\" => value_or_default($this->decimal_separator, '.'),\r\n                \":thousands_separator\" => value_or_default($this->thousands_separator, \"\"),\r\n                \":currency\" => value_or_default($this->currency, \"dollar\"),\r\n                \":size_unit\" => value_or_default($this->size_unit, 'cm'),\r\n                \":weight_unit\" => value_or_default($this->weight_unit, \"g\"),\r\n\t\t\t\t\":shop_logo\" => value_or_default($this->shop_logo, 0),\r\n\t\t\t\t\":shop_address\" => json_encode(value_or_default($this->shop_address, \"\")),\r\n\t\t\t\t\":shop_legal_info\" => json_encode(value_or_default($this->shop_legal_info, \"\")),\r\n\t\t\t\t\":shop_purchase_conditions_path\" => value_or_default($this->shop_purchase_conditions_path, \"\"),\r\n\t\t\t\t\":theme\" => value_or_default($this->theme, ''),\r\n\t\t\t\t\":theme_options\" => json_encode($this->theme_options),\r\n                \":block_types\" => \"\"\r\n\t\t\t)\r\n        );\r\n\t\t\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\t\t\r\n\t\t// finally we create the private folder\r\n\t\t$this->id = $DB->get_last_id();\r\n\t\t\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id, 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/files', 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/templates', 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/thumbnails', 0744, true);\r\n\t\t@mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/webgets', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/backups', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/cache', 0744, true);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'website',\r\n                'insert',\r\n                array(\r\n                    'website' => $this\r\n                )\r\n            );\r\n        }\r\n\r\n\t\t// if allowed, send statistics to navigatecms.com\r\n\t\tif(NAVIGATECMS_STATS)\r\n\t\t{\r\n\t\t\tglobal $user;\r\n\t\t\t@core_curl_post(\r\n                'http://statistics.navigatecms.com/website/new',\r\n                array(\r\n                    'name' => $this->name,\r\n                    'ip' => $_SERVER['SERVER_ADDR'],\r\n                    'website_id' => $this->id,\r\n                    'url' => $this->absolute_path(),\r\n                    'folder' => $this->folder,\r\n                    'word_separator' => $this->word_separator,\r\n                    'homepage' => $this->homepage,\r\n                    'theme' => $this->theme,\r\n                    'emails' => serialize($this->contact_emails),\r\n                    'languages' => serialize($this->languages_published),\r\n                    'permission' => $this->permission,\r\n                    'author_name' => $user->username,\r\n                    'author_email' => $user->email,\r\n                    'author_language' => $user->language\r\n                ),\r\n\t\t\t\tNULL,\r\n\t\t\t\t10,\r\n\t\t\t\t'post'\r\n            );\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\t\r\n\t\r\n\tpublic function update()\r\n\t{\r\n\t\tglobal $DB;\r\n\t\tglobal $events;\r\n\r\n        $ok = $DB->execute('\r\n            UPDATE nv_websites\r\n                SET\r\n                    name\t=   ?,\r\n                    protocol =  ?,\r\n                    subdomain = ?,\r\n                    domain\t=   ?,\r\n                    folder\t=   ?,\r\n                    redirect_to = ?,\r\n                    wrong_path_action = ?,\r\n                    wrong_path_redirect = ?,\r\n                    empty_path_action = ?,\r\n                    languages = ?,\r\n                    languages_published = ?,\r\n                    aliases = ?,\r\n                    word_separator = ?,\r\n                    date_format = ?,\r\n                    tinymce_css = ?,\r\n                    resize_uploaded_images = ?,\r\n                    comments_enabled_for = ?,\r\n\t\t\t\t\tcomments_default_moderator = ?,\r\n\t\t\t\t\tshare_files_media_browser = ?,\r\n\t\t\t\t\tpage_cache = ?,\r\n                    tracking_scripts = ?,\r\n                    additional_scripts = ?,\r\n                    additional_styles = ?,\r\n                    permission = ?,\r\n                    mail_mailer = ?,\r\n                    mail_server = ?,\r\n                    mail_port = ?,\r\n                    mail_security = ?,\r\n                    mail_ignore_ssl_security = ?,\r\n                    mail_user = ?,\r\n                    mail_address = ?,\r\n                    mail_password = ?,\r\n                    contact_emails = ?,\r\n                    homepage = ?,\r\n                    default_timezone = ?,\r\n                    metatag_title_order = ?,\r\n                    metatag_description = ?,\r\n                    metatag_keywords = ?,\r\n                    metatags = ?,\r\n                    favicon = ?,\r\n                    decimal_separator = ?,\r\n                    thousands_separator = ?,\r\n                    currency = ?,\r\n                    size_unit = ?,\r\n                    weight_unit = ?,\r\n                    shop_logo = ?,\r\n                    shop_address = ?,\r\n                    shop_legal_info = ?,\r\n                    shop_purchase_conditions_path = ?,\r\n                    theme = ?,\r\n                    theme_options = ?\r\n                WHERE id = '.$this->id,\r\n            array(\r\n                value_or_default($this->name, \"\"),\r\n                value_or_default($this->protocol, \"http://\"),\r\n                value_or_default($this->subdomain, \"\"),\r\n                value_or_default($this->domain, \"\"),\r\n                value_or_default($this->folder, \"\"),\r\n                value_or_default($this->redirect_to, \"\"),\r\n                value_or_default($this->wrong_path_action, \"blank\"),\r\n                value_or_default($this->wrong_path_redirect, \"\"),\r\n                value_or_default($this->empty_path_action, \"homepage_redirect\"),\r\n                (is_array($this->languages)? serialize($this->languages) : $this->languages),\r\n\t\t\t\t(is_array($this->languages_published)? serialize($this->languages_published) : $this->languages_published),\r\n                json_encode($this->aliases),\r\n                value_or_default($this->word_separator, \"-\"),\r\n                $this->date_format,\r\n                value_or_default($this->tinymce_css, \"\"),\r\n                $this->resize_uploaded_images,\r\n                $this->comments_enabled_for,\r\n                $this->comments_default_moderator,\r\n                $this->share_files_media_browser,\r\n                value_or_default($this->page_cache, 0),\r\n                $this->tracking_scripts,\r\n                $this->additional_scripts,\r\n                $this->additional_styles,\r\n                $this->permission,\r\n                value_or_default($this->mail_mailer, \"\"),\r\n                value_or_default($this->mail_server, \"\"),\r\n                value_or_default($this->mail_port, 25),\r\n                value_or_default($this->mail_security, 0),\r\n                value_or_default($this->mail_ignore_ssl_security, 0),\r\n                value_or_default($this->mail_user, \"\"),\r\n                value_or_default($this->mail_address, \"\"),\r\n                value_or_default($this->mail_password, \"\"),\r\n                serialize($this->contact_emails),\r\n                $this->homepage,\r\n                $this->default_timezone,\r\n                value_or_default($this->metatag_title_order, 'website | category | section'),\r\n                json_encode($this->metatag_description),\r\n                json_encode($this->metatag_keywords),\r\n                json_encode($this->metatags),\r\n                value_or_default($this->favicon, 0),\r\n                value_or_default($this->decimal_separator, '.'),\r\n                value_or_default($this->thousands_separator, \"\"),\r\n                value_or_default($this->currency, \"dollar\"),\r\n                value_or_default($this->size_unit, 'cm'),\r\n                value_or_default($this->weight_unit, \"g\"),\r\n                value_or_default($this->shop_logo, 0),\r\n                json_encode(value_or_default($this->shop_address, \"\")),\r\n                json_encode(value_or_default($this->shop_legal_info, \"\")),\r\n                value_or_default($this->shop_purchase_conditions_path, \"\"),\r\n                value_or_default($this->theme, \"\"),\r\n                json_encode($this->theme_options)\r\n            )\r\n        );\r\n\r\n\t\tif(!$ok)\r\n        {\r\n            throw new Exception($DB->get_last_error());\r\n        }\r\n\r\n\t\t// try to create any missing folder\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id, 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/files', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/templates', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/thumbnails', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/webgets', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/backups', 0744, true);\r\n        @mkdir(NAVIGATE_PRIVATE.'/'.$this->id.'/cache', 0744, true);\r\n\r\n        if(method_exists($events, 'trigger'))\r\n        {\r\n            $events->trigger(\r\n                'website',\r\n                'save',\r\n                array(\r\n                    'website' => $this\r\n                )\r\n            );\r\n        }\r\n\r\n\t\t// if allowed, send statistics to navigatecms.com\r\n\t\tif(NAVIGATECMS_STATS)\r\n\t\t{\r\n\t\t\tglobal $user;\r\n\t\t\t@core_curl_post(\r\n                'http://statistics.navigatecms.com/website/update',\r\n                array(\r\n                    'ip' => $_SERVER['SERVER_ADDR'],\r\n                    'website_id' => $this->id,\r\n                    'name' => $this->name,\r\n                    'url' => $this->absolute_path(),\r\n                    'folder' => $this->folder,\r\n                    'word_separator' => $this->word_separator,\r\n                    'homepage' => $this->homepage,\r\n                    'theme' => $this->theme,\r\n                    'emails' => serialize($this->contact_emails),\r\n                    'languages' => serialize($this->languages_published),\r\n                    'permission' => $this->permission,\r\n                    'author_name' => $user->username,\r\n                    'author_email' => $user->email,\r\n                    'author_language' => $user->language\r\n                ),\r\n\t\t\t\tNULL,\r\n\t\t\t\t10,\r\n\t\t\t\t'post'\r\n            );\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n    function create_default()\r\n    {\r\n        global $DB;\r\n        global $user;\r\n\r\n        // check if there are really NO websites\r\n        $test = $DB->query_single('id', 'nv_websites');\r\n        if(!empty($test))\r\n        {\r\n            //header('location: '.NAVIGATE_MAIN.'?logout');\r\n            //core_terminate();\r\n            $this->load();\r\n            return $this;\r\n        }\r\n\r\n        $url = NAVIGATE_URL;\r\n        $url = parse_url($url);\r\n\r\n        // do we have a subdomain in the url?\r\n        if(preg_match(\"/^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}$/\", $url['host']))\r\n        {\r\n            $domain = $url['host'];\r\n            $subdomain = '';\r\n        }\r\n        else\r\n        {\r\n            $host = explode('.', $url['host']);\r\n\r\n            $domain = array_pop($host);\r\n            if(!empty($host))\r\n            {\r\n                $domain = array_pop($host) . '.' . $domain;\r\n            }\r\n\r\n            $subdomain = implode('.', $host);\r\n        }\r\n\r\n        // navigate url --> default folder\r\n        // http://localhost/navigate            -->     (empty)\r\n        // http://www.domain.com/test/navigate  -->     /test\r\n        // http://192.168.0.1/foo/foo2/navigate -->     /foo/foo2\r\n\r\n        $folder = dirname($url['path']);\r\n        if($folder=='/' || $folder=='\\\\')\r\n        {\r\n            $folder = '';\r\n        }\r\n\r\n        $this->name\t\t\t\t= APP_OWNER;\r\n\r\n        $this->protocol\t\t\t= \"http://\";\r\n        $this->subdomain\t\t= $subdomain;\r\n        $this->domain\t\t\t= $domain;\r\n        $this->folder\t\t\t= $folder;\r\n        $this->redirect_to      = '';\r\n        $this->word_separator   = '-';\r\n        $this->date_format\t\t= 'Y/m/d';\r\n        $this->homepage\t\t\t= '/en/home';\r\n        $this->permission\t\t= 0;\r\n        $this->default_timezone\t= 'UTC';\r\n        $this->contact_emails   = $user->email;\r\n\r\n        // languages and locales\r\n        $this->languages = array();\r\n        $this->languages_published = array();\r\n\r\n        $this->languages = array(\r\n\t        'en' => array(\r\n\t            'language' => 'en',\r\n\t            'variant' => '',\r\n\t            'code' => 'en',\r\n\t            'system_locale' => 'en_US.utf8'\r\n\t        )\r\n        );\r\n\r\n\t    $this->languages_published = array('en');\r\n\r\n        $this->aliases = array();\r\n        $this->theme_options = array();\r\n\r\n        $this->insert();\r\n\r\n\t    // add the just created website to user allowed websites (if he has a restricted list of sites)\r\n\t    if(!empty($user->websites))\r\n\t    {\r\n\t\t    $user->websites[] = $this->id;\r\n\t\t    $user->save();\r\n\t    }\r\n\r\n        return true;\r\n    }\r\n\r\n\tfunction language_compare($a, $b)\r\n\t{\r\n\t\tif(array_search($a->code, $this->languages_list) < array_search($b->code, $this->languages_list))\r\n        {\r\n            return -1;\r\n        }\r\n\t\telse\r\n        {\r\n            return 1;\r\n        }\r\n\t}\r\n\t\r\n\tfunction absolute_path($folder=true)\r\n\t{\t\r\n\t\t$nvweb_absolute = (empty($this->protocol)? 'http://' : $this->protocol);\r\n\r\n\t\tif(!empty($this->subdomain))\r\n        {\r\n            $nvweb_absolute .= $this->subdomain.'.';\r\n        }\r\n\r\n        $nvweb_absolute .= $this->domain;\r\n\r\n\t\tif(!empty($folder))\r\n        {\r\n            $nvweb_absolute .= $this->folder;\r\n        }\r\n\r\n\t\treturn $nvweb_absolute;\r\n\t}\r\n\t\r\n\tfunction current_time()\r\n\t{\r\n\t\t$utc = core_time();\r\n\t\t\r\n\t\t$utc_timezone = new DateTimeZone('UTC');\r\n\t\t$utc_time = new DateTime('now', $utc_timezone);\r\n\t\t$website_timezone = new DateTimeZone($this->default_timezone);\r\n\t\t//$website_time = new DateTime('now', $website_timezone);\r\n\r\n\t    $offset = $website_timezone->getOffset($utc_time);\r\n   \t\t$ts = $utc + $offset;\r\n\r\n\t\treturn $ts;\r\n\t}\r\n\r\n    public function languages()\r\n    {\r\n        $options = array();\r\n        foreach($this->languages_list as $active_language_code)\r\n        {\r\n            $options[$active_language_code] = language::name_by_code($active_language_code);\r\n        }\r\n\r\n        return $options;\r\n    }\r\n\r\n    public function content_stylesheets($format='tinymce', $name='content', $merge=false, $ws_theme=null)\r\n    {\r\n        global $theme;\r\n\r\n        if(empty($ws_theme))\r\n        {\r\n\t\t    $ws_theme = $theme;\r\n\r\n            if($this->theme != $theme->name)\r\n            {\r\n                $ws_theme = new theme();\r\n                $ws_theme->load($this->theme);\r\n            }\r\n        }\r\n\r\n        // determine stylesheets for content (website > theme + default navigate cms)\r\n        $content_css = array();\r\n\r\n        if(defined('NAVIGATE_URL'))\r\n        {\r\n            $content_css[] = NAVIGATE_URL . '/css/tools/tinymce.defaults.css';\r\n        }\r\n        else\r\n        {\r\n            $content_css[] = '/css/tools/tinymce.defaults.css';\r\n        }\r\n\r\n        // deprecated field (will be removed at some point)\r\n        if(!empty($this->tinymce_css))\r\n        {\r\n            $content_css[] = $this->tinymce_css.'?bogus='.time();\r\n        }\r\n\r\n        if(!empty($this->theme) && !empty($ws_theme))\r\n        {\r\n            $style = \"\";\r\n            if(isset($this->theme_options->style))\r\n            {\r\n                $style = @$this->theme_options->style;\r\n            }\r\n\r\n\t\t\tif(empty($style))\r\n\t\t\t{\r\n\t\t\t\t$theme_styles = get_object_vars($ws_theme->styles);\r\n\t\t\t\t$theme_styles = array_values($theme_styles);\r\n\t\t\t\t$style = $theme_styles[0]->name;\r\n\t\t\t}\r\n\r\n\t        if(($name=='content_selectable' && !isset($ws_theme->styles->$style->$name)) || empty($name))\r\n            {\r\n                $name = 'content';\r\n            }\r\n\r\n            if(!empty($style) && !empty($ws_theme->styles->$style->$name))\r\n            {\r\n                $style_content_css = explode(',', $ws_theme->styles->$style->$name);\r\n                foreach($style_content_css as $scc)\r\n                {\r\n                    if(strpos($scc, 'http')===false && defined('NAVIGATE_URL'))\r\n                    {\r\n                        $content_css[] = NAVIGATE_URL.'/themes/'.$this->theme.'/'.$scc.'?bogus='.time();\r\n                    }\r\n                    else\r\n                    {\r\n                        $content_css[] = $scc;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\t    $merge = false; // MERGE option is not completely developed\r\n\t    if($merge)\r\n\t    {\r\n\t\t    /*\r\n\t\t    $css_merged_rules = '';\r\n\t\t    $css_merged_file = 'cache/'.$website->id.'/editor_css.'.md5(json_encode($content_css)).'.css';\r\n\r\n\t\t    foreach($content_css as $csa)\r\n            {\r\n\t            $css_rules = @file_get_contents($csa);\r\n                $css_merged_rules .= $css_rules;\r\n            }\r\n\r\n\t\t    mkdir(NAVIGATE_PATH.'/cache/'.$website->id, 0744, true);\r\n\r\n\t\t    file_put_contents(NAVIGATE_PATH.'/'.$css_merged_file, $css_merged_rules);\r\n\r\n\t\t    if(!empty($css_merged))\r\n\t\t    {\r\n\t\t\t    if($format=='link_tag')\r\n\t\t\t\t    $content_css = '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.NAVIGATE_URL.'/'.$css_merged_file.'\" />'.\"\\n\";\r\n\t\t\t    else\r\n\t\t\t\t    $content_css = NAVIGATE_URL.'/'.$css_merged_file;\r\n\t\t    }\r\n\t\t    else\r\n\t\t\t    $content_css = '';\r\n\t\t    */\r\n\t    }\r\n\t\telse\r\n\t\t{\r\n\t\t\tif($format=='link_tag')\r\n            {\r\n\t            $content_html = '';\r\n\t            foreach($content_css as $csa)\r\n\t            {\r\n\t                if(!empty($csa))\r\n                    {\r\n                        $content_html .= '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.trim($csa).'\" />'.\"\\n\";\r\n                    }\r\n\t            }\r\n\r\n\t            $content_css = $content_html;\r\n\t        }\r\n\t        else if($format=='array')\r\n            {\r\n\t            // do nothing, already an array\r\n            }\r\n\t        else\r\n            {\r\n                $content_css = implode(',', $content_css);\r\n            }\r\n        }\r\n\r\n        return $content_css;\r\n    }\r\n\r\n    public function purge_cache()\r\n    {\r\n        // thumbnails\r\n        $files = glob(NAVIGATE_PRIVATE . '/'.$this->id.'/thumbnails/*x*');\r\n        for($t=0; $t < count($files); $t++)\r\n        {\r\n            @unlink($files[$t]);\r\n        }\r\n\r\n        // feeds\r\n        $files = glob(NAVIGATE_PRIVATE . '/'.$this->id.'/cache/*.feed');\r\n        for($t=0; $t < count($files); $t++)\r\n        {\r\n            @unlink($files[$t]);\r\n        }\r\n\r\n        $this->purge_pages_cache();\r\n    }\r\n\r\n    public function purge_pages_cache()\r\n    {\r\n        $files = glob(NAVIGATE_PRIVATE . '/'.$this->id.'/cache/*.page');\r\n        for($t=0; $t < count($files); $t++)\r\n        {\r\n            @unlink($files[$t]);\r\n        }\r\n    }\r\n\r\n    public function bind_events()\r\n    {\r\n        global $events;\r\n\r\n        $events->bind('website', 'save', 'website', array($this, 'purge_cache'));\r\n        // note: on delete event is not necessary to purge cache, as the whole private folder is removed\r\n\r\n        $events->bind('item', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('item', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('block', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('block', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('structure', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('structure', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('feed', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('feed', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('comment', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('comment', 'delete', 'website', array($this, 'purge_cache'));\r\n\r\n        $events->bind('product', 'save', 'website', array($this, 'purge_cache'));\r\n        $events->bind('product', 'delete', 'website', array($this, 'purge_cache'));\r\n    }\r\n\r\n    // check if we need to execute any programmed event\r\n    public function cron()\r\n    {\r\n        global $current;\r\n        global $events;\r\n\r\n        $website_cron_path = NAVIGATE_PRIVATE . '/'.$this->id.'/cache/website.cron';\r\n\r\n        $last_cron = null;\r\n        if(file_exists($website_cron_path))\r\n        {\r\n            $last_cron = file_get_contents($website_cron_path);\r\n        }\r\n\r\n        // we only run the following checks once a minute (on the next visit)\r\n        // when was the last cron execution?\r\n        if(is_null($last_cron))\r\n        {\r\n            file_put_contents($website_cron_path, core_time());\r\n        }\r\n        else if(($last_cron + 60 < core_time()))\r\n        {\r\n            // if cache is enabled and there was a programmed publication (item, structure, block, product) since the last visit or cron execution\r\n            // then purge the cache\r\n            if($current['pagecache_enabled'])\r\n            {\r\n                $next_change = $this->find_next_publication_event_time($last_cron);\r\n                if(!empty($next_change))\r\n                {\r\n                    if($next_change < core_time()) // the change had to happen since the last cron execution?\r\n                    {\r\n                        $this->purge_cache();\r\n                    }\r\n                    // else, the change will happen at a later time, the current cache is still valid\r\n                }\r\n            }\r\n\r\n            // remove very old PHP session files (TODO: that should be executed once a day, not every minute)\r\n            core_remove_sessions(365); // 365 days\r\n\r\n            $events->trigger('website', 'cron', array());\r\n\r\n            file_put_contents($website_cron_path, core_time());\r\n        }\r\n    }\r\n\r\n    public function find_next_publication_event_time($from_time=null)\r\n    {\r\n        global $DB;\r\n\r\n        $next_change = PHP_INT_MAX; // set the largest integer, a very very far date in the future\r\n\r\n        // item: date_published\r\n\r\n        if(is_null($from_time))\r\n        {\r\n            $from_time = core_time();\r\n        }\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_items\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        $rsnc = intval($rsnc[0]);\r\n\r\n        if(!empty($rsnc))\r\n        {\r\n            $next_change = $rsnc;\r\n        }\r\n\r\n        // item: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_items\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n        // structure: date_published\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_structure\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // structure: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_structure\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // block: date_published\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_blocks\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // block: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_blocks\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // product: date_published\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_published) AS next_change \r\n            FROM nv_products\r\n            WHERE website = '.$this->id.' AND (date_published > '.$from_time.')\r\n            ORDER BY date_published ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n\r\n        // product: date_unpublish\r\n\r\n        $DB->query('\r\n            SELECT MIN(date_unpublish) AS next_change \r\n            FROM nv_products\r\n            WHERE website = '.$this->id.' AND (date_unpublish > '.$from_time.')\r\n            ORDER BY date_unpublish ASC\r\n            LIMIT 1\r\n        ');\r\n\r\n        $rsnc = $DB->result('next_change');\r\n        if($next_change > intval($rsnc[0]) && !empty($rsnc[0]))\r\n        {\r\n            $next_change = intval($rsnc[0]);\r\n        }\r\n\r\n        if(!$next_change || $next_change == PHP_INT_MAX)\r\n        {\r\n            $next_change = 0;\r\n        } // no publication event found!\r\n\r\n        return $next_change;\r\n    }\r\n\r\n    public function backup($type='json')\r\n    {\r\n        global $DB;\r\n        global $website;\r\n\r\n        $out = array();\r\n\r\n        $DB->query('SELECT * FROM nv_websites WHERE id = '.intval($website->id), 'object');\r\n\r\n        if($type='json')\r\n        {\r\n            $out = json_encode($DB->result());\r\n        }\r\n\r\n        return $out;\r\n    }\r\n\r\n    public function windows_locales()\r\n    {\r\n        global $session;\r\n\r\n        // http://www.microsoft.com/resources/msdn/goglobal/default.mspx?submitted=3409&OS=Windows+Vista\r\n        $win_loc = '{   \"af\":{\"id\":\"0x0036\",\"lang_name\":\"Afrikaans\",\"country\":\"ZAF\",\"locale\":\"AFK_ZAF\"},\r\n                        \"af-ZA\":{\"id\":\"0x0436\",\"lang_name\":\"Afrikaans\",\"country\":\"ZAF\",\"locale\":\"AFK_ZAF\"},\r\n                        \"sq\":{\"id\":\"0x001C\",\"lang_name\":\"Albanian\",\"country\":\"ALB\",\"locale\":\"SQI_ALB\"},\r\n                        \"sq-AL\":{\"id\":\"0x041C\",\"lang_name\":\"Albanian\",\"country\":\"ALB\",\"locale\":\"SQI_ALB\"},\r\n                        \"gsw\":{\"id\":\"0x0084\",\"lang_name\":\"Alsatian\",\"country\":\"FRA\",\"locale\":\"GSW_FRA\"},\r\n                        \"gsw-FR\":{\"id\":\"0x0484\",\"lang_name\":\"Alsatian\",\"country\":\"FRA\",\"locale\":\"GSW_FRA\"},\r\n                        \"am\":{\"id\":\"0x005E\",\"lang_name\":\"Amharic\",\"country\":\"ETH\",\"locale\":\"AMH_ETH\"},\r\n                        \"am-ET\":{\"id\":\"0x045E\",\"lang_name\":\"Amharic\",\"country\":\"ETH\",\"locale\":\"AMH_ETH\"},\r\n                        \"ar\":{\"id\":\"0x0001\",\"lang_name\":\"Arabic\",\"country\":\"SAU\",\"locale\":\"ARA_SAU\"},\r\n                        \"ar-DZ\":{\"id\":\"0x1401\",\"lang_name\":\"Arabic\",\"country\":\"DZA\",\"locale\":\"ARG_DZA\"},\r\n                        \"ar-BH\":{\"id\":\"0x3C01\",\"lang_name\":\"Arabic\",\"country\":\"BHR\",\"locale\":\"ARH_BHR\"},\r\n                        \"ar-EG\":{\"id\":\"0x0C01\",\"lang_name\":\"Arabic\",\"country\":\"EGY\",\"locale\":\"ARE_EGY\"},\r\n                        \"ar-IQ\":{\"id\":\"0x0801\",\"lang_name\":\"Arabic\",\"country\":\"IRQ\",\"locale\":\"ARI_IRQ\"},\r\n                        \"ar-JO\":{\"id\":\"0x2C01\",\"lang_name\":\"Arabic\",\"country\":\"JOR\",\"locale\":\"ARJ_JOR\"},\r\n                        \"ar-KW\":{\"id\":\"0x3401\",\"lang_name\":\"Arabic\",\"country\":\"KWT\",\"locale\":\"ARK_KWT\"},\r\n                        \"ar-LB\":{\"id\":\"0x3001\",\"lang_name\":\"Arabic\",\"country\":\"LBN\",\"locale\":\"ARB_LBN\"},\r\n                        \"ar-LY\":{\"id\":\"0x1001\",\"lang_name\":\"Arabic\",\"country\":\"LBY\",\"locale\":\"ARL_LBY\"},\r\n                        \"ar-MA\":{\"id\":\"0x1801\",\"lang_name\":\"Arabic\",\"country\":\"MAR\",\"locale\":\"ARM_MAR\"},\r\n                        \"ar-OM\":{\"id\":\"0x2001\",\"lang_name\":\"Arabic\",\"country\":\"OMN\",\"locale\":\"ARO_OMN\"},\r\n                        \"ar-QA\":{\"id\":\"0x4001\",\"lang_name\":\"Arabic\",\"country\":\"QAT\",\"locale\":\"ARQ_QAT\"},\r\n                        \"ar-SA\":{\"id\":\"0x0401\",\"lang_name\":\"Arabic\",\"country\":\"SAU\",\"locale\":\"ARA_SAU\"},\r\n                        \"ar-SY\":{\"id\":\"0x2801\",\"lang_name\":\"Arabic\",\"country\":\"SYR\",\"locale\":\"ARS_SYR\"},\r\n                        \"ar-TN\":{\"id\":\"0x1C01\",\"lang_name\":\"Arabic\",\"country\":\"TUN\",\"locale\":\"ART_TUN\"},\r\n                        \"ar-AE\":{\"id\":\"0x3801\",\"lang_name\":\"Arabic\",\"country\":\"ARE\",\"locale\":\"ARU_ARE\"},\r\n                        \"ar-YE\":{\"id\":\"0x2401\",\"lang_name\":\"Arabic\",\"country\":\"YEM\",\"locale\":\"ARY_YEM\"},\r\n                        \"hy\":{\"id\":\"0x002B\",\"lang_name\":\"Armenian\",\"country\":\"ARM\",\"locale\":\"HYE_ARM\"},\r\n                        \"hy-AM\":{\"id\":\"0x042B\",\"lang_name\":\"Armenian\",\"country\":\"ARM\",\"locale\":\"HYE_ARM\"},\r\n                        \"as\":{\"id\":\"0x004D\",\"lang_name\":\"Assamese\",\"country\":\"IND\",\"locale\":\"ASM_IND\"},\r\n                        \"as-IN\":{\"id\":\"0x044D\",\"lang_name\":\"Assamese\",\"country\":\"IND\",\"locale\":\"ASM_IND\"},\r\n                        \"az\":{\"id\":\"0x002C\",\"lang_name\":\"Azeri (Latin)\",\"country\":\"AZE\",\"locale\":\"AZE_AZE\"},\r\n                        \"az-Cyrl\":{\"id\":\"0x742C\",\"lang_name\":\"Azeri (Cyrillic)\",\"country\":\"AZE\",\"locale\":\"AZC_AZE\"},\r\n                        \"az-Cyrl-AZ\":{\"id\":\"0x082C\",\"lang_name\":\"Azeri (Cyrillic)\",\"country\":\"AZE\",\"locale\":\"AZC_AZE\"},\r\n                        \"az-Latn\":{\"id\":\"0x782C\",\"lang_name\":\"Azeri (Latin)\",\"country\":\"AZE\",\"locale\":\"AZE_AZE\"},\r\n                        \"az-Latn-AZ\":{\"id\":\"0x042C\",\"lang_name\":\"Azeri (Latin)\",\"country\":\"AZE\",\"locale\":\"AZE_AZE\"},\r\n                        \"ba\":{\"id\":\"0x006D\",\"lang_name\":\"Bashkir\",\"country\":\"RUS\",\"locale\":\"BAS_RUS\"},\r\n                        \"ba-RU\":{\"id\":\"0x046D\",\"lang_name\":\"Bashkir\",\"country\":\"RUS\",\"locale\":\"BAS_RUS\"},\r\n                        \"eu\":{\"id\":\"0x002D\",\"lang_name\":\"Basque\",\"country\":\"ESP\",\"locale\":\"EUQ_ESP\"},\r\n                        \"eu-ES\":{\"id\":\"0x042D\",\"lang_name\":\"Basque\",\"country\":\"ESP\",\"locale\":\"EUQ_ESP\"},\r\n                        \"be\":{\"id\":\"0x0023\",\"lang_name\":\"Belarusian\",\"country\":\"BLR\",\"locale\":\"BEL_BLR\"},\r\n                        \"be-BY\":{\"id\":\"0x0423\",\"lang_name\":\"Belarusian\",\"country\":\"BLR\",\"locale\":\"BEL_BLR\"},\r\n                        \"bn\":{\"id\":\"0x0045\",\"lang_name\":\"Bengali\",\"country\":\"IND\",\"locale\":\"BNG_IND\"},\r\n                        \"bn-BD\":{\"id\":\"0x0845\",\"lang_name\":\"Bengali\",\"country\":\"BGD\",\"locale\":\"BNB_BGD\"},\r\n                        \"bn-IN\":{\"id\":\"0x0445\",\"lang_name\":\"Bengali\",\"country\":\"IND\",\"locale\":\"BNG_IND\"},\r\n                        \"bs\":{\"id\":\"0x781A\",\"lang_name\":\"Bosnian (Latin)\",\"country\":\"BIH\",\"locale\":\"BSB_BIH\"},\r\n                        \"bs-Cyrl\":{\"id\":\"0x641A\",\"lang_name\":\"Bosnian (Cyrillic)\",\"country\":\"BIH\",\"locale\":\"BSC_BIH\"},\r\n                        \"bs-Cyrl-BA\":{\"id\":\"0x201A\",\"lang_name\":\"Bosnian (Cyrillic)\",\"country\":\"BIH\",\"locale\":\"BSC_BIH\"},\r\n                        \"bs-Latn\":{\"id\":\"0x681A\",\"lang_name\":\"Bosnian (Latin)\",\"country\":\"BIH\",\"locale\":\"BSB_BIH\"},\r\n                        \"bs-Latn-BA\":{\"id\":\"0x141A\",\"lang_name\":\"Bosnian (Latin)\",\"country\":\"BIH\",\"locale\":\"BSB_BIH\"},\r\n                        \"br\":{\"id\":\"0x007E\",\"lang_name\":\"Breton\",\"country\":\"FRA\",\"locale\":\"BRE_FRA\"},\r\n                        \"br-FR\":{\"id\":\"0x047E\",\"lang_name\":\"Breton\",\"country\":\"FRA\",\"locale\":\"BRE_FRA\"},\r\n                        \"bg\":{\"id\":\"0x0002\",\"lang_name\":\"Bulgarian\",\"country\":\"BGR\",\"locale\":\"BGR_BGR\"},\r\n                        \"bg-BG\":{\"id\":\"0x0402\",\"lang_name\":\"Bulgarian\",\"country\":\"BGR\",\"locale\":\"BGR_BGR\"},\r\n                        \"ca\":{\"id\":\"0x0003\",\"lang_name\":\"Catalan\",\"country\":\"ESP\",\"locale\":\"CAT_ESP\"},\r\n                        \"ca-ES\":{\"id\":\"0x0403\",\"lang_name\":\"Catalan\",\"country\":\"ESP\",\"locale\":\"CAT_ESP\"},\r\n                        \"zh\":{\"id\":\"0x7804\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"CHN\",\"locale\":\"CHS_CHN\"},\r\n                        \"zh-Hans\":{\"id\":\"0x0004\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"CHN\",\"locale\":\"CHS_CHN\"},\r\n                        \"zh-CN\":{\"id\":\"0x0804\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"CHN\",\"locale\":\"CHS_CHN\"},\r\n                        \"zh-SG\":{\"id\":\"0x1004\",\"lang_name\":\"Chinese (Simplified)\",\"country\":\"SGP\",\"locale\":\"ZHI_SGP\"},\r\n                        \"zh-Hant\":{\"id\":\"0x7C04\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"HKG\",\"locale\":\"ZHH_HKG\"},\r\n                        \"zh-HK\":{\"id\":\"0x0C04\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"HKG\",\"locale\":\"ZHH_HKG\"},\r\n                        \"zh-MO\":{\"id\":\"0x1404\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"MCO\",\"locale\":\"ZHM_MCO\"},\r\n                        \"zh-TW\":{\"id\":\"0x0404\",\"lang_name\":\"Chinese (Traditional)\",\"country\":\"TWN\",\"locale\":\"CHT_TWN\"},\r\n                        \"co\":{\"id\":\"0x0083\",\"lang_name\":\"Corsican\",\"country\":\"FRA\",\"locale\":\"COS_FRA\"},\r\n                        \"co-FR\":{\"id\":\"0x0483\",\"lang_name\":\"Corsican\",\"country\":\"FRA\",\"locale\":\"COS_FRA\"},\r\n                        \"hr\":{\"id\":\"0x001A\",\"lang_name\":\"Croatian\",\"country\":\"HRV\",\"locale\":\"HRV_HRV\"},\r\n                        \"hr-HR\":{\"id\":\"0x041A\",\"lang_name\":\"Croatian\",\"country\":\"HRV\",\"locale\":\"HRV_HRV\"},\r\n                        \"hr-BA\":{\"id\":\"0x101A\",\"lang_name\":\"Croatian (Latin)\",\"country\":\"BIH\",\"locale\":\"HRB_BIH\"},\r\n                        \"cs\":{\"id\":\"0x0005\",\"lang_name\":\"Czech\",\"country\":\"CZE\",\"locale\":\"CSY_CZE\"},\r\n                        \"cs-CZ\":{\"id\":\"0x0405\",\"lang_name\":\"Czech\",\"country\":\"CZE\",\"locale\":\"CSY_CZE\"},\r\n                        \"da\":{\"id\":\"0x0006\",\"lang_name\":\"Danish\",\"country\":\"DNK\",\"locale\":\"DAN_DNK\"},\r\n                        \"da-DK\":{\"id\":\"0x0406\",\"lang_name\":\"Danish\",\"country\":\"DNK\",\"locale\":\"DAN_DNK\"},\r\n                        \"prs\":{\"id\":\"0x008C\",\"lang_name\":\"Dari\",\"country\":\"AFG\",\"locale\":\"PRS_AFG\"},\r\n                        \"prs-AF\":{\"id\":\"0x048C\",\"lang_name\":\"Dari\",\"country\":\"AFG\",\"locale\":\"PRS_AFG\"},\r\n                        \"dv\":{\"id\":\"0x0065\",\"lang_name\":\"Divehi\",\"country\":\"MDV\",\"locale\":\"DIV_MDV\"},\r\n                        \"dv-MV\":{\"id\":\"0x0465\",\"lang_name\":\"Divehi\",\"country\":\"MDV\",\"locale\":\"DIV_MDV\"},\r\n                        \"nl\":{\"id\":\"0x0013\",\"lang_name\":\"Dutch\",\"country\":\"NLD\",\"locale\":\"NLD_NLD\"},\r\n                        \"nl-BE\":{\"id\":\"0x0813\",\"lang_name\":\"Dutch\",\"country\":\"BEL\",\"locale\":\"NLB_BEL\"},\r\n                        \"nl-NL\":{\"id\":\"0x0413\",\"lang_name\":\"Dutch\",\"country\":\"NLD\",\"locale\":\"NLD_NLD\"},\r\n                        \"en\":{\"id\":\"0x0009\",\"lang_name\":\"English\",\"country\":\"USA\",\"locale\":\"ENU_USA\"},\r\n                        \"en-AU\":{\"id\":\"0x0C09\",\"lang_name\":\"English\",\"country\":\"AUS\",\"locale\":\"ENA_AUS\"},\r\n                        \"en-BZ\":{\"id\":\"0x2809\",\"lang_name\":\"English\",\"country\":\"BLZ\",\"locale\":\"ENL_BLZ\"},\r\n                        \"en-CA\":{\"id\":\"0x1009\",\"lang_name\":\"English\",\"country\":\"CAN\",\"locale\":\"ENC_CAN\"},\r\n                        \"en-029\":{\"id\":\"0x2409\",\"lang_name\":\"English\",\"country\":\"CAR\",\"locale\":\"ENB_CAR\"},\r\n                        \"en-IN\":{\"id\":\"0x4009\",\"lang_name\":\"English\",\"country\":\"IND\",\"locale\":\"ENN_IND\"},\r\n                        \"en-IE\":{\"id\":\"0x1809\",\"lang_name\":\"English\",\"country\":\"IRL\",\"locale\":\"ENI_IRL\"},\r\n                        \"en-JM\":{\"id\":\"0x2009\",\"lang_name\":\"English\",\"country\":\"JAM\",\"locale\":\"ENJ_JAM\"},\r\n                        \"en-MY\":{\"id\":\"0x4409\",\"lang_name\":\"English\",\"country\":\"MYS\",\"locale\":\"ENM_MYS\"},\r\n                        \"en-NZ\":{\"id\":\"0x1409\",\"lang_name\":\"English\",\"country\":\"NZL\",\"locale\":\"ENZ_NZL\"},\r\n                        \"en-PH\":{\"id\":\"0x3409\",\"lang_name\":\"English\",\"country\":\"PHL\",\"locale\":\"ENP_PHL\"},\r\n                        \"en-SG\":{\"id\":\"0x4809\",\"lang_name\":\"English\",\"country\":\"SGP\",\"locale\":\"ENE_SGP\"},\r\n                        \"en-ZA\":{\"id\":\"0x1C09\",\"lang_name\":\"English\",\"country\":\"ZAF\",\"locale\":\"ENS_ZAF\"},\r\n                        \"en-TT\":{\"id\":\"0x2C09\",\"lang_name\":\"English\",\"country\":\"TTO\",\"locale\":\"ENT_TTO\"},\r\n                        \"en-GB\":{\"id\":\"0x0809\",\"lang_name\":\"English\",\"country\":\"GBR\",\"locale\":\"ENG_GBR\"},\r\n                        \"en-US\":{\"id\":\"0x0409\",\"lang_name\":\"English\",\"country\":\"USA\",\"locale\":\"ENU_USA\"},\r\n                        \"en-ZW\":{\"id\":\"0x3009\",\"lang_name\":\"English\",\"country\":\"ZWE\",\"locale\":\"ENW_ZWE\"},\r\n                        \"et\":{\"id\":\"0x0025\",\"lang_name\":\"Estonian\",\"country\":\"EST\",\"locale\":\"ETI_EST\"},\r\n                        \"et-EE\":{\"id\":\"0x0425\",\"lang_name\":\"Estonian\",\"country\":\"EST\",\"locale\":\"ETI_EST\"},\r\n                        \"fo\":{\"id\":\"0x0038\",\"lang_name\":\"Faroese\",\"country\":\"FRO\",\"locale\":\"FOS_FRO\"},\r\n                        \"fo-FO\":{\"id\":\"0x0438\",\"lang_name\":\"Faroese\",\"country\":\"FRO\",\"locale\":\"FOS_FRO\"},\r\n                        \"fil\":{\"id\":\"0x0064\",\"lang_name\":\"Filipino\",\"country\":\"PHL\",\"locale\":\"FPO_PHL\"},\r\n                        \"fil-PH\":{\"id\":\"0x0464\",\"lang_name\":\"Filipino\",\"country\":\"PHL\",\"locale\":\"FPO_PHL\"},\r\n                        \"fi\":{\"id\":\"0x000B\",\"lang_name\":\"Finnish\",\"country\":\"FIN\",\"locale\":\"FIN_FIN\"},\r\n                        \"fi-FI\":{\"id\":\"0x040B\",\"lang_name\":\"Finnish\",\"country\":\"FIN\",\"locale\":\"FIN_FIN\"},\r\n                        \"fr\":{\"id\":\"0x000C\",\"lang_name\":\"French\",\"country\":\"FRA\",\"locale\":\"FRA_FRA\"},\r\n                        \"fr-BE\":{\"id\":\"0x080C\",\"lang_name\":\"French\",\"country\":\"BEL\",\"locale\":\"FRB_BEL\"},\r\n                        \"fr-CA\":{\"id\":\"0x0C0C\",\"lang_name\":\"French\",\"country\":\"CAN\",\"locale\":\"FRC_CAN\"},\r\n                        \"fr-FR\":{\"id\":\"0x040C\",\"lang_name\":\"French\",\"country\":\"FRA\",\"locale\":\"FRA_FRA\"},\r\n                        \"fr-LU\":{\"id\":\"0x140C\",\"lang_name\":\"French\",\"country\":\"LUX\",\"locale\":\"FRL_LUX\"},\r\n                        \"fr-MC\":{\"id\":\"0x180C\",\"lang_name\":\"French\",\"country\":\"MCO\",\"locale\":\"FRM_MCO\"},\r\n                        \"fr-CH\":{\"id\":\"0x100C\",\"lang_name\":\"French\",\"country\":\"CHE\",\"locale\":\"FRS_CHE\"},\r\n                        \"fy\":{\"id\":\"0x0062\",\"lang_name\":\"Frisian\",\"country\":\"NLD\",\"locale\":\"FYN_NLD\"},\r\n                        \"fy-NL\":{\"id\":\"0x0462\",\"lang_name\":\"Frisian\",\"country\":\"NLD\",\"locale\":\"FYN_NLD\"},\r\n                        \"gl\":{\"id\":\"0x0056\",\"lang_name\":\"Galician\",\"country\":\"ESP\",\"locale\":\"GLC_ESP\"},\r\n                        \"gl-ES\":{\"id\":\"0x0456\",\"lang_name\":\"Galician\",\"country\":\"ESP\",\"locale\":\"GLC_ESP\"},\r\n                        \"ka\":{\"id\":\"0x0037\",\"lang_name\":\"Georgian\",\"country\":\"GEO\",\"locale\":\"KAT_GEO\"},\r\n                        \"ka-GE\":{\"id\":\"0x0437\",\"lang_name\":\"Georgian\",\"country\":\"GEO\",\"locale\":\"KAT_GEO\"},\r\n                        \"de\":{\"id\":\"0x0007\",\"lang_name\":\"German\",\"country\":\"DEU\",\"locale\":\"DEU_DEU\"},\r\n                        \"de-AT\":{\"id\":\"0x0C07\",\"lang_name\":\"German\",\"country\":\"AUT\",\"locale\":\"DEA_AUT\"},\r\n                        \"de-DE\":{\"id\":\"0x0407\",\"lang_name\":\"German\",\"country\":\"DEU\",\"locale\":\"DEU_DEU\"},\r\n                        \"de-LI\":{\"id\":\"0x1407\",\"lang_name\":\"German\",\"country\":\"LIE\",\"locale\":\"DEC_LIE\"},\r\n                        \"de-LU\":{\"id\":\"0x1007\",\"lang_name\":\"German\",\"country\":\"LUX\",\"locale\":\"DEL_LUX\"},\r\n                        \"de-CH\":{\"id\":\"0x0807\",\"lang_name\":\"German\",\"country\":\"CHE\",\"locale\":\"DES_CHE\"},\r\n                        \"el\":{\"id\":\"0x0008\",\"lang_name\":\"Greek\",\"country\":\"GRC\",\"locale\":\"ELL_GRC\"},\r\n                        \"el-GR\":{\"id\":\"0x0408\",\"lang_name\":\"Greek\",\"country\":\"GRC\",\"locale\":\"ELL_GRC\"},\r\n                        \"kl\":{\"id\":\"0x006F\",\"lang_name\":\"Greenlandic\",\"country\":\"GRL\",\"locale\":\"KAL_GRL\"},\r\n                        \"kl-GL\":{\"id\":\"0x046F\",\"lang_name\":\"Greenlandic\",\"country\":\"GRL\",\"locale\":\"KAL_GRL\"},\r\n                        \"gu\":{\"id\":\"0x0047\",\"lang_name\":\"Gujarati\",\"country\":\"IND\",\"locale\":\"GUJ_IND\"},\r\n                        \"gu-IN\":{\"id\":\"0x0447\",\"lang_name\":\"Gujarati\",\"country\":\"IND\",\"locale\":\"GUJ_IND\"},\r\n                        \"ha\":{\"id\":\"0x0068\",\"lang_name\":\"Hausa (Latin)\",\"country\":\"NGA\",\"locale\":\"HAU_NGA\"},\r\n                        \"ha-Latn\":{\"id\":\"0x7C68\",\"lang_name\":\"Hausa (Latin)\",\"country\":\"NGA\",\"locale\":\"HAU_NGA\"},\r\n                        \"ha-Latn-NG\":{\"id\":\"0x0468\",\"lang_name\":\"Hausa (Latin)\",\"country\":\"NGA\",\"locale\":\"HAU_NGA\"},\r\n                        \"he\":{\"id\":\"0x000D\",\"lang_name\":\"Hebrew\",\"country\":\"ISR\",\"locale\":\"HEB_ISR\"},\r\n                        \"he-IL\":{\"id\":\"0x040D\",\"lang_name\":\"Hebrew\",\"country\":\"ISR\",\"locale\":\"HEB_ISR\"},\r\n                        \"hi\":{\"id\":\"0x0039\",\"lang_name\":\"Hindi\",\"country\":\"IND\",\"locale\":\"HIN_IND\"},\r\n                        \"hi-IN\":{\"id\":\"0x0439\",\"lang_name\":\"Hindi\",\"country\":\"IND\",\"locale\":\"HIN_IND\"},\r\n                        \"hu\":{\"id\":\"0x000E\",\"lang_name\":\"Hungarian\",\"country\":\"HUN\",\"locale\":\"HUN_HUN\"},\r\n                        \"hu-HU\":{\"id\":\"0x040E\",\"lang_name\":\"Hungarian\",\"country\":\"HUN\",\"locale\":\"HUN_HUN\"},\r\n                        \"is\":{\"id\":\"0x000F\",\"lang_name\":\"Icelandic\",\"country\":\"ISL\",\"locale\":\"ISL_ISL\"},\r\n                        \"is-IS\":{\"id\":\"0x040F\",\"lang_name\":\"Icelandic\",\"country\":\"ISL\",\"locale\":\"ISL_ISL\"},\r\n                        \"ig\":{\"id\":\"0x0070\",\"lang_name\":\"Igbo\",\"country\":\"NGA\",\"locale\":\"IBO_NGA\"},\r\n                        \"ig-NG\":{\"id\":\"0x0470\",\"lang_name\":\"Igbo\",\"country\":\"NGA\",\"locale\":\"IBO_NGA\"},\r\n                        \"id\":{\"id\":\"0x0021\",\"lang_name\":\"Indonesian\",\"country\":\"IDN\",\"locale\":\"IND_IDN\"},\r\n                        \"id-ID\":{\"id\":\"0x0421\",\"lang_name\":\"Indonesian\",\"country\":\"IDN\",\"locale\":\"IND_IDN\"},\r\n                        \"iu\":{\"id\":\"0x005D\",\"lang_name\":\"Inuktitut (Latin)\",\"country\":\"CAN\",\"locale\":\"IUK_CAN\"},\r\n                        \"iu-Latn\":{\"id\":\"0x7C5D\",\"lang_name\":\"Inuktitut (Latin)\",\"country\":\"CAN\",\"locale\":\"IUK_CAN\"},\r\n                        \"iu-Latn-CA\":{\"id\":\"0x085D\",\"lang_name\":\"Inuktitut (Latin)\",\"country\":\"CAN\",\"locale\":\"IUK_CAN\"},\r\n                        \"iu-Cans\":{\"id\":\"0x785D\",\"lang_name\":\"Inuktitut (Syllabics)\",\"country\":\"CAN\",\"locale\":\"IUS_CAN\"},\r\n                        \"iu-Cans-CA\":{\"id\":\"0x045D\",\"lang_name\":\"Inuktitut (Syllabics)\",\"country\":\"CAN\",\"locale\":\"IUS_CAN\"},\r\n                        \"ga\":{\"id\":\"0x003C\",\"lang_name\":\"Irish\",\"country\":\"IRL\",\"locale\":\"IRE_IRL\"},\r\n                        \"ga-IE\":{\"id\":\"0x083C\",\"lang_name\":\"Irish\",\"country\":\"IRL\",\"locale\":\"IRE_IRL\"},\r\n                        \"xh\":{\"id\":\"0x0034\",\"lang_name\":\"isiXhosa\",\"country\":\"ZAF\",\"locale\":\"XHO_ZAF\"},\r\n                        \"xh-ZA\":{\"id\":\"0x0434\",\"lang_name\":\"isiXhosa\",\"country\":\"ZAF\",\"locale\":\"XHO_ZAF\"},\r\n                        \"zu\":{\"id\":\"0x0035\",\"lang_name\":\"isiZulu\",\"country\":\"ZAF\",\"locale\":\"ZUL_ZAF\"},\r\n                        \"zu-ZA\":{\"id\":\"0x0435\",\"lang_name\":\"isiZulu\",\"country\":\"ZAF\",\"locale\":\"ZUL_ZAF\"},\r\n                        \"it\":{\"id\":\"0x0010\",\"lang_name\":\"Italian\",\"country\":\"ITA\",\"locale\":\"ITA_ITA\"},\r\n                        \"it-IT\":{\"id\":\"0x0410\",\"lang_name\":\"Italian\",\"country\":\"ITA\",\"locale\":\"ITA_ITA\"},\r\n                        \"it-CH\":{\"id\":\"0x0810\",\"lang_name\":\"Italian\",\"country\":\"CHE\",\"locale\":\"ITS_CHE\"},\r\n                        \"ja\":{\"id\":\"0x0011\",\"lang_name\":\"Japanese\",\"country\":\"JPN\",\"locale\":\"JPN_JPN\"},\r\n                        \"ja-JP\":{\"id\":\"0x0411\",\"lang_name\":\"Japanese\",\"country\":\"JPN\",\"locale\":\"JPN_JPN\"},\r\n                        \"kn\":{\"id\":\"0x004B\",\"lang_name\":\"Kannada\",\"country\":\"IND\",\"locale\":\"KDI_IND\"},\r\n                        \"kn-IN\":{\"id\":\"0x044B\",\"lang_name\":\"Kannada\",\"country\":\"IND\",\"locale\":\"KDI_IND\"},\r\n                        \"kk\":{\"id\":\"0x003F\",\"lang_name\":\"Kazakh\",\"country\":\"KAZ\",\"locale\":\"KKZ_KAZ\"},\r\n                        \"kk-KZ\":{\"id\":\"0x043F\",\"lang_name\":\"Kazakh\",\"country\":\"KAZ\",\"locale\":\"KKZ_KAZ\"},\r\n                        \"km\":{\"id\":\"0x0053\",\"lang_name\":\"Khmer\",\"country\":\"KHM\",\"locale\":\"KHM_KHM\"},\r\n                        \"km-KH\":{\"id\":\"0x0453\",\"lang_name\":\"Khmer\",\"country\":\"KHM\",\"locale\":\"KHM_KHM\"},\r\n                        \"qut\":{\"id\":\"0x0086\",\"lang_name\":\"K\\'iche\",\"country\":\"GTM\",\"locale\":\"QUT_GTM\"},\r\n                        \"qut-GT\":{\"id\":\"0x0486\",\"lang_name\":\"K\\'iche\",\"country\":\"GTM\",\"locale\":\"QUT_GTM\"},\r\n                        \"rw\":{\"id\":\"0x0087\",\"lang_name\":\"Kinyarwanda\",\"country\":\"RWA\",\"locale\":\"KIN_RWA\"},\r\n                        \"rw-RW\":{\"id\":\"0x0487\",\"lang_name\":\"Kinyarwanda\",\"country\":\"RWA\",\"locale\":\"KIN_RWA\"},\r\n                        \"sw\":{\"id\":\"0x0041\",\"lang_name\":\"Kiswahili\",\"country\":\"KEN\",\"locale\":\"SWK_KEN\"},\r\n                        \"sw-KE\":{\"id\":\"0x0441\",\"lang_name\":\"Kiswahili\",\"country\":\"KEN\",\"locale\":\"SWK_KEN\"},\r\n                        \"kok\":{\"id\":\"0x0057\",\"lang_name\":\"Konkani\",\"country\":\"IND\",\"locale\":\"KNK_IND\"},\r\n                        \"kok-IN\":{\"id\":\"0x0457\",\"lang_name\":\"Konkani\",\"country\":\"IND\",\"locale\":\"KNK_IND\"},\r\n                        \"ko\":{\"id\":\"0x0012\",\"lang_name\":\"Korean\",\"country\":\"KOR\",\"locale\":\"KOR_KOR\"},\r\n                        \"ko-KR\":{\"id\":\"0x0412\",\"lang_name\":\"Korean\",\"country\":\"KOR\",\"locale\":\"KOR_KOR\"},\r\n                        \"ky\":{\"id\":\"0x0040\",\"lang_name\":\"Kyrgyz\",\"country\":\"KGZ\",\"locale\":\"KYR_KGZ\"},\r\n                        \"ky-KG\":{\"id\":\"0x0440\",\"lang_name\":\"Kyrgyz\",\"country\":\"KGZ\",\"locale\":\"KYR_KGZ\"},\r\n                        \"lo\":{\"id\":\"0x0054\",\"lang_name\":\"Lao\",\"country\":\"LAO\",\"locale\":\"LAO_LAO\"},\r\n                        \"lo-LA\":{\"id\":\"0x0454\",\"lang_name\":\"Lao\",\"country\":\"LAO\",\"locale\":\"LAO_LAO\"},\r\n                        \"lv\":{\"id\":\"0x0026\",\"lang_name\":\"Latvian\",\"country\":\"LVA\",\"locale\":\"LVI_LVA\"},\r\n                        \"lv-LV\":{\"id\":\"0x0426\",\"lang_name\":\"Latvian\",\"country\":\"LVA\",\"locale\":\"LVI_LVA\"},\r\n                        \"lt\":{\"id\":\"0x0027\",\"lang_name\":\"Lithuanian\",\"country\":\"LTU\",\"locale\":\"LTH_LTU\"},\r\n                        \"lt-LT\":{\"id\":\"0x0427\",\"lang_name\":\"Lithuanian\",\"country\":\"LTU\",\"locale\":\"LTH_LTU\"},\r\n                        \"dsb\":{\"id\":\"0x7C2E\",\"lang_name\":\"Lower Sorbian\",\"country\":\"GER\",\"locale\":\"DSB_GER\"},\r\n                        \"dsb-DE\":{\"id\":\"0x082E\",\"lang_name\":\"Lower Sorbian\",\"country\":\"GER\",\"locale\":\"DSB_GER\"},\r\n                        \"lb\":{\"id\":\"0x006E\",\"lang_name\":\"Luxembourgish\",\"country\":\"LUX\",\"locale\":\"LBX_LUX\"},\r\n                        \"lb-LU\":{\"id\":\"0x046E\",\"lang_name\":\"Luxembourgish\",\"country\":\"LUX\",\"locale\":\"LBX_LUX\"},\r\n                        \"mk-MK\":{\"id\":\"0x042F\",\"lang_name\":\"Macedonian (FYROM)\",\"country\":\"MKD\",\"locale\":\"MKI_MKD\"},\r\n                        \"mk\":{\"id\":\"0x002F\",\"lang_name\":\"Macedonian (FYROM)\",\"country\":\"MKD\",\"locale\":\"MKI_MKD\"},\r\n                        \"ms\":{\"id\":\"0x003E\",\"lang_name\":\"Malay\",\"country\":\"MYS\",\"locale\":\"MSL_MYS\"},\r\n                        \"ms-BN\":{\"id\":\"0x083E\",\"lang_name\":\"Malay\",\"country\":\"BRN\",\"locale\":\"MSB_BRN\"},\r\n                        \"ms-MY\":{\"id\":\"0x043E\",\"lang_name\":\"Malay\",\"country\":\"MYS\",\"locale\":\"MSL_MYS\"},\r\n                        \"ml\":{\"id\":\"0x004C\",\"lang_name\":\"Malayalam\",\"country\":\"IND\",\"locale\":\"MYM_IND\"},\r\n                        \"ml-IN\":{\"id\":\"0x044C\",\"lang_name\":\"Malayalam\",\"country\":\"IND\",\"locale\":\"MYM_IND\"},\r\n                        \"mt\":{\"id\":\"0x003A\",\"lang_name\":\"Maltese\",\"country\":\"MLT\",\"locale\":\"MLT_MLT\"},\r\n                        \"mt-MT\":{\"id\":\"0x043A\",\"lang_name\":\"Maltese\",\"country\":\"MLT\",\"locale\":\"MLT_MLT\"},\r\n                        \"mi\":{\"id\":\"0x0081\",\"lang_name\":\"Maori\",\"country\":\"NZL\",\"locale\":\"MRI_NZL\"},\r\n                        \"mi-NZ\":{\"id\":\"0x0481\",\"lang_name\":\"Maori\",\"country\":\"NZL\",\"locale\":\"MRI_NZL\"},\r\n                        \"arn\":{\"id\":\"0x007A\",\"lang_name\":\"Mapudungun\",\"country\":\"CHL\",\"locale\":\"MPD_CHL\"},\r\n                        \"arn-CL\":{\"id\":\"0x047A\",\"lang_name\":\"Mapudungun\",\"country\":\"CHL\",\"locale\":\"MPD_CHL\"},\r\n                        \"mr\":{\"id\":\"0x004E\",\"lang_name\":\"Marathi\",\"country\":\"IND\",\"locale\":\"MAR_IND\"},\r\n                        \"mr-IN\":{\"id\":\"0x044E\",\"lang_name\":\"Marathi\",\"country\":\"IND\",\"locale\":\"MAR_IND\"},\r\n                        \"moh\":{\"id\":\"0x007C\",\"lang_name\":\"Mohawk\",\"country\":\"CAN\",\"locale\":\"MWK_CAN\"},\r\n                        \"moh-CA\":{\"id\":\"0x047C\",\"lang_name\":\"Mohawk\",\"country\":\"CAN\",\"locale\":\"MWK_CAN\"},\r\n                        \"mn\":{\"id\":\"0x0050\",\"lang_name\":\"Mongolian (Cyrillic)\",\"country\":\"MNG\",\"locale\":\"MNN_MNG\"},\r\n                        \"mn-Cyrl\":{\"id\":\"0x7850\",\"lang_name\":\"Mongolian (Cyrillic)\",\"country\":\"MNG\",\"locale\":\"MNN_MNG\"},\r\n                        \"mn-MN\":{\"id\":\"0x0450\",\"lang_name\":\"Mongolian (Cyrillic)\",\"country\":\"MNG\",\"locale\":\"MNN_MNG\"},\r\n                        \"mn-Mong\":{\"id\":\"0x7C50\",\"lang_name\":\"Mongolian (Traditional Mongolian)\",\"country\":\"CHN\",\"locale\":\"MNG_CHN\"},\r\n                        \"mn-Mong-CN\":{\"id\":\"0x0850\",\"lang_name\":\"Mongolian (Traditional Mongolian)\",\"country\":\"CHN\",\"locale\":\"MNG_CHN\"},\r\n                        \"ne\":{\"id\":\"0x0061\",\"lang_name\":\"Nepali\",\"country\":\"NEP\",\"locale\":\"NEP_NEP\"},\r\n                        \"ne-NP\":{\"id\":\"0x0461\",\"lang_name\":\"Nepali\",\"country\":\"NEP\",\"locale\":\"NEP_NEP\"},\r\n                        \"no\":{\"id\":\"0x0014\",\"lang_name\":\"Norwegian (Bokm\\u00d5l)\",\"country\":\"NOR\",\"locale\":\"NOR_NOR\"},\r\n                        \"nb\":{\"id\":\"0x7C14\",\"lang_name\":\"Norwegian (Bokm\\u00d5l)\",\"country\":\"NOR\",\"locale\":\"NOR_NOR\"},\r\n                        \"nn\":{\"id\":\"0x7814\",\"lang_name\":\"Norwegian (Nynorsk)\",\"country\":\"NOR\",\"locale\":\"NON_NOR\"},\r\n                        \"nb-NO\":{\"id\":\"0x0414\",\"lang_name\":\"Norwegian (Bokm\\u00d5l)\",\"country\":\"NOR\",\"locale\":\"NOR_NOR\"},\r\n                        \"nn-NO\":{\"id\":\"0x0814\",\"lang_name\":\"Norwegian (Nynorsk)\",\"country\":\"NOR\",\"locale\":\"NON_NOR\"},\r\n                        \"oc\":{\"id\":\"0x0082\",\"lang_name\":\"Occitan\",\"country\":\"FRA\",\"locale\":\"OCI_FRA\"},\r\n                        \"oc-FR\":{\"id\":\"0x0482\",\"lang_name\":\"Occitan\",\"country\":\"FRA\",\"locale\":\"OCI_FRA\"},\r\n                        \"or\":{\"id\":\"0x0048\",\"lang_name\":\"Oriya\",\"country\":\"IND\",\"locale\":\"ORI_IND\"},\r\n                        \"or-IN\":{\"id\":\"0x0448\",\"lang_name\":\"Oriya\",\"country\":\"IND\",\"locale\":\"ORI_IND\"},\r\n                        \"ps\":{\"id\":\"0x0063\",\"lang_name\":\"Pashto\",\"country\":\"AFG\",\"locale\":\"PAS_AFG\"},\r\n                        \"ps-AF\":{\"id\":\"0x0463\",\"lang_name\":\"Pashto\",\"country\":\"AFG\",\"locale\":\"PAS_AFG\"},\r\n                        \"fa\":{\"id\":\"0x0029\",\"lang_name\":\"Persian\",\"country\":\"IRN\",\"locale\":\"FAR_IRN\"},\r\n                        \"fa-IR\":{\"id\":\"0x0429\",\"lang_name\":\"Persian\",\"country\":\"IRN\",\"locale\":\"FAR_IRN\"},\r\n                        \"pl\":{\"id\":\"0x0015\",\"lang_name\":\"Polish\",\"country\":\"POL\",\"locale\":\"PLK_POL\"},\r\n                        \"pl-PL\":{\"id\":\"0x0415\",\"lang_name\":\"Polish\",\"country\":\"POL\",\"locale\":\"PLK_POL\"},\r\n                        \"pt\":{\"id\":\"0x0016\",\"lang_name\":\"Portuguese\",\"country\":\"BRA\",\"locale\":\"PTB_BRA\"},\r\n                        \"pt-BR\":{\"id\":\"0x0416\",\"lang_name\":\"Portuguese\",\"country\":\"BRA\",\"locale\":\"PTB_BRA\"},\r\n                        \"pt-PT\":{\"id\":\"0x0816\",\"lang_name\":\"Portuguese\",\"country\":\"PRT\",\"locale\":\"PTG_PRT\"},\r\n                        \"pa\":{\"id\":\"0x0046\",\"lang_name\":\"Punjabi\",\"country\":\"IND\",\"locale\":\"PAN_IND\"},\r\n                        \"pa-IN\":{\"id\":\"0x0446\",\"lang_name\":\"Punjabi\",\"country\":\"IND\",\"locale\":\"PAN_IND\"},\r\n                        \"quz\":{\"id\":\"0x006B\",\"lang_name\":\"Quechua\",\"country\":\"BOL\",\"locale\":\"QUB_BOL\"},\r\n                        \"quz-BO\":{\"id\":\"0x046B\",\"lang_name\":\"Quechua\",\"country\":\"BOL\",\"locale\":\"QUB_BOL\"},\r\n                        \"quz-EC\":{\"id\":\"0x086B\",\"lang_name\":\"Quechua\",\"country\":\"ECU\",\"locale\":\"QUE_ECU\"},\r\n                        \"quz-PE\":{\"id\":\"0x0C6B\",\"lang_name\":\"Quechua\",\"country\":\"PER\",\"locale\":\"QUP_PER\"},\r\n                        \"ro\":{\"id\":\"0x0018\",\"lang_name\":\"Romanian\",\"country\":\"ROM\",\"locale\":\"ROM_ROM\"},\r\n                        \"ro-RO\":{\"id\":\"0x0418\",\"lang_name\":\"Romanian\",\"country\":\"ROM\",\"locale\":\"ROM_ROM\"},\r\n                        \"rm\":{\"id\":\"0x0017\",\"lang_name\":\"Romansh\",\"country\":\"CHE\",\"locale\":\"RMC_CHE\"},\r\n                        \"rm-CH\":{\"id\":\"0x0417\",\"lang_name\":\"Romansh\",\"country\":\"CHE\",\"locale\":\"RMC_CHE\"},\r\n                        \"ru\":{\"id\":\"0x0019\",\"lang_name\":\"Russian\",\"country\":\"RUS\",\"locale\":\"RUS_RUS\"},\r\n                        \"ru-RU\":{\"id\":\"0x0419\",\"lang_name\":\"Russian\",\"country\":\"RUS\",\"locale\":\"RUS_RUS\"},\r\n                        \"smn\":{\"id\":\"0x703B\",\"lang_name\":\"Sami (Inari)\",\"country\":\"FIN\",\"locale\":\"SMN_FIN\"},\r\n                        \"smj\":{\"id\":\"0x7C3B\",\"lang_name\":\"Sami (Lule)\",\"country\":\"SWE\",\"locale\":\"SMK_SWE\"},\r\n                        \"se\":{\"id\":\"0x003B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"NOR\",\"locale\":\"SME_NOR\"},\r\n                        \"sms\":{\"id\":\"0x743B\",\"lang_name\":\"Sami (Skolt)\",\"country\":\"FIN\",\"locale\":\"SMS_FIN\"},\r\n                        \"sma\":{\"id\":\"0x783B\",\"lang_name\":\"Sami (Southern)\",\"country\":\"SWE\",\"locale\":\"SMB_SWE\"},\r\n                        \"smn-FI\":{\"id\":\"0x243B\",\"lang_name\":\"Sami (Inari)\",\"country\":\"FIN\",\"locale\":\"SMN_FIN\"},\r\n                        \"smj-NO\":{\"id\":\"0x103B\",\"lang_name\":\"Sami (Lule)\",\"country\":\"NOR\",\"locale\":\"SMJ_NOR\"},\r\n                        \"smj-SE\":{\"id\":\"0x143B\",\"lang_name\":\"Sami (Lule)\",\"country\":\"SWE\",\"locale\":\"SMK_SWE\"},\r\n                        \"se-FI\":{\"id\":\"0x0C3B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"FIN\",\"locale\":\"SMG_FIN\"},\r\n                        \"se-NO\":{\"id\":\"0x043B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"NOR\",\"locale\":\"SME_NOR\"},\r\n                        \"se-SE\":{\"id\":\"0x083B\",\"lang_name\":\"Sami (Northern)\",\"country\":\"SWE\",\"locale\":\"SMF_SWE\"},\r\n                        \"sms-FI\":{\"id\":\"0x203B\",\"lang_name\":\"Sami (Skolt)\",\"country\":\"FIN\",\"locale\":\"SMS_FIN\"},\r\n                        \"sma-NO\":{\"id\":\"0x183B\",\"lang_name\":\"Sami (Southern)\",\"country\":\"NOR\",\"locale\":\"SMA_NOR\"},\r\n                        \"sma-SE\":{\"id\":\"0x1C3B\",\"lang_name\":\"Sami (Southern)\",\"country\":\"SWE\",\"locale\":\"SMB_SWE\"},\r\n                        \"sa\":{\"id\":\"0x004F\",\"lang_name\":\"Sanskrit\",\"country\":\"IND\",\"locale\":\"SAN_IND\"},\r\n                        \"sa-IN\":{\"id\":\"0x044F\",\"lang_name\":\"Sanskrit\",\"country\":\"IND\",\"locale\":\"SAN_IND\"},\r\n                        \"gd\":{\"id\":\"0x0091\",\"lang_name\":\"Scottish Gaelic\",\"country\":\"GBR\",\"locale\":\"GLA_GBR\"},\r\n                        \"gd-GB\":{\"id\":\"0x0491\",\"lang_name\":\"Scottish Gaelic\",\"country\":\"GBR\",\"locale\":\"GLA_GBR\"},\r\n                        \"sr\":{\"id\":\"0x7C1A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SRB\",\"locale\":\"SRM_SRB\"},\r\n                        \"sr-Cyrl\":{\"id\":\"0x6C1A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"SRB\",\"locale\":\"SRO_SRB\"},\r\n                        \"sr-Cyrl-BA\":{\"id\":\"0x1C1A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"BIH\",\"locale\":\"SRN_BIH\"},\r\n                        \"sr-Cyrl-ME\":{\"id\":\"0x301A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"MNE\",\"locale\":\"SRQ_MNE\"},\r\n                        \"sr-Cyrl-CS\":{\"id\":\"0x0C1A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"SCG\",\"locale\":\"SRB_SCG\"},\r\n                        \"sr-Cyrl-RS\":{\"id\":\"0x281A\",\"lang_name\":\"Serbian (Cyrillic)\",\"country\":\"SRB\",\"locale\":\"SRO_SRB\"},\r\n                        \"sr-Latn\":{\"id\":\"0x701A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SRB\",\"locale\":\"SRM_SRB\"},\r\n                        \"sr-Latn-BA\":{\"id\":\"0x181A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"BIH\",\"locale\":\"SRS_BIH\"},\r\n                        \"sr-Latn-ME\":{\"id\":\"0x2C1A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"MNE\",\"locale\":\"SRP_MNE\"},\r\n                        \"sr-Latn-CS\":{\"id\":\"0x081A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SCG\",\"locale\":\"SRL_SCG\"},\r\n                        \"sr-Latn-RS\":{\"id\":\"0x241A\",\"lang_name\":\"Serbian (Latin)\",\"country\":\"SRB\",\"locale\":\"SRM_SRB\"},\r\n                        \"nso\":{\"id\":\"0x006C\",\"lang_name\":\"Sesotho sa Leboa\",\"country\":\"ZAF\",\"locale\":\"NSO_ZAF\"},\r\n                        \"nso-ZA\":{\"id\":\"0x046C\",\"lang_name\":\"Sesotho sa Leboa\",\"country\":\"ZAF\",\"locale\":\"NSO_ZAF\"},\r\n                        \"tn\":{\"id\":\"0x0032\",\"lang_name\":\"Setswana\",\"country\":\"ZAF\",\"locale\":\"TSN_ZAF\"},\r\n                        \"tn-ZA\":{\"id\":\"0x0432\",\"lang_name\":\"Setswana\",\"country\":\"ZAF\",\"locale\":\"TSN_ZAF\"},\r\n                        \"si\":{\"id\":\"0x005B\",\"lang_name\":\"Sinhala\",\"country\":\"LKA\",\"locale\":\"SIN_LKA\"},\r\n                        \"si-LK\":{\"id\":\"0x045B\",\"lang_name\":\"Sinhala\",\"country\":\"LKA\",\"locale\":\"SIN_LKA\"},\r\n                        \"sk\":{\"id\":\"0x001B\",\"lang_name\":\"Slovak\",\"country\":\"SVK\",\"locale\":\"SKY_SVK\"},\r\n                        \"sk-SK\":{\"id\":\"0x041B\",\"lang_name\":\"Slovak\",\"country\":\"SVK\",\"locale\":\"SKY_SVK\"},\r\n                        \"sl\":{\"id\":\"0x0024\",\"lang_name\":\"Slovenian\",\"country\":\"SVN\",\"locale\":\"SLV_SVN\"},\r\n                        \"sl-SI\":{\"id\":\"0x0424\",\"lang_name\":\"Slovenian\",\"country\":\"SVN\",\"locale\":\"SLV_SVN\"},\r\n                        \"es\":{\"id\":\"0x000A\",\"lang_name\":\"Spanish\",\"country\":\"ESP\",\"locale\":\"ESN_ESP\"},\r\n                        \"es-AR\":{\"id\":\"0x2C0A\",\"lang_name\":\"Spanish\",\"country\":\"ARG\",\"locale\":\"ESS_ARG\"},\r\n                        \"es-BO\":{\"id\":\"0x400A\",\"lang_name\":\"Spanish\",\"country\":\"BOL\",\"locale\":\"ESB_BOL\"},\r\n                        \"es-CL\":{\"id\":\"0x340A\",\"lang_name\":\"Spanish\",\"country\":\"CHL\",\"locale\":\"ESL_CHL\"},\r\n                        \"es-CO\":{\"id\":\"0x240A\",\"lang_name\":\"Spanish\",\"country\":\"COL\",\"locale\":\"ESO_COL\"},\r\n                        \"es-CR\":{\"id\":\"0x140A\",\"lang_name\":\"Spanish\",\"country\":\"CRI\",\"locale\":\"ESC_CRI\"},\r\n                        \"es-DO\":{\"id\":\"0x1C0A\",\"lang_name\":\"Spanish\",\"country\":\"DOM\",\"locale\":\"ESD_DOM\"},\r\n                        \"es-EC\":{\"id\":\"0x300A\",\"lang_name\":\"Spanish\",\"country\":\"ECU\",\"locale\":\"ESF_ECU\"},\r\n                        \"es-SV\":{\"id\":\"0x440A\",\"lang_name\":\"Spanish\",\"country\":\"SLV\",\"locale\":\"ESE_SLV\"},\r\n                        \"es-GT\":{\"id\":\"0x100A\",\"lang_name\":\"Spanish\",\"country\":\"GTM\",\"locale\":\"ESG_GTM\"},\r\n                        \"es-HN\":{\"id\":\"0x480A\",\"lang_name\":\"Spanish\",\"country\":\"HND\",\"locale\":\"ESH_HND\"},\r\n                        \"es-MX\":{\"id\":\"0x080A\",\"lang_name\":\"Spanish\",\"country\":\"MEX\",\"locale\":\"ESM_MEX\"},\r\n                        \"es-NI\":{\"id\":\"0x4C0A\",\"lang_name\":\"Spanish\",\"country\":\"NIC\",\"locale\":\"ESI_NIC\"},\r\n                        \"es-PA\":{\"id\":\"0x180A\",\"lang_name\":\"Spanish\",\"country\":\"PAN\",\"locale\":\"ESA_PAN\"},\r\n                        \"es-PY\":{\"id\":\"0x3C0A\",\"lang_name\":\"Spanish\",\"country\":\"PRY\",\"locale\":\"ESZ_PRY\"},\r\n                        \"es-PE\":{\"id\":\"0x280A\",\"lang_name\":\"Spanish\",\"country\":\"PER\",\"locale\":\"ESR_PER\"},\r\n                        \"es-PR\":{\"id\":\"0x500A\",\"lang_name\":\"Spanish\",\"country\":\"PRI\",\"locale\":\"ESU_PRI\"},\r\n                        \"es-ES\":{\"id\":\"0x0C0A\",\"lang_name\":\"Spanish\",\"country\":\"ESP\",\"locale\":\"ESN_ESP\"},\r\n                        \"es-US\":{\"id\":\"0x540A\",\"lang_name\":\"Spanish\",\"country\":\"USA\",\"locale\":\"EST_USA\"},\r\n                        \"es-UY\":{\"id\":\"0x380A\",\"lang_name\":\"Spanish\",\"country\":\"URY\",\"locale\":\"ESY_URY\"},\r\n                        \"es-VE\":{\"id\":\"0x200A\",\"lang_name\":\"Spanish\",\"country\":\"VEN\",\"locale\":\"ESV_VEN\"},\r\n                        \"sv\":{\"id\":\"0x001D\",\"lang_name\":\"Swedish\",\"country\":\"SWE\",\"locale\":\"SVE_SWE\"},\r\n                        \"sv-FI\":{\"id\":\"0x081D\",\"lang_name\":\"Swedish\",\"country\":\"FIN\",\"locale\":\"SVF_FIN\"},\r\n                        \"sv-SE\":{\"id\":\"0x041D\",\"lang_name\":\"Swedish\",\"country\":\"SWE\",\"locale\":\"SVE_SWE\"},\r\n                        \"syr\":{\"id\":\"0x005A\",\"lang_name\":\"Syriac\",\"country\":\"SYR\",\"locale\":\"SYR_SYR\"},\r\n                        \"syr-SY\":{\"id\":\"0x045A\",\"lang_name\":\"Syriac\",\"country\":\"SYR\",\"locale\":\"SYR_SYR\"},\r\n                        \"tg\":{\"id\":\"0x0028\",\"lang_name\":\"Tajik (Cyrillic)\",\"country\":\"TAJ\",\"locale\":\"TAJ_TAJ\"},\r\n                        \"tg-Cyrl\":{\"id\":\"0x7C28\",\"lang_name\":\"Tajik (Cyrillic)\",\"country\":\"TAJ\",\"locale\":\"TAJ_TAJ\"},\r\n                        \"tg-Cyrl-TJ\":{\"id\":\"0x0428\",\"lang_name\":\"Tajik (Cyrillic)\",\"country\":\"TAJ\",\"locale\":\"TAJ_TAJ\"},\r\n                        \"tzm\":{\"id\":\"0x005F\",\"lang_name\":\"Tamazight (Latin)\",\"country\":\"DZA\",\"locale\":\"TZM_DZA\"},\r\n                        \"tzm-Latn\":{\"id\":\"0x7C5F\",\"lang_name\":\"Tamazight (Latin)\",\"country\":\"DZA\",\"locale\":\"TZM_DZA\"},\r\n                        \"tzm-Latn-DZ\":{\"id\":\"0x085F\",\"lang_name\":\"Tamazight (Latin)\",\"country\":\"DZA\",\"locale\":\"TZM_DZA\"},\r\n                        \"ta\":{\"id\":\"0x0049\",\"lang_name\":\"Tamil\",\"country\":\"IND\",\"locale\":\"TAM_IND\"},\r\n                        \"ta-IN\":{\"id\":\"0x0449\",\"lang_name\":\"Tamil\",\"country\":\"IND\",\"locale\":\"TAM_IND\"},\r\n                        \"tt\":{\"id\":\"0x0044\",\"lang_name\":\"Tatar\",\"country\":\"RUS\",\"locale\":\"TTT_RUS\"},\r\n                        \"tt-RU\":{\"id\":\"0x0444\",\"lang_name\":\"Tatar\",\"country\":\"RUS\",\"locale\":\"TTT_RUS\"},\r\n                        \"te\":{\"id\":\"0x004A\",\"lang_name\":\"Telugu\",\"country\":\"IND\",\"locale\":\"TEL_IND\"},\r\n                        \"te-IN\":{\"id\":\"0x044A\",\"lang_name\":\"Telugu\",\"country\":\"IND\",\"locale\":\"TEL_IND\"},\r\n                        \"th\":{\"id\":\"0x001E\",\"lang_name\":\"Thai\",\"country\":\"THA\",\"locale\":\"THA_THA\"},\r\n                        \"th-TH\":{\"id\":\"0x041E\",\"lang_name\":\"Thai\",\"country\":\"THA\",\"locale\":\"THA_THA\"},\r\n                        \"bo\":{\"id\":\"0x0051\",\"lang_name\":\"Tibetan\",\"country\":\"CHN\",\"locale\":\"BOB_CHN\"},\r\n                        \"bo-CN\":{\"id\":\"0x0451\",\"lang_name\":\"Tibetan\",\"country\":\"CHN\",\"locale\":\"BOB_CHN\"},\r\n                        \"tr\":{\"id\":\"0x001F\",\"lang_name\":\"Turkish\",\"country\":\"TUR\",\"locale\":\"TRK_TUR\"},\r\n                        \"tr-TR\":{\"id\":\"0x041F\",\"lang_name\":\"Turkish\",\"country\":\"TUR\",\"locale\":\"TRK_TUR\"},\r\n                        \"tk\":{\"id\":\"0x0042\",\"lang_name\":\"Turkmen\",\"country\":\"TKM\",\"locale\":\"TUK_TKM\"},\r\n                        \"tk-TM\":{\"id\":\"0x0442\",\"lang_name\":\"Turkmen\",\"country\":\"TKM\",\"locale\":\"TUK_TKM\"},\r\n                        \"uk\":{\"id\":\"0x0022\",\"lang_name\":\"Ukrainian\",\"country\":\"UKR\",\"locale\":\"UKR_UKR\"},\r\n                        \"uk-UA\":{\"id\":\"0x0422\",\"lang_name\":\"Ukrainian\",\"country\":\"UKR\",\"locale\":\"UKR_UKR\"},\r\n                        \"hsb\":{\"id\":\"0x002E\",\"lang_name\":\"Upper Sorbian\",\"country\":\"GER\",\"locale\":\"HSB_GER\"},\r\n                        \"hsb-DE\":{\"id\":\"0x042E\",\"lang_name\":\"Upper Sorbian\",\"country\":\"GER\",\"locale\":\"HSB_GER\"},\r\n                        \"ur\":{\"id\":\"0x0020\",\"lang_name\":\"Urdu\",\"country\":\"PAK\",\"locale\":\"URD_PAK\"},\r\n                        \"ur-PK\":{\"id\":\"0x0420\",\"lang_name\":\"Urdu\",\"country\":\"PAK\",\"locale\":\"URD_PAK\"},\r\n                        \"ug\":{\"id\":\"0x0080\",\"lang_name\":\"Uyghur\",\"country\":\"CHN\",\"locale\":\"UIG_CHN\"},\r\n                        \"ug-CN\":{\"id\":\"0x0480\",\"lang_name\":\"Uyghur\",\"country\":\"CHN\",\"locale\":\"UIG_CHN\"},\r\n                        \"uz-Cyrl\":{\"id\":\"0x7843\",\"lang_name\":\"Uzbek (Cyrillic)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz-Cyrl-UZ\":{\"id\":\"0x0843\",\"lang_name\":\"Uzbek (Cyrillic)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz\":{\"id\":\"0x0043\",\"lang_name\":\"Uzbek (Latin)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz-Latn\":{\"id\":\"0x7C43\",\"lang_name\":\"Uzbek (Latin)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"uz-Latn-UZ\":{\"id\":\"0x0443\",\"lang_name\":\"Uzbek (Latin)\",\"country\":\"UZB\",\"locale\":\"UZB_UZB\"},\r\n                        \"vi\":{\"id\":\"0x002A\",\"lang_name\":\"Vietcountryse\",\"country\":\"VNM\",\"locale\":\"VIT_VNM\"},\r\n                        \"vi-VN\":{\"id\":\"0x042A\",\"lang_name\":\"Vietcountryse\",\"country\":\"VNM\",\"locale\":\"VIT_VNM\"},\r\n                        \"cy\":{\"id\":\"0x0052\",\"lang_name\":\"Welsh\",\"country\":\"GBR\",\"locale\":\"CYM_GBR\"},\r\n                        \"cy-GB\":{\"id\":\"0x0452\",\"lang_name\":\"Welsh\",\"country\":\"GBR\",\"locale\":\"CYM_GBR\"},\r\n                        \"wo\":{\"id\":\"0x0088\",\"lang_name\":\"Wolof\",\"country\":\"SEN\",\"locale\":\"WOL_SEN\"},\r\n                        \"wo-SN\":{\"id\":\"0x0488\",\"lang_name\":\"Wolof\",\"country\":\"SEN\",\"locale\":\"WOL_SEN\"},\r\n                        \"sah\":{\"id\":\"0x0085\",\"lang_name\":\"Yakut\",\"country\":\"RUS\",\"locale\":\"SAH_RUS\"},\r\n                        \"sah-RU\":{\"id\":\"0x0485\",\"lang_name\":\"Yakut\",\"country\":\"RUS\",\"locale\":\"SAH_RUS\"},\r\n                        \"ii\":{\"id\":\"0x0078\",\"lang_name\":\"Yi\",\"country\":\"CHN\",\"locale\":\"III_CHN\"},\r\n                        \"ii-CN\":{\"id\":\"0x0478\",\"lang_name\":\"Yi\",\"country\":\"CHN\",\"locale\":\"III_CHN\"},\r\n                        \"yo\":{\"id\":\"0x006A\",\"lang_name\":\"Yoruba\",\"country\":\"NGA\",\"locale\":\"YOR_NGA\"},\r\n                        \"yo-NG\":{\"id\":\"0x046A\",\"lang_name\":\"Yoruba\",\"country\":\"NGA\",\"locale\":\"YOR_NGA\"}\r\n                    }';\r\n\r\n        $win_loc = json_decode($win_loc, true);\r\n\r\n        $countries = property::countries($session['lang'], true);\r\n\r\n        $locales = array();\r\n        foreach($win_loc as $short => $locale)\r\n        {\r\n            $locales[$locale['locale']] = $locale['lang_name'].' ('.$countries[$locale['country']].') ['.$short.']';\r\n        }\r\n\r\n        return $locales;\r\n    }\r\n\r\n    public function unix_locales()\r\n    {\r\n        global $session;\r\n\r\n\t\tif(is_callable('shell_exec') && false === stripos(ini_get('disable_functions'), 'shell_exec'))\r\n\t\t{\r\n        \t$locales = shell_exec('locale -a');\r\n\t\t\t$tmp = explode(\"\\n\", $locales);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// default list of unix locales\r\n\t\t\t$locales = \"aa_DJ,aa_ER,aa_ER@saaho,aa_ET,af_ZA,am_ET,an_ES,ar_AE,ar_BH,ar_DZ,ar_EG,ar_IN,ar_IQ,ar_JO,ar_KW,ar_LB,ar_LY,ar_MA,ar_OM,ar_QA,ar_SA,ar_SD,ar_SY,ar_TN,ar_YE,as_IN,ast_ES,az_AZ,be_BY,be_BY@latin,ber_DZ,ber_MA,bg_BG,bn_BD,bn_IN,bo_CN,bo_IN,bokmal,bokm,br_FR,bs_BA,byn_ER,C,ca_AD,ca_ES,ca_FR,ca_IT,catalan,crh_UA,croatian,csb_PL,cs_CZ,cv_RU,cy_GB,czech,da_DK,danish,dansk,de_AT,de_BE,de_CH,de_DE,de_LU,deutsch,dutch,dv_MV,dv_MV.utf8,dz_BT,dz_BT.utf8,eesti,el_CY,el_GR,en_AG,en_AU,en_BW,en_CA,en_DK,en_GB,en_HK,en_IE,en_IN,en_NG,en_NZ,en_PH,en_SG,en_US,en_ZA,en_ZW,es_AR,es_BO,es_CL,es_CO,es_CR,es_DO,es_EC,es_ES,es_GT,es_HN,es_MX,es_NI,es_PA,es_PE,es_PR,es_PY,es_SV,estonian,es_US,es_UY,es_VE,et_EE,eu_ES,fa_IR,fi_FI,fil_PH,finnish,fo_FO,fran\u6829s,fr_BE,fr_CA,fr_CH,french,fr_FR,fr_LU,fur_IT,fy_DE,fy_NL,ga_IE,galego,galician,gd_GB,german,gez_ER,gez_ET,gl_ES,greek,gu_IN,gv_GB,ha_NG,hebrew,he_IL,hi_IN,hne_IN,hr_HR,hrvatski,hsb_DE,ht_HT,hu_HU,hungarian,hy_AM,icelandic,id_ID,ig_NG,ik_CA,is_IS,italian,it_CH,it_IT,iu_CA,iw_IL,ja_JP,japanese,ka_GE,kk_KZ,kl_GL,km_KH,kn_IN,kok_IN,ko_KR,korean,ks_IN,ku_TR,kw_GB,ky_KG,lg_UG,li_BE,li_NL,lithuanian,lo_LA,lt_LT,lv_LV,mai_IN,mg_MG,mi_NZ,mk_MK,ml_IN,mn_MN,mr_IN,ms_MY,mt_MT,my_MM,nb_NO,nds_DE,nds_NL,ne_NP,nl_AW,nl_BE,nl_NL,nn_NO,no_NO,norwegian,nr_ZA,nso_ZA,nynorsk,oc_FR,om_ET,om_KE,or_IN,pa_IN,pap_AN,pa_PK,pl_PL,polish,portuguese,POSIX,ps_AF,pt_BR,pt_PT,romanian,ro_RO,ru_RU,russian,ru_UA,rw_RW,sa_IN,sc_IT,sd_IN,se_NO,shs_CA,sid_ET,si_LK,sk_SK,slovak,slovene,slovenian,sl_SI,so_DJ,so_ET,so_KE,so_SO,spanish,sq_AL,sq_MK,sr_ME,sr_RS,ss_ZA,st_ZA,sv_FI,sv_SE,swedish,ta_IN,te_IN,tg_TJ,thai,th_TH,ti_ER,ti_ET,tig_ER,tk_TM,tl_PH,tn_ZA,tr_CY,tr_TR,ts_ZA,tt_RU,turkish,ug_CN,uk_UA,ur_PK,uz_UZ,ve_ZA,vi_VN,wa_BE,wo_SN,xh_ZA,yi_US,yo_NG,zh_CN,zh_HK,zh_SG,zh_TW,zu_ZA\";\r\n\t\t\t$tmp = explode(\",\", $locales);\r\n\t\t}\r\n\r\n        $locales = array();\r\n        $languages = language::language_names(false);\r\n        $countries = property::countries($session['lang'], true);\r\n        $tmp = array_filter($tmp);\r\n        foreach($tmp as $loc)\r\n        {\r\n            if(in_array($loc, array('C', 'POSIX')))\r\n            {\r\n                continue;\r\n            }\r\n\r\n            if(strpos($loc, '.')===false)\r\n            {\r\n                if(in_array($loc.'.utf8', $tmp))\r\n                {\r\n                    continue;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                // there is a dot in the locale name\r\n                $check = substr($loc, 0, strpos($loc, '.')).'.utf8';\r\n                if(in_array($check, $tmp) && $check!=$loc)\r\n                {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            $language = @$languages[substr($loc, 0, 2)];\r\n            if(empty($language))\r\n            {\r\n                $language = '?';\r\n            }\r\n            $country = @$countries[substr($loc, 3,2)];\r\n            if(!empty($country))\r\n            {\r\n                $country = ' ('.$country.')';\r\n            }\r\n\r\n            $locales[$loc] = $language.$country.' ['.$loc.']';\r\n        }\r\n\r\n        return $locales;\r\n    }\r\n\r\n\tpublic function homepage()\r\n\t{\r\n\t\t// return homepage relative path depending on the active language\r\n\t\tglobal $current;\r\n\r\n\t\t$homepage_routes = $this->homepage_from_structure(true);    // want all possible homepage paths (language based)\r\n\r\n\t\tif(is_array($homepage_routes))\r\n\t\t{\r\n\t\t\tif(isset($current) && !empty($current['lang']))\r\n            {\r\n                $homepage = $homepage_routes[$current['lang']];\r\n            }\r\n\r\n\t\t\tif(empty($homepage))\r\n            {\r\n                $homepage = array_shift($homepage_routes);\r\n            }\r\n\t\t}\r\n\t\telse\r\n        {\r\n            $homepage = $homepage_routes;\r\n        }\r\n\r\n\t\treturn $homepage;\r\n\t}\r\n\r\n    public function homepage_from_structure($all_languages=false)\r\n    {\r\n        $homepage_relative_url = $this->homepage;\r\n        if(is_numeric($homepage_relative_url))\r\n        {\r\n            $homepage_relative_url = path::loadElementPaths('structure', $homepage_relative_url);\r\n\t        if(!$all_languages)\r\n            {\r\n                $homepage_relative_url = array_shift($homepage_relative_url);\r\n            }\r\n        }\r\n\r\n        return $homepage_relative_url;\r\n    }\r\n\r\n\tpublic static function all()\r\n\t{\r\n\t\tglobal $DB;\r\n\r\n\t\t$out = array();\r\n\r\n\t\t$DB->query(\"SELECT id, name FROM nv_websites ORDER BY id ASC\");\r\n\t\t$rs = $DB->result();\r\n\r\n\t\tfor($i=0; $i < count($rs); $i++)\r\n\t\t{\r\n\t\t\t$out[$rs[$i]->id] = $rs[$i]->name;\r\n\t\t}\r\n\r\n\t\treturn $out;\r\n\t}\r\n\r\n    public function quicksearch($text)\r\n    {\r\n        $like = ' LIKE '.protect('%'.$text.'%');\r\n\r\n        $cols[] = 'id' . $like;\r\n        $cols[] = 'name' . $like;\r\n        $cols[] = 'domain' . $like;\r\n        $cols[] = 'subdomain' . $like;\r\n\r\n        $where = ' AND ( ';\r\n        $where.= implode( ' OR ', $cols);\r\n        $where .= ')';\r\n\r\n        return $where;\r\n    }\r\n}\r\n\r\n?>"], "filenames": ["lib/packages/feeds/feed.class.php", "lib/packages/menus/menu.class.php", "lib/packages/menus/menus.php", "lib/packages/structure/structure.class.php", "lib/packages/websites/website.class.php"], "buggy_code_start_loc": [54, 45, 61, 85, 170], "buggy_code_end_loc": [463, 182, 339, 129, 180], "fixing_code_start_loc": [55, 45, 61, 86, 171], "fixing_code_end_loc": [504, 195, 371, 131, 181], "type": "CWE-79", "message": "An issue was discovered in Navigate CMS through 2.8.7. It allows XSS because of a lack of purify calls in lib/packages/feeds/feed.class.php.", "other": {"cve": {"id": "CVE-2020-13798", "sourceIdentifier": "cve@mitre.org", "published": "2020-06-03T22:15:11.440", "lastModified": "2020-06-04T13:23:48.547", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in Navigate CMS through 2.8.7. It allows XSS because of a lack of purify calls in lib/packages/feeds/feed.class.php."}, {"lang": "es", "value": "Se detect\u00f3 un problema en Navigate CMS versiones hasta 2.8.7. Permite un ataque de tipo XSS debido a una falta de llamadas de purificaci\u00f3n en la biblioteca lib/packages/feeds/feed.class.php"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:naviwebs:navigate_cms:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.8.7", "matchCriteriaId": "C51F59AB-DD05-4412-A392-D6137734D260"}]}]}], "references": [{"url": "https://github.com/NavigateCMS/Navigate-CMS/commit/e690bb5d7bbe9df9052b13c403ca0ac5e58054d4", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/NavigateCMS/Navigate-CMS/commit/e690bb5d7bbe9df9052b13c403ca0ac5e58054d4"}}