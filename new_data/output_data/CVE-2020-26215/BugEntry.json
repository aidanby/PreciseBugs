{"buggy_code": [".. _changelog:\n\nChangelog\n=========\n\nA summary of changes in the Jupyter notebook.\nFor more detailed information, see\n`GitHub <https://github.com/jupyter/notebook>`__.\n\n.. tip::\n\n     Use ``pip install notebook --upgrade`` or ``conda upgrade notebook`` to\n     upgrade to the latest release.\n\n.. we push for pip 9+ or it will break for Python 2 users when IPython 6 is out.\n\nWe strongly recommend that you upgrade pip to version 9+ of pip before upgrading ``notebook``.\n\n.. tip::\n\n    Use ``pip install pip --upgrade`` to upgrade pip. Check pip version with\n    ``pip --version``.\n\n\n.. _release-6.1.4:\n\n6.1.4\n-----\n\n- Fix broken links to jupyter documentation (:ghpull:`5686`)\n- Add additional entries to troubleshooting section (:ghpull:`5695`)\n- Revert change in page alignment (:ghpull:`5703`)\n- Bug fix: remove double encoding in download files (:ghpull:`5720`)\n- Fix typo for Check in zh_CN (:ghpull:`5730`)\n- Require a file name in the \"Save As\" dialog (:ghpull:`5733`)\n\nThank you to all the contributors:\n\n- bdbai\n- Jaipreet Singh\n- Kevin Bates\n- Pavel Panchekha\n- Zach Sailer\n\n\n.. _release-6.1.3:\n\n6.1.3\n-----\n\n- Title new buttons with label if action undefined (:ghpull:`5676`)\n\nThank you to all the contributors:\n\n- Kyle Kelley\n\n\n.. _release-6.1.2:\n\n6.1.2\n-----\n\n- Fix russian message format for delete/duplicate actions (:ghpull:`5662`)\n- Remove unnecessary import of bind_unix_socket (:ghpull:`5666`)\n- Tooltip style scope fix (:ghpull:`5672`)\n\nThank you to all the contributors:\n\n- Dmitry Akatov\n- Kevin Bates\n- Magda Stenius\n\n.. _release-6.1.1:\n\n6.1.1\n-----\n\n- Prevent inclusion of requests_unixsocket on Windows (:ghpull:`5650`)\n\nThank you to all the contributors:\n\n- Kevin Bates\n\n\n.. _release-6.1.0:\n\n6.1.0\n-----\nPlease note that this repository is currently maintained by a skeleton crew of maintainers\nfrom the Jupyter community.  For our approach moving forward, please see this\n`notice <https://github.com/jupyter/notebook#notice>`_ from the README. Thank you.\n\nHere is an enumeration of changes made since the last release and included in 6.1.0.\n\n- Remove deprecated encoding parameter for Python 3.9 compatibility. (:ghpull:`5174`)\n- Add support for async kernel management (:ghpull:`4479`)\n- Fix typo in password_required help message (:ghpull:`5320`)\n- Gateway only: Ensure launch and request timeouts are in sync (:ghpull:`5317`)\n- Update Markdown Cells example to HTML5 video tag (:ghpull:`5411`)\n- Integrated LoginWidget into edit to enable users to logout from the t\u2026 (:ghpull:`5406`)\n- Update message about minimum Tornado version (:ghpull:`5222`)\n- Logged notebook type (:ghpull:`5425`)\n- Added nl language (:ghpull:`5354`)\n- Add UNIX socket support to notebook server. (:ghpull:`4835`)\n- Update CodeMirror dependency (:ghpull:`5198`)\n- Tree added download multiple files (:ghpull:`5351`)\n- Toolbar buttons tooltip: show help instead of label (:ghpull:`5107`)\n- Remove unnecessary import of requests_unixsocket (:ghpull:`5451`)\n- Add ability to cull terminals and track last activity (:ghpull:`5372`)\n- Code refactoring notebook.js (:ghpull:`5352`)\n- Install terminado for docs build (:ghpull:`5462`)\n- Convert notifications JS test to selenium (:ghpull:`5455`)\n- Add cell attachments to markdown example (:ghpull:`5412`)\n- Add Japanese document (:ghpull:`5231`)\n- Migrate Move multiselection test to selenium (:ghpull:`5158`)\n- Use ``cmdtrl-enter`` to run a cell (:ghpull:`5120`)\n- Fix broken \"Raw cell MIME type\" dialog (:ghpull:`5385`)\n- Make a notebook writable after successful save-as (:ghpull:`5296`)\n- Add actual watch script (:ghpull:`4738`)\n- Added ``--autoreload`` flag to ``NotebookApp`` (:ghpull:`4795`)\n- Enable check_origin on gateway websocket communication (:ghpull:`5471`)\n- Restore detection of missing terminado package (:ghpull:`5465`)\n- Culling: ensure ``last_activity`` attr exists before use (:ghpull:`5355`)\n- Added functionality to allow filter kernels by Jupyter Enterprise Gat\u2026 (:ghpull:`5484`)\n- 'Play' icon for run-cell toolbar button (:ghpull:`2922`)\n- Bump minimum version of jQuery to 3.5.0 (:ghpull:`5491`)\n- Remove old JS markdown tests, add a new one in selenium (:ghpull:`5497`)\n- Add support for more RTL languages (:ghpull:`5036`)\n- Make markdown cells stay RTL in edit mode (:ghpull:`5037`)\n- Unforce RTL output display (:ghpull:`5039`)\n- Fixed multicursor backspacing (:ghpull:`4880`)\n- Implemented Split Cell for multicursor (:ghpull:`4824`)\n- Alignment issue [FIXED] (:ghpull:`3173`)\n- MathJax: Support for ``\\gdef`` (:ghpull:`4407`)\n- Another (Minor) Duplicate Code Reduction (:ghpull:`5316`)\n- Update readme regarding maintenance (:ghpull:`5500`)\n- Document contents chunks (:ghpull:`5508`)\n- Backspace deletes empty line (:ghpull:`5516`)\n- The dropdown submenu at notebook page is not keyboard accessible (:ghpull:`4732`)\n- Tooltips visible through keyboard navigation for specified buttons (:ghpull:`4729`)\n- Fix for recursive symlink (:ghpull:`4670`)\n- Fix for the terminal shutdown issue (:ghpull:`4180`)\n- Add japanese translation files (:ghpull:`4490`)\n- Workaround for socket permission errors on Cygwin (:ghpull:`4584`)\n- Implement optional markdown header and footer files (:ghpull:`4043`)\n- Remove double link when using ``custom_display_url`` (:ghpull:`5544`)\n- Respect ``cell.is_editable`` during find-and-replace (:ghpull:`5545`)\n- Fix exception causes all over the codebase (:ghpull:`5556`\n- Improve login shell heuristics (:ghpull:`5588`)\n- Added support for ``JUPYTER_TOKEN_FILE`` (:ghpull:`5587`)\n- Kill notebook itself when server cull idle kernel (:ghpull:`5593`)\n- Implement password hashing with bcrypt (:ghpull:`3793`)\n- Fix broken links (:ghpull:`5600`)\n- Russian internationalization support (:ghpull:`5571`)\n- Add a metadata tag to override notebook direction (ltr/rtl) (:ghpull:`5052`)\n- Paste two images from clipboard in markdown cell (:ghpull:`5598`)\n- Add keyboard shortcuts to menu dropdowns (:ghpull:`5525`)\n- Update codemirror to ``5.56.0+components1`` (:ghpull:`5637`)\n\nThank you to all the contributors:\n\n- Aaron Myatt\n- Adam Blake\n- Afshin Taylor Darian\n- Aman Bansal\n- Ben Thayer\n- berendjan\n- Bruno P. Kinoshita\n- bzinberg\n- Christophe Cadilhac\n- Daiki Katsuragawa\n- David Lukes\n- Dmitriy Q\n- dmpe\n- dylanzjy\n- dSchurch\n- E\\. M\\. Bray\n- ErwinRussel\n- Felix M\u00f6nckemeyer\n- Grant Nestor\n- Jarrad Whitaker\n- Jesus Panales Castillo\n- Joshua Zeltser\n- Karthikeyan Singaravelan\n- Kenichi Ito\n- Kevin Bates\n- Koki Nishihara\n- Kris Wilson\n- Kyle Kelley\n- Laura Merlo\n- levinxo\n- Luciano Resende\n- Luis Cabezon Manchado\n- Madhusudhan Srinivasa\n- Matthias Geier\n- mattn\n- Max Klein\n- Min RK\n- Mingxuan Lin\n- Mohammad Mostafa Farzan\n- Niko Felger\n- Norah Abanumay\n- Onno Broekmans\n- PierreMB\n- pinarkavak\n- Ram Rachum\n- Reece Hart\n- Remi Rampin\n- Rohit Sanjay\n- Shane Canon\n- Simon Li\n- Steinar Sturlaugsson\n- Steven Silvester\n- taohan16\n- Thew Dhanat\n- Thomas Kluyver\n- Toon Baeyens\n- Vidar Tonaas Fauske\n- Zachary Sailer\n\n.. _release-6.0.3:\n\n6.0.3\n-----\n\n- Dependency updates to fix startup issues on Windows platform\n- Add support for nbconvert 6.x\n- Creation of recent tab\n\nThanks for all the contributors:\n\n- Luciano Resende\n- Kevin Bates\n- ahangsleben\n- Zachary Sailer\n- Pallavi Bharadwaj\n- Thomas Kluyver\n- Min RK\n- forest0\n- Bibo Hao\n- Michal Charemza\n- Sergey Shevelev\n- Shuichiro MAKIGAKI\n- krinsman\n- TPartida\n- Landen McDonald\n- Tres DuBiel\n\n.. _release-6.0.2:\n\n6.0.2\n-----\n\n- Update JQuery dependency to version 3.4.1 to fix security vulnerability (CVE-2019-11358)\n- Update CodeMirror to version 5.48.4 to fix Python formatting issues\n- Continue removing obsolete Python 2.x code/dependencies\n- Multiple documentation updates\n\nThanks for all the contributors:\n\n- David Robles\n- Jason Grout\n- Kerwin Sun\n- Kevin Bates\n- Kyle Kelley\n- Luciano Resende\n- Marcus D Sherman\n- Sasaki Takeru\n- Tom Jarosz\n- Vidar Tonaas Fauske\n- Wes Turner\n- Zachary Sailer\n\n.. _release-6.0.1:\n\n6.0.1\n-----\n\n- Attempt to re-establish websocket connection to Gateway (:ghpull:`4777`)\n- Add missing react-dom js to package data (:ghpull:`4772`)\n\nThanks for all the contributors:\n\n- Eunsoo Park\n- Min RK\n\n.. _release-6.0:\n\n6.0\n---\n\nThis is the first major release of the Jupyter Notebook since version 5.0 (March 2017).\n\nWe encourage users to start trying JupyterLab, which has just announced it's 1.0 release in preparation\nfor a future transition.\n\n- Remove Python 2.x support in favor of Python 3.5 and higher.\n- Multiple accessibility enhancements and bug-fixes.\n- Multiple translation enhancements and bug-fixes.\n- Remove deprecated ANSI CSS styles.\n- Native support to forward requests to Jupyter Gateway(s) (Embedded NB2KG).\n- Use JavaScript to redirect users to notebook homepage.\n- Enhanced SSL/TLS security by using PROTOCOL_TLS which selects the highest ssl/tls\n  protocol version available that both the client and server support. When PROTOCOL_TLS\n  is not available use PROTOCOL_SSLv23.\n- Add ``?no_track_activity=1`` argument to allow API requests.\n  to not be registered as activity (e.g. API calls by external activity monitors).\n- Kernels shutting down due to an idle timeout is no longer considered\n  an activity-updating event.\n- Further improve compatibility with tornado 6 with improved\n  checks for when websockets are closed.\n- Launch the browser with a local file which redirects to the server address including\n  the authentication token. This prevents another logged-in user from stealing the token\n  from command line arguments and authenticating to the server.\n  The single-use token previously used to mitigate this has been removed.\n  Thanks to Dr. Owain Kenway for suggesting the local file approach.\n- Respect nbconvert entrypoints as sources for exporters\n- Update to CodeMirror to 5.37, which includes f-string syntax for Python 3.6.\n- Update jquery-ui to 1.12\n- Execute cells by clicking icon in input prompt.\n- New \"Save as\" menu option.\n- When serving on a loopback interface, protect against DNS rebinding by\n  checking the ``Host`` header from the browser.\n  This check can be disabled if necessary by setting\n  ``NotebookApp.allow_remote_access``.\n  (Disabled by default while we work out some Mac issues in :ghissue:`3754`).\n- Add kernel_info_timeout traitlet to enable restarting slow kernels.\n- Add ``custom_display_host`` config option to override displayed URL.\n- Add /metrics endpoint for Prometheus Metrics.\n- Optimize large file uploads.\n- Allow access control headers to be overriden in jupyter_notebook_config.py to support\n  greater CORS and proxy configuration flexibility.\n- Add support for terminals on windows.\n- Add a \"restart and run all\" button to the toolbar.\n- Frontend/extension-config: allow default json files in a .d directory.\n- Allow setting token via jupyter_token env.\n- Cull idle kernels using ``--MappingKernelManager.cull_idle_timeout``.\n- Allow read-only notebooks to be trusted.\n- Convert JS tests to Selenium.\n\n\nSecurity Fixes included in previous minor releases of Jupyter Notebook and also included in version 6.0.\n\n- Fix Open Redirect vulnerability (CVE-2019-10255)\n  where certain malicious URLs could redirect from the Jupyter login page\n  to a malicious site after a successful login.\n\n- Contains a security fix for a cross-site inclusion (XSSI) vulnerability (CVE-2019\u20139644),\n  where files at a known URL could be included in a page from an unauthorized website if\n  the user is logged into a Jupyter server. The fix involves setting the\n  ``X-Content-Type-Options: nosniff`` header, and applying CSRF checks previously on all\n  non-GET API requests to GET requests to API endpoints and the /files/ endpoint.\n\n- Check Host header to more securely protect localhost deployments from DNS rebinding.\n  This is a pre-emptive measure, not fixing a known vulnerability.\n  Use ``.NotebookApp.allow_remote_access`` and ``.NotebookApp.local_hostnames`` to configure\n  access.\n\n- Upgrade bootstrap to 3.4, fixing an XSS vulnerability, which has been\n  assigned `CVE-2018-14041 <https://nvd.nist.gov/vuln/detail/CVE-2018-14041>`_.\n\n- Contains a security fix preventing malicious directory names\n  from being able to execute javascript.\n\n- Contains a security fix preventing nbconvert endpoints from executing javascript with\n  access to the server API. CVE request pending.\n\n\n\nThanks for all the contributors:\n\n* AAYUSH SINHA\n* Aaron Hall, MBA\n* Abhinav Sagar\n* Adam Rule\n* Adeel Ahmad\n* Alex Rothberg\n* Amy Skerry-Ryan\n* Anastasis Germanidis\n* Andr\u00e9s S\u00e1nchez\n* Arjun Radhakrishna\n* Arovit Narula\n* Benda Xu\n* Bj\u00f6rn Gr\u00fcning\n* Brian E. Granger\n* Carol Willing\n* Celina Kilcrease\n* Chris Holdgraf\n* Chris Miller\n* Ciaran Langton\n* Damian Avila\n* Dana Lee\n* Daniel Farrell\n* Daniel Nicolai\n* Dar\u00edo Here\u00f1\u00fa\n* Dave Aitken\n* Dave Foster\n* Dave Hirschfeld\n* Denis Ledoux\n* Dmitry Mikushin\n* Dominic Kuang\n* Douglas Hanley\n* Elliott Sales de Andrade\n* Emilio Talamante Lugo\n* Eric Perry\n* Ethan T. Hendrix\n* Evan Van Dam\n* Francesco Franchina\n* Fr\u00e9d\u00e9ric Chapoton\n* F\u00e9lix-Antoine Fortin\n* Gabriel\n* Gabriel N\u00fctzi\n* Gabriel Ruiz\n* Gestalt LUR\n* Grant Nestor\n* Gustavo Efeiche\n* Harsh Vardhan\n* Heng GAO\n* Hisham Elsheshtawy\n* Hong Xu\n* Ian Rose\n* Ivan Ogasawara\n* J Forde\n* Jason Grout\n* Jessica B. Hamrick\n* Jiaqi Liu\n* John Emmons\n* Josh Barnes\n* Karthik Balakrishnan\n* Kevin Bates\n* Kirit Thadaka\n* Kristian Gregorius Hustad\n* Kyle Kelley\n* Leo Gallucci\n* Lilian Besson\n* Lucas Seiki Oshiro\n* Luciano Resende\n* Luis Angel Rodriguez Guerrero\n* M Pacer\n* Maarten Breddels\n* Mac Knight\n* Madicken Munk\n* Maiti\u00fa \u00d3 Ciar\u00e1in\n* Marc Udoff\n* Mathis HAMMEL\n* Mathis Rosenhauer\n* Matthias Bussonnier\n* Matthias Geier\n* Max Vovshin\n* Maxime Mouchet\n* Michael Chirico\n* Michael Droettboom\n* Michael Heilman\n* Michael Scott Cuthbert\n* Michal Charemza\n* Mike Boyle\n* Milos Miljkovic\n* Min RK\n* Miro Hron\u010dok\n* Nicholas Bollweg\n* Nitesh Sawant\n* Ondrej Jariabka\n* Park Hae Jin\n* Paul Ivanov\n* Paul Masson\n* Peter Parente\n* Pierre Tholoniat\n* Remco Verhoef\n* Roland Weber\n* Roman Kornev\n* Rosa Swaby\n* Roy Hyunjin Han\n* Sally\n* Sam Lau\n* Samar Sultan\n* Shiti Saxena\n* Simon Biggs\n* Spencer Park\n* Stephen Ward\n* Steve (Gadget) Barnes\n* Steven Silvester\n* Surya Prakash Susarla\n* Syed Shah\n* Sylvain Corlay\n* Thomas Aarholt\n* Thomas Kluyver\n* Tim\n* Tim Head\n* Tim Klever\n* Tim Metzler\n* Todd\n* Tom Jorquera\n* Tyler Makaro\n* Vaibhav Sagar\n* Victor\n* Vidar Tonaas Fauske\n* Vu Minh Tam\n* V\u00edt Tu\u010dek\n* Will Costello\n* Will Starms\n* William Hosford\n* Xiaohan Li\n* Yuvi Panda\n* ashley teoh\n* nullptr\n\n\n\n.. _release-5.7.8:\n\n5.7.8\n-----\n\n- Fix regression in restarting kernels in 5.7.5.\n  The restart handler would return before restart was completed.\n- Further improve compatibility with tornado 6 with improved\n  checks for when websockets are closed.\n- Fix regression in 5.7.6 on Windows where .js files could have the wrong mime-type.\n- Fix Open Redirect vulnerability (CVE-2019-10255)\n  where certain malicious URLs could redirect from the Jupyter login page\n  to a malicious site after a successful login.\n  5.7.7 contained only a partial fix for this issue.\n\n.. _release-5.7.6:\n\n5.7.6\n-----\n\n5.7.6 contains a security fix for a cross-site inclusion (XSSI) vulnerability (CVE-2019\u20139644),\nwhere files at a known URL could be included in a page from an unauthorized website if the user is logged into a Jupyter server.\nThe fix involves setting the ``X-Content-Type-Options: nosniff``\nheader, and applying CSRF checks previously on all non-GET\nAPI requests to GET requests to API endpoints and the /files/ endpoint.\n\nThe attacking page is able to access some contents of files when using Internet Explorer through script errors,\nbut this has not been demonstrated with other browsers.\n\n.. _release-5.7.5:\n\n5.7.5\n-----\n\n- Fix compatibility with tornado 6 (:ghpull:`4392`, :ghpull:`4449`).\n- Fix opening integer filedescriptor during startup on Python 2 (:ghpull:`4349`)\n- Fix compatibility with asynchronous `KernelManager.restart_kernel` methods (:ghpull:`4412`)\n\n.. _release-5.7.4:\n\n5.7.4\n-----\n\n5.7.4 fixes a bug introduced in 5.7.3, in which the ``list_running_servers()``\nfunction attempts to parse HTML files as JSON, and consequently crashes\n(:ghpull:`4284`).\n\n.. _release-5.7.3:\n\n5.7.3\n-----\n\n5.7.3 contains one security improvement and one security fix:\n\n- Launch the browser with a local file which redirects to the server address\n  including the authentication token (:ghpull:`4260`).\n  This prevents another logged-in user from stealing the token from command line\n  arguments and authenticating to the server.\n  The single-use token previously used to mitigate this has been removed.\n  Thanks to Dr. Owain Kenway for suggesting the local file approach.\n- Upgrade bootstrap to 3.4, fixing an XSS vulnerability, which has been\n  assigned `CVE-2018-14041 <https://nvd.nist.gov/vuln/detail/CVE-2018-14041>`_\n  (:ghpull:`4271`).\n\n.. _release-5.7.2:\n\n5.7.2\n-----\n\n5.7.2 contains a security fix preventing malicious directory names\nfrom being able to execute javascript. CVE request pending.\n\n.. _release-5.7.1:\n\n5.7.1\n-----\n\n5.7.1 contains a security fix preventing nbconvert endpoints from executing javascript with access to the server API. CVE request pending.\n\n.. _release-5.7.0:\n\n5.7.0\n-----\n\nNew features:\n\n- Update to CodeMirror to 5.37, which includes f-string syntax for Python 3.6 (:ghpull:`3816`)\n- Update jquery-ui to 1.12 (:ghpull:`3836`)\n- Check Host header to more securely protect localhost deployments from DNS rebinding.\n  This is a pre-emptive measure, not fixing a known vulnerability (:ghpull:`3766`).\n  Use ``.NotebookApp.allow_remote_access`` and ``.NotebookApp.local_hostnames`` to configure\n  access.\n- Allow access-control-allow-headers to be overridden (:ghpull:`3886`)\n- Allow configuring max_body_size and max_buffer_size (:ghpull:`3829`)\n- Allow configuring get_secure_cookie keyword-args (:ghpull:`3778`)\n- Respect nbconvert entrypoints as sources for exporters (:ghpull:`3879`)\n- Include translation sources in source distributions (:ghpull:`3925`, :ghpull:`3931`)\n- Various improvements to documentation (:ghpull:`3799`, :ghpull:`3800`,\n  :ghpull:`3806`, :ghpull:`3883`, :ghpull:`3908`)\n\nFixing problems:\n\n- Fix breadcrumb link when running with a base url (:ghpull:`3905`)\n- Fix possible type error when closing activity stream (:ghpull:`3907`)\n- Disable metadata editing for non-editable cells (:ghpull:`3744`)\n- Fix some styling and alignment of prompts caused by regressions in 5.6.0.\n- Enter causing page reload in shortcuts editor (:ghpull:`3871`)\n- Fix uploading to the same file twice (:ghpull:`3712`)\n\nSee the 5.7 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.7>`__ involved in this release.\n\nThanks to the following contributors:\n\n* Aaron Hall\n* Benjamin Ragan-Kelley\n* Bill Major\n* bxy007\n* Dave Aitken\n* Denis Ledoux\n* F\u00e9lix-Antoine Fortin\n* Gabriel\n* Grant Nestor\n* Kevin Bates\n* Kristian Gregorius Hustad\n* M Pacer\n* Madicken Munk\n* Maitiu O Ciarain\n* Matthias Bussonnier\n* Michael Boyle\n* Michael Chirico\n* Mokkapati, Praneet(ES)\n* Peter Parente\n* Sally Wilsak\n* Steven Silvester\n* Thomas Kluyver\n* Walter Martin\n\n.. _release-5.6.0:\n\n5.6.0\n-----\n\nNew features:\n\n- Execute cells by clicking icon in input prompt (:ghpull:`3535`, :ghpull:`3687`)\n- New \"Save as\" menu option (:ghpull:`3289`)\n- When serving on a loopback interface, protect against DNS rebinding by\n  checking the ``Host`` header from the browser (:ghpull:`3714`).\n  This check can be disabled if necessary by setting\n  ``NotebookApp.allow_remote_access``.\n  (Disabled by default while we work out some Mac issues in :ghissue:`3754`).\n- Add kernel_info_timeout traitlet to enable restarting slow kernels (:ghpull:`3665`)\n- Add ``custom_display_host`` config option to override displayed URL (:ghpull:`3668`)\n- Add /metrics endpoint for Prometheus Metrics (:ghpull:`3490`)\n- Update to MathJax 2.7.4 (:ghpull:`3751`)\n- Update to jQuery 3.3 (:ghpull:`3655`)\n- Update marked to 0.4 (:ghpull:`3686`)\n\nFixing problems:\n\n- Don't duplicate token in displayed URL (:ghpull:`3656`)\n- Clarify displayed URL when listening on all interfaces (:ghpull:`3703`)\n- Don't trash non-empty directories on Windows (:ghpull:`3673`)\n- Include LICENSE file in wheels (:ghpull:`3671`)\n- Don't show \"0 active kernels\" when starting the notebook (:ghpull:`3696`)\n\nTesting:\n\n- Add find replace test (:ghpull:`3630`)\n- Selenium test for deleting all cells (:ghpull:`3601`)\n- Make creating a new notebook more robust (:ghpull:`3726`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- lucasoshiro (`lucasoshiro <https://github.com/lucasoshiro>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Todd (`toddrme2178 <https://github.com/toddrme2178>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.6 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.6>`__ involved in this release.\n\n.. _release-5.5.0:\n\n5.5.0\n-----\n\nNew features:\n\n- The files list now shows file sizes (:ghpull:`3539`)\n- Add a quit button in the dashboard (:ghpull:`3004`)\n- Display hostname in the terminal when running remotely (:ghpull:`3356`, :ghpull:`3593`)\n- Add slides exportation/download to the menu (:ghpull:`3287`)\n- Add any extra installed nbconvert exporters to the \"Download as\" menu (:ghpull:`3323`)\n- Editor: warning when overwriting a file that is modified on disk (:ghpull:`2783`)\n- Display a warning message if cookies are not enabled (:ghpull:`3511`)\n- Basic ``__version__`` reporting for extensions (:ghpull:`3541`)\n- Add ``NotebookApp.terminals_enabled`` config option (:ghpull:`3478`)\n- Make buffer time between last modified on disk and last modified on last save configurable (:ghpull:`3273`)\n- Allow binding custom shortcuts for 'close and halt' (:ghpull:`3314`)\n- Add description for 'Trusted' notification (:ghpull:`3386`)\n- Add ``settings['activity_sources']`` (:ghpull:`3401`)\n- Add an ``output_updated.OutputArea`` event (:ghpull:`3560`)\n\n\nFixing problems:\n\n- Fixes to improve web accessibility (:ghpull:`3507`)\n\n  - There is more to do on this! See :ghissue:`1801`.\n\n- Fixed color contrast issue in tree.less (:ghpull:`3336`)\n- Allow cancelling upload of large files (:ghpull:`3373`)\n- Don't clear login cookie on requests without cookie (:ghpull:`3380`)\n- Don't trash files on different device to home dir on Linux (:ghpull:`3304`)\n- Clear waiting asterisks when restarting kernel (:ghpull:`3494`)\n- Fix output prompt when ``execution_count`` missing (:ghpull:`3236`)\n- Make the 'changed on disk' dialog work when displayed twice (:ghpull:`3589`)\n- Fix going back to root directory with history in notebook list (:ghpull:`3411`)\n- Allow defining keyboard shortcuts for missing actions (:ghpull:`3561`)\n- Prevent default on pageup/pagedown when completer is active (:ghpull:`3500`)\n- Prevent default event handling on new terminal (:ghpull:`3497`)\n- ConfigManager should not write out default values found in the .d directory (:ghpull:`3485`)\n- Fix leak of iopub object in activity monitoring (:ghpull:`3424`)\n- Javascript lint in notebooklist.js (:ghpull:`3409`)\n- Some Javascript syntax fixes (:ghpull:`3294`)\n- Convert native for loop to ``Array.forEach()`` (:ghpull:`3477`)\n- Disable cache when downloading nbconvert output (:ghpull:`3484`)\n- Add missing digestmod arg to HMAC (:ghpull:`3399`)\n- Log OSErrors failing to create less-critical files during startup (:ghpull:`3384`)\n- Use powershell on Windows (:ghpull:`3379`)\n- API spec improvements, API handler improvements (:ghpull:`3368`)\n- Set notebook to dirty state after change to kernel metadata (:ghpull:`3350`)\n- Use CSP header to treat served files as belonging to a separate origin (:ghpull:`3341`)\n- Don't install gettext into builtins (:ghpull:`3330`)\n- Add missing ``import _`` (:ghpull:`3316`, :ghpull:`3326`)\n- Write ``notebook.json`` file atomically (:ghpull:`3305`)\n- Fix clicking with modifiers, page title updates (:ghpull:`3282`)\n- Upgrade jQuery to version 2.2 (:ghpull:`3428`)\n- Upgrade xterm.js to 3.1.0 (:ghpull:`3189`)\n- Upgrade moment.js to 2.19.3 (:ghpull:`3562`)\n- Upgrade CodeMirror to 5.35 (:ghpull:`3372`)\n- \"Require\" pyzmq>=17 (:ghpull:`3586`)\n\nDocumentation:\n\n- Documentation updates and organisation (:ghpull:`3584`)\n- Add section in docs about privacy (:ghpull:`3571`)\n- Add explanation on how to change the type of a cell to Markdown (:ghpull:`3377`)\n- Update docs with confd implementation details (:ghpull:`3520`)\n- Add more information for where ``jupyter_notebook_config.py`` is located (:ghpull:`3346`)\n- Document options to enable nbextensions in specific sections (:ghpull:`3525`)\n- jQuery attribute selector value MUST be surrounded by quotes (:ghpull:`3527`)\n- Do not execute special notebooks with nbsphinx (:ghpull:`3360`)\n- Other minor fixes in :ghpull:`3288`, :ghpull:`3528`, :ghpull:`3293`, :ghpull:`3367`\n\nTesting:\n\n- Testing with Selenium & Sauce labs (:ghpull:`3321`)\n- Selenium utils + markdown rendering tests (:ghpull:`3458`)\n- Convert insert cell tests to Selenium (:ghpull:`3508`)\n- Convert prompt numbers tests to Selenium (:ghpull:`3554`)\n- Convert delete cells tests to Selenium (:ghpull:`3465`)\n- Convert undelete cell tests to Selenium (:ghpull:`3475`)\n- More selenium testing utilities (:ghpull:`3412`)\n- Only check links when build is trigger by Travis Cron job (:ghpull:`3493`)\n- Fix Appveyor build errors (:ghpull:`3430`)\n- Undo patches in teardown before attempting to delete files (:ghpull:`3459`)\n- Get tests running with tornado 5 (:ghpull:`3398`)\n- Unpin ipykernel version on Travis (:ghpull:`3223`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- Ashley Teoh (`ashleytqy <https://github.com/ashleytqy>`__)\n- Nicholas Bollweg (`bollwyvl <https://github.com/bollwyvl>`__)\n- Alex Rothberg (`cancan101 <https://github.com/cancan101>`__)\n- Celina Kilcrease (`ckilcrease <https://github.com/ckilcrease>`__)\n- dabuside (`dabuside <https://github.com/dabuside>`__)\n- Damian Avila (`damianavila <https://github.com/damianavila>`__)\n- Dana Lee (`danagilliann <https://github.com/danagilliann>`__)\n- Dave Hirschfeld (`dhirschfeld <https://github.com/dhirschfeld>`__)\n- Heng GAO (`ehengao <https://github.com/ehengao>`__)\n- Leo Gallucci (`elgalu <https://github.com/elgalu>`__)\n- Evan Van Dam (`evandam <https://github.com/evandam>`__)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Ethan T. Hendrix (`hendrixet <https://github.com/hendrixet>`__)\n- Miro Hron\u010dok (`hroncok <https://github.com/hroncok>`__)\n- Paul Ivanov (`ivanov <https://github.com/ivanov>`__)\n- Dar\u00edo Here\u00f1\u00fa (`kant <https://github.com/kant>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Michael Droettboom (`mdboom <https://github.com/mdboom>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Peter Parente (`parente <https://github.com/parente>`__)\n- Paul Masson (`paulmasson <https://github.com/paulmasson>`__)\n- Philipp Rudiger (`philippjfr <https://github.com/philippjfr>`__)\n- Mac Knight (`Shels1909 <https://github.com/Shels1909>`__)\n- Hisham Elsheshtawy (`Sheshtawy <https://github.com/Sheshtawy>`__)\n- Simon Biggs (`SimonBiggs <https://github.com/SimonBiggs>`__)\n- Sunil Hari (``@sunilhari``)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Tim Klever (`tklever <https://github.com/tklever>`__)\n- Gabriel Ruiz (`unnamedplay-r <https://github.com/unnamedplay-r>`__)\n- Vaibhav Sagar (`vaibhavsagar <https://github.com/vaibhavsagar>`__)\n- William Hosford (`whosford <https://github.com/whosford>`__)\n- Hong (`xuhdev <https://github.com/xuhdev>`__)\n\nSee the 5.5 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.5>`__ involved in this release.\n\n.. _release-5.4.1:\n\n5.4.1\n-----\n\nA security release to fix `CVE-2018-8768\n<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8768>`_.\n\nThanks to `Alex <https://hackerone.com/pisarenko>`__ for identifying this bug,\nand Jonathan Kamens and Scott Sanderson at Quantopian for verifying it and\nbringing it to our attention.\n\n.. _release-5.4.0:\n\n5.4.0\n-----\n\n- Fix creating files and folders after navigating directories in the dashboard\n  (:ghpull:`3264`).\n- Enable printing notebooks in colour, removing the CSS that made everything\n  black and white (:ghpull:`3212`).\n- Limit the completion options displayed in the notebook to 1000, to avoid\n  performance issues with very long lists (:ghpull:`3195`).\n- Accessibility improvements in ``tree.html`` (:ghpull:`3271`).\n- Added alt-text to the kernel logo image in the notebook UI (:ghpull:`3228`).\n- Added a test on Travis CI to flag if symlinks are accidentally introduced\n  in the future. This should prevent the issue that necessitated\n  :ref:`release-5.3.1` (:ghpull:`3227`).\n- Use lowercase letters for random IDs generated in our Javascript\n  (:ghpull:`3264`).\n- Removed duplicate code setting ``TextCell.notebook`` (:ghpull:`3256`).\n\nThanks to the following contributors:\n\n- Alex Soderman (`asoderman <https://github.com/asoderman>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- Nitesh Sawant (`ns23 <https://github.com/ns23>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.4 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.4>`__ involved in this release.\n\n.. _release-5.3.1:\n\n5.3.1\n-----\n\nReplaced a symlink in the repository with a copy, to fix issues installing\non Windows (:ghpull:`3220`).\n\n.. _release-5.3.0:\n\n5.3.0\n-----\n\nThis release introduces a couple noteable improvements, such as terminal support for Windows and support for OS trash (files deleted from the notebook dashboard are moved to the OS trash vs. deleted permanently).\n\n- Add support for terminals on windows (:ghpull:`3087`).\n- Add a \"restart and run all\" button to the toolbar (:ghpull:`2965`).\n- Send files to os trash mechanism on delete (:ghpull:`1968`).\n- Allow programmatic copy to clipboard (:ghpull:`3088`).\n- Use DOM History API for navigating between directories in the file browser (:ghpull:`3115`).\n- Add translated files to folder(docs-translations) (:ghpull:`3065`).\n- Allow non empty dirs to be deleted (:ghpull:`3108`).\n- Set cookie on base_url (:ghpull:`2959`).\n- Allow token-authenticated requests cross-origin by default (:ghpull:`2920`).\n- Change cull_idle_timeout_minimum to 1 from 300 (:ghpull:`2910`).\n- Config option to shut down server after n seconds with no kernels (:ghpull:`2963`).\n- Display a \"close\" button on load notebook error (:ghpull:`3176`).\n- Add action to command pallette to run CodeMirror's \"indentAuto\" on selection (:ghpull:`3175`).\n- Add option to specify extra services (:ghpull:`3158`).\n- Warn_bad_name should not use global name (:ghpull:`3160`).\n- Avoid overflow of hidden form (:ghpull:`3148`).\n- Fix shutdown trans loss (:ghpull:`3147`).\n- Find available kernelspecs more efficiently (:ghpull:`3136`).\n- Don\\'t try to translate missing help strings (:ghpull:`3122`).\n- Frontend/extension-config: allow default json files in a .d directory (:ghpull:`3116`).\n- Use `requirejs` vs. `require` (:ghpull:`3097`).\n- Fixes some ui bugs in firefox #3044 (:ghpull:`3058`).\n- Compare non-specific language code when choosing to use arabic numerals (:ghpull:`3055`).\n- Fix save-script deprecation (:ghpull:`3053`).\n- Include moment locales in package_data (:ghpull:`3051`).\n- Fix moment locale loading in bidi support (:ghpull:`3048`).\n- Tornado 5: periodiccallback loop arg will be removed (:ghpull:`3034`).\n- Use `/files` prefix for pdf-like files (:ghpull:`3031`).\n- Add folder for document translation (:ghpull:`3022`).\n- When login-in via token, let a chance for user to set the password (:ghpull:`3008`).\n- Switch to jupyter_core implementation of ensure_dir_exists (:ghpull:`3002`).\n- Send http shutdown request on \\'stop\\' subcommand (:ghpull:`3000`).\n- Work on loading ui translations  (:ghpull:`2969`).\n- Fix ansi inverse (:ghpull:`2967`).\n- Add send2trash to requirements for building docs (:ghpull:`2964`).\n- I18n readme.md improvement (:ghpull:`2962`).\n- Add \\'reason\\' field to json error responses (:ghpull:`2958`).\n- Add some padding for stream outputs (:ghpull:`3194`).\n- Always use setuptools in ``setup.py`` (:ghpull:`3206`).\n- Fix clearing cookies on logout when ``base_url`` is configured (:ghpull:`3207`).\n\nThanks to the following contributors:\n\n- bacboc (`bacboc <https://github.com/bacboc>`__)\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- ChungJooHo (`ChungJooHo <https://github.com/ChungJooHo>`__)\n- edida (`edida <https://github.com/edida>`__)\n- Francesco Franchina (``ferdas``)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Josh Barnes (`jcb91 <https://github.com/jcb91>`__)\n- JocelynDelalande (`JocelynDelalande <https://github.com/JocelynDelalande>`__)\n- Karthik Balakrishnan (`karthikb351 <https://github.com/karthikb351>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Kirit Thadaka (`kirit93 <https://github.com/kirit93>`__)\n- Lilian Besson (`Naereen <https://github.com/Naereen>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Madhu94 (`Madhu94 <https://github.com/Madhu94>`__)\n- Matthias Geier (`mgeier <https://github.com/mgeier>`__)\n- Michael Heilman (`mheilman <https://github.com/mheilman>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- PHaeJin (`PHaeJin <https://github.com/PHaeJin>`__)\n- Sukneet (`Sukneet <https://github.com/Sukneet>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n\nSee the 5.3 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.3>`__ involved in this release.\n\n.. _release-5.2.1:\n\n5.2.1\n-----\n\n- Fix invisible CodeMirror cursor at specific browser zoom levels (:ghpull:`2983`).\n- Fix nbconvert handler causing broken export to PDF (:ghpull:`2981`).\n- Fix the prompt_area argument of the output area constructor. (:ghpull:`2961`).\n- Handle a compound extension in new_untitled (:ghpull:`2949`).\n- Allow disabling offline message buffering (:ghpull:`2916`).\n\nThanks to the following contributors:\n\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Jason Grout (`jasongrout <https://github.com/jasongrout>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n\nSee the 5.2.1 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2.1>`__ involved in this release.\n\n.. _release-5.2.0:\n\n5.2.0\n-----\n\n- Allow setting token via jupyter_token env (:ghpull:`2921`).\n- Fix some errors caused by raising 403 in get_current_user (:ghpull:`2919`).\n- Register contents_manager.files_handler_class directly (:ghpull:`2917`).\n- Update viewable_extensions (:ghpull:`2913`).\n- Show edit shortcuts modal after shortcuts modal is hidden (:ghpull:`2912`).\n- Improve edit/view behavior (:ghpull:`2911`).\n- The root directory of the notebook server should never be hidden (:ghpull:`2907`).\n- Fix notebook require config to match tools/build-main (:ghpull:`2888`).\n- Give page constructor default arguments (:ghpull:`2887`).\n- Fix codemirror.less to match codemirror\\'s expected padding layout (:ghpull:`2880`).\n- Add x-xsrftoken to access-control-allow-headers (:ghpull:`2876`).\n- Buffer messages when websocket connection is interrupted (:ghpull:`2871`).\n- Load locale dynamically only when not en-us (:ghpull:`2866`).\n- Changed key strength to 2048 bits (:ghpull:`2861`).\n- Resync jsversion with python version (:ghpull:`2860`).\n- Allow copy operation on modified, read-only notebook (:ghpull:`2854`).\n- Update error handling on apihandlers (:ghpull:`2853`).\n- Test python 3.6 on travis, drop 3.3 (:ghpull:`2852`).\n- Avoid base64-literals in image tests (:ghpull:`2851`).\n- Upgrade xterm.js to 2.9.2 (:ghpull:`2849`).\n- Changed all python variables named file to file_name to not override built_in file (:ghpull:`2830`).\n- Add more doc tests (:ghpull:`2823`).\n- Typos fix (:ghpull:`2815`).\n- Rename and update license [ci skip] (:ghpull:`2810`).\n- Travis builds doc  (:ghpull:`2808`).\n- Pull request i18n  (:ghpull:`2804`).\n- Factor out output_prompt_function, as is done with input prompt (:ghpull:`2774`).\n- Use rfc5987 encoding for filenames (:ghpull:`2767`).\n- Added path to the resources metadata, the same as in from_filename(...) in nbconvert.exporters.py (:ghpull:`2753`).\n- Make \"extrakeys\" consistent for notebook and editor (:ghpull:`2745`).\n- Bidi support (:ghpull:`2357`).\n\nSpecial thanks to `samarsultan <https://github.com/samarsultan>`__ and the Arabic Competence and Globalization Center Team at IBM Egypt for adding RTL (right-to-left) support to the notebook!\n\nSee the 5.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2>`__ involved in this release.\n\n.. _release-5.1.0:\n\n5.1.0\n-----\n\n- Preliminary i18n implementation (:ghpull:`2140`).\n- Expose URL with auth token in notebook UI (:ghpull:`2666`).\n- Fix search background style (:ghpull:`2387`).\n- List running notebooks without requiring ``--allow-root`` (:ghpull:`2421`).\n- Allow session of type other than notebook (:ghpull:`2559`).\n- Fix search background style (:ghpull:`2387`).\n- Fix some Markdown styling issues (:ghpull:`2571`), (:ghpull:`2691`) and (:ghpull:`2534`).\n- Remove keymaps that conflict with non-English keyboards (:ghpull:`2535`).\n- Add session-specific favicons (notebook, terminal, file) (:ghpull:`2452`).\n- Add /api/shutdown handler (:ghpull:`2507`).\n- Include metadata when copying a cell (:ghpull:`2349`).\n- Stop notebook server from command line (:ghpull:`2388`).\n- Improve \"View\" and \"Edit\" file handling in dashboard (:ghpull:`2449`) and (:ghpull:`2402`).\n- Provide a promise to replace use of the ``app_initialized.NotebookApp`` event (:ghpull:`2710`).\n- Fix disabled collapse/expand output button (:ghpull:`2681`).\n- Cull idle kernels using ``--MappingKernelManager.cull_idle_timeout`` (:ghpull:`2215`).\n- Allow read-only notebooks to be trusted (:ghpull:`2718`).\n\nSee the 5.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.1>`__ involved in this release.\n\n.. _release-5.0.0:\n\n5.0.0\n-----\n\nThis is the first major release of the Jupyter Notebook since version 4.0 was\ncreated by the \"Big Split\" of IPython and Jupyter.\n\nWe encourage users to start trying JupyterLab in preparation for a future\ntransition.\n\nWe have merged more than 300 pull requests since 4.0. Some of the\nmajor user-facing changes are described here.\n\nFile sorting in the dashboard\n*****************************\n\nFiles in the dashboard may now be sorted by last modified date or name (:ghpull:`943`):\n\n.. image:: /_static/images/dashboard-sort.png\n   :align: center\n\nCell tags\n*********\n\nThere is a new cell toolbar for adding *cell tags* (:ghpull:`2048`):\n\n.. image:: /_static/images/cell-tags-toolbar.png\n   :align: center\n\nCell tags are a lightweight way to customise the behaviour of tools working with\nnotebooks; we're working on building support for them into tools like `nbconvert\n<https://nbconvert.readthedocs.io/en/latest/>`__ and `nbval\n<https://github.com/computationalmodelling/nbval>`__. To start using tags,\nselect ``Tags`` in the ``View > Cell Toolbar`` menu in a notebook.\n\nThe UI for editing cell tags is basic for now; we hope to improve it in future\nreleases.\n\nTable style\n***********\n\nThe default styling for tables in the notebook has been updated (:ghpull:`1776`).\n\nBefore:\n\n.. image:: /_static/images/table-style-before.png\n   :align: center\n\nAfter:\n\n.. image:: /_static/images/table-style-after.png\n  :align: center\n\nCustomise keyboard shortcuts\n****************************\n\nYou can now edit keyboard shortcuts for *Command Mode* within the UI\n(:ghpull:`1347`):\n\n.. image:: /_static/images/shortcut-editor.png\n   :align: center\n\nSee the ``Help > Edit Keyboard Shortcuts`` menu item and follow the instructions.\n\nOther additions\n***************\n\n- You can copy and paste cells between notebooks, using :kbd:`Ctrl-C` and\n  :kbd:`Ctrl-V` (:kbd:`Cmd-C` and :kbd:`Cmd-V` on Mac).\n\n- It's easier to configure a password for the notebook with the new\n  ``jupyter notebook password`` command (:ghpull:`2007`).\n\n- The file list can now be ordered by *last modified* or by *name*\n  (:ghpull:`943`).\n\n- Markdown cells now support attachments. Simply drag and drop an image from\n  your desktop to a markdown cell to add it. Unlike relative links that you\n  enter manually, attachments are embedded in the notebook itself. An\n  unreferenced attachment will be automatically scrubbed from the notebook on\n  save (:ghpull:`621`).\n\n- Undoing cell deletion now supports undeleting multiple cells. Cells may not be\n  in the same order as before their deletion, depending on the actions you did\n  on the meantime, but this should should help reduce the impact of\n  accidentally deleting code.\n\n- The file browser now has *Edit* and *View* buttons.\n\n- The file browser now supports moving multiple files at once\n  (:ghpull:`1088`).\n\n- The Notebook will refuse to run as root unless the ``--allow-root`` flag is\n  given (:ghpull:`1115`).\n\n- Keyboard shortcuts are now declarative (:ghpull:`1234`).\n\n- Toggling line numbers can now affect all cells (:ghpull:`1312`).\n\n- Add more visible *Trusted* and *Untrusted* notifications (:ghpull:`1658`).\n\n- The favicon (browser shortcut icon) now changes to indicate when the kernel is busy\n  (:ghpull:`1837`).\n\n- Header and toolbar visibility is now persisted in nbconfig and across sessions\n  (:ghpull:`1769`).\n\n- Load server extensions with ConfigManager so that merge happens recursively,\n  unlike normal config values, to make it load more consistently with frontend\n  extensions(:ghpull:`2108`).\n\n- The notebook server now supports the `bundler API\n  <https://jupyter-notebook.readthedocs.io/en/latest/extending/bundler_extensions.html>`__\n  from the `jupyter_cms incubator project\n  <https://github.com/jupyter-incubator/contentmanagement>`__ (:ghpull:`1579`).\n\n- The notebook server now provides information about kernel activity in\n  its kernel resource API (:ghpull:`1827`).\n\nRemember that upgrading ``notebook`` only affects the user\ninterface. Upgrading kernels and libraries may also provide new features,\nbetter stability and integration with the notebook interface.\n\n.. _release-4.4.0:\n\n4.4.0\n-----\n\n- Allow override of output callbacks to redirect output messages. This is used to implement the ipywidgets Output widget, for example.\n- Fix an async bug in message handling by allowing comm message handlers to return a promise which halts message processing until the promise resolves.\n\nSee the 4.4 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.4>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.4>`__ involved in this release.\n\n.. _release-4.3.2:\n\n4.3.2\n-----\n\n4.3.2 is a patch release with a bug fix for CodeMirror and improved handling of the \"editable\" cell metadata field.\n\n- Monkey-patch for CodeMirror that resolves `#2037 <https://github.com/jupyter/notebook/issues/2037>`__ without breaking `#1967 <https://github.com/jupyter/notebook/issues/1967>`__\n- Read-only (``\"editable\": false``) cells can be executed but cannot be split, merged, or deleted\n\nSee the 4.3.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.2>`__ involved in this release.\n\n.. _release-4.3.1:\n\n4.3.1\n-----\n\n4.3.1 is a patch release with a security patch, a couple bug fixes, and improvements to the newly-released token authentication.\n\n**Security fix**:\n\n- CVE-2016-9971. Fix CSRF vulnerability,\n  where malicious forms could create untitled files and start kernels\n  (no remote execution or modification of existing files)\n  for users of certain browsers (Firefox, Internet Explorer / Edge).\n  All previous notebook releases are affected.\n\nBug fixes:\n\n- Fix carriage return handling\n- Make the font size more robust against fickle browsers\n- Ignore resize events that bubbled up and didn't come from window\n- Add Authorization to allowed CORS headers\n- Downgrade CodeMirror to 5.16 while we figure out issues in Safari\n\nOther improvements:\n\n- Better docs for token-based authentication\n- Further highlight token info in log output when autogenerated\n\nSee the 4.3.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.1>`__ involved in this release.\n\n.. _release-4.3:\n\n4.3.0\n-----\n\n4.3 is a minor release with many bug fixes and improvements.\nThe biggest user-facing change is the addition of token authentication,\nwhich is enabled by default.\nA token is generated and used when your browser is opened automatically,\nso you shouldn't have to enter anything in the default circumstances.\nIf you see a login page\n(e.g. by switching browsers, or launching on a new port with ``--no-browser``),\nyou get a login URL with the token from the command ``jupyter notebook list``,\nwhich you can paste into your browser.\n\n\nHighlights:\n\n- API for creating mime-type based renderer extensions using :code:`OutputArea.register_mime_type` and :code:`Notebook.render_cell_output` methods. See `mimerender-cookiecutter <https://github.com/jupyterlab/mimerender-cookiecutter>`__ for reference implementations and cookiecutter.\n- Enable token authentication by default. See :ref:`server_security` for more details.\n- Update security docs to reflect new signature system\n- Switched from term.js to xterm.js\n\nBug fixes:\n\n- Ensure variable is set if exc_info is falsey\n- Catch and log handler exceptions in :code:`events.trigger`\n- Add debug log for static file paths\n- Don't check origin on token-authenticated requests\n- Remove leftover print statement\n- Fix highlighting of Python code blocks\n- :code:`json_errors` should be outermost decorator on API handlers\n- Fix remove old nbserver info files\n- Fix notebook mime type on download links\n- Fix carriage symbol behavior\n- Fix terminal styles\n- Update dead links in docs\n- If kernel is broken, start a new session\n- Include cross-origin check when allowing login URL redirects\n\nOther improvements:\n\n- Allow JSON output data with mime type ``application/*+json``\n- Allow kernelspecs to have spaces in them for backward compat\n- Allow websocket connections from scripts\n- Allow :code:`None` for post_save_hook\n- Upgrade CodeMirror to 5.21\n- Upgrade xterm to 2.1.0\n- Docs for using comms\n- Set :code:`dirty` flag when output arrives\n- Set :code:`ws-url` data attribute when accessing a notebook terminal\n- Add base aliases for nbextensions\n- Include :code:`@` operator in CodeMirror IPython mode\n- Extend mathjax_url docstring\n- Load nbextension in predictable order\n- Improve the error messages for nbextensions\n- Include cross-origin check when allowing login URL redirects\n\nSee the 4.3 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3%20>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3%20>`__ involved in this release.\n\n\n.. _release-4.2.3:\n\n4.2.3\n-----\n\n4.2.3 is a small bugfix release on 4.2.\n\n Highlights:\n\n- Fix regression in 4.2.2 that delayed loading custom.js\n  until after ``notebook_loaded`` and ``app_initialized`` events have fired.\n- Fix some outdated docs and links.\n\n.. seealso::\n\n    4.2.3 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.3>`__.\n\n.. _release-4.2.2:\n\n4.2.2\n-----\n\n4.2.2 is a small bugfix release on 4.2, with an important security fix.\nAll users are strongly encouraged to upgrade to 4.2.2.\n\n Highlights:\n\n- **Security fix**: CVE-2016-6524, where untrusted latex output\n  could be added to the page in a way that could execute javascript.\n- Fix missing POST in OPTIONS responses.\n- Fix for downloading non-ascii filenames.\n- Avoid clobbering ssl_options, so that users can specify more detailed SSL\n  configuration.\n- Fix inverted load order in nbconfig, so user config has highest priority.\n- Improved error messages here and there.\n\n.. seealso::\n\n    4.2.2 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.2>`__.\n\n.. _release-4.2.1:\n\n4.2.1\n-----\n\n4.2.1 is a small bugfix release on 4.2. Highlights:\n\n- Compatibility fixes for some versions of ipywidgets\n- Fix for ignored CSS on Windows\n- Fix specifying destination when installing nbextensions\n\n.. seealso::\n\n    4.2.1 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.1>`__.\n\n.. _release-4.2.0:\n\n4.2.0\n-----\n\nRelease 4.2 adds a new API for enabling and installing extensions.\nExtensions can now be enabled at the system-level, rather than just per-user.\nAn API is defined for installing directly from a Python package, as well.\n\n.. seealso::\n\n    :doc:`./examples/Notebook/Distributing Jupyter Extensions as Python Packages`\n\n\nHighlighted changes:\n\n- Upgrade MathJax to 2.6 to fix vertical-bar appearing on some equations.\n- Restore ability for notebook directory to be root (4.1 regression)\n- Large outputs are now throttled, reducing the ability of output floods to\n  kill the browser.\n- Fix the notebook ignoring cell executions while a kernel is starting by\n  queueing the messages.\n- Fix handling of url prefixes (e.g. JupyterHub) in terminal and edit pages.\n- Support nested SVGs in output.\n\nAnd various other fixes and improvements.\n\n.. _release-4.1.0:\n\n4.1.0\n-----\n\nBug fixes:\n\n- Properly reap zombie subprocesses\n- Fix cross-origin problems\n- Fix double-escaping of the base URL prefix\n- Handle invalid unicode filenames more gracefully\n- Fix ANSI color-processing\n- Send keepalive messages for web terminals\n- Fix bugs in the notebook tour\n\nUI changes:\n\n- Moved the cell toolbar selector into the *View* menu. Added a button that\n  triggers a \"hint\" animation to the main toolbar so users can find the new\n  location. (Click here to see a `screencast <https://cloud.githubusercontent.com/assets/335567/10711889/59665a5a-7a3e-11e5-970f-86b89592880c.gif>`__ )\n\n    .. image:: /_static/images/cell-toolbar-41.png\n\n- Added *Restart & Run All* to the *Kernel* menu. Users can also bind it to a\n  keyboard shortcut on action ``restart-kernel-and-run-all-cells``.\n- Added multiple-cell selection. Users press ``Shift-Up/Down`` or ``Shift-K/J``\n  to extend selection in command mode. Various actions such as cut/copy/paste,\n  execute, and cell type conversions apply to all selected cells.\n\n  .. image:: /_static/images/multi-select-41.png\n\n- Added a command palette for executing Jupyter actions by name. Users press\n  ``Cmd/Ctrl-Shift-P`` or click the new command palette icon on the toolbar.\n\n  .. image:: /_static/images/command-palette-41.png\n\n- Added a *Find and Replace* dialog to the *Edit* menu. Users can also press\n  ``F`` in command mode to show the dialog.\n\n  .. image:: /_static/images/find-replace-41.png\n\nOther improvements:\n\n- Custom KernelManager methods can be Tornado coroutines, allowing async\n  operations.\n- Make clearing output optional when rewriting input with\n  ``set_next_input(replace=True)``.\n- Added support for TLS client authentication via ``--NotebookApp.client-ca``.\n- Added tags to ``jupyter/notebook`` releases on DockerHub. ``latest``\n  continues to track the master branch.\n\nSee the 4.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?page=3&q=milestone%3A4.1+is%3Aclosed+is%3Aissue&utf8=%E2%9C%93>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?q=milestone%3A4.1+is%3Aclosed+is%3Apr>`__ handled.\n\n4.0.x\n-----\n\n4.0.6\n*****\n\n- fix installation of mathjax support files\n- fix some double-escape regressions in 4.0.5\n- fix a couple of cases where errors could prevent opening a notebook\n\n4.0.5\n*****\n\nSecurity fixes for maliciously crafted files.\n\n- `CVE-2015-6938 <http://www.openwall.com/lists/oss-security/2015/09/02/3>`__: malicious filenames\n- `CVE-2015-7337 <http://www.openwall.com/lists/oss-security/2015/09/16/3>`__: malicious binary files in text editor.\n\nThanks to Jonathan Kamens at Quantopian and Juan Broull\u00f3n for the reports.\n\n\n4.0.4\n*****\n\n- Fix inclusion of mathjax-safe extension\n\n4.0.2\n*****\n\n- Fix launching the notebook on Windows\n- Fix the path searched for frontend config\n\n\n4.0.0\n*****\n\nFirst release of the notebook as a standalone package.\n", "\"\"\"Base Tornado handlers for the notebook server.\"\"\"\n\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\nimport datetime\nimport functools\nimport ipaddress\nimport json\nimport mimetypes\nimport os\nimport re\nimport sys\nimport traceback\nimport types\nimport warnings\nfrom http.client import responses\nfrom http.cookies import Morsel\n\nfrom urllib.parse import urlparse\nfrom jinja2 import TemplateNotFound\nfrom tornado import web, gen, escape, httputil\nfrom tornado.log import app_log\nimport prometheus_client\n\nfrom notebook._sysinfo import get_sys_info\n\nfrom traitlets.config import Application\nfrom ipython_genutils.path import filefind\nfrom ipython_genutils.py3compat import string_types\n\nimport notebook\nfrom notebook._tz import utcnow\nfrom notebook.i18n import combine_translations\nfrom notebook.utils import is_hidden, url_path_join, url_is_absolute, url_escape, urldecode_unix_socket_path\nfrom notebook.services.security import csp_report_uri\n\n#-----------------------------------------------------------------------------\n# Top-level handlers\n#-----------------------------------------------------------------------------\nnon_alphanum = re.compile(r'[^A-Za-z0-9]')\n\n_sys_info_cache = None\ndef json_sys_info():\n    global _sys_info_cache\n    if _sys_info_cache is None:\n        _sys_info_cache = json.dumps(get_sys_info())\n    return _sys_info_cache\n\ndef log():\n    if Application.initialized():\n        return Application.instance().log\n    else:\n        return app_log\n\nclass AuthenticatedHandler(web.RequestHandler):\n    \"\"\"A RequestHandler with an authenticated user.\"\"\"\n\n    @property\n    def content_security_policy(self):\n        \"\"\"The default Content-Security-Policy header\n        \n        Can be overridden by defining Content-Security-Policy in settings['headers']\n        \"\"\"\n        if 'Content-Security-Policy' in self.settings.get('headers', {}):\n            # user-specified, don't override\n            return self.settings['headers']['Content-Security-Policy']\n\n        return '; '.join([\n            \"frame-ancestors 'self'\",\n            # Make sure the report-uri is relative to the base_url\n            \"report-uri \" + self.settings.get('csp_report_uri', url_path_join(self.base_url, csp_report_uri)),\n        ])\n\n    def set_default_headers(self):\n        headers = {}\n        headers[\"X-Content-Type-Options\"] = \"nosniff\"\n        headers.update(self.settings.get('headers', {}))\n\n        headers[\"Content-Security-Policy\"] = self.content_security_policy\n\n        # Allow for overriding headers\n        for header_name, value in headers.items():\n            try:\n                self.set_header(header_name, value)\n            except Exception as e:\n                # tornado raise Exception (not a subclass)\n                # if method is unsupported (websocket and Access-Control-Allow-Origin\n                # for example, so just ignore)\n                self.log.debug(e)\n\n    def force_clear_cookie(self, name, path=\"/\", domain=None):\n        \"\"\"Deletes the cookie with the given name.\n\n        Tornado's cookie handling currently (Jan 2018) stores cookies in a dict\n        keyed by name, so it can only modify one cookie with a given name per\n        response. The browser can store multiple cookies with the same name\n        but different domains and/or paths. This method lets us clear multiple\n        cookies with the same name.\n\n        Due to limitations of the cookie protocol, you must pass the same\n        path and domain to clear a cookie as were used when that cookie\n        was set (but there is no way to find out on the server side\n        which values were used for a given cookie).\n        \"\"\"\n        name = escape.native_str(name)\n        expires = datetime.datetime.utcnow() - datetime.timedelta(days=365)\n\n        morsel = Morsel()\n        morsel.set(name, '', '\"\"')\n        morsel['expires'] = httputil.format_timestamp(expires)\n        morsel['path'] = path\n        if domain:\n            morsel['domain'] = domain\n        self.add_header(\"Set-Cookie\", morsel.OutputString())\n\n    def clear_login_cookie(self):\n        cookie_options = self.settings.get('cookie_options', {})\n        path = cookie_options.setdefault('path', self.base_url)\n        self.clear_cookie(self.cookie_name, path=path)\n        if path and path != '/':\n            # also clear cookie on / to ensure old cookies are cleared\n            # after the change in path behavior (changed in notebook 5.2.2).\n            # N.B. This bypasses the normal cookie handling, which can't update\n            # two cookies with the same name. See the method above.\n            self.force_clear_cookie(self.cookie_name)\n\n    def get_current_user(self):\n        if self.login_handler is None:\n            return 'anonymous'\n        return self.login_handler.get_user(self)\n\n    def skip_check_origin(self):\n        \"\"\"Ask my login_handler if I should skip the origin_check\n        \n        For example: in the default LoginHandler, if a request is token-authenticated,\n        origin checking should be skipped.\n        \"\"\"\n        if self.request.method == 'OPTIONS':\n            # no origin-check on options requests, which are used to check origins!\n            return True\n        if self.login_handler is None or not hasattr(self.login_handler, 'should_check_origin'):\n            return False\n        return not self.login_handler.should_check_origin(self)\n\n    @property\n    def token_authenticated(self):\n        \"\"\"Have I been authenticated with a token?\"\"\"\n        if self.login_handler is None or not hasattr(self.login_handler, 'is_token_authenticated'):\n            return False\n        return self.login_handler.is_token_authenticated(self)\n\n    @property\n    def cookie_name(self):\n        default_cookie_name = non_alphanum.sub('-', 'username-{}'.format(\n            self.request.host\n        ))\n        return self.settings.get('cookie_name', default_cookie_name)\n    \n    @property\n    def logged_in(self):\n        \"\"\"Is a user currently logged in?\"\"\"\n        user = self.get_current_user()\n        return (user and not user == 'anonymous')\n\n    @property\n    def login_handler(self):\n        \"\"\"Return the login handler for this application, if any.\"\"\"\n        return self.settings.get('login_handler_class', None)\n\n    @property\n    def token(self):\n        \"\"\"Return the login token for this application, if any.\"\"\"\n        return self.settings.get('token', None)\n\n    @property\n    def login_available(self):\n        \"\"\"May a user proceed to log in?\n\n        This returns True if login capability is available, irrespective of\n        whether the user is already logged in or not.\n\n        \"\"\"\n        if self.login_handler is None:\n            return False\n        return bool(self.login_handler.get_login_available(self.settings))\n\n\nclass IPythonHandler(AuthenticatedHandler):\n    \"\"\"IPython-specific extensions to authenticated handling\n    \n    Mostly property shortcuts to IPython-specific settings.\n    \"\"\"\n\n    @property\n    def ignore_minified_js(self):\n        \"\"\"Wether to user bundle in template. (*.min files)\n        \n        Mainly use for development and avoid file recompilation\n        \"\"\"\n        return self.settings.get('ignore_minified_js', False)\n\n    @property\n    def config(self):\n        return self.settings.get('config', None)\n    \n    @property\n    def log(self):\n        \"\"\"use the IPython log by default, falling back on tornado's logger\"\"\"\n        return log()\n\n    @property\n    def jinja_template_vars(self):\n        \"\"\"User-supplied values to supply to jinja templates.\"\"\"\n        return self.settings.get('jinja_template_vars', {})\n    \n    #---------------------------------------------------------------\n    # URLs\n    #---------------------------------------------------------------\n    \n    @property\n    def version_hash(self):\n        \"\"\"The version hash to use for cache hints for static files\"\"\"\n        return self.settings.get('version_hash', '')\n    \n    @property\n    def mathjax_url(self):\n        url = self.settings.get('mathjax_url', '')\n        if not url or url_is_absolute(url):\n            return url\n        return url_path_join(self.base_url, url)\n    \n    @property\n    def mathjax_config(self):\n        return self.settings.get('mathjax_config', 'TeX-AMS-MML_HTMLorMML-full,Safe')\n\n    @property\n    def base_url(self):\n        return self.settings.get('base_url', '/')\n\n    @property\n    def default_url(self):\n        return self.settings.get('default_url', '')\n\n    @property\n    def ws_url(self):\n        return self.settings.get('websocket_url', '')\n\n    @property\n    def contents_js_source(self):\n        self.log.debug(\"Using contents: %s\", self.settings.get('contents_js_source',\n            'services/contents'))\n        return self.settings.get('contents_js_source', 'services/contents')\n    \n    #---------------------------------------------------------------\n    # Manager objects\n    #---------------------------------------------------------------\n    \n    @property\n    def kernel_manager(self):\n        return self.settings['kernel_manager']\n\n    @property\n    def contents_manager(self):\n        return self.settings['contents_manager']\n    \n    @property\n    def session_manager(self):\n        return self.settings['session_manager']\n    \n    @property\n    def terminal_manager(self):\n        return self.settings['terminal_manager']\n    \n    @property\n    def kernel_spec_manager(self):\n        return self.settings['kernel_spec_manager']\n\n    @property\n    def config_manager(self):\n        return self.settings['config_manager']\n\n    #---------------------------------------------------------------\n    # CORS\n    #---------------------------------------------------------------\n    \n    @property\n    def allow_origin(self):\n        \"\"\"Normal Access-Control-Allow-Origin\"\"\"\n        return self.settings.get('allow_origin', '')\n    \n    @property\n    def allow_origin_pat(self):\n        \"\"\"Regular expression version of allow_origin\"\"\"\n        return self.settings.get('allow_origin_pat', None)\n    \n    @property\n    def allow_credentials(self):\n        \"\"\"Whether to set Access-Control-Allow-Credentials\"\"\"\n        return self.settings.get('allow_credentials', False)\n    \n    def set_default_headers(self):\n        \"\"\"Add CORS headers, if defined\"\"\"\n        super(IPythonHandler, self).set_default_headers()\n        if self.allow_origin:\n            self.set_header(\"Access-Control-Allow-Origin\", self.allow_origin)\n        elif self.allow_origin_pat:\n            origin = self.get_origin()\n            if origin and self.allow_origin_pat.match(origin):\n                self.set_header(\"Access-Control-Allow-Origin\", origin)\n        elif (\n            self.token_authenticated\n            and \"Access-Control-Allow-Origin\" not in\n                self.settings.get('headers', {})\n        ):\n            # allow token-authenticated requests cross-origin by default.\n            # only apply this exception if allow-origin has not been specified.\n            self.set_header('Access-Control-Allow-Origin',\n                self.request.headers.get('Origin', ''))\n\n        if self.allow_credentials:\n            self.set_header(\"Access-Control-Allow-Credentials\", 'true')\n    \n    def set_attachment_header(self, filename):\n        \"\"\"Set Content-Disposition: attachment header\n\n        As a method to ensure handling of filename encoding\n        \"\"\"\n        escaped_filename = url_escape(filename)\n        self.set_header('Content-Disposition',\n            'attachment;'\n            \" filename*=utf-8''{utf8}\"\n            .format(\n                utf8=escaped_filename,\n            )\n        )\n\n    def get_origin(self):\n        # Handle WebSocket Origin naming convention differences\n        # The difference between version 8 and 13 is that in 8 the\n        # client sends a \"Sec-Websocket-Origin\" header and in 13 it's\n        # simply \"Origin\".\n        if \"Origin\" in self.request.headers:\n            origin = self.request.headers.get(\"Origin\")\n        else:\n            origin = self.request.headers.get(\"Sec-Websocket-Origin\", None)\n        return origin\n\n    # origin_to_satisfy_tornado is present because tornado requires\n    # check_origin to take an origin argument, but we don't use it\n    def check_origin(self, origin_to_satisfy_tornado=\"\"):\n        \"\"\"Check Origin for cross-site API requests, including websockets\n\n        Copied from WebSocket with changes:\n\n        - allow unspecified host/origin (e.g. scripts)\n        - allow token-authenticated requests\n        \"\"\"\n        if self.allow_origin == '*' or self.skip_check_origin():\n            return True\n\n        host = self.request.headers.get(\"Host\")\n        origin = self.request.headers.get(\"Origin\")\n\n        # If no header is provided, let the request through.\n        # Origin can be None for:\n        # - same-origin (IE, Firefox)\n        # - Cross-site POST form (IE, Firefox)\n        # - Scripts\n        # The cross-site POST (XSRF) case is handled by tornado's xsrf_token\n        if origin is None or host is None:\n            return True\n\n        origin = origin.lower()\n        origin_host = urlparse(origin).netloc\n\n        # OK if origin matches host\n        if origin_host == host:\n            return True\n\n        # Check CORS headers\n        if self.allow_origin:\n            allow = self.allow_origin == origin\n        elif self.allow_origin_pat:\n            allow = bool(self.allow_origin_pat.match(origin))\n        else:\n            # No CORS headers deny the request\n            allow = False\n        if not allow:\n            self.log.warning(\"Blocking Cross Origin API request for %s.  Origin: %s, Host: %s\",\n                self.request.path, origin, host,\n            )\n        return allow\n\n    def check_referer(self):\n        \"\"\"Check Referer for cross-site requests.\n\n        Disables requests to certain endpoints with\n        external or missing Referer.\n\n        If set, allow_origin settings are applied to the Referer\n        to whitelist specific cross-origin sites.\n\n        Used on GET for api endpoints and /files/\n        to block cross-site inclusion (XSSI).\n        \"\"\"\n        host = self.request.headers.get(\"Host\")\n        referer = self.request.headers.get(\"Referer\")\n\n        if not host:\n            self.log.warning(\"Blocking request with no host\")\n            return False\n        if not referer:\n            self.log.warning(\"Blocking request with no referer\")\n            return False\n\n        referer_url = urlparse(referer)\n        referer_host = referer_url.netloc\n        if referer_host == host:\n            return True\n\n        # apply cross-origin checks to Referer:\n        origin = \"{}://{}\".format(referer_url.scheme, referer_url.netloc)\n        if self.allow_origin:\n            allow = self.allow_origin == origin\n        elif self.allow_origin_pat:\n            allow = bool(self.allow_origin_pat.match(origin))\n        else:\n            # No CORS settings, deny the request\n            allow = False\n\n        if not allow:\n            self.log.warning(\"Blocking Cross Origin request for %s.  Referer: %s, Host: %s\",\n                self.request.path, origin, host,\n            )\n        return allow\n\n    def check_xsrf_cookie(self):\n        \"\"\"Bypass xsrf cookie checks when token-authenticated\"\"\"\n        if self.token_authenticated or self.settings.get('disable_check_xsrf', False):\n            # Token-authenticated requests do not need additional XSRF-check\n            # Servers without authentication are vulnerable to XSRF\n            return\n        try:\n            return super(IPythonHandler, self).check_xsrf_cookie()\n        except web.HTTPError as e:\n            if self.request.method in {'GET', 'HEAD'}:\n                # Consider Referer a sufficient cross-origin check for GET requests\n                if not self.check_referer():\n                    referer = self.request.headers.get('Referer')\n                    if referer:\n                        msg = \"Blocking Cross Origin request from {}.\".format(referer)\n                    else:\n                        msg = \"Blocking request from unknown origin\"\n                    raise web.HTTPError(403, msg) from e\n            else:\n                raise\n\n    def check_host(self):\n        \"\"\"Check the host header if remote access disallowed.\n\n        Returns True if the request should continue, False otherwise.\n        \"\"\"\n        if self.settings.get('allow_remote_access', False):\n            return True\n\n        # Remove port (e.g. ':8888') from host\n        host = re.match(r'^(.*?)(:\\d+)?$', self.request.host).group(1)\n\n        # Browsers format IPv6 addresses like [::1]; we need to remove the []\n        if host.startswith('[') and host.endswith(']'):\n            host = host[1:-1]\n\n        # UNIX socket handling\n        check_host = urldecode_unix_socket_path(host)\n        if check_host.startswith('/') and os.path.exists(check_host):\n            allow = True\n        else:\n            try:\n                addr = ipaddress.ip_address(host)\n            except ValueError:\n                # Not an IP address: check against hostnames\n                allow = host in self.settings.get('local_hostnames', ['localhost'])\n            else:\n                allow = addr.is_loopback\n\n        if not allow:\n            self.log.warning(\n                (\"Blocking request with non-local 'Host' %s (%s). \"\n                 \"If the notebook should be accessible at that name, \"\n                 \"set NotebookApp.allow_remote_access to disable the check.\"),\n                host, self.request.host\n            )\n        return allow\n\n    def prepare(self):\n        if not self.check_host():\n            raise web.HTTPError(403)\n        return super(IPythonHandler, self).prepare()\n\n    #---------------------------------------------------------------\n    # template rendering\n    #---------------------------------------------------------------\n    \n    def get_template(self, name):\n        \"\"\"Return the jinja template object for a given name\"\"\"\n        return self.settings['jinja2_env'].get_template(name)\n    \n    def render_template(self, name, **ns):\n        ns.update(self.template_namespace)\n        template = self.get_template(name)\n        return template.render(**ns)\n    \n    @property\n    def template_namespace(self):\n        return dict(\n            base_url=self.base_url,\n            default_url=self.default_url,\n            ws_url=self.ws_url,\n            logged_in=self.logged_in,\n            allow_password_change=self.settings.get('allow_password_change'),\n            login_available=self.login_available,\n            token_available=bool(self.token),\n            static_url=self.static_url,\n            sys_info=json_sys_info(),\n            contents_js_source=self.contents_js_source,\n            version_hash=self.version_hash,\n            ignore_minified_js=self.ignore_minified_js,\n            xsrf_form_html=self.xsrf_form_html,\n            token=self.token,\n            xsrf_token=self.xsrf_token.decode('utf8'),\n            nbjs_translations=json.dumps(combine_translations(\n                self.request.headers.get('Accept-Language', ''))),\n            **self.jinja_template_vars\n        )\n    \n    def get_json_body(self):\n        \"\"\"Return the body of the request as JSON data.\"\"\"\n        if not self.request.body:\n            return None\n        # Do we need to call body.decode('utf-8') here?\n        body = self.request.body.strip().decode(u'utf-8')\n        try:\n            model = json.loads(body)\n        except Exception as e:\n            self.log.debug(\"Bad JSON: %r\", body)\n            self.log.error(\"Couldn't parse JSON\", exc_info=True)\n            raise web.HTTPError(400, u'Invalid JSON in body of request') from e\n        return model\n\n    def write_error(self, status_code, **kwargs):\n        \"\"\"render custom error pages\"\"\"\n        exc_info = kwargs.get('exc_info')\n        message = ''\n        status_message = responses.get(status_code, 'Unknown HTTP Error')\n        exception = '(unknown)'\n        if exc_info:\n            exception = exc_info[1]\n            # get the custom message, if defined\n            try:\n                message = exception.log_message % exception.args\n            except Exception:\n                pass\n            \n            # construct the custom reason, if defined\n            reason = getattr(exception, 'reason', '')\n            if reason:\n                status_message = reason\n        \n        # build template namespace\n        ns = dict(\n            status_code=status_code,\n            status_message=status_message,\n            message=message,\n            exception=exception,\n        )\n\n        self.set_header('Content-Type', 'text/html')\n        # render the template\n        try:\n            html = self.render_template('%s.html' % status_code, **ns)\n        except TemplateNotFound:\n            html = self.render_template('error.html', **ns)\n\n        self.write(html)\n\n\nclass APIHandler(IPythonHandler):\n    \"\"\"Base class for API handlers\"\"\"\n\n    def prepare(self):\n        if not self.check_origin():\n            raise web.HTTPError(404)\n        return super(APIHandler, self).prepare()\n\n    def write_error(self, status_code, **kwargs):\n        \"\"\"APIHandler errors are JSON, not human pages\"\"\"\n        self.set_header('Content-Type', 'application/json')\n        message = responses.get(status_code, 'Unknown HTTP Error')\n        reply = {\n            'message': message,\n        }\n        exc_info = kwargs.get('exc_info')\n        if exc_info:\n            e = exc_info[1]\n            if isinstance(e, HTTPError):\n                reply['message'] = e.log_message or message\n                reply['reason'] = e.reason\n            else:\n                reply['message'] = 'Unhandled error'\n                reply['reason'] = None\n                reply['traceback'] = ''.join(traceback.format_exception(*exc_info))\n        self.log.warning(reply['message'])\n        self.finish(json.dumps(reply))\n\n    def get_current_user(self):\n        \"\"\"Raise 403 on API handlers instead of redirecting to human login page\"\"\"\n        # preserve _user_cache so we don't raise more than once\n        if hasattr(self, '_user_cache'):\n            return self._user_cache\n        self._user_cache = user = super(APIHandler, self).get_current_user()\n        return user\n\n    def get_login_url(self):\n        # if get_login_url is invoked in an API handler,\n        # that means @web.authenticated is trying to trigger a redirect.\n        # instead of redirecting, raise 403 instead.\n        if not self.current_user:\n            raise web.HTTPError(403)\n        return super(APIHandler, self).get_login_url()\n\n    @property\n    def content_security_policy(self):\n        csp = '; '.join([\n                super(APIHandler, self).content_security_policy,\n                \"default-src 'none'\",\n            ])\n        return csp\n\n    # set _track_activity = False on API handlers that shouldn't track activity\n    _track_activity = True\n\n    def update_api_activity(self):\n        \"\"\"Update last_activity of API requests\"\"\"\n        # record activity of authenticated requests\n        if (\n            self._track_activity\n            and getattr(self, '_user_cache', None)\n            and self.get_argument('no_track_activity', None) is None\n        ):\n            self.settings['api_last_activity'] = utcnow()\n\n    def finish(self, *args, **kwargs):\n        self.update_api_activity()\n        self.set_header('Content-Type', 'application/json')\n        return super(APIHandler, self).finish(*args, **kwargs)\n\n    def options(self, *args, **kwargs):\n        if 'Access-Control-Allow-Headers' in self.settings.get('headers', {}):\n            self.set_header('Access-Control-Allow-Headers', self.settings['headers']['Access-Control-Allow-Headers'])\n        else:\n            self.set_header('Access-Control-Allow-Headers',\n                            'accept, content-type, authorization, x-xsrftoken')\n        self.set_header('Access-Control-Allow-Methods',\n                        'GET, PUT, POST, PATCH, DELETE, OPTIONS')\n\n        # if authorization header is requested,\n        # that means the request is token-authenticated.\n        # avoid browser-side rejection of the preflight request.\n        # only allow this exception if allow_origin has not been specified\n        # and notebook authentication is enabled.\n        # If the token is not valid, the 'real' request will still be rejected.\n        requested_headers = self.request.headers.get('Access-Control-Request-Headers', '').split(',')\n        if requested_headers and any(\n            h.strip().lower() == 'authorization'\n            for h in requested_headers\n        ) and (\n            # FIXME: it would be even better to check specifically for token-auth,\n            # but there is currently no API for this.\n            self.login_available\n        ) and (\n            self.allow_origin\n            or self.allow_origin_pat\n            or 'Access-Control-Allow-Origin' in self.settings.get('headers', {})\n        ):\n            self.set_header('Access-Control-Allow-Origin',\n                self.request.headers.get('Origin', ''))\n\n\nclass Template404(IPythonHandler):\n    \"\"\"Render our 404 template\"\"\"\n    def prepare(self):\n        raise web.HTTPError(404)\n\n\nclass AuthenticatedFileHandler(IPythonHandler, web.StaticFileHandler):\n    \"\"\"static files should only be accessible when logged in\"\"\"\n\n    @property\n    def content_security_policy(self):\n        # In case we're serving HTML/SVG, confine any Javascript to a unique\n        # origin so it can't interact with the notebook server.\n        return super(AuthenticatedFileHandler, self).content_security_policy + \\\n                \"; sandbox allow-scripts\"\n\n    @web.authenticated\n    def head(self, path):\n        self.check_xsrf_cookie()\n        return super(AuthenticatedFileHandler, self).head(path)\n\n    @web.authenticated\n    def get(self, path):\n        self.check_xsrf_cookie()\n\n        if os.path.splitext(path)[1] == '.ipynb' or self.get_argument(\"download\", False):\n            name = path.rsplit('/', 1)[-1]\n            self.set_attachment_header(name)\n\n        return web.StaticFileHandler.get(self, path)\n\n    def get_content_type(self):\n        path = self.absolute_path.strip('/')\n        if '/' in path:\n            _, name = path.rsplit('/', 1)\n        else:\n            name = path\n        if name.endswith('.ipynb'):\n            return 'application/x-ipynb+json'\n        else:\n            cur_mime = mimetypes.guess_type(name)[0]\n            if cur_mime == 'text/plain':\n                return 'text/plain; charset=UTF-8'\n            else:\n                return super(AuthenticatedFileHandler, self).get_content_type()\n\n    def set_headers(self):\n        super(AuthenticatedFileHandler, self).set_headers()\n        # disable browser caching, rely on 304 replies for savings\n        if \"v\" not in self.request.arguments:\n            self.add_header(\"Cache-Control\", \"no-cache\")\n    \n    def compute_etag(self):\n        return None\n    \n    def validate_absolute_path(self, root, absolute_path):\n        \"\"\"Validate and return the absolute path.\n        \n        Requires tornado 3.1\n        \n        Adding to tornado's own handling, forbids the serving of hidden files.\n        \"\"\"\n        abs_path = super(AuthenticatedFileHandler, self).validate_absolute_path(root, absolute_path)\n        abs_root = os.path.abspath(root)\n        if is_hidden(abs_path, abs_root) and not self.contents_manager.allow_hidden:\n            self.log.info(\"Refusing to serve hidden file, via 404 Error, use flag 'ContentsManager.allow_hidden' to enable\")\n            raise web.HTTPError(404)\n        return abs_path\n\n\ndef json_errors(method):\n    \"\"\"Decorate methods with this to return GitHub style JSON errors.\n    \n    This should be used on any JSON API on any handler method that can raise HTTPErrors.\n    \n    This will grab the latest HTTPError exception using sys.exc_info\n    and then:\n    \n    1. Set the HTTP status code based on the HTTPError\n    2. Create and return a JSON body with a message field describing\n       the error in a human readable form.\n    \"\"\"\n    warnings.warn('@json_errors is deprecated in notebook 5.2.0. Subclass APIHandler instead.',\n        DeprecationWarning,\n        stacklevel=2,\n    )\n    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        self.write_error = types.MethodType(APIHandler.write_error, self)\n        return method(self, *args, **kwargs)\n    return wrapper\n\n\n\n#-----------------------------------------------------------------------------\n# File handler\n#-----------------------------------------------------------------------------\n\n# to minimize subclass changes:\nHTTPError = web.HTTPError\n\nclass FileFindHandler(IPythonHandler, web.StaticFileHandler):\n    \"\"\"subclass of StaticFileHandler for serving files from a search path\"\"\"\n    \n    # cache search results, don't search for files more than once\n    _static_paths = {}\n    \n    def set_headers(self):\n        super(FileFindHandler, self).set_headers()\n        # disable browser caching, rely on 304 replies for savings\n        if \"v\" not in self.request.arguments or \\\n                any(self.request.path.startswith(path) for path in self.no_cache_paths):\n            self.set_header(\"Cache-Control\", \"no-cache\")\n    \n    def initialize(self, path, default_filename=None, no_cache_paths=None):\n        self.no_cache_paths = no_cache_paths or []\n        \n        if isinstance(path, string_types):\n            path = [path]\n        \n        self.root = tuple(\n            os.path.abspath(os.path.expanduser(p)) + os.sep for p in path\n        )\n        self.default_filename = default_filename\n    \n    def compute_etag(self):\n        return None\n    \n    @classmethod\n    def get_absolute_path(cls, roots, path):\n        \"\"\"locate a file to serve on our static file search path\"\"\"\n        with cls._lock:\n            if path in cls._static_paths:\n                return cls._static_paths[path]\n            try:\n                abspath = os.path.abspath(filefind(path, roots))\n            except IOError:\n                # IOError means not found\n                return ''\n            \n            cls._static_paths[path] = abspath\n            \n\n            log().debug(\"Path %s served from %s\"%(path, abspath))\n            return abspath\n    \n    def validate_absolute_path(self, root, absolute_path):\n        \"\"\"check if the file should be served (raises 404, 403, etc.)\"\"\"\n        if absolute_path == '':\n            raise web.HTTPError(404)\n        \n        for root in self.root:\n            if (absolute_path + os.sep).startswith(root):\n                break\n        \n        return super(FileFindHandler, self).validate_absolute_path(root, absolute_path)\n\n\nclass APIVersionHandler(APIHandler):\n\n    def get(self):\n        # not authenticated, so give as few info as possible\n        self.finish(json.dumps({\"version\":notebook.__version__}))\n\n\nclass TrailingSlashHandler(web.RequestHandler):\n    \"\"\"Simple redirect handler that strips trailing slashes\n    \n    This should be the first, highest priority handler.\n    \"\"\"\n    \n    def get(self):\n        self.redirect(self.request.uri.rstrip('/'))\n    \n    post = put = get\n\n\nclass FilesRedirectHandler(IPythonHandler):\n    \"\"\"Handler for redirecting relative URLs to the /files/ handler\"\"\"\n    \n    @staticmethod\n    def redirect_to_files(self, path):\n        \"\"\"make redirect logic a reusable static method\n        \n        so it can be called from other handlers.\n        \"\"\"\n        cm = self.contents_manager\n        if cm.dir_exists(path):\n            # it's a *directory*, redirect to /tree\n            url = url_path_join(self.base_url, 'tree', url_escape(path))\n        else:\n            orig_path = path\n            # otherwise, redirect to /files\n            parts = path.split('/')\n\n            if not cm.file_exists(path=path) and 'files' in parts:\n                # redirect without files/ iff it would 404\n                # this preserves pre-2.0-style 'files/' links\n                self.log.warning(\"Deprecated files/ URL: %s\", orig_path)\n                parts.remove('files')\n                path = '/'.join(parts)\n\n            if not cm.file_exists(path=path):\n                raise web.HTTPError(404)\n\n            url = url_path_join(self.base_url, 'files', url_escape(path))\n        self.log.debug(\"Redirecting %s to %s\", self.request.path, url)\n        self.redirect(url)\n    \n    def get(self, path=''):\n        return self.redirect_to_files(self, path)\n\n\nclass RedirectWithParams(web.RequestHandler):\n    \"\"\"Sam as web.RedirectHandler, but preserves URL parameters\"\"\"\n    def initialize(self, url, permanent=True):\n        self._url = url\n        self._permanent = permanent\n\n    def get(self):\n        sep = '&' if '?' in self._url else '?'\n        url = sep.join([self._url, self.request.query])\n        self.redirect(url, permanent=self._permanent)\n\nclass PrometheusMetricsHandler(IPythonHandler):\n    \"\"\"\n    Return prometheus metrics for this notebook server\n    \"\"\"\n    @web.authenticated\n    def get(self):\n        self.set_header('Content-Type', prometheus_client.CONTENT_TYPE_LATEST)\n        self.write(prometheus_client.generate_latest(prometheus_client.REGISTRY))\n\n\n#-----------------------------------------------------------------------------\n# URL pattern fragments for re-use\n#-----------------------------------------------------------------------------\n\n# path matches any number of `/foo[/bar...]` or just `/` or ''\npath_regex = r\"(?P<path>(?:(?:/[^/]+)+|/?))\"\n\n#-----------------------------------------------------------------------------\n# URL to handler mappings\n#-----------------------------------------------------------------------------\n\n\ndefault_handlers = [\n    (r\".*/\", TrailingSlashHandler),\n    (r\"api\", APIVersionHandler),\n    (r'/(robots\\.txt|favicon\\.ico)', web.StaticFileHandler),\n    (r'/metrics', PrometheusMetricsHandler)\n]\n", "\nimport re\nfrom nose.tools import assert_regex, assert_not_regex\n\nfrom notebook.base.handlers import path_regex\n\n# build regexps that tornado uses:\npath_pat = re.compile('^' + '/x%s' % path_regex + '$')\n\ndef test_path_regex():\n    for path in (\n        '/x',\n        '/x/',\n        '/x/foo',\n        '/x/foo.ipynb',\n        '/x/foo/bar',\n        '/x/foo/bar.txt',\n    ):\n        assert_regex(path, path_pat)\n\ndef test_path_regex_bad():\n    for path in (\n        '/xfoo',\n        '/xfoo/',\n        '/xfoo/bar',\n        '/xfoo/bar/',\n        '/x/foo/bar/',\n        '/x//foo',\n        '/y',\n        '/y/x/foo',\n    ):\n        assert_not_regex(path, path_pat)\n"], "fixing_code": [".. _changelog:\n\nChangelog\n=========\n\nA summary of changes in the Jupyter notebook.\nFor more detailed information, see\n`GitHub <https://github.com/jupyter/notebook>`__.\n\n.. tip::\n\n     Use ``pip install notebook --upgrade`` or ``conda upgrade notebook`` to\n     upgrade to the latest release.\n\n.. we push for pip 9+ or it will break for Python 2 users when IPython 6 is out.\n\nWe strongly recommend that you upgrade pip to version 9+ of pip before upgrading ``notebook``.\n\n.. tip::\n\n    Use ``pip install pip --upgrade`` to upgrade pip. Check pip version with\n    ``pip --version``.\n\n\n.. _release-6.1.5:\n\n6.1.5\n-----\n\n6.1.5 is a security release, fixing one vulnerability:\n\n- Fix open redirect vulnerability GHSA-c7vm-f5p4-8fqh (CVE to be assigned)\n\n.. _release-6.1.4:\n\n6.1.4\n-----\n\n- Fix broken links to jupyter documentation (:ghpull:`5686`)\n- Add additional entries to troubleshooting section (:ghpull:`5695`)\n- Revert change in page alignment (:ghpull:`5703`)\n- Bug fix: remove double encoding in download files (:ghpull:`5720`)\n- Fix typo for Check in zh_CN (:ghpull:`5730`)\n- Require a file name in the \"Save As\" dialog (:ghpull:`5733`)\n\nThank you to all the contributors:\n\n- bdbai\n- Jaipreet Singh\n- Kevin Bates\n- Pavel Panchekha\n- Zach Sailer\n\n\n.. _release-6.1.3:\n\n6.1.3\n-----\n\n- Title new buttons with label if action undefined (:ghpull:`5676`)\n\nThank you to all the contributors:\n\n- Kyle Kelley\n\n\n.. _release-6.1.2:\n\n6.1.2\n-----\n\n- Fix russian message format for delete/duplicate actions (:ghpull:`5662`)\n- Remove unnecessary import of bind_unix_socket (:ghpull:`5666`)\n- Tooltip style scope fix (:ghpull:`5672`)\n\nThank you to all the contributors:\n\n- Dmitry Akatov\n- Kevin Bates\n- Magda Stenius\n\n.. _release-6.1.1:\n\n6.1.1\n-----\n\n- Prevent inclusion of requests_unixsocket on Windows (:ghpull:`5650`)\n\nThank you to all the contributors:\n\n- Kevin Bates\n\n\n.. _release-6.1.0:\n\n6.1.0\n-----\nPlease note that this repository is currently maintained by a skeleton crew of maintainers\nfrom the Jupyter community.  For our approach moving forward, please see this\n`notice <https://github.com/jupyter/notebook#notice>`_ from the README. Thank you.\n\nHere is an enumeration of changes made since the last release and included in 6.1.0.\n\n- Remove deprecated encoding parameter for Python 3.9 compatibility. (:ghpull:`5174`)\n- Add support for async kernel management (:ghpull:`4479`)\n- Fix typo in password_required help message (:ghpull:`5320`)\n- Gateway only: Ensure launch and request timeouts are in sync (:ghpull:`5317`)\n- Update Markdown Cells example to HTML5 video tag (:ghpull:`5411`)\n- Integrated LoginWidget into edit to enable users to logout from the t\u2026 (:ghpull:`5406`)\n- Update message about minimum Tornado version (:ghpull:`5222`)\n- Logged notebook type (:ghpull:`5425`)\n- Added nl language (:ghpull:`5354`)\n- Add UNIX socket support to notebook server. (:ghpull:`4835`)\n- Update CodeMirror dependency (:ghpull:`5198`)\n- Tree added download multiple files (:ghpull:`5351`)\n- Toolbar buttons tooltip: show help instead of label (:ghpull:`5107`)\n- Remove unnecessary import of requests_unixsocket (:ghpull:`5451`)\n- Add ability to cull terminals and track last activity (:ghpull:`5372`)\n- Code refactoring notebook.js (:ghpull:`5352`)\n- Install terminado for docs build (:ghpull:`5462`)\n- Convert notifications JS test to selenium (:ghpull:`5455`)\n- Add cell attachments to markdown example (:ghpull:`5412`)\n- Add Japanese document (:ghpull:`5231`)\n- Migrate Move multiselection test to selenium (:ghpull:`5158`)\n- Use ``cmdtrl-enter`` to run a cell (:ghpull:`5120`)\n- Fix broken \"Raw cell MIME type\" dialog (:ghpull:`5385`)\n- Make a notebook writable after successful save-as (:ghpull:`5296`)\n- Add actual watch script (:ghpull:`4738`)\n- Added ``--autoreload`` flag to ``NotebookApp`` (:ghpull:`4795`)\n- Enable check_origin on gateway websocket communication (:ghpull:`5471`)\n- Restore detection of missing terminado package (:ghpull:`5465`)\n- Culling: ensure ``last_activity`` attr exists before use (:ghpull:`5355`)\n- Added functionality to allow filter kernels by Jupyter Enterprise Gat\u2026 (:ghpull:`5484`)\n- 'Play' icon for run-cell toolbar button (:ghpull:`2922`)\n- Bump minimum version of jQuery to 3.5.0 (:ghpull:`5491`)\n- Remove old JS markdown tests, add a new one in selenium (:ghpull:`5497`)\n- Add support for more RTL languages (:ghpull:`5036`)\n- Make markdown cells stay RTL in edit mode (:ghpull:`5037`)\n- Unforce RTL output display (:ghpull:`5039`)\n- Fixed multicursor backspacing (:ghpull:`4880`)\n- Implemented Split Cell for multicursor (:ghpull:`4824`)\n- Alignment issue [FIXED] (:ghpull:`3173`)\n- MathJax: Support for ``\\gdef`` (:ghpull:`4407`)\n- Another (Minor) Duplicate Code Reduction (:ghpull:`5316`)\n- Update readme regarding maintenance (:ghpull:`5500`)\n- Document contents chunks (:ghpull:`5508`)\n- Backspace deletes empty line (:ghpull:`5516`)\n- The dropdown submenu at notebook page is not keyboard accessible (:ghpull:`4732`)\n- Tooltips visible through keyboard navigation for specified buttons (:ghpull:`4729`)\n- Fix for recursive symlink (:ghpull:`4670`)\n- Fix for the terminal shutdown issue (:ghpull:`4180`)\n- Add japanese translation files (:ghpull:`4490`)\n- Workaround for socket permission errors on Cygwin (:ghpull:`4584`)\n- Implement optional markdown header and footer files (:ghpull:`4043`)\n- Remove double link when using ``custom_display_url`` (:ghpull:`5544`)\n- Respect ``cell.is_editable`` during find-and-replace (:ghpull:`5545`)\n- Fix exception causes all over the codebase (:ghpull:`5556`\n- Improve login shell heuristics (:ghpull:`5588`)\n- Added support for ``JUPYTER_TOKEN_FILE`` (:ghpull:`5587`)\n- Kill notebook itself when server cull idle kernel (:ghpull:`5593`)\n- Implement password hashing with bcrypt (:ghpull:`3793`)\n- Fix broken links (:ghpull:`5600`)\n- Russian internationalization support (:ghpull:`5571`)\n- Add a metadata tag to override notebook direction (ltr/rtl) (:ghpull:`5052`)\n- Paste two images from clipboard in markdown cell (:ghpull:`5598`)\n- Add keyboard shortcuts to menu dropdowns (:ghpull:`5525`)\n- Update codemirror to ``5.56.0+components1`` (:ghpull:`5637`)\n\nThank you to all the contributors:\n\n- Aaron Myatt\n- Adam Blake\n- Afshin Taylor Darian\n- Aman Bansal\n- Ben Thayer\n- berendjan\n- Bruno P. Kinoshita\n- bzinberg\n- Christophe Cadilhac\n- Daiki Katsuragawa\n- David Lukes\n- Dmitriy Q\n- dmpe\n- dylanzjy\n- dSchurch\n- E\\. M\\. Bray\n- ErwinRussel\n- Felix M\u00f6nckemeyer\n- Grant Nestor\n- Jarrad Whitaker\n- Jesus Panales Castillo\n- Joshua Zeltser\n- Karthikeyan Singaravelan\n- Kenichi Ito\n- Kevin Bates\n- Koki Nishihara\n- Kris Wilson\n- Kyle Kelley\n- Laura Merlo\n- levinxo\n- Luciano Resende\n- Luis Cabezon Manchado\n- Madhusudhan Srinivasa\n- Matthias Geier\n- mattn\n- Max Klein\n- Min RK\n- Mingxuan Lin\n- Mohammad Mostafa Farzan\n- Niko Felger\n- Norah Abanumay\n- Onno Broekmans\n- PierreMB\n- pinarkavak\n- Ram Rachum\n- Reece Hart\n- Remi Rampin\n- Rohit Sanjay\n- Shane Canon\n- Simon Li\n- Steinar Sturlaugsson\n- Steven Silvester\n- taohan16\n- Thew Dhanat\n- Thomas Kluyver\n- Toon Baeyens\n- Vidar Tonaas Fauske\n- Zachary Sailer\n\n.. _release-6.0.3:\n\n6.0.3\n-----\n\n- Dependency updates to fix startup issues on Windows platform\n- Add support for nbconvert 6.x\n- Creation of recent tab\n\nThanks for all the contributors:\n\n- Luciano Resende\n- Kevin Bates\n- ahangsleben\n- Zachary Sailer\n- Pallavi Bharadwaj\n- Thomas Kluyver\n- Min RK\n- forest0\n- Bibo Hao\n- Michal Charemza\n- Sergey Shevelev\n- Shuichiro MAKIGAKI\n- krinsman\n- TPartida\n- Landen McDonald\n- Tres DuBiel\n\n.. _release-6.0.2:\n\n6.0.2\n-----\n\n- Update JQuery dependency to version 3.4.1 to fix security vulnerability (CVE-2019-11358)\n- Update CodeMirror to version 5.48.4 to fix Python formatting issues\n- Continue removing obsolete Python 2.x code/dependencies\n- Multiple documentation updates\n\nThanks for all the contributors:\n\n- David Robles\n- Jason Grout\n- Kerwin Sun\n- Kevin Bates\n- Kyle Kelley\n- Luciano Resende\n- Marcus D Sherman\n- Sasaki Takeru\n- Tom Jarosz\n- Vidar Tonaas Fauske\n- Wes Turner\n- Zachary Sailer\n\n.. _release-6.0.1:\n\n6.0.1\n-----\n\n- Attempt to re-establish websocket connection to Gateway (:ghpull:`4777`)\n- Add missing react-dom js to package data (:ghpull:`4772`)\n\nThanks for all the contributors:\n\n- Eunsoo Park\n- Min RK\n\n.. _release-6.0:\n\n6.0\n---\n\nThis is the first major release of the Jupyter Notebook since version 5.0 (March 2017).\n\nWe encourage users to start trying JupyterLab, which has just announced it's 1.0 release in preparation\nfor a future transition.\n\n- Remove Python 2.x support in favor of Python 3.5 and higher.\n- Multiple accessibility enhancements and bug-fixes.\n- Multiple translation enhancements and bug-fixes.\n- Remove deprecated ANSI CSS styles.\n- Native support to forward requests to Jupyter Gateway(s) (Embedded NB2KG).\n- Use JavaScript to redirect users to notebook homepage.\n- Enhanced SSL/TLS security by using PROTOCOL_TLS which selects the highest ssl/tls\n  protocol version available that both the client and server support. When PROTOCOL_TLS\n  is not available use PROTOCOL_SSLv23.\n- Add ``?no_track_activity=1`` argument to allow API requests.\n  to not be registered as activity (e.g. API calls by external activity monitors).\n- Kernels shutting down due to an idle timeout is no longer considered\n  an activity-updating event.\n- Further improve compatibility with tornado 6 with improved\n  checks for when websockets are closed.\n- Launch the browser with a local file which redirects to the server address including\n  the authentication token. This prevents another logged-in user from stealing the token\n  from command line arguments and authenticating to the server.\n  The single-use token previously used to mitigate this has been removed.\n  Thanks to Dr. Owain Kenway for suggesting the local file approach.\n- Respect nbconvert entrypoints as sources for exporters\n- Update to CodeMirror to 5.37, which includes f-string syntax for Python 3.6.\n- Update jquery-ui to 1.12\n- Execute cells by clicking icon in input prompt.\n- New \"Save as\" menu option.\n- When serving on a loopback interface, protect against DNS rebinding by\n  checking the ``Host`` header from the browser.\n  This check can be disabled if necessary by setting\n  ``NotebookApp.allow_remote_access``.\n  (Disabled by default while we work out some Mac issues in :ghissue:`3754`).\n- Add kernel_info_timeout traitlet to enable restarting slow kernels.\n- Add ``custom_display_host`` config option to override displayed URL.\n- Add /metrics endpoint for Prometheus Metrics.\n- Optimize large file uploads.\n- Allow access control headers to be overriden in jupyter_notebook_config.py to support\n  greater CORS and proxy configuration flexibility.\n- Add support for terminals on windows.\n- Add a \"restart and run all\" button to the toolbar.\n- Frontend/extension-config: allow default json files in a .d directory.\n- Allow setting token via jupyter_token env.\n- Cull idle kernels using ``--MappingKernelManager.cull_idle_timeout``.\n- Allow read-only notebooks to be trusted.\n- Convert JS tests to Selenium.\n\n\nSecurity Fixes included in previous minor releases of Jupyter Notebook and also included in version 6.0.\n\n- Fix Open Redirect vulnerability (CVE-2019-10255)\n  where certain malicious URLs could redirect from the Jupyter login page\n  to a malicious site after a successful login.\n\n- Contains a security fix for a cross-site inclusion (XSSI) vulnerability (CVE-2019\u20139644),\n  where files at a known URL could be included in a page from an unauthorized website if\n  the user is logged into a Jupyter server. The fix involves setting the\n  ``X-Content-Type-Options: nosniff`` header, and applying CSRF checks previously on all\n  non-GET API requests to GET requests to API endpoints and the /files/ endpoint.\n\n- Check Host header to more securely protect localhost deployments from DNS rebinding.\n  This is a pre-emptive measure, not fixing a known vulnerability.\n  Use ``.NotebookApp.allow_remote_access`` and ``.NotebookApp.local_hostnames`` to configure\n  access.\n\n- Upgrade bootstrap to 3.4, fixing an XSS vulnerability, which has been\n  assigned `CVE-2018-14041 <https://nvd.nist.gov/vuln/detail/CVE-2018-14041>`_.\n\n- Contains a security fix preventing malicious directory names\n  from being able to execute javascript.\n\n- Contains a security fix preventing nbconvert endpoints from executing javascript with\n  access to the server API. CVE request pending.\n\n\n\nThanks for all the contributors:\n\n* AAYUSH SINHA\n* Aaron Hall, MBA\n* Abhinav Sagar\n* Adam Rule\n* Adeel Ahmad\n* Alex Rothberg\n* Amy Skerry-Ryan\n* Anastasis Germanidis\n* Andr\u00e9s S\u00e1nchez\n* Arjun Radhakrishna\n* Arovit Narula\n* Benda Xu\n* Bj\u00f6rn Gr\u00fcning\n* Brian E. Granger\n* Carol Willing\n* Celina Kilcrease\n* Chris Holdgraf\n* Chris Miller\n* Ciaran Langton\n* Damian Avila\n* Dana Lee\n* Daniel Farrell\n* Daniel Nicolai\n* Dar\u00edo Here\u00f1\u00fa\n* Dave Aitken\n* Dave Foster\n* Dave Hirschfeld\n* Denis Ledoux\n* Dmitry Mikushin\n* Dominic Kuang\n* Douglas Hanley\n* Elliott Sales de Andrade\n* Emilio Talamante Lugo\n* Eric Perry\n* Ethan T. Hendrix\n* Evan Van Dam\n* Francesco Franchina\n* Fr\u00e9d\u00e9ric Chapoton\n* F\u00e9lix-Antoine Fortin\n* Gabriel\n* Gabriel N\u00fctzi\n* Gabriel Ruiz\n* Gestalt LUR\n* Grant Nestor\n* Gustavo Efeiche\n* Harsh Vardhan\n* Heng GAO\n* Hisham Elsheshtawy\n* Hong Xu\n* Ian Rose\n* Ivan Ogasawara\n* J Forde\n* Jason Grout\n* Jessica B. Hamrick\n* Jiaqi Liu\n* John Emmons\n* Josh Barnes\n* Karthik Balakrishnan\n* Kevin Bates\n* Kirit Thadaka\n* Kristian Gregorius Hustad\n* Kyle Kelley\n* Leo Gallucci\n* Lilian Besson\n* Lucas Seiki Oshiro\n* Luciano Resende\n* Luis Angel Rodriguez Guerrero\n* M Pacer\n* Maarten Breddels\n* Mac Knight\n* Madicken Munk\n* Maiti\u00fa \u00d3 Ciar\u00e1in\n* Marc Udoff\n* Mathis HAMMEL\n* Mathis Rosenhauer\n* Matthias Bussonnier\n* Matthias Geier\n* Max Vovshin\n* Maxime Mouchet\n* Michael Chirico\n* Michael Droettboom\n* Michael Heilman\n* Michael Scott Cuthbert\n* Michal Charemza\n* Mike Boyle\n* Milos Miljkovic\n* Min RK\n* Miro Hron\u010dok\n* Nicholas Bollweg\n* Nitesh Sawant\n* Ondrej Jariabka\n* Park Hae Jin\n* Paul Ivanov\n* Paul Masson\n* Peter Parente\n* Pierre Tholoniat\n* Remco Verhoef\n* Roland Weber\n* Roman Kornev\n* Rosa Swaby\n* Roy Hyunjin Han\n* Sally\n* Sam Lau\n* Samar Sultan\n* Shiti Saxena\n* Simon Biggs\n* Spencer Park\n* Stephen Ward\n* Steve (Gadget) Barnes\n* Steven Silvester\n* Surya Prakash Susarla\n* Syed Shah\n* Sylvain Corlay\n* Thomas Aarholt\n* Thomas Kluyver\n* Tim\n* Tim Head\n* Tim Klever\n* Tim Metzler\n* Todd\n* Tom Jorquera\n* Tyler Makaro\n* Vaibhav Sagar\n* Victor\n* Vidar Tonaas Fauske\n* Vu Minh Tam\n* V\u00edt Tu\u010dek\n* Will Costello\n* Will Starms\n* William Hosford\n* Xiaohan Li\n* Yuvi Panda\n* ashley teoh\n* nullptr\n\n\n\n.. _release-5.7.8:\n\n5.7.8\n-----\n\n- Fix regression in restarting kernels in 5.7.5.\n  The restart handler would return before restart was completed.\n- Further improve compatibility with tornado 6 with improved\n  checks for when websockets are closed.\n- Fix regression in 5.7.6 on Windows where .js files could have the wrong mime-type.\n- Fix Open Redirect vulnerability (CVE-2019-10255)\n  where certain malicious URLs could redirect from the Jupyter login page\n  to a malicious site after a successful login.\n  5.7.7 contained only a partial fix for this issue.\n\n.. _release-5.7.6:\n\n5.7.6\n-----\n\n5.7.6 contains a security fix for a cross-site inclusion (XSSI) vulnerability (CVE-2019\u20139644),\nwhere files at a known URL could be included in a page from an unauthorized website if the user is logged into a Jupyter server.\nThe fix involves setting the ``X-Content-Type-Options: nosniff``\nheader, and applying CSRF checks previously on all non-GET\nAPI requests to GET requests to API endpoints and the /files/ endpoint.\n\nThe attacking page is able to access some contents of files when using Internet Explorer through script errors,\nbut this has not been demonstrated with other browsers.\n\n.. _release-5.7.5:\n\n5.7.5\n-----\n\n- Fix compatibility with tornado 6 (:ghpull:`4392`, :ghpull:`4449`).\n- Fix opening integer filedescriptor during startup on Python 2 (:ghpull:`4349`)\n- Fix compatibility with asynchronous `KernelManager.restart_kernel` methods (:ghpull:`4412`)\n\n.. _release-5.7.4:\n\n5.7.4\n-----\n\n5.7.4 fixes a bug introduced in 5.7.3, in which the ``list_running_servers()``\nfunction attempts to parse HTML files as JSON, and consequently crashes\n(:ghpull:`4284`).\n\n.. _release-5.7.3:\n\n5.7.3\n-----\n\n5.7.3 contains one security improvement and one security fix:\n\n- Launch the browser with a local file which redirects to the server address\n  including the authentication token (:ghpull:`4260`).\n  This prevents another logged-in user from stealing the token from command line\n  arguments and authenticating to the server.\n  The single-use token previously used to mitigate this has been removed.\n  Thanks to Dr. Owain Kenway for suggesting the local file approach.\n- Upgrade bootstrap to 3.4, fixing an XSS vulnerability, which has been\n  assigned `CVE-2018-14041 <https://nvd.nist.gov/vuln/detail/CVE-2018-14041>`_\n  (:ghpull:`4271`).\n\n.. _release-5.7.2:\n\n5.7.2\n-----\n\n5.7.2 contains a security fix preventing malicious directory names\nfrom being able to execute javascript. CVE request pending.\n\n.. _release-5.7.1:\n\n5.7.1\n-----\n\n5.7.1 contains a security fix preventing nbconvert endpoints from executing javascript with access to the server API. CVE request pending.\n\n.. _release-5.7.0:\n\n5.7.0\n-----\n\nNew features:\n\n- Update to CodeMirror to 5.37, which includes f-string syntax for Python 3.6 (:ghpull:`3816`)\n- Update jquery-ui to 1.12 (:ghpull:`3836`)\n- Check Host header to more securely protect localhost deployments from DNS rebinding.\n  This is a pre-emptive measure, not fixing a known vulnerability (:ghpull:`3766`).\n  Use ``.NotebookApp.allow_remote_access`` and ``.NotebookApp.local_hostnames`` to configure\n  access.\n- Allow access-control-allow-headers to be overridden (:ghpull:`3886`)\n- Allow configuring max_body_size and max_buffer_size (:ghpull:`3829`)\n- Allow configuring get_secure_cookie keyword-args (:ghpull:`3778`)\n- Respect nbconvert entrypoints as sources for exporters (:ghpull:`3879`)\n- Include translation sources in source distributions (:ghpull:`3925`, :ghpull:`3931`)\n- Various improvements to documentation (:ghpull:`3799`, :ghpull:`3800`,\n  :ghpull:`3806`, :ghpull:`3883`, :ghpull:`3908`)\n\nFixing problems:\n\n- Fix breadcrumb link when running with a base url (:ghpull:`3905`)\n- Fix possible type error when closing activity stream (:ghpull:`3907`)\n- Disable metadata editing for non-editable cells (:ghpull:`3744`)\n- Fix some styling and alignment of prompts caused by regressions in 5.6.0.\n- Enter causing page reload in shortcuts editor (:ghpull:`3871`)\n- Fix uploading to the same file twice (:ghpull:`3712`)\n\nSee the 5.7 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.7>`__ involved in this release.\n\nThanks to the following contributors:\n\n* Aaron Hall\n* Benjamin Ragan-Kelley\n* Bill Major\n* bxy007\n* Dave Aitken\n* Denis Ledoux\n* F\u00e9lix-Antoine Fortin\n* Gabriel\n* Grant Nestor\n* Kevin Bates\n* Kristian Gregorius Hustad\n* M Pacer\n* Madicken Munk\n* Maitiu O Ciarain\n* Matthias Bussonnier\n* Michael Boyle\n* Michael Chirico\n* Mokkapati, Praneet(ES)\n* Peter Parente\n* Sally Wilsak\n* Steven Silvester\n* Thomas Kluyver\n* Walter Martin\n\n.. _release-5.6.0:\n\n5.6.0\n-----\n\nNew features:\n\n- Execute cells by clicking icon in input prompt (:ghpull:`3535`, :ghpull:`3687`)\n- New \"Save as\" menu option (:ghpull:`3289`)\n- When serving on a loopback interface, protect against DNS rebinding by\n  checking the ``Host`` header from the browser (:ghpull:`3714`).\n  This check can be disabled if necessary by setting\n  ``NotebookApp.allow_remote_access``.\n  (Disabled by default while we work out some Mac issues in :ghissue:`3754`).\n- Add kernel_info_timeout traitlet to enable restarting slow kernels (:ghpull:`3665`)\n- Add ``custom_display_host`` config option to override displayed URL (:ghpull:`3668`)\n- Add /metrics endpoint for Prometheus Metrics (:ghpull:`3490`)\n- Update to MathJax 2.7.4 (:ghpull:`3751`)\n- Update to jQuery 3.3 (:ghpull:`3655`)\n- Update marked to 0.4 (:ghpull:`3686`)\n\nFixing problems:\n\n- Don't duplicate token in displayed URL (:ghpull:`3656`)\n- Clarify displayed URL when listening on all interfaces (:ghpull:`3703`)\n- Don't trash non-empty directories on Windows (:ghpull:`3673`)\n- Include LICENSE file in wheels (:ghpull:`3671`)\n- Don't show \"0 active kernels\" when starting the notebook (:ghpull:`3696`)\n\nTesting:\n\n- Add find replace test (:ghpull:`3630`)\n- Selenium test for deleting all cells (:ghpull:`3601`)\n- Make creating a new notebook more robust (:ghpull:`3726`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- lucasoshiro (`lucasoshiro <https://github.com/lucasoshiro>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Todd (`toddrme2178 <https://github.com/toddrme2178>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.6 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.6>`__ involved in this release.\n\n.. _release-5.5.0:\n\n5.5.0\n-----\n\nNew features:\n\n- The files list now shows file sizes (:ghpull:`3539`)\n- Add a quit button in the dashboard (:ghpull:`3004`)\n- Display hostname in the terminal when running remotely (:ghpull:`3356`, :ghpull:`3593`)\n- Add slides exportation/download to the menu (:ghpull:`3287`)\n- Add any extra installed nbconvert exporters to the \"Download as\" menu (:ghpull:`3323`)\n- Editor: warning when overwriting a file that is modified on disk (:ghpull:`2783`)\n- Display a warning message if cookies are not enabled (:ghpull:`3511`)\n- Basic ``__version__`` reporting for extensions (:ghpull:`3541`)\n- Add ``NotebookApp.terminals_enabled`` config option (:ghpull:`3478`)\n- Make buffer time between last modified on disk and last modified on last save configurable (:ghpull:`3273`)\n- Allow binding custom shortcuts for 'close and halt' (:ghpull:`3314`)\n- Add description for 'Trusted' notification (:ghpull:`3386`)\n- Add ``settings['activity_sources']`` (:ghpull:`3401`)\n- Add an ``output_updated.OutputArea`` event (:ghpull:`3560`)\n\n\nFixing problems:\n\n- Fixes to improve web accessibility (:ghpull:`3507`)\n\n  - There is more to do on this! See :ghissue:`1801`.\n\n- Fixed color contrast issue in tree.less (:ghpull:`3336`)\n- Allow cancelling upload of large files (:ghpull:`3373`)\n- Don't clear login cookie on requests without cookie (:ghpull:`3380`)\n- Don't trash files on different device to home dir on Linux (:ghpull:`3304`)\n- Clear waiting asterisks when restarting kernel (:ghpull:`3494`)\n- Fix output prompt when ``execution_count`` missing (:ghpull:`3236`)\n- Make the 'changed on disk' dialog work when displayed twice (:ghpull:`3589`)\n- Fix going back to root directory with history in notebook list (:ghpull:`3411`)\n- Allow defining keyboard shortcuts for missing actions (:ghpull:`3561`)\n- Prevent default on pageup/pagedown when completer is active (:ghpull:`3500`)\n- Prevent default event handling on new terminal (:ghpull:`3497`)\n- ConfigManager should not write out default values found in the .d directory (:ghpull:`3485`)\n- Fix leak of iopub object in activity monitoring (:ghpull:`3424`)\n- Javascript lint in notebooklist.js (:ghpull:`3409`)\n- Some Javascript syntax fixes (:ghpull:`3294`)\n- Convert native for loop to ``Array.forEach()`` (:ghpull:`3477`)\n- Disable cache when downloading nbconvert output (:ghpull:`3484`)\n- Add missing digestmod arg to HMAC (:ghpull:`3399`)\n- Log OSErrors failing to create less-critical files during startup (:ghpull:`3384`)\n- Use powershell on Windows (:ghpull:`3379`)\n- API spec improvements, API handler improvements (:ghpull:`3368`)\n- Set notebook to dirty state after change to kernel metadata (:ghpull:`3350`)\n- Use CSP header to treat served files as belonging to a separate origin (:ghpull:`3341`)\n- Don't install gettext into builtins (:ghpull:`3330`)\n- Add missing ``import _`` (:ghpull:`3316`, :ghpull:`3326`)\n- Write ``notebook.json`` file atomically (:ghpull:`3305`)\n- Fix clicking with modifiers, page title updates (:ghpull:`3282`)\n- Upgrade jQuery to version 2.2 (:ghpull:`3428`)\n- Upgrade xterm.js to 3.1.0 (:ghpull:`3189`)\n- Upgrade moment.js to 2.19.3 (:ghpull:`3562`)\n- Upgrade CodeMirror to 5.35 (:ghpull:`3372`)\n- \"Require\" pyzmq>=17 (:ghpull:`3586`)\n\nDocumentation:\n\n- Documentation updates and organisation (:ghpull:`3584`)\n- Add section in docs about privacy (:ghpull:`3571`)\n- Add explanation on how to change the type of a cell to Markdown (:ghpull:`3377`)\n- Update docs with confd implementation details (:ghpull:`3520`)\n- Add more information for where ``jupyter_notebook_config.py`` is located (:ghpull:`3346`)\n- Document options to enable nbextensions in specific sections (:ghpull:`3525`)\n- jQuery attribute selector value MUST be surrounded by quotes (:ghpull:`3527`)\n- Do not execute special notebooks with nbsphinx (:ghpull:`3360`)\n- Other minor fixes in :ghpull:`3288`, :ghpull:`3528`, :ghpull:`3293`, :ghpull:`3367`\n\nTesting:\n\n- Testing with Selenium & Sauce labs (:ghpull:`3321`)\n- Selenium utils + markdown rendering tests (:ghpull:`3458`)\n- Convert insert cell tests to Selenium (:ghpull:`3508`)\n- Convert prompt numbers tests to Selenium (:ghpull:`3554`)\n- Convert delete cells tests to Selenium (:ghpull:`3465`)\n- Convert undelete cell tests to Selenium (:ghpull:`3475`)\n- More selenium testing utilities (:ghpull:`3412`)\n- Only check links when build is trigger by Travis Cron job (:ghpull:`3493`)\n- Fix Appveyor build errors (:ghpull:`3430`)\n- Undo patches in teardown before attempting to delete files (:ghpull:`3459`)\n- Get tests running with tornado 5 (:ghpull:`3398`)\n- Unpin ipykernel version on Travis (:ghpull:`3223`)\n\nThanks to the following contributors:\n\n- Arovit Narula (`arovit <https://github.com/arovit>`__)\n- Ashley Teoh (`ashleytqy <https://github.com/ashleytqy>`__)\n- Nicholas Bollweg (`bollwyvl <https://github.com/bollwyvl>`__)\n- Alex Rothberg (`cancan101 <https://github.com/cancan101>`__)\n- Celina Kilcrease (`ckilcrease <https://github.com/ckilcrease>`__)\n- dabuside (`dabuside <https://github.com/dabuside>`__)\n- Damian Avila (`damianavila <https://github.com/damianavila>`__)\n- Dana Lee (`danagilliann <https://github.com/danagilliann>`__)\n- Dave Hirschfeld (`dhirschfeld <https://github.com/dhirschfeld>`__)\n- Heng GAO (`ehengao <https://github.com/ehengao>`__)\n- Leo Gallucci (`elgalu <https://github.com/elgalu>`__)\n- Evan Van Dam (`evandam <https://github.com/evandam>`__)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Ethan T. Hendrix (`hendrixet <https://github.com/hendrixet>`__)\n- Miro Hron\u010dok (`hroncok <https://github.com/hroncok>`__)\n- Paul Ivanov (`ivanov <https://github.com/ivanov>`__)\n- Dar\u00edo Here\u00f1\u00fa (`kant <https://github.com/kant>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Michael Droettboom (`mdboom <https://github.com/mdboom>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n- Peter Parente (`parente <https://github.com/parente>`__)\n- Paul Masson (`paulmasson <https://github.com/paulmasson>`__)\n- Philipp Rudiger (`philippjfr <https://github.com/philippjfr>`__)\n- Mac Knight (`Shels1909 <https://github.com/Shels1909>`__)\n- Hisham Elsheshtawy (`Sheshtawy <https://github.com/Sheshtawy>`__)\n- Simon Biggs (`SimonBiggs <https://github.com/SimonBiggs>`__)\n- Sunil Hari (``@sunilhari``)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Tim Klever (`tklever <https://github.com/tklever>`__)\n- Gabriel Ruiz (`unnamedplay-r <https://github.com/unnamedplay-r>`__)\n- Vaibhav Sagar (`vaibhavsagar <https://github.com/vaibhavsagar>`__)\n- William Hosford (`whosford <https://github.com/whosford>`__)\n- Hong (`xuhdev <https://github.com/xuhdev>`__)\n\nSee the 5.5 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.5>`__ involved in this release.\n\n.. _release-5.4.1:\n\n5.4.1\n-----\n\nA security release to fix `CVE-2018-8768\n<http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8768>`_.\n\nThanks to `Alex <https://hackerone.com/pisarenko>`__ for identifying this bug,\nand Jonathan Kamens and Scott Sanderson at Quantopian for verifying it and\nbringing it to our attention.\n\n.. _release-5.4.0:\n\n5.4.0\n-----\n\n- Fix creating files and folders after navigating directories in the dashboard\n  (:ghpull:`3264`).\n- Enable printing notebooks in colour, removing the CSS that made everything\n  black and white (:ghpull:`3212`).\n- Limit the completion options displayed in the notebook to 1000, to avoid\n  performance issues with very long lists (:ghpull:`3195`).\n- Accessibility improvements in ``tree.html`` (:ghpull:`3271`).\n- Added alt-text to the kernel logo image in the notebook UI (:ghpull:`3228`).\n- Added a test on Travis CI to flag if symlinks are accidentally introduced\n  in the future. This should prevent the issue that necessitated\n  :ref:`release-5.3.1` (:ghpull:`3227`).\n- Use lowercase letters for random IDs generated in our Javascript\n  (:ghpull:`3264`).\n- Removed duplicate code setting ``TextCell.notebook`` (:ghpull:`3256`).\n\nThanks to the following contributors:\n\n- Alex Soderman (`asoderman <https://github.com/asoderman>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- Nitesh Sawant (`ns23 <https://github.com/ns23>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n- Yuvi Panda (`yuvipanda <https://github.com/yuvipanda>`__)\n\nSee the 5.4 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.4>`__ involved in this release.\n\n.. _release-5.3.1:\n\n5.3.1\n-----\n\nReplaced a symlink in the repository with a copy, to fix issues installing\non Windows (:ghpull:`3220`).\n\n.. _release-5.3.0:\n\n5.3.0\n-----\n\nThis release introduces a couple noteable improvements, such as terminal support for Windows and support for OS trash (files deleted from the notebook dashboard are moved to the OS trash vs. deleted permanently).\n\n- Add support for terminals on windows (:ghpull:`3087`).\n- Add a \"restart and run all\" button to the toolbar (:ghpull:`2965`).\n- Send files to os trash mechanism on delete (:ghpull:`1968`).\n- Allow programmatic copy to clipboard (:ghpull:`3088`).\n- Use DOM History API for navigating between directories in the file browser (:ghpull:`3115`).\n- Add translated files to folder(docs-translations) (:ghpull:`3065`).\n- Allow non empty dirs to be deleted (:ghpull:`3108`).\n- Set cookie on base_url (:ghpull:`2959`).\n- Allow token-authenticated requests cross-origin by default (:ghpull:`2920`).\n- Change cull_idle_timeout_minimum to 1 from 300 (:ghpull:`2910`).\n- Config option to shut down server after n seconds with no kernels (:ghpull:`2963`).\n- Display a \"close\" button on load notebook error (:ghpull:`3176`).\n- Add action to command pallette to run CodeMirror's \"indentAuto\" on selection (:ghpull:`3175`).\n- Add option to specify extra services (:ghpull:`3158`).\n- Warn_bad_name should not use global name (:ghpull:`3160`).\n- Avoid overflow of hidden form (:ghpull:`3148`).\n- Fix shutdown trans loss (:ghpull:`3147`).\n- Find available kernelspecs more efficiently (:ghpull:`3136`).\n- Don\\'t try to translate missing help strings (:ghpull:`3122`).\n- Frontend/extension-config: allow default json files in a .d directory (:ghpull:`3116`).\n- Use `requirejs` vs. `require` (:ghpull:`3097`).\n- Fixes some ui bugs in firefox #3044 (:ghpull:`3058`).\n- Compare non-specific language code when choosing to use arabic numerals (:ghpull:`3055`).\n- Fix save-script deprecation (:ghpull:`3053`).\n- Include moment locales in package_data (:ghpull:`3051`).\n- Fix moment locale loading in bidi support (:ghpull:`3048`).\n- Tornado 5: periodiccallback loop arg will be removed (:ghpull:`3034`).\n- Use `/files` prefix for pdf-like files (:ghpull:`3031`).\n- Add folder for document translation (:ghpull:`3022`).\n- When login-in via token, let a chance for user to set the password (:ghpull:`3008`).\n- Switch to jupyter_core implementation of ensure_dir_exists (:ghpull:`3002`).\n- Send http shutdown request on \\'stop\\' subcommand (:ghpull:`3000`).\n- Work on loading ui translations  (:ghpull:`2969`).\n- Fix ansi inverse (:ghpull:`2967`).\n- Add send2trash to requirements for building docs (:ghpull:`2964`).\n- I18n readme.md improvement (:ghpull:`2962`).\n- Add \\'reason\\' field to json error responses (:ghpull:`2958`).\n- Add some padding for stream outputs (:ghpull:`3194`).\n- Always use setuptools in ``setup.py`` (:ghpull:`3206`).\n- Fix clearing cookies on logout when ``base_url`` is configured (:ghpull:`3207`).\n\nThanks to the following contributors:\n\n- bacboc (`bacboc <https://github.com/bacboc>`__)\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Matthias Bussonnier (`Carreau <https://github.com/Carreau>`__)\n- ChungJooHo (`ChungJooHo <https://github.com/ChungJooHo>`__)\n- edida (`edida <https://github.com/edida>`__)\n- Francesco Franchina (``ferdas``)\n- forbxy (`forbxy <https://github.com/forbxy>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Josh Barnes (`jcb91 <https://github.com/jcb91>`__)\n- JocelynDelalande (`JocelynDelalande <https://github.com/JocelynDelalande>`__)\n- Karthik Balakrishnan (`karthikb351 <https://github.com/karthikb351>`__)\n- Kevin Bates (`kevin-bates <https://github.com/kevin-bates>`__)\n- Kirit Thadaka (`kirit93 <https://github.com/kirit93>`__)\n- Lilian Besson (`Naereen <https://github.com/Naereen>`__)\n- Maarten Breddels (`maartenbreddels <https://github.com/maartenbreddels>`__)\n- Madhu94 (`Madhu94 <https://github.com/Madhu94>`__)\n- Matthias Geier (`mgeier <https://github.com/mgeier>`__)\n- Michael Heilman (`mheilman <https://github.com/mheilman>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- PHaeJin (`PHaeJin <https://github.com/PHaeJin>`__)\n- Sukneet (`Sukneet <https://github.com/Sukneet>`__)\n- Thomas Kluyver (`takluyver <https://github.com/takluyver>`__)\n\nSee the 5.3 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.3>`__ involved in this release.\n\n.. _release-5.2.1:\n\n5.2.1\n-----\n\n- Fix invisible CodeMirror cursor at specific browser zoom levels (:ghpull:`2983`).\n- Fix nbconvert handler causing broken export to PDF (:ghpull:`2981`).\n- Fix the prompt_area argument of the output area constructor. (:ghpull:`2961`).\n- Handle a compound extension in new_untitled (:ghpull:`2949`).\n- Allow disabling offline message buffering (:ghpull:`2916`).\n\nThanks to the following contributors:\n\n- Steven Silvester (`blink1073 <https://github.com/blink1073>`__)\n- Grant Nestor (`gnestor <https://github.com/gnestor>`__)\n- Jason Grout (`jasongrout <https://github.com/jasongrout>`__)\n- Min RK (`minrk <https://github.com/minrk>`__)\n- M Pacer (`mpacer <https://github.com/mpacer>`__)\n\nSee the 5.2.1 milestone on GitHub for a complete list of\n`pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2.1>`__ involved in this release.\n\n.. _release-5.2.0:\n\n5.2.0\n-----\n\n- Allow setting token via jupyter_token env (:ghpull:`2921`).\n- Fix some errors caused by raising 403 in get_current_user (:ghpull:`2919`).\n- Register contents_manager.files_handler_class directly (:ghpull:`2917`).\n- Update viewable_extensions (:ghpull:`2913`).\n- Show edit shortcuts modal after shortcuts modal is hidden (:ghpull:`2912`).\n- Improve edit/view behavior (:ghpull:`2911`).\n- The root directory of the notebook server should never be hidden (:ghpull:`2907`).\n- Fix notebook require config to match tools/build-main (:ghpull:`2888`).\n- Give page constructor default arguments (:ghpull:`2887`).\n- Fix codemirror.less to match codemirror\\'s expected padding layout (:ghpull:`2880`).\n- Add x-xsrftoken to access-control-allow-headers (:ghpull:`2876`).\n- Buffer messages when websocket connection is interrupted (:ghpull:`2871`).\n- Load locale dynamically only when not en-us (:ghpull:`2866`).\n- Changed key strength to 2048 bits (:ghpull:`2861`).\n- Resync jsversion with python version (:ghpull:`2860`).\n- Allow copy operation on modified, read-only notebook (:ghpull:`2854`).\n- Update error handling on apihandlers (:ghpull:`2853`).\n- Test python 3.6 on travis, drop 3.3 (:ghpull:`2852`).\n- Avoid base64-literals in image tests (:ghpull:`2851`).\n- Upgrade xterm.js to 2.9.2 (:ghpull:`2849`).\n- Changed all python variables named file to file_name to not override built_in file (:ghpull:`2830`).\n- Add more doc tests (:ghpull:`2823`).\n- Typos fix (:ghpull:`2815`).\n- Rename and update license [ci skip] (:ghpull:`2810`).\n- Travis builds doc  (:ghpull:`2808`).\n- Pull request i18n  (:ghpull:`2804`).\n- Factor out output_prompt_function, as is done with input prompt (:ghpull:`2774`).\n- Use rfc5987 encoding for filenames (:ghpull:`2767`).\n- Added path to the resources metadata, the same as in from_filename(...) in nbconvert.exporters.py (:ghpull:`2753`).\n- Make \"extrakeys\" consistent for notebook and editor (:ghpull:`2745`).\n- Bidi support (:ghpull:`2357`).\n\nSpecial thanks to `samarsultan <https://github.com/samarsultan>`__ and the Arabic Competence and Globalization Center Team at IBM Egypt for adding RTL (right-to-left) support to the notebook!\n\nSee the 5.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.2>`__ involved in this release.\n\n.. _release-5.1.0:\n\n5.1.0\n-----\n\n- Preliminary i18n implementation (:ghpull:`2140`).\n- Expose URL with auth token in notebook UI (:ghpull:`2666`).\n- Fix search background style (:ghpull:`2387`).\n- List running notebooks without requiring ``--allow-root`` (:ghpull:`2421`).\n- Allow session of type other than notebook (:ghpull:`2559`).\n- Fix search background style (:ghpull:`2387`).\n- Fix some Markdown styling issues (:ghpull:`2571`), (:ghpull:`2691`) and (:ghpull:`2534`).\n- Remove keymaps that conflict with non-English keyboards (:ghpull:`2535`).\n- Add session-specific favicons (notebook, terminal, file) (:ghpull:`2452`).\n- Add /api/shutdown handler (:ghpull:`2507`).\n- Include metadata when copying a cell (:ghpull:`2349`).\n- Stop notebook server from command line (:ghpull:`2388`).\n- Improve \"View\" and \"Edit\" file handling in dashboard (:ghpull:`2449`) and (:ghpull:`2402`).\n- Provide a promise to replace use of the ``app_initialized.NotebookApp`` event (:ghpull:`2710`).\n- Fix disabled collapse/expand output button (:ghpull:`2681`).\n- Cull idle kernels using ``--MappingKernelManager.cull_idle_timeout`` (:ghpull:`2215`).\n- Allow read-only notebooks to be trusted (:ghpull:`2718`).\n\nSee the 5.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A5.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A5.1>`__ involved in this release.\n\n.. _release-5.0.0:\n\n5.0.0\n-----\n\nThis is the first major release of the Jupyter Notebook since version 4.0 was\ncreated by the \"Big Split\" of IPython and Jupyter.\n\nWe encourage users to start trying JupyterLab in preparation for a future\ntransition.\n\nWe have merged more than 300 pull requests since 4.0. Some of the\nmajor user-facing changes are described here.\n\nFile sorting in the dashboard\n*****************************\n\nFiles in the dashboard may now be sorted by last modified date or name (:ghpull:`943`):\n\n.. image:: /_static/images/dashboard-sort.png\n   :align: center\n\nCell tags\n*********\n\nThere is a new cell toolbar for adding *cell tags* (:ghpull:`2048`):\n\n.. image:: /_static/images/cell-tags-toolbar.png\n   :align: center\n\nCell tags are a lightweight way to customise the behaviour of tools working with\nnotebooks; we're working on building support for them into tools like `nbconvert\n<https://nbconvert.readthedocs.io/en/latest/>`__ and `nbval\n<https://github.com/computationalmodelling/nbval>`__. To start using tags,\nselect ``Tags`` in the ``View > Cell Toolbar`` menu in a notebook.\n\nThe UI for editing cell tags is basic for now; we hope to improve it in future\nreleases.\n\nTable style\n***********\n\nThe default styling for tables in the notebook has been updated (:ghpull:`1776`).\n\nBefore:\n\n.. image:: /_static/images/table-style-before.png\n   :align: center\n\nAfter:\n\n.. image:: /_static/images/table-style-after.png\n  :align: center\n\nCustomise keyboard shortcuts\n****************************\n\nYou can now edit keyboard shortcuts for *Command Mode* within the UI\n(:ghpull:`1347`):\n\n.. image:: /_static/images/shortcut-editor.png\n   :align: center\n\nSee the ``Help > Edit Keyboard Shortcuts`` menu item and follow the instructions.\n\nOther additions\n***************\n\n- You can copy and paste cells between notebooks, using :kbd:`Ctrl-C` and\n  :kbd:`Ctrl-V` (:kbd:`Cmd-C` and :kbd:`Cmd-V` on Mac).\n\n- It's easier to configure a password for the notebook with the new\n  ``jupyter notebook password`` command (:ghpull:`2007`).\n\n- The file list can now be ordered by *last modified* or by *name*\n  (:ghpull:`943`).\n\n- Markdown cells now support attachments. Simply drag and drop an image from\n  your desktop to a markdown cell to add it. Unlike relative links that you\n  enter manually, attachments are embedded in the notebook itself. An\n  unreferenced attachment will be automatically scrubbed from the notebook on\n  save (:ghpull:`621`).\n\n- Undoing cell deletion now supports undeleting multiple cells. Cells may not be\n  in the same order as before their deletion, depending on the actions you did\n  on the meantime, but this should should help reduce the impact of\n  accidentally deleting code.\n\n- The file browser now has *Edit* and *View* buttons.\n\n- The file browser now supports moving multiple files at once\n  (:ghpull:`1088`).\n\n- The Notebook will refuse to run as root unless the ``--allow-root`` flag is\n  given (:ghpull:`1115`).\n\n- Keyboard shortcuts are now declarative (:ghpull:`1234`).\n\n- Toggling line numbers can now affect all cells (:ghpull:`1312`).\n\n- Add more visible *Trusted* and *Untrusted* notifications (:ghpull:`1658`).\n\n- The favicon (browser shortcut icon) now changes to indicate when the kernel is busy\n  (:ghpull:`1837`).\n\n- Header and toolbar visibility is now persisted in nbconfig and across sessions\n  (:ghpull:`1769`).\n\n- Load server extensions with ConfigManager so that merge happens recursively,\n  unlike normal config values, to make it load more consistently with frontend\n  extensions(:ghpull:`2108`).\n\n- The notebook server now supports the `bundler API\n  <https://jupyter-notebook.readthedocs.io/en/latest/extending/bundler_extensions.html>`__\n  from the `jupyter_cms incubator project\n  <https://github.com/jupyter-incubator/contentmanagement>`__ (:ghpull:`1579`).\n\n- The notebook server now provides information about kernel activity in\n  its kernel resource API (:ghpull:`1827`).\n\nRemember that upgrading ``notebook`` only affects the user\ninterface. Upgrading kernels and libraries may also provide new features,\nbetter stability and integration with the notebook interface.\n\n.. _release-4.4.0:\n\n4.4.0\n-----\n\n- Allow override of output callbacks to redirect output messages. This is used to implement the ipywidgets Output widget, for example.\n- Fix an async bug in message handling by allowing comm message handlers to return a promise which halts message processing until the promise resolves.\n\nSee the 4.4 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.4>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.4>`__ involved in this release.\n\n.. _release-4.3.2:\n\n4.3.2\n-----\n\n4.3.2 is a patch release with a bug fix for CodeMirror and improved handling of the \"editable\" cell metadata field.\n\n- Monkey-patch for CodeMirror that resolves `#2037 <https://github.com/jupyter/notebook/issues/2037>`__ without breaking `#1967 <https://github.com/jupyter/notebook/issues/1967>`__\n- Read-only (``\"editable\": false``) cells can be executed but cannot be split, merged, or deleted\n\nSee the 4.3.2 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.2>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.2>`__ involved in this release.\n\n.. _release-4.3.1:\n\n4.3.1\n-----\n\n4.3.1 is a patch release with a security patch, a couple bug fixes, and improvements to the newly-released token authentication.\n\n**Security fix**:\n\n- CVE-2016-9971. Fix CSRF vulnerability,\n  where malicious forms could create untitled files and start kernels\n  (no remote execution or modification of existing files)\n  for users of certain browsers (Firefox, Internet Explorer / Edge).\n  All previous notebook releases are affected.\n\nBug fixes:\n\n- Fix carriage return handling\n- Make the font size more robust against fickle browsers\n- Ignore resize events that bubbled up and didn't come from window\n- Add Authorization to allowed CORS headers\n- Downgrade CodeMirror to 5.16 while we figure out issues in Safari\n\nOther improvements:\n\n- Better docs for token-based authentication\n- Further highlight token info in log output when autogenerated\n\nSee the 4.3.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3.1>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3.1>`__ involved in this release.\n\n.. _release-4.3:\n\n4.3.0\n-----\n\n4.3 is a minor release with many bug fixes and improvements.\nThe biggest user-facing change is the addition of token authentication,\nwhich is enabled by default.\nA token is generated and used when your browser is opened automatically,\nso you shouldn't have to enter anything in the default circumstances.\nIf you see a login page\n(e.g. by switching browsers, or launching on a new port with ``--no-browser``),\nyou get a login URL with the token from the command ``jupyter notebook list``,\nwhich you can paste into your browser.\n\n\nHighlights:\n\n- API for creating mime-type based renderer extensions using :code:`OutputArea.register_mime_type` and :code:`Notebook.render_cell_output` methods. See `mimerender-cookiecutter <https://github.com/jupyterlab/mimerender-cookiecutter>`__ for reference implementations and cookiecutter.\n- Enable token authentication by default. See :ref:`server_security` for more details.\n- Update security docs to reflect new signature system\n- Switched from term.js to xterm.js\n\nBug fixes:\n\n- Ensure variable is set if exc_info is falsey\n- Catch and log handler exceptions in :code:`events.trigger`\n- Add debug log for static file paths\n- Don't check origin on token-authenticated requests\n- Remove leftover print statement\n- Fix highlighting of Python code blocks\n- :code:`json_errors` should be outermost decorator on API handlers\n- Fix remove old nbserver info files\n- Fix notebook mime type on download links\n- Fix carriage symbol behavior\n- Fix terminal styles\n- Update dead links in docs\n- If kernel is broken, start a new session\n- Include cross-origin check when allowing login URL redirects\n\nOther improvements:\n\n- Allow JSON output data with mime type ``application/*+json``\n- Allow kernelspecs to have spaces in them for backward compat\n- Allow websocket connections from scripts\n- Allow :code:`None` for post_save_hook\n- Upgrade CodeMirror to 5.21\n- Upgrade xterm to 2.1.0\n- Docs for using comms\n- Set :code:`dirty` flag when output arrives\n- Set :code:`ws-url` data attribute when accessing a notebook terminal\n- Add base aliases for nbextensions\n- Include :code:`@` operator in CodeMirror IPython mode\n- Extend mathjax_url docstring\n- Load nbextension in predictable order\n- Improve the error messages for nbextensions\n- Include cross-origin check when allowing login URL redirects\n\nSee the 4.3 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?utf8=%E2%9C%93&q=is%3Aissue%20milestone%3A4.3%20>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?utf8=%E2%9C%93&q=is%3Apr%20milestone%3A4.3%20>`__ involved in this release.\n\n\n.. _release-4.2.3:\n\n4.2.3\n-----\n\n4.2.3 is a small bugfix release on 4.2.\n\n Highlights:\n\n- Fix regression in 4.2.2 that delayed loading custom.js\n  until after ``notebook_loaded`` and ``app_initialized`` events have fired.\n- Fix some outdated docs and links.\n\n.. seealso::\n\n    4.2.3 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.3>`__.\n\n.. _release-4.2.2:\n\n4.2.2\n-----\n\n4.2.2 is a small bugfix release on 4.2, with an important security fix.\nAll users are strongly encouraged to upgrade to 4.2.2.\n\n Highlights:\n\n- **Security fix**: CVE-2016-6524, where untrusted latex output\n  could be added to the page in a way that could execute javascript.\n- Fix missing POST in OPTIONS responses.\n- Fix for downloading non-ascii filenames.\n- Avoid clobbering ssl_options, so that users can specify more detailed SSL\n  configuration.\n- Fix inverted load order in nbconfig, so user config has highest priority.\n- Improved error messages here and there.\n\n.. seealso::\n\n    4.2.2 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.2>`__.\n\n.. _release-4.2.1:\n\n4.2.1\n-----\n\n4.2.1 is a small bugfix release on 4.2. Highlights:\n\n- Compatibility fixes for some versions of ipywidgets\n- Fix for ignored CSS on Windows\n- Fix specifying destination when installing nbextensions\n\n.. seealso::\n\n    4.2.1 `on GitHub <https://github.com/jupyter/notebook/milestones/4.2.1>`__.\n\n.. _release-4.2.0:\n\n4.2.0\n-----\n\nRelease 4.2 adds a new API for enabling and installing extensions.\nExtensions can now be enabled at the system-level, rather than just per-user.\nAn API is defined for installing directly from a Python package, as well.\n\n.. seealso::\n\n    :doc:`./examples/Notebook/Distributing Jupyter Extensions as Python Packages`\n\n\nHighlighted changes:\n\n- Upgrade MathJax to 2.6 to fix vertical-bar appearing on some equations.\n- Restore ability for notebook directory to be root (4.1 regression)\n- Large outputs are now throttled, reducing the ability of output floods to\n  kill the browser.\n- Fix the notebook ignoring cell executions while a kernel is starting by\n  queueing the messages.\n- Fix handling of url prefixes (e.g. JupyterHub) in terminal and edit pages.\n- Support nested SVGs in output.\n\nAnd various other fixes and improvements.\n\n.. _release-4.1.0:\n\n4.1.0\n-----\n\nBug fixes:\n\n- Properly reap zombie subprocesses\n- Fix cross-origin problems\n- Fix double-escaping of the base URL prefix\n- Handle invalid unicode filenames more gracefully\n- Fix ANSI color-processing\n- Send keepalive messages for web terminals\n- Fix bugs in the notebook tour\n\nUI changes:\n\n- Moved the cell toolbar selector into the *View* menu. Added a button that\n  triggers a \"hint\" animation to the main toolbar so users can find the new\n  location. (Click here to see a `screencast <https://cloud.githubusercontent.com/assets/335567/10711889/59665a5a-7a3e-11e5-970f-86b89592880c.gif>`__ )\n\n    .. image:: /_static/images/cell-toolbar-41.png\n\n- Added *Restart & Run All* to the *Kernel* menu. Users can also bind it to a\n  keyboard shortcut on action ``restart-kernel-and-run-all-cells``.\n- Added multiple-cell selection. Users press ``Shift-Up/Down`` or ``Shift-K/J``\n  to extend selection in command mode. Various actions such as cut/copy/paste,\n  execute, and cell type conversions apply to all selected cells.\n\n  .. image:: /_static/images/multi-select-41.png\n\n- Added a command palette for executing Jupyter actions by name. Users press\n  ``Cmd/Ctrl-Shift-P`` or click the new command palette icon on the toolbar.\n\n  .. image:: /_static/images/command-palette-41.png\n\n- Added a *Find and Replace* dialog to the *Edit* menu. Users can also press\n  ``F`` in command mode to show the dialog.\n\n  .. image:: /_static/images/find-replace-41.png\n\nOther improvements:\n\n- Custom KernelManager methods can be Tornado coroutines, allowing async\n  operations.\n- Make clearing output optional when rewriting input with\n  ``set_next_input(replace=True)``.\n- Added support for TLS client authentication via ``--NotebookApp.client-ca``.\n- Added tags to ``jupyter/notebook`` releases on DockerHub. ``latest``\n  continues to track the master branch.\n\nSee the 4.1 milestone on GitHub for a complete list of\n`issues <https://github.com/jupyter/notebook/issues?page=3&q=milestone%3A4.1+is%3Aclosed+is%3Aissue&utf8=%E2%9C%93>`__\nand `pull requests <https://github.com/jupyter/notebook/pulls?q=milestone%3A4.1+is%3Aclosed+is%3Apr>`__ handled.\n\n4.0.x\n-----\n\n4.0.6\n*****\n\n- fix installation of mathjax support files\n- fix some double-escape regressions in 4.0.5\n- fix a couple of cases where errors could prevent opening a notebook\n\n4.0.5\n*****\n\nSecurity fixes for maliciously crafted files.\n\n- `CVE-2015-6938 <http://www.openwall.com/lists/oss-security/2015/09/02/3>`__: malicious filenames\n- `CVE-2015-7337 <http://www.openwall.com/lists/oss-security/2015/09/16/3>`__: malicious binary files in text editor.\n\nThanks to Jonathan Kamens at Quantopian and Juan Broull\u00f3n for the reports.\n\n\n4.0.4\n*****\n\n- Fix inclusion of mathjax-safe extension\n\n4.0.2\n*****\n\n- Fix launching the notebook on Windows\n- Fix the path searched for frontend config\n\n\n4.0.0\n*****\n\nFirst release of the notebook as a standalone package.\n", "\"\"\"Base Tornado handlers for the notebook server.\"\"\"\n\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\nimport datetime\nimport functools\nimport ipaddress\nimport json\nimport mimetypes\nimport os\nimport re\nimport sys\nimport traceback\nimport types\nimport warnings\nfrom http.client import responses\nfrom http.cookies import Morsel\n\nfrom urllib.parse import urlparse\nfrom jinja2 import TemplateNotFound\nfrom tornado import web, gen, escape, httputil\nfrom tornado.log import app_log\nimport prometheus_client\n\nfrom notebook._sysinfo import get_sys_info\n\nfrom traitlets.config import Application\nfrom ipython_genutils.path import filefind\nfrom ipython_genutils.py3compat import string_types\n\nimport notebook\nfrom notebook._tz import utcnow\nfrom notebook.i18n import combine_translations\nfrom notebook.utils import is_hidden, url_path_join, url_is_absolute, url_escape, urldecode_unix_socket_path\nfrom notebook.services.security import csp_report_uri\n\n#-----------------------------------------------------------------------------\n# Top-level handlers\n#-----------------------------------------------------------------------------\nnon_alphanum = re.compile(r'[^A-Za-z0-9]')\n\n_sys_info_cache = None\ndef json_sys_info():\n    global _sys_info_cache\n    if _sys_info_cache is None:\n        _sys_info_cache = json.dumps(get_sys_info())\n    return _sys_info_cache\n\ndef log():\n    if Application.initialized():\n        return Application.instance().log\n    else:\n        return app_log\n\nclass AuthenticatedHandler(web.RequestHandler):\n    \"\"\"A RequestHandler with an authenticated user.\"\"\"\n\n    @property\n    def content_security_policy(self):\n        \"\"\"The default Content-Security-Policy header\n        \n        Can be overridden by defining Content-Security-Policy in settings['headers']\n        \"\"\"\n        if 'Content-Security-Policy' in self.settings.get('headers', {}):\n            # user-specified, don't override\n            return self.settings['headers']['Content-Security-Policy']\n\n        return '; '.join([\n            \"frame-ancestors 'self'\",\n            # Make sure the report-uri is relative to the base_url\n            \"report-uri \" + self.settings.get('csp_report_uri', url_path_join(self.base_url, csp_report_uri)),\n        ])\n\n    def set_default_headers(self):\n        headers = {}\n        headers[\"X-Content-Type-Options\"] = \"nosniff\"\n        headers.update(self.settings.get('headers', {}))\n\n        headers[\"Content-Security-Policy\"] = self.content_security_policy\n\n        # Allow for overriding headers\n        for header_name, value in headers.items():\n            try:\n                self.set_header(header_name, value)\n            except Exception as e:\n                # tornado raise Exception (not a subclass)\n                # if method is unsupported (websocket and Access-Control-Allow-Origin\n                # for example, so just ignore)\n                self.log.debug(e)\n\n    def force_clear_cookie(self, name, path=\"/\", domain=None):\n        \"\"\"Deletes the cookie with the given name.\n\n        Tornado's cookie handling currently (Jan 2018) stores cookies in a dict\n        keyed by name, so it can only modify one cookie with a given name per\n        response. The browser can store multiple cookies with the same name\n        but different domains and/or paths. This method lets us clear multiple\n        cookies with the same name.\n\n        Due to limitations of the cookie protocol, you must pass the same\n        path and domain to clear a cookie as were used when that cookie\n        was set (but there is no way to find out on the server side\n        which values were used for a given cookie).\n        \"\"\"\n        name = escape.native_str(name)\n        expires = datetime.datetime.utcnow() - datetime.timedelta(days=365)\n\n        morsel = Morsel()\n        morsel.set(name, '', '\"\"')\n        morsel['expires'] = httputil.format_timestamp(expires)\n        morsel['path'] = path\n        if domain:\n            morsel['domain'] = domain\n        self.add_header(\"Set-Cookie\", morsel.OutputString())\n\n    def clear_login_cookie(self):\n        cookie_options = self.settings.get('cookie_options', {})\n        path = cookie_options.setdefault('path', self.base_url)\n        self.clear_cookie(self.cookie_name, path=path)\n        if path and path != '/':\n            # also clear cookie on / to ensure old cookies are cleared\n            # after the change in path behavior (changed in notebook 5.2.2).\n            # N.B. This bypasses the normal cookie handling, which can't update\n            # two cookies with the same name. See the method above.\n            self.force_clear_cookie(self.cookie_name)\n\n    def get_current_user(self):\n        if self.login_handler is None:\n            return 'anonymous'\n        return self.login_handler.get_user(self)\n\n    def skip_check_origin(self):\n        \"\"\"Ask my login_handler if I should skip the origin_check\n        \n        For example: in the default LoginHandler, if a request is token-authenticated,\n        origin checking should be skipped.\n        \"\"\"\n        if self.request.method == 'OPTIONS':\n            # no origin-check on options requests, which are used to check origins!\n            return True\n        if self.login_handler is None or not hasattr(self.login_handler, 'should_check_origin'):\n            return False\n        return not self.login_handler.should_check_origin(self)\n\n    @property\n    def token_authenticated(self):\n        \"\"\"Have I been authenticated with a token?\"\"\"\n        if self.login_handler is None or not hasattr(self.login_handler, 'is_token_authenticated'):\n            return False\n        return self.login_handler.is_token_authenticated(self)\n\n    @property\n    def cookie_name(self):\n        default_cookie_name = non_alphanum.sub('-', 'username-{}'.format(\n            self.request.host\n        ))\n        return self.settings.get('cookie_name', default_cookie_name)\n    \n    @property\n    def logged_in(self):\n        \"\"\"Is a user currently logged in?\"\"\"\n        user = self.get_current_user()\n        return (user and not user == 'anonymous')\n\n    @property\n    def login_handler(self):\n        \"\"\"Return the login handler for this application, if any.\"\"\"\n        return self.settings.get('login_handler_class', None)\n\n    @property\n    def token(self):\n        \"\"\"Return the login token for this application, if any.\"\"\"\n        return self.settings.get('token', None)\n\n    @property\n    def login_available(self):\n        \"\"\"May a user proceed to log in?\n\n        This returns True if login capability is available, irrespective of\n        whether the user is already logged in or not.\n\n        \"\"\"\n        if self.login_handler is None:\n            return False\n        return bool(self.login_handler.get_login_available(self.settings))\n\n\nclass IPythonHandler(AuthenticatedHandler):\n    \"\"\"IPython-specific extensions to authenticated handling\n    \n    Mostly property shortcuts to IPython-specific settings.\n    \"\"\"\n\n    @property\n    def ignore_minified_js(self):\n        \"\"\"Wether to user bundle in template. (*.min files)\n        \n        Mainly use for development and avoid file recompilation\n        \"\"\"\n        return self.settings.get('ignore_minified_js', False)\n\n    @property\n    def config(self):\n        return self.settings.get('config', None)\n    \n    @property\n    def log(self):\n        \"\"\"use the IPython log by default, falling back on tornado's logger\"\"\"\n        return log()\n\n    @property\n    def jinja_template_vars(self):\n        \"\"\"User-supplied values to supply to jinja templates.\"\"\"\n        return self.settings.get('jinja_template_vars', {})\n    \n    #---------------------------------------------------------------\n    # URLs\n    #---------------------------------------------------------------\n    \n    @property\n    def version_hash(self):\n        \"\"\"The version hash to use for cache hints for static files\"\"\"\n        return self.settings.get('version_hash', '')\n    \n    @property\n    def mathjax_url(self):\n        url = self.settings.get('mathjax_url', '')\n        if not url or url_is_absolute(url):\n            return url\n        return url_path_join(self.base_url, url)\n    \n    @property\n    def mathjax_config(self):\n        return self.settings.get('mathjax_config', 'TeX-AMS-MML_HTMLorMML-full,Safe')\n\n    @property\n    def base_url(self):\n        return self.settings.get('base_url', '/')\n\n    @property\n    def default_url(self):\n        return self.settings.get('default_url', '')\n\n    @property\n    def ws_url(self):\n        return self.settings.get('websocket_url', '')\n\n    @property\n    def contents_js_source(self):\n        self.log.debug(\"Using contents: %s\", self.settings.get('contents_js_source',\n            'services/contents'))\n        return self.settings.get('contents_js_source', 'services/contents')\n    \n    #---------------------------------------------------------------\n    # Manager objects\n    #---------------------------------------------------------------\n    \n    @property\n    def kernel_manager(self):\n        return self.settings['kernel_manager']\n\n    @property\n    def contents_manager(self):\n        return self.settings['contents_manager']\n    \n    @property\n    def session_manager(self):\n        return self.settings['session_manager']\n    \n    @property\n    def terminal_manager(self):\n        return self.settings['terminal_manager']\n    \n    @property\n    def kernel_spec_manager(self):\n        return self.settings['kernel_spec_manager']\n\n    @property\n    def config_manager(self):\n        return self.settings['config_manager']\n\n    #---------------------------------------------------------------\n    # CORS\n    #---------------------------------------------------------------\n    \n    @property\n    def allow_origin(self):\n        \"\"\"Normal Access-Control-Allow-Origin\"\"\"\n        return self.settings.get('allow_origin', '')\n    \n    @property\n    def allow_origin_pat(self):\n        \"\"\"Regular expression version of allow_origin\"\"\"\n        return self.settings.get('allow_origin_pat', None)\n    \n    @property\n    def allow_credentials(self):\n        \"\"\"Whether to set Access-Control-Allow-Credentials\"\"\"\n        return self.settings.get('allow_credentials', False)\n    \n    def set_default_headers(self):\n        \"\"\"Add CORS headers, if defined\"\"\"\n        super(IPythonHandler, self).set_default_headers()\n        if self.allow_origin:\n            self.set_header(\"Access-Control-Allow-Origin\", self.allow_origin)\n        elif self.allow_origin_pat:\n            origin = self.get_origin()\n            if origin and self.allow_origin_pat.match(origin):\n                self.set_header(\"Access-Control-Allow-Origin\", origin)\n        elif (\n            self.token_authenticated\n            and \"Access-Control-Allow-Origin\" not in\n                self.settings.get('headers', {})\n        ):\n            # allow token-authenticated requests cross-origin by default.\n            # only apply this exception if allow-origin has not been specified.\n            self.set_header('Access-Control-Allow-Origin',\n                self.request.headers.get('Origin', ''))\n\n        if self.allow_credentials:\n            self.set_header(\"Access-Control-Allow-Credentials\", 'true')\n    \n    def set_attachment_header(self, filename):\n        \"\"\"Set Content-Disposition: attachment header\n\n        As a method to ensure handling of filename encoding\n        \"\"\"\n        escaped_filename = url_escape(filename)\n        self.set_header('Content-Disposition',\n            'attachment;'\n            \" filename*=utf-8''{utf8}\"\n            .format(\n                utf8=escaped_filename,\n            )\n        )\n\n    def get_origin(self):\n        # Handle WebSocket Origin naming convention differences\n        # The difference between version 8 and 13 is that in 8 the\n        # client sends a \"Sec-Websocket-Origin\" header and in 13 it's\n        # simply \"Origin\".\n        if \"Origin\" in self.request.headers:\n            origin = self.request.headers.get(\"Origin\")\n        else:\n            origin = self.request.headers.get(\"Sec-Websocket-Origin\", None)\n        return origin\n\n    # origin_to_satisfy_tornado is present because tornado requires\n    # check_origin to take an origin argument, but we don't use it\n    def check_origin(self, origin_to_satisfy_tornado=\"\"):\n        \"\"\"Check Origin for cross-site API requests, including websockets\n\n        Copied from WebSocket with changes:\n\n        - allow unspecified host/origin (e.g. scripts)\n        - allow token-authenticated requests\n        \"\"\"\n        if self.allow_origin == '*' or self.skip_check_origin():\n            return True\n\n        host = self.request.headers.get(\"Host\")\n        origin = self.request.headers.get(\"Origin\")\n\n        # If no header is provided, let the request through.\n        # Origin can be None for:\n        # - same-origin (IE, Firefox)\n        # - Cross-site POST form (IE, Firefox)\n        # - Scripts\n        # The cross-site POST (XSRF) case is handled by tornado's xsrf_token\n        if origin is None or host is None:\n            return True\n\n        origin = origin.lower()\n        origin_host = urlparse(origin).netloc\n\n        # OK if origin matches host\n        if origin_host == host:\n            return True\n\n        # Check CORS headers\n        if self.allow_origin:\n            allow = self.allow_origin == origin\n        elif self.allow_origin_pat:\n            allow = bool(self.allow_origin_pat.match(origin))\n        else:\n            # No CORS headers deny the request\n            allow = False\n        if not allow:\n            self.log.warning(\"Blocking Cross Origin API request for %s.  Origin: %s, Host: %s\",\n                self.request.path, origin, host,\n            )\n        return allow\n\n    def check_referer(self):\n        \"\"\"Check Referer for cross-site requests.\n\n        Disables requests to certain endpoints with\n        external or missing Referer.\n\n        If set, allow_origin settings are applied to the Referer\n        to whitelist specific cross-origin sites.\n\n        Used on GET for api endpoints and /files/\n        to block cross-site inclusion (XSSI).\n        \"\"\"\n        host = self.request.headers.get(\"Host\")\n        referer = self.request.headers.get(\"Referer\")\n\n        if not host:\n            self.log.warning(\"Blocking request with no host\")\n            return False\n        if not referer:\n            self.log.warning(\"Blocking request with no referer\")\n            return False\n\n        referer_url = urlparse(referer)\n        referer_host = referer_url.netloc\n        if referer_host == host:\n            return True\n\n        # apply cross-origin checks to Referer:\n        origin = \"{}://{}\".format(referer_url.scheme, referer_url.netloc)\n        if self.allow_origin:\n            allow = self.allow_origin == origin\n        elif self.allow_origin_pat:\n            allow = bool(self.allow_origin_pat.match(origin))\n        else:\n            # No CORS settings, deny the request\n            allow = False\n\n        if not allow:\n            self.log.warning(\"Blocking Cross Origin request for %s.  Referer: %s, Host: %s\",\n                self.request.path, origin, host,\n            )\n        return allow\n\n    def check_xsrf_cookie(self):\n        \"\"\"Bypass xsrf cookie checks when token-authenticated\"\"\"\n        if self.token_authenticated or self.settings.get('disable_check_xsrf', False):\n            # Token-authenticated requests do not need additional XSRF-check\n            # Servers without authentication are vulnerable to XSRF\n            return\n        try:\n            return super(IPythonHandler, self).check_xsrf_cookie()\n        except web.HTTPError as e:\n            if self.request.method in {'GET', 'HEAD'}:\n                # Consider Referer a sufficient cross-origin check for GET requests\n                if not self.check_referer():\n                    referer = self.request.headers.get('Referer')\n                    if referer:\n                        msg = \"Blocking Cross Origin request from {}.\".format(referer)\n                    else:\n                        msg = \"Blocking request from unknown origin\"\n                    raise web.HTTPError(403, msg) from e\n            else:\n                raise\n\n    def check_host(self):\n        \"\"\"Check the host header if remote access disallowed.\n\n        Returns True if the request should continue, False otherwise.\n        \"\"\"\n        if self.settings.get('allow_remote_access', False):\n            return True\n\n        # Remove port (e.g. ':8888') from host\n        host = re.match(r'^(.*?)(:\\d+)?$', self.request.host).group(1)\n\n        # Browsers format IPv6 addresses like [::1]; we need to remove the []\n        if host.startswith('[') and host.endswith(']'):\n            host = host[1:-1]\n\n        # UNIX socket handling\n        check_host = urldecode_unix_socket_path(host)\n        if check_host.startswith('/') and os.path.exists(check_host):\n            allow = True\n        else:\n            try:\n                addr = ipaddress.ip_address(host)\n            except ValueError:\n                # Not an IP address: check against hostnames\n                allow = host in self.settings.get('local_hostnames', ['localhost'])\n            else:\n                allow = addr.is_loopback\n\n        if not allow:\n            self.log.warning(\n                (\"Blocking request with non-local 'Host' %s (%s). \"\n                 \"If the notebook should be accessible at that name, \"\n                 \"set NotebookApp.allow_remote_access to disable the check.\"),\n                host, self.request.host\n            )\n        return allow\n\n    def prepare(self):\n        if not self.check_host():\n            raise web.HTTPError(403)\n        return super(IPythonHandler, self).prepare()\n\n    #---------------------------------------------------------------\n    # template rendering\n    #---------------------------------------------------------------\n    \n    def get_template(self, name):\n        \"\"\"Return the jinja template object for a given name\"\"\"\n        return self.settings['jinja2_env'].get_template(name)\n    \n    def render_template(self, name, **ns):\n        ns.update(self.template_namespace)\n        template = self.get_template(name)\n        return template.render(**ns)\n    \n    @property\n    def template_namespace(self):\n        return dict(\n            base_url=self.base_url,\n            default_url=self.default_url,\n            ws_url=self.ws_url,\n            logged_in=self.logged_in,\n            allow_password_change=self.settings.get('allow_password_change'),\n            login_available=self.login_available,\n            token_available=bool(self.token),\n            static_url=self.static_url,\n            sys_info=json_sys_info(),\n            contents_js_source=self.contents_js_source,\n            version_hash=self.version_hash,\n            ignore_minified_js=self.ignore_minified_js,\n            xsrf_form_html=self.xsrf_form_html,\n            token=self.token,\n            xsrf_token=self.xsrf_token.decode('utf8'),\n            nbjs_translations=json.dumps(combine_translations(\n                self.request.headers.get('Accept-Language', ''))),\n            **self.jinja_template_vars\n        )\n    \n    def get_json_body(self):\n        \"\"\"Return the body of the request as JSON data.\"\"\"\n        if not self.request.body:\n            return None\n        # Do we need to call body.decode('utf-8') here?\n        body = self.request.body.strip().decode(u'utf-8')\n        try:\n            model = json.loads(body)\n        except Exception as e:\n            self.log.debug(\"Bad JSON: %r\", body)\n            self.log.error(\"Couldn't parse JSON\", exc_info=True)\n            raise web.HTTPError(400, u'Invalid JSON in body of request') from e\n        return model\n\n    def write_error(self, status_code, **kwargs):\n        \"\"\"render custom error pages\"\"\"\n        exc_info = kwargs.get('exc_info')\n        message = ''\n        status_message = responses.get(status_code, 'Unknown HTTP Error')\n        exception = '(unknown)'\n        if exc_info:\n            exception = exc_info[1]\n            # get the custom message, if defined\n            try:\n                message = exception.log_message % exception.args\n            except Exception:\n                pass\n            \n            # construct the custom reason, if defined\n            reason = getattr(exception, 'reason', '')\n            if reason:\n                status_message = reason\n        \n        # build template namespace\n        ns = dict(\n            status_code=status_code,\n            status_message=status_message,\n            message=message,\n            exception=exception,\n        )\n\n        self.set_header('Content-Type', 'text/html')\n        # render the template\n        try:\n            html = self.render_template('%s.html' % status_code, **ns)\n        except TemplateNotFound:\n            html = self.render_template('error.html', **ns)\n\n        self.write(html)\n\n\nclass APIHandler(IPythonHandler):\n    \"\"\"Base class for API handlers\"\"\"\n\n    def prepare(self):\n        if not self.check_origin():\n            raise web.HTTPError(404)\n        return super(APIHandler, self).prepare()\n\n    def write_error(self, status_code, **kwargs):\n        \"\"\"APIHandler errors are JSON, not human pages\"\"\"\n        self.set_header('Content-Type', 'application/json')\n        message = responses.get(status_code, 'Unknown HTTP Error')\n        reply = {\n            'message': message,\n        }\n        exc_info = kwargs.get('exc_info')\n        if exc_info:\n            e = exc_info[1]\n            if isinstance(e, HTTPError):\n                reply['message'] = e.log_message or message\n                reply['reason'] = e.reason\n            else:\n                reply['message'] = 'Unhandled error'\n                reply['reason'] = None\n                reply['traceback'] = ''.join(traceback.format_exception(*exc_info))\n        self.log.warning(reply['message'])\n        self.finish(json.dumps(reply))\n\n    def get_current_user(self):\n        \"\"\"Raise 403 on API handlers instead of redirecting to human login page\"\"\"\n        # preserve _user_cache so we don't raise more than once\n        if hasattr(self, '_user_cache'):\n            return self._user_cache\n        self._user_cache = user = super(APIHandler, self).get_current_user()\n        return user\n\n    def get_login_url(self):\n        # if get_login_url is invoked in an API handler,\n        # that means @web.authenticated is trying to trigger a redirect.\n        # instead of redirecting, raise 403 instead.\n        if not self.current_user:\n            raise web.HTTPError(403)\n        return super(APIHandler, self).get_login_url()\n\n    @property\n    def content_security_policy(self):\n        csp = '; '.join([\n                super(APIHandler, self).content_security_policy,\n                \"default-src 'none'\",\n            ])\n        return csp\n\n    # set _track_activity = False on API handlers that shouldn't track activity\n    _track_activity = True\n\n    def update_api_activity(self):\n        \"\"\"Update last_activity of API requests\"\"\"\n        # record activity of authenticated requests\n        if (\n            self._track_activity\n            and getattr(self, '_user_cache', None)\n            and self.get_argument('no_track_activity', None) is None\n        ):\n            self.settings['api_last_activity'] = utcnow()\n\n    def finish(self, *args, **kwargs):\n        self.update_api_activity()\n        self.set_header('Content-Type', 'application/json')\n        return super(APIHandler, self).finish(*args, **kwargs)\n\n    def options(self, *args, **kwargs):\n        if 'Access-Control-Allow-Headers' in self.settings.get('headers', {}):\n            self.set_header('Access-Control-Allow-Headers', self.settings['headers']['Access-Control-Allow-Headers'])\n        else:\n            self.set_header('Access-Control-Allow-Headers',\n                            'accept, content-type, authorization, x-xsrftoken')\n        self.set_header('Access-Control-Allow-Methods',\n                        'GET, PUT, POST, PATCH, DELETE, OPTIONS')\n\n        # if authorization header is requested,\n        # that means the request is token-authenticated.\n        # avoid browser-side rejection of the preflight request.\n        # only allow this exception if allow_origin has not been specified\n        # and notebook authentication is enabled.\n        # If the token is not valid, the 'real' request will still be rejected.\n        requested_headers = self.request.headers.get('Access-Control-Request-Headers', '').split(',')\n        if requested_headers and any(\n            h.strip().lower() == 'authorization'\n            for h in requested_headers\n        ) and (\n            # FIXME: it would be even better to check specifically for token-auth,\n            # but there is currently no API for this.\n            self.login_available\n        ) and (\n            self.allow_origin\n            or self.allow_origin_pat\n            or 'Access-Control-Allow-Origin' in self.settings.get('headers', {})\n        ):\n            self.set_header('Access-Control-Allow-Origin',\n                self.request.headers.get('Origin', ''))\n\n\nclass Template404(IPythonHandler):\n    \"\"\"Render our 404 template\"\"\"\n    def prepare(self):\n        raise web.HTTPError(404)\n\n\nclass AuthenticatedFileHandler(IPythonHandler, web.StaticFileHandler):\n    \"\"\"static files should only be accessible when logged in\"\"\"\n\n    @property\n    def content_security_policy(self):\n        # In case we're serving HTML/SVG, confine any Javascript to a unique\n        # origin so it can't interact with the notebook server.\n        return super(AuthenticatedFileHandler, self).content_security_policy + \\\n                \"; sandbox allow-scripts\"\n\n    @web.authenticated\n    def head(self, path):\n        self.check_xsrf_cookie()\n        return super(AuthenticatedFileHandler, self).head(path)\n\n    @web.authenticated\n    def get(self, path):\n        self.check_xsrf_cookie()\n\n        if os.path.splitext(path)[1] == '.ipynb' or self.get_argument(\"download\", False):\n            name = path.rsplit('/', 1)[-1]\n            self.set_attachment_header(name)\n\n        return web.StaticFileHandler.get(self, path)\n\n    def get_content_type(self):\n        path = self.absolute_path.strip('/')\n        if '/' in path:\n            _, name = path.rsplit('/', 1)\n        else:\n            name = path\n        if name.endswith('.ipynb'):\n            return 'application/x-ipynb+json'\n        else:\n            cur_mime = mimetypes.guess_type(name)[0]\n            if cur_mime == 'text/plain':\n                return 'text/plain; charset=UTF-8'\n            else:\n                return super(AuthenticatedFileHandler, self).get_content_type()\n\n    def set_headers(self):\n        super(AuthenticatedFileHandler, self).set_headers()\n        # disable browser caching, rely on 304 replies for savings\n        if \"v\" not in self.request.arguments:\n            self.add_header(\"Cache-Control\", \"no-cache\")\n    \n    def compute_etag(self):\n        return None\n    \n    def validate_absolute_path(self, root, absolute_path):\n        \"\"\"Validate and return the absolute path.\n        \n        Requires tornado 3.1\n        \n        Adding to tornado's own handling, forbids the serving of hidden files.\n        \"\"\"\n        abs_path = super(AuthenticatedFileHandler, self).validate_absolute_path(root, absolute_path)\n        abs_root = os.path.abspath(root)\n        if is_hidden(abs_path, abs_root) and not self.contents_manager.allow_hidden:\n            self.log.info(\"Refusing to serve hidden file, via 404 Error, use flag 'ContentsManager.allow_hidden' to enable\")\n            raise web.HTTPError(404)\n        return abs_path\n\n\ndef json_errors(method):\n    \"\"\"Decorate methods with this to return GitHub style JSON errors.\n    \n    This should be used on any JSON API on any handler method that can raise HTTPErrors.\n    \n    This will grab the latest HTTPError exception using sys.exc_info\n    and then:\n    \n    1. Set the HTTP status code based on the HTTPError\n    2. Create and return a JSON body with a message field describing\n       the error in a human readable form.\n    \"\"\"\n    warnings.warn('@json_errors is deprecated in notebook 5.2.0. Subclass APIHandler instead.',\n        DeprecationWarning,\n        stacklevel=2,\n    )\n    @functools.wraps(method)\n    def wrapper(self, *args, **kwargs):\n        self.write_error = types.MethodType(APIHandler.write_error, self)\n        return method(self, *args, **kwargs)\n    return wrapper\n\n\n\n#-----------------------------------------------------------------------------\n# File handler\n#-----------------------------------------------------------------------------\n\n# to minimize subclass changes:\nHTTPError = web.HTTPError\n\nclass FileFindHandler(IPythonHandler, web.StaticFileHandler):\n    \"\"\"subclass of StaticFileHandler for serving files from a search path\"\"\"\n    \n    # cache search results, don't search for files more than once\n    _static_paths = {}\n    \n    def set_headers(self):\n        super(FileFindHandler, self).set_headers()\n        # disable browser caching, rely on 304 replies for savings\n        if \"v\" not in self.request.arguments or \\\n                any(self.request.path.startswith(path) for path in self.no_cache_paths):\n            self.set_header(\"Cache-Control\", \"no-cache\")\n    \n    def initialize(self, path, default_filename=None, no_cache_paths=None):\n        self.no_cache_paths = no_cache_paths or []\n        \n        if isinstance(path, string_types):\n            path = [path]\n        \n        self.root = tuple(\n            os.path.abspath(os.path.expanduser(p)) + os.sep for p in path\n        )\n        self.default_filename = default_filename\n    \n    def compute_etag(self):\n        return None\n    \n    @classmethod\n    def get_absolute_path(cls, roots, path):\n        \"\"\"locate a file to serve on our static file search path\"\"\"\n        with cls._lock:\n            if path in cls._static_paths:\n                return cls._static_paths[path]\n            try:\n                abspath = os.path.abspath(filefind(path, roots))\n            except IOError:\n                # IOError means not found\n                return ''\n            \n            cls._static_paths[path] = abspath\n            \n\n            log().debug(\"Path %s served from %s\"%(path, abspath))\n            return abspath\n    \n    def validate_absolute_path(self, root, absolute_path):\n        \"\"\"check if the file should be served (raises 404, 403, etc.)\"\"\"\n        if absolute_path == '':\n            raise web.HTTPError(404)\n        \n        for root in self.root:\n            if (absolute_path + os.sep).startswith(root):\n                break\n        \n        return super(FileFindHandler, self).validate_absolute_path(root, absolute_path)\n\n\nclass APIVersionHandler(APIHandler):\n\n    def get(self):\n        # not authenticated, so give as few info as possible\n        self.finish(json.dumps({\"version\":notebook.__version__}))\n\n\nclass TrailingSlashHandler(web.RequestHandler):\n    \"\"\"Simple redirect handler that strips trailing slashes\n\n    This should be the first, highest priority handler.\n    \"\"\"\n\n    def get(self):\n        path, *rest = self.request.uri.partition(\"?\")\n        # trim trailing *and* leading /\n        # to avoid misinterpreting repeated '//'\n        path = \"/\" + path.strip(\"/\")\n        new_uri = \"\".join([path, *rest])\n        self.redirect(new_uri)\n\n    post = put = get\n\n\nclass FilesRedirectHandler(IPythonHandler):\n    \"\"\"Handler for redirecting relative URLs to the /files/ handler\"\"\"\n    \n    @staticmethod\n    def redirect_to_files(self, path):\n        \"\"\"make redirect logic a reusable static method\n        \n        so it can be called from other handlers.\n        \"\"\"\n        cm = self.contents_manager\n        if cm.dir_exists(path):\n            # it's a *directory*, redirect to /tree\n            url = url_path_join(self.base_url, 'tree', url_escape(path))\n        else:\n            orig_path = path\n            # otherwise, redirect to /files\n            parts = path.split('/')\n\n            if not cm.file_exists(path=path) and 'files' in parts:\n                # redirect without files/ iff it would 404\n                # this preserves pre-2.0-style 'files/' links\n                self.log.warning(\"Deprecated files/ URL: %s\", orig_path)\n                parts.remove('files')\n                path = '/'.join(parts)\n\n            if not cm.file_exists(path=path):\n                raise web.HTTPError(404)\n\n            url = url_path_join(self.base_url, 'files', url_escape(path))\n        self.log.debug(\"Redirecting %s to %s\", self.request.path, url)\n        self.redirect(url)\n    \n    def get(self, path=''):\n        return self.redirect_to_files(self, path)\n\n\nclass RedirectWithParams(web.RequestHandler):\n    \"\"\"Sam as web.RedirectHandler, but preserves URL parameters\"\"\"\n    def initialize(self, url, permanent=True):\n        self._url = url\n        self._permanent = permanent\n\n    def get(self):\n        sep = '&' if '?' in self._url else '?'\n        url = sep.join([self._url, self.request.query])\n        self.redirect(url, permanent=self._permanent)\n\n\nclass PrometheusMetricsHandler(IPythonHandler):\n    \"\"\"\n    Return prometheus metrics for this notebook server\n    \"\"\"\n    @web.authenticated\n    def get(self):\n        self.set_header('Content-Type', prometheus_client.CONTENT_TYPE_LATEST)\n        self.write(prometheus_client.generate_latest(prometheus_client.REGISTRY))\n\n\n#-----------------------------------------------------------------------------\n# URL pattern fragments for re-use\n#-----------------------------------------------------------------------------\n\n# path matches any number of `/foo[/bar...]` or just `/` or ''\npath_regex = r\"(?P<path>(?:(?:/[^/]+)+|/?))\"\n\n#-----------------------------------------------------------------------------\n# URL to handler mappings\n#-----------------------------------------------------------------------------\n\n\ndefault_handlers = [\n    (r\".*/\", TrailingSlashHandler),\n    (r\"api\", APIVersionHandler),\n    (r'/(robots\\.txt|favicon\\.ico)', web.StaticFileHandler),\n    (r'/metrics', PrometheusMetricsHandler)\n]\n", "\nimport re\nfrom nose.tools import assert_regex, assert_not_regex\n\nfrom notebook.base.handlers import path_regex\nfrom notebook.utils import url_path_join\nfrom .launchnotebook import NotebookTestBase\n\n# build regexps that tornado uses:\npath_pat = re.compile('^' + '/x%s' % path_regex + '$')\n\n\ndef test_path_regex():\n    for path in (\n        '/x',\n        '/x/',\n        '/x/foo',\n        '/x/foo.ipynb',\n        '/x/foo/bar',\n        '/x/foo/bar.txt',\n    ):\n        assert_regex(path, path_pat)\n\ndef test_path_regex_bad():\n    for path in (\n        '/xfoo',\n        '/xfoo/',\n        '/xfoo/bar',\n        '/xfoo/bar/',\n        '/x/foo/bar/',\n        '/x//foo',\n        '/y',\n        '/y/x/foo',\n    ):\n        assert_not_regex(path, path_pat)\n\n\nclass RedirectTestCase(NotebookTestBase):\n    def test_trailing_slash(self):\n        for uri, expected in (\n            (\"/notebooks/mynotebook/\", \"/notebooks/mynotebook\"),\n            (\"////foo///\", \"/foo\"),\n            (\"//example.com/\", \"/example.com\"),\n            (\"/has/param/?hasparam=true\", \"/has/param?hasparam=true\"),\n        ):\n            r = self.request(\"GET\", uri, allow_redirects=False)\n            print(uri, expected)\n            assert r.status_code == 302\n            assert \"Location\" in r.headers\n            assert r.headers[\"Location\"] == url_path_join(self.url_prefix, expected)\n"], "filenames": ["docs/source/changelog.rst", "notebook/base/handlers.py", "notebook/tests/test_paths.py"], "buggy_code_start_loc": [23, 857, 5], "buggy_code_end_loc": [23, 913, 32], "fixing_code_start_loc": [24, 857, 6], "fixing_code_end_loc": [33, 920, 51], "type": "CWE-601", "message": "Jupyter Notebook before version 6.1.5 has an Open redirect vulnerability. A maliciously crafted link to a notebook server could redirect the browser to a different website. All notebook servers are technically affected, however, these maliciously crafted links can only be reasonably made for known notebook server hosts. A link to your notebook server may appear safe, but ultimately redirect to a spoofed server on the public internet. The issue is patched in version 6.1.5.", "other": {"cve": {"id": "CVE-2020-26215", "sourceIdentifier": "security-advisories@github.com", "published": "2020-11-18T22:15:11.947", "lastModified": "2020-12-03T15:59:07.223", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Jupyter Notebook before version 6.1.5 has an Open redirect vulnerability. A maliciously crafted link to a notebook server could redirect the browser to a different website. All notebook servers are technically affected, however, these maliciously crafted links can only be reasonably made for known notebook server hosts. A link to your notebook server may appear safe, but ultimately redirect to a spoofed server on the public internet. The issue is patched in version 6.1.5."}, {"lang": "es", "value": "Jupyter Notebook anterior a la versi\u00f3n 6.1.5, presenta una vulnerabilidad de redireccionamiento abierto.&#xa0;Un enlace creado maliciosamente para un servidor de notebook podr\u00eda redireccionar el navegador a un sitio web diferente.&#xa0;Todos los servidores de notebook est\u00e1n afectados t\u00e9cnicamente; sin embargo, estos enlaces dise\u00f1ados maliciosamente solo pueden ser creados de forma razonable para hosts de servidores de notebook conocidos.&#xa0;Un enlace hacia su servidor notebook puede parecer seguro, pero en \u00faltima instancia, redirecciona hacia un servidor falsificado en la internet p\u00fablica.&#xa0;El problema est\u00e1 parcheado en la versi\u00f3n 6.1.5"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:N/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 4.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.3, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:P/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.8}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 4.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-601"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-601"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jupyter:notebook:*:*:*:*:*:*:*:*", "versionEndExcluding": "6.1.5", "matchCriteriaId": "CC160EE9-6BEC-47BB-9A72-C100734F48C2"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}]}]}], "references": [{"url": "https://github.com/jupyter/notebook/commit/3cec4bbe21756de9f0c4bccf18cf61d840314d74", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/jupyter/notebook/security/advisories/GHSA-c7vm-f5p4-8fqh", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2020/12/msg00004.html", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jupyter/notebook/commit/3cec4bbe21756de9f0c4bccf18cf61d840314d74"}}