{"buggy_code": ["/**\n * Copyright (c) 2006-2012, JGraph Ltd\n */\n/**\n * Constructs a new open dialog.\n */\nvar OpenDialog = function()\n{\n\tvar iframe = document.createElement('iframe');\n\tiframe.style.backgroundColor = 'transparent';\n\tiframe.allowTransparency = 'true';\n\tiframe.style.borderStyle = 'none';\n\tiframe.style.borderWidth = '0px';\n\tiframe.style.overflow = 'hidden';\n\tiframe.frameBorder = '0';\n\t\n\t// Adds padding as a workaround for box model in older IE versions\n\tvar dx = (mxClient.IS_VML && (document.documentMode == null || document.documentMode < 8)) ? 20 : 0;\n\t\n\tiframe.setAttribute('width', (((Editor.useLocalStorage) ? 640 : 320) + dx) + 'px');\n\tiframe.setAttribute('height', (((Editor.useLocalStorage) ? 480 : 220) + dx) + 'px');\n\tiframe.setAttribute('src', OPEN_FORM);\n\t\n\tthis.container = iframe;\n};\n\n/**\n * Constructs a new color dialog.\n */\nvar ColorDialog = function(editorUi, color, apply, cancelFn)\n{\n\tthis.editorUi = editorUi;\n\t\n\tvar input = document.createElement('input');\n\tinput.style.marginBottom = '10px';\n\tinput.style.width = '216px';\n\t\n\t// Required for picker to render in IE\n\tif (mxClient.IS_IE)\n\t{\n\t\tinput.style.marginTop = '10px';\n\t\tdocument.body.appendChild(input);\n\t}\n\t\n\tthis.init = function()\n\t{\n\t\tif (!mxClient.IS_TOUCH)\n\t\t{\n\t\t\tinput.focus();\n\t\t}\n\t};\n\n\tvar picker = new jscolor.color(input);\n\tpicker.pickerOnfocus = false;\n\tpicker.showPicker();\n\n\tvar div = document.createElement('div');\n\tjscolor.picker.box.style.position = 'relative';\n\tjscolor.picker.box.style.width = '230px';\n\tjscolor.picker.box.style.height = '100px';\n\tjscolor.picker.box.style.paddingBottom = '10px';\n\tdiv.appendChild(jscolor.picker.box);\n\n\tvar center = document.createElement('center');\n\t\n\tfunction createRecentColorTable()\n\t{\n\t\tvar table = addPresets((ColorDialog.recentColors.length == 0) ? ['FFFFFF'] :\n\t\t\t\t\tColorDialog.recentColors, 11, 'FFFFFF', true);\n\t\ttable.style.marginBottom = '8px';\n\t\t\n\t\treturn table;\n\t};\n\t\n\tfunction addPresets(presets, rowLength, defaultColor, addResetOption)\n\t{\n\t\trowLength = (rowLength != null) ? rowLength : 12;\n\t\tvar table = document.createElement('table');\n\t\ttable.style.borderCollapse = 'collapse';\n\t\ttable.setAttribute('cellspacing', '0');\n\t\ttable.style.marginBottom = '20px';\n\t\ttable.style.cellSpacing = '0px';\n\t\tvar tbody = document.createElement('tbody');\n\t\ttable.appendChild(tbody);\n\n\t\tvar rows = presets.length / rowLength;\n\t\t\n\t\tfor (var row = 0; row < rows; row++)\n\t\t{\n\t\t\tvar tr = document.createElement('tr');\n\t\t\t\n\t\t\tfor (var i = 0; i < rowLength; i++)\n\t\t\t{\n\t\t\t\t(function(clr)\n\t\t\t\t{\n\t\t\t\t\tvar td = document.createElement('td');\n\t\t\t\t\ttd.style.border = '1px solid black';\n\t\t\t\t\ttd.style.padding = '0px';\n\t\t\t\t\ttd.style.width = '16px';\n\t\t\t\t\ttd.style.height = '16px';\n\t\t\t\t\t\n\t\t\t\t\tif (clr == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tclr = defaultColor;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (clr == 'none')\n\t\t\t\t\t{\n\t\t\t\t\t\ttd.style.background = 'url(\\'' + Dialog.prototype.noColorImage + '\\')';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttd.style.backgroundColor = '#' + clr;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttr.appendChild(td);\n\n\t\t\t\t\tif (clr != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttd.style.cursor = 'pointer';\n\t\t\t\t\t\t\n\t\t\t\t\t\tmxEvent.addListener(td, 'click', function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (clr == 'none')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpicker.fromString('ffffff');\n\t\t\t\t\t\t\t\tinput.value = 'none';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpicker.fromString(clr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})(presets[row * rowLength + i]);\n\t\t\t}\n\t\t\t\n\t\t\ttbody.appendChild(tr);\n\t\t}\n\t\t\n\t\tif (addResetOption)\n\t\t{\n\t\t\tvar td = document.createElement('td');\n\t\t\ttd.setAttribute('title', mxResources.get('reset'));\n\t\t\ttd.style.border = '1px solid black';\n\t\t\ttd.style.padding = '0px';\n\t\t\ttd.style.width = '16px';\n\t\t\ttd.style.height = '16px';\n\t\t\ttd.style.backgroundImage = 'url(\\'' + Dialog.prototype.closeImage + '\\')';\n\t\t\ttd.style.backgroundPosition = 'center center';\n\t\t\ttd.style.backgroundRepeat = 'no-repeat';\n\t\t\ttd.style.cursor = 'pointer';\n\t\t\t\n\t\t\ttr.appendChild(td);\n\n\t\t\tmxEvent.addListener(td, 'click', function()\n\t\t\t{\n\t\t\t\tColorDialog.resetRecentColors();\n\t\t\t\ttable.parentNode.replaceChild(createRecentColorTable(), table);\n\t\t\t});\n\t\t}\n\t\t\n\t\tcenter.appendChild(table);\n\t\t\n\t\treturn table;\n\t};\n\n\tdiv.appendChild(input);\n\tmxUtils.br(div);\n\t\n\t// Adds recent colors\n\tcreateRecentColorTable();\n\t\t\n\t// Adds presets\n\tvar table = addPresets(this.presetColors);\n\ttable.style.marginBottom = '8px';\n\ttable = addPresets(this.defaultColors);\n\ttable.style.marginBottom = '16px';\n\n\tdiv.appendChild(center);\n\n\tvar buttons = document.createElement('div');\n\tbuttons.style.textAlign = 'right';\n\tbuttons.style.whiteSpace = 'nowrap';\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t\t\n\t\tif (cancelFn != null)\n\t\t{\n\t\t\tcancelFn();\n\t\t}\n\t});\n\tcancelBtn.className = 'geBtn';\n\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\tbuttons.appendChild(cancelBtn);\n\t}\n\t\n\tvar applyFunction = (apply != null) ? apply : this.createApplyFunction();\n\t\n\tvar applyBtn = mxUtils.button(mxResources.get('apply'), function()\n\t{\n\t\tvar color = input.value;\n\t\tColorDialog.addRecentColor(color, 12);\n\t\t\n\t\tif (color != 'none' && color.charAt(0) != '#')\n\t\t{\n\t\t\tcolor = '#' + color;\n\t\t}\n\n\t\tapplyFunction(color);\n\t\teditorUi.hideDialog();\n\t});\n\tapplyBtn.className = 'geBtn gePrimaryBtn';\n\tbuttons.appendChild(applyBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\tbuttons.appendChild(cancelBtn);\n\t}\n\t\n\tif (color != null)\n\t{\n\t\tif (color == 'none')\n\t\t{\n\t\t\tpicker.fromString('ffffff');\n\t\t\tinput.value = 'none';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpicker.fromString(color);\n\t\t}\n\t}\n\t\n\tdiv.appendChild(buttons);\n\tthis.picker = picker;\n\tthis.colorInput = input;\n\n\t// LATER: Only fires if input if focused, should always\n\t// fire if this dialog is showing.\n\tmxEvent.addListener(div, 'keydown', function(e)\n\t{\n\t\tif (e.keyCode == 27)\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\t\n\t\t\tif (cancelFn != null)\n\t\t\t{\n\t\t\t\tcancelFn();\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(e);\n\t\t}\n\t});\n\t\n\tthis.container = div;\n};\n\n/**\n * Creates function to apply value\n */\nColorDialog.prototype.presetColors = ['E6D0DE', 'CDA2BE', 'B5739D', 'E1D5E7', 'C3ABD0', 'A680B8', 'D4E1F5', 'A9C4EB', '7EA6E0', 'D5E8D4', '9AC7BF', '67AB9F', 'D5E8D4', 'B9E0A5', '97D077', 'FFF2CC', 'FFE599', 'FFD966', 'FFF4C3', 'FFCE9F', 'FFB570', 'F8CECC', 'F19C99', 'EA6B66']; \n\n/**\n * Creates function to apply value\n */\nColorDialog.prototype.defaultColors = ['none', 'FFFFFF', 'E6E6E6', 'CCCCCC', 'B3B3B3', '999999', '808080', '666666', '4D4D4D', '333333', '1A1A1A', '000000', 'FFCCCC', 'FFE6CC', 'FFFFCC', 'E6FFCC', 'CCFFCC', 'CCFFE6', 'CCFFFF', 'CCE5FF', 'CCCCFF', 'E5CCFF', 'FFCCFF', 'FFCCE6',\n\t\t'FF9999', 'FFCC99', 'FFFF99', 'CCFF99', '99FF99', '99FFCC', '99FFFF', '99CCFF', '9999FF', 'CC99FF', 'FF99FF', 'FF99CC', 'FF6666', 'FFB366', 'FFFF66', 'B3FF66', '66FF66', '66FFB3', '66FFFF', '66B2FF', '6666FF', 'B266FF', 'FF66FF', 'FF66B3', 'FF3333', 'FF9933', 'FFFF33',\n\t\t'99FF33', '33FF33', '33FF99', '33FFFF', '3399FF', '3333FF', '9933FF', 'FF33FF', 'FF3399', 'FF0000', 'FF8000', 'FFFF00', '80FF00', '00FF00', '00FF80', '00FFFF', '007FFF', '0000FF', '7F00FF', 'FF00FF', 'FF0080', 'CC0000', 'CC6600', 'CCCC00', '66CC00', '00CC00', '00CC66',\n\t\t'00CCCC', '0066CC', '0000CC', '6600CC', 'CC00CC', 'CC0066', '990000', '994C00', '999900', '4D9900', '009900', '00994D', '009999', '004C99', '000099', '4C0099', '990099', '99004D', '660000', '663300', '666600', '336600', '006600', '006633', '006666', '003366', '000066',\n\t\t'330066', '660066', '660033', '330000', '331A00', '333300', '1A3300', '003300', '00331A', '003333', '001933', '000033', '190033', '330033', '33001A'];\n\n/**\n * Creates function to apply value\n */\nColorDialog.prototype.createApplyFunction = function()\n{\n\treturn mxUtils.bind(this, function(color)\n\t{\n\t\tvar graph = this.editorUi.editor.graph;\n\t\t\n\t\tgraph.getModel().beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tgraph.setCellStyles(this.currentColorKey, color);\n\t\t\tthis.editorUi.fireEvent(new mxEventObject('styleChanged', 'keys', [this.currentColorKey],\n\t\t\t\t'values', [color], 'cells', graph.getSelectionCells()));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tgraph.getModel().endUpdate();\n\t\t}\n\t});\n};\n\n/**\n * \n */\nColorDialog.recentColors = [];\n\n/**\n * Adds recent color for later use.\n */\nColorDialog.addRecentColor = function(color, max)\n{\n\tif (color != null)\n\t{\n\t\tmxUtils.remove(color, ColorDialog.recentColors);\n\t\tColorDialog.recentColors.splice(0, 0, color);\n\t\t\n\t\tif (ColorDialog.recentColors.length >= max)\n\t\t{\n\t\t\tColorDialog.recentColors.pop();\n\t\t}\n\t}\n};\n\n/**\n * Adds recent color for later use.\n */\nColorDialog.resetRecentColors = function()\n{\n\tColorDialog.recentColors = [];\n};\n\n/**\n * Constructs a new about dialog.\n */\nvar AboutDialog = function(editorUi)\n{\n\tvar div = document.createElement('div');\n\tdiv.setAttribute('align', 'center');\n\tvar h3 = document.createElement('h3');\n\tmxUtils.write(h3, mxResources.get('about') + ' GraphEditor');\n\tdiv.appendChild(h3);\n\tvar img = document.createElement('img');\n\timg.style.border = '0px';\n\timg.setAttribute('width', '176');\n\timg.setAttribute('width', '151');\n\timg.setAttribute('src', IMAGE_PATH + '/logo.png');\n\tdiv.appendChild(img);\n\tmxUtils.br(div);\n\tmxUtils.write(div, 'Powered by mxGraph ' + mxClient.VERSION);\n\tmxUtils.br(div);\n\tvar link = document.createElement('a');\n\tlink.setAttribute('href', 'http://www.jgraph.com/');\n\tlink.setAttribute('target', '_blank');\n\tmxUtils.write(link, 'www.jgraph.com');\n\tdiv.appendChild(link);\n\tmxUtils.br(div);\n\tmxUtils.br(div);\n\tvar closeBtn = mxUtils.button(mxResources.get('close'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcloseBtn.className = 'geBtn gePrimaryBtn';\n\tdiv.appendChild(closeBtn);\n\t\n\tthis.container = div;\n};\n\n/**\n * Constructs a new filename dialog.\n */\nvar FilenameDialog = function(editorUi, filename, buttonText, fn, label, validateFn, content, helpLink, closeOnBtn, cancelFn, hints)\n{\n\tcloseOnBtn = (closeOnBtn != null) ? closeOnBtn : true;\n\tvar row, td;\n\t\n\tvar table = document.createElement('table');\n\tvar tbody = document.createElement('tbody');\n\ttable.style.marginTop = '8px';\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.whiteSpace = 'nowrap';\n\ttd.style.fontSize = '10pt';\n\ttd.style.width = '120px';\n\tmxUtils.write(td, (label || mxResources.get('filename')) + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar nameInput = document.createElement('input');\n\tnameInput.setAttribute('value', filename || '');\n\tnameInput.style.marginLeft = '4px';\n\tnameInput.style.width = '180px';\n\t\n\tvar genericBtn = mxUtils.button(buttonText, function()\n\t{\n\t\tif (validateFn == null || validateFn(nameInput.value))\n\t\t{\n\t\t\tif (closeOnBtn)\n\t\t\t{\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\t\n\t\t\tfn(nameInput.value);\n\t\t}\n\t});\n\tgenericBtn.className = 'geBtn gePrimaryBtn';\n\t\n\tthis.init = function()\n\t{\n\t\tif (label == null && content != null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tnameInput.focus();\n\t\t\n\t\tif (mxClient.IS_GC || mxClient.IS_FF || document.documentMode >= 5 || mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnameInput.select();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t}\n\t\t\n\t\t// Installs drag and drop handler for links\n\t\tif (Graph.fileSupport)\n\t\t{\n\t\t\t// Setup the dnd listeners\n\t\t\tvar dlg = table.parentNode;\n\t\t\t\n\t\t\tif (dlg != null)\n\t\t\t{\n\t\t\t\tvar graph = editorUi.editor.graph;\n\t\t\t\tvar dropElt = null;\n\t\t\t\t\t\n\t\t\t\tmxEvent.addListener(dlg, 'dragleave', function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (dropElt != null)\n\t\t\t\t    {\n\t\t\t\t\t\tdropElt.style.backgroundColor = '';\n\t\t\t\t    \tdropElt = null;\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tmxEvent.addListener(dlg, 'dragover', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\t// IE 10 does not implement pointer-events so it can't have a drop highlight\n\t\t\t\t\tif (dropElt == null && (!mxClient.IS_IE || document.documentMode > 10))\n\t\t\t\t\t{\n\t\t\t\t\t\tdropElt = nameInput;\n\t\t\t\t\t\tdropElt.style.backgroundColor = '#ebf2f9';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t}));\n\t\t\t\t\t\t\n\t\t\t\tmxEvent.addListener(dlg, 'drop', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t    if (dropElt != null)\n\t\t\t\t    {\n\t\t\t\t\t\tdropElt.style.backgroundColor = '';\n\t\t\t\t    \tdropElt = null;\n\t\t\t\t    }\n\t\n\t\t\t\t    if (mxUtils.indexOf(evt.dataTransfer.types, 'text/uri-list') >= 0)\n\t\t\t\t    {\n\t\t\t\t    \tnameInput.value = decodeURIComponent(evt.dataTransfer.getData('text/uri-list'));\n\t\t\t\t    \tgenericBtn.click();\n\t\t\t\t    }\n\t\n\t\t\t\t    evt.stopPropagation();\n\t\t\t\t    evt.preventDefault();\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t};\n\n\ttd = document.createElement('td');\n\ttd.appendChild(nameInput);\n\trow.appendChild(td);\n\t\n\tif (label != null || content == null)\n\t{\n\t\ttbody.appendChild(row);\n\t\t\n\t\tif (hints != null)\n\t\t{\n\t\t\ttd.appendChild(FilenameDialog.createTypeHint(editorUi, nameInput, hints));\n\t\t}\n\t}\n\t\n\tif (content != null)\n\t{\n\t\trow = document.createElement('tr');\n\t\ttd = document.createElement('td');\n\t\ttd.colSpan = 2;\n\t\ttd.appendChild(content);\n\t\trow.appendChild(td);\n\t\ttbody.appendChild(row);\n\t}\n\t\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\ttd.colSpan = 2;\n\ttd.style.paddingTop = '20px';\n\ttd.style.whiteSpace = 'nowrap';\n\ttd.setAttribute('align', 'right');\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t\t\n\t\tif (cancelFn != null)\n\t\t{\n\t\t\tcancelFn();\n\t\t}\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\t\n\tif (helpLink != null)\n\t{\n\t\tvar helpBtn = mxUtils.button(mxResources.get('help'), function()\n\t\t{\n\t\t\teditorUi.editor.graph.openLink(helpLink);\n\t\t});\n\t\t\n\t\thelpBtn.className = 'geBtn';\t\n\t\ttd.appendChild(helpBtn);\n\t}\n\n\tmxEvent.addListener(nameInput, 'keypress', function(e)\n\t{\n\t\tif (e.keyCode == 13)\n\t\t{\n\t\t\tgenericBtn.click();\n\t\t}\n\t});\n\t\n\ttd.appendChild(genericBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\t\n\tthis.container = table;\n};\n\n/**\n * \n */\nFilenameDialog.filenameHelpLink = null;\n\n/**\n * \n */\nFilenameDialog.createTypeHint = function(ui, nameInput, hints)\n{\n\tvar hint = document.createElement('img');\n\thint.style.cssText = 'vertical-align:top;height:16px;width:16px;margin-left:4px;background-repeat:no-repeat;background-position:center bottom;cursor:pointer;';\n\tmxUtils.setOpacity(hint, 70);\n\t\n\tvar nameChanged = function()\n\t{\n\t\thint.setAttribute('src', Editor.helpImage);\n\t\thint.setAttribute('title', mxResources.get('help'));\n\t\t\n\t\tfor (var i = 0; i < hints.length; i++)\n\t\t{\n\t\t\tif (hints[i].ext.length > 0 &&\n\t\t\t\tnameInput.value.substring(nameInput.value.length -\n\t\t\t\t\t\thints[i].ext.length - 1) == '.' + hints[i].ext)\n\t\t\t{\n\t\t\t\thint.setAttribute('src',  mxClient.imageBasePath + '/warning.png');\n\t\t\t\thint.setAttribute('title', mxResources.get(hints[i].title));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tmxEvent.addListener(nameInput, 'keyup', nameChanged);\n\tmxEvent.addListener(nameInput, 'change', nameChanged);\n\tmxEvent.addListener(hint, 'click', function(evt)\n\t{\n\t\tvar title = hint.getAttribute('title');\n\t\t\n\t\tif (hint.getAttribute('src') == Editor.helpImage)\n\t\t{\n\t\t\tui.editor.graph.openLink(FilenameDialog.filenameHelpLink);\n\t\t}\n\t\telse if (title != '')\n\t\t{\n\t\t\tui.showError(null, title, mxResources.get('help'), function()\n\t\t\t{\n\t\t\t\tui.editor.graph.openLink(FilenameDialog.filenameHelpLink);\n\t\t\t}, null, mxResources.get('ok'), null, null, null, 340, 90);\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tnameChanged();\n\t\n\treturn hint;\n};\n\n/**\n * Constructs a new textarea dialog.\n */\nvar TextareaDialog = function(editorUi, title, url, fn, cancelFn, cancelTitle, w, h, addButtons, noHide, noWrap, applyTitle)\n{\n\tw = (w != null) ? w : 300;\n\th = (h != null) ? h : 120;\n\tnoHide = (noHide != null) ? noHide : false;\n\tvar row, td;\n\t\n\tvar table = document.createElement('table');\n\tvar tbody = document.createElement('tbody');\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\ttd.style.width = '100px';\n\tmxUtils.write(td, title);\n\t\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\n\tvar nameInput = document.createElement('textarea');\n\t\n\tif (noWrap)\n\t{\n\t\tnameInput.setAttribute('wrap', 'off');\n\t}\n\t\n\tnameInput.setAttribute('spellcheck', 'false');\n\tnameInput.setAttribute('autocorrect', 'off');\n\tnameInput.setAttribute('autocomplete', 'off');\n\tnameInput.setAttribute('autocapitalize', 'off');\n\t\n\tmxUtils.write(nameInput, url || '');\n\tnameInput.style.resize = 'none';\n\tnameInput.style.width = w + 'px';\n\tnameInput.style.height = h + 'px';\n\t\n\tthis.textarea = nameInput;\n\n\tthis.init = function()\n\t{\n\t\tnameInput.focus();\n\t\tnameInput.scrollTop = 0;\n\t};\n\n\ttd.appendChild(nameInput);\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\ttd.style.paddingTop = '14px';\n\ttd.style.whiteSpace = 'nowrap';\n\ttd.setAttribute('align', 'right');\n\t\n\tvar cancelBtn = mxUtils.button(cancelTitle || mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t\t\n\t\tif (cancelFn != null)\n\t\t{\n\t\t\tcancelFn();\n\t\t}\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\t\n\tif (addButtons != null)\n\t{\n\t\taddButtons(td, nameInput);\n\t}\n\t\n\tif (fn != null)\n\t{\n\t\tvar genericBtn = mxUtils.button(applyTitle || mxResources.get('apply'), function()\n\t\t{\n\t\t\tif (!noHide)\n\t\t\t{\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\t\n\t\t\tfn(nameInput.value);\n\t\t});\n\t\t\n\t\tgenericBtn.className = 'geBtn gePrimaryBtn';\t\n\t\ttd.appendChild(genericBtn);\n\t}\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\tthis.container = table;\n};\n\n/**\n * Constructs a new edit file dialog.\n */\nvar EditDiagramDialog = function(editorUi)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.textAlign = 'right';\n\tvar textarea = document.createElement('textarea');\n\ttextarea.setAttribute('wrap', 'off');\n\ttextarea.setAttribute('spellcheck', 'false');\n\ttextarea.setAttribute('autocorrect', 'off');\n\ttextarea.setAttribute('autocomplete', 'off');\n\ttextarea.setAttribute('autocapitalize', 'off');\n\ttextarea.style.overflow = 'auto';\n\ttextarea.style.resize = 'none';\n\ttextarea.style.width = '600px';\n\ttextarea.style.height = '360px';\n\ttextarea.style.marginBottom = '16px';\n\t\n\ttextarea.value = mxUtils.getPrettyXml(editorUi.editor.getGraphXml());\n\tdiv.appendChild(textarea);\n\t\n\tthis.init = function()\n\t{\n\t\ttextarea.focus();\n\t};\n\t\n\t// Enables dropping files\n\tif (Graph.fileSupport)\n\t{\n\t\tfunction handleDrop(evt)\n\t\t{\n\t\t    evt.stopPropagation();\n\t\t    evt.preventDefault();\n\t\t    \n\t\t    if (evt.dataTransfer.files.length > 0)\n\t\t    {\n    \t\t\tvar file = evt.dataTransfer.files[0];\n    \t\t\tvar reader = new FileReader();\n\t\t\t\t\n\t\t\t\treader.onload = function(e)\n\t\t\t\t{\n\t\t\t\t\ttextarea.value = e.target.result;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\treader.readAsText(file);\n    \t\t}\n\t\t    else\n\t\t    {\n\t\t    \ttextarea.value = editorUi.extractGraphModelFromEvent(evt);\n\t\t    }\n\t\t};\n\t\t\n\t\tfunction handleDragOver(evt)\n\t\t{\n\t\t\tevt.stopPropagation();\n\t\t\tevt.preventDefault();\n\t\t};\n\n\t\t// Setup the dnd listeners.\n\t\ttextarea.addEventListener('dragover', handleDragOver, false);\n\t\ttextarea.addEventListener('drop', handleDrop, false);\n\t}\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\tdiv.appendChild(cancelBtn);\n\t}\n\t\n\tvar select = document.createElement('select');\n\tselect.style.width = '180px';\n\tselect.className = 'geBtn';\n\n\tif (editorUi.editor.graph.isEnabled())\n\t{\n\t\tvar replaceOption = document.createElement('option');\n\t\treplaceOption.setAttribute('value', 'replace');\n\t\tmxUtils.write(replaceOption, mxResources.get('replaceExistingDrawing'));\n\t\tselect.appendChild(replaceOption);\n\t}\n\n\tvar newOption = document.createElement('option');\n\tnewOption.setAttribute('value', 'new');\n\tmxUtils.write(newOption, mxResources.get('openInNewWindow'));\n\t\n\tif (EditDiagramDialog.showNewWindowOption)\n\t{\n\t\tselect.appendChild(newOption);\n\t}\n\n\tif (editorUi.editor.graph.isEnabled())\n\t{\n\t\tvar importOption = document.createElement('option');\n\t\timportOption.setAttribute('value', 'import');\n\t\tmxUtils.write(importOption, mxResources.get('addToExistingDrawing'));\n\t\tselect.appendChild(importOption);\n\t}\n\n\tdiv.appendChild(select);\n\n\tvar okBtn = mxUtils.button(mxResources.get('ok'), function()\n\t{\n\t\t// Removes all illegal control characters before parsing\n\t\tvar data = Graph.zapGremlins(mxUtils.trim(textarea.value));\n\t\tvar error = null;\n\t\t\n\t\tif (select.value == 'new')\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\teditorUi.editor.editAsNew(data);\n\t\t}\n\t\telse if (select.value == 'replace')\n\t\t{\n\t\t\teditorUi.editor.graph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\teditorUi.editor.setGraphXml(mxUtils.parseXml(data).documentElement);\n\t\t\t\t// LATER: Why is hideDialog between begin-/endUpdate faster?\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\teditorUi.editor.graph.model.endUpdate();\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse if (select.value == 'import')\n\t\t{\n\t\t\teditorUi.editor.graph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar doc = mxUtils.parseXml(data);\n\t\t\t\tvar model = new mxGraphModel();\n\t\t\t\tvar codec = new mxCodec(doc);\n\t\t\t\tcodec.decode(doc.documentElement, model);\n\t\t\t\t\n\t\t\t\tvar children = model.getChildren(model.getChildAt(model.getRoot(), 0));\n\t\t\t\teditorUi.editor.graph.setSelectionCells(editorUi.editor.graph.importCells(children));\n\t\t\t\t\n\t\t\t\t// LATER: Why is hideDialog between begin-/endUpdate faster?\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\teditorUi.editor.graph.model.endUpdate();\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (error != null)\n\t\t{\n\t\t\tmxUtils.alert(error.message);\n\t\t}\n\t});\n\tokBtn.className = 'geBtn gePrimaryBtn';\n\tdiv.appendChild(okBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\tdiv.appendChild(cancelBtn);\n\t}\n\n\tthis.container = div;\n};\n\n/**\n * \n */\nEditDiagramDialog.showNewWindowOption = true;\n\n/**\n * Constructs a new export dialog.\n */\nvar ExportDialog = function(editorUi)\n{\n\tvar graph = editorUi.editor.graph;\n\tvar bounds = graph.getGraphBounds();\n\tvar scale = graph.view.scale;\n\t\n\tvar width = Math.ceil(bounds.width / scale);\n\tvar height = Math.ceil(bounds.height / scale);\n\n\tvar row, td;\n\t\n\tvar table = document.createElement('table');\n\tvar tbody = document.createElement('tbody');\n\ttable.setAttribute('cellpadding', (mxClient.IS_SF) ? '0' : '2');\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\ttd.style.width = '100px';\n\tmxUtils.write(td, mxResources.get('filename') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar nameInput = document.createElement('input');\n\tnameInput.setAttribute('value', editorUi.editor.getOrCreateFilename());\n\tnameInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(nameInput);\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\t\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('format') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar imageFormatSelect = document.createElement('select');\n\timageFormatSelect.style.width = '180px';\n\n\tvar pngOption = document.createElement('option');\n\tpngOption.setAttribute('value', 'png');\n\tmxUtils.write(pngOption, mxResources.get('formatPng'));\n\timageFormatSelect.appendChild(pngOption);\n\n\tvar gifOption = document.createElement('option');\n\t\n\tif (ExportDialog.showGifOption)\n\t{\n\t\tgifOption.setAttribute('value', 'gif');\n\t\tmxUtils.write(gifOption, mxResources.get('formatGif'));\n\t\timageFormatSelect.appendChild(gifOption);\n\t}\n\t\n\tvar jpgOption = document.createElement('option');\n\tjpgOption.setAttribute('value', 'jpg');\n\tmxUtils.write(jpgOption, mxResources.get('formatJpg'));\n\timageFormatSelect.appendChild(jpgOption);\n\n\tvar pdfOption = document.createElement('option');\n\tpdfOption.setAttribute('value', 'pdf');\n\tmxUtils.write(pdfOption, mxResources.get('formatPdf'));\n\timageFormatSelect.appendChild(pdfOption);\n\t\n\tvar svgOption = document.createElement('option');\n\tsvgOption.setAttribute('value', 'svg');\n\tmxUtils.write(svgOption, mxResources.get('formatSvg'));\n\timageFormatSelect.appendChild(svgOption);\n\t\n\tif (ExportDialog.showXmlOption)\n\t{\n\t\tvar xmlOption = document.createElement('option');\n\t\txmlOption.setAttribute('value', 'xml');\n\t\tmxUtils.write(xmlOption, mxResources.get('formatXml'));\n\t\timageFormatSelect.appendChild(xmlOption);\n\t}\n\n\ttd = document.createElement('td');\n\ttd.appendChild(imageFormatSelect);\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('zoom') + ' (%):');\n\t\n\trow.appendChild(td);\n\t\n\tvar zoomInput = document.createElement('input');\n\tzoomInput.setAttribute('type', 'number');\n\tzoomInput.setAttribute('value', '100');\n\tzoomInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(zoomInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\n\trow = document.createElement('tr');\n\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('width') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar widthInput = document.createElement('input');\n\twidthInput.setAttribute('value', width);\n\twidthInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(widthInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('height') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar heightInput = document.createElement('input');\n\theightInput.setAttribute('value', height);\n\theightInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(heightInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('background') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar transparentCheckbox = document.createElement('input');\n\ttransparentCheckbox.setAttribute('type', 'checkbox');\n\ttransparentCheckbox.checked = graph.background == null || graph.background == mxConstants.NONE;\n\n\ttd = document.createElement('td');\n\ttd.appendChild(transparentCheckbox);\n\tmxUtils.write(td, mxResources.get('transparent'));\n\t\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('borderWidth') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar borderInput = document.createElement('input');\n\tborderInput.setAttribute('type', 'number');\n\tborderInput.setAttribute('value', ExportDialog.lastBorderValue);\n\tborderInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(borderInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\t\n\t// Handles changes in the export format\n\tfunction formatChanged()\n\t{\n\t\tvar name = nameInput.value;\n\t\tvar dot = name.lastIndexOf('.');\n\t\t\n\t\tif (dot > 0)\n\t\t{\n\t\t\tnameInput.value = name.substring(0, dot + 1) + imageFormatSelect.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnameInput.value = name + '.' + imageFormatSelect.value;\n\t\t}\n\t\t\n\t\tif (imageFormatSelect.value === 'xml')\n\t\t{\n\t\t\tzoomInput.setAttribute('disabled', 'true');\n\t\t\twidthInput.setAttribute('disabled', 'true');\n\t\t\theightInput.setAttribute('disabled', 'true');\n\t\t\tborderInput.setAttribute('disabled', 'true');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.removeAttribute('disabled');\n\t\t\twidthInput.removeAttribute('disabled');\n\t\t\theightInput.removeAttribute('disabled');\n\t\t\tborderInput.removeAttribute('disabled');\n\t\t}\n\t\t\n\t\tif (imageFormatSelect.value === 'png' || imageFormatSelect.value === 'svg')\n\t\t{\n\t\t\ttransparentCheckbox.removeAttribute('disabled');\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttransparentCheckbox.setAttribute('disabled', 'disabled');\n\t\t}\n\t};\n\t\n\tmxEvent.addListener(imageFormatSelect, 'change', formatChanged);\n\tformatChanged();\n\n\tfunction checkValues()\n\t{\n\t\tif (widthInput.value * heightInput.value > MAX_AREA || widthInput.value <= 0)\n\t\t{\n\t\t\twidthInput.style.backgroundColor = 'red';\n\t\t}\n\t\telse\n\t\t{\n\t\t\twidthInput.style.backgroundColor = '';\n\t\t}\n\t\t\n\t\tif (widthInput.value * heightInput.value > MAX_AREA || heightInput.value <= 0)\n\t\t{\n\t\t\theightInput.style.backgroundColor = 'red';\n\t\t}\n\t\telse\n\t\t{\n\t\t\theightInput.style.backgroundColor = '';\n\t\t}\n\t};\n\n\tmxEvent.addListener(zoomInput, 'change', function()\n\t{\n\t\tvar s = Math.max(0, parseFloat(zoomInput.value) || 100) / 100;\n\t\tzoomInput.value = parseFloat((s * 100).toFixed(2));\n\t\t\n\t\tif (width > 0)\n\t\t{\n\t\t\twidthInput.value = Math.floor(width * s);\n\t\t\theightInput.value = Math.floor(height * s);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.value = '100';\n\t\t\twidthInput.value = width;\n\t\t\theightInput.value = height;\n\t\t}\n\t\t\n\t\tcheckValues();\n\t});\n\n\tmxEvent.addListener(widthInput, 'change', function()\n\t{\n\t\tvar s = parseInt(widthInput.value) / width;\n\t\t\n\t\tif (s > 0)\n\t\t{\n\t\t\tzoomInput.value = parseFloat((s * 100).toFixed(2));\n\t\t\theightInput.value = Math.floor(height * s);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.value = '100';\n\t\t\twidthInput.value = width;\n\t\t\theightInput.value = height;\n\t\t}\n\t\t\n\t\tcheckValues();\n\t});\n\n\tmxEvent.addListener(heightInput, 'change', function()\n\t{\n\t\tvar s = parseInt(heightInput.value) / height;\n\t\t\n\t\tif (s > 0)\n\t\t{\n\t\t\tzoomInput.value = parseFloat((s * 100).toFixed(2));\n\t\t\twidthInput.value = Math.floor(width * s);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.value = '100';\n\t\t\twidthInput.value = width;\n\t\t\theightInput.value = height;\n\t\t}\n\t\t\n\t\tcheckValues();\n\t});\n\t\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\ttd.setAttribute('align', 'right');\n\ttd.style.paddingTop = '22px';\n\ttd.colSpan = 2;\n\t\n\tvar saveBtn = mxUtils.button(mxResources.get('export'), mxUtils.bind(this, function()\n\t{\n\t\tif (parseInt(zoomInput.value) <= 0)\n\t\t{\n\t\t\tmxUtils.alert(mxResources.get('drawingEmpty'));\n\t\t}\n\t\telse\n\t\t{\n\t    \tvar name = nameInput.value;\n\t\t\tvar format = imageFormatSelect.value;\n\t    \tvar s = Math.max(0, parseFloat(zoomInput.value) || 100) / 100;\n\t\t\tvar b = Math.max(0, parseInt(borderInput.value));\n\t\t\tvar bg = graph.background;\n\t\t\t\n\t\t\tif ((format == 'svg' || format == 'png') && transparentCheckbox.checked)\n\t\t\t{\n\t\t\t\tbg = null;\n\t\t\t}\n\t\t\telse if (bg == null || bg == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tbg = '#ffffff';\n\t\t\t}\n\t\t\t\n\t\t\tExportDialog.lastBorderValue = b;\n\t\t\tExportDialog.exportFile(editorUi, name, format, bg, s, b);\n\t\t}\n\t}));\n\tsaveBtn.className = 'geBtn gePrimaryBtn';\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t\ttd.appendChild(saveBtn);\n\t}\n\telse\n\t{\n\t\ttd.appendChild(saveBtn);\n\t\ttd.appendChild(cancelBtn);\n\t}\n\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\tthis.container = table;\n};\n\n/**\n * Remembers last value for border.\n */\nExportDialog.lastBorderValue = 0;\n\n/**\n * Global switches for the export dialog.\n */\nExportDialog.showGifOption = true;\n\n/**\n * Global switches for the export dialog.\n */\nExportDialog.showXmlOption = true;\n\n/**\n * Hook for getting the export format. Returns null for the default\n * intermediate XML export format or a function that returns the\n * parameter and value to be used in the request in the form\n * key=value, where value should be URL encoded.\n */\nExportDialog.exportFile = function(editorUi, name, format, bg, s, b)\n{\n\tvar graph = editorUi.editor.graph;\n\t\n\tif (format == 'xml')\n\t{\n    \tExportDialog.saveLocalFile(editorUi, mxUtils.getXml(editorUi.editor.getGraphXml()), name, format);\n\t}\n    else if (format == 'svg')\n\t{\n\t\tExportDialog.saveLocalFile(editorUi, mxUtils.getXml(graph.getSvg(bg, s, b)), name, format);\n\t}\n    else\n    {\n    \tvar bounds = graph.getGraphBounds();\n    \t\n\t\t// New image export\n\t\tvar xmlDoc = mxUtils.createXmlDocument();\n\t\tvar root = xmlDoc.createElement('output');\n\t\txmlDoc.appendChild(root);\n\t\t\n\t    // Renders graph. Offset will be multiplied with state's scale when painting state.\n\t\tvar xmlCanvas = new mxXmlCanvas2D(root);\n\t\txmlCanvas.translate(Math.floor((b / s - bounds.x) / graph.view.scale),\n\t\t\tMath.floor((b / s - bounds.y) / graph.view.scale));\n\t\txmlCanvas.scale(s / graph.view.scale);\n\t\t\n\t\tvar imgExport = new mxImageExport()\n\t    imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\n\t    \n\t\t// Puts request data together\n\t\tvar param = 'xml=' + encodeURIComponent(mxUtils.getXml(root));\n\t\tvar w = Math.ceil(bounds.width * s / graph.view.scale + 2 * b);\n\t\tvar h = Math.ceil(bounds.height * s / graph.view.scale + 2 * b);\n\t\t\n\t\t// Requests image if request is valid\n\t\tif (param.length <= MAX_REQUEST_SIZE && w * h < MAX_AREA)\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\tvar req = new mxXmlRequest(EXPORT_URL, 'format=' + format +\n\t\t\t\t'&filename=' + encodeURIComponent(name) +\n\t\t\t\t'&bg=' + ((bg != null) ? bg : 'none') +\n\t\t\t\t'&w=' + w + '&h=' + h + '&' + param);\n\t\t\treq.simulate(document, '_blank');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.alert(mxResources.get('drawingTooLarge'));\n\t\t}\n\t}\n};\n\n/**\n * Hook for getting the export format. Returns null for the default\n * intermediate XML export format or a function that returns the\n * parameter and value to be used in the request in the form\n * key=value, where value should be URL encoded.\n */\nExportDialog.saveLocalFile = function(editorUi, data, filename, format)\n{\n\tif (data.length < MAX_REQUEST_SIZE)\n\t{\n\t\teditorUi.hideDialog();\n\t\tvar req = new mxXmlRequest(SAVE_URL, 'xml=' + encodeURIComponent(data) + '&filename=' +\n\t\t\tencodeURIComponent(filename) + '&format=' + format);\n\t\treq.simulate(document, '_blank');\n\t}\n\telse\n\t{\n\t\tmxUtils.alert(mxResources.get('drawingTooLarge'));\n\t\tmxUtils.popup(xml);\n\t}\n};\n\n/**\n * Constructs a new metadata dialog.\n */\nvar EditDataDialog = function(ui, cell)\n{\n\tvar div = document.createElement('div');\n\tvar graph = ui.editor.graph;\n\t\n\tvar value = graph.getModel().getValue(cell);\n\t\n\t// Converts the value to an XML node\n\tif (!mxUtils.isNode(value))\n\t{\n\t\tvar doc = mxUtils.createXmlDocument();\n\t\tvar obj = doc.createElement('object');\n\t\tobj.setAttribute('label', value || '');\n\t\tvalue = obj;\n\t}\n\n\t// Creates the dialog contents\n\tvar form = new mxForm('properties');\n\tform.table.style.width = '100%';\n\n\tvar attrs = value.attributes;\n\tvar names = [];\n\tvar texts = [];\n\tvar count = 0;\n\n\tvar id = (EditDataDialog.getDisplayIdForCell != null) ?\n\t\tEditDataDialog.getDisplayIdForCell(ui, cell) : null;\n\t\n\t// FIXME: Fix remove button for quirks mode\n\tvar addRemoveButton = function(text, name)\n\t{\n\t\tvar wrapper = document.createElement('div');\n\t\twrapper.style.position = 'relative';\n\t\twrapper.style.paddingRight = '20px';\n\t\twrapper.style.boxSizing = 'border-box';\n\t\twrapper.style.width = '100%';\n\t\t\n\t\tvar removeAttr = document.createElement('a');\n\t\tvar img = mxUtils.createImage(Dialog.prototype.closeImage);\n\t\timg.style.height = '9px';\n\t\timg.style.fontSize = '9px';\n\t\timg.style.marginBottom = (mxClient.IS_IE11) ? '-1px' : '5px';\n\t\t\n\t\tremoveAttr.className = 'geButton';\n\t\tremoveAttr.setAttribute('title', mxResources.get('delete'));\n\t\tremoveAttr.style.position = 'absolute';\n\t\tremoveAttr.style.top = '4px';\n\t\tremoveAttr.style.right = '0px';\n\t\tremoveAttr.style.margin = '0px';\n\t\tremoveAttr.style.width = '9px';\n\t\tremoveAttr.style.height = '9px';\n\t\tremoveAttr.style.cursor = 'pointer';\n\t\tremoveAttr.appendChild(img);\n\t\t\n\t\tvar removeAttrFn = (function(name)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tvar count = 0;\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < names.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (names[j] == name)\n\t\t\t\t\t{\n\t\t\t\t\t\ttexts[j] = null;\n\t\t\t\t\t\tform.table.deleteRow(count + ((id != null) ? 1 : 0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (texts[j] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t})(name);\n\t\t\n\t\tmxEvent.addListener(removeAttr, 'click', removeAttrFn);\n\t\t\n\t\tvar parent = text.parentNode;\n\t\twrapper.appendChild(text);\n\t\twrapper.appendChild(removeAttr);\n\t\tparent.appendChild(wrapper);\n\t};\n\t\n\tvar addTextArea = function(index, name, value)\n\t{\n\t\tnames[index] = name;\n\t\ttexts[index] = form.addTextarea(names[count] + ':', value, 2);\n\t\ttexts[index].style.width = '100%';\n\t\t\n\t\taddRemoveButton(texts[index], name);\n\t};\n\t\n\tvar temp = [];\n\tvar isLayer = graph.getModel().getParent(cell) == graph.getModel().getRoot();\n\n\tfor (var i = 0; i < attrs.length; i++)\n\t{\n\t\tif ((isLayer || attrs[i].nodeName != 'label') && attrs[i].nodeName != 'placeholders')\n\t\t{\n\t\t\ttemp.push({name: attrs[i].nodeName, value: attrs[i].nodeValue});\n\t\t}\n\t}\n\t\n\t// Sorts by name\n\ttemp.sort(function(a, b)\n\t{\n\t    if (a.name < b.name)\n\t    {\n\t    \treturn -1;\n\t    }\n\t    else if (a.name > b.name)\n\t    {\n\t    \treturn 1;\n\t    }\n\t    else\n\t    {\n\t    \treturn 0;\n\t    }\n\t});\n\n\tif (id != null)\n\t{\t\n\t\tvar text = document.createElement('input');\n\t\ttext.style.width = '420px';\n\t\ttext.style.textAlign = 'center';\n\t\ttext.setAttribute('type', 'text');\n\t\ttext.setAttribute('readOnly', 'true');\n\t\ttext.setAttribute('value', id);\n\t\t\n\t\tform.addField(mxResources.get('id') + ':', text);\n\t}\n\t\n\tfor (var i = 0; i < temp.length; i++)\n\t{\n\t\taddTextArea(count, temp[i].name, temp[i].value);\n\t\tcount++;\n\t}\n\t\n\tvar top = document.createElement('div');\n\ttop.style.cssText = 'position:absolute;left:30px;right:30px;overflow-y:auto;top:30px;bottom:80px;';\n\ttop.appendChild(form.table);\n\n\tvar newProp = document.createElement('div');\n\tnewProp.style.whiteSpace = 'nowrap';\n\tnewProp.style.marginTop = '6px';\n\n\tvar nameInput = document.createElement('input');\n\tnameInput.setAttribute('placeholder', mxResources.get('enterPropertyName'));\n\tnameInput.setAttribute('type', 'text');\n\tnameInput.setAttribute('size', (mxClient.IS_IE || mxClient.IS_IE11) ? '36' : '40');\n\tnameInput.style.marginLeft = '2px';\n\n\tnewProp.appendChild(nameInput);\n\ttop.appendChild(newProp);\n\tdiv.appendChild(top);\n\t\n\tvar addBtn = mxUtils.button(mxResources.get('addProperty'), function()\n\t{\n\t\tvar name = nameInput.value;\n\n\t\t// Avoid ':' in attribute names which seems to be valid in Chrome\n\t\tif (name.length > 0 && name != 'label' && name != 'placeholders' && name.indexOf(':') < 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar idx = mxUtils.indexOf(names, name);\n\t\t\t\t\n\t\t\t\tif (idx >= 0 && texts[idx] != null)\n\t\t\t\t{\n\t\t\t\t\ttexts[idx].focus();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Checks if the name is valid\n\t\t\t\t\tvar clone = value.cloneNode(false);\n\t\t\t\t\tclone.setAttribute(name, '');\n\t\t\t\t\t\n\t\t\t\t\tif (idx >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnames.splice(idx, 1);\n\t\t\t\t\t\ttexts.splice(idx, 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tvar text = form.addTextarea(name + ':', '', 2);\n\t\t\t\t\ttext.style.width = '100%';\n\t\t\t\t\ttexts.push(text);\n\t\t\t\t\taddRemoveButton(text, name);\n\n\t\t\t\t\ttext.focus();\n\t\t\t\t}\n\n\t\t\t\tnameInput.value = '';\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxUtils.alert(e);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.alert(mxResources.get('invalidName'));\n\t\t}\n\t});\n\t\n\tthis.init = function()\n\t{\n\t\tif (texts.length > 0)\n\t\t{\n\t\t\ttexts[0].focus();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnameInput.focus();\n\t\t}\n\t};\n\t\n\taddBtn.setAttribute('disabled', 'disabled');\n\taddBtn.style.marginLeft = '10px';\n\taddBtn.style.width = '144px';\n\tnewProp.appendChild(addBtn);\n\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\tui.hideDialog.apply(ui, arguments);\n\t});\n\t\n\tcancelBtn.className = 'geBtn';\n\t\n\tvar applyBtn = mxUtils.button(mxResources.get('apply'), function()\n\t{\n\t\ttry\n\t\t{\n\t\t\tui.hideDialog.apply(ui, arguments);\n\t\t\t\n\t\t\t// Clones and updates the value\n\t\t\tvalue = value.cloneNode(true);\n\t\t\tvar removeLabel = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < names.length; i++)\n\t\t\t{\n\t\t\t\tif (texts[i] == null)\n\t\t\t\t{\n\t\t\t\t\tvalue.removeAttribute(names[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.setAttribute(names[i], texts[i].value);\n\t\t\t\t\tremoveLabel = removeLabel || (names[i] == 'placeholder' &&\n\t\t\t\t\t\tvalue.getAttribute('placeholders') == '1');\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Removes label if placeholder is assigned\n\t\t\tif (removeLabel)\n\t\t\t{\n\t\t\t\tvalue.removeAttribute('label');\n\t\t\t}\n\t\t\t\n\t\t\t// Updates the value of the cell (undoable)\n\t\t\tgraph.getModel().setValue(cell, value);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxUtils.alert(e);\n\t\t}\n\t});\n\tapplyBtn.className = 'geBtn gePrimaryBtn';\n\t\n\tfunction updateAddBtn()\n\t{\n\t\tif (nameInput.value.length > 0)\n\t\t{\n\t\t\taddBtn.removeAttribute('disabled');\n\t\t}\n\t\telse\n\t\t{\n\t\t\taddBtn.setAttribute('disabled', 'disabled');\n\t\t}\n\t};\n\n\tmxEvent.addListener(nameInput, 'keyup', updateAddBtn);\n\t\n\t// Catches all changes that don't fire a keyup (such as paste via mouse)\n\tmxEvent.addListener(nameInput, 'change', updateAddBtn);\n\t\n\tvar buttons = document.createElement('div');\n\tbuttons.style.cssText = 'position:absolute;left:30px;right:30px;text-align:right;bottom:30px;height:40px;'\n\t\n\tif (ui.editor.graph.getModel().isVertex(cell) || ui.editor.graph.getModel().isEdge(cell))\n\t{\n\t\tvar replace = document.createElement('span');\n\t\treplace.style.marginRight = '10px';\n\t\tvar input = document.createElement('input');\n\t\tinput.setAttribute('type', 'checkbox');\n\t\tinput.style.marginRight = '6px';\n\t\t\n\t\tif (value.getAttribute('placeholders') == '1')\n\t\t{\n\t\t\tinput.setAttribute('checked', 'checked');\n\t\t\tinput.defaultChecked = true;\n\t\t}\n\t\n\t\tmxEvent.addListener(input, 'click', function()\n\t\t{\n\t\t\tif (value.getAttribute('placeholders') == '1')\n\t\t\t{\n\t\t\t\tvalue.removeAttribute('placeholders');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue.setAttribute('placeholders', '1');\n\t\t\t}\n\t\t});\n\t\t\n\t\treplace.appendChild(input);\n\t\tmxUtils.write(replace, mxResources.get('placeholders'));\n\t\t\n\t\tif (EditDataDialog.placeholderHelpLink != null)\n\t\t{\n\t\t\tvar link = document.createElement('a');\n\t\t\tlink.setAttribute('href', EditDataDialog.placeholderHelpLink);\n\t\t\tlink.setAttribute('title', mxResources.get('help'));\n\t\t\tlink.setAttribute('target', '_blank');\n\t\t\tlink.style.marginLeft = '8px';\n\t\t\tlink.style.cursor = 'help';\n\t\t\t\n\t\t\tvar icon = document.createElement('img');\n\t\t\tmxUtils.setOpacity(icon, 50);\n\t\t\ticon.style.height = '16px';\n\t\t\ticon.style.width = '16px';\n\t\t\ticon.setAttribute('border', '0');\n\t\t\ticon.setAttribute('valign', 'middle');\n\t\t\ticon.style.marginTop = (mxClient.IS_IE11) ? '0px' : '-4px';\n\t\t\ticon.setAttribute('src', Editor.helpImage);\n\t\t\tlink.appendChild(icon);\n\t\t\t\n\t\t\treplace.appendChild(link);\n\t\t}\n\t\t\n\t\tbuttons.appendChild(replace);\n\t}\n\t\n\tif (ui.editor.cancelFirst)\n\t{\n\t\tbuttons.appendChild(cancelBtn);\n\t\tbuttons.appendChild(applyBtn);\n\t}\n\telse\n\t{\n\t\tbuttons.appendChild(applyBtn);\n\t\tbuttons.appendChild(cancelBtn);\n\t}\n\n\tdiv.appendChild(buttons);\n\tthis.container = div;\n};\n\n/**\n * Optional help link.\n */\nEditDataDialog.getDisplayIdForCell = function(ui, cell)\n{\n\tvar id = null;\n\t\n\tif (ui.editor.graph.getModel().getParent(cell) != null)\n\t{\n\t\tid = cell.getId();\n\t}\n\t\n\treturn id;\n};\n\n/**\n * Optional help link.\n */\nEditDataDialog.placeholderHelpLink = null;\n\n/**\n * Constructs a new link dialog.\n */\nvar LinkDialog = function(editorUi, initialValue, btnLabel, fn)\n{\n\tvar div = document.createElement('div');\n\tmxUtils.write(div, mxResources.get('editLink') + ':');\n\t\n\tvar inner = document.createElement('div');\n\tinner.className = 'geTitle';\n\tinner.style.backgroundColor = 'transparent';\n\tinner.style.borderColor = 'transparent';\n\tinner.style.whiteSpace = 'nowrap';\n\tinner.style.textOverflow = 'clip';\n\tinner.style.cursor = 'default';\n\t\n\tif (!mxClient.IS_VML)\n\t{\n\t\tinner.style.paddingRight = '20px';\n\t}\n\t\n\tvar linkInput = document.createElement('input');\n\tlinkInput.setAttribute('value', initialValue);\n\tlinkInput.setAttribute('placeholder', 'http://www.example.com/');\n\tlinkInput.setAttribute('type', 'text');\n\tlinkInput.style.marginTop = '6px';\n\tlinkInput.style.width = '400px';\n\tlinkInput.style.backgroundImage = 'url(\\'' + Dialog.prototype.clearImage + '\\')';\n\tlinkInput.style.backgroundRepeat = 'no-repeat';\n\tlinkInput.style.backgroundPosition = '100% 50%';\n\tlinkInput.style.paddingRight = '14px';\n\t\n\tvar cross = document.createElement('div');\n\tcross.setAttribute('title', mxResources.get('reset'));\n\tcross.style.position = 'relative';\n\tcross.style.left = '-16px';\n\tcross.style.width = '12px';\n\tcross.style.height = '14px';\n\tcross.style.cursor = 'pointer';\n\n\t// Workaround for inline-block not supported in IE\n\tcross.style.display = (mxClient.IS_VML) ? 'inline' : 'inline-block';\n\tcross.style.top = ((mxClient.IS_VML) ? 0 : 3) + 'px';\n\t\n\t// Needed to block event transparency in IE\n\tcross.style.background = 'url(' + IMAGE_PATH + '/transparent.gif)';\n\n\tmxEvent.addListener(cross, 'click', function()\n\t{\n\t\tlinkInput.value = '';\n\t\tlinkInput.focus();\n\t});\n\t\n\tinner.appendChild(linkInput);\n\tinner.appendChild(cross);\n\tdiv.appendChild(inner);\n\t\n\tthis.init = function()\n\t{\n\t\tlinkInput.focus();\n\t\t\n\t\tif (mxClient.IS_GC || mxClient.IS_FF || document.documentMode >= 5 || mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tlinkInput.select();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t}\n\t};\n\t\n\tvar btns = document.createElement('div');\n\tbtns.style.marginTop = '18px';\n\tbtns.style.textAlign = 'right';\n\n\tmxEvent.addListener(linkInput, 'keypress', function(e)\n\t{\n\t\tif (e.keyCode == 13)\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\tfn(linkInput.value);\n\t\t}\n\t});\n\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\tbtns.appendChild(cancelBtn);\n\t}\n\t\n\tvar mainBtn = mxUtils.button(btnLabel, function()\n\t{\n\t\teditorUi.hideDialog();\n\t\tfn(linkInput.value);\n\t});\n\tmainBtn.className = 'geBtn gePrimaryBtn';\n\tbtns.appendChild(mainBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\tbtns.appendChild(cancelBtn);\n\t}\n\n\tdiv.appendChild(btns);\n\n\tthis.container = div;\n};\n\n/**\n * \n */\nvar OutlineWindow = function(editorUi, x, y, w, h)\n{\n\tvar graph = editorUi.editor.graph;\n\n\tvar div = document.createElement('div');\n\tdiv.style.position = 'absolute';\n\tdiv.style.width = '100%';\n\tdiv.style.height = '100%';\n\tdiv.style.border = '1px solid whiteSmoke';\n\tdiv.style.overflow = 'hidden';\n\n\tthis.window = new mxWindow(mxResources.get('outline'), div, x, y, w, h, true, true);\n\tthis.window.minimumSize = new mxRectangle(0, 0, 80, 80);\n\tthis.window.destroyOnClose = false;\n\tthis.window.setMaximizable(false);\n\tthis.window.setResizable(true);\n\tthis.window.setClosable(true);\n\tthis.window.setVisible(true);\n\t\n\tthis.window.setLocation = function(x, y)\n\t{\n\t\tvar iw = window.innerWidth || document.body.clientWidth || document.documentElement.clientWidth;\n\t\tvar ih = window.innerHeight || document.body.clientHeight || document.documentElement.clientHeight;\n\t\t\n\t\tx = Math.max(0, Math.min(x, iw - this.table.clientWidth));\n\t\ty = Math.max(0, Math.min(y, ih - this.table.clientHeight - 48));\n\n\t\tif (this.getX() != x || this.getY() != y)\n\t\t{\n\t\t\tmxWindow.prototype.setLocation.apply(this, arguments);\n\t\t}\n\t};\n\t\n\tvar resizeListener = mxUtils.bind(this, function()\n\t{\n\t\tvar x = this.window.getX();\n\t\tvar y = this.window.getY();\n\t\t\n\t\tthis.window.setLocation(x, y);\n\t});\n\t\n\tmxEvent.addListener(window, 'resize', resizeListener);\n\t\n\tvar outline = editorUi.createOutline(this.window);\n\n\tthis.destroy = function()\n\t{\n\t\tmxEvent.removeListener(window, 'resize', resizeListener);\n\t\tthis.window.destroy();\n\t\toutline.destroy();\n\t}\n\n\tthis.window.addListener(mxEvent.RESIZE, mxUtils.bind(this, function()\n   \t{\n\t\toutline.update(false);\n\t\toutline.outline.sizeDidChange();\n   \t}));\n\t\n\tthis.window.addListener(mxEvent.SHOW, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = false;\n\t\toutline.outline.refresh();\n\t\toutline.update();\n\t}));\n\t\n\tthis.window.addListener(mxEvent.HIDE, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = true;\n\t}));\n\t\n\tthis.window.addListener(mxEvent.NORMALIZE, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = false;\n\t\toutline.update();\n\t}));\n\t\t\t\n\tthis.window.addListener(mxEvent.MINIMIZE, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = true;\n\t}));\n\n\tvar outlineCreateGraph = outline.createGraph;\n\toutline.createGraph = function(container)\n\t{\n\t\tvar g = outlineCreateGraph.apply(this, arguments);\n\t\tg.gridEnabled = false;\n\t\tg.pageScale = graph.pageScale;\n\t\tg.pageFormat = graph.pageFormat;\n\t\tg.background = (graph.background == null || graph.background == mxConstants.NONE) ? graph.defaultPageBackgroundColor : graph.background;\n\t\tg.pageVisible = graph.pageVisible;\n\n\t\tvar current = mxUtils.getCurrentStyle(graph.container);\n\t\tdiv.style.backgroundColor = current.backgroundColor;\n\t\t\n\t\treturn g;\n\t};\n\t\n\tfunction update()\n\t{\n\t\toutline.outline.pageScale = graph.pageScale;\n\t\toutline.outline.pageFormat = graph.pageFormat;\n\t\toutline.outline.pageVisible = graph.pageVisible;\n\t\toutline.outline.background = (graph.background == null || graph.background == mxConstants.NONE) ? graph.defaultPageBackgroundColor : graph.background;;\n\t\t\n\t\tvar current = mxUtils.getCurrentStyle(graph.container);\n\t\tdiv.style.backgroundColor = current.backgroundColor;\n\n\t\tif (graph.view.backgroundPageShape != null && outline.outline.view.backgroundPageShape != null)\n\t\t{\n\t\t\toutline.outline.view.backgroundPageShape.fill = graph.view.backgroundPageShape.fill;\n\t\t}\n\t\t\n\t\toutline.outline.refresh();\n\t};\n\n\toutline.init(div);\n\n\teditorUi.editor.addListener('resetGraphView', update);\n\teditorUi.addListener('pageFormatChanged', update);\n\teditorUi.addListener('backgroundColorChanged', update);\n\teditorUi.addListener('backgroundImageChanged', update);\n\teditorUi.addListener('pageViewChanged', function()\n\t{\n\t\tupdate();\n\t\toutline.update(true);\n\t});\n\t\n\tif (outline.outline.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tvar zoomInAction = editorUi.actions.get('zoomIn');\n\t\tvar zoomOutAction = editorUi.actions.get('zoomOut');\n\t\t\n\t\tmxEvent.addMouseWheelListener(function(evt, up)\n\t\t{\n\t\t\tvar outlineWheel = false;\n\t\t\tvar source = mxEvent.getSource(evt);\n\t\n\t\t\twhile (source != null)\n\t\t\t{\n\t\t\t\tif (source == outline.outline.view.canvas.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\toutlineWheel = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tsource = source.parentNode;\n\t\t\t}\n\t\n\t\t\tif (outlineWheel)\n\t\t\t{\n\t\t\t\tif (up)\n\t\t\t\t{\n\t\t\t\t\tzoomInAction.funct();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tzoomOutAction.funct();\n\t\t\t\t}\n\t\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * \n */\nvar LayersWindow = function(editorUi, x, y, w, h)\n{\n\tvar graph = editorUi.editor.graph;\n\t\n\tvar div = document.createElement('div');\n\tdiv.style.userSelect = 'none';\n\tdiv.style.background = (Dialog.backdropColor == 'white') ? 'whiteSmoke' : Dialog.backdropColor;\n\tdiv.style.border = '1px solid whiteSmoke';\n\tdiv.style.height = '100%';\n\tdiv.style.marginBottom = '10px';\n\tdiv.style.overflow = 'auto';\n\n\tvar tbarHeight = (!EditorUi.compactUi) ? '30px' : '26px';\n\t\n\tvar listDiv = document.createElement('div')\n\tlistDiv.style.backgroundColor = (Dialog.backdropColor == 'white') ? '#dcdcdc' : Dialog.backdropColor;\n\tlistDiv.style.position = 'absolute';\n\tlistDiv.style.overflow = 'auto';\n\tlistDiv.style.left = '0px';\n\tlistDiv.style.right = '0px';\n\tlistDiv.style.top = '0px';\n\tlistDiv.style.bottom = (parseInt(tbarHeight) + 7) + 'px';\n\tdiv.appendChild(listDiv);\n\t\n\tvar dragSource = null;\n\tvar dropIndex = null;\n\t\n\tmxEvent.addListener(div, 'dragover', function(evt)\n\t{\n\t\tevt.dataTransfer.dropEffect = 'move';\n\t\tdropIndex = 0;\n\t\tevt.stopPropagation();\n\t\tevt.preventDefault();\n\t});\n\t\n\t// Workaround for \"no element found\" error in FF\n\tmxEvent.addListener(div, 'drop', function(evt)\n\t{\n\t\tevt.stopPropagation();\n\t\tevt.preventDefault();\n\t});\n\n\tvar layerCount = null;\n\tvar selectionLayer = null;\n\t\n\tvar ldiv = document.createElement('div');\n\t\n\tldiv.className = 'geToolbarContainer';\n\tldiv.style.position = 'absolute';\n\tldiv.style.bottom = '0px';\n\tldiv.style.left = '0px';\n\tldiv.style.right = '0px';\n\tldiv.style.height = tbarHeight;\n\tldiv.style.overflow = 'hidden';\n\tldiv.style.padding = (!EditorUi.compactUi) ? '1px' : '4px 0px 3px 0px';\n\tldiv.style.backgroundColor = (Dialog.backdropColor == 'white') ? 'whiteSmoke' : Dialog.backdropColor;\n\tldiv.style.borderWidth = '1px 0px 0px 0px';\n\tldiv.style.borderColor = '#c3c3c3';\n\tldiv.style.borderStyle = 'solid';\n\tldiv.style.display = 'block';\n\tldiv.style.whiteSpace = 'nowrap';\n\t\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tldiv.style.filter = 'none';\n\t}\n\t\n\tvar link = document.createElement('a');\n\tlink.className = 'geButton';\n\t\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tlink.style.filter = 'none';\n\t}\n\t\n\tvar removeLink = link.cloneNode();\n\tremoveLink.innerHTML = '<div class=\"geSprite geSprite-delete\" style=\"display:inline-block;\"></div>';\n\n\tmxEvent.addListener(removeLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tgraph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar index = graph.model.root.getIndex(selectionLayer);\n\t\t\t\tgraph.removeCells([selectionLayer], false);\n\t\t\t\t\n\t\t\t\t// Creates default layer if no layer exists\n\t\t\t\tif (graph.model.getChildCount(graph.model.root) == 0)\n\t\t\t\t{\n\t\t\t\t\tgraph.model.add(graph.model.root, new mxCell());\n\t\t\t\t\tgraph.setDefaultParent(null);\n\t\t\t\t}\n\t\t\t\telse if (index > 0 && index <= graph.model.getChildCount(graph.model.root))\n\t\t\t\t{\n\t\t\t\t\tgraph.setDefaultParent(graph.model.getChildAt(graph.model.root, index - 1));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgraph.setDefaultParent(null);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tgraph.model.endUpdate();\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\tremoveLink.className = 'geButton mxDisabled';\n\t}\n\t\n\tldiv.appendChild(removeLink);\n\n\tvar insertLink = link.cloneNode();\n\tinsertLink.setAttribute('title', mxUtils.trim(mxResources.get('moveSelectionTo', [''])));\n\tinsertLink.innerHTML = '<div class=\"geSprite geSprite-insert\" style=\"display:inline-block;\"></div>';\n\t\n\tmxEvent.addListener(insertLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled() && !graph.isSelectionEmpty())\n\t\t{\n\t\t\teditorUi.editor.graph.popupMenuHandler.hideMenu();\n\t\t\t\n\t\t\tvar menu = new mxPopupMenu(mxUtils.bind(this, function(menu, parent)\n\t\t\t{\n\t\t\t\tfor (var i = layerCount - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t(mxUtils.bind(this, function(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar item = menu.addItem(graph.convertValueToString(child) ||\n\t\t\t\t\t\t\t\tmxResources.get('background'), null, mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgraph.moveCells(graph.getSelectionCells(), 0, 0, false, child);\n\t\t\t\t\t\t}), parent);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (graph.getSelectionCount() == 1 && graph.model.isAncestor(child, graph.getSelectionCell()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenu.addCheckmark(item, Editor.checkmarkImage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}))(graph.model.getChildAt(graph.model.root, i));\n\t\t\t\t}\n\t\t\t}));\n\t\t\tmenu.div.className += ' geMenubarMenu';\n\t\t\tmenu.smartSeparators = true;\n\t\t\tmenu.showDisabled = true;\n\t\t\tmenu.autoExpand = true;\n\t\t\t\n\t\t\t// Disables autoexpand and destroys menu when hidden\n\t\t\tmenu.hideMenu = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(menu, arguments);\n\t\t\t\tmenu.destroy();\n\t\t\t});\n\t\n\t\t\tvar offset = mxUtils.getOffset(insertLink);\n\t\t\tmenu.popup(offset.x, offset.y + insertLink.offsetHeight, null, evt);\n\t\t\t\n\t\t\t// Allows hiding by clicking on document\n\t\t\teditorUi.setCurrentMenu(menu);\n\t\t}\n\t});\n\n\tldiv.appendChild(insertLink);\n\t\n\tvar dataLink = link.cloneNode();\n\tdataLink.innerHTML = '<div class=\"geSprite geSprite-dots\" style=\"display:inline-block;\"></div>';\n\tdataLink.setAttribute('title', mxResources.get('rename'));\n\n\tmxEvent.addListener(dataLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\teditorUi.showDataDialog(selectionLayer);\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\tdataLink.className = 'geButton mxDisabled';\n\t}\n\n\tldiv.appendChild(dataLink);\n\t\n\tfunction renameLayer(layer)\n\t{\n\t\tif (graph.isEnabled() && layer != null)\n\t\t{\n\t\t\tvar label = graph.convertValueToString(layer);\n\t\t\tvar dlg = new FilenameDialog(editorUi, label || mxResources.get('background'), mxResources.get('rename'), mxUtils.bind(this, function(newValue)\n\t\t\t{\n\t\t\t\tif (newValue != null)\n\t\t\t\t{\n\t\t\t\t\tgraph.cellLabelChanged(layer, newValue);\n\t\t\t\t}\n\t\t\t}), mxResources.get('enterName'));\n\t\t\teditorUi.showDialog(dlg.container, 300, 100, true, true);\n\t\t\tdlg.init();\n\t\t}\n\t};\n\t\n\tvar duplicateLink = link.cloneNode();\n\tduplicateLink.innerHTML = '<div class=\"geSprite geSprite-duplicate\" style=\"display:inline-block;\"></div>';\n\t\n\tmxEvent.addListener(duplicateLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tvar newCell = null;\n\t\t\tgraph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tnewCell = graph.cloneCell(selectionLayer);\n\t\t\t\tgraph.cellLabelChanged(newCell, mxResources.get('untitledLayer'));\n\t\t\t\tnewCell.setVisible(true);\n\t\t\t\tnewCell = graph.addCell(newCell, graph.model.root);\n\t\t\t\tgraph.setDefaultParent(newCell);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tgraph.model.endUpdate();\n\t\t\t}\n\n\t\t\tif (newCell != null && !graph.isCellLocked(newCell))\n\t\t\t{\n\t\t\t\tgraph.selectAll(newCell);\n\t\t\t}\n\t\t}\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\tduplicateLink.className = 'geButton mxDisabled';\n\t}\n\n\tldiv.appendChild(duplicateLink);\n\n\tvar addLink = link.cloneNode();\n\taddLink.innerHTML = '<div class=\"geSprite geSprite-plus\" style=\"display:inline-block;\"></div>';\n\taddLink.setAttribute('title', mxResources.get('addLayer'));\n\t\n\tmxEvent.addListener(addLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tgraph.model.beginUpdate();\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar cell = graph.addCell(new mxCell(mxResources.get('untitledLayer')), graph.model.root);\n\t\t\t\tgraph.setDefaultParent(cell);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tgraph.model.endUpdate();\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\taddLink.className = 'geButton mxDisabled';\n\t}\n\t\n\tldiv.appendChild(addLink);\n\n\tdiv.appendChild(ldiv);\t\n\t\n\tfunction refresh()\n\t{\n\t\tlayerCount = graph.model.getChildCount(graph.model.root)\n\t\tlistDiv.innerHTML = '';\n\n\t\tfunction addLayer(index, label, child, defaultParent)\n\t\t{\n\t\t\tvar ldiv = document.createElement('div');\n\t\t\tldiv.className = 'geToolbarContainer';\n\n\t\t\tldiv.style.overflow = 'hidden';\n\t\t\tldiv.style.position = 'relative';\n\t\t\tldiv.style.padding = '4px';\n\t\t\tldiv.style.height = '22px';\n\t\t\tldiv.style.display = 'block';\n\t\t\tldiv.style.backgroundColor = (Dialog.backdropColor == 'white') ? 'whiteSmoke' : Dialog.backdropColor;\n\t\t\tldiv.style.borderWidth = '0px 0px 1px 0px';\n\t\t\tldiv.style.borderColor = '#c3c3c3';\n\t\t\tldiv.style.borderStyle = 'solid';\n\t\t\tldiv.style.whiteSpace = 'nowrap';\n\t\t\tldiv.setAttribute('title', label);\n\t\t\t\n\t\t\tvar left = document.createElement('div');\n\t\t\tleft.style.display = 'inline-block';\n\t\t\tleft.style.width = '100%';\n\t\t\tleft.style.textOverflow = 'ellipsis';\n\t\t\tleft.style.overflow = 'hidden';\n\t\t\t\n\t\t\tmxEvent.addListener(ldiv, 'dragover', function(evt)\n\t\t\t{\n\t\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t\t\tdropIndex = index;\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tevt.preventDefault();\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(ldiv, 'dragstart', function(evt)\n\t\t\t{\n\t\t\t\tdragSource = ldiv;\n\t\t\t\t\n\t\t\t\t// Workaround for no DnD on DIV in FF\n\t\t\t\tif (mxClient.IS_FF)\n\t\t\t\t{\n\t\t\t\t\t// LATER: Check what triggers a parse as XML on this in FF after drop\n\t\t\t\t\tevt.dataTransfer.setData('Text', '<layer/>');\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(ldiv, 'dragend', function(evt)\n\t\t\t{\n\t\t\t\tif (dragSource != null && dropIndex != null)\n\t\t\t\t{\n\t\t\t\t\tgraph.addCell(child, graph.model.root, dropIndex);\n\t\t\t\t}\n\n\t\t\t\tdragSource = null;\n\t\t\t\tdropIndex = null;\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tevt.preventDefault();\n\t\t\t});\n\n\t\t\tvar btn = document.createElement('img');\n\t\t\tbtn.setAttribute('draggable', 'false');\n\t\t\tbtn.setAttribute('align', 'top');\n\t\t\tbtn.setAttribute('border', '0');\n\t\t\tbtn.style.padding = '4px';\n\t\t\tbtn.setAttribute('title', mxResources.get('lockUnlock'));\n\n\t\t\tvar state = graph.view.getState(child);\n    \t\t\tvar style = (state != null) ? state.style : graph.getCellStyle(child);\n\n\t\t\tif (mxUtils.getValue(style, 'locked', '0') == '1')\n\t\t\t{\n\t\t\t\tbtn.setAttribute('src', Dialog.prototype.lockedImage);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbtn.setAttribute('src', Dialog.prototype.unlockedImage);\n\t\t\t}\n\t\t\t\n\t\t\tif (graph.isEnabled())\n\t\t\t{\n\t\t\t\tbtn.style.cursor = 'pointer';\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.addListener(btn, 'click', function(evt)\n\t\t\t{\n\t\t\t\tif (graph.isEnabled())\n\t\t\t\t{\n\t\t\t\t\tvar value = null;\n\t\t\t\t\t\n\t\t\t\t\tgraph.getModel().beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t    \t\tvalue = (mxUtils.getValue(style, 'locked', '0') == '1') ? null : '1';\n\t\t\t    \t\tgraph.setCellStyles('locked', value, [child]);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.getModel().endUpdate();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value == '1')\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.removeSelectionCells(graph.getModel().getDescendants(child));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tleft.appendChild(btn);\n\n\t\t\tvar inp = document.createElement('input');\n\t\t\tinp.setAttribute('type', 'checkbox');\n\t\t\tinp.setAttribute('title', mxResources.get('hideIt', [child.value || mxResources.get('background')]));\n\t\t\tinp.style.marginLeft = '4px';\n\t\t\tinp.style.marginRight = '6px';\n\t\t\tinp.style.marginTop = '4px';\n\t\t\tleft.appendChild(inp);\n\t\t\t\n\t\t\tif (graph.model.isVisible(child))\n\t\t\t{\n\t\t\t\tinp.setAttribute('checked', 'checked');\n\t\t\t\tinp.defaultChecked = true;\n\t\t\t}\n\n\t\t\tmxEvent.addListener(inp, 'click', function(evt)\n\t\t\t{\n\t\t\t\tgraph.model.setVisible(child, !graph.model.isVisible(child));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\n\t\t\tmxUtils.write(left, label);\n\t\t\tldiv.appendChild(left);\n\t\t\t\n\t\t\tif (graph.isEnabled())\n\t\t\t{\n\t\t\t\t// Fallback if no drag and drop is available\n\t\t\t\tif (mxClient.IS_TOUCH || mxClient.IS_POINTER || mxClient.IS_VML ||\n\t\t\t\t\t(mxClient.IS_IE && document.documentMode < 10))\n\t\t\t\t{\n\t\t\t\t\tvar right = document.createElement('div');\n\t\t\t\t\tright.style.display = 'block';\n\t\t\t\t\tright.style.textAlign = 'right';\n\t\t\t\t\tright.style.whiteSpace = 'nowrap';\n\t\t\t\t\tright.style.position = 'absolute';\n\t\t\t\t\tright.style.right = '6px';\n\t\t\t\t\tright.style.top = '6px';\n\t\t\n\t\t\t\t\t// Poor man's change layer order\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar img2 = document.createElement('a');\n\t\t\t\t\t\t\n\t\t\t\t\t\timg2.setAttribute('title', mxResources.get('toBack'));\n\t\t\t\t\t\t\n\t\t\t\t\t\timg2.className = 'geButton';\n\t\t\t\t\t\timg2.style.cssFloat = 'none';\n\t\t\t\t\t\timg2.innerHTML = '&#9660;';\n\t\t\t\t\t\timg2.style.width = '14px';\n\t\t\t\t\t\timg2.style.height = '14px';\n\t\t\t\t\t\timg2.style.fontSize = '14px';\n\t\t\t\t\t\timg2.style.margin = '0px';\n\t\t\t\t\t\timg2.style.marginTop = '-1px';\n\t\t\t\t\t\tright.appendChild(img2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tmxEvent.addListener(img2, 'click', function(evt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (graph.isEnabled())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgraph.addCell(child, graph.model.root, index - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (index >= 0 && index < layerCount - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar img1 = document.createElement('a');\n\t\t\t\t\t\t\n\t\t\t\t\t\timg1.setAttribute('title', mxResources.get('toFront'));\n\t\t\t\t\t\t\n\t\t\t\t\t\timg1.className = 'geButton';\n\t\t\t\t\t\timg1.style.cssFloat = 'none';\n\t\t\t\t\t\timg1.innerHTML = '&#9650;';\n\t\t\t\t\t\timg1.style.width = '14px';\n\t\t\t\t\t\timg1.style.height = '14px';\n\t\t\t\t\t\timg1.style.fontSize = '14px';\n\t\t\t\t\t\timg1.style.margin = '0px';\n\t\t\t\t\t\timg1.style.marginTop = '-1px';\n\t\t\t\t\t\tright.appendChild(img1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tmxEvent.addListener(img1, 'click', function(evt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (graph.isEnabled())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgraph.addCell(child, graph.model.root, index + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tldiv.appendChild(right);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10))\n\t\t\t\t{\n\t\t\t\t\tldiv.setAttribute('draggable', 'true');\n\t\t\t\t\tldiv.style.cursor = 'move';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmxEvent.addListener(ldiv, 'dblclick', function(evt)\n\t\t\t{\n\t\t\t\tvar nodeName = mxEvent.getSource(evt).nodeName;\n\t\t\t\t\n\t\t\t\tif (nodeName != 'INPUT' && nodeName != 'IMG')\n\t\t\t\t{\n\t\t\t\t\trenameLayer(child);\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (graph.getDefaultParent() == child)\n\t\t\t{\n\t\t\t\tldiv.style.background =  (Dialog.backdropColor == 'white') ? '#e6eff8' : '#505759';\n\t\t\t\tldiv.style.fontWeight = (graph.isEnabled()) ? 'bold' : '';\n\t\t\t\tselectionLayer = child;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.addListener(ldiv, 'click', function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (graph.isEnabled())\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.setDefaultParent(defaultParent);\n\t\t\t\t\t\tgraph.view.setCurrentRoot(null);\n\t\t\t\t\t\trefresh();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tlistDiv.appendChild(ldiv);\n\t\t};\n\t\t\n\t\t// Cannot be moved or deleted\n\t\tfor (var i = layerCount - 1; i >= 0; i--)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(child)\n\t\t\t{\n\t\t\t\taddLayer(i, graph.convertValueToString(child) ||\n\t\t\t\t\tmxResources.get('background'), child, child);\n\t\t\t}))(graph.model.getChildAt(graph.model.root, i));\n\t\t}\n\t\t\n\t\tvar label = graph.convertValueToString(selectionLayer) || mxResources.get('background');\n\t\tremoveLink.setAttribute('title', mxResources.get('removeIt', [label]));\n\t\tduplicateLink.setAttribute('title', mxResources.get('duplicateIt', [label]));\n\t\tdataLink.setAttribute('title', mxResources.get('editData'));\n\n\t\tif (graph.isSelectionEmpty())\n\t\t{\n\t\t\tinsertLink.className = 'geButton mxDisabled';\n\t\t}\n\t};\n\n\trefresh();\n\tgraph.model.addListener(mxEvent.CHANGE, function()\n\t{\n\t\trefresh();\n\t});\n\n\tgraph.selectionModel.addListener(mxEvent.CHANGE, function()\n\t{\n\t\tif (graph.isSelectionEmpty())\n\t\t{\n\t\t\tinsertLink.className = 'geButton mxDisabled';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tinsertLink.className = 'geButton';\n\t\t}\n\t});\n\n\tthis.window = new mxWindow(mxResources.get('layers'), div, x, y, w, h, true, true);\n\tthis.window.minimumSize = new mxRectangle(0, 0, 120, 120);\n\tthis.window.destroyOnClose = false;\n\tthis.window.setMaximizable(false);\n\tthis.window.setResizable(true);\n\tthis.window.setClosable(true);\n\tthis.window.setVisible(true);\n\t\n\t// Make refresh available via instance\n\tthis.refreshLayers = refresh;\n\t\n\tthis.window.setLocation = function(x, y)\n\t{\n\t\tvar iw = window.innerWidth || document.body.clientWidth || document.documentElement.clientWidth;\n\t\tvar ih = window.innerHeight || document.body.clientHeight || document.documentElement.clientHeight;\n\t\t\n\t\tx = Math.max(0, Math.min(x, iw - this.table.clientWidth));\n\t\ty = Math.max(0, Math.min(y, ih - this.table.clientHeight - 48));\n\n\t\tif (this.getX() != x || this.getY() != y)\n\t\t{\n\t\t\tmxWindow.prototype.setLocation.apply(this, arguments);\n\t\t}\n\t};\n\t\n\tvar resizeListener = mxUtils.bind(this, function()\n\t{\n\t\tvar x = this.window.getX();\n\t\tvar y = this.window.getY();\n\t\t\n\t\tthis.window.setLocation(x, y);\n\t});\n\t\n\tmxEvent.addListener(window, 'resize', resizeListener);\n\n\tthis.destroy = function()\n\t{\n\t\tmxEvent.removeListener(window, 'resize', resizeListener);\n\t\tthis.window.destroy();\n\t}\n};\n"], "fixing_code": ["/**\n * Copyright (c) 2006-2012, JGraph Ltd\n */\n/**\n * Constructs a new open dialog.\n */\nvar OpenDialog = function()\n{\n\tvar iframe = document.createElement('iframe');\n\tiframe.style.backgroundColor = 'transparent';\n\tiframe.allowTransparency = 'true';\n\tiframe.style.borderStyle = 'none';\n\tiframe.style.borderWidth = '0px';\n\tiframe.style.overflow = 'hidden';\n\tiframe.frameBorder = '0';\n\t\n\t// Adds padding as a workaround for box model in older IE versions\n\tvar dx = (mxClient.IS_VML && (document.documentMode == null || document.documentMode < 8)) ? 20 : 0;\n\t\n\tiframe.setAttribute('width', (((Editor.useLocalStorage) ? 640 : 320) + dx) + 'px');\n\tiframe.setAttribute('height', (((Editor.useLocalStorage) ? 480 : 220) + dx) + 'px');\n\tiframe.setAttribute('src', OPEN_FORM);\n\t\n\tthis.container = iframe;\n};\n\n/**\n * Constructs a new color dialog.\n */\nvar ColorDialog = function(editorUi, color, apply, cancelFn)\n{\n\tthis.editorUi = editorUi;\n\t\n\tvar input = document.createElement('input');\n\tinput.style.marginBottom = '10px';\n\tinput.style.width = '216px';\n\t\n\t// Required for picker to render in IE\n\tif (mxClient.IS_IE)\n\t{\n\t\tinput.style.marginTop = '10px';\n\t\tdocument.body.appendChild(input);\n\t}\n\t\n\tthis.init = function()\n\t{\n\t\tif (!mxClient.IS_TOUCH)\n\t\t{\n\t\t\tinput.focus();\n\t\t}\n\t};\n\n\tvar picker = new jscolor.color(input);\n\tpicker.pickerOnfocus = false;\n\tpicker.showPicker();\n\n\tvar div = document.createElement('div');\n\tjscolor.picker.box.style.position = 'relative';\n\tjscolor.picker.box.style.width = '230px';\n\tjscolor.picker.box.style.height = '100px';\n\tjscolor.picker.box.style.paddingBottom = '10px';\n\tdiv.appendChild(jscolor.picker.box);\n\n\tvar center = document.createElement('center');\n\t\n\tfunction createRecentColorTable()\n\t{\n\t\tvar table = addPresets((ColorDialog.recentColors.length == 0) ? ['FFFFFF'] :\n\t\t\t\t\tColorDialog.recentColors, 11, 'FFFFFF', true);\n\t\ttable.style.marginBottom = '8px';\n\t\t\n\t\treturn table;\n\t};\n\t\n\tfunction addPresets(presets, rowLength, defaultColor, addResetOption)\n\t{\n\t\trowLength = (rowLength != null) ? rowLength : 12;\n\t\tvar table = document.createElement('table');\n\t\ttable.style.borderCollapse = 'collapse';\n\t\ttable.setAttribute('cellspacing', '0');\n\t\ttable.style.marginBottom = '20px';\n\t\ttable.style.cellSpacing = '0px';\n\t\tvar tbody = document.createElement('tbody');\n\t\ttable.appendChild(tbody);\n\n\t\tvar rows = presets.length / rowLength;\n\t\t\n\t\tfor (var row = 0; row < rows; row++)\n\t\t{\n\t\t\tvar tr = document.createElement('tr');\n\t\t\t\n\t\t\tfor (var i = 0; i < rowLength; i++)\n\t\t\t{\n\t\t\t\t(function(clr)\n\t\t\t\t{\n\t\t\t\t\tvar td = document.createElement('td');\n\t\t\t\t\ttd.style.border = '1px solid black';\n\t\t\t\t\ttd.style.padding = '0px';\n\t\t\t\t\ttd.style.width = '16px';\n\t\t\t\t\ttd.style.height = '16px';\n\t\t\t\t\t\n\t\t\t\t\tif (clr == null)\n\t\t\t\t\t{\n\t\t\t\t\t\tclr = defaultColor;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (clr == 'none')\n\t\t\t\t\t{\n\t\t\t\t\t\ttd.style.background = 'url(\\'' + Dialog.prototype.noColorImage + '\\')';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\ttd.style.backgroundColor = '#' + clr;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttr.appendChild(td);\n\n\t\t\t\t\tif (clr != null)\n\t\t\t\t\t{\n\t\t\t\t\t\ttd.style.cursor = 'pointer';\n\t\t\t\t\t\t\n\t\t\t\t\t\tmxEvent.addListener(td, 'click', function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (clr == 'none')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpicker.fromString('ffffff');\n\t\t\t\t\t\t\t\tinput.value = 'none';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpicker.fromString(clr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t})(presets[row * rowLength + i]);\n\t\t\t}\n\t\t\t\n\t\t\ttbody.appendChild(tr);\n\t\t}\n\t\t\n\t\tif (addResetOption)\n\t\t{\n\t\t\tvar td = document.createElement('td');\n\t\t\ttd.setAttribute('title', mxResources.get('reset'));\n\t\t\ttd.style.border = '1px solid black';\n\t\t\ttd.style.padding = '0px';\n\t\t\ttd.style.width = '16px';\n\t\t\ttd.style.height = '16px';\n\t\t\ttd.style.backgroundImage = 'url(\\'' + Dialog.prototype.closeImage + '\\')';\n\t\t\ttd.style.backgroundPosition = 'center center';\n\t\t\ttd.style.backgroundRepeat = 'no-repeat';\n\t\t\ttd.style.cursor = 'pointer';\n\t\t\t\n\t\t\ttr.appendChild(td);\n\n\t\t\tmxEvent.addListener(td, 'click', function()\n\t\t\t{\n\t\t\t\tColorDialog.resetRecentColors();\n\t\t\t\ttable.parentNode.replaceChild(createRecentColorTable(), table);\n\t\t\t});\n\t\t}\n\t\t\n\t\tcenter.appendChild(table);\n\t\t\n\t\treturn table;\n\t};\n\n\tdiv.appendChild(input);\n\tmxUtils.br(div);\n\t\n\t// Adds recent colors\n\tcreateRecentColorTable();\n\t\t\n\t// Adds presets\n\tvar table = addPresets(this.presetColors);\n\ttable.style.marginBottom = '8px';\n\ttable = addPresets(this.defaultColors);\n\ttable.style.marginBottom = '16px';\n\n\tdiv.appendChild(center);\n\n\tvar buttons = document.createElement('div');\n\tbuttons.style.textAlign = 'right';\n\tbuttons.style.whiteSpace = 'nowrap';\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t\t\n\t\tif (cancelFn != null)\n\t\t{\n\t\t\tcancelFn();\n\t\t}\n\t});\n\tcancelBtn.className = 'geBtn';\n\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\tbuttons.appendChild(cancelBtn);\n\t}\n\t\n\tvar applyFunction = (apply != null) ? apply : this.createApplyFunction();\n\t\n\tvar applyBtn = mxUtils.button(mxResources.get('apply'), function()\n\t{\n\t\tvar color = input.value;\n\t\t// https://stackoverflow.com/questions/8027423/how-to-check-if-a-string-is-a-valid-hex-color-representation/8027444\n\t\tvar colorValid  = /(^#?[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(color);\n\t\t\n\t\tif (colorValid)\n\t\t{\n\t\t\tColorDialog.addRecentColor(color, 12);\n\t\t\t\n\t\t\tif (color != 'none' && color.charAt(0) != '#')\n\t\t\t{\n\t\t\t\tcolor = '#' + color;\n\t\t\t}\n\n\t\t\tapplyFunction(color);\t\t\t\n\t\t}\n\n\t\teditorUi.hideDialog();\n\t});\n\tapplyBtn.className = 'geBtn gePrimaryBtn';\n\tbuttons.appendChild(applyBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\tbuttons.appendChild(cancelBtn);\n\t}\n\t\n\tif (color != null)\n\t{\n\t\tif (color == 'none')\n\t\t{\n\t\t\tpicker.fromString('ffffff');\n\t\t\tinput.value = 'none';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpicker.fromString(color);\n\t\t}\n\t}\n\t\n\tdiv.appendChild(buttons);\n\tthis.picker = picker;\n\tthis.colorInput = input;\n\n\t// LATER: Only fires if input if focused, should always\n\t// fire if this dialog is showing.\n\tmxEvent.addListener(div, 'keydown', function(e)\n\t{\n\t\tif (e.keyCode == 27)\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\t\n\t\t\tif (cancelFn != null)\n\t\t\t{\n\t\t\t\tcancelFn();\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.consume(e);\n\t\t}\n\t});\n\t\n\tthis.container = div;\n};\n\n/**\n * Creates function to apply value\n */\nColorDialog.prototype.presetColors = ['E6D0DE', 'CDA2BE', 'B5739D', 'E1D5E7', 'C3ABD0', 'A680B8', 'D4E1F5', 'A9C4EB', '7EA6E0', 'D5E8D4', '9AC7BF', '67AB9F', 'D5E8D4', 'B9E0A5', '97D077', 'FFF2CC', 'FFE599', 'FFD966', 'FFF4C3', 'FFCE9F', 'FFB570', 'F8CECC', 'F19C99', 'EA6B66']; \n\n/**\n * Creates function to apply value\n */\nColorDialog.prototype.defaultColors = ['none', 'FFFFFF', 'E6E6E6', 'CCCCCC', 'B3B3B3', '999999', '808080', '666666', '4D4D4D', '333333', '1A1A1A', '000000', 'FFCCCC', 'FFE6CC', 'FFFFCC', 'E6FFCC', 'CCFFCC', 'CCFFE6', 'CCFFFF', 'CCE5FF', 'CCCCFF', 'E5CCFF', 'FFCCFF', 'FFCCE6',\n\t\t'FF9999', 'FFCC99', 'FFFF99', 'CCFF99', '99FF99', '99FFCC', '99FFFF', '99CCFF', '9999FF', 'CC99FF', 'FF99FF', 'FF99CC', 'FF6666', 'FFB366', 'FFFF66', 'B3FF66', '66FF66', '66FFB3', '66FFFF', '66B2FF', '6666FF', 'B266FF', 'FF66FF', 'FF66B3', 'FF3333', 'FF9933', 'FFFF33',\n\t\t'99FF33', '33FF33', '33FF99', '33FFFF', '3399FF', '3333FF', '9933FF', 'FF33FF', 'FF3399', 'FF0000', 'FF8000', 'FFFF00', '80FF00', '00FF00', '00FF80', '00FFFF', '007FFF', '0000FF', '7F00FF', 'FF00FF', 'FF0080', 'CC0000', 'CC6600', 'CCCC00', '66CC00', '00CC00', '00CC66',\n\t\t'00CCCC', '0066CC', '0000CC', '6600CC', 'CC00CC', 'CC0066', '990000', '994C00', '999900', '4D9900', '009900', '00994D', '009999', '004C99', '000099', '4C0099', '990099', '99004D', '660000', '663300', '666600', '336600', '006600', '006633', '006666', '003366', '000066',\n\t\t'330066', '660066', '660033', '330000', '331A00', '333300', '1A3300', '003300', '00331A', '003333', '001933', '000033', '190033', '330033', '33001A'];\n\n/**\n * Creates function to apply value\n */\nColorDialog.prototype.createApplyFunction = function()\n{\n\treturn mxUtils.bind(this, function(color)\n\t{\n\t\tvar graph = this.editorUi.editor.graph;\n\t\t\n\t\tgraph.getModel().beginUpdate();\n\t\ttry\n\t\t{\n\t\t\tgraph.setCellStyles(this.currentColorKey, color);\n\t\t\tthis.editorUi.fireEvent(new mxEventObject('styleChanged', 'keys', [this.currentColorKey],\n\t\t\t\t'values', [color], 'cells', graph.getSelectionCells()));\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tgraph.getModel().endUpdate();\n\t\t}\n\t});\n};\n\n/**\n * \n */\nColorDialog.recentColors = [];\n\n/**\n * Adds recent color for later use.\n */\nColorDialog.addRecentColor = function(color, max)\n{\n\tif (color != null)\n\t{\n\t\tmxUtils.remove(color, ColorDialog.recentColors);\n\t\tColorDialog.recentColors.splice(0, 0, color);\n\t\t\n\t\tif (ColorDialog.recentColors.length >= max)\n\t\t{\n\t\t\tColorDialog.recentColors.pop();\n\t\t}\n\t}\n};\n\n/**\n * Adds recent color for later use.\n */\nColorDialog.resetRecentColors = function()\n{\n\tColorDialog.recentColors = [];\n};\n\n/**\n * Constructs a new about dialog.\n */\nvar AboutDialog = function(editorUi)\n{\n\tvar div = document.createElement('div');\n\tdiv.setAttribute('align', 'center');\n\tvar h3 = document.createElement('h3');\n\tmxUtils.write(h3, mxResources.get('about') + ' GraphEditor');\n\tdiv.appendChild(h3);\n\tvar img = document.createElement('img');\n\timg.style.border = '0px';\n\timg.setAttribute('width', '176');\n\timg.setAttribute('width', '151');\n\timg.setAttribute('src', IMAGE_PATH + '/logo.png');\n\tdiv.appendChild(img);\n\tmxUtils.br(div);\n\tmxUtils.write(div, 'Powered by mxGraph ' + mxClient.VERSION);\n\tmxUtils.br(div);\n\tvar link = document.createElement('a');\n\tlink.setAttribute('href', 'http://www.jgraph.com/');\n\tlink.setAttribute('target', '_blank');\n\tmxUtils.write(link, 'www.jgraph.com');\n\tdiv.appendChild(link);\n\tmxUtils.br(div);\n\tmxUtils.br(div);\n\tvar closeBtn = mxUtils.button(mxResources.get('close'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcloseBtn.className = 'geBtn gePrimaryBtn';\n\tdiv.appendChild(closeBtn);\n\t\n\tthis.container = div;\n};\n\n/**\n * Constructs a new filename dialog.\n */\nvar FilenameDialog = function(editorUi, filename, buttonText, fn, label, validateFn, content, helpLink, closeOnBtn, cancelFn, hints)\n{\n\tcloseOnBtn = (closeOnBtn != null) ? closeOnBtn : true;\n\tvar row, td;\n\t\n\tvar table = document.createElement('table');\n\tvar tbody = document.createElement('tbody');\n\ttable.style.marginTop = '8px';\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.whiteSpace = 'nowrap';\n\ttd.style.fontSize = '10pt';\n\ttd.style.width = '120px';\n\tmxUtils.write(td, (label || mxResources.get('filename')) + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar nameInput = document.createElement('input');\n\tnameInput.setAttribute('value', filename || '');\n\tnameInput.style.marginLeft = '4px';\n\tnameInput.style.width = '180px';\n\t\n\tvar genericBtn = mxUtils.button(buttonText, function()\n\t{\n\t\tif (validateFn == null || validateFn(nameInput.value))\n\t\t{\n\t\t\tif (closeOnBtn)\n\t\t\t{\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\t\n\t\t\tfn(nameInput.value);\n\t\t}\n\t});\n\tgenericBtn.className = 'geBtn gePrimaryBtn';\n\t\n\tthis.init = function()\n\t{\n\t\tif (label == null && content != null)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tnameInput.focus();\n\t\t\n\t\tif (mxClient.IS_GC || mxClient.IS_FF || document.documentMode >= 5 || mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tnameInput.select();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t}\n\t\t\n\t\t// Installs drag and drop handler for links\n\t\tif (Graph.fileSupport)\n\t\t{\n\t\t\t// Setup the dnd listeners\n\t\t\tvar dlg = table.parentNode;\n\t\t\t\n\t\t\tif (dlg != null)\n\t\t\t{\n\t\t\t\tvar graph = editorUi.editor.graph;\n\t\t\t\tvar dropElt = null;\n\t\t\t\t\t\n\t\t\t\tmxEvent.addListener(dlg, 'dragleave', function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (dropElt != null)\n\t\t\t\t    {\n\t\t\t\t\t\tdropElt.style.backgroundColor = '';\n\t\t\t\t    \tdropElt = null;\n\t\t\t\t    }\n\t\t\t\t    \n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tmxEvent.addListener(dlg, 'dragover', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t\t// IE 10 does not implement pointer-events so it can't have a drop highlight\n\t\t\t\t\tif (dropElt == null && (!mxClient.IS_IE || document.documentMode > 10))\n\t\t\t\t\t{\n\t\t\t\t\t\tdropElt = nameInput;\n\t\t\t\t\t\tdropElt.style.backgroundColor = '#ebf2f9';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t}));\n\t\t\t\t\t\t\n\t\t\t\tmxEvent.addListener(dlg, 'drop', mxUtils.bind(this, function(evt)\n\t\t\t\t{\n\t\t\t\t    if (dropElt != null)\n\t\t\t\t    {\n\t\t\t\t\t\tdropElt.style.backgroundColor = '';\n\t\t\t\t    \tdropElt = null;\n\t\t\t\t    }\n\t\n\t\t\t\t    if (mxUtils.indexOf(evt.dataTransfer.types, 'text/uri-list') >= 0)\n\t\t\t\t    {\n\t\t\t\t    \tnameInput.value = decodeURIComponent(evt.dataTransfer.getData('text/uri-list'));\n\t\t\t\t    \tgenericBtn.click();\n\t\t\t\t    }\n\t\n\t\t\t\t    evt.stopPropagation();\n\t\t\t\t    evt.preventDefault();\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t};\n\n\ttd = document.createElement('td');\n\ttd.appendChild(nameInput);\n\trow.appendChild(td);\n\t\n\tif (label != null || content == null)\n\t{\n\t\ttbody.appendChild(row);\n\t\t\n\t\tif (hints != null)\n\t\t{\n\t\t\ttd.appendChild(FilenameDialog.createTypeHint(editorUi, nameInput, hints));\n\t\t}\n\t}\n\t\n\tif (content != null)\n\t{\n\t\trow = document.createElement('tr');\n\t\ttd = document.createElement('td');\n\t\ttd.colSpan = 2;\n\t\ttd.appendChild(content);\n\t\trow.appendChild(td);\n\t\ttbody.appendChild(row);\n\t}\n\t\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\ttd.colSpan = 2;\n\ttd.style.paddingTop = '20px';\n\ttd.style.whiteSpace = 'nowrap';\n\ttd.setAttribute('align', 'right');\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t\t\n\t\tif (cancelFn != null)\n\t\t{\n\t\t\tcancelFn();\n\t\t}\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\t\n\tif (helpLink != null)\n\t{\n\t\tvar helpBtn = mxUtils.button(mxResources.get('help'), function()\n\t\t{\n\t\t\teditorUi.editor.graph.openLink(helpLink);\n\t\t});\n\t\t\n\t\thelpBtn.className = 'geBtn';\t\n\t\ttd.appendChild(helpBtn);\n\t}\n\n\tmxEvent.addListener(nameInput, 'keypress', function(e)\n\t{\n\t\tif (e.keyCode == 13)\n\t\t{\n\t\t\tgenericBtn.click();\n\t\t}\n\t});\n\t\n\ttd.appendChild(genericBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\t\n\tthis.container = table;\n};\n\n/**\n * \n */\nFilenameDialog.filenameHelpLink = null;\n\n/**\n * \n */\nFilenameDialog.createTypeHint = function(ui, nameInput, hints)\n{\n\tvar hint = document.createElement('img');\n\thint.style.cssText = 'vertical-align:top;height:16px;width:16px;margin-left:4px;background-repeat:no-repeat;background-position:center bottom;cursor:pointer;';\n\tmxUtils.setOpacity(hint, 70);\n\t\n\tvar nameChanged = function()\n\t{\n\t\thint.setAttribute('src', Editor.helpImage);\n\t\thint.setAttribute('title', mxResources.get('help'));\n\t\t\n\t\tfor (var i = 0; i < hints.length; i++)\n\t\t{\n\t\t\tif (hints[i].ext.length > 0 &&\n\t\t\t\tnameInput.value.substring(nameInput.value.length -\n\t\t\t\t\t\thints[i].ext.length - 1) == '.' + hints[i].ext)\n\t\t\t{\n\t\t\t\thint.setAttribute('src',  mxClient.imageBasePath + '/warning.png');\n\t\t\t\thint.setAttribute('title', mxResources.get(hints[i].title));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t};\n\t\n\tmxEvent.addListener(nameInput, 'keyup', nameChanged);\n\tmxEvent.addListener(nameInput, 'change', nameChanged);\n\tmxEvent.addListener(hint, 'click', function(evt)\n\t{\n\t\tvar title = hint.getAttribute('title');\n\t\t\n\t\tif (hint.getAttribute('src') == Editor.helpImage)\n\t\t{\n\t\t\tui.editor.graph.openLink(FilenameDialog.filenameHelpLink);\n\t\t}\n\t\telse if (title != '')\n\t\t{\n\t\t\tui.showError(null, title, mxResources.get('help'), function()\n\t\t\t{\n\t\t\t\tui.editor.graph.openLink(FilenameDialog.filenameHelpLink);\n\t\t\t}, null, mxResources.get('ok'), null, null, null, 340, 90);\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tnameChanged();\n\t\n\treturn hint;\n};\n\n/**\n * Constructs a new textarea dialog.\n */\nvar TextareaDialog = function(editorUi, title, url, fn, cancelFn, cancelTitle, w, h, addButtons, noHide, noWrap, applyTitle)\n{\n\tw = (w != null) ? w : 300;\n\th = (h != null) ? h : 120;\n\tnoHide = (noHide != null) ? noHide : false;\n\tvar row, td;\n\t\n\tvar table = document.createElement('table');\n\tvar tbody = document.createElement('tbody');\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\ttd.style.width = '100px';\n\tmxUtils.write(td, title);\n\t\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\n\tvar nameInput = document.createElement('textarea');\n\t\n\tif (noWrap)\n\t{\n\t\tnameInput.setAttribute('wrap', 'off');\n\t}\n\t\n\tnameInput.setAttribute('spellcheck', 'false');\n\tnameInput.setAttribute('autocorrect', 'off');\n\tnameInput.setAttribute('autocomplete', 'off');\n\tnameInput.setAttribute('autocapitalize', 'off');\n\t\n\tmxUtils.write(nameInput, url || '');\n\tnameInput.style.resize = 'none';\n\tnameInput.style.width = w + 'px';\n\tnameInput.style.height = h + 'px';\n\t\n\tthis.textarea = nameInput;\n\n\tthis.init = function()\n\t{\n\t\tnameInput.focus();\n\t\tnameInput.scrollTop = 0;\n\t};\n\n\ttd.appendChild(nameInput);\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\ttd.style.paddingTop = '14px';\n\ttd.style.whiteSpace = 'nowrap';\n\ttd.setAttribute('align', 'right');\n\t\n\tvar cancelBtn = mxUtils.button(cancelTitle || mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t\t\n\t\tif (cancelFn != null)\n\t\t{\n\t\t\tcancelFn();\n\t\t}\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\t\n\tif (addButtons != null)\n\t{\n\t\taddButtons(td, nameInput);\n\t}\n\t\n\tif (fn != null)\n\t{\n\t\tvar genericBtn = mxUtils.button(applyTitle || mxResources.get('apply'), function()\n\t\t{\n\t\t\tif (!noHide)\n\t\t\t{\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\t\n\t\t\tfn(nameInput.value);\n\t\t});\n\t\t\n\t\tgenericBtn.className = 'geBtn gePrimaryBtn';\t\n\t\ttd.appendChild(genericBtn);\n\t}\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t}\n\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\tthis.container = table;\n};\n\n/**\n * Constructs a new edit file dialog.\n */\nvar EditDiagramDialog = function(editorUi)\n{\n\tvar div = document.createElement('div');\n\tdiv.style.textAlign = 'right';\n\tvar textarea = document.createElement('textarea');\n\ttextarea.setAttribute('wrap', 'off');\n\ttextarea.setAttribute('spellcheck', 'false');\n\ttextarea.setAttribute('autocorrect', 'off');\n\ttextarea.setAttribute('autocomplete', 'off');\n\ttextarea.setAttribute('autocapitalize', 'off');\n\ttextarea.style.overflow = 'auto';\n\ttextarea.style.resize = 'none';\n\ttextarea.style.width = '600px';\n\ttextarea.style.height = '360px';\n\ttextarea.style.marginBottom = '16px';\n\t\n\ttextarea.value = mxUtils.getPrettyXml(editorUi.editor.getGraphXml());\n\tdiv.appendChild(textarea);\n\t\n\tthis.init = function()\n\t{\n\t\ttextarea.focus();\n\t};\n\t\n\t// Enables dropping files\n\tif (Graph.fileSupport)\n\t{\n\t\tfunction handleDrop(evt)\n\t\t{\n\t\t    evt.stopPropagation();\n\t\t    evt.preventDefault();\n\t\t    \n\t\t    if (evt.dataTransfer.files.length > 0)\n\t\t    {\n    \t\t\tvar file = evt.dataTransfer.files[0];\n    \t\t\tvar reader = new FileReader();\n\t\t\t\t\n\t\t\t\treader.onload = function(e)\n\t\t\t\t{\n\t\t\t\t\ttextarea.value = e.target.result;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\treader.readAsText(file);\n    \t\t}\n\t\t    else\n\t\t    {\n\t\t    \ttextarea.value = editorUi.extractGraphModelFromEvent(evt);\n\t\t    }\n\t\t};\n\t\t\n\t\tfunction handleDragOver(evt)\n\t\t{\n\t\t\tevt.stopPropagation();\n\t\t\tevt.preventDefault();\n\t\t};\n\n\t\t// Setup the dnd listeners.\n\t\ttextarea.addEventListener('dragover', handleDragOver, false);\n\t\ttextarea.addEventListener('drop', handleDrop, false);\n\t}\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\tdiv.appendChild(cancelBtn);\n\t}\n\t\n\tvar select = document.createElement('select');\n\tselect.style.width = '180px';\n\tselect.className = 'geBtn';\n\n\tif (editorUi.editor.graph.isEnabled())\n\t{\n\t\tvar replaceOption = document.createElement('option');\n\t\treplaceOption.setAttribute('value', 'replace');\n\t\tmxUtils.write(replaceOption, mxResources.get('replaceExistingDrawing'));\n\t\tselect.appendChild(replaceOption);\n\t}\n\n\tvar newOption = document.createElement('option');\n\tnewOption.setAttribute('value', 'new');\n\tmxUtils.write(newOption, mxResources.get('openInNewWindow'));\n\t\n\tif (EditDiagramDialog.showNewWindowOption)\n\t{\n\t\tselect.appendChild(newOption);\n\t}\n\n\tif (editorUi.editor.graph.isEnabled())\n\t{\n\t\tvar importOption = document.createElement('option');\n\t\timportOption.setAttribute('value', 'import');\n\t\tmxUtils.write(importOption, mxResources.get('addToExistingDrawing'));\n\t\tselect.appendChild(importOption);\n\t}\n\n\tdiv.appendChild(select);\n\n\tvar okBtn = mxUtils.button(mxResources.get('ok'), function()\n\t{\n\t\t// Removes all illegal control characters before parsing\n\t\tvar data = Graph.zapGremlins(mxUtils.trim(textarea.value));\n\t\tvar error = null;\n\t\t\n\t\tif (select.value == 'new')\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\teditorUi.editor.editAsNew(data);\n\t\t}\n\t\telse if (select.value == 'replace')\n\t\t{\n\t\t\teditorUi.editor.graph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\teditorUi.editor.setGraphXml(mxUtils.parseXml(data).documentElement);\n\t\t\t\t// LATER: Why is hideDialog between begin-/endUpdate faster?\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\teditorUi.editor.graph.model.endUpdate();\t\t\t\t\n\t\t\t}\n\t\t}\n\t\telse if (select.value == 'import')\n\t\t{\n\t\t\teditorUi.editor.graph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar doc = mxUtils.parseXml(data);\n\t\t\t\tvar model = new mxGraphModel();\n\t\t\t\tvar codec = new mxCodec(doc);\n\t\t\t\tcodec.decode(doc.documentElement, model);\n\t\t\t\t\n\t\t\t\tvar children = model.getChildren(model.getChildAt(model.getRoot(), 0));\n\t\t\t\teditorUi.editor.graph.setSelectionCells(editorUi.editor.graph.importCells(children));\n\t\t\t\t\n\t\t\t\t// LATER: Why is hideDialog between begin-/endUpdate faster?\n\t\t\t\teditorUi.hideDialog();\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\terror = e;\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\teditorUi.editor.graph.model.endUpdate();\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (error != null)\n\t\t{\n\t\t\tmxUtils.alert(error.message);\n\t\t}\n\t});\n\tokBtn.className = 'geBtn gePrimaryBtn';\n\tdiv.appendChild(okBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\tdiv.appendChild(cancelBtn);\n\t}\n\n\tthis.container = div;\n};\n\n/**\n * \n */\nEditDiagramDialog.showNewWindowOption = true;\n\n/**\n * Constructs a new export dialog.\n */\nvar ExportDialog = function(editorUi)\n{\n\tvar graph = editorUi.editor.graph;\n\tvar bounds = graph.getGraphBounds();\n\tvar scale = graph.view.scale;\n\t\n\tvar width = Math.ceil(bounds.width / scale);\n\tvar height = Math.ceil(bounds.height / scale);\n\n\tvar row, td;\n\t\n\tvar table = document.createElement('table');\n\tvar tbody = document.createElement('tbody');\n\ttable.setAttribute('cellpadding', (mxClient.IS_SF) ? '0' : '2');\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\ttd.style.width = '100px';\n\tmxUtils.write(td, mxResources.get('filename') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar nameInput = document.createElement('input');\n\tnameInput.setAttribute('value', editorUi.editor.getOrCreateFilename());\n\tnameInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(nameInput);\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\t\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('format') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar imageFormatSelect = document.createElement('select');\n\timageFormatSelect.style.width = '180px';\n\n\tvar pngOption = document.createElement('option');\n\tpngOption.setAttribute('value', 'png');\n\tmxUtils.write(pngOption, mxResources.get('formatPng'));\n\timageFormatSelect.appendChild(pngOption);\n\n\tvar gifOption = document.createElement('option');\n\t\n\tif (ExportDialog.showGifOption)\n\t{\n\t\tgifOption.setAttribute('value', 'gif');\n\t\tmxUtils.write(gifOption, mxResources.get('formatGif'));\n\t\timageFormatSelect.appendChild(gifOption);\n\t}\n\t\n\tvar jpgOption = document.createElement('option');\n\tjpgOption.setAttribute('value', 'jpg');\n\tmxUtils.write(jpgOption, mxResources.get('formatJpg'));\n\timageFormatSelect.appendChild(jpgOption);\n\n\tvar pdfOption = document.createElement('option');\n\tpdfOption.setAttribute('value', 'pdf');\n\tmxUtils.write(pdfOption, mxResources.get('formatPdf'));\n\timageFormatSelect.appendChild(pdfOption);\n\t\n\tvar svgOption = document.createElement('option');\n\tsvgOption.setAttribute('value', 'svg');\n\tmxUtils.write(svgOption, mxResources.get('formatSvg'));\n\timageFormatSelect.appendChild(svgOption);\n\t\n\tif (ExportDialog.showXmlOption)\n\t{\n\t\tvar xmlOption = document.createElement('option');\n\t\txmlOption.setAttribute('value', 'xml');\n\t\tmxUtils.write(xmlOption, mxResources.get('formatXml'));\n\t\timageFormatSelect.appendChild(xmlOption);\n\t}\n\n\ttd = document.createElement('td');\n\ttd.appendChild(imageFormatSelect);\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('zoom') + ' (%):');\n\t\n\trow.appendChild(td);\n\t\n\tvar zoomInput = document.createElement('input');\n\tzoomInput.setAttribute('type', 'number');\n\tzoomInput.setAttribute('value', '100');\n\tzoomInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(zoomInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\n\trow = document.createElement('tr');\n\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('width') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar widthInput = document.createElement('input');\n\twidthInput.setAttribute('value', width);\n\twidthInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(widthInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('height') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar heightInput = document.createElement('input');\n\theightInput.setAttribute('value', height);\n\theightInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(heightInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\t\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('background') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar transparentCheckbox = document.createElement('input');\n\ttransparentCheckbox.setAttribute('type', 'checkbox');\n\ttransparentCheckbox.checked = graph.background == null || graph.background == mxConstants.NONE;\n\n\ttd = document.createElement('td');\n\ttd.appendChild(transparentCheckbox);\n\tmxUtils.write(td, mxResources.get('transparent'));\n\t\n\trow.appendChild(td);\n\t\n\ttbody.appendChild(row);\n\t\n\trow = document.createElement('tr');\n\n\ttd = document.createElement('td');\n\ttd.style.fontSize = '10pt';\n\tmxUtils.write(td, mxResources.get('borderWidth') + ':');\n\t\n\trow.appendChild(td);\n\t\n\tvar borderInput = document.createElement('input');\n\tborderInput.setAttribute('type', 'number');\n\tborderInput.setAttribute('value', ExportDialog.lastBorderValue);\n\tborderInput.style.width = '180px';\n\n\ttd = document.createElement('td');\n\ttd.appendChild(borderInput);\n\trow.appendChild(td);\n\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\t\n\t// Handles changes in the export format\n\tfunction formatChanged()\n\t{\n\t\tvar name = nameInput.value;\n\t\tvar dot = name.lastIndexOf('.');\n\t\t\n\t\tif (dot > 0)\n\t\t{\n\t\t\tnameInput.value = name.substring(0, dot + 1) + imageFormatSelect.value;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnameInput.value = name + '.' + imageFormatSelect.value;\n\t\t}\n\t\t\n\t\tif (imageFormatSelect.value === 'xml')\n\t\t{\n\t\t\tzoomInput.setAttribute('disabled', 'true');\n\t\t\twidthInput.setAttribute('disabled', 'true');\n\t\t\theightInput.setAttribute('disabled', 'true');\n\t\t\tborderInput.setAttribute('disabled', 'true');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.removeAttribute('disabled');\n\t\t\twidthInput.removeAttribute('disabled');\n\t\t\theightInput.removeAttribute('disabled');\n\t\t\tborderInput.removeAttribute('disabled');\n\t\t}\n\t\t\n\t\tif (imageFormatSelect.value === 'png' || imageFormatSelect.value === 'svg')\n\t\t{\n\t\t\ttransparentCheckbox.removeAttribute('disabled');\n\t\t}\n\t\telse\n\t\t{\n\t\t\ttransparentCheckbox.setAttribute('disabled', 'disabled');\n\t\t}\n\t};\n\t\n\tmxEvent.addListener(imageFormatSelect, 'change', formatChanged);\n\tformatChanged();\n\n\tfunction checkValues()\n\t{\n\t\tif (widthInput.value * heightInput.value > MAX_AREA || widthInput.value <= 0)\n\t\t{\n\t\t\twidthInput.style.backgroundColor = 'red';\n\t\t}\n\t\telse\n\t\t{\n\t\t\twidthInput.style.backgroundColor = '';\n\t\t}\n\t\t\n\t\tif (widthInput.value * heightInput.value > MAX_AREA || heightInput.value <= 0)\n\t\t{\n\t\t\theightInput.style.backgroundColor = 'red';\n\t\t}\n\t\telse\n\t\t{\n\t\t\theightInput.style.backgroundColor = '';\n\t\t}\n\t};\n\n\tmxEvent.addListener(zoomInput, 'change', function()\n\t{\n\t\tvar s = Math.max(0, parseFloat(zoomInput.value) || 100) / 100;\n\t\tzoomInput.value = parseFloat((s * 100).toFixed(2));\n\t\t\n\t\tif (width > 0)\n\t\t{\n\t\t\twidthInput.value = Math.floor(width * s);\n\t\t\theightInput.value = Math.floor(height * s);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.value = '100';\n\t\t\twidthInput.value = width;\n\t\t\theightInput.value = height;\n\t\t}\n\t\t\n\t\tcheckValues();\n\t});\n\n\tmxEvent.addListener(widthInput, 'change', function()\n\t{\n\t\tvar s = parseInt(widthInput.value) / width;\n\t\t\n\t\tif (s > 0)\n\t\t{\n\t\t\tzoomInput.value = parseFloat((s * 100).toFixed(2));\n\t\t\theightInput.value = Math.floor(height * s);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.value = '100';\n\t\t\twidthInput.value = width;\n\t\t\theightInput.value = height;\n\t\t}\n\t\t\n\t\tcheckValues();\n\t});\n\n\tmxEvent.addListener(heightInput, 'change', function()\n\t{\n\t\tvar s = parseInt(heightInput.value) / height;\n\t\t\n\t\tif (s > 0)\n\t\t{\n\t\t\tzoomInput.value = parseFloat((s * 100).toFixed(2));\n\t\t\twidthInput.value = Math.floor(width * s);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tzoomInput.value = '100';\n\t\t\twidthInput.value = width;\n\t\t\theightInput.value = height;\n\t\t}\n\t\t\n\t\tcheckValues();\n\t});\n\t\n\trow = document.createElement('tr');\n\ttd = document.createElement('td');\n\ttd.setAttribute('align', 'right');\n\ttd.style.paddingTop = '22px';\n\ttd.colSpan = 2;\n\t\n\tvar saveBtn = mxUtils.button(mxResources.get('export'), mxUtils.bind(this, function()\n\t{\n\t\tif (parseInt(zoomInput.value) <= 0)\n\t\t{\n\t\t\tmxUtils.alert(mxResources.get('drawingEmpty'));\n\t\t}\n\t\telse\n\t\t{\n\t    \tvar name = nameInput.value;\n\t\t\tvar format = imageFormatSelect.value;\n\t    \tvar s = Math.max(0, parseFloat(zoomInput.value) || 100) / 100;\n\t\t\tvar b = Math.max(0, parseInt(borderInput.value));\n\t\t\tvar bg = graph.background;\n\t\t\t\n\t\t\tif ((format == 'svg' || format == 'png') && transparentCheckbox.checked)\n\t\t\t{\n\t\t\t\tbg = null;\n\t\t\t}\n\t\t\telse if (bg == null || bg == mxConstants.NONE)\n\t\t\t{\n\t\t\t\tbg = '#ffffff';\n\t\t\t}\n\t\t\t\n\t\t\tExportDialog.lastBorderValue = b;\n\t\t\tExportDialog.exportFile(editorUi, name, format, bg, s, b);\n\t\t}\n\t}));\n\tsaveBtn.className = 'geBtn gePrimaryBtn';\n\t\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\ttd.appendChild(cancelBtn);\n\t\ttd.appendChild(saveBtn);\n\t}\n\telse\n\t{\n\t\ttd.appendChild(saveBtn);\n\t\ttd.appendChild(cancelBtn);\n\t}\n\n\trow.appendChild(td);\n\ttbody.appendChild(row);\n\ttable.appendChild(tbody);\n\tthis.container = table;\n};\n\n/**\n * Remembers last value for border.\n */\nExportDialog.lastBorderValue = 0;\n\n/**\n * Global switches for the export dialog.\n */\nExportDialog.showGifOption = true;\n\n/**\n * Global switches for the export dialog.\n */\nExportDialog.showXmlOption = true;\n\n/**\n * Hook for getting the export format. Returns null for the default\n * intermediate XML export format or a function that returns the\n * parameter and value to be used in the request in the form\n * key=value, where value should be URL encoded.\n */\nExportDialog.exportFile = function(editorUi, name, format, bg, s, b)\n{\n\tvar graph = editorUi.editor.graph;\n\t\n\tif (format == 'xml')\n\t{\n    \tExportDialog.saveLocalFile(editorUi, mxUtils.getXml(editorUi.editor.getGraphXml()), name, format);\n\t}\n    else if (format == 'svg')\n\t{\n\t\tExportDialog.saveLocalFile(editorUi, mxUtils.getXml(graph.getSvg(bg, s, b)), name, format);\n\t}\n    else\n    {\n    \tvar bounds = graph.getGraphBounds();\n    \t\n\t\t// New image export\n\t\tvar xmlDoc = mxUtils.createXmlDocument();\n\t\tvar root = xmlDoc.createElement('output');\n\t\txmlDoc.appendChild(root);\n\t\t\n\t    // Renders graph. Offset will be multiplied with state's scale when painting state.\n\t\tvar xmlCanvas = new mxXmlCanvas2D(root);\n\t\txmlCanvas.translate(Math.floor((b / s - bounds.x) / graph.view.scale),\n\t\t\tMath.floor((b / s - bounds.y) / graph.view.scale));\n\t\txmlCanvas.scale(s / graph.view.scale);\n\t\t\n\t\tvar imgExport = new mxImageExport()\n\t    imgExport.drawState(graph.getView().getState(graph.model.root), xmlCanvas);\n\t    \n\t\t// Puts request data together\n\t\tvar param = 'xml=' + encodeURIComponent(mxUtils.getXml(root));\n\t\tvar w = Math.ceil(bounds.width * s / graph.view.scale + 2 * b);\n\t\tvar h = Math.ceil(bounds.height * s / graph.view.scale + 2 * b);\n\t\t\n\t\t// Requests image if request is valid\n\t\tif (param.length <= MAX_REQUEST_SIZE && w * h < MAX_AREA)\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\tvar req = new mxXmlRequest(EXPORT_URL, 'format=' + format +\n\t\t\t\t'&filename=' + encodeURIComponent(name) +\n\t\t\t\t'&bg=' + ((bg != null) ? bg : 'none') +\n\t\t\t\t'&w=' + w + '&h=' + h + '&' + param);\n\t\t\treq.simulate(document, '_blank');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.alert(mxResources.get('drawingTooLarge'));\n\t\t}\n\t}\n};\n\n/**\n * Hook for getting the export format. Returns null for the default\n * intermediate XML export format or a function that returns the\n * parameter and value to be used in the request in the form\n * key=value, where value should be URL encoded.\n */\nExportDialog.saveLocalFile = function(editorUi, data, filename, format)\n{\n\tif (data.length < MAX_REQUEST_SIZE)\n\t{\n\t\teditorUi.hideDialog();\n\t\tvar req = new mxXmlRequest(SAVE_URL, 'xml=' + encodeURIComponent(data) + '&filename=' +\n\t\t\tencodeURIComponent(filename) + '&format=' + format);\n\t\treq.simulate(document, '_blank');\n\t}\n\telse\n\t{\n\t\tmxUtils.alert(mxResources.get('drawingTooLarge'));\n\t\tmxUtils.popup(xml);\n\t}\n};\n\n/**\n * Constructs a new metadata dialog.\n */\nvar EditDataDialog = function(ui, cell)\n{\n\tvar div = document.createElement('div');\n\tvar graph = ui.editor.graph;\n\t\n\tvar value = graph.getModel().getValue(cell);\n\t\n\t// Converts the value to an XML node\n\tif (!mxUtils.isNode(value))\n\t{\n\t\tvar doc = mxUtils.createXmlDocument();\n\t\tvar obj = doc.createElement('object');\n\t\tobj.setAttribute('label', value || '');\n\t\tvalue = obj;\n\t}\n\n\t// Creates the dialog contents\n\tvar form = new mxForm('properties');\n\tform.table.style.width = '100%';\n\n\tvar attrs = value.attributes;\n\tvar names = [];\n\tvar texts = [];\n\tvar count = 0;\n\n\tvar id = (EditDataDialog.getDisplayIdForCell != null) ?\n\t\tEditDataDialog.getDisplayIdForCell(ui, cell) : null;\n\t\n\t// FIXME: Fix remove button for quirks mode\n\tvar addRemoveButton = function(text, name)\n\t{\n\t\tvar wrapper = document.createElement('div');\n\t\twrapper.style.position = 'relative';\n\t\twrapper.style.paddingRight = '20px';\n\t\twrapper.style.boxSizing = 'border-box';\n\t\twrapper.style.width = '100%';\n\t\t\n\t\tvar removeAttr = document.createElement('a');\n\t\tvar img = mxUtils.createImage(Dialog.prototype.closeImage);\n\t\timg.style.height = '9px';\n\t\timg.style.fontSize = '9px';\n\t\timg.style.marginBottom = (mxClient.IS_IE11) ? '-1px' : '5px';\n\t\t\n\t\tremoveAttr.className = 'geButton';\n\t\tremoveAttr.setAttribute('title', mxResources.get('delete'));\n\t\tremoveAttr.style.position = 'absolute';\n\t\tremoveAttr.style.top = '4px';\n\t\tremoveAttr.style.right = '0px';\n\t\tremoveAttr.style.margin = '0px';\n\t\tremoveAttr.style.width = '9px';\n\t\tremoveAttr.style.height = '9px';\n\t\tremoveAttr.style.cursor = 'pointer';\n\t\tremoveAttr.appendChild(img);\n\t\t\n\t\tvar removeAttrFn = (function(name)\n\t\t{\n\t\t\treturn function()\n\t\t\t{\n\t\t\t\tvar count = 0;\n\t\t\t\t\n\t\t\t\tfor (var j = 0; j < names.length; j++)\n\t\t\t\t{\n\t\t\t\t\tif (names[j] == name)\n\t\t\t\t\t{\n\t\t\t\t\t\ttexts[j] = null;\n\t\t\t\t\t\tform.table.deleteRow(count + ((id != null) ? 1 : 0));\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (texts[j] != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t})(name);\n\t\t\n\t\tmxEvent.addListener(removeAttr, 'click', removeAttrFn);\n\t\t\n\t\tvar parent = text.parentNode;\n\t\twrapper.appendChild(text);\n\t\twrapper.appendChild(removeAttr);\n\t\tparent.appendChild(wrapper);\n\t};\n\t\n\tvar addTextArea = function(index, name, value)\n\t{\n\t\tnames[index] = name;\n\t\ttexts[index] = form.addTextarea(names[count] + ':', value, 2);\n\t\ttexts[index].style.width = '100%';\n\t\t\n\t\taddRemoveButton(texts[index], name);\n\t};\n\t\n\tvar temp = [];\n\tvar isLayer = graph.getModel().getParent(cell) == graph.getModel().getRoot();\n\n\tfor (var i = 0; i < attrs.length; i++)\n\t{\n\t\tif ((isLayer || attrs[i].nodeName != 'label') && attrs[i].nodeName != 'placeholders')\n\t\t{\n\t\t\ttemp.push({name: attrs[i].nodeName, value: attrs[i].nodeValue});\n\t\t}\n\t}\n\t\n\t// Sorts by name\n\ttemp.sort(function(a, b)\n\t{\n\t    if (a.name < b.name)\n\t    {\n\t    \treturn -1;\n\t    }\n\t    else if (a.name > b.name)\n\t    {\n\t    \treturn 1;\n\t    }\n\t    else\n\t    {\n\t    \treturn 0;\n\t    }\n\t});\n\n\tif (id != null)\n\t{\t\n\t\tvar text = document.createElement('input');\n\t\ttext.style.width = '420px';\n\t\ttext.style.textAlign = 'center';\n\t\ttext.setAttribute('type', 'text');\n\t\ttext.setAttribute('readOnly', 'true');\n\t\ttext.setAttribute('value', id);\n\t\t\n\t\tform.addField(mxResources.get('id') + ':', text);\n\t}\n\t\n\tfor (var i = 0; i < temp.length; i++)\n\t{\n\t\taddTextArea(count, temp[i].name, temp[i].value);\n\t\tcount++;\n\t}\n\t\n\tvar top = document.createElement('div');\n\ttop.style.cssText = 'position:absolute;left:30px;right:30px;overflow-y:auto;top:30px;bottom:80px;';\n\ttop.appendChild(form.table);\n\n\tvar newProp = document.createElement('div');\n\tnewProp.style.whiteSpace = 'nowrap';\n\tnewProp.style.marginTop = '6px';\n\n\tvar nameInput = document.createElement('input');\n\tnameInput.setAttribute('placeholder', mxResources.get('enterPropertyName'));\n\tnameInput.setAttribute('type', 'text');\n\tnameInput.setAttribute('size', (mxClient.IS_IE || mxClient.IS_IE11) ? '36' : '40');\n\tnameInput.style.marginLeft = '2px';\n\n\tnewProp.appendChild(nameInput);\n\ttop.appendChild(newProp);\n\tdiv.appendChild(top);\n\t\n\tvar addBtn = mxUtils.button(mxResources.get('addProperty'), function()\n\t{\n\t\tvar name = nameInput.value;\n\n\t\t// Avoid ':' in attribute names which seems to be valid in Chrome\n\t\tif (name.length > 0 && name != 'label' && name != 'placeholders' && name.indexOf(':') < 0)\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar idx = mxUtils.indexOf(names, name);\n\t\t\t\t\n\t\t\t\tif (idx >= 0 && texts[idx] != null)\n\t\t\t\t{\n\t\t\t\t\ttexts[idx].focus();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// Checks if the name is valid\n\t\t\t\t\tvar clone = value.cloneNode(false);\n\t\t\t\t\tclone.setAttribute(name, '');\n\t\t\t\t\t\n\t\t\t\t\tif (idx >= 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tnames.splice(idx, 1);\n\t\t\t\t\t\ttexts.splice(idx, 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tnames.push(name);\n\t\t\t\t\tvar text = form.addTextarea(name + ':', '', 2);\n\t\t\t\t\ttext.style.width = '100%';\n\t\t\t\t\ttexts.push(text);\n\t\t\t\t\taddRemoveButton(text, name);\n\n\t\t\t\t\ttext.focus();\n\t\t\t\t}\n\n\t\t\t\tnameInput.value = '';\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tmxUtils.alert(e);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmxUtils.alert(mxResources.get('invalidName'));\n\t\t}\n\t});\n\t\n\tthis.init = function()\n\t{\n\t\tif (texts.length > 0)\n\t\t{\n\t\t\ttexts[0].focus();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnameInput.focus();\n\t\t}\n\t};\n\t\n\taddBtn.setAttribute('disabled', 'disabled');\n\taddBtn.style.marginLeft = '10px';\n\taddBtn.style.width = '144px';\n\tnewProp.appendChild(addBtn);\n\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\tui.hideDialog.apply(ui, arguments);\n\t});\n\t\n\tcancelBtn.className = 'geBtn';\n\t\n\tvar applyBtn = mxUtils.button(mxResources.get('apply'), function()\n\t{\n\t\ttry\n\t\t{\n\t\t\tui.hideDialog.apply(ui, arguments);\n\t\t\t\n\t\t\t// Clones and updates the value\n\t\t\tvalue = value.cloneNode(true);\n\t\t\tvar removeLabel = false;\n\t\t\t\n\t\t\tfor (var i = 0; i < names.length; i++)\n\t\t\t{\n\t\t\t\tif (texts[i] == null)\n\t\t\t\t{\n\t\t\t\t\tvalue.removeAttribute(names[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.setAttribute(names[i], texts[i].value);\n\t\t\t\t\tremoveLabel = removeLabel || (names[i] == 'placeholder' &&\n\t\t\t\t\t\tvalue.getAttribute('placeholders') == '1');\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Removes label if placeholder is assigned\n\t\t\tif (removeLabel)\n\t\t\t{\n\t\t\t\tvalue.removeAttribute('label');\n\t\t\t}\n\t\t\t\n\t\t\t// Updates the value of the cell (undoable)\n\t\t\tgraph.getModel().setValue(cell, value);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tmxUtils.alert(e);\n\t\t}\n\t});\n\tapplyBtn.className = 'geBtn gePrimaryBtn';\n\t\n\tfunction updateAddBtn()\n\t{\n\t\tif (nameInput.value.length > 0)\n\t\t{\n\t\t\taddBtn.removeAttribute('disabled');\n\t\t}\n\t\telse\n\t\t{\n\t\t\taddBtn.setAttribute('disabled', 'disabled');\n\t\t}\n\t};\n\n\tmxEvent.addListener(nameInput, 'keyup', updateAddBtn);\n\t\n\t// Catches all changes that don't fire a keyup (such as paste via mouse)\n\tmxEvent.addListener(nameInput, 'change', updateAddBtn);\n\t\n\tvar buttons = document.createElement('div');\n\tbuttons.style.cssText = 'position:absolute;left:30px;right:30px;text-align:right;bottom:30px;height:40px;'\n\t\n\tif (ui.editor.graph.getModel().isVertex(cell) || ui.editor.graph.getModel().isEdge(cell))\n\t{\n\t\tvar replace = document.createElement('span');\n\t\treplace.style.marginRight = '10px';\n\t\tvar input = document.createElement('input');\n\t\tinput.setAttribute('type', 'checkbox');\n\t\tinput.style.marginRight = '6px';\n\t\t\n\t\tif (value.getAttribute('placeholders') == '1')\n\t\t{\n\t\t\tinput.setAttribute('checked', 'checked');\n\t\t\tinput.defaultChecked = true;\n\t\t}\n\t\n\t\tmxEvent.addListener(input, 'click', function()\n\t\t{\n\t\t\tif (value.getAttribute('placeholders') == '1')\n\t\t\t{\n\t\t\t\tvalue.removeAttribute('placeholders');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvalue.setAttribute('placeholders', '1');\n\t\t\t}\n\t\t});\n\t\t\n\t\treplace.appendChild(input);\n\t\tmxUtils.write(replace, mxResources.get('placeholders'));\n\t\t\n\t\tif (EditDataDialog.placeholderHelpLink != null)\n\t\t{\n\t\t\tvar link = document.createElement('a');\n\t\t\tlink.setAttribute('href', EditDataDialog.placeholderHelpLink);\n\t\t\tlink.setAttribute('title', mxResources.get('help'));\n\t\t\tlink.setAttribute('target', '_blank');\n\t\t\tlink.style.marginLeft = '8px';\n\t\t\tlink.style.cursor = 'help';\n\t\t\t\n\t\t\tvar icon = document.createElement('img');\n\t\t\tmxUtils.setOpacity(icon, 50);\n\t\t\ticon.style.height = '16px';\n\t\t\ticon.style.width = '16px';\n\t\t\ticon.setAttribute('border', '0');\n\t\t\ticon.setAttribute('valign', 'middle');\n\t\t\ticon.style.marginTop = (mxClient.IS_IE11) ? '0px' : '-4px';\n\t\t\ticon.setAttribute('src', Editor.helpImage);\n\t\t\tlink.appendChild(icon);\n\t\t\t\n\t\t\treplace.appendChild(link);\n\t\t}\n\t\t\n\t\tbuttons.appendChild(replace);\n\t}\n\t\n\tif (ui.editor.cancelFirst)\n\t{\n\t\tbuttons.appendChild(cancelBtn);\n\t\tbuttons.appendChild(applyBtn);\n\t}\n\telse\n\t{\n\t\tbuttons.appendChild(applyBtn);\n\t\tbuttons.appendChild(cancelBtn);\n\t}\n\n\tdiv.appendChild(buttons);\n\tthis.container = div;\n};\n\n/**\n * Optional help link.\n */\nEditDataDialog.getDisplayIdForCell = function(ui, cell)\n{\n\tvar id = null;\n\t\n\tif (ui.editor.graph.getModel().getParent(cell) != null)\n\t{\n\t\tid = cell.getId();\n\t}\n\t\n\treturn id;\n};\n\n/**\n * Optional help link.\n */\nEditDataDialog.placeholderHelpLink = null;\n\n/**\n * Constructs a new link dialog.\n */\nvar LinkDialog = function(editorUi, initialValue, btnLabel, fn)\n{\n\tvar div = document.createElement('div');\n\tmxUtils.write(div, mxResources.get('editLink') + ':');\n\t\n\tvar inner = document.createElement('div');\n\tinner.className = 'geTitle';\n\tinner.style.backgroundColor = 'transparent';\n\tinner.style.borderColor = 'transparent';\n\tinner.style.whiteSpace = 'nowrap';\n\tinner.style.textOverflow = 'clip';\n\tinner.style.cursor = 'default';\n\t\n\tif (!mxClient.IS_VML)\n\t{\n\t\tinner.style.paddingRight = '20px';\n\t}\n\t\n\tvar linkInput = document.createElement('input');\n\tlinkInput.setAttribute('value', initialValue);\n\tlinkInput.setAttribute('placeholder', 'http://www.example.com/');\n\tlinkInput.setAttribute('type', 'text');\n\tlinkInput.style.marginTop = '6px';\n\tlinkInput.style.width = '400px';\n\tlinkInput.style.backgroundImage = 'url(\\'' + Dialog.prototype.clearImage + '\\')';\n\tlinkInput.style.backgroundRepeat = 'no-repeat';\n\tlinkInput.style.backgroundPosition = '100% 50%';\n\tlinkInput.style.paddingRight = '14px';\n\t\n\tvar cross = document.createElement('div');\n\tcross.setAttribute('title', mxResources.get('reset'));\n\tcross.style.position = 'relative';\n\tcross.style.left = '-16px';\n\tcross.style.width = '12px';\n\tcross.style.height = '14px';\n\tcross.style.cursor = 'pointer';\n\n\t// Workaround for inline-block not supported in IE\n\tcross.style.display = (mxClient.IS_VML) ? 'inline' : 'inline-block';\n\tcross.style.top = ((mxClient.IS_VML) ? 0 : 3) + 'px';\n\t\n\t// Needed to block event transparency in IE\n\tcross.style.background = 'url(' + IMAGE_PATH + '/transparent.gif)';\n\n\tmxEvent.addListener(cross, 'click', function()\n\t{\n\t\tlinkInput.value = '';\n\t\tlinkInput.focus();\n\t});\n\t\n\tinner.appendChild(linkInput);\n\tinner.appendChild(cross);\n\tdiv.appendChild(inner);\n\t\n\tthis.init = function()\n\t{\n\t\tlinkInput.focus();\n\t\t\n\t\tif (mxClient.IS_GC || mxClient.IS_FF || document.documentMode >= 5 || mxClient.IS_QUIRKS)\n\t\t{\n\t\t\tlinkInput.select();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdocument.execCommand('selectAll', false, null);\n\t\t}\n\t};\n\t\n\tvar btns = document.createElement('div');\n\tbtns.style.marginTop = '18px';\n\tbtns.style.textAlign = 'right';\n\n\tmxEvent.addListener(linkInput, 'keypress', function(e)\n\t{\n\t\tif (e.keyCode == 13)\n\t\t{\n\t\t\teditorUi.hideDialog();\n\t\t\tfn(linkInput.value);\n\t\t}\n\t});\n\n\tvar cancelBtn = mxUtils.button(mxResources.get('cancel'), function()\n\t{\n\t\teditorUi.hideDialog();\n\t});\n\tcancelBtn.className = 'geBtn';\n\t\n\tif (editorUi.editor.cancelFirst)\n\t{\n\t\tbtns.appendChild(cancelBtn);\n\t}\n\t\n\tvar mainBtn = mxUtils.button(btnLabel, function()\n\t{\n\t\teditorUi.hideDialog();\n\t\tfn(linkInput.value);\n\t});\n\tmainBtn.className = 'geBtn gePrimaryBtn';\n\tbtns.appendChild(mainBtn);\n\t\n\tif (!editorUi.editor.cancelFirst)\n\t{\n\t\tbtns.appendChild(cancelBtn);\n\t}\n\n\tdiv.appendChild(btns);\n\n\tthis.container = div;\n};\n\n/**\n * \n */\nvar OutlineWindow = function(editorUi, x, y, w, h)\n{\n\tvar graph = editorUi.editor.graph;\n\n\tvar div = document.createElement('div');\n\tdiv.style.position = 'absolute';\n\tdiv.style.width = '100%';\n\tdiv.style.height = '100%';\n\tdiv.style.border = '1px solid whiteSmoke';\n\tdiv.style.overflow = 'hidden';\n\n\tthis.window = new mxWindow(mxResources.get('outline'), div, x, y, w, h, true, true);\n\tthis.window.minimumSize = new mxRectangle(0, 0, 80, 80);\n\tthis.window.destroyOnClose = false;\n\tthis.window.setMaximizable(false);\n\tthis.window.setResizable(true);\n\tthis.window.setClosable(true);\n\tthis.window.setVisible(true);\n\t\n\tthis.window.setLocation = function(x, y)\n\t{\n\t\tvar iw = window.innerWidth || document.body.clientWidth || document.documentElement.clientWidth;\n\t\tvar ih = window.innerHeight || document.body.clientHeight || document.documentElement.clientHeight;\n\t\t\n\t\tx = Math.max(0, Math.min(x, iw - this.table.clientWidth));\n\t\ty = Math.max(0, Math.min(y, ih - this.table.clientHeight - 48));\n\n\t\tif (this.getX() != x || this.getY() != y)\n\t\t{\n\t\t\tmxWindow.prototype.setLocation.apply(this, arguments);\n\t\t}\n\t};\n\t\n\tvar resizeListener = mxUtils.bind(this, function()\n\t{\n\t\tvar x = this.window.getX();\n\t\tvar y = this.window.getY();\n\t\t\n\t\tthis.window.setLocation(x, y);\n\t});\n\t\n\tmxEvent.addListener(window, 'resize', resizeListener);\n\t\n\tvar outline = editorUi.createOutline(this.window);\n\n\tthis.destroy = function()\n\t{\n\t\tmxEvent.removeListener(window, 'resize', resizeListener);\n\t\tthis.window.destroy();\n\t\toutline.destroy();\n\t}\n\n\tthis.window.addListener(mxEvent.RESIZE, mxUtils.bind(this, function()\n   \t{\n\t\toutline.update(false);\n\t\toutline.outline.sizeDidChange();\n   \t}));\n\t\n\tthis.window.addListener(mxEvent.SHOW, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = false;\n\t\toutline.outline.refresh();\n\t\toutline.update();\n\t}));\n\t\n\tthis.window.addListener(mxEvent.HIDE, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = true;\n\t}));\n\t\n\tthis.window.addListener(mxEvent.NORMALIZE, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = false;\n\t\toutline.update();\n\t}));\n\t\t\t\n\tthis.window.addListener(mxEvent.MINIMIZE, mxUtils.bind(this, function()\n\t{\n\t\toutline.suspended = true;\n\t}));\n\n\tvar outlineCreateGraph = outline.createGraph;\n\toutline.createGraph = function(container)\n\t{\n\t\tvar g = outlineCreateGraph.apply(this, arguments);\n\t\tg.gridEnabled = false;\n\t\tg.pageScale = graph.pageScale;\n\t\tg.pageFormat = graph.pageFormat;\n\t\tg.background = (graph.background == null || graph.background == mxConstants.NONE) ? graph.defaultPageBackgroundColor : graph.background;\n\t\tg.pageVisible = graph.pageVisible;\n\n\t\tvar current = mxUtils.getCurrentStyle(graph.container);\n\t\tdiv.style.backgroundColor = current.backgroundColor;\n\t\t\n\t\treturn g;\n\t};\n\t\n\tfunction update()\n\t{\n\t\toutline.outline.pageScale = graph.pageScale;\n\t\toutline.outline.pageFormat = graph.pageFormat;\n\t\toutline.outline.pageVisible = graph.pageVisible;\n\t\toutline.outline.background = (graph.background == null || graph.background == mxConstants.NONE) ? graph.defaultPageBackgroundColor : graph.background;;\n\t\t\n\t\tvar current = mxUtils.getCurrentStyle(graph.container);\n\t\tdiv.style.backgroundColor = current.backgroundColor;\n\n\t\tif (graph.view.backgroundPageShape != null && outline.outline.view.backgroundPageShape != null)\n\t\t{\n\t\t\toutline.outline.view.backgroundPageShape.fill = graph.view.backgroundPageShape.fill;\n\t\t}\n\t\t\n\t\toutline.outline.refresh();\n\t};\n\n\toutline.init(div);\n\n\teditorUi.editor.addListener('resetGraphView', update);\n\teditorUi.addListener('pageFormatChanged', update);\n\teditorUi.addListener('backgroundColorChanged', update);\n\teditorUi.addListener('backgroundImageChanged', update);\n\teditorUi.addListener('pageViewChanged', function()\n\t{\n\t\tupdate();\n\t\toutline.update(true);\n\t});\n\t\n\tif (outline.outline.dialect == mxConstants.DIALECT_SVG)\n\t{\n\t\tvar zoomInAction = editorUi.actions.get('zoomIn');\n\t\tvar zoomOutAction = editorUi.actions.get('zoomOut');\n\t\t\n\t\tmxEvent.addMouseWheelListener(function(evt, up)\n\t\t{\n\t\t\tvar outlineWheel = false;\n\t\t\tvar source = mxEvent.getSource(evt);\n\t\n\t\t\twhile (source != null)\n\t\t\t{\n\t\t\t\tif (source == outline.outline.view.canvas.ownerSVGElement)\n\t\t\t\t{\n\t\t\t\t\toutlineWheel = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tsource = source.parentNode;\n\t\t\t}\n\t\n\t\t\tif (outlineWheel)\n\t\t\t{\n\t\t\t\tif (up)\n\t\t\t\t{\n\t\t\t\t\tzoomInAction.funct();\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tzoomOutAction.funct();\n\t\t\t\t}\n\t\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t}\n\t\t});\n\t}\n};\n\n/**\n * \n */\nvar LayersWindow = function(editorUi, x, y, w, h)\n{\n\tvar graph = editorUi.editor.graph;\n\t\n\tvar div = document.createElement('div');\n\tdiv.style.userSelect = 'none';\n\tdiv.style.background = (Dialog.backdropColor == 'white') ? 'whiteSmoke' : Dialog.backdropColor;\n\tdiv.style.border = '1px solid whiteSmoke';\n\tdiv.style.height = '100%';\n\tdiv.style.marginBottom = '10px';\n\tdiv.style.overflow = 'auto';\n\n\tvar tbarHeight = (!EditorUi.compactUi) ? '30px' : '26px';\n\t\n\tvar listDiv = document.createElement('div')\n\tlistDiv.style.backgroundColor = (Dialog.backdropColor == 'white') ? '#dcdcdc' : Dialog.backdropColor;\n\tlistDiv.style.position = 'absolute';\n\tlistDiv.style.overflow = 'auto';\n\tlistDiv.style.left = '0px';\n\tlistDiv.style.right = '0px';\n\tlistDiv.style.top = '0px';\n\tlistDiv.style.bottom = (parseInt(tbarHeight) + 7) + 'px';\n\tdiv.appendChild(listDiv);\n\t\n\tvar dragSource = null;\n\tvar dropIndex = null;\n\t\n\tmxEvent.addListener(div, 'dragover', function(evt)\n\t{\n\t\tevt.dataTransfer.dropEffect = 'move';\n\t\tdropIndex = 0;\n\t\tevt.stopPropagation();\n\t\tevt.preventDefault();\n\t});\n\t\n\t// Workaround for \"no element found\" error in FF\n\tmxEvent.addListener(div, 'drop', function(evt)\n\t{\n\t\tevt.stopPropagation();\n\t\tevt.preventDefault();\n\t});\n\n\tvar layerCount = null;\n\tvar selectionLayer = null;\n\t\n\tvar ldiv = document.createElement('div');\n\t\n\tldiv.className = 'geToolbarContainer';\n\tldiv.style.position = 'absolute';\n\tldiv.style.bottom = '0px';\n\tldiv.style.left = '0px';\n\tldiv.style.right = '0px';\n\tldiv.style.height = tbarHeight;\n\tldiv.style.overflow = 'hidden';\n\tldiv.style.padding = (!EditorUi.compactUi) ? '1px' : '4px 0px 3px 0px';\n\tldiv.style.backgroundColor = (Dialog.backdropColor == 'white') ? 'whiteSmoke' : Dialog.backdropColor;\n\tldiv.style.borderWidth = '1px 0px 0px 0px';\n\tldiv.style.borderColor = '#c3c3c3';\n\tldiv.style.borderStyle = 'solid';\n\tldiv.style.display = 'block';\n\tldiv.style.whiteSpace = 'nowrap';\n\t\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tldiv.style.filter = 'none';\n\t}\n\t\n\tvar link = document.createElement('a');\n\tlink.className = 'geButton';\n\t\n\tif (mxClient.IS_QUIRKS)\n\t{\n\t\tlink.style.filter = 'none';\n\t}\n\t\n\tvar removeLink = link.cloneNode();\n\tremoveLink.innerHTML = '<div class=\"geSprite geSprite-delete\" style=\"display:inline-block;\"></div>';\n\n\tmxEvent.addListener(removeLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tgraph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar index = graph.model.root.getIndex(selectionLayer);\n\t\t\t\tgraph.removeCells([selectionLayer], false);\n\t\t\t\t\n\t\t\t\t// Creates default layer if no layer exists\n\t\t\t\tif (graph.model.getChildCount(graph.model.root) == 0)\n\t\t\t\t{\n\t\t\t\t\tgraph.model.add(graph.model.root, new mxCell());\n\t\t\t\t\tgraph.setDefaultParent(null);\n\t\t\t\t}\n\t\t\t\telse if (index > 0 && index <= graph.model.getChildCount(graph.model.root))\n\t\t\t\t{\n\t\t\t\t\tgraph.setDefaultParent(graph.model.getChildAt(graph.model.root, index - 1));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tgraph.setDefaultParent(null);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tgraph.model.endUpdate();\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\tremoveLink.className = 'geButton mxDisabled';\n\t}\n\t\n\tldiv.appendChild(removeLink);\n\n\tvar insertLink = link.cloneNode();\n\tinsertLink.setAttribute('title', mxUtils.trim(mxResources.get('moveSelectionTo', [''])));\n\tinsertLink.innerHTML = '<div class=\"geSprite geSprite-insert\" style=\"display:inline-block;\"></div>';\n\t\n\tmxEvent.addListener(insertLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled() && !graph.isSelectionEmpty())\n\t\t{\n\t\t\teditorUi.editor.graph.popupMenuHandler.hideMenu();\n\t\t\t\n\t\t\tvar menu = new mxPopupMenu(mxUtils.bind(this, function(menu, parent)\n\t\t\t{\n\t\t\t\tfor (var i = layerCount - 1; i >= 0; i--)\n\t\t\t\t{\n\t\t\t\t\t(mxUtils.bind(this, function(child)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar item = menu.addItem(graph.convertValueToString(child) ||\n\t\t\t\t\t\t\t\tmxResources.get('background'), null, mxUtils.bind(this, function()\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgraph.moveCells(graph.getSelectionCells(), 0, 0, false, child);\n\t\t\t\t\t\t}), parent);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (graph.getSelectionCount() == 1 && graph.model.isAncestor(child, graph.getSelectionCell()))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenu.addCheckmark(item, Editor.checkmarkImage);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}))(graph.model.getChildAt(graph.model.root, i));\n\t\t\t\t}\n\t\t\t}));\n\t\t\tmenu.div.className += ' geMenubarMenu';\n\t\t\tmenu.smartSeparators = true;\n\t\t\tmenu.showDisabled = true;\n\t\t\tmenu.autoExpand = true;\n\t\t\t\n\t\t\t// Disables autoexpand and destroys menu when hidden\n\t\t\tmenu.hideMenu = mxUtils.bind(this, function()\n\t\t\t{\n\t\t\t\tmxPopupMenu.prototype.hideMenu.apply(menu, arguments);\n\t\t\t\tmenu.destroy();\n\t\t\t});\n\t\n\t\t\tvar offset = mxUtils.getOffset(insertLink);\n\t\t\tmenu.popup(offset.x, offset.y + insertLink.offsetHeight, null, evt);\n\t\t\t\n\t\t\t// Allows hiding by clicking on document\n\t\t\teditorUi.setCurrentMenu(menu);\n\t\t}\n\t});\n\n\tldiv.appendChild(insertLink);\n\t\n\tvar dataLink = link.cloneNode();\n\tdataLink.innerHTML = '<div class=\"geSprite geSprite-dots\" style=\"display:inline-block;\"></div>';\n\tdataLink.setAttribute('title', mxResources.get('rename'));\n\n\tmxEvent.addListener(dataLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\teditorUi.showDataDialog(selectionLayer);\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\tdataLink.className = 'geButton mxDisabled';\n\t}\n\n\tldiv.appendChild(dataLink);\n\t\n\tfunction renameLayer(layer)\n\t{\n\t\tif (graph.isEnabled() && layer != null)\n\t\t{\n\t\t\tvar label = graph.convertValueToString(layer);\n\t\t\tvar dlg = new FilenameDialog(editorUi, label || mxResources.get('background'), mxResources.get('rename'), mxUtils.bind(this, function(newValue)\n\t\t\t{\n\t\t\t\tif (newValue != null)\n\t\t\t\t{\n\t\t\t\t\tgraph.cellLabelChanged(layer, newValue);\n\t\t\t\t}\n\t\t\t}), mxResources.get('enterName'));\n\t\t\teditorUi.showDialog(dlg.container, 300, 100, true, true);\n\t\t\tdlg.init();\n\t\t}\n\t};\n\t\n\tvar duplicateLink = link.cloneNode();\n\tduplicateLink.innerHTML = '<div class=\"geSprite geSprite-duplicate\" style=\"display:inline-block;\"></div>';\n\t\n\tmxEvent.addListener(duplicateLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tvar newCell = null;\n\t\t\tgraph.model.beginUpdate();\n\t\t\ttry\n\t\t\t{\n\t\t\t\tnewCell = graph.cloneCell(selectionLayer);\n\t\t\t\tgraph.cellLabelChanged(newCell, mxResources.get('untitledLayer'));\n\t\t\t\tnewCell.setVisible(true);\n\t\t\t\tnewCell = graph.addCell(newCell, graph.model.root);\n\t\t\t\tgraph.setDefaultParent(newCell);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tgraph.model.endUpdate();\n\t\t\t}\n\n\t\t\tif (newCell != null && !graph.isCellLocked(newCell))\n\t\t\t{\n\t\t\t\tgraph.selectAll(newCell);\n\t\t\t}\n\t\t}\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\tduplicateLink.className = 'geButton mxDisabled';\n\t}\n\n\tldiv.appendChild(duplicateLink);\n\n\tvar addLink = link.cloneNode();\n\taddLink.innerHTML = '<div class=\"geSprite geSprite-plus\" style=\"display:inline-block;\"></div>';\n\taddLink.setAttribute('title', mxResources.get('addLayer'));\n\t\n\tmxEvent.addListener(addLink, 'click', function(evt)\n\t{\n\t\tif (graph.isEnabled())\n\t\t{\n\t\t\tgraph.model.beginUpdate();\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\t\t\t\tvar cell = graph.addCell(new mxCell(mxResources.get('untitledLayer')), graph.model.root);\n\t\t\t\tgraph.setDefaultParent(cell);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tgraph.model.endUpdate();\n\t\t\t}\n\t\t}\n\t\t\n\t\tmxEvent.consume(evt);\n\t});\n\t\n\tif (!graph.isEnabled())\n\t{\n\t\taddLink.className = 'geButton mxDisabled';\n\t}\n\t\n\tldiv.appendChild(addLink);\n\n\tdiv.appendChild(ldiv);\t\n\t\n\tfunction refresh()\n\t{\n\t\tlayerCount = graph.model.getChildCount(graph.model.root)\n\t\tlistDiv.innerHTML = '';\n\n\t\tfunction addLayer(index, label, child, defaultParent)\n\t\t{\n\t\t\tvar ldiv = document.createElement('div');\n\t\t\tldiv.className = 'geToolbarContainer';\n\n\t\t\tldiv.style.overflow = 'hidden';\n\t\t\tldiv.style.position = 'relative';\n\t\t\tldiv.style.padding = '4px';\n\t\t\tldiv.style.height = '22px';\n\t\t\tldiv.style.display = 'block';\n\t\t\tldiv.style.backgroundColor = (Dialog.backdropColor == 'white') ? 'whiteSmoke' : Dialog.backdropColor;\n\t\t\tldiv.style.borderWidth = '0px 0px 1px 0px';\n\t\t\tldiv.style.borderColor = '#c3c3c3';\n\t\t\tldiv.style.borderStyle = 'solid';\n\t\t\tldiv.style.whiteSpace = 'nowrap';\n\t\t\tldiv.setAttribute('title', label);\n\t\t\t\n\t\t\tvar left = document.createElement('div');\n\t\t\tleft.style.display = 'inline-block';\n\t\t\tleft.style.width = '100%';\n\t\t\tleft.style.textOverflow = 'ellipsis';\n\t\t\tleft.style.overflow = 'hidden';\n\t\t\t\n\t\t\tmxEvent.addListener(ldiv, 'dragover', function(evt)\n\t\t\t{\n\t\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t\t\tdropIndex = index;\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tevt.preventDefault();\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(ldiv, 'dragstart', function(evt)\n\t\t\t{\n\t\t\t\tdragSource = ldiv;\n\t\t\t\t\n\t\t\t\t// Workaround for no DnD on DIV in FF\n\t\t\t\tif (mxClient.IS_FF)\n\t\t\t\t{\n\t\t\t\t\t// LATER: Check what triggers a parse as XML on this in FF after drop\n\t\t\t\t\tevt.dataTransfer.setData('Text', '<layer/>');\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tmxEvent.addListener(ldiv, 'dragend', function(evt)\n\t\t\t{\n\t\t\t\tif (dragSource != null && dropIndex != null)\n\t\t\t\t{\n\t\t\t\t\tgraph.addCell(child, graph.model.root, dropIndex);\n\t\t\t\t}\n\n\t\t\t\tdragSource = null;\n\t\t\t\tdropIndex = null;\n\t\t\t\tevt.stopPropagation();\n\t\t\t\tevt.preventDefault();\n\t\t\t});\n\n\t\t\tvar btn = document.createElement('img');\n\t\t\tbtn.setAttribute('draggable', 'false');\n\t\t\tbtn.setAttribute('align', 'top');\n\t\t\tbtn.setAttribute('border', '0');\n\t\t\tbtn.style.padding = '4px';\n\t\t\tbtn.setAttribute('title', mxResources.get('lockUnlock'));\n\n\t\t\tvar state = graph.view.getState(child);\n    \t\t\tvar style = (state != null) ? state.style : graph.getCellStyle(child);\n\n\t\t\tif (mxUtils.getValue(style, 'locked', '0') == '1')\n\t\t\t{\n\t\t\t\tbtn.setAttribute('src', Dialog.prototype.lockedImage);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tbtn.setAttribute('src', Dialog.prototype.unlockedImage);\n\t\t\t}\n\t\t\t\n\t\t\tif (graph.isEnabled())\n\t\t\t{\n\t\t\t\tbtn.style.cursor = 'pointer';\n\t\t\t}\n\t\t\t\n\t\t\tmxEvent.addListener(btn, 'click', function(evt)\n\t\t\t{\n\t\t\t\tif (graph.isEnabled())\n\t\t\t\t{\n\t\t\t\t\tvar value = null;\n\t\t\t\t\t\n\t\t\t\t\tgraph.getModel().beginUpdate();\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t    \t\tvalue = (mxUtils.getValue(style, 'locked', '0') == '1') ? null : '1';\n\t\t\t    \t\tgraph.setCellStyles('locked', value, [child]);\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.getModel().endUpdate();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value == '1')\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.removeSelectionCells(graph.getModel().getDescendants(child));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tleft.appendChild(btn);\n\n\t\t\tvar inp = document.createElement('input');\n\t\t\tinp.setAttribute('type', 'checkbox');\n\t\t\tinp.setAttribute('title', mxResources.get('hideIt', [child.value || mxResources.get('background')]));\n\t\t\tinp.style.marginLeft = '4px';\n\t\t\tinp.style.marginRight = '6px';\n\t\t\tinp.style.marginTop = '4px';\n\t\t\tleft.appendChild(inp);\n\t\t\t\n\t\t\tif (graph.model.isVisible(child))\n\t\t\t{\n\t\t\t\tinp.setAttribute('checked', 'checked');\n\t\t\t\tinp.defaultChecked = true;\n\t\t\t}\n\n\t\t\tmxEvent.addListener(inp, 'click', function(evt)\n\t\t\t{\n\t\t\t\tgraph.model.setVisible(child, !graph.model.isVisible(child));\n\t\t\t\tmxEvent.consume(evt);\n\t\t\t});\n\n\t\t\tmxUtils.write(left, label);\n\t\t\tldiv.appendChild(left);\n\t\t\t\n\t\t\tif (graph.isEnabled())\n\t\t\t{\n\t\t\t\t// Fallback if no drag and drop is available\n\t\t\t\tif (mxClient.IS_TOUCH || mxClient.IS_POINTER || mxClient.IS_VML ||\n\t\t\t\t\t(mxClient.IS_IE && document.documentMode < 10))\n\t\t\t\t{\n\t\t\t\t\tvar right = document.createElement('div');\n\t\t\t\t\tright.style.display = 'block';\n\t\t\t\t\tright.style.textAlign = 'right';\n\t\t\t\t\tright.style.whiteSpace = 'nowrap';\n\t\t\t\t\tright.style.position = 'absolute';\n\t\t\t\t\tright.style.right = '6px';\n\t\t\t\t\tright.style.top = '6px';\n\t\t\n\t\t\t\t\t// Poor man's change layer order\n\t\t\t\t\tif (index > 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar img2 = document.createElement('a');\n\t\t\t\t\t\t\n\t\t\t\t\t\timg2.setAttribute('title', mxResources.get('toBack'));\n\t\t\t\t\t\t\n\t\t\t\t\t\timg2.className = 'geButton';\n\t\t\t\t\t\timg2.style.cssFloat = 'none';\n\t\t\t\t\t\timg2.innerHTML = '&#9660;';\n\t\t\t\t\t\timg2.style.width = '14px';\n\t\t\t\t\t\timg2.style.height = '14px';\n\t\t\t\t\t\timg2.style.fontSize = '14px';\n\t\t\t\t\t\timg2.style.margin = '0px';\n\t\t\t\t\t\timg2.style.marginTop = '-1px';\n\t\t\t\t\t\tright.appendChild(img2);\n\t\t\t\t\t\t\n\t\t\t\t\t\tmxEvent.addListener(img2, 'click', function(evt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (graph.isEnabled())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgraph.addCell(child, graph.model.root, index - 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (index >= 0 && index < layerCount - 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar img1 = document.createElement('a');\n\t\t\t\t\t\t\n\t\t\t\t\t\timg1.setAttribute('title', mxResources.get('toFront'));\n\t\t\t\t\t\t\n\t\t\t\t\t\timg1.className = 'geButton';\n\t\t\t\t\t\timg1.style.cssFloat = 'none';\n\t\t\t\t\t\timg1.innerHTML = '&#9650;';\n\t\t\t\t\t\timg1.style.width = '14px';\n\t\t\t\t\t\timg1.style.height = '14px';\n\t\t\t\t\t\timg1.style.fontSize = '14px';\n\t\t\t\t\t\timg1.style.margin = '0px';\n\t\t\t\t\t\timg1.style.marginTop = '-1px';\n\t\t\t\t\t\tright.appendChild(img1);\n\t\t\t\t\t\t\n\t\t\t\t\t\tmxEvent.addListener(img1, 'click', function(evt)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (graph.isEnabled())\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tgraph.addCell(child, graph.model.root, index + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tldiv.appendChild(right);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (mxClient.IS_SVG && (!mxClient.IS_IE || document.documentMode >= 10))\n\t\t\t\t{\n\t\t\t\t\tldiv.setAttribute('draggable', 'true');\n\t\t\t\t\tldiv.style.cursor = 'move';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmxEvent.addListener(ldiv, 'dblclick', function(evt)\n\t\t\t{\n\t\t\t\tvar nodeName = mxEvent.getSource(evt).nodeName;\n\t\t\t\t\n\t\t\t\tif (nodeName != 'INPUT' && nodeName != 'IMG')\n\t\t\t\t{\n\t\t\t\t\trenameLayer(child);\n\t\t\t\t\tmxEvent.consume(evt);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (graph.getDefaultParent() == child)\n\t\t\t{\n\t\t\t\tldiv.style.background =  (Dialog.backdropColor == 'white') ? '#e6eff8' : '#505759';\n\t\t\t\tldiv.style.fontWeight = (graph.isEnabled()) ? 'bold' : '';\n\t\t\t\tselectionLayer = child;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmxEvent.addListener(ldiv, 'click', function(evt)\n\t\t\t\t{\n\t\t\t\t\tif (graph.isEnabled())\n\t\t\t\t\t{\n\t\t\t\t\t\tgraph.setDefaultParent(defaultParent);\n\t\t\t\t\t\tgraph.view.setCurrentRoot(null);\n\t\t\t\t\t\trefresh();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tlistDiv.appendChild(ldiv);\n\t\t};\n\t\t\n\t\t// Cannot be moved or deleted\n\t\tfor (var i = layerCount - 1; i >= 0; i--)\n\t\t{\n\t\t\t(mxUtils.bind(this, function(child)\n\t\t\t{\n\t\t\t\taddLayer(i, graph.convertValueToString(child) ||\n\t\t\t\t\tmxResources.get('background'), child, child);\n\t\t\t}))(graph.model.getChildAt(graph.model.root, i));\n\t\t}\n\t\t\n\t\tvar label = graph.convertValueToString(selectionLayer) || mxResources.get('background');\n\t\tremoveLink.setAttribute('title', mxResources.get('removeIt', [label]));\n\t\tduplicateLink.setAttribute('title', mxResources.get('duplicateIt', [label]));\n\t\tdataLink.setAttribute('title', mxResources.get('editData'));\n\n\t\tif (graph.isSelectionEmpty())\n\t\t{\n\t\t\tinsertLink.className = 'geButton mxDisabled';\n\t\t}\n\t};\n\n\trefresh();\n\tgraph.model.addListener(mxEvent.CHANGE, function()\n\t{\n\t\trefresh();\n\t});\n\n\tgraph.selectionModel.addListener(mxEvent.CHANGE, function()\n\t{\n\t\tif (graph.isSelectionEmpty())\n\t\t{\n\t\t\tinsertLink.className = 'geButton mxDisabled';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tinsertLink.className = 'geButton';\n\t\t}\n\t});\n\n\tthis.window = new mxWindow(mxResources.get('layers'), div, x, y, w, h, true, true);\n\tthis.window.minimumSize = new mxRectangle(0, 0, 120, 120);\n\tthis.window.destroyOnClose = false;\n\tthis.window.setMaximizable(false);\n\tthis.window.setResizable(true);\n\tthis.window.setClosable(true);\n\tthis.window.setVisible(true);\n\t\n\t// Make refresh available via instance\n\tthis.refreshLayers = refresh;\n\t\n\tthis.window.setLocation = function(x, y)\n\t{\n\t\tvar iw = window.innerWidth || document.body.clientWidth || document.documentElement.clientWidth;\n\t\tvar ih = window.innerHeight || document.body.clientHeight || document.documentElement.clientHeight;\n\t\t\n\t\tx = Math.max(0, Math.min(x, iw - this.table.clientWidth));\n\t\ty = Math.max(0, Math.min(y, ih - this.table.clientHeight - 48));\n\n\t\tif (this.getX() != x || this.getY() != y)\n\t\t{\n\t\t\tmxWindow.prototype.setLocation.apply(this, arguments);\n\t\t}\n\t};\n\t\n\tvar resizeListener = mxUtils.bind(this, function()\n\t{\n\t\tvar x = this.window.getX();\n\t\tvar y = this.window.getY();\n\t\t\n\t\tthis.window.setLocation(x, y);\n\t});\n\t\n\tmxEvent.addListener(window, 'resize', resizeListener);\n\n\tthis.destroy = function()\n\t{\n\t\tmxEvent.removeListener(window, 'resize', resizeListener);\n\t\tthis.window.destroy();\n\t}\n};\n"], "filenames": ["javascript/examples/grapheditor/www/js/Dialogs.js"], "buggy_code_start_loc": [207], "buggy_code_end_loc": [215], "fixing_code_start_loc": [207], "fixing_code_end_loc": [222], "type": "CWE-20", "message": "An issue was discovered in mxGraph through 4.0.0, related to the \"draw.io Diagrams\" plugin before 8.3.14 for Confluence and other products. Improper input validation/sanitization of a color field leads to XSS. This is associated with javascript/examples/grapheditor/www/js/Dialogs.js.", "other": {"cve": {"id": "CVE-2019-13127", "sourceIdentifier": "cve@mitre.org", "published": "2019-07-01T15:15:11.647", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in mxGraph through 4.0.0, related to the \"draw.io Diagrams\" plugin before 8.3.14 for Confluence and other products. Improper input validation/sanitization of a color field leads to XSS. This is associated with javascript/examples/grapheditor/www/js/Dialogs.js."}, {"lang": "es", "value": "Se ha descubierto un fallo en mxGraph hasta la versi\u00f3n 4.0.0, relacionado con el plugin \"Draw.io Diagrams\" en versiones anteriores a la 8.3.14 para Confluence y otros productos. La validaci\u00f3n/saneamiento de entrada incorrecta de un campo de color conduce a un Cross-Site Scripting (XSS). Esto est\u00e1 asociado con javascript/examples/grapheditor/www/js/Dialogs.js."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}, {"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:draw:draw.io_diagrams:*:*:*:*:*:confluence:*:*", "versionEndExcluding": "8.3.14", "matchCriteriaId": "B79D09D9-BFFB-4705-9A11-7E691C71AB75"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jgraph:mxgraph:*:*:*:*:*:*:*:*", "versionEndIncluding": "4.0.0", "matchCriteriaId": "B0BB6DF4-159A-41C8-AFF1-6B30A49EBEFF"}]}]}], "references": [{"url": "https://github.com/jgraph/mxgraph/commit/76e8e2809b622659a9c5ffdc4f19922b7a68cfa3", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://marketplace.atlassian.com/apps/1210933/draw-io-diagrams-for-confluence/version-history", "source": "cve@mitre.org", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2019-032.txt", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jgraph/mxgraph/commit/76e8e2809b622659a9c5ffdc4f19922b7a68cfa3"}}