{"buggy_code": ["<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && isset($_GET['username']))\n                    ? str_replace(\"%\", \"\", $_GET['username']) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && isset($_GET['startdate']) &&\n                  preg_match(DATE_REGEX, $_GET['startdate'], $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? $_GET['startdate'] : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && isset($_GET['enddate']) &&\n                preg_match(DATE_REGEX, $_GET['enddate'], $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? $_GET['enddate'] : \"\";\n    \n    //feed the sidebar variables\n    $accounting_date_username = $username_enc;\n    $accounting_date_startdate = $startdate;\n    $accounting_date_enddate = $enddate;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for user [$username] and start date [$startdate] and end date [$enddate] on page: \";\n    $logDebugSQL = \"\";\n\n\n    $extra_js = array(\n        \"library/javascript/pages_common.js\",\n    );\n\n    // print HTML prologue\n    $title = t('Intro','acctdate.php');\n    $help = t('helpPage','acctdate');\n\n    print_html_prologue($title, $langCode, array(), $extra_js);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intval($colspan / 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && isset($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && isset($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = array();\n    $partial_query_params = array();\n\n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n    }\n\n    if (!empty($enddate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n    }\n\n    if (!empty($username)) {\n        $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n\n        // setup php session variables for exporting\n        $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n        $_SESSION['reportQuery'] = (count($sql_WHERE) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE) : \"\";\n        $_SESSION['reportType'] = \"accountingGeneric\";\n\n    \n        $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n        if (count($sql_WHERE) > 0) {\n            $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n        }\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $numrows = $res->fetchrow()[0];\n        \n        if ($numrows > 0) {\n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                                   ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                                   ra.AcctTerminateCause, ra.NASIPAddress\n                              FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                           $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n            if (count($sql_WHERE) > 0) {\n                $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n            }\n\n            $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $per_page_numrows = $res->numRows();\n\n    \n            $partial_query_string = (count($partial_query_params) > 0)\n                                  ? (\"&\" . implode(\"&\", $partial_query_params)) : \"\";\n?>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType);\n                echo '</td>';\n            }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n            // second line of table header\n            echo \"<tr>\";\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n            echo \"</tr>\";\n?>\n    </thead>\n\n    <tbody>\n<?php\n            $simple_td_format = '<td>%s</td>';\n            $li_style = 'margin: 7px auto';\n\n            while ($row = $res->fetchRow()) {\n                foreach ($row as $i => $value) {\n                    $row[$i] = htmlspecialchars($value, ENT_QUOTES, 'UTF-8');\n                }\n                \n                echo \"<tr>\";\n                printf($simple_td_format, $row[0]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                         . sprintf(\",'hotspot=%s');return false;\", $row[1]);\n                $tooltip = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($row[1]), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n                \n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[1]);\n                \n                $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                         . sprintf(\"'username=%s');return false;\", $row[2]);\n                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', $row[2], t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n                printf('<td><a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a></td>\",\n                       $onclick, $tooltip, $row[2]);\n\n                printf($simple_td_format, $row[3]);\n                printf($simple_td_format, $row[4]);\n                printf($simple_td_format, $row[5]);\n                \n                printf($simple_td_format, time2str($row[6]));\n                printf($simple_td_format, toxbyte($row[7]));\n                printf($simple_td_format, toxbyte($row[8]));\n                printf($simple_td_format, $row[9]);\n                printf($simple_td_format, $row[10]);\n            \n                echo \"</tr>\";\n            \n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n            \n        } else {\n            $failureMsg = \"Nothing to display\";\n        }\n    \n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n    \n    } else {\n        $failureMsg = \"Please specify a valid username\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip();\n\nwindow.onload = function() { setupAccordion() };\n\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Miguel Garc\u00eda <miguelvisgarcia@gmail.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    isset($_REQUEST['username']) ? $username = trim($_REQUEST['username']) : $username = '';\n    isset($_REQUEST['enddate']) ? $enddate = trim($_REQUEST['enddate']) : $enddate = \"\";\n\n    $logAction = '';\n    $logDebugSQL = '';\n\n    if (isset($_POST['submit'])) {\n\n        if ($username != '') {\n\n            include 'library/opendb.php';\n\n            $sql = 'SELECT count(*) FROM ' . $configValues['CONFIG_DB_TBL_RADACCT'] .\n                   ' WHERE username = \"' . $username . '\" AND acctstoptime is NULL;';\n\n            $res = $dbSocket->query($sql);\n\n            $logDebugSQL .= $sql . \"\\n\";\n\n            $row = $res->fetchRow();\n\n            if($row[0] > 0) {\n\n                $sql = 'UPDATE ' . $configValues['CONFIG_DB_TBL_RADACCT'] .\n                       ' SET acctstoptime = NOW(), acctterminatecause = \"Admin-Reset\"'.\n                       ' WHERE username = \"' . $username . '\" AND acctstoptime is NULL;'; \n\n                $res = $dbSocket->query($sql);\n                \n                $logDebugSQL .= $sql . \"\\n\";\n\n                $successMsg = \"Cleaned up stale sessions for username: <b> $username </b>\";\n                $logAction .= \"Successfully cleaned up stale sessions for username [$username] on page: \";\n            }\n            else {\n\n                $failureMsg = \"There are no stale sessions for user [$username]\";\n                $logAction .= \"Failed performing close stale sessions on user [$username] because there are no stale sessions for that user on page: \";\n            }\n\n            include 'library/closedb.php';\n        }\n        else if ($enddate != '') {\n\n            include 'library/opendb.php';\n\n            // delete all stale sessions in the database that occur until $enddate\n            $sql = \"DELETE FROM \".$configValues['CONFIG_DB_TBL_RADACCT'].\n                    \" WHERE AcctStartTime<'\".$dbSocket->escapeSimple($enddate).\"'\".\n                    \" AND (AcctStopTime='0000-00-00 00:00:00' OR AcctStopTime IS NULL)\";\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= $sql . \"\\n\";\n\n            $successMsg = \"Cleaned up stale sessions until date: <b> $enddate </b>\";\n            $logAction .= \"Successfully cleaned up stale sessions until date [$enddate] on page: \";\n\n            include 'library/closedb.php';\n\n        }\n        else {\n            $failureMsg = \"No username or ending date was entered, please specify a username or ending date for cleaning up stale sessions from the database\";\n            $logAction .= \"Failed cleaning up stale sessions due to lack of username or ending date on page: \";\n        }\n    }\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n    \n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n\n    $title = t('Intro','acctmaintenancecleanup.php');\n    $help = t('helpPage','acctmaintenancecleanup');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-accounting-maintenance.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    // set navbar stuff\n    $navbuttons = array(\n                          'CleanupRecordsByUsername-tab' => t('title','CleanupRecordsByUsername'),\n                          'CleanupRecordsByDate-tab' => t('title','CleanupRecordsByDate'),\n                       );\n\n    print_tab_navbuttons($navbuttons);\n?>\n\n\n        <form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n\n            \n\n                <div class=\"tabcontent\" id=\"CleanupRecordsByUsername-tab\" style=\"display: block\">\n\n                    <fieldset>\n\n                        <h302> <?php echo t('title','CleanupRecordsByUsername'); ?> </h302>\n                        <br/>\n\n                        <label for='username' class='form'><?php echo t('all','Username')?></label>\n                        <input name=\"username\" type=\"text\" id=\"usernameEdit\" autocomplete=\"off\"\n                        tooltipText='<?php echo t('Tooltip','Username'); ?> <br/>'\n                        value=\"<?php if (isset($username)) echo $username; ?>\" tabindex=100>\n\n<?php\n    include_once(\"include/management/autocomplete.php\");\n\n    if ($autoComplete) {\n        echo \"<script type=\\\"text/javascript\\\">\n                /** Making usernameEdit interactive **/\n                autoComEdit = new DHTMLSuite.autoComplete();\n                autoComEdit.add('usernameEdit','include/management/dynamicAutocomplete.php','_small','getAjaxAutocompleteUsernames');\n                </script>\";\n    }\n?>\n                        <br/><br/>\n                        <hr><br/>\n\n                        <input type='submit' name='submit' value='<?php echo t('buttons','apply') ?>' class='button' />\n\n                    </fieldset>\n\n                </div>\n\n                <div class=\"tabcontent\" id=\"CleanupRecordsByDate-tab\">\n\n                    <fieldset>\n                        <h302> <?php echo t('title','CleanupRecordsByDate') ?> </h302>\n                        <br/>\n\n                        <label for='enddate' class='form'><?php echo t('all','CleanupSessions')?></label>\n                        <input name='enddate' type='text' id='enddate' value='<?php echo $enddate ?>' tabindex=100 />\n                        <img src=\"library/js_date/calendar.gif\" onclick=\n                        \"showChooser(this, 'enddate', 'chooserSpan', 1950, <?php echo date('Y', time());?>, 'Y-m-d H:i:s', true);\" >\n\n                        <br/><br/>\n                        <hr><br/>\n                        <input type=\"submit\" name=\"submit\" value=\"<?php echo t('buttons','apply') ?>\" tabindex=1000 class='button' />\n                    </fieldset>\n\n                    <div id=\"chooserSpan\" class=\"dateChooser select-free\"\n                        style=\"display: none; visibility: hidden; width: 160px;\">\n                    </div>\n\n                </div>\n\n\n    </form>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n \n    isset($_REQUEST['enddate']) ? $enddate = $_REQUEST['enddate'] : $enddate = \"\";\n    isset($_REQUEST['startdate']) ? $startdate = $_REQUEST['startdate'] : $startdate = \"\";\n    isset($_REQUEST['username']) ? $username = $_REQUEST['username'] : $username = \"\";\n\n    $logAction =  \"\";\n    $logDebugSQL = \"\";\n\n    if (isset($_POST['submit'])) {\n\n        if ( (trim($startdate) != \"\") || (trim($enddate) != \"\") || (trim($username) != \"\") ) {\n            \n            include 'library/opendb.php';\n\n            $deleteUsername = \"\";\n            if (trim($username) != \"\")\n                $deleteUsername = \" AND Username='$username'\";\n\n            $deleteEnddate = \"\";\n            if (trim($enddate) != \"\")\n                $deleteEnddate = \" AND AcctStartTime<'\".$dbSocket->escapeSimple($enddate).\"'\";\n\n            $deleteStartdate = \"\";\n            if (trim($startdate) != \"\")\n                $deleteStartdate = \" AND AcctStartTime>'\".$dbSocket->escapeSimple($startdate).\"'\";\n\n\n            $sql = \"DELETE FROM \".$configValues['CONFIG_DB_TBL_RADACCT'].\n                \" WHERE 1=1\".\n                \" $deleteStartdate\".\n                \" $deleteEnddate\".\n                \" $deleteUsername \";\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= $sql . \"\\n\";\n\n            $successMsg = \"Deleted records between <b>$startdate</b> to <b>$enddate</b> for user <b>$username</b>\";\n            $logAction .= \"Successfully deleted records between [$startdate] and [$enddate] for user [$username] on page: \";\n\n            include 'library/closedb.php';\n\n        }  else { \n            $failureMsg = \"no username, ending date or starting date was provided, please at least one of those\";\n            $logAction .= \"Failed deleting records from database, missing fields on page: \";\n        }\n\n    }\n\n\n    include_once('library/config_read.php');\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $title = t('Intro','acctmaintenancedelete.php');\n    $help = t('helpPage','acctmaintenancedelete');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting-maintenance.php\");\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n?>\n\n        \n<form action=\"<?php echo $_SERVER['PHP_SELF']; ?>\" method=\"post\">\n    <fieldset>\n\n        <h302> <?php echo t('title','DeleteRecords') ?> </h302>\n        <br/>\n\n        <label for='username' class='form'><?php echo t('all','Username')?></label>\n        <input name='username' type='text' id='username' value='<?php echo $username ?>' tabindex=100 />\n        <br />\n\n        <label for='startdate' class='form'><?php echo t('all','StartingDate')?></label>\n        <input name='startdate' type='text' id='startdate' value='<?php echo $startdate ?>' tabindex=100 />\n        <img src=\"library/js_date/calendar.gif\" onclick=\n        \"showChooser(this, 'startdate', 'chooserSpan', 1950, <?php echo date('Y', time());?>, 'Y-m-d H:i:s', true);\" >\n        <br />\n\n        <label for='enddate' class='form'><?php echo t('all','EndingDate')?></label>\n        <input name='enddate' type='text' id='enddate' value='<?php echo $enddate ?>' tabindex=100 />\n        <img src=\"library/js_date/calendar.gif\" onclick=\n        \"showChooser(this, 'enddate', 'chooserSpan', 1950, <?php echo date('Y', time());?>, 'Y-m-d H:i:s', true);\" >\n        <br />\n\n        <br/><br/>\n        <hr><br/>\n        <input type=\"submit\" name=\"submit\" value=\"<?php echo t('buttons','apply') ?>\" tabindex=1000 class='button' />\n\n    </fieldset>\n\n    <div id=\"chooserSpan\" class=\"dateChooser select-free\" \n        style=\"display: none; visibility: hidden; width: 160px;\">\n    </div>\n\n</form>\n\n        </div><!-- #contentnorightbar -->\n        \n        <div id=\"footer\">\n<?php\n    include('include/config/logging.php');\n    include('page-footer.php');\n?>\n        </div><!-- #footer -->\n    </div>\n</div>\n\n</body>\n</html>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/include/management/contactinfo.php') !== false) {\n    header(\"Location: ../../index.php\");\n    exit;\n}\n\n$input_descriptors1 = array();\n$input_descriptors1[] = array( \"name\" => \"ownername\", \"caption\" => t('ContactInfo','OwnerName'),\n                               \"type\" => \"text\", \"value\" => ((isset($owner)) ? $owner : \"\"), );\n$input_descriptors1[] = array( \"name\" => \"emailowner\", \"caption\" => t('ContactInfo','OwnerEmail'),\n                               \"type\" => \"text\", \"value\" => ((isset($email_owner)) ? $email_owner : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"managername\", \"caption\" => t('ContactInfo','ManagerName'),\n                               \"type\" => \"text\", \"value\" => ((isset($manager)) ? $manager : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"emailmanager\", \"caption\" => t('ContactInfo','ManagerEmail'),\n                               \"type\" => \"text\", \"value\" => ((isset($email_manager)) ? $email_manager : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"company\", \"caption\" => t('ContactInfo','Company'),\n                               \"type\" => \"text\", \"value\" => ((isset($company)) ? $company : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"address\", \"caption\" => t('ContactInfo','Address'),\n                               \"type\" => \"textarea\", \"content\" => ((isset($address)) ? $address : \"\"), );                               \n$input_descriptors1[] = array( \"name\" => \"phone1\", \"caption\" => t('ContactInfo','Phone1'),\n                               \"type\" => \"text\", \"value\" => ((isset($phone1)) ? $phone1 : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"phone2\", \"caption\" => t('ContactInfo','Phone2'),\n                               \"type\" => \"text\", \"value\" => ((isset($phone2)) ? $phone2 : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"hotspot_type\", \"caption\" => t('ContactInfo','HotspotType'),\n                               \"type\" => \"text\", \"value\" => ((isset($hotspot_type)) ? $hotspot_type : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"companywebsite\", \"caption\" => t('ContactInfo','CompanyWebsite'),\n                               \"type\" => \"text\", \"value\" => ((isset($companywebsite)) ? $companywebsite : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"companyemail\", \"caption\" => t('ContactInfo','CompanyEmail'),\n                               \"type\" => \"text\", \"value\" => ((isset($companyemail)) ? $companyemail : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"companyphone\", \"caption\" => t('ContactInfo','CompanyPhone'),\n                               \"type\" => \"text\", \"value\" => ((isset($companyphone)) ? $companyphone : \"\") , );\n$input_descriptors1[] = array( \"name\" => \"companycontact\", \"caption\" => t('ContactInfo','CompanyContact'),\n                               \"type\" => \"text\", \"value\" => ((isset($companycontact)) ? $companycontact : \"\") , );\n\n$input_descriptors2 = array();\n$input_descriptors2[] = array( 'name' => 'creationdate', 'caption' => t('all','CreationDate'), 'type' => 'text',\n                               'disabled' => true, 'value' => ((isset($creationdate)) ? $creationdate : '') );\n$input_descriptors2[] = array( 'name' => 'creationby', 'caption' => t('all','CreationBy'), 'type' => 'text',\n                               'disabled' => true, 'value' => ((isset($creationby)) ? $creationby : '') );\n$input_descriptors2[] = array( 'name' => 'updatedate', 'caption' => t('all','UpdateDate'), 'type' => 'text',\n                               'disabled' => true, 'value' => ((isset($updatedate)) ? $updatedate : '') );\n$input_descriptors2[] = array( 'name' => 'updateby', 'caption' => t('all','UpdateBy'), 'type' => 'text',\n                               'disabled' => true, 'value' => ((isset($updateby)) ? $updateby : '') );\n\n$button_descriptor = array(\n                            \"type\" => \"submit\",\n                            \"name\" => \"submit\",\n                            \"value\" => t('buttons','apply')\n                          );\n\n?>\n\n<fieldset>\n    <h302>Contact Info</h302>\n    <h301>Contact Info</h301>\n\n    <ul>\n<?php\n\n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n\n?>\n    </ul>\n</fieldset>\n\n<fieldset>\n    <h302>Other</h302>\n    <h301>Other</h301>\n    <ul>\n<?php\n\n    foreach ($input_descriptors2 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n\n?>\n    </ul>\n</fieldset>\n\n<?php\n    print_form_component($button_descriptor);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n\n    include('library/opendb.php');\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $name = (array_key_exists('name', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['name']))))\n              ? str_replace(\"%\", \"\", trim($_POST['name']))) : \"\";\n    } else {\n        $name = (array_key_exists('name', $_REQUEST) && !empty(str_replace(\"%\", \"\", trim($_REQUEST['name']))))\n              ? str_replace(\"%\", \"\", trim($_REQUEST['name'])) : \"\";\n    }\n\n    // check if it exists\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                               $dbSocket->escapeSimple($name));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    $exists = $res->fetchrow()[0] > 0;\n    \n    if (!$exists) {\n        // we empty the name if the hs does not exist\n        $name = \"\";\n    }\n\n    // from now on we can assume that $name is valid\n    $name_enc = (!empty($name)) ? htmlspecialchars($name, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    //feed the sidebar variables\n    $edit_hotspotname = $name_enc;\n    \n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            if (!empty($name)) {\n                $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                               (filter_var($_POST['macaddress'], FILTER_VALIDATE_MAC) ||\n                                filter_var($_POST['macaddress'], FILTER_VALIDATE_IP)))\n                            ? $_POST['macaddress'] : \"\";\n                \n                // we check that this MAC/IP addr is not assigned to any other HS\n                $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE mac='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                                          $dbSocket->escapeSimple($macaddress));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                $exists = $res->fetchrow()[0] > 0;\n                \n                if (!$exists) {\n                    $currDate = date('Y-m-d H:i:s');\n                    $currBy = $_SESSION['operator_user'];\n                    \n                    $geocode = (array_key_exists('geocode', $_POST) && isset($_POST['geocode'])) ? trim($_POST['geocode']) : \"\";\n                    $hotspot_type = (array_key_exists('hotspot_type', $_POST) && isset($_POST['hotspot_type'])) ? trim($_POST['hotspot_type']) : \"\";\n                                \n                    $owner = (array_key_exists('owner', $_POST) && isset($_POST['owner'])) ? trim($_POST['owner']) : \"\";\n                    $manager = (array_key_exists('manager', $_POST) && isset($_POST['manager'])) ? trim($_POST['manager']) : \"\";\n                    $email_manager = (array_key_exists('email_manager', $_POST) && isset($_POST['email_manager'])) ? trim($_POST['email_manager']) : \"\";\n                    $email_owner = (array_key_exists('email_owner', $_POST) && isset($_POST['email_owner'])) ? trim($_POST['email_owner']) : \"\";\n                    $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? trim($_POST['address']) : \"\";\n                    $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? trim($_POST['company']) : \"\";\n                    $phone1 = (array_key_exists('phone1', $_POST) && isset($_POST['phone1'])) ? trim($_POST['phone1']) : \"\";\n                    $phone2 = (array_key_exists('phone2', $_POST) && isset($_POST['phone2'])) ? trim($_POST['phone2']) : \"\";\n                    \n                    $companyphone = (array_key_exists('companyphone', $_POST) && isset($_POST['companyphone'])) ? trim($_POST['companyphone']) : \"\";\n                    $companywebsite = (array_key_exists('companywebsite', $_POST) && isset($_POST['companywebsite'])) ? trim($_POST['companywebsite']) : \"\";\n                    $companyemail = (array_key_exists('companyemail', $_POST) && isset($_POST['companyemail'])) ? trim($_POST['companyemail']) : \"\";\n                    $companycontact = (array_key_exists('companycontact', $_POST) && isset($_POST['companycontact'])) ? trim($_POST['companycontact']) : \"\";\n                    \n                    $sql = sprintf(\"UPDATE %s SET mac='%s', geocode='%s', owner='%s', email_owner='%s', manager='%s', email_manager='%s',\n                                                  address='%s', company='%s', phone1='%s', phone2='%s', type='%s', companywebsite='%s',\n                                                  companyemail='%s', companycontact='%s', companyphone='%s', updatedate='%s', updateby='%s'\n                                            WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                   $dbSocket->escapeSimple($macaddress), $dbSocket->escapeSimple($geocode), $dbSocket->escapeSimple($owner),\n                                   $dbSocket->escapeSimple($email_owner), $dbSocket->escapeSimple($manager), $dbSocket->escapeSimple($email_manager),\n                                   $dbSocket->escapeSimple($address), $dbSocket->escapeSimple($company), $dbSocket->escapeSimple($phone1),\n                                   $dbSocket->escapeSimple($phone2), $dbSocket->escapeSimple($hotspot_type), $dbSocket->escapeSimple($companywebsite),\n                                   $dbSocket->escapeSimple($companyemail) , $dbSocket->escapeSimple($companycontact),\n                                   $dbSocket->escapeSimple($companyphone), $currDate, $currBy, $dbSocket->escapeSimple($name));\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (DB::isError($res)) {\n                        // it seems that operator could not be added\n                        $f = \"Failed to update this hotspot [%s]\";\n                        $failureMsg = sprintf($f, $name_enc);\n                        $logAction .= sprintf($f, $name);\n                    } else {\n                        $successMsg = sprintf(\"Updated hotspot: <strong>%s</strong>\", $name_enc);\n                        $logAction .= sprintf(\"Successfully updated hotspot [%s] on page: \", $name);\n                    }\n                    \n                } else {\n                    // MAC/IP already taken\n                    $failureMsg = \"MAC/IP address already in use\";\n                    $logAction .= \"Failed updating (possible duplicate MAC/IP addr) HS on page: \";\n                }\n                \n            } else {\n                // invalid or empty\n                $failureMsg = \"Hotspot name is invalid or empty\";\n                $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n            }\n            \n        } else {\n            // csrf\n            $name = \"\";\n            $failureMsg = sprintf(\"CSRF token error\");\n            $logAction .= sprintf(\"CSRF token error on page: \");\n        }\n        \n    }\n    \n    \n    if (empty($name)) {\n        $failureMsg = \"Hotspot name is invalid or empty\";\n        $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n    } else {\n        /* fill-in all the hs settings */\n        $sql = sprintf(\"SELECT id, name, mac, geocode, owner, email_owner, manager, email_manager, address, company,\n                               phone1, phone2, type, companywebsite, companyemail, companycontact, companyphone,\n                               creationdate, creationby, updatedate, updateby\n                          FROM %s\n                         WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                               $dbSocket->escapeSimple($name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        list(\n                $id, $name, $macaddress, $geocode, $owner, $email_owner, $manager, $email_manager, $address, $company, $phone1,\n                $phone2, $type, $companywebsite, $companyemail, $companycontact, $companyphone,\n                $creationdate, $creationby, $updatedate, $updateby\n            ) = $res->fetchRow();\n    }\n\n    include('library/closedb.php');\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/pages_common.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mnghsedit.php');\n    $help = t('helpPage','mnghsedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    if (!empty($name_enc)) {\n        $title .= \" :: $name_enc\";\n    } \n\n    include(\"menu-mng-hs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($name)) {\n    \n        // set form component descriptors\n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $name_enc,\n                                        \"name\" => \"name\"\n                                     );\n\n        $input_descriptors0[] = array(\n                                        \"name\" => \"name_presentation\",\n                                        \"caption\" => t('all','HotSpotName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($name)) ? $name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotNameTooltip'),\n                                        \"disabled\" => true\n                                     );\n                                    \n        $input_descriptors0[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($macaddress)) ? $macaddress : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotMacaddressTooltip')\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"geocode\",\n                                        \"caption\" => t('all','Geocode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($geocode)) ? $geocode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                  );\n        \n        // set navbar stuff\n        $navkeys = array( 'HotspotInfo', 'ContactInfo', );\n        \n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','HotspotInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        include_once('include/management/contactinfo.php');\n        \n        close_tab($navkeys, 1);\n        \n        close_form();\n        \n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once('library/config_read.php');\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                           (filter_var($_POST['macaddress'], FILTER_VALIDATE_MAC) ||\n                            filter_var($_POST['macaddress'], FILTER_VALIDATE_IP)))\n                        ? $_POST['macaddress'] : \"\";\n            \n            $name = (array_key_exists('name', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['name']))))\n                  ? str_replace(\"%\", \"\", trim($_POST['name'])) : \"\";\n            $name_enc = (!empty($name)) ? htmlspecialchars($name, ENT_QUOTES, 'UTF-8') : \"\";\n            \n            $geocode = (array_key_exists('geocode', $_POST) && isset($_POST['geocode'])) ? trim($_POST['geocode']) : \"\";\n            $hotspot_type = (array_key_exists('hotspot_type', $_POST) && isset($_POST['hotspot_type'])) ? trim($_POST['hotspot_type']) : \"\";\n                        \n            $owner = (array_key_exists('owner', $_POST) && isset($_POST['owner'])) ? trim($_POST['owner']) : \"\";\n            $manager = (array_key_exists('manager', $_POST) && isset($_POST['manager'])) ? trim($_POST['manager']) : \"\";\n            $email_manager = (array_key_exists('email_manager', $_POST) && isset($_POST['email_manager'])) ? trim($_POST['email_manager']) : \"\";\n            $email_owner = (array_key_exists('email_owner', $_POST) && isset($_POST['email_owner'])) ? trim($_POST['email_owner']) : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? trim($_POST['address']) : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? trim($_POST['company']) : \"\";\n            $phone1 = (array_key_exists('phone1', $_POST) && isset($_POST['phone1'])) ? trim($_POST['phone1']) : \"\";\n            $phone2 = (array_key_exists('phone2', $_POST) && isset($_POST['phone2'])) ? trim($_POST['phone2']) : \"\";\n            \n            $companyphone = (array_key_exists('companyphone', $_POST) && isset($_POST['companyphone'])) ? trim($_POST['companyphone']) : \"\";\n            $companywebsite = (array_key_exists('companywebsite', $_POST) && isset($_POST['companywebsite'])) ? trim($_POST['companywebsite']) : \"\";\n            $companyemail = (array_key_exists('companyemail', $_POST) && isset($_POST['companyemail'])) ? trim($_POST['companyemail']) : \"\";\n            $companycontact = (array_key_exists('companycontact', $_POST) && isset($_POST['companycontact'])) ? trim($_POST['companycontact']) : \"\";\n            \n            include('library/opendb.php');\n            \n            if (empty($macaddress) || empty($name)) {\n                // if statement returns false which means that the user has left an empty field for\n                // either macaddress, name, or both\n\n                $failureMsg = \"IP/MAC address or name is empty or not valid\";\n                $logAction .= \"Failed adding (possible empty IP/MAC addr and/or name) new HS on page: \";\n            } else {\n                $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE name='%s' OR mac='%s'\",\n                               $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                               $dbSocket->escapeSimple($name), $dbSocket->escapeSimple($mac));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                $exists = $res->fetchrow()[0] > 0;\n                \n                if ($exists) {\n                    // if statement returns false which means there is at least one HS\n                    // in the database with the same name or macaddress\n\n                    $failureMsg = sprintf(\"Name <strong>%s</strong> or IP/MAC address <strong>%s</strong> already exist in database\", $name_enc, $macaddress);\n                    $logAction .= \"Failed adding new HS. Name or IP/MAC address already existing in database [$name, $macaddress] on page: \";\n                } else {\n                    $currDate = date('Y-m-d H:i:s');\n                    $currBy = $_SESSION['operator_user'];\n                    \n                    $sql = sprintf(\"INSERT INTO %s (id, name, mac, geocode, owner, email_owner, manager, email_manager, address,\n                                                    company, phone1, phone2, type, companywebsite, companyemail, companycontact,\n                                                    companyphone, creationdate, creationby, updatedate, updateby)\n                                            VALUES (0, '%s', '%s', '%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s',\n                                                    '%s', '%s', '%s', NULL, NULL)\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                   $dbSocket->escapeSimple($name), $dbSocket->escapeSimple($macaddress), $dbSocket->escapeSimple($geocode),\n                                   $dbSocket->escapeSimple($owner), $dbSocket->escapeSimple($email_owner), $dbSocket->escapeSimple($manager),\n                                   $dbSocket->escapeSimple($email_manager), $dbSocket->escapeSimple($address), $dbSocket->escapeSimple($company),\n                                   $dbSocket->escapeSimple($phone1), $dbSocket->escapeSimple($phone2), $dbSocket->escapeSimple($hotspot_type),\n                                   $dbSocket->escapeSimple($companywebsite), $dbSocket->escapeSimple($companyemail),\n                                   $dbSocket->escapeSimple($companycontact), $dbSocket->escapeSimple($companyphone), $currDate, $currBy);\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (DB::isError($res)) {\n                        // it seems that operator could not be added\n                        $f = \"Failed to add this new hotspot [%s] to database\";\n                        $failureMsg = sprintf($f, $name_enc);\n                        $logAction .= sprintf($f, $name);\n                    } else {\n                        $successMsg = sprintf(\"Added to database new hotspot: <strong>%s</strong>\", $name_enc);\n                        $logAction .= sprintf(\"Successfully added new hotspot [%s] on page: \", $name);\n                    }\n                }\n                \n            }\n            \n            include('library/closedb.php');\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/pages_common.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n\n    $title = t('Intro','mnghsnew.php');\n    $help = t('helpPage','mnghsnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-hs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n\n    if (!isset($successMsg)) {\n\n        // set form component descriptors\n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"name\",\n                                        \"caption\" => t('all','HotSpotName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($name)) ? $name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotNameTooltip')\n                                     );\n                                    \n        $input_descriptors0[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($macaddress)) ? $macaddress : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotMacaddressTooltip')\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"geocode\",\n                                        \"caption\" => t('all','Geocode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($geocode)) ? $geocode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                     );\n        \n        $input_descriptors0[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                     );\n\n        // set navbar stuff\n        $navkeys = array( 'HotspotInfo', 'ContactInfo', );\n        \n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','HotspotInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        include_once('include/management/contactinfo.php');\n        \n        close_tab($navkeys, 1);\n        \n        close_form();\n\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n"], "fixing_code": ["<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    // validate this parameter before including menu\n    $username = (array_key_exists('username', $_GET) && !empty(str_replace(\"%\", \"\", trim($_GET['username']))))\n              ? str_replace(\"%\", \"\", trim($_GET['username'])) : \"\";\n    $username_enc = (!empty($username)) ? htmlspecialchars($username, ENT_QUOTES, 'UTF-8') : \"\";\n\n    $startdate = (array_key_exists('startdate', $_GET) && !empty(trim($_GET['startdate'])) &&\n                  preg_match(DATE_REGEX, trim($_GET['startdate']), $m) !== false &&\n                  checkdate($m[2], $m[3], $m[1]))\n               ? trim($_GET['startdate']) : \"\";\n\n    $enddate = (array_key_exists('enddate', $_GET) && !empty(trim($_GET['enddate'])) &&\n                preg_match(DATE_REGEX, trim($_GET['enddate']), $m) !== false &&\n                checkdate($m[2], $m[3], $m[1]))\n             ? trim($_GET['enddate']) : \"\";\n    \n    //feed the sidebar variables\n    $accounting_date_username = $username_enc;\n    $accounting_date_startdate = $startdate;\n    $accounting_date_enddate = $enddate;\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logQuery = \"performed query for user [$username] and start date [$startdate] and end date [$enddate] on page: \";\n    $logDebugSQL = \"\";\n\n\n    $extra_js = array(\n        \"library/javascript/ajax.js\",\n        \"library/javascript/ajaxGeneric.js\",\n        \"library/javascript/pages_common.js\",\n    );\n\n    // print HTML prologue\n    $title = t('Intro','acctdate.php');\n    $help = t('helpPage','acctdate');\n\n    print_html_prologue($title, $langCode, array(), $extra_js);\n    \n    include(\"menu-accounting.php\");\n\n    $cols = array(\n                    \"radacctid\" => t('all','ID'),\n                    \"hotspot\" => t('all','HotSpot'),\n                    \"nasipaddress\" => t('all','NASIPAddress'),\n                    \"username\" => t('all','Username'),\n                    \"framedipaddress\" => t('all','IPAddress'),\n                    \"acctstarttime\" => t('all','StartTime'),\n                    \"acctstoptime\" => t('all','StopTime'),\n                    \"acctsessiontime\" => t('all','TotalTime'),\n                    \"acctinputoctets\" => sprintf(\"%s (%s)\", t('all','Upload'), t('all','Bytes')),\n                    \"acctoutputoctets\" => sprintf(\"%s (%s)\", t('all','Download'), t('all','Bytes')),\n                    \"acctterminatecause\" => t('all','Termination'),\n                 );\n    $colspan = count($cols);\n    $half_colspan = intval($colspan / 2);\n    \n    $orderBy = (array_key_exists('orderBy', $_GET) && !empty($_GET['orderBy']) &&\n                in_array($_GET['orderBy'], array_keys($cols)))\n             ? $_GET['orderBy'] : array_keys($cols)[0];\n\n    $orderType = (array_key_exists('orderType', $_GET) && !empty($_GET['orderType']) &&\n                  preg_match(ORDER_TYPE_REGEX, $_GET['orderType']) !== false)\n               ? strtolower($_GET['orderType']) : \"asc\";\n\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n\n    // we can only use the $dbSocket after we have included 'library/opendb.php' which initialzes the connection and the $dbSocket object\n    include('library/opendb.php');\n    include('include/management/pages_common.php');\n\n    $sql_WHERE = array();\n    $partial_query_params = array();\n\n    if (!empty($startdate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $dbSocket->escapeSimple($startdate));\n        $partial_query_params[] = sprintf(\"startdate=%s\", $startdate);\n    }\n\n    if (!empty($enddate)) {\n        $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $dbSocket->escapeSimple($enddate));\n        $partial_query_params[] = sprintf(\"enddate=%s\", $enddate);\n    }\n\n    if (!empty($username)) {\n        $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n        $partial_query_params[] = sprintf(\"username=%s\", urlencode($username_enc));\n\n        // setup php session variables for exporting\n        $_SESSION['reportTable'] = $configValues['CONFIG_DB_TBL_RADACCT'];\n        $_SESSION['reportQuery'] = (count($sql_WHERE) > 0) ? \" WHERE \" . implode(\" AND \", $sql_WHERE) : \"\";\n        $_SESSION['reportType'] = \"accountingGeneric\";\n\n    \n        $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n        if (count($sql_WHERE) > 0) {\n            $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n        }\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        $numrows = $res->fetchrow()[0];\n        \n        if ($numrows > 0) {\n            /* START - Related to pages_numbering.php */\n            \n            // when $numrows is set, $maxPage is calculated inside this include file\n            include('include/management/pages_numbering.php');    // must be included after opendb because it needs to read\n                                                                  // the CONFIG_IFACE_TABLES_LISTING variable from the config file\n            \n            // here we decide if page numbers should be shown\n            $drawNumberLinks = strtolower($configValues['CONFIG_IFACE_TABLES_LISTING_NUM']) == \"yes\" && $maxPage > 1;\n            \n            $sql = sprintf(\"SELECT ra.RadAcctId, dhs.name AS hotspot, ra.username, ra.FramedIPAddress, ra.AcctStartTime,\n                                   ra.AcctStopTime, ra.AcctSessionTime, ra.AcctInputOctets, ra.AcctOutputOctets,\n                                   ra.AcctTerminateCause, ra.NASIPAddress\n                              FROM %s AS ra LEFT JOIN %s AS dhs ON ra.calledstationid=dhs.mac\",\n                           $configValues['CONFIG_DB_TBL_RADACCT'], $configValues['CONFIG_DB_TBL_DALOHOTSPOTS']);\n            if (count($sql_WHERE) > 0) {\n                $sql .= \" WHERE \" . implode(\" AND \", $sql_WHERE);\n            }\n\n            $sql .= sprintf(\" ORDER BY %s %s LIMIT %s, %s\", $orderBy, $orderType, $offset, $rowsPerPage);\n            $res = $dbSocket->query($sql);\n            $logDebugSQL .= \"$sql;\\n\";\n            \n            $per_page_numrows = $res->numRows();\n\n    \n            $partial_query_string = (count($partial_query_params) > 0)\n                                  ? (\"&\" . implode(\"&\", $partial_query_params)) : \"\";\n?>\n<table border=\"0\" class=\"table1\">\n    <thead>\n        <tr style=\"background-color: white\">\n<?php\n            // page numbers are shown only if there is more than one page\n            if ($drawNumberLinks) {\n                printf('<td style=\"text-align: left\" colspan=\"%s\">go to page: ', $half_colspan + ($colspan % 2));\n                setupNumbering($numrows, $rowsPerPage, $pageNum, $orderBy, $orderType, $partial_query_string);\n                echo '</td>';\n            }\n?>\n            <td style=\"text-align: right\" colspan=\"<?= ($drawNumberLinks) ? $half_colspan : $colspan ?>\">\n                <input class=\"button\" type=\"button\" value=\"CSV Export\"\n                    onclick=\"location.href='include/management/fileExport.php?reportFormat=csv'\">\n            </td>\n\n        </tr>\n\n<?php\n            // second line of table header\n            echo \"<tr>\";\n            printTableHead($cols, $orderBy, $orderType, $partial_query_string);\n            echo \"</tr>\";\n?>\n    </thead>\n\n<?php\n            echo '<tbody>';\n\n            \n            $li_style = 'margin: 7px auto';\n            $trs = array();\n\n            while ($row = $res->fetchRow()) {\n                \n                list(\n                        $radacctid, $hotspot, $username, $framedipaddress,\n                        $acctstarttime, $acctstoptime, $acctsessiontime, $acctinputoctets,\n                        $acctoutputoctets, $acctterminatecause, $nasipaddress\n                    ) = $row;\n                \n                $tr = array();\n                \n                // radacctid\n                $tr[] = intval($radacctid);\n                \n                // hotspot\n                $hotspot = htmlspecialchars($hotspot, ENT_QUOTES, 'UTF-8');\n                $onclick = \"ajaxGeneric('include/management/retHotspotInfo.php','retHotspotGeneralStat','divContainerHotspotInfo'\"\n                         . sprintf(\",'hotspot=%s');return false;\", $hotspot);\n                $tooltip = '<ul style=\"list-style-type: none\">'\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"mng-hs-edit.php?name=%s\">%s</a></li>',\n                                   $li_style, urlencode($hotspot), t('Tooltip','HotspotEdit'))\n                         . sprintf('<li style=\"%s\"><a class=\"toolTip\" href=\"acct-hotspot-compare.php\">%s</a></li>',\n                                   $li_style, t('all','Compare'))\n                         . '</ul>'\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerHotspotInfo\">Loading...</div>';\n                \n                $tr[] = sprintf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a>\",\n                                $onclick, $tooltip, $hotspot);\n                \n                // nasipaddress\n                $tr[] = htmlspecialchars($nasipaddress, ENT_QUOTES, 'UTF-8');\n                \n                // username\n                $username = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n                $onclick = \"javascript:ajaxGeneric('include/management/retUserInfo.php','retBandwidthInfo','divContainerUserInfo',\"\n                         . sprintf(\"'username=%s');return false;\", $username);\n                $tooltip = sprintf('<a class=\"toolTip\" href=\"mng-edit.php?username=%s\">%s</a>', urlencode($username), t('Tooltip','UserEdit'))\n                         . '<div style=\"margin: 15px auto\" id=\"divContainerUserInfo\">Loading...</div>';\n                $tr[] = sprintf('<a class=\"tablenovisit\" href=\"#\" onclick=\"%s\" ' . \"tooltipText='%s'>%s</a>\",\n                                $onclick, $tooltip, $username);\n                \n                // other values\n                $tr[] = htmlspecialchars($framedipaddress, ENT_QUOTES, 'UTF-8');\n                $tr[] = htmlspecialchars($acctstarttime, ENT_QUOTES, 'UTF-8');\n                $tr[] = htmlspecialchars($acctstoptime, ENT_QUOTES, 'UTF-8');\n                $tr[] = time2str($acctsessiontime);\n                $tr[] = toxbyte($acctinputoctets);\n                $tr[] = toxbyte($acctoutputoctets);\n                $tr[] = htmlspecialchars($acctterminatecause, ENT_QUOTES, 'UTF-8');\n                \n                $trs[] = $tr;\n            }\n\n            // draw tr(s)\n            $simple_td_format = '<td>%s</td>' . \"\\n\";\n\n            foreach ($trs as $tr) {\n                echo '<tr>';\n                \n                foreach ($tr as $td) {\n                    printf($simple_td_format, $td);\n                }\n                \n                echo '</tr>';\n            }\n\n            echo '</tbody>';\n\n            // tfoot\n            $links = setupLinks_str($pageNum, $maxPage, $orderBy, $orderType, $partial_query_string);\n            printTableFoot($per_page_numrows, $numrows, $colspan, $drawNumberLinks, $links);\n\n            echo '</table>';\n            \n        } else {\n            $failureMsg = \"Nothing to display\";\n        }\n    \n        include_once('include/management/userReports.php');\n        userPlanInformation($username, 1);\n        userSubscriptionAnalysis($username, 1);                 // userSubscriptionAnalysis with argument set to 1 for drawing the table\n        userConnectionStatus($username, 1);                     // userConnectionStatus (same as above)\n    \n    } else {\n        $failureMsg = \"Please specify a valid username\";\n    }\n    \n    include_once(\"include/management/actionMessages.php\");\n    \n    include('library/closedb.php');\n\n    include('include/config/logging.php');\n    \n    $inline_extra_js = \"\nvar tooltipObj = new DHTMLgoodies_formTooltip();\ntooltipObj.setTooltipPosition('right');\ntooltipObj.setPageBgColor('#EEEEEE');\ntooltipObj.setTooltipCornerSize(15);\ntooltipObj.initFormFieldTooltip();\n\nwindow.onload = function() { setupAccordion() };\n\";\n    \n    print_footer_and_html_epilogue($inline_extra_js);\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Miguel Garc\u00eda <miguelvisgarcia@gmail.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n\n\n    include('library/opendb.php');\n    \n    // valid min/max dates\n    $sql = sprintf(\"SELECT DATE(MIN(acctstarttime)), DATE(MAX(acctstarttime)) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    list($mindate, $maxdate) = $res->fetchrow();\n    \n    // valid usernames\n    $sql = sprintf(\"SELECT DISTINCT(username) FROM %s ORDER BY username ASC\", $configValues['CONFIG_DB_TBL_RADACCT']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $valid_usernames = array();\n    while ($row = $res->fetchrow()) {\n        $valid_usernames[] = $row[0];\n    }\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            $username = (array_key_exists('username', $_POST) && !empty(trim($_POST['username'])) &&\n                         in_array(trim($_POST['username']), $valid_usernames))\n                      ? trim($_POST['username']) : \"\";\n            \n            $enddate = (array_key_exists('enddate', $_POST) && isset($_POST['enddate']) &&\n                        preg_match(DATE_REGEX, $_POST['enddate'], $m) !== false &&\n                        checkdate($m[2], $m[3], $m[1]))\n                     ? $_POST['enddate'] : \"\";\n                     \n            if (!empty($username)) {\n                \n                $username_enc = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n                \n                $sql = sprintf(\"SELECT COUNT(radacctid) FROM %s WHERE username='%s' AND acctstoptime IS NULL\",\n                               $configValues['CONFIG_DB_TBL_RADACCT'], $dbSocket->escapeSimple($username));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                $numrows = intval($res->fetchrow()[0]);\n                \n                if ($numrows > 0) {\n                    $sql = sprintf(\"UPDATE %s SET acctstoptime=NOW(), acctterminatecause='Admin-Reset'\n                                     WHERE username='%s' AND acctstoptime IS NULL\",\n                                   $configValues['CONFIG_DB_TBL_RADACCT'],\n                                   $dbSocket->escapeSimple($username)); \n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n\n                    if (!DB::isError($res)) {\n                        $successMsg = \"Cleaned up stale sessions for user: $username_enc\";\n                        $logAction .= \"Successfully cleaned up stale sessions for username [$username] on page: \";\n                    } else {\n                        $failureMsg = \"Cannot clean up stale sessions for user: $username_enc\";\n                        $logAction .= \"$failureMsg page: \";\n                    }\n\n                } else {\n                    // nothing to delete\n                    $failureMsg = \"There are no stale sessions for user [$username_enc]\";\n                    $logAction .= \"Cannot clean up stale sessions for user $username [no stale sessions for this user] on page: \";\n                }\n                \n            } else if (!empty($enddate)) {\n                if ($enddate >= $mindate && $enddate <= $maxdate) {\n                \n                    // delete all stale sessions in the database that occur until $enddate\n                    $sql = sprintf(\"DELETE FROM %s\n                                          WHERE acctstarttime < '%s'\n                                            AND (acctstoptime = '0000-00-00 00:00:00' OR acctstoptime IS NULL)\",\n                                   $configValues['CONFIG_DB_TBL_RADACCT'], $enddate);\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql\\n\";\n\n                    if (!DB::isError($res)) {\n                        $successMsg = \"Cleaned up stale sessions until date: $enddate\";\n                        $logAction .= \"Successfully cleaned up stale sessions until date [$enddate] on page: \";\n                    } else {\n                        $failureMsg = \"Cannot clean up stale sessions until date: $enddate\";\n                        $logAction .= \"$failureMsg page: \";\n                    }\n\n                    \n                } else {\n                    // invalid\n                    $failureMsg = \"Cannot clean up stale sessions: $enddate is invalid\";\n                    $logAction .= \"$failureMsg page: \";\n                }\n            } else {\n                // invalid\n                $failureMsg = \"Cannot clean up stale sessions: provided empty/invalid username or ending date\";\n                $logAction .= \"$failureMsg page: \";\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    include('library/closedb.php');\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n\n    $title = t('Intro','acctmaintenancecleanup.php');\n    $help = t('helpPage','acctmaintenancecleanup');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-accounting-maintenance.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    // set navbar stuff\n    $navkeys = array( 'CleanupRecordsByUsername', 'CleanupRecordsByDate', );\n\n    // print navbar controls\n    print_tab_header($navkeys);\n    \n    $options = $valid_usernames;\n    array_unshift($options , '');\n\n    $input_descriptors0 = array();\n    $input_descriptors0[] = array(\n                                    'name' => 'username',\n                                    'type' => 'select',\n                                    'caption' => t('all','Username'),\n                                    'options' => $options,\n                                    'selected_value' => $username\n                                 );\n    \n    $fieldset0_descriptor = array(\n                                    \"title\" => t('title','CleanupRecordsByUsername'),\n                                    \"disabled\" => (count($valid_usernames) == 0)\n                                 );           \n    \n    $input_descriptors1 = array();\n    $input_descriptors1[] = array(\n                                    'name' => 'enddate',\n                                    'caption' => t('all','CleanupSessions'),\n                                    'type' => 'date',\n                                    'value' => $enddate,\n                                    'min' => $mindate,\n                                    'max' => $maxdate,\n                                 );\n\n    $fieldset1_descriptor = array(\n                                    \"title\" => t('title','CleanupRecordsByDate'),\n                                    \"disabled\" => (count($valid_usernames) == 0)\n                                 );\n\n    open_form();\n    \n    // open tab 0\n    open_tab($navkeys, 0, true);\n    \n    open_fieldset($fieldset0_descriptor);\n\n    foreach ($input_descriptors0 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_tab($navkeys, 0);\n\n    // open tab 1\n    open_tab($navkeys, 1);\n    \n    open_fieldset($fieldset1_descriptor);\n\n    foreach ($input_descriptors1 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_tab($navkeys, 1);\n    \n    $input_descriptors2 = array();\n    $input_descriptors2[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n    \n    $input_descriptors2[] = array(\n                                    \"type\" => \"submit\",\n                                    \"name\" => \"submit\",\n                                    \"value\" => t('buttons','apply')\n                                  );\n\n    foreach ($input_descriptors2 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n\n    close_form();\n    \n    print_back_to_previous_page();\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n \n    include(\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n    \n    // init logging variables\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n    $log = \"visited page: \";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n    \n    include('library/opendb.php');\n    \n    // valid min/max dates\n    $sql = sprintf(\"SELECT DATE(MIN(acctstarttime)), DATE(MAX(acctstarttime)) FROM %s\", $configValues['CONFIG_DB_TBL_RADACCT']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    list($mindate, $maxdate) = $res->fetchrow();\n    \n    // valid usernames\n    $sql = sprintf(\"SELECT DISTINCT(username) FROM %s ORDER BY username ASC\", $configValues['CONFIG_DB_TBL_RADACCT']);\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n    \n    $valid_usernames = array();\n    while ($row = $res->fetchrow()) {\n        $valid_usernames[] = $row[0];\n    }\n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            $required_fields = array();\n            $sql_WHERE = array();\n            \n            $username = (array_key_exists('username', $_POST) && !empty(trim($_POST['username'])) &&\n                         in_array(trim($_POST['username']), $valid_usernames))\n                      ? trim($_POST['username']) : \"\";\n            if (empty($username)) {\n                $required_fields['username'] = t('all','Username');\n            } else {\n                $username_enc = htmlspecialchars($username, ENT_QUOTES, 'UTF-8');\n                $sql_WHERE[] = sprintf(\"username='%s'\", $dbSocket->escapeSimple($username));\n            }\n            \n            $startdate = (array_key_exists('startdate', $_POST) && isset($_POST['startdate']) &&\n                          preg_match(DATE_REGEX, $_POST['startdate'], $m) !== false &&\n                          checkdate($m[2], $m[3], $m[1]))\n                       ? $_POST['startdate'] : \"\";\n            if (empty($startdate)) {\n                $required_fields['startdate'] = t('all','StartingDate');\n            } else {\n                $sql_WHERE[] = sprintf(\"AcctStartTime > '%s'\", $startdate);\n            }\n            \n            $enddate = (array_key_exists('enddate', $_POST) && isset($_POST['enddate']) &&\n                        preg_match(DATE_REGEX, $_POST['enddate'], $m) !== false &&\n                        checkdate($m[2], $m[3], $m[1]))\n                     ? $_POST['enddate'] : \"\";\n            if (empty($enddate)) {\n                $required_fields['enddate'] = t('all','EndingDate');\n            } else {\n                $sql_WHERE[] = sprintf(\"AcctStartTime < '%s'\", $enddate);\n            }\n            \n            // further checks\n            if (!empty($startdate) && !empty($enddate) && $startdate >= $mindate && $enddate <= $maxdate && $startdate > $enddate) {\n                $required_fields['startdate'] = t('all','StartingDate');\n                $required_fields['enddate'] = t('all','EndingDate');\n            }\n            \n            if (count($required_fields) > 0) {\n                // required/invalid\n                $failureMsg = sprintf(\"Empty or invalid required field(s) [%s]\", implode(\", \", array_values($required_fields)));\n                $logAction .= \"$failureMsg on page: \";\n            } else {\n                \n                $sql = sprintf(\"DELETE FROM %s WHERE %s\", $configValues['CONFIG_DB_TBL_RADACCT'],\n                                                          implode(\" AND \", $sql_WHERE));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                if (!DB::isError($res)) {\n                    $successMsg = sprintf(\"Deleted accounting records for user %s [period: %s - %s]\",\n                                          $username_enc, $startdate, $enddate);\n                    $logAction .= \"$successMsg on page: \";\n                } else {\n                    $failureMsg = sprintf(\"Failed to deleted accounting records for user %s [period: %s - %s]\",\n                                          $username_enc, $startdate, $enddate);\n                    $logAction .= \"$failureMsg page: \";\n                }\n            }\n            \n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    include('library/closedb.php');\n    \n\n    // print HTML prologue\n    $title = t('Intro','acctmaintenancedelete.php');\n    $help = t('helpPage','acctmaintenancedelete');\n    \n    print_html_prologue($title, $langCode);\n\n    include(\"menu-accounting-maintenance.php\");\n    \n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    $options = $valid_usernames;\n    array_unshift($options , '');\n    \n    $input_descriptors0 = array();\n\n    $input_descriptors0[] = array(\n                                    'name' => 'username',\n                                    'type' => 'select',\n                                    'caption' => t('all','Username'),\n                                    'options' => $options,\n                                    'selected_value' => $username\n                                 );\n\n    $input_descriptors0[] = array(\n                                    'name' => 'startdate',\n                                    'caption' => t('all','StartingDate'),\n                                    'type' => 'date',\n                                    'value' => $startdate,\n                                    'min' => $mindate,\n                                    'max' => $maxdate,\n                                 );\n                                 \n    $input_descriptors0[] = array(\n                                    'name' => 'enddate',\n                                    'caption' => t('all','EndingDate'),\n                                    'type' => 'date',\n                                    'value' => $enddate,\n                                    'min' => $mindate,\n                                    'max' => $maxdate,\n                                 );\n                                 \n    $input_descriptors0[] = array(\n                                    \"name\" => \"csrf_token\",\n                                    \"type\" => \"hidden\",\n                                    \"value\" => dalo_csrf_token(),\n                                 );\n    \n    $input_descriptors0[] = array(\n                                    \"type\" => \"submit\",\n                                    \"name\" => \"submit\",\n                                    \"value\" => t('buttons','apply')\n                                  );\n    \n    $fieldset0_descriptor = array(\n                                    \"title\" => t('title','DeleteRecords'),\n                                    \"disabled\" => (count($valid_usernames) == 0)\n                                 );\n                                 \n    open_form();\n    \n    open_fieldset($fieldset0_descriptor);\n\n    foreach ($input_descriptors0 as $input_descriptor) {\n        print_form_component($input_descriptor);\n    }\n    \n    close_fieldset();\n    \n    close_form();\n\n    print_back_to_previous_page();\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n    \n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n * \n * Authors:        Liran Tal <liran@enginx.com>\n *                 Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n// prevent this file to be directly accessed\nif (strpos($_SERVER['PHP_SELF'], '/include/management/contactinfo.php') !== false) {\n    header(\"Location: ../../index.php\");\n    exit;\n}\n\n$_input_descriptors1 = array();\n$_input_descriptors1[] = array( \"name\" => \"ownername\", \"caption\" => t('ContactInfo','OwnerName'),\n                                \"type\" => \"text\", \"value\" => ((isset($owner)) ? $owner : \"\"), );\n$_input_descriptors1[] = array( \"name\" => \"emailowner\", \"caption\" => t('ContactInfo','OwnerEmail'),\n                                \"type\" => \"text\", \"value\" => ((isset($email_owner)) ? $email_owner : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"managername\", \"caption\" => t('ContactInfo','ManagerName'),\n                                \"type\" => \"text\", \"value\" => ((isset($manager)) ? $manager : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"emailmanager\", \"caption\" => t('ContactInfo','ManagerEmail'),\n                                \"type\" => \"text\", \"value\" => ((isset($email_manager)) ? $email_manager : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"company\", \"caption\" => t('ContactInfo','Company'),\n                                \"type\" => \"text\", \"value\" => ((isset($company)) ? $company : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"address\", \"caption\" => t('ContactInfo','Address'),\n                                \"type\" => \"textarea\", \"content\" => ((isset($address)) ? $address : \"\"), );                               \n$_input_descriptors1[] = array( \"name\" => \"phone1\", \"caption\" => t('ContactInfo','Phone1'),\n                                \"type\" => \"text\", \"value\" => ((isset($phone1)) ? $phone1 : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"phone2\", \"caption\" => t('ContactInfo','Phone2'),\n                                \"type\" => \"text\", \"value\" => ((isset($phone2)) ? $phone2 : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"hotspot_type\", \"caption\" => t('ContactInfo','HotspotType'),\n                                \"type\" => \"text\", \"value\" => ((isset($hotspot_type)) ? $hotspot_type : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"companywebsite\", \"caption\" => t('ContactInfo','CompanyWebsite'),\n                                \"type\" => \"text\", \"value\" => ((isset($companywebsite)) ? $companywebsite : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"companyemail\", \"caption\" => t('ContactInfo','CompanyEmail'),\n                                \"type\" => \"text\", \"value\" => ((isset($companyemail)) ? $companyemail : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"companyphone\", \"caption\" => t('ContactInfo','CompanyPhone'),\n                                \"type\" => \"text\", \"value\" => ((isset($companyphone)) ? $companyphone : \"\") , );\n$_input_descriptors1[] = array( \"name\" => \"companycontact\", \"caption\" => t('ContactInfo','CompanyContact'),\n                                \"type\" => \"text\", \"value\" => ((isset($companycontact)) ? $companycontact : \"\") , );\n\n\n$_fieldset1_descriptor = array(\n                                \"title\" => t('title','ContactInfo'),\n                              );\n                          \nopen_fieldset($_fieldset1_descriptor);\n\nforeach ($_input_descriptors1 as $input_descriptor) {\n    print_form_component($input_descriptor);\n}\n\nclose_fieldset();\n\n\n$_input_descriptors2 = array();\n$_input_descriptors2[] = array( 'name' => 'creationdate', 'caption' => t('all','CreationDate'), 'type' => 'text',\n                                'disabled' => true, 'value' => ((isset($creationdate)) ? $creationdate : '') );\n$_input_descriptors2[] = array( 'name' => 'creationby', 'caption' => t('all','CreationBy'), 'type' => 'text',\n                                'disabled' => true, 'value' => ((isset($creationby)) ? $creationby : '') );\n$_input_descriptors2[] = array( 'name' => 'updatedate', 'caption' => t('all','UpdateDate'), 'type' => 'text',\n                                'disabled' => true, 'value' => ((isset($updatedate)) ? $updatedate : '') );\n$_input_descriptors2[] = array( 'name' => 'updateby', 'caption' => t('all','UpdateBy'), 'type' => 'text',\n                                'disabled' => true, 'value' => ((isset($updateby)) ? $updateby : '') );\n\n$_fieldset2_descriptor = array(\n                                \"title\" => \"Other\",\n                              );\n\nopen_fieldset($_fieldset2_descriptor);\n\nforeach ($_input_descriptors2 as $input_descriptor) {\n    print_form_component($input_descriptor);\n}\n\nclose_fieldset();\n\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n    include_once('library/config_read.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once(\"lang/main.php\");\n    include(\"library/validation.php\");\n    include(\"library/layout.php\");\n    \n\n    include('library/opendb.php');\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        $name = (array_key_exists('name', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['name']))))\n              ? str_replace(\"%\", \"\", trim($_POST['name'])) : \"\";\n    } else {\n        $name = (array_key_exists('name', $_REQUEST) && !empty(str_replace(\"%\", \"\", trim($_REQUEST['name']))))\n              ? str_replace(\"%\", \"\", trim($_REQUEST['name'])) : \"\";\n    }\n\n    // check if it exists\n    $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                               $dbSocket->escapeSimple($name));\n    $res = $dbSocket->query($sql);\n    $logDebugSQL .= \"$sql;\\n\";\n\n    $exists = $res->fetchrow()[0] > 0;\n    \n    if (!$exists) {\n        // we empty the name if the hs does not exist\n        $name = \"\";\n    }\n\n    // from now on we can assume that $name is valid\n    $name_enc = (!empty($name)) ? htmlspecialchars($name, ENT_QUOTES, 'UTF-8') : \"\";\n    \n    //feed the sidebar variables\n    $edit_hotspotname = $name_enc;\n    \n    \n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n            \n            if (!empty($name)) {\n                $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                               (filter_var($_POST['macaddress'], FILTER_VALIDATE_MAC) ||\n                                filter_var($_POST['macaddress'], FILTER_VALIDATE_IP)))\n                            ? $_POST['macaddress'] : \"\";\n                \n                // we check that this MAC/IP addr is not assigned to any other HS\n                $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE mac='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                                                          $dbSocket->escapeSimple($macaddress));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                $exists = $res->fetchrow()[0] > 0;\n                \n                if (!$exists) {\n                    $currDate = date('Y-m-d H:i:s');\n                    $currBy = $_SESSION['operator_user'];\n                    \n                    $geocode = (array_key_exists('geocode', $_POST) && isset($_POST['geocode'])) ? trim($_POST['geocode']) : \"\";\n                    $hotspot_type = (array_key_exists('hotspot_type', $_POST) && isset($_POST['hotspot_type'])) ? trim($_POST['hotspot_type']) : \"\";\n                                \n                    $owner = (array_key_exists('owner', $_POST) && isset($_POST['owner'])) ? trim($_POST['owner']) : \"\";\n                    $manager = (array_key_exists('manager', $_POST) && isset($_POST['manager'])) ? trim($_POST['manager']) : \"\";\n                    $email_manager = (array_key_exists('email_manager', $_POST) && isset($_POST['email_manager'])) ? trim($_POST['email_manager']) : \"\";\n                    $email_owner = (array_key_exists('email_owner', $_POST) && isset($_POST['email_owner'])) ? trim($_POST['email_owner']) : \"\";\n                    $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? trim($_POST['address']) : \"\";\n                    $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? trim($_POST['company']) : \"\";\n                    $phone1 = (array_key_exists('phone1', $_POST) && isset($_POST['phone1'])) ? trim($_POST['phone1']) : \"\";\n                    $phone2 = (array_key_exists('phone2', $_POST) && isset($_POST['phone2'])) ? trim($_POST['phone2']) : \"\";\n                    \n                    $companyphone = (array_key_exists('companyphone', $_POST) && isset($_POST['companyphone'])) ? trim($_POST['companyphone']) : \"\";\n                    $companywebsite = (array_key_exists('companywebsite', $_POST) && isset($_POST['companywebsite'])) ? trim($_POST['companywebsite']) : \"\";\n                    $companyemail = (array_key_exists('companyemail', $_POST) && isset($_POST['companyemail'])) ? trim($_POST['companyemail']) : \"\";\n                    $companycontact = (array_key_exists('companycontact', $_POST) && isset($_POST['companycontact'])) ? trim($_POST['companycontact']) : \"\";\n                    \n                    $sql = sprintf(\"UPDATE %s SET mac='%s', geocode='%s', owner='%s', email_owner='%s', manager='%s', email_manager='%s',\n                                                  address='%s', company='%s', phone1='%s', phone2='%s', type='%s', companywebsite='%s',\n                                                  companyemail='%s', companycontact='%s', companyphone='%s', updatedate='%s', updateby='%s'\n                                            WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                   $dbSocket->escapeSimple($macaddress), $dbSocket->escapeSimple($geocode), $dbSocket->escapeSimple($owner),\n                                   $dbSocket->escapeSimple($email_owner), $dbSocket->escapeSimple($manager), $dbSocket->escapeSimple($email_manager),\n                                   $dbSocket->escapeSimple($address), $dbSocket->escapeSimple($company), $dbSocket->escapeSimple($phone1),\n                                   $dbSocket->escapeSimple($phone2), $dbSocket->escapeSimple($hotspot_type), $dbSocket->escapeSimple($companywebsite),\n                                   $dbSocket->escapeSimple($companyemail) , $dbSocket->escapeSimple($companycontact),\n                                   $dbSocket->escapeSimple($companyphone), $currDate, $currBy, $dbSocket->escapeSimple($name));\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (DB::isError($res)) {\n                        // it seems that operator could not be added\n                        $f = \"Failed to update this hotspot [%s]\";\n                        $failureMsg = sprintf($f, $name_enc);\n                        $logAction .= sprintf($f, $name);\n                    } else {\n                        $successMsg = sprintf(\"Updated hotspot: <strong>%s</strong>\", $name_enc);\n                        $logAction .= sprintf(\"Successfully updated hotspot [%s] on page: \", $name);\n                    }\n                    \n                } else {\n                    // MAC/IP already taken\n                    $failureMsg = \"MAC/IP address already in use\";\n                    $logAction .= \"Failed updating (possible duplicate MAC/IP addr) HS on page: \";\n                }\n                \n            } else {\n                // invalid or empty\n                $failureMsg = \"Hotspot name is invalid or empty\";\n                $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n            }\n            \n        } else {\n            // csrf\n            $name = \"\";\n            $failureMsg = sprintf(\"CSRF token error\");\n            $logAction .= sprintf(\"CSRF token error on page: \");\n        }\n        \n    }\n    \n    \n    if (empty($name)) {\n        $failureMsg = \"Hotspot name is invalid or empty\";\n        $logAction .= \"Failed updating (possible empty or invalid HS name) HS on page: \";\n    } else {\n        /* fill-in all the hs settings */\n        $sql = sprintf(\"SELECT id, name, mac, geocode, owner, email_owner, manager, email_manager, address, company,\n                               phone1, phone2, type, companywebsite, companyemail, companycontact, companyphone,\n                               creationdate, creationby, updatedate, updateby\n                          FROM %s\n                         WHERE name='%s'\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                               $dbSocket->escapeSimple($name));\n        $res = $dbSocket->query($sql);\n        $logDebugSQL .= \"$sql;\\n\";\n        \n        list(\n                $id, $name, $macaddress, $geocode, $owner, $email_owner, $manager, $email_manager, $address, $company, $phone1,\n                $phone2, $type, $companywebsite, $companyemail, $companycontact, $companyphone,\n                $creationdate, $creationby, $updatedate, $updateby\n            ) = $res->fetchRow();\n    }\n\n    include('library/closedb.php');\n\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/pages_common.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n    \n    $title = t('Intro','mnghsedit.php');\n    $help = t('helpPage','mnghsedit');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    if (!empty($name_enc)) {\n        $title .= \" :: $name_enc\";\n    } \n\n    include(\"menu-mng-hs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n    \n    if (!empty($name)) {\n    \n        // set form component descriptors\n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"name_presentation\",\n                                        \"caption\" => t('all','HotSpotName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($name)) ? $name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotNameTooltip'),\n                                        \"disabled\" => true\n                                     );\n                                    \n        $input_descriptors0[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($macaddress)) ? $macaddress : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotMacaddressTooltip')\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"geocode\",\n                                        \"caption\" => t('all','Geocode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($geocode)) ? $geocode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                     );\n        \n        $input_descriptors1 = array();\n        $input_descriptors1[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors1[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => $name_enc,\n                                        \"name\" => \"name\"\n                                     );\n        \n        $input_descriptors1[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                  );\n        \n        // set navbar stuff\n        $navkeys = array( 'HotspotInfo', 'ContactInfo', );\n        \n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','HotspotInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        include_once('include/management/contactinfo.php');\n        \n        close_tab($navkeys, 1);\n        \n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_form();\n        \n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n", "<?php\n/*\n *********************************************************************************************************\n * daloRADIUS - RADIUS Web Platform\n * Copyright (C) 2007 - Liran Tal <liran@enginx.com> All Rights Reserved.\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n *\n *********************************************************************************************************\n *\n * Authors:    Liran Tal <liran@enginx.com>\n *             Filippo Lauria <filippo.lauria@iit.cnr.it>\n *\n *********************************************************************************************************\n */\n\n    include (\"library/checklogin.php\");\n    $operator = $_SESSION['operator_user'];\n\n    include('library/check_operator_perm.php');\n\n    // init logging variables\n    $log = \"visited page: \";\n    $logAction = \"\";\n    $logDebugSQL = \"\";\n\n    include_once('library/config_read.php');\n\n    if ($_SERVER['REQUEST_METHOD'] === 'POST') {\n        \n        if (array_key_exists('csrf_token', $_POST) && isset($_POST['csrf_token']) && dalo_check_csrf_token($_POST['csrf_token'])) {\n        \n            $macaddress = (array_key_exists('macaddress', $_POST) && isset($_POST['macaddress']) &&\n                           (filter_var($_POST['macaddress'], FILTER_VALIDATE_MAC) ||\n                            filter_var($_POST['macaddress'], FILTER_VALIDATE_IP)))\n                        ? $_POST['macaddress'] : \"\";\n            \n            $name = (array_key_exists('name', $_POST) && !empty(str_replace(\"%\", \"\", trim($_POST['name']))))\n                  ? str_replace(\"%\", \"\", trim($_POST['name'])) : \"\";\n            $name_enc = (!empty($name)) ? htmlspecialchars($name, ENT_QUOTES, 'UTF-8') : \"\";\n            \n            $geocode = (array_key_exists('geocode', $_POST) && isset($_POST['geocode'])) ? trim($_POST['geocode']) : \"\";\n            $hotspot_type = (array_key_exists('hotspot_type', $_POST) && isset($_POST['hotspot_type'])) ? trim($_POST['hotspot_type']) : \"\";\n                        \n            $owner = (array_key_exists('owner', $_POST) && isset($_POST['owner'])) ? trim($_POST['owner']) : \"\";\n            $manager = (array_key_exists('manager', $_POST) && isset($_POST['manager'])) ? trim($_POST['manager']) : \"\";\n            $email_manager = (array_key_exists('email_manager', $_POST) && isset($_POST['email_manager'])) ? trim($_POST['email_manager']) : \"\";\n            $email_owner = (array_key_exists('email_owner', $_POST) && isset($_POST['email_owner'])) ? trim($_POST['email_owner']) : \"\";\n            $address = (array_key_exists('address', $_POST) && isset($_POST['address'])) ? trim($_POST['address']) : \"\";\n            $company = (array_key_exists('company', $_POST) && isset($_POST['company'])) ? trim($_POST['company']) : \"\";\n            $phone1 = (array_key_exists('phone1', $_POST) && isset($_POST['phone1'])) ? trim($_POST['phone1']) : \"\";\n            $phone2 = (array_key_exists('phone2', $_POST) && isset($_POST['phone2'])) ? trim($_POST['phone2']) : \"\";\n            \n            $companyphone = (array_key_exists('companyphone', $_POST) && isset($_POST['companyphone'])) ? trim($_POST['companyphone']) : \"\";\n            $companywebsite = (array_key_exists('companywebsite', $_POST) && isset($_POST['companywebsite'])) ? trim($_POST['companywebsite']) : \"\";\n            $companyemail = (array_key_exists('companyemail', $_POST) && isset($_POST['companyemail'])) ? trim($_POST['companyemail']) : \"\";\n            $companycontact = (array_key_exists('companycontact', $_POST) && isset($_POST['companycontact'])) ? trim($_POST['companycontact']) : \"\";\n            \n            include('library/opendb.php');\n            \n            if (empty($macaddress) || empty($name)) {\n                // if statement returns false which means that the user has left an empty field for\n                // either macaddress, name, or both\n\n                $failureMsg = \"IP/MAC address or name is empty or not valid\";\n                $logAction .= \"Failed adding (possible empty IP/MAC addr and/or name) new HS on page: \";\n            } else {\n                $sql = sprintf(\"SELECT COUNT(id) FROM %s WHERE name='%s' OR mac='%s'\",\n                               $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                               $dbSocket->escapeSimple($name), $dbSocket->escapeSimple($mac));\n                $res = $dbSocket->query($sql);\n                $logDebugSQL .= \"$sql;\\n\";\n                \n                $exists = $res->fetchrow()[0] > 0;\n                \n                if ($exists) {\n                    // if statement returns false which means there is at least one HS\n                    // in the database with the same name or macaddress\n\n                    $failureMsg = sprintf(\"Name <strong>%s</strong> or IP/MAC address <strong>%s</strong> already exist in database\", $name_enc, $macaddress);\n                    $logAction .= \"Failed adding new HS. Name or IP/MAC address already existing in database [$name, $macaddress] on page: \";\n                } else {\n                    $currDate = date('Y-m-d H:i:s');\n                    $currBy = $_SESSION['operator_user'];\n                    \n                    $sql = sprintf(\"INSERT INTO %s (id, name, mac, geocode, owner, email_owner, manager, email_manager, address,\n                                                    company, phone1, phone2, type, companywebsite, companyemail, companycontact,\n                                                    companyphone, creationdate, creationby, updatedate, updateby)\n                                            VALUES (0, '%s', '%s', '%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s',\n                                                    '%s', '%s', '%s', NULL, NULL)\", $configValues['CONFIG_DB_TBL_DALOHOTSPOTS'],\n                                   $dbSocket->escapeSimple($name), $dbSocket->escapeSimple($macaddress), $dbSocket->escapeSimple($geocode),\n                                   $dbSocket->escapeSimple($owner), $dbSocket->escapeSimple($email_owner), $dbSocket->escapeSimple($manager),\n                                   $dbSocket->escapeSimple($email_manager), $dbSocket->escapeSimple($address), $dbSocket->escapeSimple($company),\n                                   $dbSocket->escapeSimple($phone1), $dbSocket->escapeSimple($phone2), $dbSocket->escapeSimple($hotspot_type),\n                                   $dbSocket->escapeSimple($companywebsite), $dbSocket->escapeSimple($companyemail),\n                                   $dbSocket->escapeSimple($companycontact), $dbSocket->escapeSimple($companyphone), $currDate, $currBy);\n                    $res = $dbSocket->query($sql);\n                    $logDebugSQL .= \"$sql;\\n\";\n                    \n                    if (DB::isError($res)) {\n                        // it seems that operator could not be added\n                        $f = \"Failed to add this new hotspot [%s] to database\";\n                        $failureMsg = sprintf($f, $name_enc);\n                        $logAction .= sprintf($f, $name);\n                    } else {\n                        $successMsg = sprintf(\"Added to database new hotspot: <strong>%s</strong>\", $name_enc);\n                        $logAction .= sprintf(\"Successfully added new hotspot [%s] on page: \", $name);\n                    }\n                }\n                \n            }\n            \n            include('library/closedb.php');\n        } else {\n            // csrf\n            $failureMsg = \"CSRF token error\";\n            $logAction .= \"$failureMsg on page: \";\n        }\n    }\n\n    include_once(\"lang/main.php\");\n    \n    include(\"library/layout.php\");\n\n    // print HTML prologue\n    $extra_css = array(\n        // css tabs stuff\n        \"css/tabs.css\"\n    );\n    \n    $extra_js = array(\n        \"library/javascript/pages_common.js\",\n        // js tabs stuff\n        \"library/javascript/tabs.js\"\n    );\n\n    $title = t('Intro','mnghsnew.php');\n    $help = t('helpPage','mnghsnew');\n    \n    print_html_prologue($title, $langCode, $extra_css, $extra_js);\n\n    include(\"menu-mng-hs.php\");\n\n    echo '<div id=\"contentnorightbar\">';\n    print_title_and_help($title, $help);\n    \n    include_once('include/management/actionMessages.php');\n\n    if (!isset($successMsg)) {\n\n        // set form component descriptors\n        $input_descriptors0 = array();\n        \n        $input_descriptors0[] = array(\n                                        \"name\" => \"name\",\n                                        \"caption\" => t('all','HotSpotName'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($name)) ? $name : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotNameTooltip')\n                                     );\n                                    \n        $input_descriptors0[] = array(\n                                        \"name\" => \"macaddress\",\n                                        \"caption\" => t('all','MACAddress'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($macaddress)) ? $macaddress : \"\"),\n                                        \"tooltipText\" => t('Tooltip','hotspotMacaddressTooltip')\n                                     );\n                                     \n        $input_descriptors0[] = array(\n                                        \"name\" => \"geocode\",\n                                        \"caption\" => t('all','Geocode'),\n                                        \"type\" => \"text\",\n                                        \"value\" => ((isset($geocode)) ? $geocode : \"\"),\n                                        \"tooltipText\" => t('Tooltip','geocodeTooltip')\n                                     );\n        \n        $input_descriptors1 = array();\n        \n        $input_descriptors1[] = array(\n                                        \"type\" => \"hidden\",\n                                        \"value\" => dalo_csrf_token(),\n                                        \"name\" => \"csrf_token\"\n                                     );\n        \n        $input_descriptors1[] = array(\n                                        \"type\" => \"submit\",\n                                        \"name\" => \"submit\",\n                                        \"value\" => t('buttons','apply')\n                                     );\n\n        // set navbar stuff\n        $navkeys = array( 'HotspotInfo', 'ContactInfo', );\n        \n        // print navbar controls\n        print_tab_header($navkeys);\n        \n        // open form\n        open_form();\n        \n        // open first tab (shown)\n        open_tab($navkeys, 0, true);\n        \n        // open a fieldset\n        $fieldset0_descriptor = array(\n                                        \"title\" => t('title','HotspotInfo'),\n                                     );\n\n        open_fieldset($fieldset0_descriptor);\n        \n        foreach ($input_descriptors0 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_fieldset();\n        \n        close_tab($navkeys, 0);\n        \n        // open second tab\n        open_tab($navkeys, 1);\n        \n        include_once('include/management/contactinfo.php');\n        \n        close_tab($navkeys, 1);\n        \n        foreach ($input_descriptors1 as $input_descriptor) {\n            print_form_component($input_descriptor);\n        }\n        \n        close_form();\n\n    }\n\n    include('include/config/logging.php');\n    print_footer_and_html_epilogue();\n?>\n"], "filenames": ["acct-date.php", "acct-maintenance-cleanup.php", "acct-maintenance-delete.php", "include/management/contactinfo.php", "mng-hs-edit.php", "mng-hs-new.php"], "buggy_code_start_loc": [35, 25, 23, 30, 44, 162], "buggy_code_end_loc": [236, 208, 144, 108, 286, 230], "fixing_code_start_loc": [35, 25, 23, 30, 44, 161], "fixing_code_end_loc": [263, 259, 210, 94, 292, 237], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Reflected in GitHub repository lirantal/daloradius prior to master-branch.", "other": {"cve": {"id": "CVE-2023-0337", "sourceIdentifier": "security@huntr.dev", "published": "2023-01-17T16:15:16.993", "lastModified": "2023-01-23T19:35:44.993", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Reflected in GitHub repository lirantal/daloradius prior to master-branch."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 3.7}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:daloradius:daloradius:*:*:*:*:*:*:*:*", "versionEndExcluding": "2023-01-18", "matchCriteriaId": "9832445C-1891-433C-8737-FEE966F5F844"}]}]}], "references": [{"url": "https://github.com/lirantal/daloradius/commit/e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/1c50a5a5-3f55-4b6f-b861-4d5cdb6eb81b", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/lirantal/daloradius/commit/e77a769c7503e63a2e3c05262cb5f8f81a4a7bbe"}}