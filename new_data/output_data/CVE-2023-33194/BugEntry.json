{"buggy_code": ["# Release Notes for Craft CMS 3.x\n\n## Unreleased\n\n- Content tab menus now reveal when a tab contains validation errors, and invalid tabs\u2019 menu options get the same warning icon treatment as inline tabs do. ([#12971](https://github.com/craftcms/cms/issues/12971))\n- Element index bulk action spinners are now centered on the viewport. ([#12972](https://github.com/craftcms/cms/issues/12972))\n- Fixed a bug where Assets fields weren\u2019t respecting their View Mode setting when viewing entry revisions. ([#12948](https://github.com/craftcms/cms/issues/12948))\n- Fixed a bug where some relational fields were showing duplicate selected relations. ([#12949](https://github.com/craftcms/cms/issues/12949))\n- Fixed a bug where asset pagination was broken when there was more than 100 subfolders. ([#12969](https://github.com/craftcms/cms/issues/12969))\n- Fixed a bug where entry index pages\u2019 \u201cRevision Notes\u201d and \u201cLast Edited By\u201d columns weren\u2019t getting populated for disabled entries. ([#12981](https://github.com/craftcms/cms/issues/12981))\n- Fixed a JavaScript error that occurred when closing a disclosure menu within Live Preview. ([#12992](https://github.com/craftcms/cms/issues/12992))\n- Fixed a bug where assets were getting relocated to the root volume folder when renamed. ([#12995](https://github.com/craftcms/cms/issues/12995))\n- Fixed a bug where it wasn\u2019t possible to preview entries on another domain when the system was offline. ([#12979](https://github.com/craftcms/cms/issues/12979))\n\n## 3.8.5 - 2023-03-21\n\n- Fixed a bug where relation data was getting deleted when running garbage collection on PostgreSQL. ([#9905](https://github.com/craftcms/cms/issues/9905))\n- Fixed a bug where Lightswitch fields\u2019 \u201cOFF Label\u201d and \u201cON Label\u201d settings weren\u2019t getting translated. ([#12942](https://github.com/craftcms/cms/issues/12942))\n- Fixed a bug where `craft\\events\\DefineUserContentSummaryEvent::$userId` was never set for `craft\\controllers\\EVENT_DEFINE_CONTENT_SUMMARY` events. ([#12944](https://github.com/craftcms/cms/issues/12944))\n- Updated svg-sanitizer to 0.16. ([#12943](https://github.com/craftcms/cms/issues/12943))\n\n## 3.8.4 - 2023-03-20\n\n- The `|json_encode` Twig filter now calls `craft\\helpers\\Json::encode()` internally, improving error handling. ([#12919](https://github.com/craftcms/cms/issues/12919))\n- `craft\\helpers\\Json::encode()` no longer sets the `JSON_UNESCAPED_SLASHES` flag by default.\n- Fixed a JavaScript error that occurred when resolving an asset move conflict. ([#12920](https://github.com/craftcms/cms/issues/12920))\n- Fixed a bug where volume subfolders were being shown when viewing soft-deleted assets. ([#12927](https://github.com/craftcms/cms/issues/12927))\n- Fixed a bug where structure data was getting deleted when running garbage collection on PostgreSQL. ([#12925](https://github.com/craftcms/cms/issues/12925))\n\n## 3.8.3 - 2023-03-16\n\n- Customize Sources modals no longer hide when the <kbd>Esc</kbd> key is pressed on the surrounding area is clicked on. ([#12895](https://github.com/craftcms/cms/issues/12895))\n- Added `craft\\helpers\\FileHelper::uniqueName()`.\n- Fixed an error that occurred when uploading an asset with a filename over 250 characters long. ([#12889](https://github.com/craftcms/cms/issues/12889))\n- Fixed an error that could occur when preparing licensing alerts, if any licenses were invalid. ([#12899](https://github.com/craftcms/cms/issues/12899))\n- Fixed a bug where it wasn\u2019t possible to drag nested Neo blocks. ([#12896](https://github.com/craftcms/cms/issues/12896))\n- Fixed a bug where fields with reduced widths in Matrix blocks were becoming full-width while dragged. ([#12909](https://github.com/craftcms/cms/issues/12909))\n- Fixed a bug where multi-edition plugins weren\u2019t showing their edition labels within the Plugin Store cart. ([#12910](https://github.com/craftcms/cms/issues/12910))\n\n## 3.8.2 - 2023-03-14\n\n- Fixed a bug where it wasn\u2019t always possible to access entry or category edit pages if the `slugWordSeparator` config setting was set to `/`. ([#12871](https://github.com/craftcms/cms/issues/12871))\n- Fixed a bug where `craft\\helpers\\Html::parseTagAttribute()` wasn\u2019t decoding attribute values, which could lead to double-encoded attributes, e.g. when using the `|attr` filter. ([#12887](https://github.com/craftcms/cms/issues/12887))\n- Fixed XSS vulnerabilities.\n- Fixed an SSRF vulnerability.\n\n## 3.8.1 - 2023-03-09\n\n- Fixed a bug where it wasn\u2019t possible to select subfolders on the Assets index page. ([#12802](https://github.com/craftcms/cms/issues/12802))\n- Fixed a bug where element index search inputs were losing focus when the element listing was updated. ([#12846](https://github.com/craftcms/cms/issues/12846))\n- Fixed a bug where the database driver was being referenced as \u201cMySQL\u201d when using MariaDB. ([#12827](https://github.com/craftcms/cms/issues/12827))\n- Fixed a bug where users weren\u2019t able to select assets within Assets fields, if they didn\u2019t have full permissions for the volume. ([#12851](https://github.com/craftcms/cms/issues/12851))\n- Fixed a bug where the Assets index page\u2019s URL would get updated incorrectly when renaming a subfolder.\n- Added `craft\\db\\Connection::getDriverLabel()`.\n\n## 3.8.0 - 2023-03-08\n\n### Content Management\n- Volume subfolders are now displayed within the element listing pane on asset indexes, rather than as nested sources in the sidebar. ([#12558](https://github.com/craftcms/cms/pull/12558), [#9171](https://github.com/craftcms/cms/discussions/9171), [#5809](https://github.com/craftcms/cms/issues/5809))\n- Asset indexes now display the current subfolder path above the element listing. ([#12558](https://github.com/craftcms/cms/pull/12558))\n- Assets and folders can now be drag-and-dropped simultaneously. ([#12792](https://github.com/craftcms/cms/pull/12792))\n- Reduced the likelihood of accidentally triggering an asset drag operation. ([#12792](https://github.com/craftcms/cms/pull/12792))\n- Reduced the likelihood of accidentally dropping dragged assets/folders on an unintended target. ([#12792](https://github.com/craftcms/cms/pull/12792))\n- It\u2019s now possible to move volume folders and assets to a new location via a new \u201cMove\u2026\u201d bulk element action, rather than via drag-and-drop interactions. ([#12558](https://github.com/craftcms/cms/pull/12558))\n- It\u2019s now possible to sort asset indexes by image width and height. ([#12653](https://github.com/craftcms/cms/pull/12653))\n\n### Administration\n- Most licensing isuses are now consolidated into a single control panel alert, with a button to resolve them all with a single purchase on Craft Console. ([#12768](https://github.com/craftcms/cms/pull/12768))\n- Added the `users/unlock` console command. ([#12345](https://github.com/craftcms/cms/discussions/12345))\n- The `utils/prune-revisions` console command now has a `--section` option. ([#8783](https://github.com/craftcms/cms/discussions/8783))\n\n### Development\n- Added the `revisionNotes` field to elements queried via GraphQL. ([#12610](https://github.com/craftcms/cms/issues/12610))\n- `craft\\elements\\Asset::getMimeType()` now has a `$transform` argument, and assets\u2019 `mimeType` GraphQL fields now support a `@transform` directive. ([#12269](https://github.com/craftcms/cms/discussions/12269), [#12397](https://github.com/craftcms/cms/pull/12397), [#12522](https://github.com/craftcms/cms/pull/12522))\n\n### Extensibility\n- Added support for private plugins. ([#12716](https://github.com/craftcms/cms/pull/12716), [#8908](https://github.com/craftcms/cms/discussions/8908))\n- Element source definitions can now include a `defaultSourcePath` key.\n- Added `craft\\base\\ApplicationTrait::getEditionHandle()`.\n- Added `craft\\base\\Element::indexElements()`.\n- Added `craft\\base\\ElementInterface::findSource()`.\n- Added `craft\\base\\ElementInterface::indexElementCount()`.\n- Added `craft\\db\\Migration::dropForeignKeyIfExists()`.\n- Added `craft\\models\\VolumeFolder::getHasChildren()`.\n- Added `craft\\models\\VolumeFolder::setHasChildren()`.\n- Added `craft\\services\\Assets::createFolderQuery()`.\n- Added `craft\\services\\Assets::foldersExist()`.\n- Added `craft\\services\\Search::normalizeSearchQuery()`.\n- Added `Craft.AssetMover`.\n- Added `Craft.BaseElementIndex::getSourcePathActionLabel()`.\n- Added `Craft.BaseElementIndex::getSourcePathActions()`.\n- Added `Craft.BaseElementIndex::getSourcePathLabel()`.\n- Added `Craft.BaseElementIndex::onSourcePathChange()`.\n- Added `Craft.BaseElementIndex::sourcePath`.\n- Added `Craft.BaseElementSelectorModal::getElementIndexParams()`.\n- Added `Craft.BaseElementSelectorModal::getIndexSettings()`.\n- Added `Craft.BaseElementSelectorModal::hasSelection()`.\n- Added `Craft.VolumeFolderSelectorModal`.\n- Deprecated `craft\\helpers\\Assets::sortFolderTree()`.\n- Deprecated `craft\\services\\Assets::getFolderTreeByFolderId()`.\n- Deprecated `craft\\services\\Assets::getFolderTreeByVolumeIds`.\n- The custom `activate` jQuery event will now trigger when the <kbd>Return</kbd> key is pressed.\n- The custom `activate` jQuery event will no longer trigger for <kbd>Ctrl</kbd>/<kbd>Command</kbd>-clicks.\n\n### System\n- Fixed a database deadlock error that could occur when updating a relation or structure position for an element that was simultaneously being saved. ([#9905](https://github.com/craftcms/cms/issues/9905))\n\n## 3.7.68 - 2023-03-07\n\n- Fixed a bug where `craft\\events\\RegisterElementSourcesEvent::$context` wasn\u2019t always set to `modal` when defining the available element sources for an element selection modal.\n- Fixed a styling bug where multi-line checkbox labels within the Customize Sources modal weren\u2019t wrapping properly. ([#12717](https://github.com/craftcms/cms/issues/12717))\n- Fixed a bug where asset thumbnails within collapsed Matrix blocks weren\u2019t loading when the block was expanded. ([#12720](https://github.com/craftcms/cms/issues/12720))\n- Fixed a bug where custom fields\u2019 database columns would get deleted when applying project config changes, if the field type wasn\u2019t present. ([#12760](https://github.com/craftcms/cms/issues/12760))\n- Fixed a bug where Assets, Categories, and Tags fields weren\u2019t respecting their \u201cAllow self relations\u201d settings. ([#12769](https://github.com/craftcms/cms/issues/12769))\n- Fixed a bug where dynamically-generated entry titles weren\u2019t always generated with the site\u2019s formatting locale in place. ([12780](https://github.com/craftcms/cms/issues/12780))\n- Fixed a bug where element titles weren\u2019t getting a pointer cursor or underlines on hover, when selected on an element index page.\n- Fixed a bug where it wasn\u2019t possible to close modals that were opened by a custom select menu via the `<kbd>Esc</kbd>` key. ([#12814](https://github.com/craftcms/cms/pull/12814))\n- Fixed an XSS vulnerability.\n\n## 3.7.67 - 2023-02-17\n\n- Fixed a bug where clicking on the scrollbar of a disclosure menu would close it. ([#12681](https://github.com/craftcms/cms/issues/12681))\n- Fixed an error that could occur when loading the Plugin Store, if there wasn\u2019t a `.env` file. ([#12687](https://github.com/craftcms/cms/issues/12687))\n\n## 3.7.66 - 2023-02-14\n\n- HTML Purifier now allows `oembed` tags. ([ckeditor#59](https://github.com/craftcms/ckeditor/issues/59))\n- Added `craft\\htmlpurifier\\VideoEmbedUrlDef`.\n- Fixed a bug where entries that aren\u2019t propagated to the primary site weren\u2019t showing revision notes. ([#12641](https://github.com/craftcms/cms/issues/12641))\n- Fixed a bug where HTML tags weren\u2019t getting stripped from auto-generated Handle and URI Format setting values.\n- Fixed a JavaScript error that could occur if an object with `null` values was passed to `Craft.compare()`.\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::toArray()` was calling getter methods whose names conflicted with custom field handles. ([#12635](https://github.com/craftcms/cms/pull/12635))\n\n## 3.7.65.2 - 2023-02-08\n\n- Fixed a PHP error that could occur if relational fields were getting eager-loaded for elements that the fields didn\u2019t belong to. ([#12648](https://github.com/craftcms/cms/issues/12648))\n\n## 3.7.65.1 - 2023-02-08\n\n- Fixed a PHP error that occurred after performing a Composer action within Craft. ([#12647](https://github.com/craftcms/cms/issues/12647))\n- Fixed a bug where element attributes weren\u2019t getting eager-loaded. ([#12646](https://github.com/craftcms/cms/pull/12646), [#12645](https://github.com/craftcms/cms/issues/12645))\n\n## 3.7.65 - 2023-02-07\n\n- Updated Composer to 2.2.19, fixing a PHP error that could occur when performing a Composer action within Craft, when the autoload classmap was generated with Composer 2.5. ([#12482](https://github.com/craftcms/cms/issues/12482))\n- Fixed a bug where Matrix blocks weren\u2019t getting eager-loaded. ([#12631](https://github.com/craftcms/cms/issues/12631))\n- Fixed a PHP error that could occur when calling `craft\\services\\Assets::getAllDescendantFolders()` for the root folder. ([craftcms/feed-me#1231](https://github.com/craftcms/feed-me/issues/1231))\n\n## 3.7.64.1 - 2023-02-05\n\n- Fixed a bug where `craft\\behaviors\\CustomFieldBehavior::$owner` was getting nullified by `craft\\base\\Element::fieldByHandle()`. ([#12624](https://github.com/craftcms/cms/issues/12624))\n\n## 3.7.64 - 2023-02-03\n\n- Improved the performance of the \u201cGenerating pending image transforms\u201d queue job. ([#12274](https://github.com/craftcms/cms/issues/12274))\n- Added more reserved field handles to avoid conflicts with `craft\\base\\Element` properties. ([#12577](https://github.com/craftcms/cms/issues/12577))\n- Control panel requests no longer override the `pageTrigger` config setting value to `'p'`. ([#12598](https://github.com/craftcms/cms/issues/12598), [#12614](https://github.com/craftcms/cms/pull/12614))\n- Fixed field status badge styling in some contexts. ([#12403](https://github.com/craftcms/cms/issues/12403))\n- Fixed a bug where exporting elements with multiple field layouts as a CSV file using the \u201cExpanded\u201d export type would result in mismatched column values.\n- Fixed a bug where cancelling a conflicting volume folder move would result in the moved folder getting deleted.\n- Fixed a bug where Date and Number fields could be misinterpreted in category Live Preview requests, if the site\u2019s language used different date/number formats than the user\u2019s formatting locale.\n- Fixed a bug where the horizontal scroll position wasn\u2019t being retained when refreshing Live Preview. ([#12504](https://github.com/craftcms/cms/issues/12504))\n- Fixed a bug where HTML tags within field labels, instructions, tips, and warnings weren\u2019t always getting escaped.\n- Fixed a bug where the sidebar scroll position wasn\u2019t retained when selecting a new source on element index pages. ([#12523](https://github.com/craftcms/cms/issues/12523))\n- Fixed a bug where `resave/*` commands\u2019 output didn\u2019t take the offset into account. ([#12526](https://github.com/craftcms/cms/issues/12526))\n- Fixed a bug where warnings were getting logged for video assets that were \u201cmissing\u201d their dimensions.\n- Fixed a bug where `craft\\services\\Assets::getAllDescendantFolders()` could return unexpected results for folders that contained an underscore.\n- Fixed a bug where accessing a custom field\u2019s magic property on an element would return the field\u2019s raw database value rather than `null`, if it didn\u2019t belong to the element\u2019s field layout anymore. ([#12539](https://github.com/craftcms/cms/issues/12539), [#12578](https://github.com/craftcms/cms/pull/12578))\n- Fixed a bug where `craft\\image\\Raster::getIsTransparent()` wasn\u2019t working. ([#12565](https://github.com/craftcms/cms/issues/12565))\n- Fixed a bug where the component name comments in project config YAML files would always lag behind the current project config a little. ([#12576](https://github.com/craftcms/cms/issues/12576), [#12581](https://github.com/craftcms/cms/pull/12581))\n- Fixed a SQL error that occurred when creating a database backup using the default backup command, when running MySQL 5.7.41+ or 8.0.32+. ([#12557](https://github.com/craftcms/cms/issues/12557), [#12560](https://github.com/craftcms/cms/pull/12560))\n- Fixed a bug where database backups weren\u2019t respecting SSL database connection settings if they were specified when using MySQL. ([#10351](https://github.com/craftcms/cms/issues/10351), [#11753](https://github.com/craftcms/cms/issues/11753), [#12596](https://github.com/craftcms/cms/pull/12596))\n- Fixed a bug where element indexes could stop showing their loading spinner prematurely if the element listing needed to be reloaded multiple times in rapid succession. ([#12595](https://github.com/craftcms/cms/issues/12595))\n- Fixed a bug where element indexes would show show an expand/collapse toggle for structured elements that only had unsaved draft children, which aren\u2019t actually shown. ([#11253](https://github.com/craftcms/cms/issues/11253))\n- Added `craft\\helpers\\Db::escapeForLike()`.\n- Added `craft\\web\\twig\\variables\\Paginate::$pageTrigger`. ([#12614](https://github.com/craftcms/cms/pull/12614))\n- `craft\\services\\Assets::getAllDescendantFolders()` now has a `$withParent` argument, which can be passed `false` to omit the parent folder from the results. ([#12536](https://github.com/craftcms/cms/issues/12536))\n- Deprecated `craft\\helpers\\DateTimeHelper::timeZoneAbbreviation()`.\n- Deprecated `craft\\helpers\\DateTimeHelper::timeZoneOffset()`.\n\n## 3.7.63.1 - 2023-01-09\n\n- Fixed a bug where editing certain Matrix/Neo/Super Table fields could result in content loss. ([#12445](https://github.com/craftcms/cms/issues/12445))\n\n## 3.7.63 - 2023-01-04\n\n- Template caching is no longer enabled for tokenized requests. ([#12458](https://github.com/craftcms/cms/issues/12458))\n- Elisions are now stripped from search keywords. ([#12467](https://github.com/craftcms/cms/issues/12467), [#12474](https://github.com/craftcms/cms/pull/12474))\n- Added support for HEIC/HEIF images. ([#9115](https://github.com/craftcms/cms/discussions/9115))\n- The `allowedFileExtensions` config setting now includes `heic`, `heif`, and `hevc` by default. ([#12490](https://github.com/craftcms/cms/discussions/12490))\n- It\u2019s now possible to assign aliases `children` fields queried via GraphQL. ([#12494](https://github.com/craftcms/cms/pull/12494))\n- Added `craft\\helpers\\Image::isWebSafe()`.\n- Added `craft\\services\\Images::getSupportsHeic()`.\n- `Craft.MatrixInput` now fires `blockSortDragStop`, `beforeMoveBlockUp`, `moveBlockUp`, `beforeMoveBlockDown`, and `moveBlockDown` events. ([#12498](https://github.com/craftcms/cms/pull/12498))\n- Fixed an error that could occur when processing template caches in a console request, if a globally-scoped template cache was processed before it.\n- Fixed a bug where some custom field property types in `craft\\behaviors\\CustomFieldBehavior` were incorrect.\n- Fixed an error that could occur if a Matrix sub-field\u2019s handle was too long. ([#12422](https://github.com/craftcms/cms/issues/12422))\n- Updated Imagine to 1.3.3.\n\n## 3.7.62 - 2022-12-13\n\n- Fixed a bug where it wasn\u2019t possible to enter `0` in Number fields and numeric column cells within editable tables, using certain keyboard layouts. ([#12412](https://github.com/craftcms/cms/issues/12412))\n- Fixed a JavaScript error that could occur when autosaving an entry draft. ([#12445](https://github.com/craftcms/cms/issues/12445))\n- Added `Craft.filterInputVal()`.\n- Added `Craft.filterNumberInputVal()`.\n\n## 3.7.61 - 2022-11-17\n\n- Fixed an error that occurred if an arrow function was passed to the `|sort` Twig filter. ([#12334](https://github.com/craftcms/cms/issues/12334))\n- Fixed a bug where nested fields set to numbers could be inadvertently changed when an entry draft was created.\n- `craft\\services\\Fields::getFieldsWithContent()` and `getFieldsWithoutContent()` now have `$context` arguments.\n\n## 3.7.60 - 2022-11-16\n\n- Fixed an information disclosure vulnerability.\n- Fixed an XSS vulnerability.\n- Fixed a bug where `resave/*` commands weren\u2019t catching exceptions thrown when applying the `--set` and `--to` options. ([#12262](https://github.com/craftcms/cms/issues/12262))\n- Fixed a bug where the `|group` Twig filter was logging a deprecation warning when passed an element query.\n- Fixed a bug where `craft\\elements\\Entry::getIsEditable()` was returning `false` for enabled entries, if the logged-in user had the \u201cPublish live changes\u201d permission but not \u201cPublish live changes for other authors\u2019 entries\u201d. ([#12315](https://github.com/craftcms/cms/issues/12315))\n- Fixed a bug where element indexes were showing the labels of empty Dropdown options when selected. ([#12319](https://github.com/craftcms/cms/issues/12319))\n- Fixed an error that occurred when saving an entry via GraphQL, if a parent entry was assigned that didn\u2019t exist on the requested site. ([#12291](https://github.com/craftcms/cms/issues/12291))\n- Fixed a bug where fields set to numbers could be inadvertently changed when an entry draft was created.\n- Added `craft\\services\\Fields::getFieldsWithoutContent()`.\n\n## 3.7.59 - 2022-10-27\n\n- Asset folder and file names are now converted to ASCII using the primary site\u2019s language for character mappings, regardless of the current user\u2019s preferred language, when the `convertFilenamesToAscii` config setting is enabled. ([#12207](https://github.com/craftcms/cms/discussions/12207))\n- Fixed a JavaScript 404 error that occurred when users\u2019 Language was set to Chinese. ([#12194](https://github.com/craftcms/cms/issues/12194))\n- Fixed an error that could occur during garbage collection, if any nested volume folders were missing their path. ([#12195](https://github.com/craftcms/cms/issues/12195))\n\n## 3.7.58 - 2022-10-25\n\n### Fixed\n- Fixed a bug where Entry URI Format and Template inputs were editable within sections\u2019 Site Settings tables, for disabled sites.\n\n## 3.7.57 - 2022-10-18\n\n### Fixed\n- Fixed an error that could occur when running tests. ([#12088](https://github.com/craftcms/cms/issues/12088))\n- Fixed a bug where the \u201cYour session has ended\u201d modal could be shown on the control panel\u2019s login page. ([#12121](https://github.com/craftcms/cms/issues/12121))\n- Fixed an error that could occur in the control panel. ([#12133](https://github.com/craftcms/cms/issues/12133))\n- Fixed a bug where image transforms that used the `fit` mode but didn\u2019t specify a width or height weren\u2019t getting their missing dimension set on the asset. ([#12137](https://github.com/craftcms/cms/issues/12137))\n\n## 3.7.56 - 2022-10-11\n\n### Added\n- Added the `--as-json` option to the `help` command. ([#12017](https://github.com/craftcms/cms/pull/12017), [#12074](https://github.com/craftcms/cms/pull/12074))\n- Added `craft\\helpers\\ElementHelper::isAttributeEmpty()`.\n- Added `craft\\queue\\jobs\\ResaveElements::$ifEmpty`.\n- Added `craft\\queue\\jobs\\ResaveElements::$set`.\n- Added `craft\\queue\\jobs\\ResaveElements::$to`.\n- Added `craft\\queue\\jobs\\ResaveElements::$touch`.\n\n### Changed\n- When passing a PHP callback function to the `--to` option of a `resave/*` command, the `$element` argument is now optional.\n\n### Deprecated\n- Deprecated `craft\\web\\assets\\focusvisible\\FocusVisibleAsset`. ([#12037](https://github.com/craftcms/cms/pull/12037))\n\n### Fixed\n- Fixed a bug where `resave/*` commands weren\u2019t respecting the `--set`, `--to`, or `--touch` options when `--queue` was passed. ([#11974](https://github.com/craftcms/cms/issues/11974))\n- Fixed an error that could occur when passing an element query to a `relatedTo` param, if the parent element query contained any closures. ([#11981](https://github.com/craftcms/cms/issues/11981))\n- Fixed a bug where unsaved drafts could be unintentionally deleted when saved, if a plugin or module was blocking the save via `EVENT_BEFORE_SAVE`. ([#12015](https://github.com/craftcms/cms/issues/12015))\n- Fixed a bug where \u201cPropagating tags\u201d jobs would fail if two tags had similar titles.\n- Fixed a bug where image transforms weren\u2019t getting sized correctly in some cases when `upscaleImages` was disabled. ([#12023](https://github.com/craftcms/cms/issues/12023))\n- Fixed a bug where table cells within Redactor fields could appear to be focused when they weren\u2019t. ([#12001](https://github.com/craftcms/cms/issues/12001), [#12037](https://github.com/craftcms/cms/pull/12037))\n- Fixed a bug where alerts saying a folder can\u2019t be renamed due to a naming conflict were showing the old folder name instead of the new one. ([#12049](https://github.com/craftcms/cms/pull/12049))\n- Fixed a bug where Edit Entry pages were listing other authors\u2019 drafts in the revision menu, for users who didn\u2019t have permission to edit them.\n- Fixed a bug where some GraphQL results could be missing if multiple sets of nested elements were being queried using the same alias. ([#11982](https://github.com/craftcms/cms/issues/11982))\n\n### Security\n- Fixed information disclosure vulnerabilities.\n\n## 3.7.55.3 - 2022-10-03\n\n### Security\n- Updated Twig to 2.15. ([#12022](https://github.com/craftcms/cms/issues/12022))\n\n## 3.7.55.2 - 2022-09-22\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.55.1 - 2022-09-21\n\n### Fixed\n- Fixed a bug where the \u201cNew category\u201d button could be missing from the Categories index page. ([#11977](https://github.com/craftcms/cms/issues/11977))\n- Fixed a bug where `Craft::t()` and the `|t` Twig filter were modifying digit-dash-digit sequences. ([#11980](https://github.com/craftcms/cms/issues/11980))\n- Fixed PHP errors that occurred if `webonyx/graphql-php` 14.11.17 was installed. ([#11979](https://github.com/craftcms/cms/issues/11979), [webonyx/graphql-php#1221](https://github.com/webonyx/graphql-php/issues/1221))\n\n## 3.7.55 - 2022-09-20\n\n### Added\n- Added `craft\\helpers\\Image::targetDimensions()`.\n\n### Removed\n- Removed the Punycode PHP library. ([#11948](https://github.com/craftcms/cms/issues/11948))\n\n### Fixed\n- Fixed a bug where image transforms weren\u2019t always getting applied properly to all animation frames. ([#11937](https://github.com/craftcms/cms/pull/11937))\n- Fixed a bug where animated WebP images would lose their animation frames when transformed. ([#11937](https://github.com/craftcms/cms/pull/11937))\n- Fixed a bug where image transform dimensions could be calculated incorrectly when `upscaleImages` was `false`. ([#11837](https://github.com/craftcms/cms/issues/11837))\n- Fixed an error that occurred when setting a non-numeric `width` or `height` on an image transform. ([#11837](https://github.com/craftcms/cms/issues/11837))\n- Fixed a bug where `relatedTo*` arguments weren\u2019t supported by `children` fields in GraphQL. ([#11918](https://github.com/craftcms/cms/issues/11918))\n- Fixed a bug where Image Editor and slideout action buttons were obstructed when the Debug Toolbar was enabled. ([#11965](https://github.com/craftcms/cms/issues/11965))\n- Fixed an error that occurred when installing Craft when MySQL\u2019s `sql_require_primary_key` setting was enabled. ([#11374](https://github.com/craftcms/cms/discussions/11374))\n- Fixed a bug where invalid entries could be duplicated via the \u201cSave as a new entry\u201d action, despite the duplication appearing to have failed with validation errors. ([#11959](https://github.com/craftcms/cms/issues/11959))\n- Fixed a PHP error that could occur in a potential race condition when calling  `craft\\helpers\\FileHelper::clearDirectory()`.\n- Fixed a bug where Structure section entries that were duplicated via the \u201cSave as a new entry\u201d action on a provisional draft weren\u2019t being placed within the structure properly.\n- Fixed a bug where element\u2019s `searchScore` properties would be set to `null` when their original score was below 1, rather than rounding to 0 or 1. ([#11973](https://github.com/craftcms/cms/issues/11973))\n\n## 3.7.54 - 2022-09-13\n\n### Changed\n- Control panel menus now automatically reposition themselves when the window is resized.\n- `resave/*` commands now have a `--touch` option. When passed, elements\u2019 `dateUpdated` timestamps will be updated as they\u2019re resaved. ([#11849](https://github.com/craftcms/cms/discussions/11849))\n- Underscores within query param values that begin/end with `*` are now escaped, so they aren\u2019t treated as wildcard characters by the `like` condition. ([#11898](https://github.com/craftcms/cms/issues/11898))\n- `craft\\services\\Elements::resaveElements()` now has a `$touch` argument.\n\n### Fixed\n- Fixed a bug where element caches weren\u2019t being invalidated during garbage collection, so hard-deleted elements could appear to still exist.\n- Fixed an error that could occur when rendering front-end templates if there was a problem connecting to the database. ([#11855](https://github.com/craftcms/cms/issues/11855))\n- Fixed a bug where it was possible to save an asset with a focal point outside its cropped area. ([#11875](https://github.com/craftcms/cms/issues/11875))\n- Fixed a bug where the Assets index page wasn\u2019t handling failed uploads properly. ([#11866](https://github.com/craftcms/cms/issues/11866))\n- Fixed a UI bug where renaming a newly-created volume subfolder didn\u2019t appear to have any effect.\n- Fixed a bug where empty URL fields would be marked as changed, even when no change was made to them. ([#11908](https://github.com/craftcms/cms/issues/11908))\n- Fixed a bug where transforming an animated GIF into a WebP file would only include the first frame. ([#11889](https://github.com/craftcms/cms/issues/11889))\n\n### Security\n- Password inputs no longer temporarily reveal the password when the <kbd>Alt</kbd> key is pressed. ([#11930](https://github.com/craftcms/cms/issues/11930))\n\n## 3.7.53.1 - 2022-08-26\n\n### Fixed\n- Fixed a PHP error that occurred when garbage collection was run on web requests. ([#11829](https://github.com/craftcms/cms/issues/11829))\n\n## 3.7.53 - 2022-08-26\n\n### Added\n- Added `craft\\services\\Gc::removeEmptyTempFolders()`.\n\n### Changed\n- If a plugin\u2019s license key is set to an empty environment variable, its trial license key will now be stored in `.env` rather than the project config. ([#11830](https://github.com/craftcms/cms/issues/11830))\n- Empty subfolders within the temporary upload volume are now removed during garbage collection. ([#10746](https://github.com/craftcms/cms/issues/10746))\n\n### Fixed\n- Fixed a bug where the \u201cEdit files uploaded by other users\u201d volume permission was useless unless the \u201cUpload files\u201d permission had been granted. ([#11818](https://github.com/craftcms/cms/issues/11818))\n- Fixed a bug where the \u201cSave and add another\u201d entry action was being shown for users without the \u201cCreate entries\u201d section permission. ([#11819](https://github.com/craftcms/cms/issues/11819))\n\n## 3.7.52 - 2022-08-23\n\n### Changed\n- Improved console output for the `gc` command.\n- The `gc` command now runs garbage collection for data caches.\n- Exception JSON responses now include `name` and `code` keys. ([#11799](https://github.com/craftcms/cms/discussions/11799))\n\n### Fixed\n- Fixed a bug where `iframeResizer.contentWindow.js` was getting loaded for all preview requests, not just Live Preview, and even when `useIframeResizer` was disabled. ([#11778](https://github.com/craftcms/cms/issues/11778))\n- Fixed a bug where deleted relations and Matrix blocks could persist if the edit form was submitted before they had been fully animated away. ([#11789](https://github.com/craftcms/cms/issues/11789))\n- Fixed a PHP error that could occur if `craft\\services\\Assets::getUserTemporaryUploadFolder()` was called when there was no logged-in user account. ([#11751](https://github.com/craftcms/cms/issues/11751))\n\n## 3.7.51 - 2022-08-09\n\n### Added\n- Added the `project-config/export` command. ([#11733](https://github.com/craftcms/cms/pull/11733))\n\n### Deprecated\n- Deprecated `craft\\services\\Categories::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Globals::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Sections::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Tags::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Users::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Volumes::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n\n### Fixed\n- Fixed a bug where the `project-config/apply` command could appear to end prematurely.\n- Fixed a bug where not all project config changes would be applied if a field or site was deleted. ([#9567](https://github.com/craftcms/cms/issues/9567))\n- Fixed an error that could occur when saving an element to a disabled site. ([#10499](https://github.com/craftcms/cms/issues/10499), [#11741](https://github.com/craftcms/cms/issues/11741))\n- Fixed a bug where `$` characters in database connection passwords weren\u2019t being escaped property when backing up/restoring the database. ([#11750](https://github.com/craftcms/cms/issues/11750))\n- Fixed a bug where system messages provided by Yii weren\u2019t getting translated in some cases. ([#11712](https://github.com/craftcms/cms/issues/11712))\n\n## 3.7.50 - 2022-07-26\n\n### Changed\n- Treating element queries as arrays is no longer deprecated. ([#11625](https://github.com/craftcms/cms/discussions/11625))\n- Using the `|length` filter on an element query is no longer deprecated. ([#11625](https://github.com/craftcms/cms/discussions/11625))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.49 - 2022-07-26\n\n### Added\n- The control panel is now translated into Ukrainian.\n- Added `craft\\helpers\\Template::resolveTemplatePathAndLine()`.\n\n### Changed\n- Deprecation warnings\u2019 stack traces now show source templates\u2019 paths and line numbers.\n- Matrix block previews now show selected option labels rather than their raw values. ([#11659](https://github.com/craftcms/cms/issues/11659))\n- Exception JSON responses now include the previous exception details, recursively. ([#11694](https://github.com/craftcms/cms/discussions/11694))\n\n### Fixed\n- Fixed a bug where deprecation warnings for treating an element query as an array weren\u2019t getting logged with an origin, if they involved Twig\u2019s `|batch` filter. ([#11597](https://github.com/craftcms/cms/issues/11597))\n- Fixed a bug where `{% js %}`, `{% script %}`, and `{% css %}` tags weren\u2019t registering JavaScript and CSS code properly when used within a `{% cache %}` tag that contained an ungenerated image transform. ([#11602](https://github.com/craftcms/cms/issues/11602))\n- Fixed a bug where the \u201cUser saved\u201d notification was translated for the former language, when changing the current user\u2019s language preference.\n- Fixed a JavaScript error that occurred when removing a category from a Categories field, if any of its descendants were selected as well. ([#11641](https://github.com/craftcms/cms/issues/11641))\n- Fixed a bug where links to config settings from **Settings** \u2192 **General** didn\u2019t include the correct setting anchors. ([#11665](https://github.com/craftcms/cms/pull/11665))\n- Fixed styling issues with Live Preview in Firefox.\n\n### Security\n- Fixed an information disclosure vulnerability.\n\n## 3.7.48 - 2022-07-12\n\n### Changed\n- Relation fields now focus on the next related element\u2019s \u201cRemove\u201d button when an element is removed. ([#11577](https://github.com/craftcms/cms/issues/11577))\n\n### Fixed\n- Fixed a bug where Craft\u2019s Composer commands could produce a malformed `composer.json` file. ([#11564](https://github.com/craftcms/cms/issues/11564))\n- Fixed a bug where date range inputs weren\u2019t working on mobile. ([#11571](https://github.com/craftcms/cms/issues/11571))\n- Fixed a bug where the \u201cCraft Support\u201d Dashboard widget wasn\u2019t being labeled properly in the widget settings HUD and delete confirmation dialog. ([#11573](https://github.com/craftcms/cms/discussions/11573))\n- Fixed a bug where treating element queries as arrays wasn\u2019t always logging deprecation warnings.\n- Fixed a bug where the project config cache was getting invalidated on each public GraphQL API request.\n- Fixed a bug where the \u201cStatus\u201d label on Edit User pages was blank for suspended users.\n- Fixed an error that could occur when an image transform was configured with a non-integer width or height. ([#11587](https://github.com/craftcms/cms/issues/11587))\n\n## 3.7.47.1 - 2022-07-06\n\n### Fixed\n- Fixed a bug where asset bundles weren\u2019t getting registered on the front end. ([#11555](https://github.com/craftcms/cms/issues/11555))\n\n## 3.7.47 - 2022-07-05\n\n### Changed\n- Template caching is now supported for console requests, for `{% cache %}` tags that have the `globally` param. ([#11551](https://github.com/craftcms/cms/issues/11551))\n- Updated Composer to 2.2.15. ([#11538](https://github.com/craftcms/cms/issues/11538))\n\n### Fixed\n- Fixed focus styling issues with the Edit Route modal.\n\n## 3.7.46 - 2022-06-28\n\n### Added\n- Added `craft\\fields\\BaseOptionsField::encodeValue()`.\n\n### Changed\n- `canonical` is now a reserved field handle. ([#11503](https://github.com/craftcms/cms/issues/11503))\n- `craft\\fields\\BaseOptionsField::translatedOptions()` now has an `$encode` argument.\n\n### Fixed\n- Fixed a bug where `Garnish.setFocusWithin()` wasn\u2019t working if the first focusable element was a checkbox. ([#11498](https://github.com/craftcms/cms/discussions/11498))\n- Fixed a bug where Matrix blocks could be saved in the wrong order.\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Buttons fields could lose their values if their option values were set to integers. ([#11461](https://github.com/craftcms/cms/issues/11461))\n\n## 3.7.45.2 - 2022-06-24\n\n### Fixed\n- Fixed a SQL error that could occur on MySQL 5. ([#11493](https://github.com/craftcms/cms/issues/11493))\n- Fixed a bug where Craft\u2019s Composer commands weren\u2019t ensuring that `config.allow-plugins.yiisoft/yii2-composer` was `true` in `composer.json`. ([#11399](https://github.com/craftcms/cms/issues/11399))\n\n## 3.7.45.1 - 2022-06-21\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to rename assets.\n- Fixed a bug where a provisional draft could be created for an entry if its form was interacted with before the page had fully initialized. ([#11466](https://github.com/craftcms/cms/issues/11466))\n- Fixed exact phrase searching on PostgreSQL. ([#11486](https://github.com/craftcms/cms/issues/11486))\n\n## 3.7.45 - 2022-06-21\n\n### Changed\n- Improved performance when working with temp asset folders.\n- Temp asset folders are no longer created until they\u2019re actually needed. ([#11427](https://github.com/craftcms/cms/issues/11427))\n- Element index queries are no longer cached if they contain a search term.\n- Search inputs within field layout designers now prevent the containing form from being submitted when the <kbd>Return</kbd> key is pressed. ([#11415](https://github.com/craftcms/cms/discussions/11415))\n\n### Fixed\n- Fixed a bug where element types\u2019 `actions()` methods were getting called for all `element-indexes/*` action requests.\n- Fixed a bug where the `install` command would run non-interactively even if not all needed options were passed, resulting in an error after the database tables had been added. ([#11305](https://github.com/craftcms/cms/issues/11305))\n- Fixed a viewport clipping bug on the control panel\u2019s Login page. ([#11372](https://github.com/craftcms/cms/pull/11372))\n- Fixed a bug where filtering an element query by a relational field using `:empty:`/`:notempty:` wasn\u2019t factoring in the field\u2019s \u201cWhich site should entries be related from?\u201d setting properly.\n- Fixed a bug where filtering an element query by a relational field using `:empty:`/`:notempty:` wasn\u2019t factoring in the source elements\u2019 site IDs, for fields set to manage relations on a per-site basis. ([#11418](https://github.com/craftcms/cms/issues/11418))\n- Fixed a bug where the Temporary Uploads asset source wasn\u2019t including subfolders.\n- Fixed a bug where file upload progress bars weren\u2019t always going away when an upload error occurred.\n- Fixed a bug where Pashto was not being treated as an RTL langauge. ([#11428](https://github.com/craftcms/cms/issues/11428))\n- Fixed a bug where the `upscaleImages` config setting wasn\u2019t being respected for transforms where only a single image dimension was specified. ([#11398](https://github.com/craftcms/cms/issues/11398))\n- Fixed an error that could occur when executing a GraphQL query, if a section didn\u2019t have any entry types. ([#11273](https://github.com/craftcms/cms/issues/11273))\n- Fixed an error that could occur when changing the primary site on installs with a large number of users. ([#11459](https://github.com/craftcms/cms/issues/11459))\n- Fixed a bug where Assets fields within Vizy fields weren\u2019t getting relocated from the user\u2019s temp uploads folder. ([#11462](https://github.com/craftcms/cms/issues/11462))\n\n### Security\n- Environment-aware control panel fields no longer suggest environment variables that begin with `HTTP_`.\n- The Sendmail mailer no longer validates if the Sendmail Command setting is set to an enivornment variable that begins with `HTTP_`.\n\n## 3.7.44 - 2022-06-03\n\n### Changed\n- Read/write splitting is now disabled for all console requests.\n- The `db/restore` command now prompts to clear data caches after the import is complete. ([#11327](https://github.com/craftcms/cms/issues/11327))\n- Entry queries no longer factor in seconds when looking for currently-live entries, without excluding entries that were published in the past minute. ([#5389](https://github.com/craftcms/cms/issues/5389))\n\n### Fixed\n- Fixed an error that could occur on PHP 8.1. ([#11345](https://github.com/craftcms/cms/pull/11345))\n- Fixed a bug where project config paths that contained slashes weren\u2019t getting handled properly. ([#10774](https://github.com/craftcms/cms/issues/10774))\n- Fixed a bug where the Login page had a tab-focusable \u201cSkip to content\u201d button. ([#11375](https://github.com/craftcms/cms/issues/11375))\n\n## 3.7.43 - 2022-05-20\n\n### Changed\n- Reversed the order of Lightswitch fields\u2019 \u201cON Label\u201d and \u201cOFF Label\u201d settings. ([#11259](https://github.com/craftcms/cms/issues/11259))\n- `craft\\services\\Elements::duplicateElement()` now has a `$trackDuplication` argument.\n- `craft\\services\\Matrix::duplicateBlocks()` now has a `$trackDuplications` argument.\n\n### Fixed\n- Fixed a bug where editable tables\u2019 delete buttons\u2019 `aria-label` attributes weren\u2019t getting updated when table rows were reordered or deleted.\n- Fixed a bug where editable tables\u2019 delete buttons weren\u2019t visually disabled when the minimum number of rows had been reached.\n- Fixed a bug where all eager-loaded `srcset`-style transform sizes were relative to the first eager-loaded transform, rather than the prior one. ([#11209](https://github.com/craftcms/cms/issues/11209))\n- Fixed a bug where eager-loaded `srcset`-style transform sizes didn\u2019t reference the prior eager-loaded transform\u2019s `format`, `interlace`, `mode`, `position`, or `quality` settings. ([#11264](https://github.com/craftcms/cms/issues/11264))\n- Fixed a bug where the web-based installation wizard wouldn\u2019t show the database connection screen if a connection could be established but no database was selected. ([#11245](https://github.com/craftcms/cms/issues/11245))\n- Fixed an error that could occur when applying a multi-site draft with relational fields. ([#11220](https://github.com/craftcms/cms/issues/11220))\n- Fixed a bug where Matrix blocks could be deleted from newly-created multi-site entries, if the edit page was reloaded. ([#10906](https://github.com/craftcms/cms/issues/10906))\n\n## 3.7.42 - 2022-05-11\n\n### Added\n- Added `craft\\events\\LocateUploadedFilesEvent`.\n- Added `craft\\fields\\Assets::EVENT_LOCATE_UPLOADED_FILES`. ([#11123](https://github.com/craftcms/cms/discussions/11123))\n\n### Changed\n- Improved save performance for multi-site elements ([#11113](https://github.com/craftcms/cms/issues/11113))\n- Built-in Composer actions now ensure that `composer.json` allows the `craftcms/plugin-installer` Composer plugin.\n\n### Fixed\n- Fixed a bug where soft-deleted drafts\u2019 search keywords weren\u2019t getting re-indexed if they were restored.\n- Fixed an error that occurred when transforming an SVG image without specifying a width or height. ([#11122](https://github.com/craftcms/cms/issues/11122))\n- Fixed an error that occurred when saving a Number field with a non-numeric value. ([#11164](https://github.com/craftcms/cms/issues/11164))\n- Fixed a bug where it wasn\u2019t possible to drag an item to the top in admin tables. ([#10781](https://github.com/craftcms/cms/issues/10781))\n- Fixed a bug where entries within Structure sections weren\u2019t expandable if their only descendants were unpublished drafts.\n- Fixed a bug where expanding a collapsed Structure section entry wouldn\u2019t reveal its descendants, if the parent was a draft. ([#11186](https://github.com/craftcms/cms/issues/11186))\n- Fixed a bug where element caches weren\u2019t getting cleared for elements when they were propagated to a newly-created site.\n\n## 3.7.41 - 2022-05-06\n\n### Changed\n- The Upgrade utility now lists any uninstalled and unknown plugins. ([#11101](https://github.com/craftcms/cms/discussions/11101))\n\n### Fixed\n- Fixed an error that occurred when attempting to delete a global set. ([#11100](https://github.com/craftcms/cms/issues/11100))\n- Fixed an error that could occur when applying a draft. ([#11083](https://github.com/craftcms/cms/issues/11083))\n- Fixed a bug where element queries weren\u2019t returning any results if an element attribute table wasn\u2019t joined in, and the element query was set to an abstract element class. ([#11105](https://github.com/craftcms/cms/issues/11105))\n\n## 3.7.40.1 - 2022-05-04\n\n### Fixed\n- Fixed a bug where empty fields could be marked as changed, even when no change was made to them. ([#11078](https://github.com/craftcms/cms/issues/11078))\n\n## 3.7.40 - 2022-05-03\n\n> **Warning**\n> If you are currently running Craft 3.7.39, you will need to [perform this update with Composer](https://craftcms.com/knowledge-base/updating-from-craft-3-7-39).\n\n### Added\n- Added the \u201cCraft 4 Upgrade\u201d utility.\n- Added `craft\\helpers\\Db::extractGlue()`.\n- Added `craft\\helpers\\Db::normalizeParam()`.\n- Added `craft\\utilities\\Upgrade`.\n- Added `craft\\web\\assets\\upgrade\\UpgradeAsset`.\n\n### Changed\n- Improved database performance for concurrent requests. ([#10662](https://github.com/craftcms/cms/issues/10662))\n- The Crop tool in the image editor no longer displays the (incorrect) crop dimensions. ([#11046](https://github.com/craftcms/cms/issues/11046))\n- Asset queries\u2019 `volume` params now support passing an array of `craft\\base\\VolumeInterface` objects.\n- Category queries\u2019 `group` params now support passing an array of `craft\\models\\CategoryGroup` objects.\n- Entry queries\u2019 `section` params now support passing an array of `craft\\models\\Section` objects.\n- Entry queries\u2019 `type` params now support passing an array of `craft\\models\\EntryType` objects. ([#11057](https://github.com/craftcms/cms/issues/11057))\n- Matrix block queries\u2019 `field` params now support passing an array of `craft\\fields\\Matrix` objects.\n- Tag queries\u2019 `group` params now support passing an array of `craft\\models\\TagGroup` objects.\n- Options passed to the `_includes/forms/select` control panel template can now specify a `hidden` key. ([#11053](https://github.com/craftcms/cms/pull/11053))\n- `craft\\services\\Fields::getLayoutsByType()` now memoizes its results. ([#11037](https://github.com/craftcms/cms/pull/11037))\n- Downgraded Composer to 2.2.12, fixing an error that occurred when updating Craft or installing/updating/uninstalling plugins.\n\n### Removed\n- Removed the `--propagate` option from `resave/*` commands, which didn\u2019t have any effect. ([#11032](https://github.com/craftcms/cms/discussions/11032))\n\n### Fixed\n- Fixed a bug where \u201cName\u201d and \u201cHandle\u201d were not getting translated properly in field, volume, and global set validation errors. ([#11029](https://github.com/craftcms/cms/issues/11029))\n- Fixed a bug where passing an array of `craft\\models\\UserGroup` objects to a user query\u2019s `group` param had no effect.\n- Fixed a bug where passing an array that began with `not` into a user query\u2019s `group` param wouldn\u2019t return users that had no user groups.\n- Fixed a bug where it wasn\u2019t possible to order elements by `rand()`/`random()` via GraphQL. ([#11063](https://github.com/craftcms/cms/issues/11063))\n- Fixed a bug where empty Date and Number fields would be marked as changed, even when no change was made to them. ([#10804](https://github.com/craftcms/cms/issues/10804))\n\n## 3.7.39 - 2022-04-26\n\n### Added\n- The Caches utility now has a \u201cCompiled classes\u201d option. ([#10281](https://github.com/craftcms/cms/pull/10281))\n- Added the `folderPath` asset query param.\n- Added `craft\\services\\Assets::getTempVolumeAndSubpath()`.\n- Added `craft\\services\\Assets::createTempAssetQuery()`.\n- Added `craft\\services\\Fields::updateColumn()`.\n- Added `craft\\services\\Sections::getEntryTypeByUid()`.\n\n### Changed\n- Fields\u2019 search indexes are now immediately removed when their \u201cUse this field\u2019s values as search keywords\u201d settings are disabled.\n- User groups\u2019 permission lists are now sorted alphabetically when saved to the project config. ([#10408](https://github.com/craftcms/cms/issues/10408))\n- Improved dropdown menu styling for Firefox.\n- Improved GraphQL performance.\n- `{% nav %}` tags now skips elements whose immediate parent weren\u2019t included in the output. ([#10925](https://github.com/craftcms/cms/issues/10925))\n- Asset, entry, and category selection modals now clear the search results when a new element is created. ([#11015](https://github.com/craftcms/cms/issues/11015))\n- Asset and entry selection modals now sort the elements by Date Created (descending) when a new element is created, to ensure it is immediately visible and selected.\n\n### Fixed\n- Fixed a bug where Matrix blocks could lose their Date field values, if multiple Date fields had with the same handle across different block types. ([#10884](https://github.com/craftcms/cms/issues/10884))\n- Fixed a bug where Matrix block menus were getting truncated if they were too large to fit within the content pane. ([#10883](https://github.com/craftcms/cms/issues/10883))\n- Fixed a bug where Assets fields weren\u2019t respecting their dynamic folder path settings for unpublished drafts, if the Temp Upload Location asset setting was set to a volume. ([#9619](https://github.com/craftcms/cms/issues/9619))\n- Fixed an error that could occur when saving an Assets field for a draft.\n- Fixed a bug where element queries weren\u2019t being limited to return elements of the configured type, if no element type-specific tables were joined in.\n- Fixed a bug where element thumbnails weren\u2019t loading for all but the initial content tab. ([#10918](https://github.com/craftcms/cms/issues/10918))\n- Fixed a bug where Matrix fields\u2019 Min Blocks settings weren\u2019t getting enforced for empty Matrix fields.\n- Fixed an error that could occur when saving Matrix fields with either Min Blocks or Max Blocks configured, but not both, if the Intl extension wasn\u2019t installed. ([#10922](https://github.com/craftcms/cms/issues/10922))\n- Fixed a bug where the system name container was taking up the full viewport height in Safari 13. ([#10930](https://github.com/craftcms/cms/issues/10930))\n- Fixed a bug where Matrix sub-fields were losing their column suffixes after they were resaved. ([#10973](https://github.com/craftcms/cms/issues/10973))\n- Fixed a bug where saving a Matrix field without any block types would result in no changes made to the previously-configured block types, rather than displaying a validation error. ([#10989](https://github.com/craftcms/cms/issues/10989))\n\n### Security\n- The `redirect` controller action now requires the passed-in `url` param to be hashed. ([#10994](https://github.com/craftcms/cms/issues/10994))\n\n## 3.7.38 - 2022-04-06\n\n### Added\n- Added `craft\\helpers\\ArrayHelper::onlyContains()`.\n- Added `craft\\test\\Craft::assertNotPushedToQueue()`. ([#10510](https://github.com/craftcms/cms/pull/10510))\n\n### Changed\n- Duplicated elements no longer have \u201ccopy\u201d appended to the end of their titles. ([#10707](https://github.com/craftcms/cms/pull/10707))\n- User queries\u2019 `group` and `groupId` params now support passing an array that begins with `and`, to only return users that are in all of the subsequent user groups.\n- `Craft.BaseElementSelectorModal` now has `bodyAction` and `indexSettings` settings. ([#4348](https://github.com/craftcms/cms/pull/4348))\n\n### Fixed\n- Fixed a bug where color pickers weren\u2019t clickbale within Table fields. ([#10775](https://github.com/craftcms/cms/issues/10775))\n- Fixed a bug where multi-site elements weren\u2019t getting all of their titles duplicated correctly. ([#10702](https://github.com/craftcms/cms/issues/10702))\n- Fixed deprecation errors that occurred when validating relational and Matrix fields. ([#10815](https://github.com/craftcms/cms/issues/10815))\n- Fixed an error that occurred if field instructions contained any unclosed HTML tags. ([#10290](https://github.com/craftcms/cms/issues/10290))\n- Fixed a bug where the selected volume subfolder would get included in folder drag-and-drop operations. ([#10745](https://github.com/craftcms/cms/issues/10745))\n- Fixed a bug where slideouts weren\u2019t closing when clicked out of, after being opened for the second time. ([#10586](https://github.com/craftcms/cms/issues/10586))\n- Fixed a bug where `Craft.appendHeadHtml()` wasn\u2019t pruning out `<link>` tags that were already present in the DOM.\n- Fixed a bug where image transforms weren\u2019t always getting generated for disabled sites. ([#10498](https://github.com/craftcms/cms/issues/10498))\n- Fixed a bug where it wasn\u2019t possible to scroll the content pane horizontally if any fields took up more than 100% of its width. ([#10849](https://github.com/craftcms/cms/issues/10849))\n\n## 3.7.37 - 2022-03-16\n\n### Changed\n- Improved the styling of copy buttons in the control panel. ([#10732](https://github.com/craftcms/cms/discussions/10732))\n- In-app Plugin Store purchases are now completed on `id.craftcms.com` rather than within the control panel.\n\n### Fixed\n- Fixed a bug where two users could be created with the same username and email, if the **Save** button was double-clicked. ([#9835](https://github.com/craftcms/cms/issues/9835), [#10661](https://github.com/craftcms/cms/issues/10661))\n- Fixed an error that could occur when updating from an earlier version than Craft 3.5.6. ([#10685](https://github.com/craftcms/cms/issues/10685))\n- Fixed an error that could occur when rendering an exception view for another error. ([#10712](https://github.com/craftcms/cms/issues/10712))\n- Fixed a bug where pressing <kbd>Spacebar</kbd> on copy buttons in admin tables didn\u2019t activate them.\n- Fixed a style issue for Safari. ([#10748](https://github.com/craftcms/cms/pull/10748))\n\n## 3.7.36 - 2022-03-03\n\n### Changed\n- `{% js %}` and `{% css %}` tags can now import URLs that don\u2019t end in `.js` or `.css`, so long as they begin with `https://` or `http://`. ([#10666](https://github.com/craftcms/cms/discussions/10666))\n- The `plugin/list` command now shows plugins\u2019 package names. ([#10667](https://github.com/craftcms/cms/discussions/10667))\n\n### Fixed\n- Fixed a bug that prevented moving assets between volumes. ([#10668](https://github.com/craftcms/cms/issues/10668))\n\n## 3.7.35 - 2022-03-01\n\n### Added\n- Added `craft\\errors\\BusyResourceException`.\n- Added `craft\\errors\\StaleResourceException`.\n\n### Changed\n- Improved Live Preview accessibility. ([#7476](https://github.com/craftcms/cms/issues/7476))\n- Improved error reporting when trying to upload an Asset from a disallowed location. ([#10633](https://github.com/craftcms/cms/issues/10633))\n- The `resave/entries` command now supports a `--revisions` flag. ([#10634](https://github.com/craftcms/cms/issues/10634))\n\n### Fixed\n- Fixed an error that occurred when initializing an element with custom field values that weren\u2019t included in its field layout. ([#10622](https://github.com/craftcms/cms/issues/10622))\n- Fixed a PHP 8 compatibility bug.\n- Fixed a bug where drafts weren\u2019t getting propagated when a section was enabled for new sites. ([#10634](https://github.com/craftcms/cms/issues/10634))\n- Fixed a bug where moving files and folders from the Assets index page wouldn\u2019t ever resolve properly if there was an unexpected server error.\n- Fixed a bug where disclosure menus could be shorter than their contents. ([#10639](https://github.com/craftcms/cms/issues/10639))\n- Fixed potential race conditions that could result in old project config data getting cached. ([#7795](https://github.com/craftcms/cms/issues/7795))\n- Fixed a bug where numerically-indexed array keys weren\u2019t always consecutive after the project config was rebuilt. ([#10512](https://github.com/craftcms/cms/issues/10512))\n\n## 3.7.34 - 2022-02-22\n\n### Added\n- Added `craft\\helpers\\App::phpConfigValueAsPaths()`.\n- Added `craft\\helpers\\App::normalizePhpPaths()`.\n- Added `craft\\helpers\\App::isPathAllowed()`.\n\n### Changed\n- Improved date and time input accessibility. ([#10575](https://github.com/craftcms/cms/pull/10575))\n- Craft no longer attempts to write a license key file when `CRAFT_EPHEMERAL` is set to `true`. ([#10558](https://github.com/craftcms/cms/pull/10558))\n- Craft no longer attempts to write project config YAML files when `CRAFT_EPHEMERAL` is set to `true`. ([#10558](https://github.com/craftcms/cms/pull/10558))\n- Craft no longer publishes asset bundles when `CRAFT_EPHEMERAL` is set to `true`. ([#10558](https://github.com/craftcms/cms/pull/10558))\n\n### Fixed\n- Fixed a bug where Date fields weren\u2019t displaying properly.\n- Fixed a bug where some GraphQL API query arguments would break element queries. ([#10580](https://github.com/craftcms/cms/issues/10580))\n- Fixed a PHP 8.1 compatibility bug. ([#10594](https://github.com/craftcms/cms/issues/10594))\n- Fixed a bug where Matrix action menus were causing horizontal scrollbars within Live Preview. ([#10601](https://github.com/craftcms/cms/issues/10601))\n- Fixed a PHP warning that would occur when running Craft in Dev Mode, if the `open_basedir` PHP setting was set. ([#10581](https://github.com/craftcms/cms/issues/10581))\n- Fixed a bug where the \u201cView\u201d button on Edit Category pages wasn\u2019t getting linked to a tokenized preview page for disabled sites.\n- Fixed a bug where asset subfolder toggles weren\u2019t visible when their source was focused. ([#10617](https://github.com/craftcms/cms/issues/10617))\n- Fixed a bug where Live Preview would close when the <kbd>Esc</kbd> key was pressed, when a modal window was open. ([#10623](https://github.com/craftcms/cms/issues/10623))\n\n### Security\n- Craft now HTML-encodes user\u2019 names in the default system email messages.\n\n## 3.7.33 - 2022-02-15 [CRITICAL]\n\n> **Note**\n> The way CSRF tokens are generated has changed in this release, so all users will be logged out during the update.\n\n### Added\n- Added support for PHP 8.1.\n- Added the `users/logout-all` console command.\n- Added `Garnish.prefersReducedMotion()`.\n\n### Changed\n- Lightswitch inputs are no longer animated for browsers that have requested reduced motion. ([#10532](https://github.com/craftcms/cms/pull/10532))\n- Reverted the 3.7.32 change to plugin settings. ([#10533](https://github.com/craftcms/cms/issues/10533))\n- Improved accessibility for the Craft Support widget. ([#7290](https://github.com/craftcms/cms/issues/7290))\n- The `graphql/api` controller action now supports passing the GraphQL bearer token via an `X-Craft-Authorization` header, in addition to `Authorization`. ([#10539](https://github.com/craftcms/cms/discussions/10539))\n- `craft\\helpers\\App::parseBooleanEnv()` now treats `0` and `1` as boolean values. ([#10524](https://github.com/craftcms/cms/issues/10524))\n- Updated GraphiQL to 1.5.16.\n- Updated Yii to 2.0.45.\n- Updated svg-sanitizer to 0.15.\n\n## Fixed\n- Fixed a bug where admin tables would display the wrong handle values after an item was deleted. ([#10538](https://github.com/craftcms/cms/issues/10538))\n- Fixed a bug where entries and Matrix blocks weren\u2019t necessarily getting propagated from the primary site, when they were activated for a new site via a setting change. ([#10561](https://github.com/craftcms/cms/issues/10561))\n- Fixed an error that occurred when testing queue jobs. ([#10569](https://github.com/craftcms/cms/pull/10569))\n\n### Security\n- Fixed a potential CSRF security issue.\n\n## 3.7.32 - 2022-02-09\n\n### Added\n- Added `craft\\base\\FieldInterface::getInputId()`.\n- Added `craft\\db\\Migration::createIndexIfMissing()`.\n- Added `craft\\db\\Migration::dropIndexIfExists()`.\n- Added `craft\\services\\Users::canSuspend()`.\n- Added `craft\\validators\\SiteIdValidator::$allowDisabled`.\n\n### Changed\n- Improved element query performance. ([#10418](https://github.com/craftcms/cms/discussions/10418))\n- Improved asset transform eager-loading performance. ([#10427](https://github.com/craftcms/cms/discussions/10427))\n- The \u201cSuspend\u201d and \u201cUnsuspend\u201d user actions are now smarter about when they should be available, based on the selected users.\n- Plugin settings forms now display the values stored in the project config, even if they\u2019ve been overridden by the plugin\u2019s config file.\n- Improved the styling of field tips and warnings.\n- The Edit Field page will now instantiate a new field instance of the expected field type, if it had been previously saved while the field type was missing. ([#10437](https://github.com/craftcms/cms/issues/10437))\n\n### Fixed\n- Fixed a bug where Date and Time fields\u2019 labels weren\u2019t referencing the correct input IDs.\n- Fixed a bug where the last control panel breadcrumb could be collapsed under a \u201cMore\u2026\u201d menu when there was enough room to display it. ([#10495](https://github.com/craftcms/cms/issues/10495))\n- Fixed a bug where it was possible for non-admins to suspend/unsuspend admins from the Users index page. ([#10422](https://github.com/craftcms/cms/issues/10422))\n- Fixed a bug where the `project-config/apply` command output could get mangled. ([#9900](https://github.com/craftcms/cms/issues/9900))\n- Fixed an error that could occur when saving an entry programmatically on a front-end request, if any sites were disabled. ([#10499](https://github.com/craftcms/cms/issues/10499))\n- Fixed a bug where Date and Time inputs weren\u2019t clearable on mobile. ([#10500](https://github.com/craftcms/cms/issues/10500))\n- Fixed a bug where Date and Time fields created by JavaScript weren\u2019t getting native `date` and `time` inputs on mobile.\n- Fixed a JavaScript error on the Edit User page. ([#10509](https://github.com/craftcms/cms/issues/10509))\n- Fixed a bug where it was possible to save a custom field whose type was missing. ([#10437](https://github.com/craftcms/cms/issues/10437))\n\n### Security\n- Fixed a GraphQL API vulnerability.\n\n## 3.7.31 - 2022-02-08\n\n### Added\n- Added the `clear-deprecations` command. ([#10430](https://github.com/craftcms/cms/discussions/10430))\n- Added the `plugin/list` command. ([#10470](https://github.com/craftcms/cms/pull/10470))\n- Added the `users/activation-url` and `users/password-reset-url` commands. ([#10482](https://github.com/craftcms/cms/pull/10482))\n- Added the `revisionId` field to drafts when queried via GraphQL. ([#10462](https://github.com/craftcms/cms/pull/10462))\n- Added `craft\\web\\View::registerJsWithVars()`.\n\n### Changed\n- Improved focus styles in the control panel. ([#10398](https://github.com/craftcms/cms/pull/10398))\n- Improved Matrix field accessibility for screen readers. ([#10480](https://github.com/craftcms/cms/pull/10480))\n- Improved Table field accessibility for screen readers. ([#10502](https://github.com/craftcms/cms/pull/10502))\n- Handles within admin tables are now displayed as copy-buttons. ([#10475](https://github.com/craftcms/cms/discussions/10475))\n- Craft no longer sends a `Permissions-Policy: interest-cohort=()` header by default, as Google has [abandoned](https://blog.google/products/chrome/get-know-new-topics-api-privacy-sandbox/) its FLoC proposal.\n- Craft no longer attempts to create the `cpresources` folder when `CRAFT_EPHEMERAL` is set to `true`. ([#10412](https://github.com/craftcms/cms/issues/10412))\n- Video assets\u2019 focal points are no longer suppressed, if they were set by a plugin or module. ([#10415](https://github.com/craftcms/cms/discussions/10415))\n- Plugins are now consistently loaded in the same order across all environments. ([#10441](https://github.com/craftcms/cms/issues/10441))\n- Element exporters\u2019 `export()` methods can now return an array or generator function, even if `isFormattable()` returns `true`. ([#10484](https://github.com/craftcms/cms/pull/10484))\n- `Craft.BaseElementSelectorModal` now supports a `fullscreen` setting.\n\n### Fixed\n- Fixed a bug where Craft would not display an appropriate error message if a Local volume was pointing to a broken symlink. ([#10396](https://github.com/craftcms/cms/issues/10396)\n- Fixed an error that could occur when calling an element\u2019s `getUrl()` method for a disabled site. ([#10421](https://github.com/craftcms/cms/issues/10421))\n- Fixed a JavaScript error that occurred after saving an unpublished draft.\n- Fixed a bug where Live Preview wasn\u2019t always showing changes for entries that weren\u2019t live. ([#10455](https://github.com/craftcms/cms/issues/10455))\n- Fixed a bug where it wasn\u2019t possible to restore a soft-deleted global set with project config. ([#10458](https://github.com/craftcms/cms/issues/10458))\n- Fixed right-to-left layout styling bugs. ([#10459](https://github.com/craftcms/cms/issues/10459), [#10439](https://github.com/craftcms/cms/issues/10439))\n- Fixed a bug where entry revision menus would show newly-added sites as enabled even if they were disabled by default.\n- Fixed a bug where `craft\\base\\Element::getCanonical()` wasn\u2019t memoizing its result based on the `$anySite` argument.\n- Fixed a JavaScript error. ([#10428](https://github.com/craftcms/cms/issues/10428))\n- Fixed a bug where Dashboard widget flip animations weren\u2019t always working in Firefox.\n- Fixed an error that could occur if an element\u2019s `getSupportedSites()` method returned info for a site that didn\u2019t exist or was soft-deleted.\n- Fixed GraphiQL layout issues for users with a RTL language set. ([#10465](https://github.com/craftcms/cms/pull/10465))\n\n## 3.7.30.1 - 2022-01-21\n\n### Fixed\n- Fixed a bug where the \u201cNew category\u201d button on the Categories index page wasn\u2019t working. ([#10399](https://github.com/craftcms/cms/issues/10399))\n- Fixed an error that occurred when saving an Assets field with a file that was in a temporary location within the `storage/` folder, if the `storage/` folder didn\u2019t live within the project root. ([#10401](https://github.com/craftcms/cms/issues/10401))\n\n## 3.7.30 - 2022-01-20\n\n> **Warning**\n> The `mutex` component now uses a file-based driver by default. Load-balanced environments should [switch to a different driver](https://craftcms.com/knowledge-base/configuring-load-balanced-environments#mutex-locks).\n\n### Added\n- Added `craft\\mutex\\Mutex`.\n- Added `craft\\mutex\\MutexTrait`.\n- Added `craft\\mutex\\NullMutex`.\n\n### Changed\n- When a draft is published, Craft now automatically reloads other browser tabs that are opened to the same Edit Entry page. ([#10381](https://github.com/craftcms/cms/issues/10381))\n- Improved modal and slideout accessibility for screen readers. ([#10384](https://github.com/craftcms/cms/pull/10384), [#10234](https://github.com/craftcms/cms/pull/10234))\n- The `mutex` component is now set to `craft\\mutex\\Mutex` by default, and should no longer be overridden directly. Its nested `mutex` property should be [overridden instead](https://craftcms.com/knowledge-base/configuring-load-balanced-environments#mutex-locks).\n- `craft\\helpers\\App::mutexConfig()` is no longer deprecated.\n\n### Deprecated\n- Deprecated `craft\\helpers\\App::dbMutexConfig()`, as database-based mutex locking is no longer recommended.\n- Deprecated `craft\\mutex\\DbMutexTrait`.\n- Deprecated `craft\\mutex\\MysqlMutex`.\n- Deprecated `craft\\mutex\\PgsqlMutex`.\n\n### Fixed\n- Fixed a bug where Craft could generate `CustomFieldBehavior` classes that were missing the available fields. ([#6013](https://github.com/craftcms/cms/issues/6013))\n- Fixed a bug where Live Preview iframes weren\u2019t full-height when `useIframeResizer` was disabled. ([#10380](https://github.com/craftcms/cms/issues/10380))\n- Fixed an error that could occur if an Assets field was saved while set to a file stored in `storage/runtime/assets/tempuploads/`. ([#10382](https://github.com/craftcms/cms/issues/10382))\n- Fixed a bug where it wasn\u2019t possible to apply a numeric namespace to input names. ([#6656](https://github.com/craftcms/cms/pull/6656))\n\n## 3.7.29 - 2022-01-18\n\n### Added\n- `resave/*` commands now support bulk-setting an attribute/custom field value via new `--set`, `--to`, and `--if-empty` options. ([#10356](https://github.com/craftcms/cms/pull/10356))\n- Added `craft\\fieldlayoutelements\\BaseField::statusId()`.\n- Added `craft\\helpers\\App::parseEnv()` and `parseBooleanEnv()`, replacing their `Craft` class counterparts. ([#10319](https://github.com/craftcms/cms/discussions/10319))\n\n### Changed\n- The Users index page now updates the URL based on the selected source. ([#10336](https://github.com/craftcms/cms/issues/10336))\n- Live Preview no longer reloads the iframe when the device type is changed. ([#10353](https://github.com/craftcms/cms/discussions/10353))\n- `admins`, `all`, and `new` are now reserved user group handles.\n- The content in the `resourcepaths` table is now excluded from database backups by default.\n- User caches are now invalidated after login attempts. ([#10313](https://github.com/craftcms/cms/discussions/10313))\n- Assets fields\u2019 \u201cUpload files\u201d buttons now have `aria-describedby` attributes when appropriate.\n- Color fields\u2019 hex inputs now have `aria-label` attributes.\n- Field status messages are now included in their `aria-describedby` attributes.\n- User queries will no longer exclude suspended users when `status('pending')` is passed. ([#10361](https://github.com/craftcms/cms/issues/10361))\n- Template autosuggest fields now include suggestions for templates in custom site template roots. ([#10372](https://github.com/craftcms/cms/discussions/10372))\n\n### Deprecated\n- Deprecated `Craft::parseEnv()`. `craft\\helpers\\App::parseEnv()` should be used instead.\n- Deprecated `Craft::parseBooleanEnv()`. `craft\\helpers\\App::parseBooleanEnv()` should be used instead.\n\n### Fixed\n- Fixed a bug where admin tables were displaying titles incorrectly.\n- Fixed a bug where `aria-describedby` attributes were getting namespaced incorrectly when they referenced multiple IDs.\n- Fixed a bug where \u201cView\u201d links on Edit Entry pages weren\u2019t getting updated when the entry\u2019s preview target URLs changed. ([#10257](https://github.com/craftcms/cms/issues/10257))\n- Fixed a bug where `craft\\base\\ApplicationTrait::getIsMultiSite()` would return `false` on the front end, if there was only one enabled site, but additional disabled sites.\n- Fixed a bug where `craft\\base\\Element::getSite()` would throw an exception on the front end, if the element belonged to a disabled site.\n- Fixed a bug where `craft\\services\\Sites::getEditableSiteIds()` would exclude disabled sites on the front end.\n- Fixed a bug where validation errors referenced by `aria-describedby` attributes weren\u2019t getting read out by VoiceOver. ([#10355](https://github.com/craftcms/cms/pull/10355))\n- Fixed a bug where element queries\u2019 `withQueries` properties were ignored. ([#10359](https://github.com/craftcms/cms/pull/10359))\n- Fixed a bug where fatal PHP errors were not logged to `stderr` when the `CRAFT_STREAM_LOG` PHP constant was set to `true`. ([#10366](https://github.com/craftcms/cms/pull/10366))\n- Fixed a bug where Dropdown fields with invalid data would not always display a blank option. ([#10365](https://github.com/craftcms/cms/issues/10365))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.28 - 2022-01-05\n\n### Changed\n- Updated Yii to 2.0.44.\n\n### Fixed\n- Fixed a Composer error that could occur if `composer.craftcms.com` was missing an expected package/version, but Packagist knew about it. ([#10311](https://github.com/craftcms/cms/issues/10311))\n- Fixed a PHP error that could occur when querying for Matrix blocks. ([#10315](https://github.com/craftcms/cms/issues/10315))\n- Fixed a bug where Single sections\u2019 drafts would get deleted when their section settings were updated. ([#10307](https://github.com/craftcms/cms/issues/10307))\n- Fixed an error that could occur on the Dashboard if there were any Quick Post widgets that included a Title field. ([#10314](https://github.com/craftcms/cms/issues/10314))\n\n## 3.7.27.2 - 2022-01-06\n\n### Fixed\n- Fixed an error that could occur when updating to Craft 3.7.28/Yii 2.0.44 from the control panel.\n\n## 3.7.27.1 - 2022-01-04\n\n### Fixed\n- Fixed a PHP error that would occur when creating a new user. ([#10308](https://github.com/craftcms/cms/issues/10308))\n\n## 3.7.27 - 2022-01-04\n\n### Added\n- Added the `setSchemaOnConnect` database connection setting. ([#10273](https://github.com/craftcms/cms/issues/10273))\n- Added `craft\\errors\\InvalidHtmlTagException`.\n- Added `craft\\helpers\\Html::encodeInvalidTags()`.\n- Added `craft\\models\\FieldLayout::getCustomFieldElements()`.\n- Added `craft\\services\\Fields::getLayoutsByIds()`.\n- Added `craft\\web\\twig\\variables\\Image::getContents()`, `getDataUrl()`, `getMimeType()`, and `getPath()`. ([#10268](https://github.com/craftcms/cms/issues/10268))\n\n### Changed\n- Improved the performance of the control panel, for installs with a large number of entry types.\n- A warning is now logged when a password-reset email could not be sent, if `preventUserEnumeration` is enabled.\n- The `install/check`, `install/craft`, and `setup/db-creds` commands now explicitly check if Craft is installed in the default schema on Postgres.\n- The `setup/db-creds` command now uses existing environment variable values for its default prompt values, if available.\n- The `setup/db-creds` command no longer prompts for the database schema on Postgres, unless `setSchemaOnConnect` is enabled. Instead it will determine the appropriate schema to use based on `SHOW search_path`. ([#10273](https://github.com/craftcms/cms/issues/10273))\n- The web-based installation wizard no longer shows a field for the database schema on Postgres. ([#10273](https://github.com/craftcms/cms/issues/10273))\n- Dashboard widgets\u2019 `data-colspan` attributes are now updated when their colspan changes. ([#10286](https://github.com/craftcms/cms/discussions/10286))\n- `craft\\base\\ApplicationTrait::getIsInstalled()` will now explicitly check if Craft is installed in the default schema on Postgres, when `true` is passed.\n- `craft\\helpers\\Html::parseTag()` now throws an `InvalidHtmlTagException` exception when an invalid tag is encountered. (Catching `InvalidArgumentException`s will still work.)\n- `craft\\services\\Routes::getProjectConfigRoutes()` now returns a numerically-indexed array of URL rule arrays, with `pattern` keys that define the URI patterns.\n- `craft\\services\\Users::getUserPreferences()` and `getUserPreference()` no longer accept `null` passed to the first argument.\n\n### Deprecated\n- Deprecated `craft\\elements\\User::mergePreferences()`.\n\n### Fixed\n- Fixed a bug where the details pane could jump down when scrolling on desktop browsers that are less than 974 pixels wide.\n- Fixed a bug where soft-deleted Matrix blocks nested within Neo blocks could become duplicated when restored from a prior revision. ([#10256](https://github.com/craftcms/cms/issues/10256))\n- Fixed a bug where Color fields\u2019 HSL values could be incorrect. ([#10261](https://github.com/craftcms/cms/issues/10261))\n- Fixed a bug where `<video>`, `<embed>`, and `<iframe>` tags within field instructions could be wider than the field\u2019s container. ([#10264](https://github.com/craftcms/cms/issues/10264))\n- Fixed an error that occurred if the first control panel-defined route had a numeric URI pattern. ([#10251](https://github.com/craftcms/cms/issues/10251))\n- Fixed an error that could occur if a section didn\u2019t have any entry types. ([#10272](https://github.com/craftcms/cms/issues/10272))\n- Fixed a bug where `craft\\services\\Config::setDotEnvVar()` wasn\u2019t escaping backslashes when modifying the value of an existing environment variable. ([#10274](https://github.com/craftcms/cms/issues/10274))\n- Fixed a bug where Live Preview could fail to load if opened while changes were being autosaved. ([#10280](https://github.com/craftcms/cms/issues/10280))\n- Fixed a bug where the control panel layout could break if any field instructions/tips/warnings included an HTML tag that wasn\u2019t closed properly. Such tags are now encoded so they appear as plain text. ([#10290](https://github.com/craftcms/cms/issues/10290))\n- Fixed a bug where disabled plugins could cause duplicate database queries.\n- Fixed a bug where multiple calls to `craft\\services\\Users::getUserPreferences()` could cause duplicate database queries.\n\n### Security\n- Fixed a bug where it was possible to identify valid usernames/user emails via password-reset forms when `preventUserEnumeration` was enabled. ([#6000](https://github.com/craftcms/cms/issues/6000))\n\n## 3.7.26 - 2021-12-15\n\n### Added\n- Added `avif` as a web-safe image format. ([#10222](https://github.com/craftcms/cms/pull/10222))\n- Added `avif` to the allowed asset file extensions.\n- Added `craft\\fields\\data\\ColorData::getHsl()`, `getH()`, `getHue()`, `getL()`, `getLightness()`, `getS()`, and `getSaturation()`. ([#10235](https://github.com/craftcms/cms/discussions/10235))\n- Added `craft\\services\\Images::getSupportsAvif()`.\n\n### Changed\n- Reverted a 3.7.24 change where URL fields started encoding query string params. ([#10193](https://github.com/craftcms/cms/discussions/10193))\n- User verification and password-reset URLs for users with control panel access are no longer based on the front-end URL, when generated within the control panel. ([#10224](https://github.com/craftcms/cms/issues/10224))\n- Element queries\u2019 `status` arguments can now begin with `not` to return all elements except those with a given status or statuses. ([#9541](https://github.com/craftcms/cms/discussions/9541))\n- The `previewTokenDuration` config setting now defaults to the same value as `defaultTokenDuration`. ([#2394](https://github.com/craftcms/cms/issues/2394))\n- Craft no longer requires the Portable UTF-8 library directly. ([#10252](https://github.com/craftcms/cms/issues/10252))\n\n### Fixed\n- Fixed a bug where Neo blocks could lose their content if Preparse resaved a provisional draft as it was being created.\n- Fixed a bug where `craft\\services\\Fields::getLayoutByType()` could return an outdated field layout, if it had been updated in the same request. ([#10237](https://github.com/craftcms/cms/issues/10237))\n- Fixed a SQL error that could occur when querying for users via GraphQL.\n- Fixed an error that could occur when loading elements, if any custom fields were selected in the query before the element\u2019s field layout ID. ([#10205](https://github.com/craftcms/cms/issues/10205))\n- Fixed an error that could occur when searching for elements in the control panel. ([#10238](https://github.com/craftcms/cms/issues/10238))\n- Fixed a bug where `craft\\db\\ActiveRecord` was JSON-encoding database expression objects. ([#10239](https://github.com/craftcms/cms/issues/10239))\n- Fixed a bug where entry editor slideouts weren\u2019t warning of losing unsaved changes after the entry type was changed. ([#10243](https://github.com/craftcms/cms/issues/10243))\n- Fixed a bug where Matrix fields weren\u2019t getting reverted properly when reverting an entry\u2019s content to a prior revision, if they were nested within a Neo or Super Table field. ([#10253](https://github.com/craftcms/cms/issues/10253))\n\n## 3.7.25.1 - 2021-12-07\n\n### Added\n- Added `craft\\helpers\\ElementHelper::rootSource()`.\n\n### Fixed\n- Fixed an error that could occur on element indexes.\n- Fixed a bug where it wasn\u2019t possible to sort nested element sources by custom fields. ([#10226](https://github.com/craftcms/cms/issues/10226))\n\n## 3.7.25 - 2021-12-07\n\n### Changed\n- Improved the accessibility of the \u201cDefault Asset Location\u201d and \u201cAsset Location\u201d Assets field settings.\n- Element indexes now keep track of recent sort selections and factor them into the new element order. ([#10203](https://github.com/craftcms/cms/issues/10203))\n- The \u201cView\u201d button and \u201cView\u201d menu options on Edit Entry pages now use `<a>` tags. ([#10220](https://github.com/craftcms/cms/discussions/10220))\n- A `describedBy` variable is now available for `input` blocks rendered when embedding the `_includes/forms/field` control panel template.\n- `craft\\services\\Tokens::createToken()` and `createPreviewToken()` now have `$token` arguments, which accept pre-generated tokens.\n\n### Fixed\n- Fixed an error that could occur if the `field()` macro in the `_includes/forms` control panel template was called withoun an `input` argument. ([#10208](https://github.com/craftcms/cms/issues/10208))\n- Fixed a bug where the `migrate/fresh` command was erasing all migration history and attempting to reapply migrations. ([#10209](https://github.com/craftcms/cms/issues/10209))\n- Fixed a JavaScript error that occurred when pressing <kbd>Return</kbd> on an autosuggest input when no option was selected.\n- Fixed a bug where Edit Category pages could have two sets of \u201cPreview\u201d and \u201cView\u201d buttons. ([#10215](https://github.com/craftcms/cms/issues/10215))\n- Fixed a bug where boolean menus weren\u2019t showing the \u201cNo\u201d option as selected when the value was `false`.\n\n## 3.7.24 - 2021-12-02\n\n### Added\n- Added the `parseBooleanEnv()` Twig function.\n- Added `craft\\base\\FieldTrait::$describedBy`, which custom fields should reference when setting their input\u2019s `aria-describedby` attribute. ([#10183](https://github.com/craftcms/cms/pull/10183))\n- Added `craft\\behaviors\\EnvAttributeParserBehavior::getUnparsedAttribute()`.\n- Added `craft\\fieldlayoutelements\\BaseField::errorsId()`.\n- Added `craft\\fieldlayoutelements\\BaseField::instructions()`.\n- Added `craft\\fieldlayoutelements\\BaseField::instructionsId()`.\n- Added `craft\\fieldlayoutelements\\BaseField::tipId()`.\n- Added `craft\\fieldlayoutelements\\BaseField::warningId()`.\n- Added `craft\\helpers\\UrlHelper::encodeParams()`.\n- Added `craft\\i18n\\Formatter::willBeMisrepresented()`.\n- Added `craft\\services\\Config::setBooleanDotEnvVar()`.\n- Added `craft\\services\\Security::isSensitive()`.\n- Added `craft\\web\\twig\\variables\\Cp::field()`.\n\n### Changed\n- Improved the color contrast of UI controls throughout the control panel. ([#10169](https://github.com/craftcms/cms/pull/10169))\n- Improved the accessibility of element select fields for screen readers. ([#10169](https://github.com/craftcms/cms/pull/10169))\n- Improved built-in input descriptions for screen readers. ([#10183](https://github.com/craftcms/cms/pull/10183))\n- URL fields now allow query strings to be appended to email addresses (e.g. `hello@example.com?subject=Check+this+out\u2026`). ([#10193](https://github.com/craftcms/cms/discussions/10193))\n- `{% deprecated %}` tags now log proper Craft deprecation warnings rather than triggering an `E_USER_DEPRECATED` error. ([#10181](https://github.com/craftcms/cms/discussions/10181))\n- Editable tables\u2019 `template` columns now support `suggestEnvVars` and `suggestAliases` settings on the column definition. ([#10143](https://github.com/craftcms/cms/discussions/10143))\n- Editable tables now support an `autosuggest` column type, which support `suggestEnvVars` and `suggestAliases` settings on the column definition. ([#10143](https://github.com/craftcms/cms/discussions/10143))\n- The `cp.assets.edit.meta`, `cp.categories.edit.meta`, and `cp.entries.edit.meta` template hooks are now located after the native meta fields, rather than before. ([#10172](https://github.com/craftcms/cms/issues/10172))\n- `craft\\helpers\\Cp::fieldHtml()` now supports `headingPrefix` and `headingSuffix` config keys.\n\n### Fixed\n- Fixed an error that could occur when PHP\u2019s `set_time_limit()` function was disabled. ([#10152](https://github.com/craftcms/cms/issues/10152))\n- Fixed a bug where the `_includes/forms/autosuggest` template wasn\u2019t respecting `suggestEnvVars` if `suggestions` was already defined.\n- Fixed a bug where Table fields could have an incorrect GraphQL input type definition. ([#10173](https://github.com/craftcms/cms/issues/10173))\n- Fixed a bug where structure element query params weren\u2019t working if the passed-in element was missing its structure data. ([#10122](https://github.com/craftcms/cms/issues/10122))\n- Fixed a bug where `craft\\base\\Element::getChildren()` and `getDescendants()` could return results for elements without an ID.\n- Fixed an error that occurred when opening the Timeline view in the Debug Toolbar. ([#10176](https://github.com/craftcms/cms/issues/10176))\n- Fixed a bug where Number fields\u2019 Default Value, Min Value, and Max Value settings could show values formatted in the wrong locale, leading to an error on save. ([#10184](https://github.com/craftcms/cms/issues/10184))\n- Fixed an error that could occur when creating a Table field. ([#10186](https://github.com/craftcms/cms/issues/10186))\n- Fixed a bug where Matrix blocks within drafts could lose track of their canonical blocks when they were updated upstream, resulting in duplicated blocks. ([#10130](https://github.com/craftcms/cms/issues/10130))\n- Fixed a bug where disabled site handles referenced in `config/routes.php` were being treated as URL patterns. ([#10197](https://github.com/craftcms/cms/issues/10197))\n\n### Security\n- Fixed a bug where sensitive-sounding environment variables\u2019 values could be included in validation errors.\n- The \u201cSendmail Command\u201d email setting no longer allows arbitrary values. Now it can only be set to a known `sendmail` command, an environment variable, or its current value.\n\n## 3.7.23 - 2021-11-26\n\n### Added\n- Added `craft\\console\\Controller::table()`.\n- Added `craft\\helpers\\Console::table()`.\n\n### Changed\n- Reduced the amount of time it took for the GraphiQL IDE to initialize.\n- The `plugin/install`, `plugin/uninstall`, `plugin/enable`, and `plugin/disable` commands\u2019 `handle` arguments are no longer required for interactive shells. When not passed, a plugin handle can be chosen from a list of applicable plugins. ([#10158](https://github.com/craftcms/cms/discussions/10158))\n- Select fields that include environment variable options now show a tip about that when an environment variable isn\u2019t already selected.\n- Hyperlinks within tips are now always underlined.\n- Updated Garnish to 0.1.48.\n\n### Fixed\n- Fixed a bug where GraphiQL Explorer wasn\u2019t working. ([#10153](https://github.com/craftcms/cms/issues/10153))\n- Fixed a bug where the last control panel breadcrumb could be collapsed under a \u201cMore\u2026\u201d menu when there was enough room to display it.\n- Fixed a bug where the \u201cCreate a new child category\u201d action on the Categories index page resulted in a 404. ([#10148](https://github.com/craftcms/cms/issues/10148))\n- Fixed a bug where it wasn\u2019t possible to save an image transform when the Image Format setting was set to \u201cAuto\u201d. ([#10150](https://github.com/craftcms/cms/issues/10150))\n- Fixed an error that could occur if any asset bundles\u2019 `js` or `css` values were set to arrays. ([#10154](https://github.com/craftcms/cms/issues/10154))\n- Fixed a bug where structure data wasn\u2019t always present when duplicating a multi-site elements. ([#10165](https://github.com/craftcms/cms/issues/10165))\n\n## 3.7.22 - 2021-11-23\n\n### Added\n- Added the `booleanMenu`, `booleanMenuField`, `selectize`, and `selectizeField` macros to the `_includes/forms.html` control panel template. ([#8866](https://github.com/craftcms/cms/discussions/8866))\n- Added `Craft::parseBooleanEnv()`.\n- Added `craft\\base\\ApplicationTrait::getWebpack()`.\n- Added `craft\\services\\Webpack`.\n- Added `craft\\web\\twig\\variables\\Cp::getBooleanEnvOptions()`.\n- Added `craft\\web\\twig\\variables\\Cp::getEnvOptions()`.\n\n### Changed\n- The \u201cSystem Status\u201d and \u201cTime Zone\u201d general settings can now be set to environment variables. ([#9855](https://github.com/craftcms/cms/issues/9855))\n- The \u201cUse authentication\u201d and \u201cEncryption Method\u201d SMTP mailer type settings can now be set to an environment variable. ([#8989](https://github.com/craftcms/cms/discussions/8989))\n- The `timeZone` and `timeZoneField` control panel form macros now support an `includeEnvVars` setting.\n\n### Fixed\n- Fixed a bug where the `entry-revisions/save-draft` action wasn\u2019t respecting the `provisional` param when creating a new entry and draft. ([#10105](https://github.com/craftcms/cms/issues/10105))\n- Fixed an error that occurred when saving an element, if any custom field handles conflicted with magic properties on element queries. ([#10099](https://github.com/craftcms/cms/issues/10099))\n- Fixed a bug where relational field thumbnails weren\u2019t always loading for fields that weren\u2019t on the initial tab.\n- Fixed a bug where previewing disabled Structure section entries or categories would return a 404 response. ([#10121](https://github.com/craftcms/cms/issues/10121))\n- Fixed a bug where ancestor/sibling/descendant queries were yielding no results when previewing a draft or revision. ([#10122](https://github.com/craftcms/cms/issues/10122))\n- Fixed a bug where Matrix fields weren\u2019t getting reverted properly when reverting an entry\u2019s content to a prior revision. ([#10106](https://github.com/craftcms/cms/issues/10106))\n\n## 3.7.21 - 2021-11-16\n\n### Added\n- Added `craft\\behaviors\\CustomFieldBehavior::$canSetProperties`.\n- Added `craft\\services\\Fields::getFieldVersion()`.\n- Added `craft\\validators\\DateCompareValidator`.\n\n### Changed\n- Improved the accessibility of several field types. ([#10085](https://github.com/craftcms/cms/pull/10085))\n- Entries now validate that their post date comes before their expiry date, if they have one. ([#10074](https://github.com/craftcms/cms/issues/10074))\n- Entry post dates now default to the day before their expiry date, if they have one. ([#10074](https://github.com/craftcms/cms/issues/10074))\n- Video assets\u2019 dimensions are no longer suppressed, if they were set by a plugin or module. ([#9038](https://github.com/craftcms/cms/discussions/9038))\n- The GraphiQL IDE no longer updates the URL automatically as the query is modified. The query is now deep-linkable via a new \u201cShare query\u201d button. ([#10064](https://github.com/craftcms/cms/issues/10064))\n- `canSetProperties` and `hasMethods` are now reserved field handles.\n- Improved the performance of entry queries. ([#10095](https://github.com/craftcms/cms/issues/10095))\n- `craft\\base\\Element::__set()` now detects whether a custom field value is being set, and if so, passes the value through `setFieldValue()`. ([#7726](https://github.com/craftcms/cms/issues/7726))\n- Updated GraphiQL to 1.4.7.\n\n### Fixed\n- Fixed a bug where `craft\\base\\FieldTrait::$required` wasn\u2019t getting set before custom fields\u2019 `getInputHtml()` methods were called.\n- Fixed a bug where entry drafts and revisions were missing their structure info when previewed. ([#10056](https://github.com/craftcms/cms/issues/10056))\n- Fixed a bug where \u201cCustomize\u201d buttons on element index pages didn\u2019t have a pointer cursor. ([#10067](https://github.com/craftcms/cms/issues/10067))\n- Fixed a bug where Edit Entry pages would warn about losing unsaved changes if the page was unloaded immediately after the entry type was changed. ([#10076](https://github.com/craftcms/cms/issues/10076))\n- Fixed a bug where Craft wasn\u2019t able to resolve dynamic control panel resource requests if Craft was installed in a subdirectory.\n- Fixed an error that occurred when attempting to create a new entry and draft via the `entry-revisions/save-draft` action. ([#10089](https://github.com/craftcms/cms/issues/10089))\n- Fixed a bug where entries\u2019 descendants\u2019 URIs weren\u2019t always getting updated after a parent\u2019s URI changed. ([#10094](https://github.com/craftcms/cms/issues/10094))\n\n## 3.7.20 - 2021-11-06\n\n### Changed\n- Non-admin users with permission to administrate other users can now require password resets for other users. ([#10057](https://github.com/craftcms/cms/issues/10057))\n- The Plugin Store will now prevent installation of plugins that require a greater PHP version than what\u2019s allowed by the environment.\n\n### Fixed\n- Fixed a bug where focus rings weren\u2019t visible on Safari. ([#10058](https://github.com/craftcms/cms/pull/10058))\n- Fixed a 403 error that occurred when executing pending migrations from the control panel while logged out. ([#9990](https://github.com/craftcms/cms/issues/9990))\n\n## 3.7.19.1 - 2021-11-04\n\n### Changed\n- `craft\\elements\\Entry::setAuthor()` now sets the entry\u2019s `$authorId` property.\n\n### Fixed\n- Fixed a bug where Edit Entry pages weren\u2019t preselecting the entry\u2019s parent, if it didn\u2019t exist on the primary site. ([#10050](https://github.com/craftcms/cms/issues/10050))\n\n## 3.7.19 - 2021-11-02\n\n> **Note**\n> After updating, run the following command for each Structure section, to prune unneeded structure data for drafts and revisions.\n>\n> ```\n> php craft utils/repair/section-structure <sectionHandle>\n> ```\n\n### Added\n- Added `craft\\services\\Structures::remove()`.\n\n### Changed\n- Entry drafts and revisions are no longer placed within the section\u2019s structure (with the exception of unpublished drafts, and provisional drafts which have been assigned a new parent entry). ([#9977](https://github.com/craftcms/cms/issues/9977), [#9999](https://github.com/craftcms/cms/issues/9999))\n- The `utils/repair/section-structure` command now prunes unneeded structure data for drafts and revisions.\n- The `utils/repair/section-structure` command now appends entries to the structure root if they don\u2019t have any supported sites in common with their parent.\n- `craft\\base\\Elementinterface::getModifiedFields()` and `isFieldModified()` now have `$anySite` attributes.\n- `craft\\services\\Elements::duplicateElement()` no longer places derivative elements in the structure.\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.7.17+ from the control panel. ([#9990](https://github.com/craftcms/cms/issues/9990))\n- Fixed a bug where Structure section entries would forget who their parent entry was, if it was an unpublished draft.\n- Fixed a bug where Structure sections\u2019 structure data wasn\u2019t getting soft-deleted when the section type was changed.\n- Fixed a bug where provisional drafts weren\u2019t given a position within the structure when converting a Channel section to a Structure.\n- Fixed a bug where `isset()` checks on renamed config settings were always returning `false`.\n- Fixed an error that could occur when deleting image transforms. ([#9957](https://github.com/craftcms/cms/issues/9957))\n- Fixed a bug where some Matrix sub-field changes could be discarded when applying a draft. ([#10034](https://github.com/craftcms/cms/issues/10034))\n- Fixed an incompatibility with the Overflow plugin. ([#10044](https://github.com/craftcms/cms/issues/10044))\n- Fixed a bug where Categories fields weren\u2019t eager-loading their relations in the structure-defined order. ([#10042](https://github.com/craftcms/cms/issues/10042))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.18.2 - 2021-10-27\n\n### Fixed\n- Fixed an error that could occur if the `CRAFT_STREAM_LOG` PHP constant was set to `true`.\n- Fixed a bug where the \u201cSave and continue editing\u201d action and its <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keybord shortcut weren\u2019t working for entry drafts, if the `autosaveDrafts` config setting was disabled. ([#10029](https://github.com/craftcms/cms/issues/10029))\n\n## 3.7.18.1 - 2021-10-27\n\n### Fixed\n- Fixed a bug where GraphQL mutations to create new entries were returning `null`. ([#10016](https://github.com/craftcms/cms/issues/10016))\n- Fixed a couple focus ring styling issues. ([#10017](https://github.com/craftcms/cms/issues/10017), [#10018](https://github.com/craftcms/cms/issues/10018))\n\n## 3.7.18 - 2021-10-26\n\n### Added\n- Added `craft\\console\\ErrorHandler`. ([#10006](https://github.com/craftcms/cms/pull/10006))\n\n### Changed\n- Craft no longer writes out informational log messages when it\u2019s not installed yet or an update is pending, if Dev Mode is disabled.\n- Dropdown fields now prepend a blank option to their menu when the current value is invalid. ([#9989](https://github.com/craftcms/cms/issues/9989))\n- Some control panel POST requests no longer disable database replica connections. ([#9996](https://github.com/craftcms/cms/discussions/9996))\n- Updated Axios to 0.21.4.\n- Updated jQuery UI to 1.13.0.\n\n### Fixed\n- Fixed a bug where `craft\\helpers\\Html::parseTagAttributes()` was ignoring tag attribute values if there were any whitespace characters surrounding the `=` character. ([#9997](https://github.com/craftcms/cms/pull/9997))\n- Fixed a bug where `craft\\helpers\\Html::parseTagAttributes()` was including trailing tabs, newlines, and other non-space whitespace characters in the parsed values of unquoted attributes. ([#9997](https://github.com/craftcms/cms/pull/9997))\n- Fixed an error that could occur if the `log` component was configured with a custom log target and `flushInterval` set to `1`.\n- Fixed a bug where `plugin/*` commands weren\u2019t always handling failures properly. ([#9984](https://github.com/craftcms/cms/issues/9984))\n- Fixed a bug where entry title changes could be overlooked when merging upstream changes into a draft. ([#9966](https://github.com/craftcms/cms/issues/9966))\n- Fixed a bug where it wasn\u2019t possible to query for draft or revision creators via GraphQL. ([craftcms/gatsby-source-craft#56](https://github.com/craftcms/gatsby-source-craft/issues/56))\n- Fixed a bug where Super Table blocks could go missing when a draft was created, if their block type ID matched another Matrix/Super Table/Neo block\u2019s ID on the same page.\n\n## 3.7.17.2 - 2021-10-21\n\n### Changed\n- `Craft::dd()` no longer defaults to including syntax highlighting in its output for console requests. ([#9972](https://github.com/craftcms/cms/pull/9972))\n\n### Fixed\n- Fixed a PHP error that could occur when uploading assets on some environments. ([#9995](https://github.com/craftcms/cms/issues/9995))\n- Fixed a PHP error that occurred when exporting elements on PHP 7.2 or 7.3. ([#9958](https://github.com/craftcms/cms/issues/9958))\n- Fixed a JavaScript error that occurred in Safari. ([#9976](https://github.com/craftcms/cms/issues/9976))\n\n## 3.7.17.1 - 2021-10-20\n\n### Fixed\n- Fixed an error that could occur when creating database backups on Windows. ([#9978](https://github.com/craftcms/cms/issues/9978))\n- Fixed a bug where it wasn\u2019t possible to upload assets if the `storage/` folder was symlinked. ([#9980](https://github.com/craftcms/cms/issues/9980))\n\n## 3.7.17 - 2021-10-19\n\n### Added\n- Added the `provisional` argument for the remaining draft mutations via GraphQL. ([#9946](https://github.com/craftcms/cms/issues/9946))\n- Added the `notes` and `name` arguments to the create draft mutation via GraphQL.\n- Added the `is countable` Twig test.\n- Added the `is object` Twig test.\n- Added `craft\\helpers\\ElementHelper::isCanonical()`.\n- Added `craft\\helpers\\ElementHelper::isDerivative()`.\n- Added `craft\\services\\Path::getSystemPaths()`.\n\n### Changed\n- Improved the accessibility of overflowing breadcrumbs and the \u201cMy account\u201d menu. ([#9945](https://github.com/craftcms/cms/pull/9945))\n- Logs now include the raw request body in place of the `$_POST` array, if the `$_POST` array is empty. ([#9941](https://github.com/craftcms/cms/discussions/9941))\n- It\u2019s now possible to modify Entries fields to relate entry drafts. ([#9963](https://github.com/craftcms/cms/issues/9963))\n- It\u2019s now possible to set Matrix block queries\u2019 `field` and `owner` params via config arrays. ([#9968](https://github.com/craftcms/cms/issues/9968))\n- The `_includes/forms/text.html` control panel template now supports an `orientation` config value, which defines the `dir` input attribute.\n- Craft no longer logs a warning when the request path attempts to break out of the `templates/` folder. ([#9929](https://github.com/craftcms/cms/issues/9929))\n- Updated Composer to 2.1.9.\n- Updated Garnish to 0.1.47.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to create or publish a provisional draft via GraphQL. ([#9946](https://github.com/craftcms/cms/issues/9946))\n- Fixed a bug where entry drafts weren\u2019t getting propagated to other sites automatically after a section\u2019s Propagation Method setting was changed. ([#9944](https://github.com/craftcms/cms/issues/9944))\n- Fixed a bug where element indexes weren\u2019t immediately showing changes after an element was restored.\n- Fixed a bug where user indexes weren\u2019t immediately showing changes to users\u2019 activation/suspension states. ([#9947](https://github.com/craftcms/cms/issues/9947))\n- Fixed an element query performance issue. ([#9806](https://github.com/craftcms/cms/discussions/9806))\n- Fixed a bug where front-end action requests could resolve to disabled sites.\n- Fixed a bug where Assets fields weren\u2019t respecting their dynamic folder path settings for unpublished drafts. ([#9619](https://github.com/craftcms/cms/issues/9619))\n- Fixed a bug where deprecation warnings weren\u2019t getting logged if `craft\\services\\Deprecator::$logTarget` was set to `'logs'`.\n- Fixed a bug where escaped quotes (`\\\"`) in element export data were causing CSV cell values to end prematurely. ([#9958](https://github.com/craftcms/cms/issues/9958))\n- Fixed a bug where HTML entities within nested field values weren\u2019t getting encoded for Matrix block previews. ([#9964](https://github.com/craftcms/cms/issues/9964))\n- Fixed an error that could occur on element edit pages if there weren\u2019t any alternate form actions. ([#9969](https://github.com/craftcms/cms/issues/9969))\n- Fixed a bug where it wasn\u2019t possible to upload an asset via a data URL if its MIME type contained a period. ([#9632](https://github.com/craftcms/cms/issues/9632))\n- Fixed a bug where the characters-left indicator was right-aligned for RTL Plain Text fields, for users with an LTR formatting locale. ([#9967](https://github.com/craftcms/cms/issues/9967))\n- Fixed a bug where `craft\\web\\ErrorHandler::EVENT_BEFORE_HANDLE_EXCEPTION` wasn\u2019t getting triggered for requests that accepted a JSON response. ([#9973](https://github.com/craftcms/cms/issues/9973))\n\n### Security\n- Assets fields now require temporary files to reside in temporary folders or somewhere within the project root, excluding system directories.\n- Fixed a potential RCE vulnerability.\n\n## 3.7.16 - 2021-10-06\n\n### Added\n- Added `craft\\elements\\Asset::getUrlsBySize()`. ([#9931](https://github.com/craftcms/cms/discussions/9931))\n\n### Fixed\n- Fixed a bug where the top-level \u201cEnabled\u201d lightswitch on Edit Entry pages wasn\u2019t getting updated when adding a new site to an entry. ([#9935](https://github.com/craftcms/cms/issues/9935))\n- Fixed a bug where entry indexes weren\u2019t showing changes to unpublished drafts until a published entry was saved. ([#9940](https://github.com/craftcms/cms/issues/9940))\n\n## 3.7.15 - 2021-10-05\n\n### Added\n- Added the `graphql/create-token` command. ([#9930](https://github.com/craftcms/cms/discussions/9930))\n- Added the `graphql/list-schemas` command.\n- Added the `users/impersonate` command. ([#9919](https://github.com/craftcms/cms/pull/9919))\n- Added the `provisional` argument for draft mutations via GraphQL.\n- Added the `is array` Twig test.\n- Added the `is callable` Twig test.\n- Added the `is float` Twig test.\n- Added the `is integer` Twig test.\n- Added the `is numeric` Twig test.\n- Added the `is resource` Twig test.\n- Added the `is scalar` Twig test.\n- Added the `is string` Twig test.\n- Added `craft\\base\\ElementTrait::$isNewForSite`.\n- Added `craft\\mutex\\DbMutexTrait`.\n\n### Changed\n- Mutex locks which are \u201creleased\u201d during a database transaction are no longer actually released for other requests until the transaction is complete.\n- Username inputs now disable auto-capitalization on iOS devices.\n- Date and time fields now use native `date` and `time` input types on mobile. ([#9903](https://github.com/craftcms/cms/discussions/9903))\n- Improved the performance of eager-loading entry authors. ([#9907](https://github.com/craftcms/cms/discussions/9907))\n- Simultaneous entry-save requests are now executed once at a time.\n- Matrix block queries now factor in nested fields based on the `type`/`typeId` param, if set. ([#9921](https://github.com/craftcms/cms/discussions/9921))\n- The `graphql/dump-schema` and `graphql/print-schema` commands now support a `--schema` argument.\n- The `users/delete` and `users/set-password` commands now support passing a user ID.\n- `craft\\fields\\Matrix::getBlockTypeFields()` now has a `$typeIds` argument.\n\n### Deprecated\n- Deprecated `craft\\helpers\\UrlHelper::baseRequestUrl()`. `Craft::getAlias('@web')` should be used instead.\n- Deprecated `craft\\mutex\\PrefixedMutexTrait`. `DbMutexTrait` should be used instead.\n\n### Fixed\n- Fixed a bug where the \u201cDuplicate (with descendants)\u201d element action would only partially duplicate multi-level structures. ([#9889](https://github.com/craftcms/cms/issues/9889))\n- Fixed a bug where it wasn\u2019t possible to mutate a provisional draft via GraphQL. ([#9892](https://github.com/craftcms/cms/issues/9892))\n- Fixed a bug where it wasn\u2019t possible to mutate a draft via GraphQL without passing all required custom fields. ([#9893](https://github.com/craftcms/cms/issues/9893))\n- Fixed an error that could occur when merging upstream changes into a draft, if the canonical entry had been enabled for a new site and contained new Matrix blocks. ([#9895](https://github.com/craftcms/cms/issues/9895))\n- Fixed a bug where sections\u2019 Default Status settings weren\u2019t being respected when adding a new site to an entry. ([#9896](https://github.com/craftcms/cms/issues/9896))\n- Fixed a bug where the `utils/repair/section-structure` command was removing provisional drafts from the structure. ([#9868](https://github.com/craftcms/cms/issues/9868))\n- Fixed a bug where the control panel header elements could become squished. ([#9902](https://github.com/craftcms/cms/issues/9902))\n- Fixed a bug where collapsed structure elements weren\u2019t getting included in exports. ([#9913](https://github.com/craftcms/cms/issues/9913))\n- Fixed a bug where Matrix blocks weren\u2019t getting propagated to sites that were added to a draft, when its changes were applied to the canonical entry. ([#9910](https://github.com/craftcms/cms/issues/9910))\n- Fixed a bug where it wasn\u2019t possible to revert Matrix blocks that had been soft-deleted. ([#9928](https://github.com/craftcms/cms/issues/9928))\n- Fixed a styling conflict with Craft Commerce.\n- Fixed a bug where `craft\\services\\AssetTransforms::getLocalImageSource()` was trying to delete non-existent transform source files. ([#9884](https://github.com/craftcms/cms/issues/9884))\n- Fixed a bug where `craft\\services\\Fields::getLayoutByType()` wasn\u2019t setting the `type` property when a field layout didn\u2019t exist yet for the element type. ([#9918](https://github.com/craftcms/cms/issues/9918))\n\n### Security\n- Generated front-end URLs now begin with the `@web` alias value if the current site doesn\u2019t have a base URL.\n- Password inputs now hide the password when their form is submitted.\n\n## 3.7.14 - 2021-09-28\n\n### Added\n- Added `craft\\base\\Element::EVENT_PREP_QUERY_FOR_TABLE_ATTRIBUTE`. ([#9862](https://github.com/craftcms/cms/pull/9862))\n- Added `craft\\base\\ElementInterface::getIsFresh()`.\n- Added `craft\\base\\ElementInterface::setIsFresh()`.\n- Added `craft\\cache\\ElementQueryTagDependency`.\n- Added `craft\\elements\\db\\ElementQuery::getCacheTags()`.\n- Added `craft\\events\\ElementIndexTableAttributeEvent`.\n- Added `craft\\events\\SearchEvent::$elementQuery`.\n- Added `craft\\events\\SearchEvent::getElementIds()`.\n- Added `craft\\events\\SearchEvent::setElementIds()`.\n- Added `craft\\services\\Search::searchElements()`.\n- Added the `fullPane` setting to Vue admin tables, which can be set to `false` if the table is not the only UI component in its content pane.\n\n### Changed\n- Enhanced the visibility of global navigation badges.\n- Enhanced the visibility of focused menu options.\n- Improved the performance of element query `search` params. ([#9867](https://github.com/craftcms/cms/issues/9867))\n- Element queries\u2019 `cache()` methods now create a cache dependency based on the element queries\u2019 cache tags by default.\n- Element index queries are now cached.\n- The `migrate/all` command now includes plugins whose schema versions have changed, even if they don\u2019t have any new migrations. ([#9860](https://github.com/craftcms/cms/issues/9860))\n- It\u2019s now possible to pass an array of Matrix block IDs into a Matrix field\u2019s element query param. ([#9875](https://github.com/craftcms/cms/issues/9875))\n- Improved GraphQL performance. ([#9830](https://github.com/craftcms/cms/issues/9830))\n\n### Deprecated\n- Deprecated `craft\\base\\Element::getHasFreshContent()`. `getIsFresh()` should be used instead.\n- Deprecated `craft\\services\\Search::filterElementIdsByQuery()`.\n\n### Fixed\n- Fixed the control panel heading order for more intuitive navigation by screen reader users.\n- Fixed an uncaught error that could occur when saving a draft. ([#9841](https://github.com/craftcms/cms/issues/9841))\n- Fixed an error that occurred when mutating an entry via GraphQL, if it belonged to any disabled sites. ([#9842](https://github.com/craftcms/cms/issues/9842))\n- Fixed a bug where some field types wouldn\u2019t use their configured default values on new entries, fields that weren\u2019t included in the primary entry type. ([#9852](https://github.com/craftcms/cms/issues/9852))\n- Fixed a bug where some action menus didn\u2019t have a label for screen readers.\n- Fixed a bug where `craft\\web\\Response::redirect()` no longer supported passing an array to the `$url` argument. ([#9857](https://github.com/craftcms/cms/issues/9857))\n- Fixed a bug where duplicated entries that were created via an \u201cApplying new propagation method\u201d job weren\u2019t getting positioned correctly based on the original entries\u2019 structure. ([#9782](https://github.com/craftcms/cms/issues/9782))\n- Fixed a bug where unpublished drafts could disappear after clicking \u201cCreate entry\u201d if the URI could not be made unique. ([#9873](https://github.com/craftcms/cms/issues/9873))\n- Fixed an error that could occur when processing `relatedTo*` GraphQL arguments in some cases.\n- Fixed an error that could occur when an entry\u2019s Title Format referenced a custom field with `author` in its handle. ([#9891](https://github.com/craftcms/cms/issues/9891))\n\n### Security\n- Fixed a potential CSV injection vulnerability.\n\n## 3.7.13 - 2021-09-14\n\n### Added\n- Added the `up` command, which calls `migrate/all` and `project-config/apply`, wrapped in a mutex lock.\n- Added `craft\\services\\Plugins::updatePluginVersionInfo()`.\n\n### Changed\n- Matrix fields are now fully highlighted when changed, rather than just the specific sub-field. ([#9814](https://github.com/craftcms/cms/issues/9814))\n- When a draft is saved, Craft now automatically reloads other browser tabs that are opened to the same Edit Entry page.\n- Emoji characters are now stripped from search keywords. ([#9813](https://github.com/craftcms/cms/issues/9813))\n- Control panel pages now send `Content-Security-Policy: frame-ancestors 'self'` headers.\n- Edit Entry pages now reveal some exception messages when drafts are unable to save.\n- Control panel pages now have a \u201cSkip to content\u201d link before the navigation, for screen readers. ([#9832](https://github.com/craftcms/cms/pull/9832))\n- Live Preview now maintains the window\u2019s original scroll position when closed. ([#9828](https://github.com/craftcms/cms/issues/9828))\n- `craft\\console\\Controller::run()` now passes the `--interactive`, `--color`, and `--silentExitOnException` options to the sub-command.\n\n### Deprecated\n- Deprecated `craft\\services\\Updates::setNewPluginInfo()`. `craft\\services\\Plugins::updatePluginVersionInfo()` should be used instead.\n\n### Fixed\n- Fixed an incompatibility with SEOmatic. ([#9811](https://github.com/craftcms/cms/issues/9811))\n- Fixed a bug where the `backup`, `install/plugin`, `restore`, and `setup` commands weren\u2019t passing the `--interactive`, `--color`, and `--silentExitOnException` options to their sub-commands.\n- Fixed a bug where drafts were getting autosaved when the site status toggles were expanded, if the entry was disabled for the current site but enabled for other sites.\n- Fixed a bug where it was possible for two provisional drafts to exist for the same entry and user.\n- Fixed an error that could occur if a log target was configured with a low flush interval. ([#9818](https://github.com/craftcms/cms/issues/9818))\n- Fixed an error that could occur on the Settings \u2192 General page if the `system` project config array was missing any values. ([#7350](https://github.com/craftcms/cms/issues/7350))\n- Fixed a bug where Edit Entry pages weren\u2019t redirecting to the Current revision after reverting an entry to a prior revision. ([#9821](https://github.com/craftcms/cms/issues/9821))\n- Fixed a bug where Assets fields were suppressing some exceptions while rendering the subpath, which weren\u2019t related to template rendering. ([#9824](https://github.com/craftcms/cms/issues/9824))\n- Fixed an error that could occur when setting an integer value on an active record attribute for a `MEDIUMTEXT` or `LONGTEXT` column. ([#9825](https://github.com/craftcms/cms/issues/9825))\n- Fixed a bug where it wasn\u2019t possible to pinch-zoom the control panel on Android devices. ([#9833](https://github.com/craftcms/cms/pull/9833))\n\n## 3.7.12 - 2021-09-08\n\n### Added\n- Added `craft\\helpers\\ElementHelper::isOutdated()`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_UPDATE_SEARCH_INDEX`. ([#9801](https://github.com/craftcms/cms/discussions/9801))\n\n### Changed\n- Improved the performance of applying drafts. ([#9802](https://github.com/craftcms/cms/issues/9802))\n- Improved the performance of element queries. ([#9806](https://github.com/craftcms/cms/discussions/9806))\n- Live Preview is once again supported by entries when the `autosaveDrafts` config setting is disabled.\n- Checkboxes, Dropdown, Multi-select, and Radio Buttons fields now include the selected options\u2019 labels in their search keywords. ([#9799](https://github.com/craftcms/cms/issues/9799))\n- It\u2019s now possible for field types to disable delta name registration for nested custom fields by calling `Craft::$app->view->setIsDeltaRegistrationActive(false);` before rendering them.\n- `craft\\events\\ElementEvent` now extends `craft\\events\\CancelableEvent`.\n- `craft\\models\\FieldLayout::createForm()` now accepts a `registerDeltas` key in its `$config` argument, which can be set to `true` or `false` to enable/disable delta name registration for any custom fields in the form.\n- `craft\\services\\Elements::duplicateElement()` now has a `$placeInStructure` argument.\n- The `Craft.t()` JS method now supports translation messages with [`select` parameters](https://www.yiiframework.com/doc/guide/2.0/en/tutorial-i18n#selection).\n\n### Deprecated\n- Deprecated `craft\\behaviors\\DraftBehavior::getIsOutdated()`.\n\n### Fixed\n- Fixed an error that occurred when merging upstream Matrix field changes into a draft, if the draft didn\u2019t exist in all the same sites as its canonical entry. ([#9774](https://github.com/craftcms/cms/issues/9774))\n- Fixed a bug where duplicated entries that were created via an \u201cApplying new propagation method\u201d job weren\u2019t getting positioned correctly based on the original entries\u2019 structure. ([#9782](https://github.com/craftcms/cms/issues/9782))\n- Fixed a bug where `craft\\fieldlayoutelements\\CustomField::formHtml()` was always enabling delta name registration, unless the form was static.\n- Fixed an exception that could occur if an invalid alias was passed to the `svg()` Twig function.\n- Fixed a bug where Edit Category pages weren\u2019t remembering changes or showing validation errors in the event that a category couldn\u2019t be saved. ([#9796](https://github.com/craftcms/cms/issues/9796))\n- Fixed a bug where the `migrate/all` command wasn\u2019t running Craft and plugin migrations if the schema versions hadn\u2019t changed.\n- Fixed a bug where Craft was indexing search keywords for block elements that belonged to entry revisions. ([#9801](https://github.com/craftcms/cms/discussions/9801))\n- Fixed a bug where `craft\\services\\Elements::mergeCanonicalChanges()` was doing more work than it needed to. ([#9802](https://github.com/craftcms/cms/issues/9802))\n- Fixed a bug where it wasn\u2019t possible to paste into a Number field on Windows. ([#9803](https://github.com/craftcms/cms/issues/9803))\n\n## 3.7.11 - 2021-08-31\n\n### Added\n- Added the `canonicalUid` field to entries queried via GraphQL.\n- Added `craft\\base\\ElementInterface::getCanonicalUid()`. ([#9757](https://github.com/craftcms/cms/issues/9757))\n\n### Changed\n- Edit Entry pages now show a \u201cSave draft\u201d button for users without the \u201cPublish live changes\u201d permission. ([#9750](https://github.com/craftcms/cms/issues/9750))\n- Users without the \u201cDelete entries\u201d permission can now delete their own unpublished drafts.\n- All entries now have a `canonicalId` field when queried via GraphQL now; not just drafts.\n- `craft\\services\\Matrix::validateBlockType()` no longer has a `$validateUniques` argument.\n- Improved the performance of entry queries for installs with several hundred thousand entries or more.\n- Visible password inputs now prevent the browser from auto-capitalizing the input text.\n\n### Deprecated\n- Deprecated `craft\\records\\MatrixBlockType::$validateUniques`.\n\n### Fixed\n- Fixed an error that could occur when saving Matrix fields, if the Type Linked Field and Expanded Singles plugins were both installed. ([#9749](https://github.com/craftcms/cms/issues/9749))\n- Fixed a bug where `craft\\helpers\\Queue::push()` wasn\u2019t returning the job ID. ([#9764](https://github.com/craftcms/cms/issues/9764))\n- Fixed a bug where code editors powered by Monaco Editor were showing focus rings on the text cursor. ([#9772](https://github.com/craftcms/cms/issues/9772))\n\n## 3.7.10 - 2021-08-19\n\n### Changed\n- It\u2019s now possible to hook into the delete process of a Vue admin table row.\n- Dynamically-served control panel resources no longer get cache headers, and no longer validate that the URI hash matches. ([#9738](https://github.com/craftcms/cms/issues/9738))\n\n### Fixed\n- Fixed a bug where Tokenfield inputs weren\u2019t getting sized correctly when the window was resized, if rendered within a field that used a fieldset. ([#9734](https://github.com/craftcms/cms/issues/9734))\n- Fixed a bug where row headings that included a status were getting bold text in Vue admin tables. ([#9704](https://github.com/craftcms/cms/issues/9704))\n- Fix a bug where GraphQL queries could fail if they included Date fields with empty values.\n- Fixed an error that could occur when installing Craft using whe web-based install wizard, if a database connection couldn\u2019t be established. ([#9740](https://github.com/craftcms/cms/pull/9740))\n\n## 3.7.9 - 2021-08-17\n\n### Added\n- Added the `utils/prune-provisional-drafts` command, which prunes provisional drafts for entries that have more than one per user.\n- Added `craft\\helpers\\App::supportsIdn()`.\n\n### Changed\n- Custom fields\u2019 search keywords are now indexed for entry drafts.\n- Email fields now allow IDNA ASCII characters in the domain name, on servers with the Intl extension. ([#9698](https://github.com/craftcms/cms/discussions/9698))\n- Revved asset URLs now use a `v` query string param. ([#9716](https://github.com/craftcms/cms/issues/9716))\n- Element sources\u2019 badge counts are now kept up-to-date when performing bulk element actions. ([#9728](https://github.com/craftcms/cms/issues/9728))\n- Date fields that are set to show the time zone now set their values to the selected time zone by default when queried via GraphQL, to be consistent with the PHP and Twig APIs. ([#9719](https://github.com/craftcms/cms/issues/9719))\n- The `utils/prune-revisions` command now has a `--dry-run` flag.\n- The `utils/prune-revisions` command will now output how many excess revisions it could actually load for each entry, if it differed from the original estimate.\n- Updated Yii to 2.0.43.\n\n### Deprecated\n- Deprecated `craft\\helper\\App::isNitro()`. ([#9709](https://github.com/craftcms/cms/issues/9709))\n\n### Fixed\n- Fixed a bug where custom fields\u2019 search keywords weren\u2019t getting indexed for newly-created entries. ([#9699](https://github.com/craftcms/cms/issues/9699))\n- Fixed a bug where user email addresses would validate if they had IDNA ASCII characters in the local part, even though Swiftmailer doesn\u2019t allow it. ([#9096](https://github.com/craftcms/cms/issues/9096))\n- Fixed a bug where Date fields weren\u2019t handling array values with `datetime` keys properly. ([#9708](https://github.com/craftcms/cms/issues/9708))\n- Fixed a bug where Edit Asset pages for top-level assets had an extra breadcrumb. ([#9720](https://github.com/craftcms/cms/issues/9720))\n- Fixed a bug where the \u201cNew category\u201d button on the Categories index page would link to a 404 when a non-primary site was selected. ([#9722](https://github.com/craftcms/cms/issues/9722))\n- Fixed a bug where changing the site from an Edit Category page would go to a 404 when editing a new, unsaved category.\n- Fixed a bug where deep-linking to a volume\u2019s subfolder that contained any non-ASCII characters would return a 404. ([#9723](https://github.com/craftcms/cms/issues/9723))\n- Fixed a bug where the Assets index page wasn\u2019t updating the URL when selecting a subfolder that had been renamed on the same page load.\n- Fixed a bug where the CLI installer would always save a `PRIMARY_SITE_URL` environment variable to the `.env` file, even if the initial site\u2019s base URL was already set to an alias or environment variable. ([#9724](https://github.com/craftcms/cms/issues/9724))\n- Fixed an `UnsupportedSiteException` error that could occur on Edit Entry pages for provisional drafts, if any upstream Matrix blocks needed to be merged in, whose Matrix field\u2019s Propagation Method was set to something besides \u201cSave blocks to all sites the owner element is saved in\u201d. ([#9664](https://github.com/craftcms/cms/issues/9664))\n- Fixed a bug where replacing an asset\u2019s file from an Edit Asset page would seem to not take effect until the page was refreshed. ([#9700](https://github.com/craftcms/cms/issues/9700))\n- Fixed a bug where upstream translatable field changes weren\u2019t always getting merged into entry drafts properly. ([#9729](https://github.com/craftcms/cms/issues/9729))\n\n## 3.7.8 - 2021-08-06\n\n### Added\n- It\u2019s now possible to bypass console warnings about running Craft as the root/super user by defining a `CRAFT_ALLOW_SUPERUSER` environment variable. ([#7955](https://github.com/craftcms/cms/issues/7955))\n- Added `craft\\web\\Request::setIsActionRequest()`.\n- Added `craft\\web\\twig\\CpExtension`.\n- Added `craft\\web\\twig\\GlobalsExtension`.\n\n### Changed\n- Craft\u2019s global Twig variables (e.g. `craft`) can now be autocompleted within Twig templates when using PhpStorm with the [Symfony Support](https://plugins.jetbrains.com/plugin/7219-symfony-support) plugin.\n\n### Fixed\n- Fixed a bug where the site menu on Edit Category pages wasn\u2019t working properly. ([#9658](https://github.com/craftcms/cms/issues/9658))\n- Fixed a bug where the \u201cSave and add another\u201d action on Edit Category pages wasn\u2019t retaining the currently-selected site or parent category selection. ([#9677](https://github.com/craftcms/cms/issues/9677))\n- Fixed a bug where the \u201cDiscard changes\u201d button on Edit Entry pages wasn\u2019t retaining the currently-selected site. ([#9663](https://github.com/craftcms/cms/issues/9663))\n- Fixed an error that occurred when attempting to change a global set\u2019s handle, if its former handle was a reserved word.\n- Fixed a bug where it wasn\u2019t possible to search for Matrix blocks by a specific sub-field\u2019s handle using the `search` param. ([#9679](https://github.com/craftcms/cms/issues/9679))\n- Fix a JavaScript error that occurred after moving a subfolder on the Assets index page. ([#9686](https://github.com/craftcms/cms/issues/9686))\n- Fixed an infinite loop that could occur when handing a front-end set-password request, if there was a validation error on the submitted password. ([#9684](https://github.com/craftcms/cms/issues/9684))\n- Fixed a bug where entries could lose other sites\u2019 content when being saved from an unpublished draft, if their section\u2019s Propagation Method was set to \u201cLet each entry choose which sites it should be saved to\u201d. ([#9680](https://github.com/craftcms/cms/issues/9680))\n- Fixed a bug where entries that were created via the \u201cSave as a new entry\u201d action on an Edit Entry page didn\u2019t include all content changes made in the original entries\u2019 provisional draft. ([#9681](https://github.com/craftcms/cms/issues/9681))\n- Fixed a bug where code blocks in field instructions could bleed into the subsequent field. ([#9683](https://github.com/craftcms/cms/issues/9683))\n\n## 3.7.7 - 2021-07-29\n\n### Added\n- Added the `canonicalId` GraphQL field for entries.\n\n### Deprecated\n- Deprecated the `sourceId` and `sourceUid` GraphQL fields for entries. `canonicalId` should be used instead.\n\n### Fixed\n- Fixed an error that could occur when creating a new entry, if the section\u2019s Entry URI Format contained `{canonicalId}`. ([#6080](https://github.com/craftcms/cms/issues/6080))\n- Fixed a bug where `craft\\helpers\\Db::isTextualColumnType()` was always returning `false`.\n- Fixed a bug where `:empty:` element query conditions weren\u2019t working correctly for empty string values on Postgres. ([#9641](https://github.com/craftcms/cms/issues/9641))\n- Fixed an error that occurred if an entry\u2019s `getSupportedSites()` method was called on a front-end, non-action request. ([#9649](https://github.com/craftcms/cms/issues/9649))\n- Fixed a SQL error that could occur when running the \u201cFind and Replace\u201d utility. ([#9651](https://github.com/craftcms/cms/pull/9651))\n- Fixed a bug where Date fields that were set to only show the time input weren\u2019t saving new values properly. ([#9650](https://github.com/craftcms/cms/issues/9650))\n- Fixed a bug where `craft\\services\\Fields::$oldFieldColumnPrefix` wasn\u2019t getting set properly when deleting a Matrix block type.\n- Fixed a bug where Matrix sub-fields were getting new content columns whenever their block type\u2019s handle was changed, when the existing columns should have been renamed.\n\n## 3.7.6 - 2021-07-27\n\n### Added\n- Added the `provisionalDrafts` argument for entry GraphQL queries.\n\n### Fixed\n- Fixed a bug where global set queries could contain fields that were supposed to be hidden.\n- Fixed a bug where `craft\\helpers\\DateTimeHelper::toDateTime()` was interpreting year-only values as timestamps. ([#9642](https://github.com/craftcms/cms/issues/9642))\n- Fixed a bug where blank Email field values were getting stored as empty strings rather than `NULL`. ([#9641](https://github.com/craftcms/cms/issues/9641))\n- Fixed a bug where it wasn\u2019t possible to clear out some entry field values, if their values were blank to begin with. ([#9643](https://github.com/craftcms/cms/issues/9643))\n\n## 3.7.5 - 2021-07-23\n\n### Added\n- Added `craft\\base\\ElementTrait::$firstSave`. ([#9638](https://github.com/craftcms/cms/discussions/9638))\n- Added `craft\\base\\FieldInterface::getOrientation()`.\n- Added `craft\\helpers\\FieldHelper`.\n\n### Changed\n- Field orientations are now based on the primary site\u2019s language for single-site installs. ([#9616](https://github.com/craftcms/cms/issues/9616))\n- Matrix block type handles are now limited to 47 characters. ([#9636](https://github.com/craftcms/cms/issues/9636))\n\n### Fixed\n- Fixed a bug where Live Preview stopped working when the device type was changed, for preview targets that had auto-refresh disabled. ([#9610](https://github.com/craftcms/cms/issues/9610))\n- Fixed a 403 error that occurred when attempting to discard changes on an entry. ([#9602](https://github.com/craftcms/cms/issues/9602))\n- Fixed a bug where opening the image editor would cause the page to scroll to the top. ([#9612](https://github.com/craftcms/cms/issues/9612))\n- Fixed a bug where provisional drafts weren\u2019t displaying a notice when upstream changes had been merged into them. ([#9615](https://github.com/craftcms/cms/issues/9615))\n- Fixed a bug where entry titles were set to `null` before getting regenerated via their Title Format for new drafts.\n- Fixed SQL errors that could occur when updating Craft 3.7. ([#9624](https://github.com/craftcms/cms/issues/9624), [#9625](https://github.com/craftcms/cms/issues/9625))\n- Fixed a bug where `craft\\web\\Request::getRawCookies()` was returning hashed cookie values.\n- Fixed a PHP error that could occur when saving a site, if there were any event handlers on `craft\\services\\Sites::EVENT_BEFORE_SAVE_SITE`.\n- Fixed an error that could occur when deleting a route from the control panel if there were any event handlers on `craft\\services\\Routes::EVENT_AFTER_DELETE_ROUTE`.\n- Fixed a bug where existing fields\u2019 maximum handle lengths were nine characters less than they needed to be.\n- Fixed a bug where Craft would send a `X-Robots-Tag: none` header on front-end Login pages. ([#9621](https://github.com/craftcms/cms/issues/9621))\n- Fixed a bug where the \u201cSingles\u201d entry source showed the Author column by default. ([#9627](https://github.com/craftcms/cms/issues/9627))\n- Fixed a bug where the control panel header could remain \u201cstuck\u201d after closing Live Preview in Firefox. ([#9630](https://github.com/craftcms/cms/issues/9630))\n- Fixed a JavaScript error that could occur on Edit Entry pages. ([#9631](https://github.com/craftcms/cms/pull/9631))\n- Fixed a bug where assets weren\u2019t always getting moved out of the Temporary Uploads volume when saving an entry. ([#9619](https://github.com/craftcms/cms/issues/9619))\n- Fixed a bug where it wasn\u2019t possible to upload an asset via a data URL if its MIME type contained a dash. ([#9632](https://github.com/craftcms/cms/issues/9632))\n\n## 3.7.4 - 2021-07-19\n\n### Added\n- Added `craft\\helpers\\ElementHelper::shouldTrackChanges()`.\n\n### Changed\n- Improved the performance of delta form submissions. ([#9605](https://github.com/craftcms/cms/pull/9605))\n\n### Fixed\n- Fixed a bug where temporary volume folders couldn\u2019t be created for console requests. ([#9597](https://github.com/craftcms/cms/pull/9597))\n- Fixed a bug where `craft\\base\\Field::copyValue()` wasn\u2019t passing the source element to `$this->serializeValue()`. ([sebastian-lenz/craft-linkfield#161](https://github.com/sebastian-lenz/craft-linkfield/issues/161))\n- Fixed a bug where entries were only tracking modified attributes for the site the changes were made on.\n- Fixed a bug where entries were only tracking modified relation fields for the site changes were made on. ([#9596](https://github.com/craftcms/cms/issues/9596))\n- Fixed a bug where images within rich text fields\u2019 static previews could bleed out of their container element. ([#9603](https://github.com/craftcms/cms/issues/9603))\n- Fixed a bug where passing an empty value to `relatedTo()` and `andRelatedTo()` would yield no results on an element query. ([#9599](https://github.com/craftcms/cms/issues/9599))\n- Fixed a bug where existing Matrix/Neo/Super Table blocks could lose their content when creating a provisional draft, if additional block changes were queued up before the draft was fully created. ([#9601](https://github.com/craftcms/cms/issues/9601))\n\n## 3.7.3.2 - 2021-07-18\n\n### Fixed\n- Fixed a bug where Edit Entry pages weren\u2019t submitting changes to fields if they had been changed back to their original value they had on page load. ([#9575](https://github.com/craftcms/cms/issues/9575))\n\n## 3.7.3.1 - 2021-07-17\n\n### Changed\n- Improved the performance of Edit Entry pages. ([#9575](https://github.com/craftcms/cms/issues/9575))\n\n### Fixed\n- Fixed styling issues in the control panel. ([#9590](https://github.com/craftcms/cms/issues/9590), [#9592](https://github.com/craftcms/cms/issues/9592))\n- Fixed a bug where entry drafts could label fields as being modified on the canonical entry, even when they weren\u2019t.\n\n## 3.7.3 - 2021-07-16\n\n### Added\n- Added the `sendContentLengthHeader` config setting.\n\n### Changed\n- Template requests no longer respond with a `Content-Length` header, unless the `sendContentLengthHeader` config setting is enabled. ([#8070](https://github.com/craftcms/cms/issues/8070))\n- Edit Asset pages are now located at `assets/edit/<id>-<filename>` rather than `assets/<volume>/<id>-<filename>`.\n- `edit` is now a reserved volume handle.\n- Number fields no longer allow non-numeric input. ([#9586](https://github.com/craftcms/cms/issues/9586))\n\n### Fixed\n- Fixed a bug where object templates didn\u2019t support string interpolation within normal Twig tags. ([#9138](https://github.com/craftcms/cms/discussions/9138))\n- Fixed an error that could occur after applying project config changes.\n- Fixed a bug where assets\u2019 control panel URLs were getting routed to the Assets index page. ([#9583](https://github.com/craftcms/cms/issues/9583))\n- Fixed a visual bug where field status indicators were overlapping the prior field in the same row. ([#9585](https://github.com/craftcms/cms/issues/9585))\n\n## 3.7.2 - 2021-07-15\n\n### Fixed\n- Fixed a SQL error that could occur when updating to Craft 3.7. ([#9574](https://github.com/craftcms/cms/issues/9574))\n- Fixed a bug where Edit Entries pages were displaying a \u201cDelete draft\u201d action for provisional drafts.\n- Fixed a 404 error that occurred when linking to a volume\u2019s subfolder on the Assets index page, if the subfolder contained a dash. ([#9579](https://github.com/craftcms/cms/issues/9579))\n- Fixed a bug where Craft was logging errors and warnings to `stdout` when Dev Mode was disabled, if the `CRAFT_STREAM_LOG` PHP constant was set. ([#9572](https://github.com/craftcms/cms/pull/9572))\n\n## 3.7.1 - 2021-07-14\n\n### Added\n- Added the `transformSvgs` config setting. ([#9557](https://github.com/craftcms/cms/pull/9557))\n\n### Changed\n- Console requests no longer force Dev Mode to be enabled. ([#5256](https://github.com/craftcms/cms/issues/5256))\n\n### Fixed\n- Fixed deprecation warnings that occurred on some edit pages. ([#9556](https://github.com/craftcms/cms/pull/9556))\n- Fixed an error that occurred when updating from Craft 3.6.7 or earlier.\n- Fixed a bug where progress bar labels weren\u2019t always removed correctly.\n- Fixed a bug where it wasn\u2019t possible to filter by status on the Categories index page. ([#9555](https://github.com/craftcms/cms/issues/9555))\n- Fixed a bug where Edit Category pages didn\u2019t have a \u201cSave and add another\u201d action.\n- Fixed a bug where moving an asset with an invalid file extension would be treated as if there was a conflicting asset in the destination directory. ([#9147](https://github.com/craftcms/cms/issues/9147))\n- Fixed a bug where multiple tab bars could appear on Edit Entry pages, if the Entry Type had been changed multiple times. ([#9562](https://github.com/craftcms/cms/issues/9562))\n- Fixed a bug where some control panel icons had unhelpful `<title>` tags and other cruft. ([#9563](https://github.com/craftcms/cms/pull/9563))\n- Fixed a bug where the \u201cCreate a draft\u201d button on Edit Entry pages wasn\u2019t working properly for users that didn\u2019t have permission to publish changes to the entry. ([#9570](https://github.com/craftcms/cms/issues/9570))\n- Fixed a bug where Edit Entry pages could show a provisional draft immediately after saving published changes to the entry, if the save was initiated at the same time that the provisional draft was getting created. ([#9568](https://github.com/craftcms/cms/issues/9568))\n- Fixed a bug where entry slugs weren\u2019t getting auto-generated on first save, if their title was generated based on a custom Title Format. ([#9561](https://github.com/craftcms/cms/issues/9561))\n\n## 3.7.0 - 2021-07-13\n\n> **Note**\n> Read through the [Upgrading to Craft 3.7](https://craftcms.com/knowledge-base/upgrading-to-craft-3-7) guide before updating.\n\n### Added\n- The control panel now displays new feature announcements. ([#8056](https://github.com/craftcms/cms/pull/8056))\n- Added the \u201cAlways show focus rings\u201d user preference. ([#7790](https://github.com/craftcms/cms/issues/7790))\n- The Entries index page now has \u201cCreate a new entry before\u201d and \u201cCreate a new entry after\u201d actions for entries within Structure sections. ([#870](https://github.com/craftcms/cms/issues/870))\n- The Entries index page now has a \u201cDelete for site\u201d action for entries whose section\u2019s Propagation Method is set to \u201cLet each entry choose which sites it should be saved to\u201d. ([#9119](https://github.com/craftcms/cms/pull/9119))\n- Edit Entry pages now treat unpublished drafts similarly to published entries, rather than drafts. ([#7899](https://github.com/craftcms/cms/pull/7899))\n- Edit Entry pages no longer appear to create a draft when the Current revision is edited within Live Preview. Unsaved changes are now stored within a \u201cprovisional draft\u201d, which is mostly hidden from the author. ([#7899](https://github.com/craftcms/cms/pull/7899))\n- Category groups now have a \u201cDefault Category Placement\u201d setting, which determines where new categories should be placed within the structure by default. ([#7759](https://github.com/craftcms/cms/issues/7759))\n- Structure sections now have a \u201cDefault Entry Placement\u201d setting, which determines where new entries should be placed within the structure by default. ([#7759](https://github.com/craftcms/cms/issues/7759))\n- The Assets index page now remembers the selected subfolder between page loads. ([#9546](https://github.com/craftcms/cms/discussions/9546))\n- It\u2019s now possible to deep-link to a specific subfolder on the Assets index page.\n- Edit Asset pages now redirect back to the subfolder the asset is located in on save.\n- It\u2019s now possible to reorder global sets. ([#8052](https://github.com/craftcms/cms/pull/8052))\n- Date fields now have a \u201cShow Time Zone\u201d setting, allowing authors to choose which time zone the date is set to, rather than using the system time zone.\n- Matrix fields can now be set to custom propagation methods, based on a propagation key template. ([#7610](https://github.com/craftcms/cms/issues/7610))\n- Added a \u201cRefresh\u201d button to Live Preview, for preview targets whose \u201cAuto-refresh\u201d (formerly \u201cRefresh\u201d) setting is disabled.\n- Added the `users/create` and `users/delete` commands. ([#8014](https://github.com/craftcms/cms/issues/8014))\n- Added the `siteSettingsId` element query and GraphQL API query parameter for all elements.\n- Added the `preferSites` GraphQL API query argument for all elements. ([#8006](https://github.com/craftcms/cms/pull/8006))\n- Added the `ancestors`, `descendants`, `drafts`, `draftCreator`, `revisions`, `currentRevision`, and `revisionCreator` fields to entry GraphQL queries. ([#7950](https://github.com/craftcms/cms/issues/7950))\n- Added the `httpProxy` config setting, which can be used instead of setting the `proxy` Guzzle request option. ([#9105](https://github.com/craftcms/cms/issues/9105))\n- Added the `previewTokenDuration` config setting. ([#2394](https://github.com/craftcms/cms/issues/2394))\n- Added the `revAssetUrls` config setting. ([#7847](https://github.com/craftcms/cms/issues/7847))\n- Added the `setGraphqlDatesToSystemTimeZone` config setting. ([#8016](https://github.com/craftcms/cms/pull/8016))\n- Added the `useUnbufferedConnections` database connection setting, which can be set to `true` when using MySQL to cause batched queries to be executed over separate, unbuffered database connections when using MySQL. ([#7338](https://github.com/craftcms/cms/issues/7338))\n- Added the \u201cValidate custom fields on public registration\u201d user setting. ([#4229](https://github.com/craftcms/cms/issues/4229))\n- Added the `|removeClass` Twig filter.\n- Added `craft\\base\\ApplicationTrait::getAnnouncements()`.\n- Added `craft\\base\\ConfigurableComponent::EVENT_DEFINE_SETTINGS_ATTRIBUTES`. ([#8004](https://github.com/craftcms/cms/issues/8004))\n- Added `craft\\base\\Element::EVENT_DEFINE_IS_DELETABLE`.\n- Added `craft\\base\\Element::EVENT_DEFINE_IS_EDITABLE`. ([#8023](https://github.com/craftcms/cms/issues/8023))\n- Added `craft\\base\\Element::EVENT_DEFINE_METADATA`.\n- Added `craft\\base\\Element::EVENT_DEFINE_META_FIELDS_HTML`.\n- Added `craft\\base\\Element::EVENT_DEFINE_SIDEBAR_HTML`.\n- Added `craft\\base\\Element::cpEditUrl()`, which should be overridden rather than `getCpEditUrl()`.\n- Added `craft\\base\\Element::hasFieldLayout()`.\n- Added `craft\\base\\Element::isDeletable()`.\n- Added `craft\\base\\Element::isEditable()`.\n- Added `craft\\base\\Element::metaFieldsHtml()`.\n- Added `craft\\base\\Element::metadata()`.\n- Added `craft\\base\\Element::slugFieldHtml()`.\n- Added `craft\\base\\ElementInterface::getCanonical()`.\n- Added `craft\\base\\ElementInterface::getCanonicalId()`.\n- Added `craft\\base\\ElementInterface::getIsCanonical()`.\n- Added `craft\\base\\ElementInterface::getIsDerivative()`.\n- Added `craft\\base\\ElementInterface::getMetadata()`.\n- Added `craft\\base\\ElementInterface::getModifiedAttributes()`.\n- Added `craft\\base\\ElementInterface::getModifiedFields()`.\n- Added `craft\\base\\ElementInterface::getOutdatedAttributes()`.\n- Added `craft\\base\\ElementInterface::getOutdatedFields()`.\n- Added `craft\\base\\ElementInterface::getParentUri()`. ([#7932](https://github.com/craftcms/cms/issues/7932))\n- Added `craft\\base\\ElementInterface::getSidebarHtml()`.\n- Added `craft\\base\\ElementInterface::isAttributeModified()`.\n- Added `craft\\base\\ElementInterface::isAttributeOutdated()`.\n- Added `craft\\base\\ElementInterface::isFieldModified()`.\n- Added `craft\\base\\ElementInterface::isFieldOutdated()`.\n- Added `craft\\base\\ElementInterface::mergeCanonicalChanges()`.\n- Added `craft\\base\\ElementInterface::setCanonical()`.\n- Added `craft\\base\\ElementInterface::setCanonicalId()`.\n- Added `craft\\base\\ElementTrait::$dateLastMerged`.\n- Added `craft\\base\\ElementTrait::$isProvisionalDraft`.\n- Added `craft\\base\\ElementTrait::$mergingCanonicalChanges`.\n- Added `craft\\base\\ElementTrait::$updatingFromDerivative`.\n- Added `craft\\base\\FieldInterface::copyValue()`.\n- Added `craft\\base\\FieldInterface::getStatus()`.\n- Added `craft\\base\\FieldTrait::$columnSuffix`.\n- Added `craft\\console\\ControllerTrait::checkRootUser()`.\n- Added `craft\\console\\ControllerTrait::createAttributeValidator()`. ([#8066](https://github.com/craftcms/cms/pull/8066))\n- Added `craft\\console\\controllers\\ResaveController::resaveElements()`.\n- Added `craft\\elements\\User::EVENT_DEFINE_FRIENDLY_NAME`. ([#8027](https://github.com/craftcms/cms/issues/8027))\n- Added `craft\\elements\\User::EVENT_DEFINE_NAME`. ([#8027](https://github.com/craftcms/cms/issues/8027))\n- Added `craft\\elements\\User::setFriendlyName()`.\n- Added `craft\\elements\\User::setName()`.\n- Added `craft\\elements\\db\\ElementQuery::provisionalDrafts()`.\n- Added `craft\\events\\DefineHtmlEvent`.\n- Added `craft\\events\\DefineMetadataEvent`.\n- Added `craft\\events\\DefineValueEvent`.\n- Added `craft\\events\\DraftEvent::$provisional`.\n- Added `craft\\fields\\Matrix::$propagationKeyFormat`.\n- Added `craft\\fields\\Matrix::PROPAGATION_METHOD_CUSTOM`.\n- Added `craft\\helpers\\Cp::autosuggestFieldHtml()`.\n- Added `craft\\helpers\\Cp::dateTimeFieldHtml()`.\n- Added `craft\\helpers\\Cp::editElementTitles()`.\n- Added `craft\\helpers\\Cp::elementSelectFieldHtml()`.\n- Added `craft\\helpers\\Cp::metadataHtml()`.\n- Added `craft\\helpers\\Db::batch()` and `each()`, which can be used instead of `craft\\db\\Query::batch()` and `each()`, to execute batched SQL queries over a new, unbuffered database connection (if using MySQL and `useUnbufferedConnections` is `true`). ([#7338](https://github.com/craftcms/cms/issues/7338))\n- Added `craft\\helpers\\ElementHelper::fieldColumn()`.\n- Added `craft\\helpers\\ElementHelper::fieldColumnFromField()`.\n- Added `craft\\helpers\\ElementHelper::isDraft()`.\n- Added `craft\\helpers\\ElementHelper::isRevision()`.\n- Added `craft\\helpers\\Html::parseTagAttribute()`.\n- Added `craft\\helpers\\Html::widont()`.\n- Added `craft\\mail\\Message::$error`. ([#8091](https://github.com/craftcms/cms/pull/8091))\n- Added `craft\\models\\CategoryGroup::$defaultPlacement`.\n- Added `craft\\models\\CategoryGroup::DEFAULT_PLACEMENT_BEGINNING`.\n- Added `craft\\models\\CategoryGroup::DEFAULT_PLACEMENT_END`.\n- Added `craft\\models\\FieldLayout::$reservedFieldHandles`.\n- Added `craft\\models\\Section::$defaultPlacement`.\n- Added `craft\\models\\Section::DEFAULT_PLACEMENT_BEGINNING`.\n- Added `craft\\models\\Section::DEFAULT_PLACEMENT_END`.\n- Added `craft\\models\\SiteGroup::getName()`.\n- Added `craft\\models\\SiteGroup::setName()`.\n- Added `craft\\services\\Announcements`.\n- Added `craft\\services\\Elements::EVENT_AFTER_MERGE_CANONICAL_CHANGES`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_MERGE_CANONICAL_CHANGES`.\n- Added `craft\\services\\Elements::mergeCanonicalChanges()`.\n- Added `craft\\services\\Elements::updateCanonicalElement()`.\n- Added `craft\\services\\Matrix::mergeCanonicalChanges()`.\n- Added `craft\\services\\Tokens::createPreviewToken()`.\n- Added `craft\\web\\Request::checkIfActionRequest()`.\n- Added `craft\\web\\View::clearCssBuffer()`.\n- Added `craft\\web\\View::clearScriptBuffer()`.\n- Added `craft\\web\\View::getInitialDeltaValues()`.\n- Added `craft\\web\\View::startCssBuffer()`.\n- Added `craft\\web\\View::startScriptBuffer()`.\n- Added `craft\\web\\twig\\variables\\Cp::getTimeZoneOptions()`.\n- Added the `timeZone` and `timeZoneField` macros to the `_includes/forms.html` control panel template.\n- Added the `Craft.Slideout` JavaScript class.\n- Added the `Craft.Tabs` JavaScript class.\n- Added the `Craft.group()` JavaScript method.\n- Added the `Craft.setFocusWithin()` JavaScript method.\n- Added the `Craft.trapFocusWithin()` JavaScript method.\n\n### Changed\n- Changes from an entry\u2019s Current revision are now automatically merged into drafts upon visiting drafts\u2019 edit pages.\n- When changes from an entry\u2019s Current revision are merged into a draft, Matrix field changes are now merged on a per-block basis. ([#5503](https://github.com/craftcms/cms/issues/5503), [#7710](https://github.com/craftcms/cms/pull/7710))\n- Inline element editors now use slideouts rather than HUDs, and include the element\u2019s fully-rendered field layout (including tabs and custom UI elements), meta fields (Slug, Post Date, etc.) and metadata, plus a link to open the element\u2019s dedicated edit page in a new browser tab. ([#8017](https://github.com/craftcms/cms/pull/8017))\n- The \u201cPublish draft\u201d button has been relabelled to \u201cApply draft\u201d.\n- Entries now retain their original IDs when created from an unpublished draft. ([#9104](https://github.com/craftcms/cms/issues/9104))\n- Matrix blocks now retain their original IDs and UIDs when a draft is published. ([#7710](https://github.com/craftcms/cms/pull/7710))\n- Improved the styling of field status indicators.\n- Field status indicators now appear immediately after a field\u2019s value is changed and saved successfully to a draft.\n- Improved the design and accessibility of tabs in the control panel. ([#7299](https://github.com/craftcms/cms/issues/7299))\n- Asset, category, and entry indexes now use \u201cAsset\u201d, \u201cCategory\u201d, and \u201cEntry\u201d header column headings by default, rather than \u201cTitle\u201d.\n- Improved the UI of the Time Zone input in Settings \u2192 General.\n- It\u2019s now possible to toggle site-specific category statuses from the Edit Category page. ([#7636](https://github.com/craftcms/cms/issues/7636))\n- Tag field layouts now include the Title field, allowing its placement and label to be customized.\n- Tag field layouts can now contain multiple tabs and UI elements.\n- Custom fields with a custom translation method are no longer labelled as translatable if the translation key is an empty string. ([#7647](https://github.com/craftcms/cms/issues/7647))\n- Category and tag groups no longer validate if their field layout contains a field called `group`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- Entry types no longer validate if their field layout contains a field called `author`, `section`, or `type`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- Volumes no longer validate if their field layout contains a field called `folder` or `volume`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- The user field layout no longer validates if it contains a field called `groups` or `photo`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- The `resave/entries` command now has a `--provisional-drafts` option.\n- `resave/*` commands now have a `--queue` option. ([#8040](https://github.com/craftcms/cms/issues/8040))\n- Entries no longer support Live Preview if the `autosaveDrafts` config setting is disabled.\n- Most text areas in the control panel will now submit the closest form when <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Return</kbd> is pressed. ([#7999](https://github.com/craftcms/cms/issues/7999))\n- The `defaultCpLanguage` config setting no longer affects console requests. ([#7747](https://github.com/craftcms/cms/issues/7747))\n- The `{% cache %}` tag now stores any JavaScript or CSS code registered with `{% js %}`, `{% script %}`, and `{% css %}` tags. ([#7758](https://github.com/craftcms/cms/issues/7758))\n- The `date()` Twig function now supports arrays with `date` and/or `time` keys. ([#7681](https://github.com/craftcms/cms/issues/7681))\n- Date query params now support passing in times relative to `now` (e.g. `>= now`). ([#9117](https://github.com/craftcms/cms/issues/9117))\n- Object templates (such as `redirect` params and URI Format settings) now support string interpolation. ([#9138](https://github.com/craftcms/cms/discussions/9138))\n- Custom field column names now include a random string, preventing column name conflicts when deploying multiple project config changes at once. ([#6922](https://github.com/craftcms/cms/issues/6922))\n- Custom fields can now store data across multiple columns in the `content` table.\n- Channel and Structure sections\u2019 initial entry types are now named \u201cDefault\u201d by default. ([#7078](https://github.com/craftcms/cms/issues/7078))\n- Entries can now be eager-loaded with `revisions`.\n- Console commands now show a confirmation prompt when executed as the root user. ([#7955](https://github.com/craftcms/cms/issues/7955))\n- Project config component UID/name mappings are now stored in the project config itself, making them portable across environments. ([#7709](https://github.com/craftcms/cms/issues/7709))\n- Validation errors in the control panel are now parsed for Markdown syntax. ([#8008](https://github.com/craftcms/cms/issues/8008))\n- Renamed the `enableGraphQlCaching` config setting to `enableGraphqlCaching`. (The old name still works but is deprecated.)\n- Admin tables can now include linked buttons in the toolbar.\n- Admin tables can now include single action buttons.\n- Admin tables now support separators in menu button lists.\n- Site group names can now be set to environment variables. ([#8044](https://github.com/craftcms/cms/issues/8044))\n- Template requests now respond with a `Content-Length` header. ([#8070](https://github.com/craftcms/cms/issues/8070))\n- Exceptions thrown by queue jobs are now logged. ([#8060](https://github.com/craftcms/cms/issues/8060))\n- `craft\\base\\Element::getCpEditUrl()` now includes a `draftId`/`revisionId` query string param in the returned URL if the element is a draft or revision. ([#7832](https://github.com/craftcms/cms/issues/7832))\n- `craft\\base\\FieldInterface::getContentColumnType()` can now return an array, if the field stores content across multiple columns.\n- `craft\\helpers\\Cp::elementHtml()` now has a `$single` argument.\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing in `'now'`. ([#9117](https://github.com/craftcms/cms/issues/9117))\n- `craft\\services\\AssetTransforms::normalizeTransform()` now accepts transform configs arrays that specify a base transform which should be extended, via a `transform` key set to the stored transform\u2019s handle. ([#7892](https://github.com/craftcms/cms/issues/7892))\n- `craft\\services\\Drafts::EVENT_AFTER_APPLY_DRAFT` is no longer deprecated.\n- `craft\\services\\Drafts::EVENT_BEFORE_APPLY_DRAFT` is no longer deprecated.\n- `craft\\services\\Drafts::applyDraft()` is no longer deprecated.\n- `craft\\services\\Users::saveLayout()` now has a `$runValidation` argument, which is `true` by default.\n- `craft\\web\\View::clearJsBuffer()` now has a `$combine` argument.\n- `craft\\web\\View::namespaceInputs()` now accepts a callback function for the first argument, which simplifies the process of setting and resetting the registered namespace before and after generating the to-be-namespaced HTML.\n- Updated Garnish to 0.1.46.\n\n### Deprecated\n- Deprecated `craft\\base\\Element::ATTR_STATUS_CONFLICTED`.\n- Deprecated `craft\\base\\Element::getFieldStatus()`.\n- Deprecated `craft\\base\\Element::getSourceId()`. `getCanonicalId()` should be used instead.\n- Deprecated `craft\\base\\Element::getSourceUid()`. `getCanonical()->uid` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::folderExists()`. `directoryExists()` should be used instead.\n- Deprecated `craft\\behaviors\\BaseRevisionBehavior::$sourceId`. `craft\\base\\ElementInterface::getCanonicalId()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::$dateLastMerged`. `craft\\base\\ElementTrait::$dateLastMerged` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::$mergingChanges`. `craft\\base\\ElementTrait::$mergingCanonicalChanges` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::$trackChanges`.\n- Deprecated `craft\\behaviors\\DraftBehavior::getOutdatedAttributes()`. `craft\\base\\ElementInterface::getOutdatedAttributes()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::getOutdatedFields()`. `craft\\base\\ElementInterface::getOutdatedFields()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isAttributeModified()`. `craft\\base\\ElementInterface::isAttributeModified()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isAttributeOutdated()`. `craft\\base\\ElementInterface::isAttributeOutdated()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isFieldModified()`. `craft\\base\\ElementInterface::isFieldModified()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isFieldOutdated()`. `craft\\base\\ElementInterface::isFieldOutdated()` should be used instead.\n- Deprecated `craft\\console\\controllers\\ResaveController::saveElements()`. `resaveElements()` should be used instead.\n- Deprecated `craft\\elements\\Asset::KIND_FLASH`.\n- Deprecated `craft\\services\\Content::getContentRow()`.\n- Deprecated `craft\\services\\Content::populateElementContent()`.\n- Deprecated `craft\\services\\Drafts::EVENT_AFTER_MERGE_SOURCE_CHANGES`.\n- Deprecated `craft\\services\\Drafts::EVENT_AFTER_PUBLISH_DRAFT`. `EVENT_AFTER_APPLY_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::EVENT_BEFORE_MERGE_SOURCE_CHANGES`.\n- Deprecated `craft\\services\\Drafts::EVENT_BEFORE_PUBLISH_DRAFT`. `EVENT_BEFORE_APPLY_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::mergeSourceChanges()`.\n- Deprecated `craft\\services\\Drafts::publishDraft()`. `applyDraft()` should be used instead.\n- Deprecated `craft\\web\\View::getInitialDeltaValue()`.\n\n### Removed\n- Removed support for the \u201cFlash\u201d file kind. ([#7626](https://github.com/craftcms/cms/issues/7626))\n\n### Fixed\n- Fixed a bug where Craft would place the `beginBody()` tag incorrectly if a template\u2019s `<body>` tag had attribute values that included `>` characters. ([#7779](https://github.com/craftcms/cms/issues/7779))\n- Fixed a bug where updated attributes and fields weren\u2019t getting tracked when publishing a draft or reverting an entry to a revision.\n- Fixed a bug where it wasn\u2019t easily possible to submit forms to controller actions from Live Preview pages. ([#7885](https://github.com/craftcms/cms/issues/7885))\n- Fixed a bug where it was possible to choose a different parent entry when editing a draft, even though the change wouldn\u2019t stick when publishing the draft.\n- Fixed a bug where changing an entry\u2019s parent wouldn\u2019t update any of its drafts.\n- Fixed a SQL error that occurred when deleting a volume folder that had subfolders nested more than 15 levels deep. ([#8073](https://github.com/craftcms/cms/issues/8073))\n- Fixed a SQL error that occurred when hard-deleting a volume that had subfolders nested more than 15 levels deep. ([#8073](https://github.com/craftcms/cms/issues/8073))\n- Fixed a bug where exported CSV files weren\u2019t being imported with an UTF-8 encoding by Excel. ([#8067](https://github.com/craftcms/cms/issues/8067))\n- Fixed a bug where Dropdown fields weren\u2019t always saving properly within element editor slideouts, if left unchanged. ([#8090](https://github.com/craftcms/cms/issues/8090))\n- Fixed a bug where value normalizers for GraphQL mutations would not be executed in nested field. ([#9139](https://github.com/craftcms/cms/issues/9139))\n\n### Security\n- The default `allowedFileExtensions` config setting value no longer includes `xml`.\n\n## 3.6.18 - 2021-07-13\n\n### Added\n- Added `craft\\web\\Response::redirect()`.\n- Added `craft\\gql\\handlers\\Site`.\n\n### Changed\n- Increased the margin around the image editor on small viewports. ([#9143](https://github.com/craftcms/cms/issues/9143))\n\n### Fixed\n- Fixed a button styling issue in Safari. ([#8076](https://github.com/craftcms/cms/pull/8076))\n- Fixed an error that occurred when running the `db/restore` command, if the `info` table was missing its row. ([#7028](https://github.com/craftcms/cms/issues/7028))\n- Fixed an error that occurred when uninstalling a plugin via the `plugin/uninstall` command with `--force`, if the plugin didn\u2019t have a row in the `plugins` table.\n- Fixed a bug where element thumbnails weren\u2019t always getting lazy-loaded properly. ([#6621](https://github.com/craftcms/cms/issues/6621))\n- Fixed a bug where control panel requests weren\u2019t always redirecting to the control panel when they were supposed to. ([#9081](https://github.com/craftcms/cms/issues/9081))\n- Fixed a bug where control panel URLs were getting empty hashes appended to them in Firefox, adding an extra element to the browser\u2019s session history. ([#9118](https://github.com/craftcms/cms/issues/9118))\n- Fixed a bug where it was impossible to use `\"*\"` as a value for the `siteId` argument when using the GraphQL API. ([#9098](https://github.com/craftcms/cms/issues/9098))\n- Fixed a bug where dynamically-served control panel resources weren\u2019t getting proper cache headers. ([#9140](https://github.com/craftcms/cms/issues/9140))\n- Fixed a bug where dynamically-served control panel resources weren\u2019t 404ing if the file hashes didn\u2019t match. ([#9140](https://github.com/craftcms/cms/issues/9140))\n- Fixed a bug where currency options weren\u2019t sorted alphabetically within Number field settings. ([#9141](https://github.com/craftcms/cms/issues/9141))\n- Fixed a bug where `craft\\helpers\\Db::isNumericColumnType()` was always returning `false`.\n\n## 3.6.17 - 2021-06-15\n\n### Changed\n- Mobile viewports no longer zoom into inputs on focus automatically.\n\n### Fixed\n- Fixed a bug where missing plugin notices for Google Cloud Storage were linking to Amazon S3 instead. ([#8012](https://github.com/craftcms/cms/issues/8012))\n- Fixed a bug where Number fields\u2019 Default Value, Min Value, and Max Value settings were getting formatted with decimal values when the Intl extension wasn\u2019t installed, causing validation errors when saving the field. ([#8007](https://github.com/craftcms/cms/issues/8007))\n- Fixed a type coercion related bug when passing an empty string as a dimension to Asset transforms. ([#8025](https://github.com/craftcms/cms/issues/8025))\n- Fixed a bug where nested element sources weren\u2019t showing source-specific sort options. ([#8026](https://github.com/craftcms/cms/issues/8026))\n- Fixed a bug where volumes would lose their sort position when edited. ([#8033](https://github.com/craftcms/cms/issues/8033))\n- Fixed a bug where unpublished drafts were getting ignored when lazy-loading additional entries in Structure sections.\n- Fixed a PHP error that occurred when indexing search keywords for a Table field with a Date or Time column. ([#8061](https://github.com/craftcms/cms/issues/8061))\n\n## 3.6.16 - 2021-06-01\n\n### Added\n- Added `craft\\helpers\\Db::supportsTimeZones()`.\n\n### Changed\n- The control panel sidebar no longer shows delayed queue jobs until they\u2019re actually executing. ([#7998](https://github.com/craftcms/cms/issues/7998))\n\n### Fixed\n- Fixed a bug where eager-loading entries\u2019 authors wasn\u2019t including pending and suspended authors. ([#7963](https://github.com/craftcms/cms/issues/7963))\n- Fixed a bug where not all element types\u2019 GraphQL queries supported a `status` argument. ([craftcms/gatsby-source-craft#35](https://github.com/craftcms/gatsby-source-craft/issues/35))\n- Fixed JavaScript errors that could occur in the control panel.\n- Fixed a bug where the System Messages utility was showing default messages in the user\u2019s preferred language, even if that wasn\u2019t one of the sites\u2019 languages. ([#7992](https://github.com/craftcms/cms/issues/7992))\n- Fixed a bug where Table fields were getting duplicate search keywords, making it difficult to perform exact match searching on their values. ([#7984](https://github.com/craftcms/cms/issues/7984))\n- Fixed a bug where Structure section entries and categories would show \u201cCreate a new child\u201d and \u201cDelete (with descendants)\u201d actions even if the structure was limited to a single level. ([#7988](https://github.com/craftcms/cms/issues/7988))\n\n## 3.6.15 - 2021-05-18\n\n### Added\n- Added `craft\\services\\Updates::getIsUpdatePending()`. ([#7946](https://github.com/craftcms/cms/issues/7946))\n\n### Changed\n- The `allowedFileExtensions` config setting now includes `dotx` and `dotm` files by default. ([#7935](https://github.com/craftcms/cms/issues/7935))\n- Craft now recognizes `dotx` files. ([#7935](https://github.com/craftcms/cms/issues/7935))\n- Updated Garnish to 0.1.44. ([#7940](https://github.com/craftcms/cms/issues/7940))\n\n### Fixed\n- Fixed an error that occurred when running tests that use `craft\\test\\fixtures\\FieldLayoutFixture`.\n- Fixed a SQL error that occurred when calling `craft\\records\\Site::getGroup()`. ([#7914](https://github.com/craftcms/cms/issues/7914))\n- Fixed a bug where search terms that contained camelCased attribute names could yield no results. ([#7927](https://github.com/craftcms/cms/issues/7927))\n- Fixed a bug where the browser would jump back to the top of the page when scrolling passed a Redactor field with a fixed toolbar. ([#7888](https://github.com/craftcms/cms/issues/7888))\n- Fixed a bug where the My Drafts widget wasn\u2019t showing drafts for entries that didn\u2019t exist in the primary site. ([#7942](https://github.com/craftcms/cms/issues/7942))\n- Fixed a JavaScript error that occurred when switching an entry\u2019s type from one that had multiple tabs to one with only one. ([#7943](https://github.com/craftcms/cms/issues/7943))\n- Fixed a bug where nested GraphQL arguments could be parsed incorrectly. ([#7534](https://github.com/craftcms/cms/issues/7534))\n- Fixed a bug where public GraphQL schemas could be unavailable on environments that didn\u2019t allow admin changes. ([#7925](https://github.com/craftcms/cms/issues/7925))\n\n## 3.6.14 - 2021-05-11\n\n### Added\n- Added the `permissionsPolicyHeader` config setting. ([#7915](https://github.com/craftcms/cms/issues/7915))\n- Added `craft\\helpers\\App::defaultLogTargets()`.\n\n### Changed\n- The `plugin/uninstall` console command now has a `--force` flag. ([#7907](https://github.com/craftcms/cms/pull/7907))\n- `craft\\services\\Plugins::uninstallPlugin()` now has a `$force` argument. ([#7907](https://github.com/craftcms/cms/pull/7907))\n- Updated Yii to 2.0.42.\n- Updated yii2-queue to 2.3.2. ([#7773](https://github.com/craftcms/cms/issues/7773))\n\n### Fixed\n- Fixed an error that could occur if `craft\\web\\View::registerAssetFlashes()` was called after the PHP session had closed.\n- Fixed a bug where the control panel could show the wrong nag alert message for plugin licensing issues.\n- Fixed a bug where control panel pages would scroll down a bit on page load, if the location hash was set to a tab ID. ([#7888](https://github.com/craftcms/cms/issues/7888))\n- Fixed a bug where autofocused inputs in the control panel were losing focus on page load.\n- Fixed a bug where it wasn\u2019t possible to index some volume folders with dots in their name. ([#7900](https://github.com/craftcms/cms/issues/7900))\n- Fixed a bug where editable tables within nested Matrix field settings were initially unresponsive when editing an existing Matrix field. ([#7911](https://github.com/craftcms/cms/issues/7911))\n- Fixed a bug where duplicated entries\u2019 slugs and URIs could be incremented when changing a section\u2019s propagation method. ([#7895](https://github.com/craftcms/cms/issues/7895))\n- Fixed a bug where the `Permissions-Policy` anti-FLoC header was being applied incorrectly. ([#7896](https://github.com/craftcms/cms/issues/7896))\n- Fixed a SQL error that could occur when indexing search keywords which contained certain Russian characters on MySQL. ([#7905](https://github.com/craftcms/cms/issues/7905))\n- Fixed a bug where `craft\\elements\\actions\\Delete` wasn\u2019t hard-deleting elements when `$hard` was set to `true`, if the element index wasn\u2019t already set to query soft-deleted elements. ([#7901](https://github.com/craftcms/cms/issues/7901))\n- Fixed a bug where `craft\\elements\\actions\\Delete` wasn\u2019t clearing search indexes when `$hard` was set to `true`. ([#7901](https://github.com/craftcms/cms/issues/7901))\n- Fixed a PHP error that could occur if `config/app.php` was overriding the `log` component using `craft\\helpers\\App::logConfig()`, and expecting it to return an array with log target configs (as it used to before Craft 3.6).\n- Fixed a SQL error that occurred when calling `craft\\records\\SiteGroup::getSites()`. ([#7914](https://github.com/craftcms/cms/issues/7914))\n- Fixed an error that occurred when saving a Number field with a non-numeric value. ([#7917](https://github.com/craftcms/cms/issues/7917))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.6.13 - 2021-05-04\n\n### Changed\n- Improved the accessibility of Plain Text fields. ([#6914](https://github.com/craftcms/cms/issues/6914))\n- Improved the accessibility of color inputs. ([#7320](https://github.com/craftcms/cms/issues/7320))\n- Improved the accessibility of flash notices. ([#7879](https://github.com/craftcms/cms/pull/7879))\n- Improved the tab focus behavior. ([#7140](https://github.com/craftcms/cms/issues/7140))\n- The `setPasswordPath` and `verifyEmailPath` config settings can now be set to absolute URLs, which will cause them to be respected when running Craft in headless mode. ([#6226](https://github.com/craftcms/cms/issues/6226))\n- Matrix block type settings modals now have \u201cApply\u201d buttons instead of \u201cSave\u201d. ([#7822](https://github.com/craftcms/cms/issues/7822))\n- Nag alerts now have a light red background color, improving the visibility of error notices that may show up on top of them. ([#7627](https://github.com/craftcms/cms/issues/7627))\n- The `globals/save-content` action now accepts a `fieldsLocation` param. ([#7870](https://github.com/craftcms/cms/pull/7870))\n- The `users/save-user` action now accepts a `fieldsLocation` param. ([#7870](https://github.com/craftcms/cms/pull/7870))\n- `craft\\elements\\Asset::getSrcset()` now accepts an optional `$transform` argument. ([#7839](https://github.com/craftcms/cms/issues/7839))\n- Improved the performance of `craft\\services\\Elements::getElementById()` and `getElementByUid()`. ([#7846](https://github.com/craftcms/cms/pull/7846))\n- `craft\\services\\TemplateCaches::getTemplateCache()`, `endTemplateCache()`, and `deleteCachesByKey()` now throw an exception on console requests, if `$global` isn\u2019t `true`. ([#7862](https://github.com/craftcms/cms/issues/7862))\n- `@method` tags in `CustomFieldBehavior` now use `$this` as the return type instead of `static`. ([#7873](https://github.com/craftcms/cms/issues/7873))\n\n### Fixed\n- Fixed a bug where Matrix fields\u2019 Configuration settings weren\u2019t expanding when nested field settings got taller. ([#7827](https://github.com/craftcms/cms/issues/7827))\n- Fixed an error that occurred when attempting to create a new entry, if a unique URI for the entry could not be generated per its URI format. ([#7863](https://github.com/craftcms/cms/issues/7863))\n- Fixed a bug where it wasn\u2019t possible to click on breadcrumb links when a flash notice was present. ([#7572](https://github.com/craftcms/cms/issues/7572))\n- Fixed a bug where it wasn\u2019t possible to delete a volume folder if the physical directory didn\u2019t exist. ([#7868](https://github.com/craftcms/cms/issues/7868))\n- Fixed a race condition that could result in two assets getting saved with conflicting filenames if they were both moved to the same directory at the same time. ([#7866](https://github.com/craftcms/cms/issues/7866))\n- Fixed an error that occurred on PHP 8. ([#7848](https://github.com/craftcms/cms/issues/7848))\n- Fixed a SQL error when using PHP 7.4.18 or 8.0.5 and PostgreSQL. ([#7874](https://github.com/craftcms/cms/issues/7874))\n\n### Security\n- Craft now sets a `Permissions-Policy: interest-cohort=()` header for all requests, opting out of FLoC tracking due to security and privacy concerns.\n- Fixed an XSS vulnerability.\n\n## 3.6.12.1 - 2021-04-29\n\n### Fixed\n- Fixed a bug where entry indexes weren\u2019t showing the entries\u2019 authors if they were pending or suspended.\n- Fixed a bug where renaming an empty volume folder would create a subfolder inside it. ([#7721](https://github.com/craftcms/cms/issues/7721))\n- Fixed a bug where simultaneously-executed MySQL backups could result in a `my.cnf` conflict. ([#7801](https://github.com/craftcms/cms/issues/7801))\n- Fixed a bug where radio button labels weren\u2019t including custom container attributes passed to the input.\n- Fixed a bug where the `migrate/all` command was attempting to re-apply old content migrations when updating from Craft 3.4 or earlier. ([#7818](https://github.com/craftcms/cms/issues/7818))\n- Fixed a bug where assets could cause n+1 queries even when eager-loaded. ([#7812](https://github.com/craftcms/cms/pull/7812))\n- Fixed an error that occurred when executing a GraphQL query with nested `relatedTo*` arguments. ([#7824](https://github.com/craftcms/cms/issues/7824))\n- Fixed a bug where selected tabs in the control panel weren\u2019t getting focus rings.\n- Fixed a bug where it wasn\u2019t possible to select tabs in the overflow menu via the keyboard. ([#7813](https://github.com/craftcms/cms/issues/7813))\n- Fixed a bug where `{% cache %}` tags\u2019 `until` params weren\u2019t being respected. ([#7826](https://github.com/craftcms/cms/issues/7826))\n- Fixed a bug where the control panel JavaScript was missing several ASCII character mappings. ([#7828](https://github.com/craftcms/cms/issues/7828))\n- Fixed a bug where Single sections wouldn\u2019t validate if one of their URI values contained any spaces. ([#7834](https://github.com/craftcms/cms/issues/7834))\n- Fixed a bug where the \u201cShow\u201d link on password inputs wasn\u2019t positioned correctly for RTL languages. ([#7835](https://github.com/craftcms/cms/issues/7835))\n- Fixed a bug where entry queries were not returning all entries created within the last minute. ([#7853](https://github.com/craftcms/cms/issues/7853))\n- Fixed a bug where the `searchindex` table wasn\u2019t getting set to the MyISAM engine for fresh installs.\n\n### Security\n- Updated Composer to 2.0.13, fixing a [command execution vulnerability](https://github.com/composer/composer/security/advisories/GHSA-h5h8-pc6h-jvvx).\n\n## 3.6.12 - 2021-04-13\n\n### Changed\n- Improved the focus styles throughout the control panel. ([#6886](https://github.com/craftcms/cms/issues/6886))\n- User activation and password reset links now point to the control panel when running Craft in headless mode. ([#6226](https://github.com/craftcms/cms/issues/6226))\n- Category indexes can now show a \u201cSlug\u201d column. ([#7760](https://github.com/craftcms/cms/issues/7760))\n- \u201cGenerating pending image transforms\u201d jobs are now deprioritized. ([#7778](https://github.com/craftcms/cms/issues/7778))\n- Improved the performance of Recent Entries widgets. ([#6655](https://github.com/craftcms/cms/pull/6655))\n- `craft\\helpers\\UrlHelper::actionUrl()` now has a `$showScriptName` argument, which can be set to `false` to prevent the script name (`index.php`) from being included in the generated URL. (Only recommended for URLs that will be used by GET requests.)\n- Updated Composer to 2.0.12.\n\n### Fixed\n- Fixed a bug where restored entries could get deleted by garbage collection, if their `authorId` value was set to a soft-deleted author. ([#7751](https://github.com/craftcms/cms/issues/7751))\n- Fixed a bug where indexing assets from the command line could work incorrectly in some cases. ([#7741](https://github.com/craftcms/cms/issues/7741))\n- Fixed a SQL error that could occur if a job in the queue failed and had a very long error message on MySQL.\n- Fixed a bug where validation events would trigger when saving an element via `craft\\services\\Elements::saveElement()`, even if `$runValidation` was set to `false`. ([#7756](https://github.com/craftcms/cms/issues/7756))\n- Fixed a bug where `craft\\helpers\\Html::parseTag()` would parse child tags of `<script>` and `<style>` tags.\n- Fixed a bug where pagination labels below Vue admin tables weren\u2019t using the translatable pagination message.\n- Fixed a bug where Craft would place the `beginBody()` tag incorrectly if a template\u2019s `<body>` tag included an inline arrow function (`=>`). ([#7779](https://github.com/craftcms/cms/issues/7779))\n- Fixed a bug where action URLs were based on the current request\u2019s host name rather than the control panel URL when running Craft in headless mode, unless the `pathParam` config setting had been set to `null`. ([#7783](https://github.com/craftcms/cms/issues/7783))\n- Fixed a bug where the `utils/repair/section-structure` or `utils/repair/category-group-structure` commands could reposition elements in the wrong order. ([#7784](https://github.com/craftcms/cms/issues/7784))\n\n## 3.6.11.2 - 2021-03-29\n\n### Fixed\n- Fixed a bug where Matrix field changes on the Current revision weren\u2019t getting propagated to drafts when the \u201cMerge changes into draft\u201d button was clicked. ([#7727](https://github.com/craftcms/cms/issues/7727))\n- Fixed an error that occurred when publishing a draft with an outdated Matrix field. ([#7727](https://github.com/craftcms/cms/issues/7727))\n- Fixed a bug where renaming empty folders would delete them from the disk, instead. ([#7721](https://github.com/craftcms/cms/issues/7721))\n- Fixed a bug where the `inReverse` element query param was getting ignored when eager-loading elements. ([#7737](https://github.com/craftcms/cms/issues/7737))\n- Fixed a bug where the `migrate/all` command was attempting to re-apply old plugin migrations when updating from Craft 3.4 or earlier.\n- Fixed a bug where action requests weren\u2019t getting `X-Robots-Tag: none` headers in their responses. ([#7738](https://github.com/craftcms/cms/issues/7738))\n\n## 3.6.11.1 - 2021-03-24\n\n### Fixed\n- Fixed a bug where the cached project config data wasn\u2019t getting invalidated after applying YAML changes.\n- Fixed an error that could occur when adding jobs to the queue with a custom priority, if the queue driver didn\u2019t support priorities. ([#7719](https://github.com/craftcms/cms/issues/7719))\n- Fixed a bug where some field name characters were getting double-encoded in validation errors. ([#7718](https://github.com/craftcms/cms/issues/7718))\n\n## 3.6.11 - 2021-03-23\n\n### Added\n- Added the `andRelatedTo` element query param, for adding additional relation criteria. ([#5733](https://github.com/craftcms/cms/issues/5733))\n- Added the `{% script %}` tag, for outputting `<script>` tags with full control over the attributes. ([#7676](https://github.com/craftcms/cms/issues/7676))\n- Added `craft\\web\\User::getToken()`.\n- Added `craft\\test\\Craft::mockDbMethods()`.\n\n### Changed\n- The Queue Manager utility now shows delayed jobs. ([#7692](https://github.com/craftcms/cms/issues/7692))\n- The `gc` command can now delete unneeded rows from deprecated database tables, including `templatecaches`, `entrydrafts`, and `entryrevisions`. ([#6434](https://github.com/craftcms/cms/issues/6434))\n- `relatedTo` element query params can now be set to multiple `or` relation criteria inclusively, without specifying the `element`/`targetElement`/`sourceElement` keys. ([#5733](https://github.com/craftcms/cms/issues/5733))\n- `craft\\helpers\\ElementHelper::setUniqueUri()` now starts incrementing duplicate slugs with `-2` instead of `-1`.\n- `craft\\helpers\\Queue::push()` now has `$delay` and `$ttr` arguments.\n- `craft\\queue\\Queue::run()` now has `$repeat` and `$timeout` arguments.\n- Updated Garnish to 0.1.41.\n\n### Deprecated\n- Deprecated `craft\\queue\\Queue::listen()`. `run()` can be used instead.\n\n### Fixed\n- Fixed a bug where requests with an invalid `action` param would return a 500 status code instead of 400. ([#7668](https://github.com/craftcms/cms/issues/7668))\n- Fixed a bug where asset, category, and entry queries could return results when they shouldn\u2019t. ([#7678](https://github.com/craftcms/cms/issues/7678))\n- Fixed a bug where users were getting logged out after changing their password. ([#7682](https://github.com/craftcms/cms/issues/7682))\n- Fixed an infinite loop bug that could occur when saving an element with a non-unique URI over 255 bytes long. ([#7684](https://github.com/craftcms/cms/pull/7684))\n- Fixed a bug where `Craft.initUiElements()` was adding `rel=\"noopener\"` and `target=\"_blank\"` to all external links, rather than just ones within the passed-in container. ([#7686](https://github.com/craftcms/cms/issues/7686))\n- Fixed a bug where the `queue/listen` command wasn\u2019t always respecting exit signals. ([#7704](https://github.com/craftcms/cms/issues/7704))\n- Fixed a SQL error that could occur when running the `utils/repair/section-structure` or `utils/repair/category-group-structure` commands. ([#7699](https://github.com/craftcms/cms/issues/7699))\n- Fixed an error that could occur if the project config data contained any incomplete packed associative arrays.\n- Fixed a bug where `craft\\helpers\\Queue::push()` wasn\u2019t respecting its `$priority` argument.\n- Fixed a bug where relational fields weren\u2019t showing all of the currently selected elements if the field\u2019s limit had decreased, making it difficult to fix the validation error. ([#7707](https://github.com/craftcms/cms/issues/7707))\n- Fixed a PHP error that occurred during garbage collection if the `purgeUnsavedDraftsDuration` config setting was set to a [duration string](https://en.wikipedia.org/wiki/ISO_8601#Durations). ([#7714](https://github.com/craftcms/cms/issues/7714))\n- Fixed a bug where project config changes could be applied incorrectly for numerically-indexed arrays with 10 or more items. ([presseddigital/linkit#88](https://github.com/presseddigital/linkit/issues/88#issuecomment-802794767))\n- Fixed a JavaScript error that would occur if any elements had a `pill` class. ([#7705](https://github.com/craftcms/cms/issues/7705))\n- Fixed a bug where `craft\\test\\Craft::mockMethods()` and `mockCraftMethods()`\u2019 `$constructorParams` arguments only accepted a single argument\u2019s value, rather than an array of constructor arguments.\n\n## 3.6.10 - 2021-03-09\n\n### Added\n- Added the `|httpdate` Twig filter, which can be used to format dates for HTTP headers such as `Expires`. ([craftcms/docs#167](https://github.com/craftcms/docs/pull/167))\n- Added `craft\\events\\FormActionsEvent`.\n- Added `craft\\web\\twig\\variables\\Cp::EVENT_REGISTER_FORM_ACTIONS`. ([#7660](https://github.com/craftcms/cms/issues/7660))\n- Added `craft\\web\\twig\\variables\\Cp::prepFormActions()`.\n\n### Fixed\n- Fixed a bug where console requests were logging non-error/warning logs when Dev Mode was disabled. ([#7659](https://github.com/craftcms/cms/issues/7659))\n- Fixed an error that could occur when updating Craft. ([#7662](https://github.com/craftcms/cms/issues/7662))\n- Fixed a bug where search results could yield no results if any of the search terms were MySQL fulltext stop words. ([#7642](https://github.com/craftcms/cms/issues/7642))\n- Fixed a bug where entries could return the wrong Matrix/Neo/Super Table blocks if the blocks were queried immediately after the entry was created via `craft\\services\\Elements::duplicateElement()`.\n- Fixed a bug where Craft wasn\u2019t updating the prior primary site\u2019s project config when a new site was set as the primary in the control panel. ([#7657](https://github.com/craftcms/cms/issues/7657))\n- Fixed a bug where the `project-config/apply` command output didn\u2019t make any sense at times.\n- Fixed a race condition where the same queue job could get executed multiple times if there was more than one active queue worker and the database used read/write splitting.\n- Fixed a race condition that could result in a SQL error if two revisions were attempted to be created for the same entry at the same time if the database used read/write splitting. ([#7598](https://github.com/craftcms/cms/issues/7598))\n\n## 3.6.9 - 2021-03-05\n\n### Added\n- Added `craft\\helpers\\Session`, which provides methods for working with PHP session variables, without creating a new PHP session if one didn\u2019t need to exist.\n\n### Changed\n- Updated Yii to 2.0.41.\n- Warning and error logs are no longer included in the `stdout` log target if the `CRAFT_STREAM_LOG` PHP constant is set to `true`.\n\n### Fixed\n- Fixed a bug where entry drafts were retaining their former parent entry relationship, if the parent entry was removed and not replaced. ([#7643](https://github.com/craftcms/cms/issues/7643))\n- Fixed an error that could occur during the `update` command on Windows. ([#7644](https://github.com/craftcms/cms/issues/7644))\n- Fixed a bug where the `utils/repair/project-config` command was removing all packed arrays, not just double-packed arrays.\n- Fixed SQL errors that could occur when MySQL was running in `ANSI`/`ANSI_QUOTES` modes. ([#5804](https://github.com/craftcms/cms/issues/5804))\n- Fixed a bug where 404s weren\u2019t getting logged to `web-404s.log`. ([#7653](https://github.com/craftcms/cms/issues/7653))\n- Fixed a bug where `craft\\helpers\\Assets::prepareAssetName()` was appending a `.` to file names that did not have an extension.\n- Fixed a bug where all requests were creating PHP sessions, even if no `CraftSessionId` cookie was present.\n\n## 3.6.8 - 2021-03-03\n\n### Added\n- Added the `is boolean` Twig test.\n- GraphQL schemas now include settings that determine whether inactive elements, drafts, and/or revisions should be included in query results. ([#7590](https://github.com/craftcms/cms/issues/7590)).\n- Added `craft\\gql\\base\\ElementArguments::getRevisionArguments()`.\n- Added `craft\\helpers\\Db::truncateTable()`.\n- Added `craft\\helpers\\Gql::canQueryDrafts()`.\n- Added `craft\\helpers\\Gql::canQueryInactiveElements()`.\n- Added `craft\\helpers\\Gql::canQueryRevisions()`.\n\n### Changed\n- Project config YAML files now include comments alongside UIDs, identifying the name of the component being referenced. ([#7584](https://github.com/craftcms/cms/issues/7584))\n- Control panel requests now explicitly send no-cache headers. ([#7631](https://github.com/craftcms/cms/issues/7631))\n- Plain Text fields\u2019 Placeholder settings now support emoji on MySQL. ([#7629](https://github.com/craftcms/cms/issues/7629))\n- `deleteEntry` GraphQL mutation queries now support `siteId` arguments. ([#7611](https://github.com/craftcms/cms/issues/7611))\n\n### Fixed\n- Fixed a bug where release dates shown in the Updates utility could be off by a day compared to the dates in the changelogs, for clients whose system clock was set to a time zone behind UTC. ([#7612](https://github.com/craftcms/cms/issues/7612))\n- Fixed a bug where user sessions weren\u2019t lasting the extended duration specified by the `rememberedUserSessionDuration` config setting when the `rememberMe` checkbox was ticked. ([#7619](https://github.com/craftcms/cms/issues/7619))\n- Fixed a bug where the <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>S</kbd> \u201cPublish draft\u201d keyboard shortcut wasn\u2019t working for unpublished drafts on Windows computers.\n- Fixed a bug where Redis connection exceptions were getting swallowed when Dev Mode was disabled, and Craft was falsely reporting that it wasn't installed yet instead. ([#7617](https://github.com/craftcms/cms/issues/7617))\n- Fixed a bug where Local volumes were creating extra directories in the web root when saved, if the File System Path was set to an environment variable.\n- Fixed an error that could occur when indexing the search keywords for an element in a disabled site. ([#6383](https://github.com/craftcms/cms/issues/6383))\n- Fixed a bug where `craft\\helpers\\ProjectConfig::cleanupConfig` wasn\u2019t handling packed aways properly. ([#7630](https://github.com/craftcms/cms/issues/7630))\n- Fixed a bug where the `_includes/forms/text.html` control panel template and `Craft.ui.createTextInput()` JavaScript method weren\u2019t respecting custom `autocomplete` values.\n- Fixed a bug where the \u201cSave and continue editing\u201d action on the Edit Entry page wasn\u2019t retaining the currently-selected site.\n- Fixed a bug where non-admins weren\u2019t able to impersonate inactive users. ([#7475](https://github.com/craftcms/cms/issues/7475))\n- Fixed a bug where the Plugin Store wouldn\u2018t fully load when clicking the \u201cBuy now\u201d button on the \u201cThere are trial licenses that require payment\u201d alert, if any of the trialled plugins were disabled.\n- Fixed a bug where the Plugin Store\u2019s cart was not showing the updates dropdown for plugin trial licenses.\n- Fixed a bug where the Plugin Store was showing a generic error when a credit card was declined, instead of a more detailed error.\n- Fixed an error where it wasn\u2019t possible to delete entries from non-primary sites via GraphQL. ([#7611](https://github.com/craftcms/cms/issues/7611))\n- Fixed a bug where the GraphQL API could return unexpected results if multiple `relatedTo*` arguments were used. ([#7534](https://github.com/craftcms/cms/issues/7534))\n\n## 3.6.7 - 2021-02-23\n\n### Added\n- Added `craft\\gql\\base\\ElementArguments::getStatusArguments()`.\n- Added `craft\\helpers\\Gql::relatedArgumentComplexity()`.\n\n### Changed\n- The Updates utility and Plugin Store now identify abandoned plugins.\n- URLs within plain text email bodies are no longer wrapped with `<` and `>` characters, fixing a bug where they could be removed by email providers for looking like HTML tags.\n- The `relatedToAssets`, `relatedToCategories`, `relatedToEntries`, `relatedToTags`, and `relatedToUsers` GraphQL arguments now accept a list of multiple criteria sets. ([#7528](https://github.com/craftcms/cms/issues/7528))\n- Adjusted GraphQL complexity values for relational fields.\n- `craft\\helpers\\UrlHelper::getSchemeForTokenizedUrl()` and `urlWithToken()` now have a `$cp` argument, indicating whether the method call is for a control panel URL.\n- Updated Composer to 2.0.10.\n\n### Removed\n- Removed all draft arguments for assets, categories, global sets, Matrix blocks, tags, and users when querying via the GraphQL API.\n- Removed the `status`, `archived` and `trashed` arguments for global sets when querying via the GraphQL API.\n- Removed the `status` argument for assets when querying via the GraphQL API.\n\n### Fixed\n- Fixed a JavaScript error that occurred after saving an entry from the Quick Post widget, preventing the widget from being used to create a second entry. ([#7582](https://github.com/craftcms/cms/issues/7582))\n- Fixed a bug where it was possible to access the homepage entry from `/__home__`. ([#7585](https://github.com/craftcms/cms/issues/7585))\n- Fixed a bug where URL fields weren\u2019t getting validated properly if their \u201cAllowed URL Types\u201d setting was set to only \u201cTelephone\u201d or \u201cEmail\u201d. ([#7588](https://github.com/craftcms/cms/issues/7588))\n- Fixed a bug where Craft would set plugins\u2019 base paths to the file system root directory, if they were configured with an invalid `basePath` in `vendor/craftcms/plugins.php`.\n- Fixed a bug where user verification and password-reset URLs would use `https` in some cases where they shouldn\u2019t. ([#7581](https://github.com/craftcms/cms/issues/7581))\n- Fixed a bug where it wasn\u2019t possible to override the `User-Agent` header sent by Guzzle from `config/guzzle.php`. ([#7597](https://github.com/craftcms/cms/issues/7597))\n- Fixed a bug where non-admin users weren\u2019t able to replace files from the Edit Asset page, unless they had the \u201cRemove files and folders\u201d permission. ([#7601](https://github.com/craftcms/cms/issues/7601))\n- Fixed a bug where links within info HUDs weren\u2019t opening in a new window.\n\n### Security\n- It\u2019s no longer possible to save a Local volume with the File System Path setting set to a system directory (e.g. the `templates/` or `vendor/` folders).\n\n## 3.6.6 - 2021-02-15\n\n### Added\n- Added the `successMessageInput()` and `failMessageInput()` Twig functions. ([#7561](https://github.com/craftcms/cms/pull/7561))\n- Added the `prefixGqlRootTypes` config setting, which determines whether the `gqlTypePrefix` config setting should impact `query`, `mutation`, and `subscription` types. ([#7552](https://github.com/craftcms/cms/issues/7552))\n- Added the `savedDraftsOnly` entry query param.\n- Added `craft\\behaviors\\DraftBehavior::$markAsSaved`.\n- Added `craft\\helpers\\Html::failMessageInput()`.\n- Added `craft\\helpers\\Html::successMessageInput()`.\n- Added `craft\\services\\Gc::deletePartialElements()`.\n\n### Changed\n- The Entries index page no longer shows unpublished drafts that have never been updated with content.\n- It\u2019s now possible to delete entries from the \u201cAll entries\u201d source. ([#7545](https://github.com/craftcms/cms/issues/7545))\n- Garbage collection now deletes unpublished drafts that were never updated with content, per the (no longer deprecated) `purgeUnsavedDraftsDuration` config setting.\n- Garbage collection now deletes orphaned rows in the `drafts` and `revisions` tables.\n- Garbage collection now deletes incomplete element data, for built-in element types. ([#6434](https://github.com/craftcms/cms/issues/6434))\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t deleting unpublished drafts when converting a Channel or Structure section to a Single. ([#7542](https://github.com/craftcms/cms/issues/7542))\n- Fixed a bug where it was possible for admins to delete a Single entry from the Edit Entry page. ([#7547](https://github.com/craftcms/cms/issues/7547))\n- Fixed an error that occurred when attempting to reposition an unpublished draft within a Structure section.\n- Fixed a CSS bug that prevented elements within relational fields from being easily reordered. ([#7549](https://github.com/craftcms/cms/issues/7549))\n- Fixed a bug where the \u201cMy Drafts\u201d dashboard widget wasn\u2019t listing disabled drafts. ([#7546](https://github.com/craftcms/cms/issues/7546))\n- Fixed a bug where unpublished drafts weren\u2019t getting soft-deleted along with other entries when their section or entry type was deleted, causing an error on the Dashboard if there was a \u201cMy Drafts\u201d widget. ([#7550](https://github.com/craftcms/cms/issues/7550))\n- Fixed a bug where it wasn\u2019t possible for non-admins to rename, replace, edit, or delete their own temporary assets. ([#7420](https://github.com/craftcms/cms/issues/7420))\n- Fixed a bug where Craft wasn\u2019t fully applying custom project configs when running tests. ([#7412](https://github.com/craftcms/cms/issues/7412), [#1953](https://github.com/craftcms/commerce/issues/1953))\n- Fixed a bug where the `config/project/` folder within the test directory wasn\u2019t getting deleted after a test suite was run.\n\n## 3.6.5.1 - 2021-02-10\n\n### Fixed\n- Fixed a bug where all fields were getting assigned to a field group on save, even if they weren\u2019t global. ([#7540](https://github.com/craftcms/cms/issues/7540))\n\n## 3.6.5 - 2021-02-10\n\n### Added\n- Added the \u201cMy Drafts\u201d dashboard widget. ([#7517](https://github.com/craftcms/cms/issues/7517))\n- Users can now be hard-deleted. ([#4420](https://github.com/craftcms/cms/issues/4420))\n- Added `craft\\controllers\\UsersController::EVENT_INVALID_USER_TOKEN`. ([#7520](https://github.com/craftcms/cms/issues/7520))\n- Added `craft\\elements\\actions\\DeleteActionInterface`.\n- Added `craft\\events\\DefineSourceSortOptionsEvent`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n- Added `craft\\events\\DefineSourceTableAttributesEvent`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n- Added `craft\\events\\InvalidUserTokenEvent`. ([#7520](https://github.com/craftcms/cms/issues/7520))\n- Added `craft\\mail\\Mailer::EVENT_BEFORE_PREP`. ([#7501](https://github.com/craftcms/cms/issues/7501))\n- Added `craft\\services\\Drafts::generateDraftName()`.\n- Added `craft\\services\\ElementIndexes::EVENT_DEFINE_SOURCE_SORT_OPTIONS`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n- Added `craft\\services\\ElementIndexes::EVENT_DEFINE_SOURCE_TABLE_ATTRIBUTES`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n\n### Changed\n- The Entries index page no longer shows unpublished drafts when filtering by entry status.\n- The \u201cDrafts\u201d entry status now shows all entry drafts; not just unpublished drafts. ([#6632](https://github.com/craftcms/cms/issues/6632), [#7517](https://github.com/craftcms/cms/issues/7517))\n- Improved the styling of entry drafts within entry indexes. ([#7517](https://github.com/craftcms/cms/issues/7517))\n- The Edit Entry page now notifies the author that they\u2019re editing a draft after closing Live Preview, if a draft was auto-created for them. ([#6681](https://github.com/craftcms/cms/issues/6681))\n- Field groups are now soft-deleted.\n- Color fields\u2019 text inputs are now updated based on the color input\u2019s `input` event rather than `change`. ([#7529](https://github.com/craftcms/cms/issues/7529))\n- Entry drafts\u2019 search keywords now get partially indexed.\n- The `resave/entries` command now supports a `--drafts` flag.\n\n### Fixed\n- Fixed a bug where saving an entry to a site other than the primary via GraphQL would return `null`. ([#7468](https://github.com/craftcms/cms/issues/7468))\n- Fixed a bug where some content could go missing when applying project config changes, if a field group had been deleted and its fields had been moved to a different group. ([#7526](https://github.com/craftcms/cms/issues/7526))\n- Fixed a JavaScript error that occurred when clickin on a color input. ([#7529](https://github.com/craftcms/cms/issues/7529))\n- Fixed an error that could occur on element index pages. ([#7535](https://github.com/craftcms/cms/issues/7535))\n\n## 3.6.4.1 - 2021-02-05\n\n### Fixed\n- Fixed a bug where extra rows could be created in the `drafts` table. ([#7542](https://github.com/craftcms/cms/issues/7542))\n\n## 3.6.4 - 2021-02-05\n\n### Added\n- Added the `accessibilityDefaults` config setting, which determines users\u2019 default accessibility preferences. ([#7504](https://github.com/craftcms/cms/issues/7504))\n- Added the `collation` database config setting, which determines the default collation that should be used when creating tables, rather than leaving it up to the character set\u2019s default collation. (MySQL only.)\n- Added the `db/convert-charset` command, which can be used to convert all database tables\u2019 and textual columns\u2019 character sets and collations in one fell swoop.\n- Added `craft\\base\\ElementInterface::uiLabel()`.\n- Added `craft\\services\\Drafts::insertDraftRow()`.\n\n### Changed\n- Unpublished drafts with no titles are now labeled as \u201cUntitled entry\u201d rather than by their ID. ([#7500](https://github.com/craftcms/cms/issues/7500))\n- Unpublished drafts no longer show a value for URL columns in entry indexes.\n- Entry selection modals no longer show unpublished drafts.\n- Entry drafts no longer get a status color in entry indexes.\n- `craft\\elements\\User::getDirtyAttributes()` now accurately reports changed attributes. ([#7505](https://github.com/craftcms/cms/pull/7505))\n\n### Fixed\n- Fixed a JavaScript error that could occur in the control panel. ([#7492](https://github.com/craftcms/cms/issues/7492))\n- Fixed a bug where the Edit Site page\u2019s title could be set to the raw site\u2019s name setting, if it was set to an environment variable.\n- Fixed a bug where some ASCII character mappings included a trailing `'` character. ([#7491](https://github.com/craftcms/cms/issues/7491))\n- Fixed an error that could occur on the System Report utility. ([#7493](https://github.com/craftcms/cms/issues/7493))\n- Fixed a bug where Number field inputs were slightly indented. ([#7498](https://github.com/craftcms/cms/issues/7498))\n- Fixed a bug where built-in Composer features weren\u2019t reading credentials from the global `auth.json` file. ([#7466](https://github.com/craftcms/cms/issues/7466))\n- Fixed a bug where unpublished drafts were revealing their temporary slugs in the URI and Slug columns of entry indexes, if a slug hadn\u2019t been chosen yet.\n- Fixed a bug that could break some autosuggest inputs.\n- Fixed a bug where Craft wasn\u2019t recording entry-specific attribute changes.\n- Fixed a bug where `craft\\helpers\\Html::namespaceAttributes()` was ignoring `url()` references if multiple existed on the same line. ([#7496](https://github.com/craftcms/cms/pull/7496))\n- Fixed an error that could occur when editing an element with a URL field without a value. ([#7506](https://github.com/craftcms/cms/pull/7506))\n- Fixed a bug where duplicating an unpublished draft wouldn\u2019t create a new row in the `drafts` table, so the two drafts would be joined at the hip. ([#7508](https://github.com/craftcms/cms/issues/7508))\n\n## 3.6.3 - 2021-02-03\n\n### Added\n- Added `craft\\base\\ElementInterface::setUiLabel()`.\n- Added `craft\\fields\\BaseRelationField::tableAttributeHtml()`.\n- Added `craft\\helpers\\Cp::elementPreviewHtml()`.\n\n### Changed\n- Entry indexes now include draft entries in the main entry listings. ([#7401](https://github.com/craftcms/cms/issues/7401))\n- Entry indexes can now show a \u201cDrafts\u201d column, which lists the entries\u2019 drafts. ([#7473](https://github.com/craftcms/cms/issues/7473))\n- The \u201cPublish draft\u201d button on Edit Entry pages can now be activated using a <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Alt</kbd>/<kbd>Option</kbd> + <kbd>S</kbd> keyboard shortcut.\n- Entry queries\u2019 `drafts` param can now be set to `null`, indicating that both normal entries _and_ drafts can be included in the results.\n- Entries can now be eager-loaded with `drafts`.\n- `craft\\helpers\\Cp::elementHtml` now has a `$showDraftBadge` argument.\n\n### Removed\n- Removed `craft\\fields\\BaseRelationField::elementPreviewHtml()`.\n\n### Fixed\n- Fixed a bug where Edit Entry pages would get a \u201cCreate a new entry\u201d heading when editing an existing draft entry.\n- Fixed a bug where user impersonation URLs only worked for active users. ([#7475](https://github.com/craftcms/cms/issues/7475))\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::draftOf()` didn\u2019t accept passing in `'*'`. ([#7470](https://github.com/craftcms/cms/issues/7470))\n\n## 3.6.2 - 2021-01-29\n\n### Added\n- Added `craft\\gql\\handlers\\Site`.\n- Added `craft\\service\\Gql::handleQueryErrors()`.\n\n### Changed\n- The web-based installer now respects the `postCpLoginRedirect` config setting. ([#5648](https://github.com/craftcms/cms/issues/5648))\n- Improved GraphQL error reporting.\n- `craft\\test\\console\\CommandTest::stdOut()`, `outputCommand()`, and `stderr()` now accept an array of possible expected strings.\n- Downgraded webonyx/graphql-php to 14.4. ([#7452](https://github.com/craftcms/cms/issues/7452))\n\n### Fixed\n- Fixed a bug where any license key inputs on the Settings \u2192 Plugins page that were set to environment variable names would get replaced with the actual license key after a short period of time.\n- Fixed a bug where some GraphQL queries could not be executed when Dev Mode was disabled. ([#7452](https://github.com/craftcms/cms/issues/7452))\n- Fixed a bug where GraphQL queries which set `site: '*'` would result in an error. ([#5079](https://github.com/craftcms/cms/issues/5079))\n- Fixed a bug where sections\u2019 Template setting values weren\u2019t getting auto-generated based on the Name setting, for new sections.\n- Fixed a PHP error that could occur when running the `update` command if specific versions were requested.\n- Fixed an error that could occur if a deprecation warning was logged before Craft was installed.\n\n## 3.6.1 - 2021-01-27\n\n### Added\n- Added `craft\\console\\ControllerTrait::checkTty()`.\n\n### Changed\n- The `setup/welcome` command that is run automatically after installing Craft via `composer create-project craftcms/craft` can now initiate the setup process automatically, if using Composer 2.\n- `craft\\console\\Controller::$interactive` is now set to `false` automatically for non-interactive shells.\n\n### Fixed\n- Fixed a bug where the `migrate/all` command wasn\u2019t working when executed from a Composer script in a non-interactive shell, unless `--interactive=0` was explicitly passed. ([#7381](https://github.com/craftcms/cms/issues/7381))\n- Fixed an error that occurred when saving a Categories field with a branch limit. ([#7449](https://github.com/craftcms/cms/pull/7449))\n\n## 3.6.0.1 - 2021-01-26\n\n### Fixed\n- Fixed an error that could occur when validating dates. ([#7443](https://github.com/craftcms/cms/issues/7443))\n\n## 3.6.0 - 2021-01-26\n\n> **Warning**\n> Read through the [Upgrading to Craft 3.6](https://craftcms.com/knowledge-base/upgrading-to-craft-3-6) guide before updating.\n\n### Added\n- Craft now supports PHP 8. ([#7050](https://github.com/craftcms/cms/issues/7050))\n- Craft now requires PHP 7.2.5 or later.\n- Commercial plugins now receive license keys automatically when installed as trials.\n- It\u2019s now possible for admins to purchase Craft and plugin licenses when `allowAdminChanges` is disabled.\n- It\u2019s now possible to browse the Plugin Store when `allowAdminChanges` is disabled.\n- Added tablet and phone viewport emulation to Live Preview (Craft Pro only.) ([#1006](https://github.com/craftcms/cms/issues/1006))\n- Entries now begin life as \u201cunpublished drafts\u201d rather than \u201cunsaved drafts\u201d. They are no longer ephemeral; they will continue to exist until explicitly published or deleted. ([#5661](https://github.com/craftcms/cms/issues/5661), [#7216](https://github.com/craftcms/cms/issues/7216))\n- It\u2019s now possible to delete entries for a specific site, if their section\u2019s propagation method is set to \u201cLet each entry choose which sites it should be saved to\u201d. ([#7190](https://github.com/craftcms/cms/issues/7190))\n- Added the \u201cCopy impersonation URL\u201d user action, which generates a URL that can be pasted into a private window to impersonate the user without losing the current session. ([#7281](https://github.com/craftcms/cms/issues/7281))\n- User indexes can now include a \u201cGroups\u201d column. ([#7211](https://github.com/craftcms/cms/issues/7211))\n- Volumes now have \u201cTitle Translation Method\u201d and \u201cTitle Translation Key Format\u201d settings, like entry types. ([#7135](https://github.com/craftcms/cms/issues/7135))\n- It\u2019s now possible to set sites\u2019 Name settings to environment variables.\n- URL fields now have an \u201cAllowed URL Types\u201d setting, which adds the ability to accept telephone and email URLs. ([#5497](https://github.com/craftcms/cms/issues/5497))\n- Added the \u201cCaptions/Subtitles\u201d file kind. ([#7304](https://github.com/craftcms/cms/issues/7304))\n- Added the `users/list-admins` and `users/set-password` commands. ([#7067](https://github.com/craftcms/cms/issues/7067))\n- Added the `disableGraphqlTransformDirective` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `enableGraphqlIntrospection` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `handleCasing` config setting, which determines the default casing that should be used when autogenerating component handles. ([#4276](https://github.com/craftcms/cms/issues/4276))\n- Added the `maxGraphqlComplexity` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `maxGraphqlDepth` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `maxGraphqlResults` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `rasterizeSvgThumbs` config setting. ([#7146](https://github.com/craftcms/cms/issues/7146))\n- Added the `sanitizeCpImageUploads` config setting, which determines whether images uploaded via the control panel should be sanitized. ([#3060](https://github.com/craftcms/cms/issues/3060))\n- Added the `{% tag %}` Twig tag.\n- Added the `withGroups` user query param.\n- Added the `relatedToAssets`, `relatedToCategories`, `relatedToEntries`, `relatedToTags`, and `relatedToUsers` arguments to GraphQL queries. ([#7110](https://github.com/craftcms/cms/issues/7110))\n- Added the `isUnpublishedDraft` GraphQL field.\n- Added `craft\\base\\ApplicationTrait::getFormattingLocale()`, which returns the locale that should be used for date/time formatting.\n- Added `craft\\base\\ElementExporterInterface::isFormattable()`.\n- Added `craft\\base\\ElementInterface::getIsUnpublishedDraft()`.\n- Added `craft\\base\\FieldInterface::includeInGqlSchema()`. ([#7244](https://github.com/craftcms/cms/pull/7244))\n- Added `craft\\base\\FieldInterface::useFieldset()`, which custom fields can override to return `true` if a `<fieldset>` and `<legend>` should be used, rather than a `<div>` and `<label>`.\n- Added `craft\\base\\VolumeInterface::createDirectory()`.\n- Added `craft\\base\\VolumeInterface::deleteDirectory()`.\n- Added `craft\\base\\VolumeInterface::getDateModified()`.\n- Added `craft\\base\\VolumeInterface::getFileSize()`.\n- Added `craft\\base\\VolumeInterface::renameDirectory()`.\n- Added `craft\\base\\VolumeTrait::$titleTranslationKeyFormat`.\n- Added `craft\\base\\VolumeTrait::$titleTranslationMethod`.\n- Added `craft\\console\\Controller::passwordPrompt()`.\n- Added `craft\\console\\Request::getHadToken()`.\n- Added `craft\\console\\Request::getSiteToken()`.\n- Added `craft\\console\\Request::setToken()`.\n- Added `craft\\controllers\\BaseEntriesController::enforceDeleteEntryPermissions()`.\n- Added `craft\\elements\\db\\ElementQueryInterface::afterPopulate()`.\n- Added `craft\\elements\\db\\ElementQueryInterface::createElement()`.\n- Added `craft\\elements\\Entry::EVENT_DEFINE_ENTRY_TYPES`. ([#7136](https://github.com/craftcms/cms/issues/7136))\n- Added `craft\\elements\\Entry::getAvailableEntryTypes()`.\n- Added `craft\\events\\CreateFieldLayoutFormEvent`.\n- Added `craft\\events\\DefineEntryTypesEvent`.\n- Added `craft\\events\\RegisterGqlArgumentHandlersEvent`.\n- Added `craft\\events\\SearchEvent::$results`. ([#7237](https://github.com/craftcms/cms/issues/7237))\n- Added `craft\\fieldlayoutelements\\AssetTitleField`.\n- Added `craft\\fieldlayoutelements\\BaseField::useFieldset()`.\n- Added `craft\\fields\\Url::TYPE_EMAIL`.\n- Added `craft\\fields\\Url::TYPE_TEL`.\n- Added `craft\\fields\\Url::TYPE_URL`.\n- Added `craft\\gql\\ArgumentManager`.\n- Added `craft\\gql\\base\\ArgumentHandler`.\n- Added `craft\\gql\\base\\ArgumentHandlerInterface`.\n- Added `craft\\gql\\base\\Generator`.\n- Added `craft\\gql\\base\\RelationArgumentHandler`.\n- Added `craft\\gql\\ElementQueryConditionBuilder::setArgumentManager()`.\n- Added `craft\\gql\\handlers\\RelatedAssets`.\n- Added `craft\\gql\\handlers\\RelatedCategories`.\n- Added `craft\\gql\\handlers\\RelatedEntries`.\n- Added `craft\\gql\\handlers\\RelatedTags`.\n- Added `craft\\gql\\handlers\\RelatedUsers`.\n- Added `craft\\gql\\types\\input\\criteria\\Asset`.\n- Added `craft\\gql\\types\\input\\criteria\\Category`.\n- Added `craft\\gql\\types\\input\\criteria\\Entry`.\n- Added `craft\\gql\\types\\input\\criteria\\Tag`.\n- Added `craft\\gql\\types\\input\\criteria\\User`.\n- Added `craft\\helpers\\App::createFormattingLocale()`.\n- Added `craft\\helpers\\App::phpSizeToBytes()`.\n- Added `craft\\helpers\\Cp::checkboxFieldHtml()`.\n- Added `craft\\helpers\\Cp::checkboxSelectFieldHtml()`.\n- Added `craft\\helpers\\Cp::colorFieldHtml()`.\n- Added `craft\\helpers\\Cp::editableTableFieldHtml()`.\n- Added `craft\\helpers\\Cp::lightswitchFieldHtml()`.\n- Added `craft\\helpers\\Cp::renderTemplate()`.\n- Added `craft\\helpers\\Cp::selectFieldHtml()`.\n- Added `craft\\helpers\\Cp::selectHtml()`.\n- Added `craft\\helpers\\Cp::textareaFieldHtml()`.\n- Added `craft\\helpers\\Cp::textFieldHtml()`.\n- Added `craft\\helpers\\Diff`.\n- Added `craft\\helpers\\Gql::eagerLoadComplexity()`.\n- Added `craft\\helpers\\Gql::nPlus1Complexity()`.\n- Added `craft\\helpers\\Gql::singleQueryComplexity()`.\n- Added `craft\\helpers\\Template::paginateQuery()`.\n- Added `craft\\i18n\\I18N::validateAppLocaleId()`.\n- Added `craft\\i18n\\Locale::setDateTimeFormats()`. ([#7394](https://github.com/craftcms/cms/issues/7394))\n- Added `craft\\log\\Dispatcher`.\n- Added `craft\\models\\FieldLayout::EVENT_CREATE_FORM`. ([#7258](https://github.com/craftcms/cms/issues/7258))\n- Added `craft\\models\\Site::getName()`.\n- Added `craft\\models\\Site::setBaseUrl()`.\n- Added `craft\\models\\Site::setName()`.\n- Added `craft\\mutex\\MysqlMutex`.\n- Added `craft\\mutex\\PgsqlMutex`.\n- Added `craft\\services\\Assets::$generatePendingTransformsViaQueue`. ([#7360](https://github.com/craftcms/cms/issues/7360))\n- Added `craft\\services\\Drafts::EVENT_AFTER_APPLY_DRAFT`.\n- Added `craft\\services\\Drafts::EVENT_BEFORE_APPLY_DRAFT`.\n- Added `craft\\services\\Drafts::publishDraft()`.\n- Added `craft\\services\\Globals::deleteSet()`.\n- Added `craft\\services\\Globals::reset()`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_CPU_HEAVY`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_EAGER_LOAD`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_NPLUS1`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_QUERY`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_SIMPLE_FIELD`.\n- Added `craft\\services\\Structures::applyBranchLimitToElements()`.\n- Added `craft\\services\\Structures::fillGapsInElements()`.\n- Added `craft\\test\\ActiveFixture`.\n- Added `craft\\test\\DbFixtureTrait`.\n- Added `craft\\test\\fixtures\\elements\\BaseContentFixture`.\n- Added `craft\\test\\fixtures\\elements\\BaseElementFixture`.\n- Added `craft\\test\\TestSetup::SITE_URL`.\n- Added `craft\\validators\\UrlValidator::URL_PATTERN`.\n- Added `craft\\web\\Request::getHadToken()`.\n- Added `craft\\web\\Request::getSiteToken()`.\n- Added `craft\\web\\Request::setToken()`.\n- Added the `Craft.index()` JavaScript method.\n\n### Changed\n- Relational fields now include all related elements\u2019 titles as search keywords, including disabled elements. ([#7079](https://github.com/craftcms/cms/issues/7079))\n- Improved the performance of project config change diffs. ([#7218](https://github.com/craftcms/cms/issues/7218))\n- Improved the accessibility of info icons.\n- Checkbox and radio button group fields now use `<fieldset>`s and `<legend>`s throughout the control panel.\n- Field containers no longer set the `aria-describedby` attribute, leaving it up to the actual inputs to do so. ([#7365](https://github.com/craftcms/cms/issues/7365))\n- Number field settings and input values are now fully formatted, unless the Preview Format setting is set to \u201cUnformatted\u201d.\n- The Settings \u2192 Plugin page now shows which developer created each plugin. ([#7254](https://github.com/craftcms/cms/issues/7254))\n- Field layout designers will no longer create a new tab if no tab name is entered in the prompt. ([#7333](https://github.com/craftcms/cms/issues/7333))\n- Site URLs that are generated on the front-end of disabled sites now include the `siteToken` param, if one was passed to the current page. ([#7264](https://github.com/craftcms/cms/issues/7264))\n- Mutex lock names are now prefixed with the application ID, to avoid lock conflicts if two Craft installs shared the same database. ([#7384](https://github.com/craftcms/cms/issues/7384))\n- Action URLs are now always based on the control panel URL when running Craft in headless mode. ([#5553](https://github.com/craftcms/cms/issues/5553))\n- Renamed the `backup` and `restore` commands to `db/backup` and `db/restore`. ([#7023](https://github.com/craftcms/cms/issues/7023))\n- The `migrate/all` command now lists the migrations that will be applied. ([#7381](https://github.com/craftcms/cms/issues/7381))\n- The `project-config/apply` command now displays a list of changes it is applying. ([#7235](https://github.com/craftcms/cms/issues/7235))\n- The `allowedFileExtensions` config setting now includes several file extensions used by caption and subtitle file formats by default. ([#7304](https://github.com/craftcms/cms/issues/7304))\n- When applying project config changes, Craft now installs new plugins _before_ uninstalling removed plugins. ([#7436](https://github.com/craftcms/cms/issues/7436))\n- The `currency`, `filesize`, `number`, `percentage`, and `timestamp` Twig filters now return the passed-in value verbatim if it wasn\u2019t a valid number.\n- The `withoutKey` Twig filter can now accept an array, for removing multiple keys at once. ([#7230](https://github.com/craftcms/cms/issues/7230))\n- It\u2019s now possible to add new log targets by overriding `components.log.targets` in `config/app.php`, rather than the entire `log` component config.\n- The `_includes/forms/field.html` control panel template and `craft\\helpers\\Cp::fieldHtml()` now accept a `fieldset` variable/config key, which can be set to `true` to cause the resulting field to be a `<fieldset>` instead of a `<div>`, and the label to be a `<legend>` instead of a `<label>`.\n- The `_includes/forms/field.html` control panel template and `craft\\helpers\\Cp::fieldHtml()` now accept an `instructionsPosition` variable/config key, which can be set to `'after'` to cause the field instructions to be rerdered after the input instead of before.\n- The `_includes/forms/field.html` control panel template and `craft\\helpers\\Cp::fieldHtml()` now accept a `fieldLabel` variable/config key, which will take precedence over `label`.\n- The `checkboxField` macro within the `_includes/forms.html` control panel template now returns a `<fieldset>` if a `fieldLabel` config key was passed.\n- `craft\\base\\ElementExporterInterface::export()` can now return raw response data, a callable, or a resource, if `isFormattable()` returns `false`. If a callable or resource is returned, it will be streamed to the browser. ([#7148](https://github.com/craftcms/cms/issues/7148))\n- `craft\\behaviors\\EnvAttributeParserBehavior::$attributes` can now be set to an array with key/value pairs, where the key is the attribute name, and the value is the raw (unparsed) value, or a callable that returns the raw value.\n- `craft\\behaviors\\EnvAttributeParserBehavior::$attributes` can now be set to an array with key/value pairs, where the key is the attribute name, and the value is the raw (unparsed) value, or a callable that returns the raw value.\n- `craft\\db\\Connection::getPrimaryKeyName()`, `getForeignKeyName()`, and `getIndexName()` now generate completely random object names, rather than basing them on a table name, etc. ([#7153](https://github.com/craftcms/cms/issues/7153))\n- `craft\\base\\ApplicationTrait::getLocale()` now returns the same locale that the application language is set to.\n- `craft\\helpers\\Cp::fieldHtml()` now accepts a control panel template path, prefixed with `template:`.\n- `craft\\helpers\\Gql::isSchemaAwareOf()`, `extractAllowedEntitiesFromSchema()`, `canSchema()`, `extractEntityAllowedActions()`, `canMutateEntries()`, `canMutateTags()`, `canMutateGlobalSets()`, `canMutateCategories()`, `canMutateAssets()`, `canQueryEntries()`, `canQueryAssets()`, `canQueryCategories()`, `canQueryTags()`, `canQueryGlobalSets()`, and `canQueryUsers()` now have `$schema` arguments.\n- `craft\\models\\Site::$baseUrl` is now a magic property, which returns the parsed base URL. ([#3964](https://github.com/craftcms/cms/issues/3964))\n- `craft\\models\\Site::$name` is now a magic property, which returns the parsed site name. ([#3964](https://github.com/craftcms/cms/issues/3964))\n- `craft\\models\\Site::getBaseUrl()` now has a `$parse` argument, which can be set to `false` to return the raw (unparsed) base URL.\n- `craft\\services\\Composer::install()` no longer has an `$allowlist` argument.\n- `craft\\services\\Gql::getValidationRules()` now has an `$isIntrospectionQuery` argument.\n- `Craft.formatNumber()` and other D3-based number formatting now uses a dynamically-generated locale definition based on info pulled from the application\u2019s formatting locale. ([#7341](https://github.com/craftcms/cms/issues/7341))\n- Craft no longer reports PHP deprecation errors.\n- Exception JSON responses now include `exception`, `file`, `line`, and `trace` keys. ([#7406](https://github.com/craftcms/cms/issues/7406))\n- GraphQL queries now support eager-loading for arguments provided as input objects.\n- Made it easier to extend Craft\u2019s Codeception testing module with custom code. ([#7339](https://github.com/craftcms/cms/issues/7339))\n- Updated Yii to 2.0.40.\n- Updated Guzzle to 7.x, for projects that don\u2019t have any plugins that require Guzzle 6. ([#6997](https://github.com/craftcms/cms/issues/6997))\n- Updated Composer to 2.0.8.\n- Updated LitEmoji to 2.x.\n- Updated the Symfony Yaml component to 5.x.\n- Updated svg-sanitizer to 0.14.\n- Updated webonyx/graphql-php to 14.x.\n\n### Deprecated\n- Deprecated the `backup` and `restore` commands.\n- Deprecated the `purgeUnsavedDraftsDuration` config setting.\n- Deprecated the `siteName` config setting. Sites\u2019 Name settings should be set to environment variables instead.\n- Deprecated the `siteUrl` config setting. Sites\u2019 Base URL settings should be set to aliases or environment variables instead. ([#3205](https://github.com/craftcms/cms/issues/3205))\n- Deprecated the `relatedToAll` GraphQL query argument. `relatedTo: [\"and\", ...ids]` should be used instead.\n- Deprecated the `isUnsavedDraft` GraphQL field.\n- Deprecated `craft\\base\\Element::getIsUnsavedDraft()`. `getIsUnpublishedDraft()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::createDir()`. `createDirectory()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::deleteDir()`. `deleteDirectory()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::getFileMetadata()`. `getFileSize()` and `getDateModified()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::renameDir()`. `renameDirectory()` should be used instead.\n- Deprecated `craft\\db\\Connection::trimObjectName()`.\n- Deprecated `craft\\gql\\base\\Resolver::getArrayableArguments()`.\n- Deprecated `craft\\gql\\base\\Resolver::prepareArguments()`.\n- Deprecated `craft\\helpers\\App::logConfig()`.\n- Deprecated `craft\\helpers\\Template::paginateCriteria()`. `paginateQuery()` should be used instead.\n- Deprecated `craft\\services\\Categories::applyBranchLimitToCategories()`. `craft\\services\\Structures::applyBranchLimitToElements()` should be used instead.\n- Deprecated `craft\\services\\Categories::fillGapsInCategories()`. `craft\\services\\Structures::fillGapsInElements()` should be used instead.\n- Deprecated `craft\\services\\Composer::$disablePackagist`.\n- Deprecated `craft\\services\\Drafts::applyDraft()`. `publishDraft()` should be used instead.\n- Deprecated `craft\\services\\Drafts::EVENT_AFTER_APPLY_DRAFT`. `EVENT_AFTER_PUBLISH_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::EVENT_BEFORE_APPLY_DRAFT`. `EVENT_BEFORE_PUBLISH_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::purgeUnsavedDrafts()`.\n- Deprecated `craft\\test\\Fixture`. `craft\\test\\ActiveFixture` should be used instead.\n- Deprecated `craft\\web\\View::$minifyCss`.\n- Deprecated `craft\\web\\View::$minifyJs`.\n- Deprecated `craft\\web\\View::renderTemplateMacro()`.\n\n### Removed\n- Removed the \u201cPlaceholder\u201d setting from URL fields. ([#7303](https://github.com/craftcms/cms/issues/7303))\n- Removed `craft\\controllers\\ElementIndexesController::actionCreateExportToken()`.\n- Removed `craft\\controllers\\ExportController`.\n- Removed `craft\\services\\Api::getComposerWhitelist()`.\n- Removed `craft\\test\\fixtures\\elements\\ElementFixture`. `craft\\test\\fixtures\\elements\\BaseElementFixture` or `BaseContentFixture` should be used instead.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::deleteAllByFieldHandle()`.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::extractTabsFromFieldLayout()`.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::getTabsForFieldLayout()`.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::linkFieldToLayout()`.\n- Removed Minify and jsmin-php.\n\n### Fixed\n- Fixed an error that occurred when a schema change was made within a transaction, if using MySQL and PHP 8. ([#7174](https://github.com/craftcms/cms/issues/7174))\n- Fixed a bug where asset queries\u2019 `withTransforms` param wasn\u2019t being respected for eager-loaded assets. ([#6140](https://github.com/craftcms/cms/issues/6140))\n- Fixed a bug where `craft\\db\\Connection::getPrimaryKeyName()`, `getForeignKeyName()`, and `getIndexName()` could generate non-unique object names. ([#7153](https://github.com/craftcms/cms/issues/7153))\n- Fixed a bug where number strings were not correctly typecast to the right PHP numeric type when using the Number GraphQL type.\n- Fixed a bug where it wasn\u2019t possible to save a Global set with a predefined UID.\n- Fixed a bug where `craft\\helpers\\Db::prepareValuesForDb()` would omit or JSON-encode `DateTime` objects, depending on the PHP version, rather than converting them to ISO-8601-formatted strings.\n- Fixed a bug where info icons\u2019 content was focusable before the icon was activated. ([#7257](https://github.com/craftcms/cms/issues/7257))\n- Fixed a bug where generated URLs would include the token from the current request, even if it had expired or met its usage limit.\n- Fixed a bug where Number field settings and input values could be stored incorrectly if the user\u2019s formatting locale used a different decimal character that the application language.\n- Fixed a MySQL deadlock error that could occur when running background jobs. ([#7179](https://github.com/craftcms/cms/issues/7179))\n\n### Security\n- The default `allowedFileExtensions` config setting value no longer includes `htm` or `html`.\n\n## 3.5.19.1 - 2021-01-28\n\n### Fixed\n- Fixed an error that could occur when validating dates. ([#7459](https://github.com/craftcms/cms/issues/7459))\n\n## 3.5.19 - 2021-01-26\n\n### Changed\n- The control panel is now fully translated in all supported languages.\n\n### Fixed\n- Fixed a bug where Date fields with existing values were always considered dirty when saving an entry. ([#7404](https://github.com/craftcms/cms/issues/7404))\n\n## 3.5.18 - 2021-01-19\n\n### Changed\n- Improved the accessibility of lightswitches in the control panel. ([#7313](https://github.com/craftcms/cms/issues/7313))\n- Improved the accessibility of the Login page. ([#7268](https://github.com/craftcms/cms/issues/7268), [#7287](https://github.com/craftcms/cms/issues/7287), [#7288](https://github.com/craftcms/cms/issues/7288))\n- Improved the accessibility of Number fields. ([#7367](https://github.com/craftcms/cms/issues/7367))\n- Added `aria-label` or `aria-hidden` attributes to control panel icons, where appropriate. ([#7302](https://github.com/craftcms/cms/pull/7302))\n- Dynamic subfolder paths in Assets fields can now output `:ignore:` to avoid an invalid subpath error if no segment is intended. ([#7353](https://github.com/craftcms/cms/issues/7353))\n- Improved the error message that is output when running the `clear-caches/cp-resources` command, if the `@webroot` alias isn\u2019t explicitly set. ([#7286](https://github.com/craftcms/cms/issues/7286))\n- `craft\\i18n\\I18N::getFormatter()` now instantiates the formatter via `Craft::createObject()`. ([#7341](https://github.com/craftcms/cms/issues/7341))\n\n### Fixed\n- Fixed a bug where auto-created Matrix blocks were taking over the focus when creating a new entry. ([#7363](https://github.com/craftcms/cms/issues/7363))\n- Fixed an error that could occur due to a race condition when generating `CustomFieldBehavior` classes. ([#7379](https://github.com/craftcms/cms/issues/7379))\n- Fixed a bug where field layout tabs\u2019 settings buttons could become inaccessible if the tab name began with a long word without any hyphens. ([#7298](https://github.com/craftcms/cms/issues/7298))\n- Fixed a bug where Dropdown, Multi-select, and Number fields\u2019 inputs weren\u2019t getting `id` attributes that matched their labels\u2019 `for` attributes. ([#7319](https://github.com/craftcms/cms/issues/7319))\n- Fixed a bug where week day and month names were being translated based on the current formatting locale, rather than the current language. ([#7312](https://github.com/craftcms/cms/issues/7312))\n- Fixed a bug where Matrix blocks weren\u2019t getting validated when autosaving entry drafts.\n- Fixed an error that could occur when saving elements with Matrix fields, if there were any custom fields whose handles conflicted with `craft\\elements\\db\\ElementQuery` getter methods, such as `criteria`. ([#7335](https://github.com/craftcms/cms/issues/7335))\n- Fixed a bug where it wasn\u2019t possible to upload some file types via GraphQL mutations. ([#7327](https://github.com/craftcms/cms/issues/7327))\n- Fixed an error that could occur on console requests if Craft didn\u2019t think it was installed yet. ([#7309](https://github.com/craftcms/cms/issues/7309))\n- Fixed a bug where clearing control panel resources would delete the `.gitignore` file as well. ([#7361](https://github.com/craftcms/cms/issues/7361))\n- Fixed a bug where user registration forms could get a \u201cUsername cannot be blank\u201d error even if the `useEmailAsUsername` config setting was enabled. ([#7357](https://github.com/craftcms/cms/issues/7357))\n- Fixed a bug where `craft\\elements\\Asset::getSrcset()` could return the wrong value if the asset had a named transform set on it. ([#7352](https://github.com/craftcms/cms/issues/7352))\n- Fixed a bug where the \u201cAll\u201d checkbox label was getting HTML-encoded when using `Craft.ui.createCheckboxSelect()`.\n- Fixed a bug where `Craft.formatNumber()` could format numbers based on the user\u2019s preferred language rather than the preferred formatting locale.\n\n## 3.5.17.1 - 2020-12-17\n\n### Fixed\n- Fixed a bug where search keywords weren\u2019t getting normalized based on the selected site when searching for elements in the control panel. ([#3145](https://github.com/craftcms/cms/issues/3145))\n- Fixed a bug where element indexes\u2019 custom header column headings weren\u2019t translatable. ([#7272](https://github.com/craftcms/cms/issues/7272))\n- Fixed a bug where the `gc` command would delete all soft-deleted items when `--interactive=0` was passed. ([#7280](https://github.com/craftcms/cms/issues/7280))\n- Fixed an error that occurred when uploading a file directly to an Assets field within a new Matrix block. ([#7284](https://github.com/craftcms/cms/issues/7284))\n\n## 3.5.17 - 2020-12-15\n\n### Added\n- Edit Section and Edit Entry Type pages now have a \u201cSave and continue editing\u201d Save menu option, and the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut is now assigned to that. ([#2872](https://github.com/craftcms/cms/issues/2872))\n- Added the `fullSchema` option to the `graphql/dump-schema` and `graphql/print-schema` commands. ([#7226](https://github.com/craftcms/cms/issues/7226))\n\n### Changed\n- Improved accessibility throughout the control panel. ([#7231](https://github.com/craftcms/cms/pull/7231))\n- The Username, First Name, Last Name, Email, and New Password fields on Edit User pages now prevent LastPass from autofilling them. ([#7177](https://github.com/craftcms/cms/issues/7177))\n- Field layout elements\u2019 settings HUDs now automatically set the focus on the first text input when opened. ([#7175](https://github.com/craftcms/cms/issues/7175))\n- Field instructions within the details pane are now replaced with info icons. ([#7180](https://github.com/craftcms/cms/issues/7180))\n- Panes with `overflow: auto` and no focusable content within them now have `tabindex=\"0\"` attributes, so their content can be keyboard-scrollable on Chromium and WebKit-based browsers. ([#7236](https://github.com/craftcms/cms/issues/7236))\n- The `generateTransformsBeforePageLoad` config setting is now automatically enabled when rendering emails. ([#7267](https://github.com/craftcms/cms/issues/7267))\n- It\u2019s now possible to pass arrays to relational fields\u2019 element query params which begin with `':empty:'`, to fetch elements where the relational field is either empty or has a certain value. ([#7256](https://github.com/craftcms/cms/issues/7256))\n- `users/set-password` requests now include a `status` key in JSON responses, set to the user\u2019s status. ([#7239](https://github.com/craftcms/cms/issues/7239))\n\n### Fixed\n- Fixed a bug where `craft\\base\\Field::isFresh()` could return the wrong result.\n- Fixed a bug where required Checkboxes, Dropdown, Multi-select, and Radio Button fields within Matrix blocks could cause validation errors. ([#7205](https://github.com/craftcms/cms/issues/7205))\n- Fixed a bug where assets could be uploaded to a folder named after the primary site rather than the selected site, when uploaded via an Assets field in a global set, if the field had a dynamic upload path that contained `{site.handle}`. ([#7213](https://github.com/craftcms/cms/issues/7213))\n- Fixed a PHP error that could occur when running functional tests. ([#7207](https://github.com/craftcms/cms/pull/7207))\n- Fixed a bug where the plugin installer wasn\u2019t always handling plugins\u2019 post-install redirects correctly. ([#7204](https://github.com/craftcms/cms/issues/7204))\n- Fixed a bug where the `siteName` and `siteUrl` config settings could get hard-coded into the project config when the project config was rebuilt. ([#7208](https://github.com/craftcms/cms/issues/7208))\n- Fixed a bug where sites\u2019 Name setting would show the `siteName` config setting value rather than the stored value, if it was set.\n- Fixed a bug where `craft\\elements\\Asset::getSrcset()` would not respect some of the properties of the transform set on the asset. ([#7193](https://github.com/craftcms/cms/issues/7193))\n- Fixed a bug where WebP images were not transformable, even if the server was configured for it. ([#7170](https://github.com/craftcms/cms/issues/7170))\n- Fixed a bug where the image editor could save an image incorrectly, if the `upscaleImages` config setting was set to `false`.\n- Fixed a bug where it wasn\u2019t possible to install a plugin if it had a row in the `plugins` table, but it wasn\u2019t in the project config. ([#7229](https://github.com/craftcms/cms/issues/7229))\n- Fixed a bug where Craft wasn\u2019t always respecting plugins\u2019 `minVersionRequired`. ([#7191](https://github.com/craftcms/cms/issues/7191))\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::getCriteria()` wasn\u2019t including custom field criteria values. ([#7225](https://github.com/craftcms/cms/issues/7225))\n- Fixed a MySQL deadlock error that could occur when running background jobs. ([#7179](https://github.com/craftcms/cms/issues/7179))\n- Fixed a bug where Craft was responding to set-password requests for pending users as if they had been activated, even if something prevented them from being activated. ([#7239](https://github.com/craftcms/cms/issues/7239))\n- Fixed a bug where the `|attr` Twig filter wasn\u2019t removing `class` and `style` attributes when they were set to `false` or `null`. ([#7234](https://github.com/craftcms/cms/issues/7234))\n- Fixed a bug where eager-loading would load incorrect elements in some cases when using GraphQL API.\n- Fixed a bug where select inputs could bleed out of their container divs. ([#7183](https://github.com/craftcms/cms/issues/7183))\n- Fixed a bug where Edit Entry pages would show \u201cSave and add another\u201d and \u201cSave as a new entry\u201d action options for users who didn\u2019t have permission to create new entries in the section. ([#7232](https://github.com/craftcms/cms/issues/7232))\n- Fixed a bug where some control panel SVG icons had conflicting IDs. ([#7247](https://github.com/craftcms/cms/pull/7247))\n- Fixed a bug where it wasn\u2019t possible to set multiple options on Checkboxes and Multi-select fields when saving elements via GraphQL mutations. ([#7197](https://github.com/craftcms/cms/issues/7197))\n- Fixed a bug where users were able to delete entries if they had the \u201cDelete other authors\u2019 entries\u201d permission but not the \u201cDelete entries\u201d permission. ([#7233](https://github.com/craftcms/cms/issues/7233))\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Buttons fields\u2019 values weren\u2019t getting translated on element indexes. ([#7271](https://github.com/craftcms/cms/issues/7271))\n\n## 3.5.16 - 2020-11-24\n\n### Added\n- It\u2019s now possible to save image transforms that generate WebP files, on environments that support it.\n- It's now possible to send a `X-Craft-Gql-Cache: no-cache` header with GraphQL API requests, to bypass the GraphQL cache. ([craftcms/gatsby-source-craft#8](https://github.com/craftcms/gatsby-source-craft/issues/8))\n- Added the `setPasswordUrl` global Twig variable.\n- Added `craft\\gql\\GqlEntityRegistry::getPrefix()`.\n- Added `craft\\gql\\GqlEntityRegistry::setPrefix()`.\n- Added `craft\\helpers\\StringHelper::idnToUtf8Email()`.\n- Added `craft\\test\\Craft::deleteElement()`.\n\n### Changed\n- Improved the wording of the user deletion confirmation dialog. ([#5293](https://github.com/craftcms/cms/issues/5293))\n- Improved the accessibility of element source toggles.\n- The Settings \u2192 Users \u2192 Fields and Settings \u2192 Users \u2192 Settings pages no longer redirect the browser when saved. ([#7131](https://github.com/craftcms/cms/pull/7131))\n- Editable table columns can now specify the `<textarea rows>` attribute value via a `rows` key on the column config. ([#7124](https://github.com/craftcms/cms/issues/7124))\n- The GraphQL query `relatedTo` and `relatedToAll` arguments now also allow string values.\n- Editable tables no longer show their heading row if there aren\u2019t any data rows yet. ([#7158](https://github.com/craftcms/cms/issues/7158))\n- Relational fields\u2019 \u201cShow the site menu\u201d settings are no longer enabled by default.\n- Relational fields\u2019 element selection modals now always default to the source element\u2019s site, if no target site is specified in the field\u2019s settings. ([#7164](https://github.com/craftcms/cms/issues/7164))\n- Controllers now run request and permission checks from `beforeAction()` rather than `init()`. ([#7168](https://github.com/craftcms/cms/issues/7168))\n- Updated Imagine to 1.2.4.\n\n### Deprecated\n- Deprecated `craft\\fields\\BaseRelationField::inputSiteId()`.\n\n### Fixed\n- Fixed a bug where `craft\\elements\\Asset::getSrcset()` would not respect the format of the transform set on the asset. ([#6660](https://github.com/craftcms/cms/issues/6660))\n- Fixed a bug where Craft could attempt to use the Imagick driver even if it wasn\u2019t available.\n- Fixed a PHP error that occurred if a test called `craft\\test\\fixtures\\elements\\ElementFixture::getModel()`. ([#7089](https://github.com/craftcms/cms/issues/7089))\n- Fixed a bug where `1x` image transforms weren\u2019t using the original image transform.\n- Fixed a bug where sometimes Craft could not process an uploaded file if its extension was in uppercase.\n- Fixed a bug where progress bar was not removed correctly when using the Asset Indexes utility. ([#7111](https://github.com/craftcms/cms/issues/7111))\n- Fixed a PHP error that occurred if image size information could not be parsed from an image file. ([#6898](https://github.com/craftcms/cms/issues/6898))\n- Fixed a bug where elements wouldn\u2019t get fully saved if they were passed to `craft\\services\\Elements::saveElement()` from their `EVENT_AFTER_PROPAGATE` event. ([#7108](https://github.com/craftcms/cms/issues/7108))\n- Fixed a bug where formatted dates could use the wrong timezone for certain format characters.\n- Fixed a bug where it was possible to discard pending project config YAML changes, or rebuild the project config, when `allowAdminChanges` was disabled, from the Project Config utility. ([#7125](https://github.com/craftcms/cms/issues/7125))\n- Fixed an error that occurred when attempting to backup the database when the database connection used a Unix socket. ([#7121](https://github.com/craftcms/cms/issues/7121))\n- Fixed a bug where IDNA ASCII emails and usernames weren\u2019t getting converted back to Unicode. ([#7103](https://github.com/craftcms/cms/issues/7103))\n- Fixed a bug where IDs returned by the GraphQL API could not be re-used in `relatedTo` and `relatedToAll` arguments without type-casting. ([#7128](https://github.com/craftcms/cms/issues/7128))\n- Fixed a bug where entry and asset Title fields didn\u2019t always have the correct text orientation. ([#7152](https://github.com/craftcms/cms/issues/7152))\n- Fixed a bug where element indexes weren\u2019t scrolling back to the top when switching views or navigating to the next/previous page. ([#7154](https://github.com/craftcms/cms/issues/7154))\n- Fixed a bug where `craft\\events\\UserGroupsAssignEvent::$removedGroupIds` was getting set to the wrong IDs.\n- Fixed an error that could occur when attempting to delete an admin user when the `allowAdminChanges` config setting was disabled. ([#7157](https://github.com/craftcms/cms/issues/7157))\n- Fixed a bug where template caches weren\u2019t getting invalidated when global sets were saved. ([#7166](https://github.com/craftcms/cms/issues/7166))\n- Fixed a bug where validation rules defined by fields\u2019 `getElementValidationRules()` methods could lose their `isEmpty` and `on` keys.\n\n## 3.5.15.1 - 2020-11-04\n\n### Fixed\n- Fixed a bug where error responses weren\u2019t getting sent as HTML. ([#7092](https://github.com/craftcms/cms/issues/7092))\n- Fixed a bug where the Updates utility wasn\u2019t showing \u201cUpdate\u201d buttons. ([#7091](https://github.com/craftcms/cms/issues/7091))\n\n## 3.5.15 - 2020-11-03\n\n### Added\n- Assets now have a `srcset` field available via GraphQL. ([#6660](https://github.com/craftcms/cms/issues/6660))\n- Entries\u2019 and categories\u2019 `parent` GraphQL fields now support passing criteria arguments. ([#7036](https://github.com/craftcms/cms/issues/7036))\n- It\u2019s now possible to update user photos with base64-encoded images. ([#6520](https://github.com/craftcms/cms/issues/6520))\n- The `restore` command now supports restoring zipped database backups. ([#7049](https://github.com/craftcms/cms/issues/7049))\n- Added `craft\\services\\Updates::getAreMigrationsPending()`. ([#7068](https://github.com/craftcms/cms/issues/7068))\n- Added `craft\\helpers\\FileHelper::getExtensionByMimeType()`.\n- Added `craft\\helpers\\Update`.\n- Added `craft\\models\\Update::$phpConstraint`.\n- Added `craft\\services\\Composer::getConfig()`.\n\n### Changed\n- `aria-label` attributes are now used more consistently across the control panel. ([#6833](https://github.com/craftcms/cms/issues/6833))\n- Craft no longer optimizes the class autoloader when running Composer commands internally, as [recommended](https://getcomposer.org/doc/articles/autoloader-optimization.md) for local development.\n- The built-in updater will now warn if the latest eligible Craft CMS release requires a PHP version that is greater than what the environment is running, or what the `config.platform.php` setting is set to in `composer.json`.\n- It\u2019s now possible to query for assets ordered by their path. ([#7085](https://github.com/craftcms/cms/issues/7085))\n- Updated Twig to 2.14, for environments running PHP 7.2.5 or later, and where the `config.platform.php` value in `composer.json` is at least `7.2.5`. ([#7044](https://github.com/craftcms/cms/issues/7044))\n\n### Fixed\n- Fixed a bug where `craft\\events\\UserGroupsAssignEvent::$groupIds` was getting set incorrectly for the `craft\\services\\Users::EVENT_BEFORE_ASSIGN_USER_TO_GROUPS` event. ([#7046](https://github.com/craftcms/cms/issues/7046))\n- Fixed a bug where the `craft\\base\\Element::EVENT_SET_EAGER_LOADED_ELEMENTS` event was being triggered as a class-level event rather than an instance-level event. ([#7047](https://github.com/craftcms/cms/issues/7047))\n- Fixed some errors when running PHP 8.\n- Fixed an error when accessing `draftNotes` or `draftName` on a non-draft using the GraphQL API.\n- Fixed a bug where it was possible for users to delete assets they weren\u2019t permitted to delete from the Assets index page. ([#7059](https://github.com/craftcms/cms/issues/7059))\n- Fixed a bug where Assets fields weren\u2019t always creating volume subfolders properly.\n- Fixed a bug where it wasn\u2019t possible for logged-out visitors to preview disabled categories. ([#7060](https://github.com/craftcms/cms/issues/7060))\n- Fixed a bug where Matrix fields were triggering the `blockDeleted` JavaScript event before the block was removed from the DOM. ([#7064](https://github.com/craftcms/cms/issues/7064))\n- Fixed an error where dragging several assets at one could obscure the progress bar. ([#6982](https://github.com/craftcms/cms/issues/6982))\n- Fixed a bug where job progress status labels weren\u2019t getting styled properly in the control panel sidebar. ([#7070](https://github.com/craftcms/cms/issues/7070))\n- Fixed a bug where it was possible to select assets located in subfolders within Assets fields that were restricted to a single folder, by ticking the \u201cSearch in subfolders\u201d checkbox while searching. ([#7071](https://github.com/craftcms/cms/issues/7071))\n- Fixed a bug where custom `Content-Type` headers were getting overridden if an `{% exit %}` tag was used. ([#7074](https://github.com/craftcms/cms/issues/7074))\n- Fixed a bug where user photos\u2019 filenames could be generated incorrectly when they were updated programatically.\n\n## 3.5.14 - 2020-10-20\n\n### Added\n- Added the `ul()` and `ol()` Twig functions, which return the HTML for `<ul>` and `<ol>` tags for a passed-in array of strings.\n- Added the `project-config/touch` command, which updates the `dateModified` value in `project.yaml`, even if the `dateModified` line is currently part of a Git conflict. ([#7002](https://github.com/craftcms/cms/issues/7002))\n- Added the `setPasswordRequestPath` config setting. ([#7024](https://github.com/craftcms/cms/issues/7024))\n- Added `craft\\config\\GeneralConfig::getSetPasswordRequestPath()`.\n- Added `craft\\helpers\\ProjectConfig::touch()`.\n- Added `craft\\services\\Assets::relocateUserPhoto()`.\n\n### Changed\n- Craft now ignores the requested template\u2019s `.twig` file extension when determining the default `Content-Type` header value for the response. ([#7025](https://github.com/craftcms/cms/issues/7025))\n- Date and Time fields\u2019 Minute Increment settings now allow 5 and 10-minute increments. ([#7029](https://github.com/craftcms/cms/issues/7029))\n- Tags field menus now support up and down arrow navigation. ([#7031](https://github.com/craftcms/cms/issues/7031))\n- Tokenized user verification URLs no longer redirect to the user to the `postLoginRedirect`/`postCpLoginRedirect` when the token is invalid and the user is logged in, if they still have a verification token on their account. ([#7006](https://github.com/craftcms/cms/issues/7006))\n- Craft now ensures user photos are saved in the right location when users are saved. ([#7034](https://github.com/craftcms/cms/issues/7034))\n- Built-in class properties set to `craft\\base\\MemoizableArray` are now unset during serialization. ([#7038](https://github.com/craftcms/cms/issues/7038))\n- Craft now passes `--column-inserts` flag to the `pg_dump` command by default when backing up a PostgreSQL database.\n\n### Fixed\n- Fixed a styling bug with the hamburger menu on pages with breadcrumbs. ([#7021](https://github.com/craftcms/cms/issues/7021))\n- Fixed a bug where new entries weren\u2019t assigned a UID in time if their URI format contained a `{uid}` token. ([#4364](https://github.com/craftcms/cms/issues/4364))\n- Fixed a bug where entries that were deleted along with their section/entry type weren\u2019t getting restored properly when the section/entry type was restored, if they weren\u2019t live or didn\u2019t exist for the primary site.\n- Fixed an error that occurred when installing Craft, if an issue prevented Craft from using the existing project config data. ([#7027](https://github.com/craftcms/cms/issues/7027))\n- Fixed a JavaScript error that occurred when selecting entries or categories that supported the \u201cCreate a new child entry/category\u201d action.\n\n## 3.5.13.2 - 2020-10-16\n\n### Fixed\n- Fixed a JavaScript error that could occur on element indexes for multi-site installs, resulting in no elements being shown. ([#7017](https://github.com/craftcms/cms/issues/7017))\n- Fixed a bug where the `purgeUnsavedDraftsDuration` config setting didn\u2019t actually accept non-integer values despite the docs claiming it did. ([#7019](https://github.com/craftcms/cms/issues/7019))\n\n## 3.5.13.1 - 2020-10-15\n\n### Fixed\n- Fixed a bug where Checkboxes fields weren\u2019t validating.\n\n## 3.5.13 - 2020-10-15\n\n### Added\n- It\u2019s now possible to disallow uploading files directly to Assets fields, as opposed to going through the selection modal. ([#6954](https://github.com/craftcms/cms/issues/6954))\n- Reset Password pages are now discoverable by clients that support [.well-known/change-password URLs](https://w3c.github.io/webappsec-change-password-url/), [such as Google Chrome](https://security.googleblog.com/2020/10/new-password-protections-and-more-in.html).\n- Craft now supports `/admin/edit/X` URLs to elements\u2019 edit pages, where `X` is an element\u2019s ID or UID, provided that the user has permission to edit the element. ([#7000](https://github.com/craftcms/cms/issues/7000))\n- The System Report utility now lists all defined [aliases](https://craftcms.com/docs/3.x/config/#aliases). ([#6992](https://github.com/craftcms/cms/issues/6992))\n- Added the `project-config/write` command, which write out the currently-loaded project config as YAML files to the `config/project/` folder, discarding any pending YAML changes.\n- The `project-config/diff` command now has an `--invert` flag, which will treat the loaded project config as the source of truth, rather than the YAML files.\n- Added the `dataUrl()` Twig function, which generates a base64-encoded [data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs) for the passed-in file path or asset.\n- Added `craft\\controllers\\EditController`.\n- Added `craft\\controllers\\RedirectController`.\n- Added `craft\\controllers\\UsersController::EVENT_AFTER_ASSIGN_GROUPS_AND_PERMISSIONS`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\controllers\\UsersController::EVENT_BEFORE_ASSIGN_GROUPS_AND_PERMISSIONS`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\db\\ActiveQuery`.\n- Added `craft\\elements\\Asset::getDataUrl()`.\n- Added `craft\\events\\UserGroupsAssignEvent::$newGroupIds`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\events\\UserGroupsAssignEvent::$removedGroupIds`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\fields\\Assets::$allowUploads`.\n- Added `craft\\helpers\\Html::dataUrl()`.\n- Added `craft\\helpers\\Html::dataUrlFromString()`.\n- Added `craft\\queue\\jobs\\PruneRevisions::$maxRevisions`. ([#6999](https://github.com/craftcms/cms/issues/6999))\n- Added `craft\\services\\Elements::getElementByUid()`.\n- Added `craft\\services\\Elements::getElementTypeByUid()`.\n- Added `craft\\services\\ProjectConfig::$writeYamlAutomatically`, which can be set to `false` from `config/app.php` if you\u2019d prefer Craft to not write project config YAML files to `config/project/` automatically when they are missing or changes are made.\n- Added `craft\\services\\ProjectConfig::getDoesYamlExist()`.\n- Added `craft\\services\\Sites::refreshSites()`.\n- Added missing `rel=\"noopener\"` to outbound links.\n\n### Changed\n- Improved color contrast throughout the control panel. ([#6951](https://github.com/craftcms/cms/pull/6951), [#6972](https://github.com/craftcms/cms/pull/6972))\n- The control panel viewport is now scalable for mobile browsers. ([#6972](https://github.com/craftcms/cms/pull/6972))\n- The \u201cShare\u201d button on Edit Entry and Edit Category pages has been renamed to \u201cView\u201d. ([#6963](https://github.com/craftcms/cms/issues/6963))\n- Edit Entry pages now show validation errors for the `typeId` attribute. ([#6958](https://github.com/craftcms/cms/issues/6958))\n- Table fields now support emoji characters. ([#7012](https://github.com/craftcms/cms/issues/7012))\n- The `draftOf` entry query parameter can now be set to `'*'`, to match drafts of any source element, so long as they have one. ([#6632](https://github.com/craftcms/cms/issues/6632))\n- `resave/*` commands now show a progress count in the output for each element. ([#6936](https://github.com/craftcms/cms/pull/6936))\n- The `on` and `off` commands no longer update the `dateModified` project config value. ([#6729](https://github.com/craftcms/cms/issues/6729))\n- It\u2019s now possible to enable the Debug extension on a per-request basis when Dev Mode is enabled, by including a `X-Debug: enable` header on the request. ([#6978](https://github.com/craftcms/cms/issues/6978))\n- The `disabledPlugins` config setting can now be set to `'*'` to disable **all** plugins. ([#5106](https://github.com/craftcms/cms/issues/5106))\n- `*Field()` macros in the `_includes/forms.html` control panel template now define a default `id` value if none was provided.\n- `craft\\db\\ActiveRecord::find()` now returns a `craft\\db\\ActiveQuery` object.\n- `craft\\helpers\\ProjectConfig::diff()` now has an `$invert` argument.\n- `craft\\helpers\\ProjectConfig::ensureAllSitesProcessed()` now has a `$force` argument.\n- `craft\\services\\Fields::saveLayout()` now maintains existing field layout tab IDs.\n- `craft\\services\\ProjectConfig::saveModifiedConfigData()` now has a `$writeYaml` argument.\n- `craft\\services\\ProjectConfig::set()` now has an `$updateTimestamp` argument.\n\n### Deprecated\n- `craft\\services\\Fields::assembleLayoutFromPost()` now supports field layout data that was posted in the original (pre-3.5) format. ([barrelstrength/sprout-forms#521](https://github.com/barrelstrength/craft-sprout-forms/issues/521))\n\n### Fixed\n- Fixed an error that could occur when installing Craft with existing project config data. ([#6943](https://github.com/craftcms/cms/issues/6943))\n- Fixed an error that occurred when propagating a Time field value to another site. ([#6950](https://github.com/craftcms/cms/issues/6950))\n- Fixed an error that could occur when calling `craft\\web\\View::renderTemplate()` from a console request. ([#6945](https://github.com/craftcms/cms/issues/6945))\n- Fixed a Twig error that would occur when rendering the `_includes/forms/elementSelect.html` template if no `limit` variable was passed. ([#6953](https://github.com/craftcms/cms/issues/6953))\n- Fixed an error that could occur when updating to Craft 3.5, if any Assets fields had an upload location set to `{site.group}`. ([#6818](https://github.com/craftcms/cms/issues/6818))\n- Fixed a bug where in some cases querying for Assets using GraphQL API could fail.\n- Fixed a SQL error that could occur when joining two soft-deletable active record classes together. ([#6957](https://github.com/craftcms/cms/issues/6957))\n- Fixed a bug where sub-fields queried via GraphQL could be aliased incorrectly. ([#6874](https://github.com/craftcms/cms/issues/6874))\n- Fixed a bug where element selection modals could show no results if they were limited to a single source, and that source wasn\u2019t available to the primary site. ([#6968](https://github.com/craftcms/cms/issues/6968))\n- Fixed a bug where Matrix fields weren\u2019t identifying themselves as translatable on the Fields index page. ([#6970](https://github.com/craftcms/cms/issues/6970))\n- Fixed a bug where `craft\\helpers\\Html::modifyTagAttributes()` wasn\u2019t working properly with custom elements with hyphenated names. ([#6973](https://github.com/craftcms/cms/issues/6973))\n- Fixed a bug where elements that were eager-loaded via `ancestors`, `children`, and `descendants` handles weren\u2019t getting loaded in the correct order by default. ([#6974](https://github.com/craftcms/cms/issues/6974))\n- Fixed a bug where Assets fields could bleed out of view within element editor HUDs. ([#6975](https://github.com/craftcms/cms/issues/6975))\n- Fixed an error that could occur when updating from Craft 2.\n- Fixed a bug where the `on` and `off` commands were discarding any pending pending changes in the project config YAML files. ([#6984](https://github.com/craftcms/cms/issues/6984))\n- Fixed a bug where `craft\\helpers\\Db::reset()` wasn\u2019t closing the previous database connection. ([#6998](https://github.com/craftcms/cms/pull/6998))\n- Fixed a bug where it wasn\u2019t possible to access the selected preview target in `Craft.Preview` JavaScript events.\n- Fixed a styling bug with Checkboxes fields. ([#7011](https://github.com/craftcms/cms/issues/7011))\n\n## 3.5.12.1 - 2020-10-02\n\n### Fixed\n- Fixed a bug where `craft\\helpers\\StringHelper::toAscii()` and the `Craft.asciiString()` JavaScript method weren\u2019t handling decomposed umlauted characters properly, such as macOS filenames. ([#6923](https://github.com/craftcms/cms/issues/6923))\n- Fixed a JavaScript error that occurred when attempting to open or close Live Preview, after a file had been uploaded from an Assets field. ([#6940](https://github.com/craftcms/cms/issues/6940))\n- Fixed a bug where deprecation warnings logged by the `getCsrfInput()`, `getFootHtml()`, `getHeadHtml()`, `round()`, and `svg()` Twig functions, and the `|ucwords` Twig filter, weren\u2019t showing the template name and line number that the warning came from. ([#6927](https://github.com/craftcms/cms/issues/6927))\n- Fixed some potential database timeout and sequence issues when running multiple suites of tests.\n- Fixed a bug where the \u201cUpload files\u201d button within Assets fields was visible if the field limit was already reached on page load. ([#6939](https://github.com/craftcms/cms/issues/6939))\n\n## 3.5.12 - 2020-10-01\n\n### Added\n- Added the \u201cTime\u201d field type. ([#6775](https://github.com/craftcms/cms/issues/6775), [#6842](https://github.com/craftcms/cms/issues/6842))\n- Assets fields now have an \u201cUpload files\u201d button, which will upload files to the field\u2019s default upload location, just like files uploaded via drag-n-drop. ([#2778](https://github.com/craftcms/cms/issues/2778))\n- Added `craft\\base\\ElementInterface::getIsDeletable()`, which states whether the element can be deleted by the current user.\n- Added `craft\\elements\\db\\EagerLoadPlan::$all`.\n- Added `craft\\elements\\db\\EagerLoadPlan::$when`.\n- Added `craft\\errors\\InvalidFieldException`.\n- Added `craft\\validators\\DateTimeValidator::$max`.\n- Added `craft\\validators\\DateTimeValidator::$min`.\n- Added `craft\\validators\\DateTimeValidator::$tooEarly`.\n- Added `craft\\validators\\DateTimeValidator::$tooLate`.\n- Added `craft\\validators\\TimeValidator`.\n\n### Changed\n- \u201cDate/Time\u201d fields have been renamed to \u201cDate\u201d, and it\u2019s no longer possible to create new Date fields that only display the time. ([#6842](https://github.com/craftcms/cms/issues/6842))\n- Element editor HUDs will now close when clicked out of, or if the <kbd>Esc</kbd> key is pressed. If any content has changed, a confirmation dialog will be shown first. ([#6877](https://github.com/craftcms/cms/issues/6877))\n- Entry indexes will now sort entries without a post date at the top when ordering by Post Date in descending order, and vise-versa. ([#6924](https://github.com/craftcms/cms/issues/6924))\n- The field layout designer will now prompt for a tab name immediately when the \u201cNew Tab\u201d button is clicked. ([#1956](https://github.com/craftcms/cms/issues/1956))\n- It\u2019s now possible to specify eager-loading plans as hashes with `path`, `criteria`, `count`, and `when` keys.\n- The `users/save-user` action now includes a `csrfTokenValue` key in its JSON responses, if the user\u2019s password was changed. ([#6283](https://github.com/craftcms/cms/issues/6283))\n- \u201cDelete\u201d element actions will now only enable themselves if all of the selected elements\u2019 `getIsDeletable()` methods returned `true`.\n- Date/Time fields configured to only show the time no longer set the date to 1970-01-01. ([#6842](https://github.com/craftcms/cms/issues/6842))\n- If a SQL error occurs when attempting to change a field\u2019s content column type, Craft will now rename the old column (e.g. `field_fieldHandle_old`), and create a new column with the new type, rather than surfacing the SQL error. ([#3605](https://github.com/craftcms/cms/issues/3605), [#5266](https://github.com/craftcms/cms/issues/5266))\n- `craft\\gql\\ElementQueryConditionBuilder::extractQueryConditions()` now returns an array of `craft\\elements\\db\\EagerLoadPlan` objects. ([#6874](https://github.com/craftcms/cms/issues/6874), [#6811](https://github.com/craftcms/cms/issues/6811))\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `time` key in the format of `HH:MM:SS`, rather than just `HH:MM`.\n- `craft\\services\\TemplateCaches::deleteCachesByKey()` is no longer deprecated, and now has `$global` and `$siteId` arguments. ([#6932](https://github.com/craftcms/cms/issues/6932))\n- `craft\\web\\View::hook()` now has an `$append` argument, which can be set to `false` to cause the hook method to be called before other methods.\n- Callback methods passed to `craft\\web\\View::hook()` can now accept a `$handled` argument by reference, which can be set to `false` within the method body to prevent subsequent hook methods from getting triggered. ([#6912](https://github.com/craftcms/cms/issues/6912))\n- Element types\u2019 `sortOptions()` methods can now define the `orderBy` key as a callback method.\n- The `_includes/forms/time.html` control panel template now supports passing `minTime`, `maxTime`, `disableTimeRanges`, and `forceRoundTime` variables, which map to the corresponding jquery.timepicker settings.\n\n### Deprecated\n- Deprecated `craft\\errors\\FieldNotFoundException`.\n\n### Fixed\n- Fixed a bug where `craft\\services\\Config::setDotEnvVar()` wasn\u2019t surrounding values with quotes if they contained a `#` character. ([#6867](https://github.com/craftcms/cms/issues/6867))\n- Fixed a bug where GraphQL API queries could produce an incorrect eager-loading plan. ([#6849](https://github.com/craftcms/cms/issues/6849))\n- Fixed a bug where eager-loading elements wasn\u2019t working if also eager-loading the count of related elements for the exact same path.\n- Fixed a bug where the button to show all related elements for relational fields within element indexes was getting formatted with two decimal places on environments that didn\u2019t have the Intl extension installed. ([#6869](https://github.com/craftcms/cms/issues/6869))\n- Fixed a bug where element selection modals would show the source sidebar even if there was only one selectable source, if a source heading came before it. ([#6871](https://github.com/craftcms/cms/issues/6871))\n- Fixed a bug where Plain Text fields with a limit set and line breaks allowed weren\u2019t showing the remaining characters/bytes allowed indicator. ([#6872](https://github.com/craftcms/cms/issues/6872))\n- Fixed a bug where it wasn\u2019t possible to set an alias when eager-loading Matrix sub-fields.\n- Fixed a bug where it was possible to initiate a file upload to an Assets field via drag-n-drop, even if the user didn\u2019t have permission to upload files to the default field volume.\n- Fixed a bug where Dashboard widget settings could receive focus even when not visible. ([#6885](https://github.com/craftcms/cms/issues/6885))\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Button fields could show their default values in element indexes. ([#6891](https://github.com/craftcms/cms/issues/6891))\n- Fixed a bug where Title fields were showing a translation indicator even on single-site Craft installs. ([#6503](https://github.com/craftcms/cms/issues/6503))\n- Fixed a bug where it wasn\u2019t possible to set date values using variables via GraphQL mutations.\n- Fixed a bug where `craft\\helpers\\UrlHelper` was removing empty URL parameters. ([#6900](https://github.com/craftcms/cms/issues/6900))\n- Fixed a bug where Checkboxes and Multi-select fields\u2019 `getOptions()` methods were only returning the selected options. ([#6899](https://github.com/craftcms/cms/issues/6899))\n- Fixed a bug where Project Config files were not being applied running tests even though it was configured in `codeception.yml`. ([#6879](https://github.com/craftcms/cms/issues/6879))\n- Fixed a bug where Matrix block type settings weren\u2019t saving properly if the Matrix field was nested within another Matrix field (via a Super Table or Neo field).\n- Fixed a bug where it wasn\u2019t possible for users to delete their own entries from Entry Edit pages, if they didn\u2019t have the \u201cPublish live changes\u201d permission. ([#6908](https://github.com/craftcms/cms/issues/6908))\n- Fixed a bug where it wasn\u2019t possible for users to delete their own entries from the Entries index page, if they didn\u2019t have the \u201cDelete other authors\u2019 entries\u201d permission. ([#6908](https://github.com/craftcms/cms/issues/6908))\n- Fixed a bug where components (such as fields) could be deleted if they were saved without any changes, and their corresponding config file was missing from the `config/project/` folder. ([#6913](https://github.com/craftcms/cms/issues/6913))\n- Fixed a bug where the user account menu button could be clipped by the scrollbar. ([#6920](https://github.com/craftcms/cms/issues/6920))\n- Fixed a bug where Date/Time fields\u2019 Min Date and Max Date settings weren\u2019t being enforced.\n- Fixed a bug where it was possible to save a Date/Time field with a Max Date value that was set to an earlier date than the Min Date value.\n\n### Security\n- Fixed a bug where Plain Text fields with line breaks allowed weren\u2019t HTML-encoding their values. ([#6935](https://github.com/craftcms/cms/issues/6935))\n\n## 3.5.11.1 - 2020-09-18\n\n### Changed\n- Craft now disables read/write splitting for all POST requests.\n\n### Fixed\n- Fixed a bug where entries were getting a \u201cBad slug\u201d validation error. ([#6866](https://github.com/craftcms/cms/issues/6866))\n\n## 3.5.11 - 2020-09-18\n\n### Added\n- Number fields now have a \u201cPreview Format\u201d setting, which determines whether values should be displayed as decimal numbers, currency values, or without any formatting, on element indexes. ([#5873](https://github.com/craftcms/cms/issues/5873))\n- Assets fields now have a \u201cPreview Mode\u201d setting, which can be set to \u201cShow thumbnails only\u201d to only display related assets\u2019 thumbnails within element indexes. ([#6848](https://github.com/craftcms/cms/issues/6848))\n- Edit Field pages now have a \u201cDelete\u201d menu option. ([#6846](https://github.com/craftcms/cms/issues/6846))\n- Added `craft\\fields\\BaseRelationField::elementPreviewHtml()`.\n\n### Changed\n- Date/Time fields configured to only show the time now consistently set the date to 1970-01-01. ([#6842](https://github.com/craftcms/cms/issues/6842))\n- It\u2019s now possible for `craft\\elements\\db\\ElementQuery::EVENT_AFTER_POPULATE_ELEMENT` event handlers to replace the element that should be returned by `createElement()`.\n- `craft\\helpers\\elementHtml()` now has `$showStatus`, `$showThumb`, and `$showLabel` arguments.\n\n### Fixed\n- Fixed a bug where pending project config YAML changes could be unexpectedly applied rather than discarded when other project config changes were made.\n- Fixed a bug where the wrong field values could be used when querying for elements via GraphQL, if an alias was used.\n- Fixed an error that could occur on the Dashboard if there was a custom field with the handle of `author`.\n- Fixed a 400 error that could occur when a route config\u2019s `template` key was set to `null`.\n- Fixed a bug where validation errors within element editor HUDs and detail pains were getting displayed beside the input instead of below it. ([#6853](https://github.com/craftcms/cms/issues/6853))\n- Fixed styling issues with UI elements within field layout designers. ([#6854](https://github.com/craftcms/cms/issues/6854))\n- Fixed a bug where GraphQL could return incorrect results in some cases.\n- Fixed a bug where it wasn\u2019t possible to set date values via GraphQL mutations.\n- Fixed a SQL error that could occur when updating from Craft 2.\n\n## 3.5.10.1 - 2020-09-15\n\n### Fixed\n- Fixed a bug where eager loading `children` would return incomplete results.\n\n## 3.5.10 - 2020-09-15\n\n### Added\n- Edit Entry pages now have a field for entering revision notes, when editing the current revision.\n- Edit Field pages now have a \u201cSave and continue editing\u201d Save menu option, and the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut is now assigned to that. ([#2872](https://github.com/craftcms/cms/issues/2872))\n- Edit Section pages now have \u201cSettings\u201d and \u201cEntry Types\u201d tabs, providing quick access to edit a section\u2019s entry types. ([#6826](https://github.com/craftcms/cms/issues/6826))\n- New sections\u2019 \u201cSave\u201d button is now labeled \u201cSave and edit entry types\u201d, and the browser is redirected to the section\u2019s entry type index after save.\n- Added the `|truncate` Twig filter. ([#6838](https://github.com/craftcms/cms/issues/6838))\n- Added the `disallowRobots` config setting, which can be set to `true` for development and staging environments, indicating that front end pages should not be indexed, and links should not be followed, by web crawlers.\n- Added `craft\\fields\\data\\OptionData::$valid`.\n- Added `craft\\gql\\ElementQueryConditionBuilder::setResolveInfo()`.\n- Added `craft\\web\\Request::$generalConfig`.\n- Added `craft\\web\\Request::$sites`.\n\n### Changed\n- The Username and Password inputs on the Login page now specify `aria-label` attributes.\n- The account menu button now specifies `aria-label` and `title` attributes.\n- The `_includes/forms/textarea.html` template now supports `disabled`, `inputAttributes`, `inputmode`, and `title` variables.\n- The `_layouts/cp.html` control panel template now defines a `submitButton` block.\n- `craft\\helpers\\Gql::getFieldNameWithAlias()` now has a `$context` argument to allow sharing context over a single GraphQL API call.\n- Updated Yii to 2.0.38.\n- Updated Twig to 2.13, for environments running PHP 7.1.3 or later, and where the `config.platform.php` value in `composer.json` is at least `7.1.3`.\n- Updated Garnish to 0.1.37.\n- Updated Vue to 2.6.12.\n\n### Fixed\n- Fixed a bug where all fields were showing as searchable on the Settings \u2192 Fields page on MySQL installs. ([#6808](https://github.com/craftcms/cms/issues/6808))\n- Fixed a bug where Dropdown, Radio Buttons, Checkboxes, and Multi-select fields weren\u2019t getting validation errors if an invalid value was posted to them. ([#6535](https://github.com/craftcms/cms/issues/6535))\n- Fixed a bug where Craft wasn\u2019t handling site requests properly if it was installed in a subfolder and the site\u2019s base URL contained additional URI segments.\n- Fixed a bug where Dropdown, Radio Buttons, Checkboxes, and Multi-select fields that had values that were empty, numeric or contained special characters, couldn't be used in GraphQL mutations. ([#6535](https://github.com/craftcms/cms/issues/6535))\n- Fixed a bug where eager loading elements\u2019 children across multiple levels wasn\u2019t working. ([#6820](https://github.com/craftcms/cms/issues/6820))\n- Fixed a bug where aliased fields would sometimes not be assigned correctly when using GraphQL API. ([#6811](https://github.com/craftcms/cms/issues/6811)))\n- Removed `vue`, `vue-router` and `vuex` Plugin Store dependencies as they are already handled by Craft. ([#6732](https://github.com/craftcms/cms/pull/6732), [#6815](https://github.com/craftcms/cms/pull/6815))\n- Fixed a bug where GraphQL API requests could return 400 responses on an empty cache.\n- Fixed a bug where GraphQL API queries weren\u2019t getting cached based on the current site.\n\n### Security\n- Fixed a bug where custom field labels weren\u2019t getting HTML-encoded.\n\n## 3.5.9 - 2020-09-08\n\n### Added\n- Added support for childless GraphQL schema components.\n- Added `craft\\migrations\\Install::$applyProjectConfigYaml`.\n\n### Changed\n- The `craft\\behaviors\\CustomFieldBehavior` class is now saved to a file with a name based on the current field version, avoiding OPcache issues.\n- Asset filenames are now automatically shortened if they are longer than 255 characters. ([#6766](https://github.com/craftcms/cms/issues/6766))\n- Improved the style of up/down/right/left angles in the control panel.\n- Built-in element types\u2019 date sort options are now sorted in descending order by default when selected. ([#1153](https://github.com/craftcms/cms/issues/1153))\n- It\u2019s now possible for element sort options returned by `craft\\base\\ElementInterface::sortOptions()` and `craft\\base\\Element::defineSortOptions()` to include `defaultDir` keys, which specify the default sort direction that should be used when the option is selected. ([#1153](https://github.com/craftcms/cms/issues/1153))\n- Replaced the icon that identifies translatable fields.\n- The Settings \u2192 Fields page now identifies which fields are searchable and translatable. ([#5453](https://github.com/craftcms/cms/issues/5453))\n\n### Fixed\n- Fixed a bug where `update` commands weren\u2019t working if there was no `config/license.key` file yet. ([#6777](https://github.com/craftcms/cms/issues/6777))\n- Fixed a bug where it wasn\u2019t possible for GraphQL resolvers to return arrays.\n- Fixed an error that could occur when updating to Craft 3.5 if the `migrations` table had rows with broken `pluginId` foreign keys.\n- Fixed an error that could occur when deleting a Matrix block type, if it contained nested block-based fields that had existing content. ([#6780](https://github.com/craftcms/cms/issues/6780))\n- Fixed a bug where the `_includes/forms/select.html` template wasn\u2019t always setting the `data-target-prefix` attribute if `toggle` was set.\n- Fixed a bug where Number fields could return incorrect values via GraphQL. ([#6743](https://github.com/craftcms/cms/issues/6743))\n- Fixe a bug where duplicating elements from their edit pages could result in the selected site\u2019s content getting propagated to all other sites for the duplicated element. ([#6804](https://github.com/craftcms/cms/issues/6804))\n- Fixed a 400 error that could occur when a section\u2019s Template setting was blank.\n- Fixed a bug where GraphQL queries for entry drafts weren\u2019t getting invalidated when drafts were saved or deleted. ([#6792](https://github.com/craftcms/cms/issues/6792))\n- Fixed an error that could occur when running the `project-config/apply` command, if there was a Single section that was enabled for a site that was disabled on the front end. ([#6799](https://github.com/craftcms/cms/issues/6799))\n- Fixed a bug where the `tests/setup` command wasn\u2019t working. ([#6790](https://github.com/craftcms/cms/issues/6790))\n\n## 3.5.8 - 2020-09-01\n\n### Added\n- Added the \u201cRetry Duration\u201d general setting, which defines the number of seconds that the `Retry-After` header should be set to for 503 responses when the system is offline.\n- Added the `off` and `on` commands, for toggling the system status. ([#6729](https://github.com/craftcms/cms/issues/6729))\n- Added the `utils/update-usernames` command, for ensuring all usernames match users\u2019 email addresses, if the `useEmailAsUsername` config setting is enabled. ([#6312](https://github.com/craftcms/cms/issues/6312))\n- Added the `configure()` Twig function. ([#6731](https://github.com/craftcms/cms/pull/6731))\n- Added `craft\\base\\MemoizableArray`.\n- Added `craft\\cache\\FileCache`.\n- Added `craft\\helpers\\ArrayHelper::whereIn()`.\n- Added `craft\\helpers\\Cp::elementHtml()`.\n- Added `craft\\models\\Site::getLocale()`.\n- Added `craft\\services\\ProjectConfig::DIFF_CACHE_KEY`.\n- Added `craft\\services\\Sites::getGroupByUid()`.\n\n### Changed\n- Improved the styling of Lightswitch fields that have ON/OFF labels. ([#6666](https://github.com/craftcms/cms/issues/6666))\n- The \u201cSystem Status\u201d setting now has \u201cOffline\u201d and \u201cOnline\u201d labels.\n- Deprecation warnings can now contain Markdown formatting.\n- The Project Config utility now loads the comparison data over Ajax, and will only show the first 20 lines by default. ([#6736](https://github.com/craftcms/cms/issues/6736))\n- Improved the wording of version compatibility issues when applying project config YAML changes. ([#6755](https://github.com/craftcms/cms/issues/6755))\n- The GraphQL API now supports `variables` and `operationName` query string parameters. ([#6728](https://github.com/craftcms/cms/issues/6728))\n- Mutation GraphQL queries should now specify an `id` field when defining Matrix blocks, set to the existing Matrix block ID or a `newX` string.\n- Improved system performance.\n- `craft\\helpers\\ArrayHelper::where()` now has a `$keepKeys` argument, which defaults to `true`.\n- `craft\\helpers\\ProjectConfig::diff()` now caches its results. ([#6736](https://github.com/craftcms/cms/issues/6736))\n- `craft\\services\\Config::setDotEnvVar()` no longer surrounds the value with quotes unless it contains a space. ([craftcms/docker#5](https://github.com/craftcms/docker/issues/5))\n\n### Deprecated\n- Deprecated support for overriding volume settings via `config/volumes.php`. [Environment variables](https://craftcms.com/docs/3.x/config/#environmental-configuration) or [dependency injection](https://craftcms.com/knowledge-base/using-local-volumes-for-development) should be used instead.\n- Mutating Matrix blocks via GraphQL without specifying an `id` field for each block is now deprecated.\n\n### Fixed\n- Fixed a bug where the required field indicator wasn\u2019t visible within the field layout designer, for fields with overflowing labels or hidden labels. ([#6725](https://github.com/craftcms/cms/issues/6725))\n- Fixed a bug where user group names were getting double-encoded within the User Groups setting on Edit User pages. ([#6727](https://github.com/craftcms/cms/issues/6727))\n- Fixed a bug where aliasing fields via GraphQL could break eager loading in some cases.\n- Fixed a bug where GraphQL API queries could break down when using complex fields that didn\u2019t support eager loading. ([#6723](https://github.com/craftcms/cms/issues/6723))\n- Fixed an error that could occur when accessing the \u201cGlobals\u201d section in the control panel, for users that didn\u2019t have permission to edit the first global set. ([#6730](https://github.com/craftcms/cms/pull/6730))\n- Fixed a bug where various array-returning methods could return arrays with nonsequential keys beginning with `0`.\n- Fixed a bug where entry drafts would get autosaved after creating new Matrix/Neo/Super Table blocks even if the `autosaveDrafts` config setting was disabled. ([#6704](https://github.com/craftcms/cms/issues/6704))\n- Fixed a bug where field checkboxes in Quick Post widget settings were all disabled. ([#6738](https://github.com/craftcms/cms/issues/6738))\n- Fixed a bug where assets uploaded by front-end entry forms weren\u2019t getting saved with the `uploaderId` attribute. ([#6456](https://github.com/craftcms/cms/issues/6456))\n- Fixed a bug where Live Preview wasn\u2019t showing custom fields for categories.\n- Fixed a bug where rebuilding the Project Config would not persist the new config data to the loaded project config.\n- Fixed a JavaScript error that could occur when displaying certain prompts. ([#6753](https://github.com/craftcms/cms/issues/6753))\n- Fixed a bug where the `system.schemaVersion` was not getting set when rebuilding the project config.\n- Fixed a bug where all file caches were being saved inside a single subdirectory of `storage/runtime/cache/` based on the cache key prefix. ([#6746](https://github.com/craftcms/cms/issues/6746))\n- Fixed a bug where field handles would get jumpy on hover if their increased size caused them to be too large to fit on the same line as the field name. ([#6742](https://github.com/craftcms/cms/issues/6742))\n- Fixed a bug where the \u201cPhoto\u201d field was shown on Edit User pages, even if the User Photos volume had been deleted. ([#6752](https://github.com/craftcms/cms/issues/6752))\n- Fixed an error that occurred when passing an array to an entry query\u2019s `typeId` param, with the first item set to `'not'`. ([#6754](https://github.com/craftcms/cms/issues/6754))\n- Fixed a bug where element queries with the `siteId` param set to `*` would query for elements in soft-deleted sites. ([#6756](https://github.com/craftcms/cms/issues/6756))\n- Fixed a bug where Title fields weren\u2019t identifying themselves as required. ([#6763](https://github.com/craftcms/cms/issues/6763))\n- Fixed a bug where inline JavaScript code could stop working if it contained the string `.js`. ([#6762](https://github.com/craftcms/cms/issues/6762))\n\n## 3.5.7 - 2020-08-26\n\n### Changed\n- Improved the warning that is output for console commands if Craft can\u2019t connect to the database, or isn\u2019t installed yet. ([#6718](https://github.com/craftcms/cms/issues/6718))\n- `craft\\helpers\\Console::outputWarning()` now has a `$center` argument.\n- The GraphiQL IDE now automatically loads the query passed by the URL, if present. ([#6583](https://github.com/craftcms/cms/issues/6583))\n\n### Fixed\n- Fixed a bug where Table field settings were displaying validation errors for the \u201cTable Columns\u201d setting under the \u201cDefault Values\u201d setting.\n- Fixed a bug where Table fields were allowing columns to be defined with invalid handles. ([#6714](https://github.com/craftcms/cms/issues/6714))\n- Fixed a bug where GraphQL schemas weren\u2019t getting generated properly if there were any Table fields with empty column handles. ([#6714](https://github.com/craftcms/cms/issues/6714))\n- Fixed a bug where it wasn\u2019t possible to access entry drafts or revisions within Structure sections, if they were created before the section type was changed to Structure. ([#4866](https://github.com/craftcms/cms/issues/4866))\n- Fixed a bug where the `_includes/forms/select.html` template wasn\u2019t setting the `data-target-prefix` attribute properly. ([#6721](https://github.com/craftcms/cms/issues/6721))\n- Fixed various SQL errors that could occur when running tests. ([#6549](https://github.com/craftcms/cms/issues/6549))\n\n## 3.5.6 - 2020-08-25\n\n### Added\n- Added the `autosaveDrafts` config setting. ([#6704](https://github.com/craftcms/cms/issues/6704))\n- It\u2019s now possible to pass a CSS file URL to the `{% css %}` tag. ([#6672](https://github.com/craftcms/cms/issues/6672))\n- It\u2019s now possible to pass a JavaScript file URL to the `{% js %}` tag. ([#6671](https://github.com/craftcms/cms/issues/6671))\n- The Project Config utility now shows a comparison of the pending project config YAML changes and the loaded project project config.\n- The Project Config utility now has a \u201cDiscard changes\u201d button, which will regenerate the project config YAML files based on the loaded project config, discarding any pending changes in them.\n- The Project Config utility now has a \u201cDownload\u201d button. ([#3979](https://github.com/craftcms/cms/issues/3979))\n- Added the `app/health-check` action, which will return a 200 status code even if an update is pending.\n- Added the `project-config/diff` command, which outputs a comparison of the pending project config YAML changes and the loaded project config.\n- Added `craft\\controllers\\ProjectConfigController::actionDiscard()`.\n- Added `craft\\controllers\\ProjectConfigController::actionDownload()`.\n- Added `craft\\controllers\\ProjectConfigController::actionRebuild()`.\n- Added `craft\\fieldlayoutelements\\BaseField::showLabel()`.\n- Added `craft\\helpers\\ProjectConfig::diff()`.\n- Added `craft\\helpers\\Template::css()`.\n- Added `craft\\helpers\\Template::js()`.\n- Added `craft\\services\\Content::$db`. ([#6549](https://github.com/craftcms/cms/issues/6549))\n- Added `craft\\services\\Drafts::$db`. ([#6549](https://github.com/craftcms/cms/issues/6549))\n\n### Changed\n- All buttons in the control panel are now actual `<button>` elements. ([#6670](https://github.com/craftcms/cms/issues/6670))\n- Title fields now get autofocused if they are positioned on the first tab. ([#6662](https://github.com/craftcms/cms/issues/6662))\n- Element edit pages now remember the selected tab when switching to a different site/revision. ([#4018](https://github.com/craftcms/cms/issues/4018), [#4164](https://github.com/craftcms/cms/issues/4164))\n- Craft now shows an alert at the top of the control panel if there are pending changes in the project config YAML files, rather than blocking access to the entire control panel.\n- Craft no longer requires the installed Craft and plugin versions to be compatible with the versions listed in the project config YAML files, except when applying changes.\n- The `install` command no longer prompts for a username if the `useEmailAsUsername` config setting is enabled. ([#6669](https://github.com/craftcms/cms/issues/6669))\n- Spaces in asset URLs are now URL-encoded, avoiding parsing conflicts with `srcset` attributes. ([#6668](https://github.com/craftcms/cms/issues/6668))\n- `graphql/api` requests now set the `Access-Control-Allow-Headers` header on non-preflight requests. ([#6674](https://github.com/craftcms/cms/issues/6674))\n- The `_includes/forms/field.html` template now supports an `inputContainerAttributes` variable, rather than `inputAttributes`, as `inputAttributes` was conflicting with variables of the same name in `_includes/forms/text.html` and `_includes/forms/checkbox.html`.\n- The `_includes/forms/select.html` template now supports an `inputAttributes` variable. ([#6696](https://github.com/craftcms/cms/issues/6696))\n\n### Removed\n- Removed `craft\\controllers\\ProjectConfigController::actionIgnore()`.\n- Removed `craft\\controllers\\TemplatesController::actionConfigSyncKickoff()`.\n- Removed `craft\\controllers\\TemplatesController::actionIncompatibleConfigAlert()`.\n- Removed `craft\\controllers\\UtilitiesController::actionProjectConfigPerformAction()`.\n\n### Fixed\n- Fixed a bug where nested block content wasn\u2019t getting updated properly when editing an entry draft, if the draft had been created since the initial page load. ([#6480](https://github.com/craftcms/cms/issues/6480))\n- Fixed a bug where entry revision menus could show site group headings even if the user didn\u2019t have permission to edit any sites within that group. ([#6615](https://github.com/craftcms/cms/issues/6615))\n- Fixed a bug where entry revision menus weren\u2019t showing the list of sites, if the entry was disabled across all of its sites. ([#6679](https://github.com/craftcms/cms/issues/6679))\n- Fixed a bug where it was possible to trigger the \u201cClear Caches\u201d and \u201cInvalidate Data Caches\u201d actions of the Caches utility, even if no options were selected. ([#6661](https://github.com/craftcms/cms/issues/6661))\n- Fixed a bug where it was possible to select parent entries that didn\u2019t belong to the same site. ([#6667](https://github.com/craftcms/cms/issues/6667))\n- Fixed an error that could occur when selecting a parent entry if it didn\u2019t belong to the primary site. ([#6667](https://github.com/craftcms/cms/issues/6667))\n- Fixed a bug where it wasn\u2019t possible to apply transform arguments to the `width` and `height` fields on assets via GraphQL. ([#6660](https://github.com/craftcms/cms/issues/6660))\n- Fixed a bug where the \u201cSave and continue editing\u201d Save button option wasn\u2019t working within Quick Post widgets.\n- Fixed a bug where the \u201cSelect all\u201d checkbox within admin tables wouldn\u2019t select all rows. ([#6678](https://github.com/craftcms/cms/issues/6678))\n- Fixed a bug where `craft\\i18n\\Formatter::asDatetime()` and `asTime()` were ignoring certain formatting characters that aren\u2019t supported by ICU, if the format string began with `php:`. ([#6691](https://github.com/craftcms/cms/issues/6691))\n- Fixed an error that could occur when downloading an asset. ([#6692](https://github.com/craftcms/cms/pull/6692))\n- Fixed a bug where fields with hidden labels would refer to themselves as `__blank__` in validation errors. ([#6699](https://github.com/craftcms/cms/issues/6699))\n- Fixed a bug where it wasn\u2019t possible to pass lists to GraphQL directive arguments. ([#6693](https://github.com/craftcms/cms/issues/6693))\n- Fixed a bug where asset indexing didn\u2019t work properly if no files were found on the selected volumes. ([#6658](https://github.com/craftcms/cms/issues/6658))\n- Fixed a bug where project config files could get deleted if the casing of a component\u2019s handle was changed, on case-insensitive file systems. ([#6708](https://github.com/craftcms/cms/issues/6708))\n- Fixed an error that could occur when applying project config changes from the Project Config utility, if the logged-in user wasn\u2019t an admin.\n- Fixed a bug where changes to the `dateModified` project config value weren\u2019t getting applied.\n- Fixed a bug where rebuilding the project config would pull in any pending changes in the YAML files unexpectedly.\n- Fixed a bug where the \u201cLocalizing relations\u201d job wouldn\u2019t run if a relational field\u2019s \u201cManage relations on a per-site basis\u201d setting was enabled via the project config. ([#6711](https://github.com/craftcms/cms/issues/6711))\n- Fixed a bug where autosuggest menus weren\u2019t getting closed when the input was blurred via the keyboard. ([#6710](https://github.com/craftcms/cms/issues/6710))\n\n## 3.5.5 - 2020-08-17\n\n### Added\n- Added the `useIframeResizer` config setting, which defaults to `false`. ([#6645](https://github.com/craftcms/cms/issues/6645))\n- Added `craft\\base\\ElementInterface::getHasCheckeredThumb()`.\n- Added `craft\\base\\ElementInterface::getHasRoundedThumb()`.\n\n### Changed\n- Email fields now set `inputmode=\"email\"` on their input.\n- URL fields now set `inputmode=\"url\"` on their input.\n- Number fields now set `inputmode=\"numeric\"` or `inputmode=\"decimal\"` on their input, depending on whether they allow decimals.\n- Tightened up the top control panel headers.\n- Element thumbnails no longer have checkered backgrounds, except for PNG, GIF, and SVG assets. ([#6646](https://github.com/craftcms/cms/pull/6646))\n- User photos are now circular, except in thumbnail view. ([#6646](https://github.com/craftcms/cms/pull/6646))\n- Setting the `previewIframeResizerOptions` config setting to `false` is no longer a way to disable iFrame Resizer, now that `useIframeResizer` exists. ([#6645](https://github.com/craftcms/cms/issues/6645))\n- The `_includes/forms/text.html` control panel template now supports passing an `inputmode` variable.\n- `craft\\models\\FieldLayout::setFields()` now accepts `null` to clear the currently memoized fields.\n\n### Fixed\n- Fixed a couple styling issues with element editor HUDs.\n- Fixed a bug where the quality setting was being ignored for image transforms that were not in either JPG or PNG format. ([#6629](https://github.com/craftcms/cms/issues/6629))\n- Fixed a bug where mail wouldn\u2019t send if the `testToEmailAddress` config setting was set to `false`.\n- Fixed a JavaScript error that could occur in Safari 12. ([#6635](https://github.com/craftcms/cms/issues/6635))\n- Fixed a bug where `craft\\services\\Globals::getAllSets()`, `getEditableSets()`, `getSetById()`, and `getSetByHandle()` could return global sets in the wrong site, if the current site had been changed since the first time the global sets had been memoized. ([#6636](https://github.com/craftcms/cms/issues/6636))\n- Fixed the styling of some control panel field instructions. ([#6640](https://github.com/craftcms/cms/issues/6640))\n- Fixed a bug where field instructions weren\u2019t getting escaped. ([#6642](https://github.com/craftcms/cms/issues/6642))\n- Fixed a bug where the initial site created by the installer was still getting saved with its base URL set to `$DEFAULT_SITE_URL`, despite the base URL provided to the installer getting stored as an environment variable named `PRIMARY_SITE_URL`. ([#6650](https://github.com/craftcms/cms/issues/6650))\n- Fixed a bug where it wasn\u2019t possible to add a new custom field to a field layout and set a value on an element for that field in the same request. ([#6651](https://github.com/craftcms/cms/issues/6651))\n\n## 3.5.4 - 2020-08-13\n\n### Added\n- It\u2019s now possible to hide field labels from within field layout designers. ([#6608](https://github.com/craftcms/cms/issues/6608))\n- Lightswitch fields now have an \u201cON Label\u201d and \u201cOFF Label\u201d settings. ([#3741](https://github.com/craftcms/cms/issues/3741))\n- Edit Category pages now support a <kbd>Shift</kbd> + <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut for saving the category and creating a new one.\n- Added the \u201cShow field handles in edit forms\u201d admin user preference. ([#6610](https://github.com/craftcms/cms/issues/6610))\n- Added `craft\\fields\\Lightswitch::$offLabel`.\n- Added `craft\\fields\\Lightswitch::$onLabel`.\n- Added `craft\\services\\AssetTransforms::$db`. ([#6549](https://github.com/craftcms/cms/issues/6549))\n\n### Changed\n- All admin-only user preferences are now grouped under a single \u201cDevelopment\u201d heading.\n- Improved system performance.\n- Stack traces within exception views now show source Twig templates rather than the compiled PHP classes.\n- The \u201cEnabled everywhere\u201d entry status label has been renamed to \u201cEnabled\u201d. ([#6623](https://github.com/craftcms/cms/issues/6623))\n- `error` is now a reserved handle. ([#6626](https://github.com/craftcms/cms/issues/6626))\n- The `_includes/forms/checkbox.html` control panel template now supports an `inputAttributes` variable.\n- The `_includes/forms/field.html` control panel template now supports overriding the heading HTML via a `heading` block.\n- `craft\\helpers\\Db::idByUid()` now has a `$db` argument.\n- `craft\\helpers\\Db::idsByUids()` now has a `$db` argument.\n- `craft\\helpers\\Db::uidById()` now has a `$db` argument.\n- `craft\\helpers\\Db::uidsByIds()` now has a `$db` argument.\n- `craft\\models\\FieldLayout::createForm()` now supports passing a `namespace` key into the `$config` argument, to namespace the tab contents.\n\n### Fixed\n- Fixed an infinite redirect that could occur if Craft was installed within a subdirectory of the webroot. ([#6616](https://github.com/craftcms/cms/issues/6616))\n- Fixed a bug where all Title fields within Quick Post widgets had the same input ID.\n- Fixed a bug where Title fields weren\u2019t showing change status badges when editing an entry draft.\n- Fixed an error that could occur when using the `formatDateTime` GraphQL directive on environments that didn\u2019t have the `Intl` PHP extension installed. ([#6614](https://github.com/craftcms/cms/issues/6614))\n- Fixed a bug where template profiling was interfering with Twig\u2019s ability to guess offending template lines in error reports.\n- Fixed a bug where soft-deleted categories and entries within Structure sections had two \u201cDelete permanently\u201d actions. ([#6619](https://github.com/craftcms/cms/issues/6619))\n- Fixed a bug where field handles were being displayed within element editor HUDs. ([#6620](https://github.com/craftcms/cms/issues/6620))\n\n## 3.5.3 - 2020-08-11\n\n### Added\n- Fields in the control panel now always display their handle without needing to press the <kbd>Option</kbd>/<kbd>ALT</kbd> key, when Dev Mode is enabled, and they will be copied to the clipboard when clicked on. ([#6532](https://github.com/craftcms/cms/issues/6532))\n- Added `craft\\helpers\\Gql::prepareTransformArguments()`.\n- Added the `_includes/forms/copytextbtn.html` control panel template.\n\n### Changed\n- It\u2019s now possible to change a revision\u2019s creator and source via `craft\\services\\Revisions::EVENT_BEFORE_CREATE_REVISION`. ([#6600](https://github.com/craftcms/cms/pull/6600))\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to use the `transform` argument in some cases via the GraphQL API.\n- Fixed a bug where Craft was routing requests based on the full requested URI rather than just the URI segments that came after `index.php`. ([#6579](https://github.com/craftcms/cms/issues/6579))\n- Fixed a bug where `data-target-prefix` attributes that specified a class name were getting namespaced. ([#6604](https://github.com/craftcms/cms/issues/6604))\n- Fixed a bug where `craft\\helpers\\Json::isJsonObject()` was returning `false` if the JSON string spanned multiple lines. ([#6607](https://github.com/craftcms/cms/issues/6607))\n- Fixed a bug where the `limit` param wasn\u2019t working when applied to eager-loaded elements. ([#6596](https://github.com/craftcms/cms/issues/6596))\n- Fixed an error that would occur if Craft tried to make a database backup in a VM with Windows as the host OS.\n\n## 3.5.2 - 2020-08-09\n\n### Added\n- Added `craft\\db\\Command::deleteDuplicates()`.\n- Added `craft\\db\\Migration::deleteDuplicates()`.\n- Added `craft\\db\\mysql\\QueryBuilder::deleteDuplicates()`.\n- Added `craft\\db\\pgsql\\QueryBuilder::deleteDuplicates()`.\n\n### Changed\n- Live Preview now attempts to maintain the iframe scroll position between page reloads even if the `previewIframeResizerOptions` config setting is set to `false`. ([#6569](https://github.com/craftcms/cms/issues/6569))\n- `language` and `localized` are now reserved field handles. ([#6564](https://github.com/craftcms/cms/issues/6564))\n- `craft\\base\\Element::__get()` now prioritizes field handles over getter methods. ([#6564](https://github.com/craftcms/cms/issues/6564))\n- Data caches stored in `storage/runtime/cache/` now get a cache key prefix based on the application ID.\n- Craft now clears the schema cache before running each migration, in addition to after. ([#6552](https://github.com/craftcms/cms/issues/6552))\n- Renamed `craft\\base\\ElementTrait::$elementSiteId` to `$siteSettingsId`. ([verbb/navigation#179](https://github.com/verbb/navigation/issues/179), [verbb/wishlist#56](https://github.com/verbb/wishlist/issues/56))\n\n### Fixed\n- Fixed a PHP error that occurred when setting a `relatedTo` param to an array that began with `'and'`. ([#6573](https://github.com/craftcms/cms/issues/6573))\n- Fixed a SQL error that could occur when updating to Craft 3.5 if the `migrations` table contained duplicate migration rows. ([#6580](https://github.com/craftcms/cms/issues/6580))\n- Fixed a PHP error that could occur during public registration. ([#6499](https://github.com/craftcms/cms/issues/6499))\n\n## 3.5.1 - 2020-08-05\n\n### Fixed\n- Fixed an error where it wasn\u2019t possible to create a GraphQL schema that had write-only access to a Single entry. ([#6554](https://github.com/craftcms/cms/issues/6554))\n- Fixed a PHP error that could occur with certain versions of PHP. ([#6544](https://github.com/craftcms/cms/issues/6544))\n- Fixed an error that could occur when updating to Craft 3.5. ([#6464](https://github.com/craftcms/cms/issues/6464))\n- Fixed errors in fixtures that prevented them from being used in tests.\n\n## 3.5.0 - 2020-08-04\n\n> **Warning**\n> Read through the [Upgrading to Craft 3.5](https://craftcms.com/knowledge-base/upgrading-to-craft-3-5) guide before updating.\n\n### Added\n- It\u2019s now possible to customize the labels and author instructions for all fields (including Title fields), from within field layout designers. ([#806](https://github.com/craftcms/cms/issues/806), [#841](https://github.com/craftcms/cms/issues/841))\n- It\u2019s now possible to set Title fields\u2019 positions within field layout designers. ([#3953](https://github.com/craftcms/cms/issues/3953))\n- It\u2019s now possible to set field widths to 25%, 50%, 75%, or 100% (including Matrix sub-fields), and fields will be positioned next to each other when there\u2019s room. ([#2644](https://github.com/craftcms/cms/issues/2644), [#6346](https://github.com/craftcms/cms/issues/6346))\n- It\u2019s now possible to add headings, tips, warnings, horizontal rules, and custom UI elements based on site templates, to field layouts. ([#1103](https://github.com/craftcms/cms/issues/1103), [#1138](https://github.com/craftcms/cms/issues/1138), [#4738](https://github.com/craftcms/cms/issues/4738))\n- It\u2019s now possible to search for fields from within field layout designers. ([#913](https://github.com/craftcms/cms/issues/913))\n- Added the \u201cHeader Column Heading\u201d element index source setting. ([#3814](https://github.com/craftcms/cms/issues/3814))\n- Added the \u201cFormatting Locale\u201d user preference. ([#6363](https://github.com/craftcms/cms/issues/6363))\n- Added the \u201cUse shapes to represent statuses\u201d user preference. ([#3293](https://github.com/craftcms/cms/issues/3293))\n- Added the \u201cUnderline links\u201d user preference. ([#6153](https://github.com/craftcms/cms/issues/6153))\n- Added the \u201cSuspend by default\u201d user registration setting. ([#5830](https://github.com/craftcms/cms/issues/5830))\n- Added the ability to disable sites on the front end. ([#3005](https://github.com/craftcms/cms/issues/3005))\n- Entries within Structure sections and categories now have a \u201cDelete (with descendants)\u201d element action.\n- Soft-deleted elements now have a \u201cDelete permanently\u201d element action. ([#4420](https://github.com/craftcms/cms/issues/4420))\n- Entry types can now change the Title field\u2019s translation method, similar to how custom fields\u2019 translation methods. ([#2856](https://github.com/craftcms/cms/issues/2856))\n- Entry draft forms no longer have a primary action, and the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut now forces a resave of the draft, rather than publishing it. ([#6199](https://github.com/craftcms/cms/issues/6199))\n- Edit Entry pages now support a <kbd>Shift</kbd> + <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut for saving the entry and creating a new one. ([#2851](https://github.com/craftcms/cms/issues/2851))\n- Assets now have a \u201cCopy URL\u201d element action. ([#2944](https://github.com/craftcms/cms/issues/2944))\n- Entry indexes can now show \u201cRevision Notes\u201d and \u201cLast Edited By\u201d columns. ([#5907](https://github.com/craftcms/cms/issues/5907))\n- Sections now have a new Propagation Method option, which gives entries control over which sites they should be saved to. ([#5988](https://github.com/craftcms/cms/issues/5988))\n- User groups can now have descriptions. ([#4893](https://github.com/craftcms/cms/issues/4893))\n- It\u2019s now possible to set a custom route that handles Set Password requests. ([#5722](https://github.com/craftcms/cms/issues/5722))\n- Field labels now reveal their handles when the <kbd>Option</kbd>/<kbd>ALT</kbd> key is pressed. ([#5833](https://github.com/craftcms/cms/issues/5833))\n- Added the Project Config utility, which can be used to perform project config actions, and view a dump of the stored project config. ([#4371](https://github.com/craftcms/cms/issues/4371))\n- Added \u201cGraphQL queries\u201d and \u201cTemplate caches\u201d cache tag invalidation options to the Caches (formerly \u201cClear Caches\u201d) utility. ([#6279](https://github.com/craftcms/cms/issues/6279))\n- Added the `allowedGraphqlOrigins` config setting. ([#5933](https://github.com/craftcms/cms/issues/5933))\n- Added the `brokenImagePath` config setting. ([#5877](https://github.com/craftcms/cms/issues/5877))\n- Added the `cpHeadTags` config setting, making it possible to give the control panel a custom favicon. ([#4003](https://github.com/craftcms/cms/issues/4003))\n- Added the `defaultCpLocale` config setting. ([#6363](https://github.com/craftcms/cms/issues/6363))\n- Added the `enableBasicHttpAuth` config setting. ([#6421](https://github.com/craftcms/cms/issues/6421))\n- Added the `gqlTypePrefix` config setting, making it possible to prefix all GraphQL types created by Craft. ([#5950](https://github.com/craftcms/cms/issues/5950))\n- Added the `imageEditorRatios` config setting, making it possible to customize the list of available aspect ratios in the image editor. ([#6201](https://github.com/craftcms/cms/issues/6201))\n- Added the `previewIframeResizerOptions` config setting. ([#6388](https://github.com/craftcms/cms/issues/6388))\n- Added the `siteToken` config setting.\n- Added the `install/check` command. ([#5810](https://github.com/craftcms/cms/issues/5810))\n- Added the `invalidate-tags` command. ([#6279](https://github.com/craftcms/cms/issues/6279))\n- Added the `plugin/install`, `plugin/uninstall`, `plugin/enable`, and `plugin/disable` commands. ([#5817](https://github.com/craftcms/cms/issues/5817))\n- `{% cache %}` tags and GraphQL queries now use a new tag-based cache invalidation strategy. (No more \u201cDeleting stale template caches\u201d background jobs clogging up the queue!) ([#1507](https://github.com/craftcms/cms/issues/1507), [#1689](https://github.com/craftcms/cms/issues/1689))\n- Added the `{% html %}` Twig tag, which makes it possible to register arbitrary HTML for inclusion in the `<head>`, beginning of `<body>`, or end of `<body>`. ([#5955](https://github.com/craftcms/cms/issues/5955))\n- Added the `|diff` Twig filter.\n- Added the `|explodeClass` Twig filter, which converts class names into an array.\n- Added the `|explodeStyle` Twig filter, which converts CSS styles into an array of property/value pairs.\n- Added the `|namespaceAttributes` Twig filter, which namespaces `id`, `for`, and other attributes, but not `name`.\n- Added the `|push` Twig filter, which returns a new array with one or more items appended to it.\n- Added the `|unshift` Twig filter, which returns a new array with one or more items prepended to it.\n- Added the `|where` Twig filter.\n- Added the `raw()` Twig function, which wraps the given string in a `Twig\\Markup` object to prevent it from getting HTML-encoded.\n- Added support for eager loading elements\u2019 current revisions, via `currentRevision`.\n- Added support for eager loading drafts\u2019 and revisions\u2019 creators, via `draftCreator` and `revisionCreator`.\n- Added support for the `CRAFT_CP` PHP constant. ([#5122](https://github.com/craftcms/cms/issues/5122))\n- Added support for [GraphQL mutations](https://craftcms.com/docs/3.x/graphql.html#mutations). ([#4835](https://github.com/craftcms/cms/issues/4835))\n- Added the `drafts`, `draftOf`, `draftId`, `draftCreator`, `revisions`, `revisionOf`, `revisionId` and `revisionCreator` arguments to element queries using GraphQL API. ([#5580](https://github.com/craftcms/cms/issues/5580))\n- Added the `isDraft`, `isRevision`, `sourceId`, `sourceUid`, and `isUnsavedDraft` fields to elements when using GraphQL API. ([#5580](https://github.com/craftcms/cms/issues/5580))\n- Added the `assetCount`, `categoryCount`, `entryCount`, `tagCount`, and `userCount` queries for fetching the element counts to the GraphQL API. ([#4847](https://github.com/craftcms/cms/issues/4847))\n- Added the `locale` argument to the `formatDateTime` GraphQL directive. ([#5593](https://github.com/craftcms/cms/issues/5593))\n- Added support for specifying a transform on assets\u2019 `width` and `height` fields via GraphQL.\n- Added the `hasPhoto` user query param/GraphQL argument. ([#6083](https://github.com/craftcms/cms/issues/6083))\n- Added the `localized` field when querying entries and categories via GraphQL. ([#6045](https://github.com/craftcms/cms/issues/6045))\n- Added the `language` field when querying elements via GraphQL.\n- Added support for GraphQL query batching. ([#5677](https://github.com/craftcms/cms/issues/5677))\n- The GraphiQL IDE now opens as a fullscreen app in a new window.\n- Added the \u201cPrettify\u201d and \u201cHistory\u201d buttons to the GraphiQL IDE.\n- Added the Explorer plugin to GraphiQL.\n- Added support for external subnav links in the global control panel nav.\n- Added the `fieldLayoutDesigner()` and `fieldLayoutDesignerField()` macros to the `_includes/forms.html` control panel template.\n- Added the `_includes/forms/fieldLayoutDesigner.html` control panel template.\n- Added the `_layouts/components/form-action-menu.twig` control panel template.\n- Added the `parseRefs` GraphQL directive. ([#6200](https://github.com/craftcms/cms/issues/6200))\n- Added the `prev` and `next` fields for entries, categories and assets when querying elements via GraphQL. ([#5571](https://github.com/craftcms/cms/issues/5571))\n- Added the \u201cReplace file\u201d permission. ([#6336](https://github.com/craftcms/cms/issues/6336))\n- Web requests now support basic authentication. ([#5303](https://github.com/craftcms/cms/issues/5303))\n- Added support for JavaScript events on admin tables. ([#6063](https://github.com/craftcms/cms/issues/6063))\n- Added the ability to enable/disable checkboxes on a per row basis in admin tables. ([#6223](https://github.com/craftcms/cms/issues/6223))\n- Added `craft\\base\\ConfigurableComponent`.\n- Added `craft\\base\\ConfigurableComponentInterface`.\n- Added `craft\\base\\Element::defineFieldLayouts()`.\n- Added `craft\\base\\Element::EVENT_DEFINE_KEYWORDS`. ([#6028](https://github.com/craftcms/cms/issues/6028))\n- Added `craft\\base\\Element::EVENT_REGISTER_FIELD_LAYOUTS`.\n- Added `craft\\base\\Element::EVENT_SET_EAGER_LOADED_ELEMENTS`.\n- Added `craft\\base\\Element::searchKeywords()`.\n- Added `craft\\base\\ElementActionInterface::isDownload()`.\n- Added `craft\\base\\ElementInterface::fieldLayouts()`.\n- Added `craft\\base\\ElementInterface::getCacheTags()`.\n- Added `craft\\base\\ElementInterface::getIsTitleTranslatable()`.\n- Added `craft\\base\\ElementInterface::getLanguage()`.\n- Added `craft\\base\\ElementInterface::getLocalized()`.\n- Added `craft\\base\\ElementInterface::getTitleTranslationDescription()`.\n- Added `craft\\base\\ElementInterface::getTitleTranslationKey()`.\n- Added `craft\\base\\ElementInterface::gqlMutationNameByContext()`.\n- Added `craft\\base\\ElementInterface::isAttributeDirty()`.\n- Added `craft\\base\\ElementInterface::isFieldEmpty()`.\n- Added `craft\\base\\ElementInterface::setDirtyAttributes()`.\n- Added `craft\\base\\ElementTrait::$elementSiteId`.\n- Added `craft\\base\\Field::EVENT_DEFINE_INPUT_HTML`. ([#5867](https://github.com/craftcms/cms/issues/5867))\n- Added `craft\\base\\Field::EVENT_DEFINE_KEYWORDS`. ([#6028](https://github.com/craftcms/cms/issues/6028))\n- Added `craft\\base\\Field::inputHtml()`.\n- Added `craft\\base\\Field::searchKeywords()`.\n- Added `craft\\base\\FieldInterface::getContentGqlMutationArgumentType()`.\n- Added `craft\\base\\FieldInterface::getContentGqlQueryArgumentType()`.\n- Added `craft\\base\\FieldLayoutElement`.\n- Added `craft\\base\\FieldLayoutElementInterface`.\n- Added `craft\\base\\Model::EVENT_DEFINE_EXTRA_FIELDS`.\n- Added `craft\\base\\Model::EVENT_DEFINE_FIELDS`.\n- Added `craft\\base\\VolumeInterface::getFieldLayout()`.\n- Added `craft\\behaviors\\BaseRevisionBehavior`.\n- Added `craft\\config\\GeneralConfig::getTestToEmailAddress()`.\n- Added `craft\\console\\actions\\InvalidateTagAction`.\n- Added `craft\\console\\controllers\\InvalidateTagsController`.\n- Added `craft\\console\\controllers\\MailerController::$to`.\n- Added `craft\\console\\controllers\\MigrateController::EVENT_REGISTER_MIGRATOR`.\n- Added `craft\\controllers\\AppController::actionBrokenImage()`.\n- Added `craft\\controllers\\BaseEntriesController::enforceSitePermissions()`.\n- Added `craft\\controllers\\FieldsController::actionRenderLayoutElementSelector()`.\n- Added `craft\\controllers\\UtilitiesController::actionInvalidateTags()`.\n- Added `craft\\controllers\\UtilitiesController::actionProjectConfigPerformAction()`.\n- Added `craft\\db\\MigrationManager::TRACK_CONTENT`.\n- Added `craft\\db\\MigrationManager::TRACK_CRAFT`.\n- Added `craft\\elements\\actions\\CopyUrl`.\n- Added `craft\\elements\\actions\\Delete::$hard`.\n- Added `craft\\elements\\actions\\Delete::$withDescendants`.\n- Added `craft\\elements\\Asset::defineFieldLayouts()`.\n- Added `craft\\elements\\Asset::getCacheTags()`.\n- Added `craft\\elements\\Asset::getSrcset()`. ([#5774](https://github.com/craftcms/cms/issues/5774))\n- Added `craft\\elements\\Asset::getVolumeId()`.\n- Added `craft\\elements\\Asset::gqlMutationNameByContext()`.\n- Added `craft\\elements\\Asset::setVolumeId()`.\n- Added `craft\\elements\\Category::defineFieldLayouts()`.\n- Added `craft\\elements\\Category::getCacheTags()`.\n- Added `craft\\elements\\Category::gqlMutationNameByContext()`.\n- Added `craft\\elements\\db\\AssetQuery::cacheTags()`.\n- Added `craft\\elements\\db\\CategoryQuery::cacheTags()`.\n- Added `craft\\elements\\db\\EagerLoadPlan`.\n- Added `craft\\elements\\db\\ElementQuery::cacheTags()`.\n- Added `craft\\elements\\db\\EntryQuery::cacheTags()`.\n- Added `craft\\elements\\db\\MatrixBlockQuery::cacheTags()`.\n- Added `craft\\elements\\db\\TagQuery::cacheTags()`.\n- Added `craft\\elements\\db\\UserQuery::$hasPhoto`.\n- Added `craft\\elements\\db\\UserQuery::hasPhoto()`.\n- Added `craft\\elements\\Entry::defineFieldLayouts()`.\n- Added `craft\\elements\\Entry::getCacheTags()`.\n- Added `craft\\elements\\Entry::gqlMutationNameByContext()`.\n- Added `craft\\elements\\GlobalSet::getConfig()`.\n- Added `craft\\elements\\GlobalSet::gqlMutationNameByContext()`.\n- Added `craft\\elements\\MatrixBlock::getCacheTags()`.\n- Added `craft\\elements\\Tag::getCacheTags()`.\n- Added `craft\\elements\\Tag::gqlMutationNameByContext()`.\n- Added `craft\\elements\\User::getPreferredLocale()`.\n- Added `craft\\events\\DefineAttributeKeywordsEvent`.\n- Added `craft\\events\\DefineFieldHtmlEvent`.\n- Added `craft\\events\\DefineFieldKeywordsEvent`.\n- Added `craft\\events\\DefineFieldLayoutElementsEvent`.\n- Added `craft\\events\\DefineFieldLayoutFieldEvent`.\n- Added `craft\\events\\DefineFieldsEvent`.\n- Added `craft\\events\\EagerLoadElementsEvent`.\n- Added `craft\\events\\MutationPopulateElementEvent`.\n- Added `craft\\events\\RegisterElementFieldLayoutsEvent`.\n- Added `craft\\events\\RegisterGqlEagerLoadableFields`.\n- Added `craft\\events\\RegisterGqlMutationsEvent`.\n- Added `craft\\events\\RegisterGqlSchemaComponentsEvent`.\n- Added `craft\\events\\RegisterMigratorEvent`.\n- Added `craft\\events\\SetEagerLoadedElementsEvent`.\n- Added `craft\\fieldlayoutelements\\BaseField`.\n- Added `craft\\fieldlayoutelements\\BaseUiElement`.\n- Added `craft\\fieldlayoutelements\\CustomField`.\n- Added `craft\\fieldlayoutelements\\EntryTitleField`.\n- Added `craft\\fieldlayoutelements\\Heading`.\n- Added `craft\\fieldlayoutelements\\HorizontalRule`.\n- Added `craft\\fieldlayoutelements\\StandardField`.\n- Added `craft\\fieldlayoutelements\\StandardTextField`.\n- Added `craft\\fieldlayoutelements\\Template`.\n- Added `craft\\fieldlayoutelements\\Tip`.\n- Added `craft\\fieldlayoutelements\\TitleField`.\n- Added `craft\\fields\\BaseOptionsField::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\BaseRelationField::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Date::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Lightswitch::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Lightswitch::getContentGqlQueryArgumentType()`.\n- Added `craft\\fields\\Matrix::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Number::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Table::getContentGqlMutationArgumentType()`.\n- Added `craft\\gql\\arguments\\mutations\\Asset`.\n- Added `craft\\gql\\arguments\\mutations\\Draft`.\n- Added `craft\\gql\\arguments\\mutations\\Entry`.\n- Added `craft\\gql\\arguments\\mutations\\Structure`.\n- Added `craft\\gql\\base\\ElementMutationArguments`.\n- Added `craft\\gql\\base\\ElementMutationResolver`.\n- Added `craft\\gql\\base\\InterfaceType::resolveElementTypeName()`.\n- Added `craft\\gql\\base\\MutationArguments`.\n- Added `craft\\gql\\base\\MutationResolver`.\n- Added `craft\\gql\\base\\SingleGeneratorInterface`.\n- Added `craft\\gql\\base\\StructureMutationTrait`.\n- Added `craft\\gql\\ElementQueryConditionBuilder`.\n- Added `craft\\gql\\GqlEntityRegistry::prefixTypeName()`.\n- Added `craft\\gql\\Mutation`.\n- Added `craft\\gql\\mutations\\Category`.\n- Added `craft\\gql\\mutations\\Entry`.\n- Added `craft\\gql\\mutations\\GlobalSet`.\n- Added `craft\\gql\\mutations\\Ping`.\n- Added `craft\\gql\\mutations\\Tag`.\n- Added `craft\\gql\\resolvers\\mutations\\Asset`.\n- Added `craft\\gql\\resolvers\\mutations\\Category`.\n- Added `craft\\gql\\resolvers\\mutations\\Entry`.\n- Added `craft\\gql\\resolvers\\mutations\\GlobalSet`.\n- Added `craft\\gql\\resolvers\\mutations\\Tag`.\n- Added `craft\\gql\\types\\input\\File`.\n- Added `craft\\gql\\types\\input\\Matrix`.\n- Added `craft\\gql\\types\\Mutation`.\n- Added `craft\\gql\\types\\TableRow::prepareRowFieldDefinition()`.\n- Added `craft\\helpers\\App::dbMutexConfig()`.\n- Added `craft\\helpers\\ArrayHelper::isNumeric()`.\n- Added `craft\\helpers\\Assets::parseSrcsetSize()`.\n- Added `craft\\helpers\\Component::iconSvg()`.\n- Added `craft\\helpers\\Console::ensureProjectConfigFileExists()`.\n- Added `craft\\helpers\\Db::batchInsert()`.\n- Added `craft\\helpers\\Db::delete()`.\n- Added `craft\\helpers\\Db::insert()`.\n- Added `craft\\helpers\\Db::replace()`.\n- Added `craft\\helpers\\Db::update()`.\n- Added `craft\\helpers\\Db::upsert()`.\n- Added `craft\\helpers\\ElementHelper::generateSlug()`.\n- Added `craft\\helpers\\ElementHelper::normalizeSlug()`.\n- Added `craft\\helpers\\ElementHelper::translationDescription()`.\n- Added `craft\\helpers\\ElementHelper::translationKey()`.\n- Added `craft\\helpers\\FileHelper::addFilesToZip()`.\n- Added `craft\\helpers\\FileHelper::zip()`.\n- Added `craft\\helpers\\Gql::canMutateAssets()`.\n- Added `craft\\helpers\\Gql::canMutateCategories()`.\n- Added `craft\\helpers\\Gql::canMutateEntries()`.\n- Added `craft\\helpers\\Gql::canMutateGlobalSets()`.\n- Added `craft\\helpers\\Gql::canMutateTags()`.\n- Added `craft\\helpers\\Gql::extractEntityAllowedActions()`.\n- Added `craft\\helpers\\Html::explodeClass()`.\n- Added `craft\\helpers\\Html::explodeStyle()`.\n- Added `craft\\helpers\\Html::id()`.\n- Added `craft\\helpers\\Html::namespaceAttributes()`.\n- Added `craft\\helpers\\Html::namespaceHtml()`.\n- Added `craft\\helpers\\Html::namespaceId()`.\n- Added `craft\\helpers\\Html::namespaceInputName()`.\n- Added `craft\\helpers\\Html::namespaceInputs()`.\n- Added `craft\\helpers\\Html::sanitizeSvg()`.\n- Added `craft\\helpers\\Json::isJsonObject()`.\n- Added `craft\\helpers\\MailerHelper::normalizeEmails()`.\n- Added `craft\\helpers\\MailerHelper::settingsReport()`.\n- Added `craft\\helpers\\ProjectConfig::ensureAllGqlSchemasProcessed()`.\n- Added `craft\\helpers\\ProjectConfig::splitConfigIntoComponents()`.\n- Added `craft\\helpers\\Queue`.\n- Added `craft\\models\\CategoryGroup::getConfig()`.\n- Added `craft\\models\\EntryType::$sortOrder`.\n- Added `craft\\models\\EntryType::getConfig()`.\n- Added `craft\\models\\FieldGroup::getConfig()`.\n- Added `craft\\models\\FieldLayout::createForm()`.\n- Added `craft\\models\\FieldLayout::EVENT_DEFINE_STANDARD_FIELDS`.\n- Added `craft\\models\\FieldLayout::EVENT_DEFINE_UI_ELEMENTS`. ([#6360](https://github.com/craftcms/cms/issues/6360))\n- Added `craft\\models\\FieldLayout::getAvailableCustomFields()`.\n- Added `craft\\models\\FieldLayout::getAvailableStandardFields()`.\n- Added `craft\\models\\FieldLayout::getAvailableUiElements()`.\n- Added `craft\\models\\FieldLayout::getField()`.\n- Added `craft\\models\\FieldLayout::isFieldIncluded()`.\n- Added `craft\\models\\FieldLayoutForm`.\n- Added `craft\\models\\FieldLayoutFormTab`.\n- Added `craft\\models\\FieldLayoutTab::$elements`.\n- Added `craft\\models\\FieldLayoutTab::createFromConfig()`.\n- Added `craft\\models\\FieldLayoutTab::getConfig()`.\n- Added `craft\\models\\FieldLayoutTab::getElementConfigs()`.\n- Added `craft\\models\\FieldLayoutTab::updateConfig()`.\n- Added `craft\\models\\GqlSchema::getConfig()`.\n- Added `craft\\models\\GqlToken::setSchema()`.\n- Added `craft\\models\\MatrixBlockType::getConfig()`.\n- Added `craft\\models\\Section::getConfig()`.\n- Added `craft\\models\\Section::PROPAGATION_METHOD_CUSTOM`.\n- Added `craft\\models\\Site::$enabled`.\n- Added `craft\\models\\Site::getConfig()`.\n- Added `craft\\models\\SiteGroup::getConfig()`.\n- Added `craft\\models\\TagGroup::getConfig()`.\n- Added `craft\\models\\UserGroup::getConfig()`.\n- Added `craft\\queue\\jobs\\PruneRevisions`.\n- Added `craft\\services\\AssetTransforms::extendTransform()`. ([#5853](https://github.com/craftcms/cms/issues/5853))\n- Added `craft\\services\\Composer::handleError()`.\n- Added `craft\\services\\Composer::run()`.\n- Added `craft\\services\\ElementIndexes::getFieldLayoutsForSource()`.\n- Added `craft\\services\\ElementIndexes::getSourceSortOptions()`.\n- Added `craft\\services\\ElementIndexes::getSourceTableAttributes()`.\n- Added `craft\\services\\Elements::collectCacheTags()`.\n- Added `craft\\services\\Elements::createEagerLoadingPlans()`.\n- Added `craft\\services\\Elements::createElementQuery()`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_EAGER_LOAD_ELEMENTS`.\n- Added `craft\\services\\Elements::getIsCollectingCacheTags()`.\n- Added `craft\\services\\Elements::invalidateAllCaches()`.\n- Added `craft\\services\\Elements::invalidateCachesForElement()`.\n- Added `craft\\services\\Elements::invalidateCachesForElementType()`.\n- Added `craft\\services\\Elements::startCollectingCacheTags()`.\n- Added `craft\\services\\Elements::stopCollectingCacheTags()`.\n- Added `craft\\services\\Fields::createLayoutElement()`.\n- Added `craft\\services\\Fields::getLayoutsByType()`.\n- Added `craft\\services\\Gql::CONFIG_GQL_KEY`.\n- Added `craft\\services\\Gql::CONFIG_GQL_PUBLIC_TOKEN_KEY`.\n- Added `craft\\services\\Gql::getAllSchemaComponents()`.\n- Added `craft\\services\\Gql::getPublicToken()`.\n- Added `craft\\services\\Gql::handleChangedPublicToken()`.\n- Added `craft\\services\\Images::getSupportsWebP()`. ([#5853](https://github.com/craftcms/cms/issues/5853))\n- Added `craft\\services\\Path::getProjectConfigPath()`.\n- Added `craft\\services\\ProjectConfig::$folderName`. ([#5982](https://github.com/craftcms/cms/issues/5982))\n- Added `craft\\services\\ProjectConfig::FILE_ISSUES_CACHE_KEY`.\n- Added `craft\\services\\ProjectConfig::getHadFileWriteIssues()`.\n- Added `craft\\services\\ProjectConfig::IGNORE_CACHE_KEY`.\n- Added `craft\\services\\ProjectConfig::ignorePendingChanges()`.\n- Added `craft\\services\\Users::CONFIG_USERS_KEY`.\n- Added `craft\\services\\Volumes::createVolumeConfig()`.\n- Added `craft\\test\\mockclasses\\elements\\MockElementQuery`.\n- Added `craft\\utilities\\ClearCaches::EVENT_REGISTER_TAG_OPTIONS`.\n- Added `craft\\utilities\\ClearCaches::tagOptions()`.\n- Added `craft\\utilities\\ProjectConfig`.\n- Added `craft\\web\\Application::authenticate()`.\n- Added `craft\\web\\AssetBundle\\ContentWindowAsset`.\n- Added `craft\\web\\AssetBundle\\IframeResizerAsset`.\n- Added `craft\\web\\Controller::setFailFlash()`.\n- Added `craft\\web\\Controller::setSuccessFlash()`.\n- Added `craft\\web\\Request::getAcceptsImage()`.\n- Added `craft\\web\\Request::getFullUri()`.\n- Added `craft\\web\\Request::getIsGraphql()`.\n- Added `craft\\web\\Request::getIsJson()`.\n- Added `craft\\web\\Request::getMimeType()`.\n- Added `craft\\web\\Request::getRawCookies()`.\n- Added `craft\\web\\Request::loadRawCookies()`.\n- Added `craft\\web\\Response::getRawCookies()`.\n- Added `craft\\web\\Response::setNoCacheHeaders()`.\n- `craft\\web\\View::evaluateDynamicContent()` can no longer be called by default. ([#6185](https://github.com/craftcms/cms/pull/6185))\n- Added the `_includes/forms/password.html` control panel template.\n- Added the `_includes/forms/copytext.html` control panel template.\n- Added the `copytext` and `copytextField` macros to the `_includes/forms.html` control panel template.\n- Added the `Craft.Listbox` JavaScript class.\n- Added the `Craft.SlidePicker` JavaScript class.\n- Added the `Craft.removeLocalStorage()`, `getCookie()`, `setCookie()`, and `removeCookie()` JavaScript methods.\n- Added the `Craft.submitForm()` JavaScript method.\n- Added the `Craft.cp.getSiteId()` and `setSiteId()` JavaScript methods.\n- Added the `Craft.ui.createCopyTextInput()`, `createCopyTextField()`, and `createCopyTextPrompt()` JavaScript methods.\n- Added the [iFrame Resizer](http://davidjbradshaw.github.io/iframe-resizer/) library.\n\n### Changed\n- Craft now stores project config files in a new `config/project/` folder, regardless of whether the (deprecated) `useProjectConfigFile` config setting is enabled, and syncing new project config file changes is now optional.\n- The public GraphQL schema\u2019s access settings are now stored in the project config. ([#6078](https://github.com/craftcms/cms/issues/6078))\n- Built-in system components now consistently store their settings in the project config with the expected value types. ([#4424](https://github.com/craftcms/cms/issues/4424))\n- The account menu in the control panel header now includes identity info. ([#6460](https://github.com/craftcms/cms/issues/6460))\n- User registration forms in the control panel now give users the option to send an activation email, even if email verification isn\u2019t required. ([#5836](https://github.com/craftcms/cms/issues/5836))\n- Activation emails are now sent automatically on public registration if the `deferPublicRegistrationPassword` config setting is enabled, even if email verification isn\u2019t required. ([#5836](https://github.com/craftcms/cms/issues/5836))\n- Craft now remembers the selected site across global sets and element indexes. ([#2779](https://github.com/craftcms/cms/issues/2779))\n- The available table columns and sort options within element indexes now only list custom fields that are present in field layouts for the selected element source. ([#4314](https://github.com/craftcms/cms/issues/4314), [#4802](https://github.com/craftcms/cms/issues/4802))\n- The default account activation and password reset emails now reference the system name rather than the current site name. ([#6089](https://github.com/craftcms/cms/pull/6089))\n- Craft will now regenerate missing transforms on local volumes. ([#5956](https://github.com/craftcms/cms/issues/5956))\n- Asset, category, entry, and user edit pages now retain their scroll position when the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut is used. ([#6513](https://github.com/craftcms/cms/issues/6513))\n- Preview frames now maintain their scroll position across refreshes, even for cross-origin preview targets.\n- Preview targets that aren\u2019t directly rendered by Craft must now include `lib/iframe-resizer-cw/iframeResizer.contentWindow.js` in order to maintain scroll position across refreshes.\n- The preview frame header no longer hides the top 54px of the preview frame when it\u2019s scrolled all the way to the top. ([#5547](https://github.com/craftcms/cms/issues/5547))\n- Element editor HUDs now warn before switching to another site, if there are any unsaved content changes. ([#2512](https://github.com/craftcms/cms/issues/2512))\n- Improved the styling of password inputs in the control panel.\n- Improved the UI for copying user activation URLs, asset reference tags, and GraphQL tokens\u2019 authentication headers.\n- Improved the wording of the meta info displayed in entry revision menus. ([#5889](https://github.com/craftcms/cms/issues/5889))\n- Plain Text fields now have a \u201cUI Mode\u201d setting.\n- Plain Text fields are now sortable in the control panel. ([#5819](https://github.com/craftcms/cms/issues/5819))\n- Relational fields now have a \u201cShow the site menu\u201d setting. ([#5864](https://github.com/craftcms/cms/issues/5864))\n- Date/Time fields now have \u201cMin Date\u201d and \u201cMax Date\u201d settings. ([#6241](https://github.com/craftcms/cms/issues/6241))\n- When creating a new field, the \u201cUse this field\u2019s values as search keywords?\u201d setting is now disabled by default. ([#6390](https://github.com/craftcms/cms/issues/6390))\n- Sections\u2019 \u201cEntry URI Format\u201d settings now have placeholder text indicating that the the input should be left blank if entries don\u2019t have URLs. ([#6527](https://github.com/craftcms/cms/issues/6527))\n- Quick Post widgets now have a \u201cSite\u201d setting. ([#5253](https://github.com/craftcms/cms/issues/5253))\n- Craft now supports running migrations for custom migration tracks. ([#6172](https://github.com/craftcms/cms/issues/6172))\n- Extra entry revisions (per the `maxRevisions` config setting) are now pruned via a background job. ([#5902](https://github.com/craftcms/cms/issues/5902))\n- Database backups created by the Database Backup utility are now saved as zip files. ([#5822](https://github.com/craftcms/cms/issues/5822))\n- It\u2019s now possible to specify aliases when eager loading elements via the `with` param. ([#5793](https://github.com/craftcms/cms/issues/5793))\n- It\u2019s now possible to use aliases when eager loading elements via GraphQL. ([#5481](https://github.com/craftcms/cms/issues/5481))\n- It\u2019s now possible to eager-load elements\u2019 ancestors and parents. ([#1382](https://github.com/craftcms/cms/issues/1382))\n- The `cpTrigger` config setting can now be set to `null`. ([#5122](https://github.com/craftcms/cms/issues/5122))\n- The `pathParam` config setting can now be set to `null`. ([#5676](https://github.com/craftcms/cms/issues/5676))\n- If the `baseCpUrl` config setting is set, Craft will no longer treat any other base URLs as control panel requests, even if they contain the correct trigger segment. ([#5860](https://github.com/craftcms/cms/issues/5860))\n- The `backup` command now has an `--overwrite` flag that can be passed to overwrite existing backup files for non-interactive shells.\n- The `backup` command now has a `--zip` flag that can be passed to store the backup as a zip file. ([#6335](https://github.com/craftcms/cms/issues/6335))\n- The `mailer/test` command now only supports testing the current email settings.\n- The `project-config/sync` command has been renamed to `project-config/apply`.\n- `migrate` commands now have a `--track` option, which can be set to `craft`, `content`, or a custom migration track name.\n- Reference tags can now provide a fallback value to be used if the reference can\u2019t be resolved. ([#5589](https://github.com/craftcms/cms/issues/5589))\n- Front-end asset forms can now set a hashed `assetVariable` param, to customize the name of the variable that the asset should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- Front-end category forms can now set a hashed `categoryVariable` param, to customize the name of the variable that the category should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- Front-end entry forms can now set a hashed `entryVariable` param, to customize the name of the variable that the entry should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- Front-end user forms can now set a hashed `userVariable` param, to customize the name of the variable that the user should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- It\u2019s no longer necessary to append the `|raw` filter after the `|namespace` filter.\n- The `|namespace` Twig filter now namespaces ID selectors within `<style>` tags. ([#5921](https://github.com/craftcms/cms/issues/5921))\n- The `|namespace` Twig filter now has a `withClasses` argument, which if set to `true` causes `class` attributes and class name CSS selectors within `<style>` tags to be namespaced. ([#5921](https://github.com/craftcms/cms/issues/5921))\n- The `{% namespace %}` Twig tag can now have a `withClasses` flag, which causes `class` attributes and class name CSS selectors within `<style>` tags to be namespaced. ([#5921](https://github.com/craftcms/cms/issues/5921))\n- Element queries\u2019 `siteId` params can now be set to an array that begins with `'not'` to exclude specific site IDs.\n- The `withTransforms` asset query param can now include `srcset`-style sizes (e.g. `100w` or `2x`), following a normal transform definition.\n- The `QueryArgument` GraphQL type now also allows boolean values.\n- Improved eager loading support when querying for image transforms via GraphQL.\n- Users\u2019 photos are now eager-loaded when queried via GraphQL.\n- It\u2019s now possible to register template roots without a template prefix. ([#6015](https://github.com/craftcms/cms/issues/6015))\n- It\u2019s now possible to register multiple directories per template root. ([#6015](https://github.com/craftcms/cms/issues/6015))\n- It\u2019s now possible to pass `type`, `status`, `title`, `slug`, `postDate`, `expiryDate`, and custom field query string params to the new entry URL, to set the default entry values (e.g. `/admin/entries/locations/new?phone=555-0123`).\n- Lightswitch inputs can now have labels, like checkboxes.\n- Clicking on a Lightswitch field\u2019s label will now set focus to the lightswitch.\n- Improved the focus styling for relational fields. ([#6002](https://github.com/craftcms/cms/issues/6002))\n- Matrix blocks\u2019 action menus now include \u201cMove up\u201d and \u201cMove down\u201d options. ([#1035](https://github.com/craftcms/cms/issues/1035))\n- Improved support for eager loading elements across multiple sites at once.\n- All built-in success/fail flash messages are now customizable by passing a hashed `successMessage`/`failMessage` param with the request. ([#6192](https://github.com/craftcms/cms/issues/6192))\n- \u201cResaving elements\u201d jobs no longer ignore the `offset`, `limit`, and `orderBy` params specified by the criteria.\n- Craft now uses `yii\\mutex\\MysqlMutex` or `yii\\mutex\\PgsqlMutex` for mutex locking by default.\n- Database backups are now named in the format `system-name--YYYY-MM-DD-HHMMSS--vX.Y.Z.sql`. ([#6231](https://github.com/craftcms/cms/issues/6231))\n- The `app/migrate` action no longer applies project config file changes by default, unless `?applyProjectConfigChanges=1` is passed.\n- The `graphql/api` and `live-preview/preview` actions no longer add CORS headers that were already set on the response. ([#6355](https://github.com/craftcms/cms/issues/6355))\n- `craft\\base\\ConfigurableComponent::getSettings()` now converts `DateTime` attributes returned from `datetimeAttributes()` into ISO-8601 strings.\n- `craft\\base\\Element::getRoute()` now returns the route defined by `craft\\events\\SetElementRouteEvent::$route` even if it\u2019s null, as long as `SetElementRouteEvent::$handled` is set to `true`.\n- `craft\\base\\ElementInterface::sortOptions()` now allows the returned `orderBy` key to be set to an array of column names.\n- `craft\\base\\SavableComponent::isSelectable()` has been moved into the base component class, `craft\\base\\Component`.\n- `craft\\base\\SavableComponentInterface::isSelectable()` has been moved into the base component interface, `craft\\base\\ComponentInterface`.\n- `craft\\base\\SortableFieldInterface::getSortOption()` now allows the returned `orderBy` key to be set to an array of column names.\n- `craft\\behaviors\\SessionBehavior::setNotice()` and `setError()` now store flash messages using `cp-notice` and `cp-error` keys when called from control panel requests. ([#5704](https://github.com/craftcms/cms/issues/5704))\n- `craft\\db\\ActiveRecord` now unsets any empty primary key values when saving new records, to avoid a SQL error on PostgreSQL. ([#5814](https://github.com/craftcms/cms/pull/5814))\n- `craft\\elements\\Asset::getImg()` now has a `$sizes` argument. ([#5774](https://github.com/craftcms/cms/issues/5774))\n- `craft\\elements\\Asset::getUrl()` now supports including a `transform` key in the `$transform` argument array, which specifies a base transform. ([#5853](https://github.com/craftcms/cms/issues/5853))\n- `craft\\elements\\db\\ElementQuery::$enabledForSite` is now set to `false` by default, leaving it up to elements\u2019 status conditions to factor in the site-specific element statuses. ([#6273](https://github.com/craftcms/cms/issues/6273))\n- `craft\\helpers\\Component::createComponent()` now creates component objects via `Craft::createObject()`. ([#6097](https://github.com/craftcms/cms/issues/6097))\n- `craft\\helpers\\ElementHelper::supportedSitesForElement()` now has a `$withUnpropagatedSites` argument.\n- `craft\\helpers\\StringHelper::randomString()` no longer includes capital letters or numbers by default.\n- `craft\\i18n\\Formatter::asTimestamp()` now has a `$withPreposition` argument.\n- `craft\\services\\ElementIndexes::getAvailableTableAttributes()` no longer has an `$includeFields` argument.\n- `craft\\services\\Fields::getFieldByHandle()` now has an optional `$context` argument.\n- `craft\\services\\Gql::setCachedResult()` now has a `$dependency` argument.\n- `craft\\services\\Gql` now fires a `registerGqlMutations` event that allows for plugins to register their own GraphQL mutations.\n- `craft\\services\\ProjectConfig::areChangesPending()` now has a `$force` argument.\n- `craft\\services\\Sites::getAllSiteIds()`, `getSiteByUid()`, `getAllSites()`, `getSitesByGroupId()`, `getSiteById()`, and `getSiteByHandle()` now have `$withDisabled` arguments.\n- `craft\\services\\TemplateCaches::startTemplateCache()` no longer has a `$key` argument.\n- `craft\\web\\Controller::requireAcceptsJson()` no longer throws an exception for preflight requests.\n- Improved `data`/`aria` tag normalization via `craft\\helpers\\Html::parseTagAttributes()` and `normalizeTagAttributes()`.\n- Control panel form input macros and templates that accept a `class` variable can now pass it as an array of class names.\n- Radio groups in the control panel can now toggle other UI elements, like select inputs.\n- Control panel templates can now set a `formActions` variable, which registers alternative Save menu actions, optionally with associated keyboard shortcuts.\n- Control panel templates that support the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut can now have the browser retain its scroll position on the next page load by setting `retainScrollPosOnSaveShortcut = true`, or including `retainScroll: true` in a `formActions` object. ([#6513](https://github.com/craftcms/cms/issues/6513))\n- The `_layouts/base` template now supports a `bodyAttributes` variable.\n- Control panel settings pages registered via `craft\\web\\twig\\variables\\Cp::EVENT_REGISTER_CP_SETTINGS` can now specify their icon path with an `iconMask` key, which will have it filled in with the same color as Craft\u2019s built-in settings icons.\n- The `Craft.cp.submitPrimaryForm()` method now accepts an `options` argument for customizing the form submit.\n- New installs now set the primary site\u2019s base URL to a `PRIMARY_SITE_URL` environment variable, rather than `DEFAULT_SITE_URL`.\n- Updated Yii to 2.0.36.\n- Updated Composer to 1.10.10. ([#5925](https://github.com/craftcms/cms/pull/5925))\n- Updated PrismJS to 1.20.0.\n- Updated voku/stringy to ^6.2.2. ([#5989](https://github.com/craftcms/cms/issues/5989))\n\n### Deprecated\n- Deprecated the `project-config/sync` command. `project-config/apply` should be used instead.\n- Deprecated the `useCompressedJs` config setting.\n- Deprecated the `useProjectConfigFile` config setting.\n- Deprecated the `install/plugin` command. `plugin/install` should be used instead.\n- Deprecated the `|filterByValue` Twig filter. `|where` should be used instead.\n- Deprecated the `|ucwords` Twig filter. `|title` should be used instead.\n- Deprecated the `class` argument of the `svg()` Twig function. The `|attr` filter should be used instead.\n- Deprecated the `--type` option on `migrate` commands. `--track` or `--plugin` should be used instead.\n- Deprecated `craft\\db\\Table::TEMPLATECACHEELEMENTS`.\n- Deprecated `craft\\db\\Table::TEMPLATECACHEQUERIES`.\n- Deprecated `craft\\db\\Table::TEMPLATECACHES`.\n- Deprecated `craft\\elements\\actions\\DeepDuplicate`.\n- Deprecated `craft\\elements\\db\\ElementQuery::$enabledForSite`.\n- Deprecated `craft\\elements\\db\\ElementQuery::enabledForSite()`.\n- Deprecated `craft\\events\\RegisterGqlPermissionsEvent`. `craft\\events\\RegisterGqlSchemaComponentsEvent` should be used instead.\n- Deprecated `craft\\gql\\base\\Resolver::extractEagerLoadCondition()`. `ElementQueryConditionBuilder` should be used instead.\n- Deprecated `craft\\helpers\\App::mutexConfig()`.\n- Deprecated `craft\\helpers\\ElementHelper::createSlug()`. `normalizeSlug()` should be used instead.\n- Deprecated `craft\\helpers\\Stringy`.\n- Deprecated `craft\\queue\\jobs\\DeleteStaleTemplateCaches`.\n- Deprecated `craft\\services\\ElementIndexes::getAvailableTableFields()`. `getSourceTableAttributes()` should be used instead.\n- Deprecated `craft\\services\\Fields::assembleLayout()`.\n- Deprecated `craft\\services\\Gql::getAllPermissions()`. `craft\\services\\Gql::getAllSchemaComponents()` should be used instead.\n- Deprecated `craft\\services\\ProjectConfig::CONFIG_ALL_KEY`.\n- Deprecated `craft\\services\\ProjectConfig::CONFIG_KEY`.\n- Deprecated `craft\\services\\TemplateCaches::deleteAllCaches()`. `craft\\services\\Elements::invalidateAllCaches()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCacheById()`.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElement()`. `craft\\services\\Elements::invalidateCachesForElement()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElementId()`. `craft\\services\\Elements::invalidateCachesForElement()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElementQuery()`. `craft\\services\\Elements::invalidateCachesForElementType()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElementType()`. `craft\\services\\Elements::invalidateCachesForElementType()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByKey()`.\n- Deprecated `craft\\services\\TemplateCaches::deleteExpiredCaches()`.\n- Deprecated `craft\\services\\TemplateCaches::deleteExpiredCachesIfOverdue()`.\n- Deprecated `craft\\services\\TemplateCaches::EVENT_AFTER_DELETE_CACHES`.\n- Deprecated `craft\\services\\TemplateCaches::EVENT_BEFORE_DELETE_CACHES`.\n- Deprecated `craft\\services\\TemplateCaches::handleResponse()`.\n- Deprecated `craft\\services\\TemplateCaches::includeElementInTemplateCaches()`.\n- Deprecated `craft\\services\\TemplateCaches::includeElementQueryInTemplateCaches()`.\n- Deprecated `craft\\web\\AssetBundle::dotJs()`.\n- Deprecated `craft\\web\\AssetBundle::useCompressedJs()`.\n- Deprecated `craft\\web\\User::destroyDebugPreferencesInSession()`.\n- Deprecated `craft\\web\\User::saveDebugPreferencesToSession()`.\n- Deprecated `craft\\web\\View::formatInputId()`. `craft\\helpers\\Html::namespaceHtml()` should be used instead.\n\n### Removed\n- Removed the \u201cTemplate caches\u201d option from the Clear Caches tool and `clear-caches` command.\n- Removed the [Interactive Shell Extension for Yii 2](https://github.com/yiisoft/yii2-shell), as it\u2019s now a dev dependency of the `craftcms/craft` project instead. ([#5783](https://github.com/craftcms/cms/issues/5783))\n- Removed support for the `import` directive in project config files.\n- Removed the `cacheElementQueries` config setting.\n- Removed the `entries/_fields.html` control panel template.\n- Removed the `entries/_titlefield.html` control panel template.\n- Removed `craft\\controllers\\UtilitiesController::actionDbBackupPerformAction()`.\n- Removed `craft\\db\\MigrationManager::TYPE_APP`.\n- Removed `craft\\db\\MigrationManager::TYPE_CONTENT`.\n- Removed `craft\\db\\MigrationManager::TYPE_PLUGIN`.\n- Removed `craft\\models\\EntryType::$titleLabel`.\n- Removed `craft\\models\\Info::$configMap`.\n- Removed `craft\\records\\Migration`.\n- Removed `craft\\records\\Plugin::getMigrations()`.\n\n### Fixed\n- Fixed a bug where the `mailer/test` command wasn\u2019t factoring in custom `mailer` configurations in its settings report. ([#5763](https://github.com/craftcms/cms/issues/5763))\n- Fixed a bug where some characters were getting double-encoded in Assets fields\u2019 \u201cDefault Upload Location\u201d/\u201cUpload Location\u201d setting. ([#5885](https://github.com/craftcms/cms/issues/5885))\n- Fixed a bug where the `svg()` Twig function wasn\u2019t namespacing ID and class name CSS selectors that didn\u2019t have any matching `id`/`class` attribute values. ([#5922](https://github.com/craftcms/cms/issues/5922))\n- Fixed a bug where `users/set-password` and `users/verify-email` requests weren\u2019t responding with JSON when requested, if an invalid verification code was passed. ([#5210](https://github.com/craftcms/cms/issues/5210))\n- Fixed a bug where it wasn\u2019t possible to filter elements using a Lightswitch field via GraphQL. ([#5930](https://github.com/craftcms/cms/issues/5930))\n- Fixed an error that could occur when saving template caches. ([#2674](https://github.com/craftcms/cms/issues/2674))\n- When previewing an image asset on a non-public volume, the image is no longer published to the `cpresources` folder. ([#6093](https://github.com/craftcms/cms/issues/6093)\n- Fixed a bug where Entry Edit pages would start showing a tab bar after switching entry types, even if the new entry type only had one content tab.\n- Fixed a SQL error that could occur when applying project config changes due to unique constraints. ([#5946](https://github.com/craftcms/cms/issues/5946))\n- Fixed a bug where element actions weren\u2019t always getting configured properly if an element type defined multiple actions of the same type.\n- Fixed a browser console warning about `axios.min.map` not loading. ([#6506](https://github.com/craftcms/cms/issues/6506))\n- Fixed a SQL error that could occur when updating to Craft 3 from Craft 2.6.2984 or later, if there were multiple routes with the same URI pattern.\n- Fixed a bug where Craft was exiting with a 200 status code if the `license.key` file didn\u2019t contain a valid license key, and wasn\u2019t writable. ([#6475](https://github.com/craftcms/cms/issues/6475))\n- Fixed a PHP error that would occur when calling `craft\\web\\User::guestRequired()` if a user was logged in. ([#6497](https://github.com/craftcms/cms/issues/6497))\n- Fixed an error that occurred if a user photo was deleted and replaced in the same request. ([#6491](https://github.com/craftcms/cms/issues/6491))\n- Fixed a bug where `craft\\web\\Request::getFullPath()` wasn\u2019t including any URI segments defined by the site\u2019s base URL. ([#6546](https://github.com/craftcms/cms/issues/6546))\n\n### Security\n- The `_includes/forms/checkbox.html`, `checkboxGroup.html`, and `checkboxSelect.html` control panel templates now HTML-encode checkbox labels by default, preventing possible XSS vulnerabilities. If HTML code was desired, it must be passed through the new `raw()` function first.\n- `craft\\web\\View::evaluateDynamicContent()` can no longer be called by default. ([#6185](https://github.com/craftcms/cms/pull/6185))\n\n## 3.4.30 - 2020-07-28\n\n### Changed\n- Improved support for nesting Matrix fields within other fields.\n\n### Fixed\n- Fixed a bug where assets uploaded by front-end entry forms weren\u2019t getting saved with the `uploaderId` attribute. ([#6456](https://github.com/craftcms/cms/issues/6456))\n- Fixed a bug where Matrix blocks weren\u2019t always propagating to newly-enabled sites right away.\n\n## 3.4.29.1 - 2020-07-22\n\n### Fixed\n- Fixed a bug where the `entries/save-entry` action wasn\u2019t working for updating existing entries on front-end forms. ([#6430](https://github.com/craftcms/cms/issues/6430))\n\n## 3.4.29 - 2020-07-21\n\n### Added\n- Added `craft\\errors\\ElementException`.\n- Added `craft\\errors\\UnsupportedSiteException`.\n- Added `craft\\services\\Path::getTestsPath()`.\n\n### Changed\n- `craft\\services\\Elements` methods now throw `craft\\errors\\UnsupportedSiteException` errors when attempting to perform an element operation for an unsupported site.\n\n### Fixed\n- Fixed a bug where entry data could get corrupted when a newly-created draft was autosaved. ([#6344](https://github.com/craftcms/cms/issues/6344))\n- Fixed a PHP error that would occur when using the `craft fixture` console command. ([#6331](https://github.com/craftcms/cms/issues/6331))\n- Fixed a bug where requesting an asset transform via GraphQL API would ignore the `transformGifs` config setting. ([#6407](https://github.com/craftcms/cms/issues/6407))\n- Fixed a bug where \u201cApplying new propagation method to Matrix blocks\u201d jobs could fail if a Matrix block existed for a site that its owner didn\u2019t support.\n\n## 3.4.28.1 - 2020-07-16\n\n### Fixed\n- Fixed a PHP error that occurred when attempting to create a volume folder that already exists.\n\n## 3.4.28 - 2020-07-16\n\n### Added\n- Added the `inlineOnly` argument to the `markdown` GraphQL directive, which can be used to specify that only inline element markdown should be processed. ([#6353](https://github.com/craftcms/cms/pull/6353))\n- Added `craft\\services\\AssetIndexer::deleteStaleIndexingData()`.\n\n### Changed\n- Craft no longer throws an exception when attempting to create a volume folder that already exists. ([#6394](https://github.com/craftcms/cms/issues/6394))\n- Improved error handling when asset transform generation fails. ([#6357](https://github.com/craftcms/cms/issues/6357))\n\n### Fixed\n- Fixed compatibility with MySQL 8.0.21. ([#6379](https://github.com/craftcms/cms/issues/6379))\n- Fixed an error that would occur when backing up a MySQL 5 database using `mysqldump` v8. ([#6368](https://github.com/craftcms/cms/issues/6368))\n- Fixed a bug where rebuilding the project config without an existing `project.yaml` file could result in data loss. ([#6350](https://github.com/craftcms/cms/issues/6350))\n- Fixed a bug where eager loading relations across multiple sites wasn\u2019t working. ([#6366](https://github.com/craftcms/cms/issues/6366))\n- Fixed a bug where it was not always possible to use the `relatedToAll` argument with GraphQL queries. ([#6343](https://github.com/craftcms/cms/issues/6343))\n- Fixed a bug where orphan rows could be left in the `elements` table after deleting an asset folder. ([#6326](https://github.com/craftcms/cms/issues/6326))\n- Fixed a bug where the asset indexer would wasn\u2019t skipping files with disallowed file extensions.\n- Fixed a bug where the asset indexer wasn\u2019t handling missing volume folders properly.\n- Fixed a bug where the asset indexer wasn\u2019t cleaning up after itself.\n- Fixed a bug where the Asset Indexes utility could display a \u201cDelete them\u201d button even if there were no files or folders to delete.\n- Fixed a bug where the \u201cDrafts\u201d status option wasn\u2019t showing up on the Entries index page, if unsaved entry drafts only existed in a non-primary site. ([#6370](https://github.com/craftcms/cms/issues/6370))\n- Fixed a bug where Live Preview wouldn\u2019t open after it had been previously closed, if the active target was configured with `refresh: false`. ([#6356](https://github.com/craftcms/cms/issues/6356))\n- Fixed a bug where it wasn\u2019t possible to change a disabled plugin\u2019s license key. ([#4525](https://github.com/craftcms/cms/issues/4525))\n- Fixed a bug where all Title fields within Quick Post widgets had the same input ID.\n- Fixed a bug where `craft\\helpers\\FileHelper::getMimeType()` could return the wrong MIME type for SVG files. ([#6351](https://github.com/craftcms/cms/issues/6351))\n- Fixed a bug where the `setup/db-creds` command was ignoring the `port` option. ([#6339](https://github.com/craftcms/cms/issues/6339))\n- Fixed a bug where it wasn\u2019t possible to install a plugin via the `install/plugin` command when the `allowAdminChanges` config setting was disabled. ([#6329](https://github.com/craftcms/cms/issues/6329))\n- Fixed a bug where site-specific tests were not able to properly use `craft\\test\\fixtures\\elements\\AssetFixture`. ([#6309](https://github.com/craftcms/cms/issues/6309))\n- Fixed a PHP error that could occur when using `craft\\test\\TestMailer` in some scenarios. ([#6259](https://github.com/craftcms/cms/issues/6259))\n\n## 3.4.27 - 2020-07-03\n\n### Changed\n- Improved the performance of structured element index views.\n\n### Fixed\n- Fixed a bug where Structure section entries would get repositioned after a revision was reverted. ([#6313](https://github.com/craftcms/cms/issues/6313))\n- Fixed an unexpected PHP error that could occur if `craft\\helpers\\FileHelper::writeToFile()` was unable to acquire a lock. ([#6315](https://github.com/craftcms/cms/issues/6315))\n- Fixed a bug where eager loading from GraphQL could break if using named fragments inside matrix fields. ([#6294](https://github.com/craftcms/cms/issues/6294))\n- Fixed a bug where associative array values within the project config could get duplicated. ([#6317](https://github.com/craftcms/cms/issues/6317))\n\n## 3.4.26 - 2020-07-01\n\n### Added\n- Added the `utils/repair/project-config` command, which repairs double-packed associative arrays in the project config. ([#5533](https://github.com/craftcms/cms/issues/5533))\n\n### Changed\n- The `graphql/api` action now checks for the access token in all `Authorization` headers, as well as all comma-separated values in each individual `Authorization` header.\n- The `users/set-password` and `users/save-user` actions now include a `csrfTokenValue` key in their JSON responses for Ajax requests, if the user was logged in during the request. ([#6283](https://github.com/craftcms/cms/issues/6283))\n- Improved performance when handling asset uploads that conflict with an existing file. ([#6253](https://github.com/craftcms/cms/issues/6253))\n- `craft\\elements\\User::getCpEditUrl()` no longer returns `myaccount` for the currently logged-in user when the method is called from the front end. ([#6275](https://github.com/craftcms/cms/issues/6275))\n- `craft\\elements\\Asset::getUrl()` now has a `$generateNow` argument. ([#2103](https://github.com/craftcms/cms/issues/2103))\n\n### Fixed\n- Fixed a JavaScript error that occurred when clicking the \u201cExport\u2026\u201d button, on a view that had no bulk actions. ([#6183](https://github.com/craftcms/cms/issues/6183))\n- Fixed a bug where custom field values could be autosaved incorrectly. ([#6258](https://github.com/craftcms/cms/issues/6258))\n- Fixed a PHP error that could occur when saving a GraphQL schema, if there were any validation errors.\n- Fixed a bug where Craft\u2019s `TestMailer` class was not available for tests under some cicrumstances. ([#6263](https://github.com/craftcms/cms/pull/6263))\n- Fixed a bug where clicking the info icons on the Clear Caches utility would toggle their checkbox\u2019s state.\n- Fixed a bug where Matrix blocks could be duplicated after a new site was added, when they should have been propagated from a preexisting site instead. ([#6244](https://github.com/craftcms/cms/issues/6244))\n- Fixed a bug where it wasn\u2019t possible to revoke all permissions from a user. ([#6292](https://github.com/craftcms/cms/issues/6292))\n- Fixed a bug where Craft wasn\u2019t saving new search indexes after a new site was added to a section. ([#6296](https://github.com/craftcms/cms/issues/6296))\n- Fixed a bug where it was possible for associative arrays in the project config to get double-packed, resulting in nested `__assoc__` keys. ([#5533](https://github.com/craftcms/cms/issues/5533))\n- Fixed a bug where `index-assets` commands would error out if a file was moved/deleted within the volume after the index process had started. ([#6291](https://github.com/craftcms/cms/issues/6291))\n\n## 3.4.25 - 2020-06-23\n\n### Added\n- Added the `setup/app-id` command. ([#6249](https://github.com/craftcms/cms/issues/6249))\n- Added `craft\\db\\PrimaryReplicaTrait`, which adds `primary`/`replica` properties and methods to `craft\\db\\Connection`, as alternatives to `master`/`slave`. ([yiisoft/yii2#18102](https://github.com/yiisoft/yii2/pull/18102))\n\n### Changed\n- Element query `title` params are now case-insensitive.\n- `craft\\helpers\\Db::escapeParam()` now escapes operators.\n- The `templatecacheelements` table now has a primary key on new installs. ([#6246](https://github.com/craftcms/cms/issues/6246))\n\n### Fixed\n- Fixed a bug where new user groups weren\u2019t getting set on user accounts in time for activation email templates to reference them. ([#6225](https://github.com/craftcms/cms/issues/6225))\n- Fixed an error that occurred when adding multiple tags that began with the word \u201cnot\u201d.\n- Fixed a bug where it was possible to create two tags with the same title, but different casing. ([#6229](https://github.com/craftcms/cms/issues/6229))\n- Fixed a bug where the `migrate/all` command would create a `migrations/` folder for no good reason. ([#6220](https://github.com/craftcms/cms/issues/6220))\n- Fixed an error that could occur during installation, if an old database schema data was cached.\n- Fixed a bug where transform aspect ratios could be ignored. ([#6084](https://github.com/craftcms/cms/issues/6084))\n- Fixed a bug where no sections or category groups were considered \u201ceditable\u201d, and no volumes were considered \u201cviewable\u201d for console requests. ([#6237](https://github.com/craftcms/cms/issues/6237))\n- Fixed an error that could occur when syncing the project config, if a Single entry didn\u2019t validate due to a duplicate URI. ([#4369](https://github.com/craftcms/cms/issues/4369))\n- Fixed a bug where a \u201cCouldn\u2019t change Craft CMS edition\u201d notice would be displayed after successfully switching the Craft edition.\n- Fixed a bug where Structure section entries would get repositioned after their draft was published. ([#6250](https://github.com/craftcms/cms/issues/6250))\n\n## 3.4.24 - 2020-06-16\n\n### Added\n- Added the `utils/repair/section-structure` and `utils/repair/category-group-structure` commands, which can be used to repair structure data, or apply a new Max Levels setting to existing elements.\n- Added `craft\\console\\controllers\\utils\\RepairController`.\n- Added `craft\\controllers\\DashboardController::actionCacheFeedData()`.\n- Added `craft\\fields\\BaseOptionsField::options()`.\n\n### Changed\n- `graphql/api` preflight requests now include `X-Craft-Token` in the `Access-Control-Allow-Headers` response header. ([#6207](https://github.com/craftcms/cms/issues/6207))\n- `craft\\services\\Elements::duplicateElements()` no longer attempts to insert duplicated elements into the source element\u2019s structure, if the duplicated element doesn\u2019t have a `structureId`. ([#6205](https://github.com/craftcms/cms/issues/6205))\n\n### Deprecated\n- Deprecated support for passing a `userRegisteredNotice` param to `users/save-user` actions. A hashed `successMessage` param should be passed instead. ([#6192](https://github.com/craftcms/cms/issues/6192))\n- Deprecated `craft\\controllers\\DashboardController::actionGetFeedItems()`.\n- Deprecated `craft\\fields\\BaseOptionsField::optionLabel()`.\n- Deprecated `craft\\services\\Feeds`.\n\n### Fixed\n- Fixed a bug where new entries that were saved with a disabled parent entry wouldn\u2019t get added to the structure, resulting in a 404 error when accessing their edit page. ([#6204](https://github.com/craftcms/cms/issues/6204))\n- Fixed a bug where the system could become unresponsive while loading feed data, if the feed\u2019s server was unresponsive.\n- Fixed a styling issue with the query dropdown menu in the GraphiQL client. ([#6215](https://github.com/craftcms/cms/issues/6215))\n- Fixed a bug where \u201cDeselect All\u201d buttons in user permission lists could enable group-defined permission. ([#6211](https://github.com/craftcms/cms/issues/6211))\n- Fixed an error that occurred when replacing an asset that conflicted with an existing file that was missing from the index. ([#6216](https://github.com/craftcms/cms/issues/6216))\n\n### Security\n- Fixed potential XSS vulnerabilities.\n\n## 3.4.23 - 2020-06-09\n\n### Added\n- Added `Craft.DraftEditor::pause()` and `resume()`, which should be called on the `window.draftEditor` instance (if it exists) before and after making DOM changes that don\u2019t happen immediately (e.g. after an animation has completed). ([#6154](https://github.com/craftcms/cms/issues/6154))\n\n### Changed\n- Improved the styling of Live Preview.\n- Local volumes now respect the `defaultFileMode` and `defaultDirMod` config settings. ([#4251](https://github.com/craftcms/cms/pull/4251))\n- Craft no longer logs unnecessary warnings when loading remote images\u2019 thumbnails. ([#6166](https://github.com/craftcms/cms/pull/6166))\n- Matrix fields no longer create default blocks if the field has any validation errors. ([#6173](https://github.com/craftcms/cms/issues/6173))\n- The `setup` command and web-based installer now set `DB_DRIVER`, `DB_SERVER`, `DB_PORT`, and `DB_DATABASE` environment variables, if a `DB_DSN` environment variable isn\u2019t already defined. ([#6159](https://github.com/craftcms/cms/issues/6159))\n\n### Fixed\n- Fixed a race condition that could result in lost Matrix content when a new Matrix block was added from Live Preview, under very specific conditions. ([#6154](https://github.com/craftcms/cms/issues/6154))\n- Fixed a bug where the built-in GraphQL client would not work on some environments.\n- Fixed a bug where newly-added entries and entry drafts wouldn\u2019t remember their new parent entry selection when published. ([#6168](https://github.com/craftcms/cms/issues/6168))\n- Fixed a bug where switching the site within an element selection modal would affect which site is shown by default on element index pages. ([#6174](https://github.com/craftcms/cms/issues/6174))\n- Fixed a bug where `setup` and `clear-caches` commands weren\u2019t respecting the `--color` option. ([#6178](https://github.com/craftcms/cms/issues/6178))\n- Fixed a bug where an exception message would be shown instead of the web-based installer on Craft Nitro.\n- Fixed an error that occurred when uploading an asset that conflicted with an existing file that was missing from the index. ([#6193](https://github.com/craftcms/cms/issues/6193))\n\n### Security\n- Fixed a server path disclosure bug in the control panel.\n\n## 3.4.22.1 - 2020-05-30\n\n### Added\n- Added `craft\\image\\SvgAllowedAttributes`.\n\n### Changed\n- SVG sanitization now allows the `filterUnits` attribute.\n\n### Fixed\n- Fixed an error that could occur when rendering field type settings, if the field\u2019s `getSettingsHtml()` method was expecting to be called from a Twig template.\n\n## 3.4.22 - 2020-05-29\n\n### Added\n- Added `craft\\controllers\\FieldsController::actionRenderSettings()`.\n- Added `craft\\web\\assets\\fieldsettings\\FieldSettingsAsset`.\n\n### Changed\n- Field settings are now lazy-loaded when the Field Type selection changes, improving the up-front load time of Edit Field pages. ([#5792](https://github.com/craftcms/cms/issues/5792))\n- The URL of the conflicting asset is now returned when uploading a file via the `assets/upload` action. ([#6158](https://github.com/craftcms/cms/issues/6158))\n- Craft no longer minifies JavaScript and CSS by default. ([#5792](https://github.com/craftcms/cms/issues/5792))\n\n### Deprecated\n- Deprecated `craft\\web\\assets\\positionselect\\PositionSelectAsset`.\n\n### Fixed\n- Fixed a PHP error that could occur when editing a non-image asset. ([#6162](https://github.com/craftcms/cms/issues/6162))\n- Fixed a bug where asset thumbnails could never load from Live Preview.\n\n## 3.4.21 - 2020-05-28\n\n### Added\n- Table fields and other editable tables now support pasting in tabular data. ([#1207](https://github.com/craftcms/cms/issues/1207))\n- Added the \u201cAllow self relations\u201d advanced setting to relational fields. ([#6113](https://github.com/craftcms/cms/issues/6113))\n- Added `craft\\helpers\\Assets::scaledDimensions()`.\n- Added `craft\\services\\Structures::MODE_AUTO`.\n- Added `craft\\services\\Structures::MODE_INSERT`.\n- Added `craft\\services\\Structures::MODE_UPDATE`.\n\n### Changed\n- Thumbnails now use the same aspect ratio as the source image. ([#5518](https://github.com/craftcms/cms/issues/5518), [#5515](https://github.com/craftcms/cms/issues/5515))\n- Thumbnails now get a checkered background to reveal image transparency. ([#6151](https://github.com/craftcms/cms/issues/6151))\n- Thumbnails in the control panel now only load once they are in view, or close to it. ([#6104](https://github.com/craftcms/cms/issues/6104))\n- Modal backdrops no longer blur the page content. ([#5651](https://github.com/craftcms/cms/issues/5651))\n- Date + time inputs now have a close button when they have a value. ([#6124](https://github.com/craftcms/cms/issues/6124))\n- The suggested filename is now returned when uploading a file via the `assets/upload` action. ([#6099](https://github.com/craftcms/cms/issues/6099))\n- Table fields now support setting cell values by column handle, rather than just by column ID. ([#6119](https://github.com/craftcms/cms/issues/6119))\n- `craft\\services\\Structures::append()` now allows an integer to be passed to its `$parentElement` argument.\n- `craft\\services\\Structures::moveAfter()` now allows an integer to be passed to its `$prevElement` argument.\n- `craft\\services\\Structures::moveBefore()` now allows an integer to be passed to its `$nextElement` argument.\n- `craft\\services\\Structures::prepend()` now allows an integer to be passed to its `$parentElement` argument.\n- `craft\\config\\DbConfig::$url`, `$driver`, `$server`, `$port`, `$unixSocket`, and `$database` are no longer deprecated. ([#6159](https://github.com/craftcms/cms/issues/6159))\n\n### Deprecated\n- Deprecated `craft\\db\\Connection::getVersion()`. `yii\\base\\Schema::getServerVersion()` should be used instead.\n- Deprecated `craft\\events\\GlobalSetContentEvent`.\n\n### Fixed\n- Fixed a bug where non-sortable fields could be listed as element index sort options, and sortable fields could be listed twice, for element types that didn\u2019t override the `defineSortOptions()` method.\n- Fixed a bug where asset custom field values could go unsaved. ([#6086](https://github.com/craftcms/cms/issues/6086))\n- Fixed a bug where the `upscaleImages` config setting wasn\u2019t applying properly. ([#6084](https://github.com/craftcms/cms/issues/6084))\n- Fixed a bug where image thumbnails in the control panel could stop loading if three thumbnails failed to load properly.\n- Fixed a bug where clicking on the color preview within Color fields wasn\u2019t opening the browser\u2019s color picker in Safari. ([#6107](https://github.com/craftcms/cms/issues/6107))\n- Fixed a bug where the \u201cPublish changes\u201d button label was not getting translated after clicking \u201cSave as a draft\u201d on an Edit Entry page. ([#6112](https://github.com/craftcms/cms/issues/6112))\n- Fixed a couple errors that could occur when running console commands via Cron. ([#6102](https://github.com/craftcms/cms/issues/6102))\n- Fixed a bug in test fixtures where primary keys were not being detected for relational fields. ([#6103](https://github.com/craftcms/cms/pull/6103))\n- Fixed a bug where duplicated Structure entries wouldn\u2019t retain the original entries\u2019 structure when a new propagation method was being applied to the section. ([#6115](https://github.com/craftcms/cms/issues/6115))\n- Fixed a bug where assets would cause n+1 queries even when eager-loaded. ([#6140](https://github.com/craftcms/cms/issues/6140))\n- Fixed a validation error that could occur when saving an element with a Dropdown field, if the value of the Dropdown field\u2019s first option had changed. ([#6148](https://github.com/craftcms/cms/issues/6148))\n- Fixed a bug where Craft was serving 503 errors instead of 403 when the system was online and an action was requested that didn\u2019t allow anonymous access. ([#6149](https://github.com/craftcms/cms/pull/6149))\n- Fixed a bug where Craft was not correctly encoding rounded float values for storage in project config. ([#6121](https://github.com/craftcms/cms/issues/6121))\n- Fixed a bug where progress bars in a pending state appeared to be fully complete. ([#6156](https://github.com/craftcms/cms/issues/6156))\n\n## 3.4.20 - 2020-05-18\n\n### Changed\n- The `users/login` action no longer adds a random delay to the request for successful login attempts. ([#6090](https://github.com/craftcms/cms/pull/6090))\n- `craft\\web\\View::renderObjectTemplate()` now supports wrapping function calls in single curly brace delimiters (e.g. `{clone(variable)}`).\n- Element fixtures now support the `field:handle` syntax when generating element queries. ([#5929](https://github.com/craftcms/cms/pull/5929))\n- \u201cFirst draft\u201d is now translatable. ([#6096](https://github.com/craftcms/cms/pull/6096))\n\n### Fixed\n- Fixed a bug where custom field names weren\u2019t getting translated in element index sort menus. ([#6073](https://github.com/craftcms/cms/issues/6073))\n- Fixed a bug where the Plugin Store could incorrectly report license key statuses. ([#6079](https://github.com/craftcms/cms/issues/6079))\n- Fixed an error that could occur when creating a new entry, if the section\u2019s Entry URI Format contained `{sourceId}`. ([#6080](https://github.com/craftcms/cms/issues/6080))\n- Fixed a bug where some UI elements were sized incorrectly while being dragged.\n- Fixed a bug where custom aliases were not automatically registered for tests. ([#5932](https://github.com/craftcms/cms/issues/5932))\n\n## 3.4.19.1 - 2020-05-13\n\n### Changed\n- Entries no longer apply their dynamic titles if the result of the Title Format is an empty string. ([#6051](https://github.com/craftcms/cms/issues/6051))\n\n### Fixed\n- Fixed a bug where the site selector wasn\u2019t working when adding related elements to a relational field.\n- Fixed an error that could occur when adding related elements to a relational field.\n\n## 3.4.19 - 2020-05-12\n\n### Added\n- Added `craft\\fields\\BaseRelationField::inputSiteId()`.\n- Added `craft\\helpers\\App::isNitro()`.\n\n### Changed\n- The web-based installer now defaults the database server to `127.0.0.1` instead of `localhost`.\n- The web-based installer and `setup` command now skip asking for the database server name/IP, username, and password, if they are able to detect that Craft is running within Nitro.\n- `craft\\web\\View::renderObjectTemplate()` now injects `{% verbatim %}` tags around inline code and code blocks, preventing their contents from being parsed by Twig.\n- Updated jQuery to 3.5.1. ([#6039](https://github.com/craftcms/cms/issues/6039))\n\n### Fixed\n- Fixed a 403 error that occurred when a user double-clicked on an asset immediately after selecting it in an Assets field, if they didn\u2019t have access to the primary site. ([#5949](https://github.com/craftcms/cms/issues/5949))\n- Fixed a bug where `resave/*` commands\u2019 output didn\u2019t take the limit into account. ([#6036](https://github.com/craftcms/cms/issues/6036))\n- Fixed an error that could occur when processing project config changes that included deleted user groups. ([#6011](https://github.com/craftcms/cms/issues/6011))\n- Fixed a bug where Date/Time fields weren\u2019t taking their \u201cShow date\u201d/\u201cShow time\u201d settings into account when displaying their values in element indexes. ([#6038](https://github.com/craftcms/cms/issues/6038))\n- Fixed a PHP error that occurred when requesting the GraphQL API with a token that didn\u2019t have a schema assigned to it. ([#6043](https://github.com/craftcms/cms/issues/6043))\n- Fixed a bug where Single sections\u2019 entry type handles weren\u2019t getting updated if both the section name and handle changed at the same time. ([#6044](https://github.com/craftcms/cms/issues/6044))\n- Fixed a bug where updating a transform would not bust the generated transform caches on volumes with the `expires` setting set.\n- Fixed a bug where it wasn\u2019t possible to create new Dashboard widgets that had settings.\n- Fixed a bug where relational fields weren\u2019t always showing related elements in the selected site on element indexes. ([#6052](https://github.com/craftcms/cms/issues/6052))\n- Fixed various UI bugs related to breaking changes in jQuery 3.5. ([#6049](https://github.com/craftcms/cms/issues/6049), [#6053](https://github.com/craftcms/cms/issues/6053))\n- Fixed a bug where disabled multi-site entries would become enabled if they became single-site entries per a change to their section\u2019s Propagation Method setting. ([#6054](https://github.com/craftcms/cms/issues/6054))\n- Fixed a bug where it wasn\u2019t possible to double-click on Single entries to edit them. ([#6058](https://github.com/craftcms/cms/issues/6058))\n- Fixed a bug where querying for disabled elements wouldn\u2019t include elements that were disabled for the current site.\n\n### Security\n- Fixed a bug where database connection details were getting cached. ([#6047](https://github.com/craftcms/cms/issues/6047))\n\n## 3.4.18 - 2020-05-05\n\n### Added\n- Added the \u201cDelete asset\u201d option to the Save menu on Edit Asset pages. ([#6020](https://github.com/craftcms/cms/issues/6020))\n- Added `craft\\helpers\\App::env()`. ([#5893](https://github.com/craftcms/cms/pull/5893))\n\n### Changed\n- Template autosuggest fields no longer suggest files within `node_modules/` folders. ([#4122](https://github.com/craftcms/cms/pull/4122))\n- Matrix fields now ensure that they have at least one block type on validation. ([#5996](https://github.com/craftcms/cms/issues/5996))\n- Number fields\u2019 Default Value, Min Value, and Max Value settings now support localized number formats. ([#6006](https://github.com/craftcms/cms/issues/6006))\n- Element select inputs\u2019 `selectElements` events now contain references to the newly created element, rather than the one in the element selector modal.\n- Users are now redirected back to the Assets index page after saving an asset from its edit page.\n- Updated Yii to 2.0.35.\n- Updated jQuery to 3.5.0.\n\n### Fixed\n- Fixed a bug where relational fields wouldn\u2019t eager load some relations if the field was set to manage relations on a per-site basis, and the source elements were from a variety of sites.\n- Fixed a bug where relational fields wouldn\u2019t eager load cross-site relations even if a target site had been selected in the field settings. ([#5995](https://github.com/craftcms/cms/issues/5995))\n- Fixed a bug where relational fields weren\u2019t showing cross-site relations in element indexes.\n- Fixed a bug where Assets fields weren\u2019t showing custom asset sources. ([#5983](https://github.com/craftcms/cms/issues/5983))\n- Fixed a bug where Craft wasn\u2019t clearing the database schema cache after migrations were run.\n- Fixed a bug where Structure entry drafts were including the current entry in the Parent selection options.\n- Fixed a bug where users\u2019 emails could be overridden by a previously-entered, unverified email, if an admin overwrote their email after it was set. ([#6001](https://github.com/craftcms/cms/issues/6001))\n- Fixed a bug where Number fields weren\u2019t ensuring that their Default Value setting was a number. ([#6006](https://github.com/craftcms/cms/issues/6006))\n- Fixed a bug where checkboxes\u2019 state persisted after an admin table row was deleted. ([#6018](https://github.com/craftcms/cms/issues/6018))\n- Fixed a bug where the `autoLoginAfterAccountActivation` and `activateAccountSuccessPath` config settings weren\u2019t being respected after users verified their email. ([#5980](https://github.com/craftcms/cms/issues/5980))\n- Fixed a bug where the \u201cPreview file\u201d asset action wasn\u2019t available if any other elements were being displayed in the table row (e.g. the file\u2019s uploader or any relations). ([#6012](https://github.com/craftcms/cms/issues/6012))\n- Fixed a bug where `update` commands could time out when running migrations or reverting Composer changes. ([#6021](https://github.com/craftcms/cms/pull/6021))\n- Fixed a bug where source/owner elements could be selectable in relational fields. ([#6016](https://github.com/craftcms/cms/issues/6016))\n- Fixed a bug where relational fields weren\u2019t ignoring disabled and soft-deleted elements when `:empty:` or `:notempty:` were passed to their element query params. ([#6026](https://github.com/craftcms/cms/issues/6026))\n- Fixed a bug where Matrix fields weren\u2019t ignoring disabled blocks when `:empty:` or `:notempty:` were passed to their element query params. ([#6026](https://github.com/craftcms/cms/issues/6026))\n\n## 3.4.17.1 - 2020-04-25\n\n### Fixed\n- Fixed a JavaScript error that occurred when attempting to save an asset from an element editor HUD. ([#5970](https://github.com/craftcms/cms/issues/5970))\n\n## 3.4.17 - 2020-04-24\n\n### Added\n- The control panel is now translated for Swiss German. ([#5957](https://github.com/craftcms/cms/issues/5957))\n\n### Changed\n- Craft now fully logs migration exceptions.\n\n### Fixed\n- Fix a bug where Project Config would not rebuild GraphQL schemas correctly. ([#5961](https://github.com/craftcms/cms/issues/5961))\n- Fixed an error that would occur when uploading an asset, if its `getUrl()` method was called before it was fully saved.\n- Fixed a bug where the `relatedTo` element query param wasn\u2019t filtering out relations that belonged to disabled Matrix blocks, if the relations were being fetched by the target element. ([#5951](https://github.com/craftcms/cms/issues/5951))\n- Fixed a bug where `craft\\base\\Element::getDescendants()` would return all descendants if they had been eager-loaded, even if the `$dist` argument was set.\n- Fixed a bug where element editor HUDs could forget to submit content changes if a validation error occurred. ([#5966](https://github.com/craftcms/cms/issues/5966))\n\n## 3.4.16 - 2020-04-20\n\n### Added\n- Added `craft\\events\\ElementCriteriaEvent`.\n- Added `craft\\fields\\BaseRelationField::EVENT_DEFINE_SELECTION_CRITERIA`. ([#4299](https://github.com/craftcms/cms/issues/4299))\n- Added `craft\\helpers\\FileHelper::unlink()`, ensuring that it always returns `false` rather than throwing unexpected exceptions.\n\n### Changed\n- Improved Plugin Store performance.\n- Asset indexes now show the \u201cLink\u201d column by default. ([#5910](https://github.com/craftcms/cms/pull/5910))\n- Element editors no longer close automatically when the <kbd>Esc</kbd> key is pressed or the shade is clicked on.\n- Element editors now support <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> save shortcuts.\n- Static element views now show custom fields\u2019 instructions. ([#5928](https://github.com/craftcms/cms/issues/5928))\n- When upgrading to Craft 3, sites now maintain the same UIDs as the Craft 2 locales they replace. ([#5914](https://github.com/craftcms/cms/issues/5914))\n- Craft now sets the `access-control-allow-origin` header to `*` rather than the incoming request\u2019s origin, for `graphql/api` and `live-preview/preview` requests. ([#4830](https://github.com/craftcms/cms/issues/4830))\n- Updated Garnish to 0.1.36.\n\n### Fixed\n- Fixed a bug where users weren\u2019t getting activated after verifying their email address, if a password was already set on their account. ([#5911](https://github.com/craftcms/cms/issues/5911))\n- Fixed an error that could occur when syncing a `project.yaml` file that restored a soft-deleted global set. ([#5915](https://github.com/craftcms/cms/issues/5915))\n- Fixed a bug where the `app/get-plugin-license-info` action was not parsing license key environment variables.\n- Fixed a bug where PHP would get itself into an infinite loop when minifying CSS with an unclosed block. ([#5912](https://github.com/craftcms/cms/issues/5912))\n- Fixed a bug where <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> save shortcuts would apply even if a modal or HUD was currently visible, potentially resulting in lost content changes. ([#5916](https://github.com/craftcms/cms/issues/5916))\n- Fixed an error that occurred when a user without permission to publish live entries attempted to create a new entry within an Entries field. ([#5917](https://github.com/craftcms/cms/issues/5917))\n- Fixed a bug where `craft\\services\\Assets::getFolderTreeByFolderId()` would ignore children folders. ([#5939](https://github.com/craftcms/cms/issues/5939))\n- Fixed a bug where it wasn\u2019t clear when a GraphQL token didn\u2019t have a selected schema, if its previous schema had been deleted. ([#5942](https://github.com/craftcms/cms/issues/5942))\n- Fixed a bug where the Plugin Store was not showing checkout errors.\n\n## 3.4.15 - 2020-04-09\n\n### Added\n- Categories now have a `url` field when queried via GraphQL.\n\n### Changed\n- Entry revision menus now list drafts sorted by date updated in descending order, and show the drafts\u2019 update timestamps. ([#5889](https://github.com/craftcms/cms/issues/5889))\n\n### Fixed\n- Fixed a bug where `craft\\i18n\\Formatter::asTimestamp()` and the `|timestamp` filter weren\u2019t returning weekday names for dates within the past 3-7 days.\n- Fixed a bug where `craft\\base\\Element::getCurrentRevision()` would return `null` when called on a draft or revision.\n- Fixed a bug where entry revision menus could list revisions out of order.\n\n## 3.4.14 - 2020-04-06\n\n### Added\n- Added the `setup/db-cache-table` command.\n- Added `craft\\cache\\DbCache`, which should be used instead of `yii\\caching\\DbCache` if storing data caches in the database. ([#5884](https://github.com/craftcms/cms/issues/5884))\n- Added `craft\\db\\Table::CACHE`.\n- Added `craft\\helpers\\Db::parseBooleanParam()`.\n\n### Changed\n- Craft now disables read/write splitting before applying new `project.yaml` changes. ([#5802](https://github.com/craftcms/cms/issues/5802))\n\n### Fixed\n- Fixed a PHP error that occurred when running the `project-config/rebuild` command, if no `project.yaml` file existed yet. ([#5888](https://github.com/craftcms/cms/pull/5888))\n- Fixed a bug where passing `'not 1'` or `:empty:` to a Lightswitch field\u2019s element query param would have the opposite effect that was intended. ([#5896](https://github.com/craftcms/cms/issues/5896))\n\n## 3.4.13 - 2020-04-02\n\n### Added\n- Added `craft\\models\\GqlToken::getIsValid()`.\n\n### Changed\n- Improved the 400 response messages returned by the `graphql/api` controller action, if the bearer token was missing or invalid.\n- Ajax requests sent with `Craft.sendActionRequest()` now have an `X-Requested-With: XMLHttpRequest` header. ([#5868](https://github.com/craftcms/cms/issues/5868))\n- `craft\\helpers\\Db::parseParam()` no longer assumes that `null` values within boolean columns should equate to `false`.\n\n### Fixed\n- Fixed a bug where Lightswitch element query params were filtering out entries that hadn\u2019t been saved since the Lightswitch field was added, if the field\u2019s default value was enabled. ([#5866](https://github.com/craftcms/cms/issues/5866))\n- Fixed an error that could occur if the `graphql/api` controller action wasn\u2019t able to determine which GraphQL schema to use.\n- Fixed an error that could occur when transforming images to exactly the same size. ([#5772](https://github.com/craftcms/cms/issues/5772))\n- Fixed an error that occurred when adding \u201cUpdating search indexes\u201d jobs to the queue, if the queue didn\u2019t support custom push priorities. ([#5876](https://github.com/craftcms/cms/issues/5876))\n\n## 3.4.12 - 2020-03-31\n\n### Added\n- Added the `utils/ascii-filenames` command, which converts all non-ASCII asset filenames to ASCII.\n- Added `craft\\services\\Deprecator::storeLogs()`.\n\n### Changed\n- \u201cUpdating search indexes\u201d jobs now get a lower priority than other jobs.\n- `craft\\base\\ApplicationTrait::getIsConnectionValid()` now logs exceptions thrown by `craft\\db\\Connection::open()`.\n- `craft\\base\\ApplicationTrait::getIsInstalled()` now logs exceptions thrown by `getInfo()`.\n- The `$siteId` argument of `craft\\services\\Elements::getElementById()` now accepts the same value types as element query `siteId` params. ([#5861](https://github.com/craftcms/cms/pull/5861))\n- It\u2019s no longer necessary to manually apply `craft\\behaviors\\SessionBehavior` to custom-defined `session` components, if using `craft\\helpers\\App::sessionConfig()` as a starting point.\n\n### Fixed\n- Fixed a bug where the `relatedTo` element query param wasn\u2019t filtering out relations that belonged to disabled Matrix blocks. ([#5849](https://github.com/craftcms/cms/issues/5849))\n- Fixed a bug where Craft wasn\u2019t ensuring that a `project.yaml` file exists before rebuilding the project config.\n- Fixed a bug where it was possible to create multiple tags with the same title. ([#5865](https://github.com/craftcms/cms/issues/5865))\n- Fixed a PHP error that occurred if any deprecated config settings were set.\n- Fixed a bug where the debug toolbar wasn\u2019t showing deprecation warnings if `craft\\services\\Deprecator::$logTarget` was set to `'logs'`.\n\n## 3.4.11 - 2020-03-26\n\n### Changed\n- Updated Yii to 2.0.34.\n\n### Fixed\n- Fixed an error that could occur during garbage collection if there were any unsaved drafts due to be purged, whose entry type had been deleted. ([#5820](https://github.com/craftcms/cms/issues/5820))\n- Fixed a bug where `craft\\helpers\\Console::outputWarning()` was mangling its output if the input text contained a line break.\n- Fixed a bug where activation emails were getting sent after user registration regardless of the \u201cSend an activation email now?\u201d setting, if the logged-in user didn\u2019t have permission to administrate users.\n- Fixed a bug where removing two elements from a relation field in rapid succession could trigger an element editor HUD. ([#5831](https://github.com/craftcms/cms/issues/5831))\n- Fixed a bug where setting a field\u2019s translation method to \u201cTranslate for each site group\u201d wouldn\u2019t work if the field type was changed at the same time. ([#5832](https://github.com/craftcms/cms/issues/5832))\n- Fixed a SQL error that could occur when installing Craft via the `craft setup` command, if using PostgreSQL. ([#5757](https://github.com/craftcms/cms/issues/5757))\n- Fixed a bug where content wasn\u2019t getting transferred correctly when deleting a user from the Users index page. ([#5838](https://github.com/craftcms/cms/issues/5838))\n\n## 3.4.10.1 - 2020-03-18\n\n### Fixed\n- Fixed an error that could occur when saving an asset. ([#5801](https://github.com/craftcms/cms/issues/5801))\n- Fixed a bug where field types\u2019 `afterSave()` methods weren\u2019t getting called if no top-level field settings had changed. ([#5803](https://github.com/craftcms/cms/issues/5803))\n\n## 3.4.10 - 2020-03-17\n\n### Added\n- Added `craft\\base\\Elements::markAsDirty()`.\n- Added `craft\\services\\Search::$useFullText`. ([#5696](https://github.com/craftcms/cms/issues/5696))\n\n### Changed\n- Category groups\u2019 category URI format settings are now shown when running Craft in headless mode. ([#5786](https://github.com/craftcms/cms/issues/5786))\n- Reduced the likelihood of a race condition that can result in a PHP error, if a request comes in between the time a field is saved with a new field handle, and the `info.fieldVersion` value is updated in the database. ([#5742](https://github.com/craftcms/cms/issues/5742))\n- `craft\\base\\ApplicationTrait::getIsInstalled()` now has a `$refresh` argument.\n- `craft\\base\\ApplicationTrait::saveInfo()` now has an `$attributeNames` argument.\n- The `$siteElement` argument of `craft\\services\\Elements::propagateElement()` can now be set to `false` to indicate that the element is known to not exist for the target site yet.\n- XML element exports now call all generic nodes `<item>`, instead of being named after the element type that is getting exported.\n- Updated Garnish to 0.1.34.\n\n### Fixed\n- Fixed a bug where a SQL deadlock could occur if two elements\u2019 relational field values were being saved simultaneously. ([#5745](https://github.com/craftcms/cms/pull/5745))\n- Fixed a bug where the Plugin Store was not showing validation errors during the payment process. ([#5728](https://github.com/craftcms/cms/issues/5728))\n- Fixed an error that could occur when processing project config changes that included newly created sites. ([#5790](https://github.com/craftcms/cms/issues/5790))\n- Fixed a bug where table cells with the `thin` class were wrapping. ([#5746](https://github.com/craftcms/cms/pull/5746))\n- Fixed a bug where Craft could think it was already installed after running the `setup` command, if it had been installed at the beginning of the request.\n- Fixed an error where applying changes to Matrix fields from the `project.yaml` file could result in the file being re-saved.\n- Fixed a bug where GraphQL cache was not invalidated when structured elements were rearranged. ([#5761](https://github.com/craftcms/cms/issues/5761))\n- Fixed a bug where lightswitch inputs would be unresponsive if they had been configured with `disabled` set to an empty, non-boolean value.\n- Fixed a bug where Edit Entry pages would often create a draft when clicking the \u201cPreview\u201d button even if nothing had changed, if there was a Redactor field or other field that was doing its own value normalization on page load.\n- Fixed a bug where Redactor fields weren\u2019t getting autofocused when a new Matrix block was added. ([#5773](https://github.com/craftcms/cms/issues/5773))\n- Fixed a \u201cDivision by zero\u201d error that occurred if an image didn\u2019t have a width or height.\n- Fixed a bug where Matrix and relational fields weren\u2019t getting propagated correctly for global sets, assets, categories, and tags, when a new site was added. ([#5775](https://github.com/craftcms/cms/issues/5775))\n- Fixed a bug where the `request` component could be loaded recursively in the event that a fatal error occurred during its initialization. ([#5788](https://github.com/craftcms/cms/issues/5788), [#5791](https://github.com/craftcms/cms/issues/5791))\n- Fixed a bug where it was possible to delete an autocreated Matrix block if the Min Blocks and Max Blocks settings were both set to the same value, and there was only one block type. ([#5781](https://github.com/craftcms/cms/issues/5781))\n- Fixed a bug where elements weren\u2019t styled correctly while dragging.\n\n## 3.4.9 - 2020-02-28\n\n### Fixed\n- Fixed a bug where relational fields weren\u2019t validating that their Limit setting was set to an integer. ([#5709](https://github.com/craftcms/cms/issues/5709))\n- Fixed a bug where structure data was getting joined into entry queries even if the `section` param was set to a non-Structure section. ([#5707](https://github.com/craftcms/cms/issues/5707))\n- Fixed a JavaScript error that occurred when attempting to set the cropping constraint using the image editor. ([#5718](https://github.com/craftcms/cms/issues/5718))\n- Fixed a SQL error that occurred when running the `utils/prune-revisions` command when using PostgreSQL. ([#5712](https://github.com/craftcms/cms/issues/5712))\n- Fixed a bug where root-level classes weren\u2019t properly namespaced in `CustomFieldBehavior.php` docblocks. ([#5716](https://github.com/craftcms/cms/issues/5716))\n- Fixed an error that could occur while installing Craft with an existing `project.yaml` file. ([#5697](https://github.com/craftcms/cms/issues/5697))\n- Fixed an error that could occur if a deprecation warning was logged with a message longer than 255 characters. ([#5738](https://github.com/craftcms/cms/issues/5738))\n\n## 3.4.8 - 2020-02-21\n\n### Added\n- Added the `withTransforms` argument to asset GraphQL queries, which can be used to specify image transforms that should be eager-loaded.\n- Added `craft\\controllers\\AssetsController::asBrokenImage()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requirePeerVolumePermissionByAsset()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requireVolumePermission()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requireVolumePermissionByAsset()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requireVolumePermissionByFolder()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\queue\\jobs\\ApplyNewPropagationMethod`.\n\n### Changed\n- When a section\u2019s Propagation Method setting changes, the section\u2019s entries are now duplicated into any sites where their content would have otherwise been deleted.\n- Craft now sends `X-Robots-Tag: none` headers back for all tokenized requests. ([#5698](https://github.com/craftcms/cms/issues/5698))\n\n### Deprecated\n- Deprecated `craft\\queue\\jobs\\ApplyMatrixPropagationMethod`.\n\n### Fixed\n- Fixed a bug where Craft could get itself in an unrecoverable state if a custom field\u2019s handle *and* type were changed at the same time, but the new field type\u2019s content column was incompatible with the existing field data.\n- Fixed a JavaScript error that occurred when displaying some charts in the control panel.\n\n## 3.4.7.1 - 2020-02-20\n\n### Fixed\n- Fixed an error that could occur on the Dashboard if there was a Quick Post widget that contained a Matrix field which contained an Assets field.\n\n## 3.4.7 - 2020-02-20\n\n### Added\n- Plugins can now modify GraphQL query variables and the operation name using the `craft\\services\\Gql::EVENT_BEFORE_EXECUTE_GQL_QUERY` event.\n\n### Changed\n- Improved the look of Matrix fields. ([#5652](https://github.com/craftcms/cms/issues/5652))\n\n### Fixed\n- Fixed an error that could occur in some cases when updating Craft from a previous 3.4.x version.\n- Fixed an error where the `dateModified` key would be missing from the project config when installing from scratch.\n- Fixed a bug where it wasn\u2019t possible to use GraphQL variables in sub-queries. ([#5645](https://github.com/craftcms/cms/issues/5645))\n- Fixed a bug where scalar database queries weren\u2019t reverting the query\u2019s `select`, `orderBy`, `limit`, and `offset` params back to their original values if an exception was thrown. ([#5690](https://github.com/craftcms/cms/issues/5690))\n- Fixed a bug where element titles within table views weren\u2019t wrapping. ([#5681](https://github.com/craftcms/cms/issues/5681))\n- Fixed a bug where element queries could return duplicate results on single-site installs that had a soft-deleted site. ([#5678](https://github.com/craftcms/cms/issues/5678))\n- Fixed an error that could occur during garbage collection if any unsaved entry drafts were missing their row in the `entries` table. ([#5684](https://github.com/craftcms/cms/issues/5684))\n- Fixed JavaScript errors that occurred in Safari 9 and 10. ([#5671](https://github.com/craftcms/cms/issues/5671))\n- Fixed a bug where some fields\u2019 default values weren\u2019t getting saved when creating new entries. ([#5455](https://github.com/craftcms/cms/issues/5455))\n\n## 3.4.6.1 - 2020-02-18\n\n### Fixed\n- Fixed an error that could occur when updating Craft on a server that had already applied the same update before.\n\n## 3.4.6 - 2020-02-18\n\n### Added\n- Added `craft\\controllers\\ElementIndexesController::actionCountElements()`.\n- Added `craft\\gql\\arguments\\OptionField`.\n- Added `craft\\gql\\resolvers\\OptionField`.\n- Added `craft\\web\\View::getInitialDeltaValue()`.\n- Added `craft\\web\\View::setInitialDeltaValue()`.\n- Added the boolean `label` argument to the Checkbox, Dropdown, and Multi-select GraphQL API fields which can be used to specify the label(s) of selected option(s) should be returned instead. ([#5514](https://github.com/craftcms/cms/issues/5514))\n- Added the `nextSiblingOf`, `prevSiblingOf`, `positionedAfter`, and `positionedBefore` arguments to Entry and Category GraphQL queries. ([#5627](https://github.com/craftcms/cms/issues/5627))\n- Added the `Craft.sendActionRequest()` JavaScript method, which is a Promise-based, cancelable alternative to `Craft.postActionRequest()`.\n\n### Changed\n- Improved the performance of element indexes.\n- Element indexes now cancel current Ajax requests before sending new ones. ([#5655](https://github.com/craftcms/cms/issues/5655))\n- Improved the performance of element queries on single-site installs.\n- Improved the performance of loading the stored project config data. ([#5630](https://github.com/craftcms/cms/issues/5630))\n- Relational fields\u2019 element selection modals now default to the source element\u2019s site. ([#5643](https://github.com/craftcms/cms/issues/5643))\n- The Edit Entry page now has a \u201cCreate\u201d button rather than \u201cSave\u201d, if the entry has never been fully saved. ([#5661](https://github.com/craftcms/cms/issues/5661))\n- Assets, categories, entries, and users can now be sorted by their IDs in the control panel.\n- Element URIs are now longer required to be unique for disabled elements.\n- Duplicated elements are now automatically saved as disabled, if a unique URI cannot be generated for them. ([#5510](https://github.com/craftcms/cms/issues/5510))\n- It\u2019s now possible to query for elements by their Checkboxes/Multi-select field values using a simplified query param syntax. ([#5639](https://github.com/craftcms/cms/issues/5639))\n- Environment variable autosuggestions in the control panel are now based on `$_SERVER` rather than `$_ENV`.\n- The `_includes/forms/text.html` template now supports an `inputAttributes` variable.\n- `craft\\base\\ApplicationTrait::getIsMultiSite()` now has a `$withTrashed` argument.\n\n### Deprecated\n- Deprecated `craft\\controllers\\ElementIndexesController::$paginated`.\n- Deprecated the `Craft.postActionRequest()` JavaScript method.\n\n### Fixed\n- Fixed a bug where content would not be loaded correctly for some parts of queries when using GraphQL API in some instances. ([#5548](https://github.com/craftcms/cms/issues/5548))\n- Fixed a bug where the built-in GraphQL client would not work on some environments.\n- Fixed a bug where text cells weren\u2019t wrapping in static editable tables. ([#5611](https://github.com/craftcms/cms/issues/5611))\n- Fixed a bug where header cells weren\u2019t wrapping in editable tables. ([#5656](https://github.com/craftcms/cms/issues/5656))\n- Fixed a bug where search keywords weren\u2019t being extracted from HTML field values properly. ([#5631](https://github.com/craftcms/cms/issues/5631))\n- Fixed an error that could occur after updating to Craft 3.4. ([#5633](https://github.com/craftcms/cms/issues/5633))\n- Fixed a bug where Dropdown field values weren\u2019t getting saved if the first option was selected. ([#5632](https://github.com/craftcms/cms/issues/5632))\n- Fixed a bug where sections\u2019 preview targets weren\u2019t getting saved in the user-defined order. ([#5634](https://github.com/craftcms/cms/issues/5634))\n- Fixed a bug where querying for Matrix blocks on a newly-created element\u2019s Matrix field value would yield no results. ([#5618](https://github.com/craftcms/cms/issues/5618))\n- Fixed a bug where changing the focal point on an Asset would not invalidate its cached transforms. ([#3685](https://github.com/craftcms/cms/issues/3685))\n- Fixed a migration error that could occur when updating from prior to Craft 3.2.6.\n- Fixed a bug where element labels could wrap multiple lines in the control panel. ([#5646](https://github.com/craftcms/cms/issues/5646))\n- Fixed a bug where meta field labels weren\u2019t aligned with their values. ([#5647](https://github.com/craftcms/cms/issues/5647))\n- Fixed a bug where saving an asset from an Edit Asset page would save the content for the primary site, regardless of which site was selected. ([#5659](https://github.com/craftcms/cms/issues/5659))\n- Fixed a validation error that occurred when duplicating an entry, if the URI format was based on a custom field value. ([#4759](https://github.com/craftcms/cms/issues/4759))\n- Fixed a deprecation warning when accessing the `children` field using GraphQL in some cases. ([#5642](https://github.com/craftcms/cms/issues/5642))\n- Fixed a bug where element search indexes weren\u2019t getting updated for propagated saves. ([#5654](https://github.com/craftcms/cms/issues/5654))\n\n## 3.4.5 - 2020-02-07\n\n### Added\n- Added `craft\\models\\GqlToken::getIsExpired()`.\n\n### Changed\n- `craft\\services\\Gql::getPublicSchema()` now returns `null` if the public schema doesn\u2019t exist yet and `allowAdminChanges` is disabled.\n- Tightened up the horizontal padding on text inputs. ([#5608](https://github.com/craftcms/cms/issues/5608))\n- Improved the look of Matrix blocks.\n- Improved the look of editable tables. ([#5615](https://github.com/craftcms/cms/issues/5615))\n- URL and Email fields now trim leading/trailing whitespace from their values before validating. ([#5614](https://github.com/craftcms/cms/issues/5614))\n- Table fields now trim leading/trailing whitespace from textual cell values before validating.\n- Improved GraphQL API performance. ([#5607](https://github.com/craftcms/cms/issues/5607))\n- Updated Garnish to 0.1.33.\n\n### Deprecated\n- Deprecated `craft\\gql\\base\\Arguments::buildContentArguments()`.\n\n### Fixed\n- Fixed an error that occurred when working with GraphQL on an environment with `allowAdminChanges` disabled, if the public schema didn\u2019t exist yet. ([#5588](https://github.com/craftcms/cms/issues/5588))\n- Fixed a bug where static Matrix blocks weren\u2019t getting any top padding. ([#5609](https://github.com/craftcms/cms/issues/5609))\n- Fixed a bug where static text cells within editable tables were getting cut off. ([#5611](https://github.com/craftcms/cms/issues/5611))\n- Fixed an error that occurred when saving an element with an Assets field set to restrict files to a single folder, if any of the selected assets\u2019 files didn\u2019t exist.\n- Fixed an error that occurred when attempting to export elements. ([#5617](https://github.com/craftcms/cms/issues/5617))\n- Fixed a bug where HTTP exceptions were getting lost if triggered from a template via an `{% exit %}` tag.\n\n## 3.4.4.1 - 2020-02-06\n\n### Changed\n- Plugins can now modify the params sent with element index Ajax requests by hooking into the new `registerViewParams` event triggered by `Craft.BaseElementIndex`.\n\n### Fixed\n- Fixed an error that occurred when searching for elements from element indexes. ([#5599](https://github.com/craftcms/cms/issues/5599))\n\n## 3.4.4 - 2020-02-05\n\n### Added\n- Added the ability to limit multiple selections in admin tables.\n- Added an event to admin tables when selections are changed.\n- Added an event to admin tables to retrieve currently visible data.\n- Added `craft\\controllers\\ElementIndexesController::actionExport()`.\n- Added the `Craft.downloadFromUrl()` JavaScript method.\n\n### Deprecated\n- Deprecated `craft\\controllers\\ElementIndexesController::actionCreateExportToken()`.\n- Deprecated `craft\\controllers\\ExportController`.\n\n### Fixed\n- Fixed a bug where data tables weren\u2019t getting horizontal scrollbars in Firefox. ([#5574](https://github.com/craftcms/cms/issues/5574))\n- Fixed a bug where HTML was being escaped twice in some admin tables. ([#5532](https://github.com/craftcms/cms/issues/5532))\n- Fixed a 404 error that would occur when attempting to preview a PDF file in a volume that didn\u2019t have a base URL. ([#5581](https://github.com/craftcms/cms/issues/5581))\n- Fixed a bug where the Asset Indexes utility could leave the progress bar visible after it was done.\n- Fixed a bug where the `_count` field would sometimes not work correctly when using GraphQL. ([#4847](https://github.com/craftcms/cms/issues/4847))\n- Fixed a bug where assets that had been drag-uploaded to an Assets field would be hyperlinked. ([#5584](https://github.com/craftcms/cms/issues/5584))\n- Fixed a bug where `CustomFieldBehavior.php` was getting created with restricted permissions. ([#5570](https://github.com/craftcms/cms/issues/5570))\n- Fixed a bug where element exporting would redirect the browser window if the export request didn\u2019t immediately return the export data. ([#5558](https://github.com/craftcms/cms/issues/5558))\n- Fixed a \u201cDivision by zero\u201d error that occurred if an image transform didn\u2019t specify a width or a height. ([#5590](https://github.com/craftcms/cms/issues/5590))\n- Fixed a bug where elements weren\u2019t always retaining their positions in element indexes between pages.\n\n## 3.4.3 - 2020-02-03\n\n### Added\n- It\u2019s now possible to preview video files. ([#5565](https://github.com/craftcms/cms/pull/5565))\n- Added the `--no-backup` option to the `migrate/all` command.\n\n### Changed\n- Craft now logs full exception reports when an exception is thrown from a queue job.\n\n### Fixed\n- Fixed a bug where the `update` command was backing up the database twice.\n- Fixed a bug where the \u201cDuplicate\u201d element action was available for users who didn\u2019t have permission to create new entries in the section. ([#5566](https://github.com/craftcms/cms/issues/5566))\n- Fixed a bug where using directives in GraphQL could make the field return unexpected results. ([#5569](https://github.com/craftcms/cms/issues/5569))\n- Fixed a bug where the active queue job could be missing from the global sidebar and Queue Manager if there were 50 or more pending jobs with higher priorities. ([#5506](https://github.com/craftcms/cms/issues/5506))\n- Fixed a bug where Craft wouldn\u2019t detect requests to non-primary sites if their base URL only contained one extra character than the primary site. ([#5575](https://github.com/craftcms/cms/issues/5575))\n\n## 3.4.2 - 2020-01-31\n\n### Added\n- Added the ability to pass a custom failure message to the delete action on admin tables. ([#5507](https://github.com/craftcms/cms/issues/5507))\n- `craft\\services\\ProjectConfig::processConfigChanges()` now has a `$force` argument that defaults to `false`.\n- Added the ability for admin table actions to restrict usage if multiple items are selected.\n- Edit Asset pages now have `cp.assets.edit`, `cp.assets.edit.details`, `cp.assets.edit.settings`, and `cp.assets.edit.meta` template hooks. ([#5560](https://github.com/craftcms/cms/pull/5560))\n- Added `craft\\queue\\jobs\\ResaveElements::$updateSearchIndex`.\n\n### Changed\n- Edit Asset pages now show a \u201cView\u201d button for image, PDF, and text assets. ([#5555](https://github.com/craftcms/cms/issues/5555))\n- Edit Asset pages now show the asset\u2019s location in the meta pane.\n- The `generateTransformsBeforePageLoad` config setting is now automatically enabled for GraphQL API requests. ([#5553](https://github.com/craftcms/cms/issues/5553))\n- Brought back the `_elements/indexcontainer.html` template (though it is deprecated). ([Dolphiq/craft3-plugin-redirect#108](https://github.com/Dolphiq/craft3-plugin-redirect/issues/108))\n\n### Fixed\n- Fixed a couple errors that could have occurred when updating to Craft 3.4. ([#5527](https://github.com/craftcms/cms/issues/5527))\n- Fixed a bug where HTML was being escaped twice in some admin tables. ([#5532](https://github.com/craftcms/cms/issues/5532))\n- Fixed an error that could occur when processing new Project Config values.\n- Fixed an error that could occur when saving Project Config values that contained 4+ byte characters.\n- Fixed a bug where asset previews weren\u2019t working on Craft Solo. ([#5517](https://github.com/craftcms/cms/issues/5517))\n- Fixed a bug where Matrix fields weren\u2019t always showing validation errors.\n- Fixed a bug where unsaved Matrix blocks could be lost if an entry was saved with validation errors, and any unsaved Matrix blocks weren\u2019t modified before reattempting to save the entry. ([#5544](https://github.com/craftcms/cms/issues/5544))\n- Fixed a bug where Table fields weren\u2019t getting initialized properly unless they were located on the initially-selected content tab. ([#5549](https://github.com/craftcms/cms/issues/5549))\n- Fixed a bug where the control panel\u2019s login form was off-center vertically when a login page logo was used. ([#5552](https://github.com/craftcms/cms/issues/5552))\n- Fixed a bug where it wasn\u2019t possible to pass variables into GraphQL directive arguments. ([#5543](https://github.com/craftcms/cms/issues/5543))\n- Fixed a bug where users with permission to create entries would get a 403 error when attempting to save a new entry.\n- Fixed a styling issue on the Login page if the `rememberedUserSessionDuration` config setting was set to `0`. ([#5556](https://github.com/craftcms/cms/issues/5556))\n- Fixed an error that occurred when viewing trashed elements in an element index and then changing the selected source. ([#5559](https://github.com/craftcms/cms/issues/5559))\n- Fixed a bug where Craft would update the search index for Matrix blocks and other nested elements, even if the owner element was saved with `$updateSearchIndex = false`.\n\n## 3.4.1 - 2020-01-29\n\n### Changed\n- Craft now only logs errors and warnings for console requests, when Dev Mode isn\u2019t enabled. ([#5256](https://github.com/craftcms/cms/issues/5256))\n- Improved the styling of the system name in the global sidebar. ([#5524](https://github.com/craftcms/cms/issues/5524))\n- The default MySQL backup command will now set the `--default-character-set` argument to the value of the `charset` database config setting. ([#5529](https://github.com/craftcms/cms/issues/5529))\n\n### Fixed\n- Fixed a bug where plugin settings would get mangled when installing Craft using an existing `project.yaml` file.\n- Fixed a bug where Assets fields\u2019 selection modals could be blank if the Default Upload Location setting specified an unpermitted volume. ([#5520](https://github.com/craftcms/cms/issues/5520))\n- Fixed a bug where users\u2019 Week Start Day preference was being ignored if set to Sunday. ([#5513](https://github.com/craftcms/cms/issues/5513))\n\n## 3.4.0.2 - 2020-01-28\n\n### Fixed\n- Fixed a bug where installing Craft from the terminal wasn\u2019t setting the `DB_DSN` environment variable in `.env`.\n- Fixed a bug where sections could lose their preview targets when updating to Craft 3.4. ([#5519](https://github.com/craftcms/cms/issues/5519))\n- Fixed a bug where preview target URLs weren\u2019t being normalized to site URLs. ([#5519](https://github.com/craftcms/cms/issues/5519))\n\n## 3.4.0.1 - 2020-01-28\n\n### Fixed\n- Fixed an error that could occur when updating to Craft 3.4.\n- Fixed a bug where Assets fields\u2019 selection modals could be blank if limited to a single folder. ([#5516](https://github.com/craftcms/cms/issues/5516))\n\n## 3.4.0 - 2020-01-28\n\n> **Warning**\n> If `useProjectConfigFile` is enabled and you are using the GraphQL API, restore a fresh database backup from your production environment before updating your development environment. Otherwise you may lose your GraphQL schema data when updating production.\n\n> **Warning**\n> There have been some changes in behavior that plugin developers should be aware of! See [Updating Plugins for Craft 3.4](https://craftcms.com/knowledge-base/updating-plugins-for-craft-34) for details.\n\n> **Note**\n> Element search indexing is a little smarter in Craft 3.4. It\u2019s recommended that you resave all your entries from your terminal **after** you\u2019ve finished updating.\n>\n> ```bash\n> > ./craft resave/entries --update-search-index\n> ```\n\n### Added\n- Improved the overall look and feel of the Control Panel. ([#2883](https://github.com/craftcms/cms/issues/2883))\n- Added an overflow menu for Control Panel tabs that don\u2019t fit into the available space. ([#3073](https://github.com/craftcms/cms/issues/3073))\n- Added support for delta element updates. ([#4064](https://github.com/craftcms/cms/issues/4064))\n- Elements now track which field values have changed since the element was first loaded. ([#4149](https://github.com/craftcms/cms/issues/4149))\n- Entry drafts now show which fields and attributes have changed within the draft, and which are outdated.\n- If an entry draft contains outdated field and attribute values, it\u2019s now possible to merge the latest source entry values into the draft manually, and they will be automatically merged in when the draft is published. ([#4642](https://github.com/craftcms/cms/issues/4642))\n- \u201cSet Status\u201d element actions no longer have the option to disable multi-site elements globally; only for the currently selected site. ([#2817](https://github.com/craftcms/cms/issues/2817), [#2899](https://github.com/craftcms/cms/issues/2899))\n- Multi-site entries\u2019 edit pages no longer have the option to set the entry\u2019s global status. Instead, only the current site\u2019s status is shown by default, and that setting can be expanded to show all sites that the user has permission to edit, for bulk-editing the entry\u2019s status across multiple sites. ([#2817](https://github.com/craftcms/cms/issues/2817), [#2899](https://github.com/craftcms/cms/issues/2899))\n- It\u2019s now possible to see all of the elements selected by relation fields from element indexes. ([#3030](https://github.com/craftcms/cms/issues/3030))\n- Assets now have their own dedicated edit pages in the control panel. ([#1249](https://github.com/craftcms/cms/issues/1249))\n- Asset volumes\u2019 field layouts can now define multiple tabs.\n- Assets now keep track of which user account was logged-in when the asset was uploaded. ([#3553](https://github.com/craftcms/cms/issues/3553))\n- Asset indexes can now have an \u201cUploaded by\u201d column.\n- It\u2019s now possible to eager-load assets with their `uploader` value.\n- Added new \u201cView files uploaded by other users\u201d, \u201cEdit files uploaded by other users\u201d, \u201cReplace files uploaded by other users\u201d, \u201cRemove files uploaded by other users\u201d, and \u201cEdit images uploaded by other users\u201d user permissions.\n- Assets fields now have a \u201cShow unpermitted volumes\u201d setting, which determines whether the field should show volumes that the user doesn\u2019t have permission to view (disabled by default for new fields; enabled by default for existing fields). ([#887](https://github.com/craftcms/cms/issues/887))\n- Assets fields now have a \u201cShow unpermitted files setting, which determines whether the field should show files that the user doesn\u2019t have permission to view per the new \u201cView files uploaded by other users\u201d permission.\n- It\u2019s now possible to download multiple assets at once as a zip file. ([#5259](https://github.com/craftcms/cms/issues/5259))\n- It\u2019s now possible to preview text and PDF assets, and plugins can add support for additional file types. ([#5136](https://github.com/craftcms/cms/pull/5136))\n- It\u2019s now possible to set a custom aspect ratio when cropping images with the image editor. ([#4359](https://github.com/craftcms/cms/issues/4359))\n- It\u2019s now possible to change the the aspect ratio orientation when cropping images with the image editor. ([#4359](https://github.com/craftcms/cms/issues/4359))\n- Added the Queue Manager utility. ([#2753](https://github.com/craftcms/cms/issues/2753), [#3489](https://github.com/craftcms/cms/issues/3489))\n- It\u2019s now possible to define additional queues using `craft\\queue\\Queue`, with custom `channel` values. ([#5492](https://github.com/craftcms/cms/issues/5492))\n- Added the `queue/release` action. ([#4777](https://github.com/craftcms/cms/issues/4777))\n- Added the `utils/prune-revisions` action. ([#4851](https://github.com/craftcms/cms/issues/4851))\n- Added the `verifyEmailPath` config setting.\n- Added the `maxBackups` config setting. ([#2078](https://github.com/craftcms/cms/issues/2078))\n- Added the `upscaleImages` config setting. ([#844](https://github.com/craftcms/cms/issues/844))\n- Added the \u201cReply-To Address\u201d email setting. ([#5498](https://github.com/craftcms/cms/issues/5498))\n- Added the `{% requireGuest %}` Twig tag, which redirects a user to the path specified by the `postLoginRedirect` config setting if they\u2019re already logged in. ([#5015](https://github.com/craftcms/cms/pull/5015))\n- Added the `combine()` Twig function.\n- Added the `|contains` Twig filter.\n- Added the `|purify` Twig filter. ([#5184](https://github.com/craftcms/cms/issues/5184))\n- Public registration forms can now customize the flash notice displayed on successful registration by passing a `userRegisteredNotice` param. ([#5213](https://github.com/craftcms/cms/issues/5213))\n- It\u2019s now possible to query for Matrix blocks by their field handle, via the new `field` param. ([#5218](https://github.com/craftcms/cms/issues/5218))\n- It\u2019s now possible to filter element query results by their related elements using relational fields\u2019 element query params (e.g. `publisher(100)` rather than `relatedTo({targetElement: 100, field: 'publisher'})`). ([#5200](https://github.com/craftcms/cms/issues/5200))\n- It\u2019s now possible to query for elements by their custom field values via GraphQL. ([#5208](https://github.com/craftcms/cms/issues/5208))\n- It\u2019s now possible to eager-load the *count* of related elements, by setting `'count' => true` on the eager loading criteria.\n- GraphQL access tokens are now managed separately from schema definitions, making it possible to create multiple tokens for the same schema.\n- GraphQL schemas are now stored in the project config (sans tokens). ([#4829](https://github.com/craftcms/cms/issues/4829))\n- Added a new \u201cExpanded\u201d element exporter type, which includes expanded custom field values, including Matrix and relational fields. ([#4484](https://github.com/craftcms/cms/issues/4484))\n- It\u2019s now possible to export elements as CSV, JSON, or XML files.\n- Added support for plugin-supplied element exporters. ([#5090](https://github.com/craftcms/cms/issues/5090))\n- Control panel pages can now implement Vue-based admin tables that support bulk actions, search, and pagination.\n- Elements now have a `_count` field when queried via GraphQL, which returns the total number of related elements for a given relational field handle.\n- It\u2019s now possible to filter users by their groups when querying for them via GraphQL. ([#5374](https://github.com/craftcms/cms/issues/5374))\n- Added the `asset`, `category`, `entry`, `globalSet`, `tag`, and `user` queries to fetch single elements via GraphQL. ([#5363](https://github.com/craftcms/cms/issues/5363))\n- It\u2019s now possible to apply the `transform` GraphQL directive to entire assets. ([#5425](https://github.com/craftcms/cms/issues/5425))\n- The Image Editor now displays the resulting image size when cropping. ([#4551](https://github.com/craftcms/cms/issues/4551))\n- Improved the crop behavior when dragging along the edges of an image in the Image Editor.\n- The Sendmail mailer transport now has a \u201cSendmail Command\u201d setting. ([#5445](https://github.com/craftcms/cms/pull/5445))\n- Added support for the `CRAFT_EPHEMERAL` PHP constant, which can be defined as `true` when Craft is running on an environment with ephemeral storage.\n- Added the `setup/php-session-table` command for creating a database table to store PHP sessions.\n- Added `craft\\assetpreviews\\Image`.\n- Added `craft\\assetpreviews\\Pdf`.\n- Added `craft\\assetpreviews\\Text`.\n- Added `craft\\base\\AssetPreviewHandler`.\n- Added `craft\\base\\AssetPreviewHandlerInterface`.\n- Added `craft\\base\\Element::ATTR_STATUS_CONFLICTED`.\n- Added `craft\\base\\Element::ATTR_STATUS_MODIFIED`.\n- Added `craft\\base\\Element::ATTR_STATUS_OUTDATED`.\n- Added `craft\\base\\Element::defineExporters()`.\n- Added `craft\\base\\Element::EVENT_REGISTER_EXPORTERS`.\n- Added `craft\\base\\ElementExporter`.\n- Added `craft\\base\\ElementExporterInterface`.\n- Added `craft\\base\\ElementInterface::exporters()`\n- Added `craft\\base\\ElementInterface::getAttributeStatus()`.\n- Added `craft\\base\\ElementInterface::getDirtyAttributes()`.\n- Added `craft\\base\\ElementInterface::getDirtyFields()`.\n- Added `craft\\base\\ElementInterface::getEagerLoadedElementCount()`.\n- Added `craft\\base\\ElementInterface::getEnabledForSite()`.\n- Added `craft\\base\\ElementInterface::getFieldStatus()`.\n- Added `craft\\base\\ElementInterface::isFieldDirty()`.\n- Added `craft\\base\\ElementInterface::markAsClean()`.\n- Added `craft\\base\\ElementInterface::setAttributeStatus()`.\n- Added `craft\\base\\ElementInterface::setEagerLoadedElementCount()`.\n- Added `craft\\base\\ElementInterface::setEnabledForSite()`.\n- Added `craft\\base\\ElementInterface::trackChanges()`.\n- Added `craft\\base\\FieldInterface::getTranslationDescription()`.\n- Added `craft\\base\\Model::defineRules()`. Models that define a `rules()` method should use `defineRules()` instead, so `EVENT_DEFINE_RULES` event handlers have a chance to modify them.\n- Added `craft\\base\\UtilityInterface::footerHtml()`.\n- Added `craft\\base\\UtilityInterface::toolbarHtml()`.\n- Added `craft\\base\\WidgetInterface::getSubtitle()`.\n- Added `craft\\behaviors\\DraftBehavior::$dateLastMerged`.\n- Added `craft\\behaviors\\DraftBehavior::$mergingChanges`.\n- Added `craft\\behaviors\\DraftBehavior::$trackChanges`.\n- Added `craft\\behaviors\\DraftBehavior::getIsOutdated()`.\n- Added `craft\\behaviors\\DraftBehavior::getOutdatedAttributes()`.\n- Added `craft\\behaviors\\DraftBehavior::getOutdatedFields()`.\n- Added `craft\\behaviors\\DraftBehavior::isAttributeModified()`.\n- Added `craft\\behaviors\\DraftBehavior::isAttributeOutdated()`.\n- Added `craft\\behaviors\\DraftBehavior::isFieldModified()`.\n- Added `craft\\behaviors\\DraftBehavior::isFieldOutdated()`.\n- Added `craft\\controllers\\AssetsController::actionEditAsset()`.\n- Added `craft\\controllers\\AssetsController::actionSaveAsset()`.\n- Added `craft\\controllers\\DraftsController`.\n- Added `craft\\controllers\\GraphqlController::actionDeleteToken()`.\n- Added `craft\\controllers\\GraphqlController::actionEditPublicSchema()`.\n- Added `craft\\controllers\\GraphqlController::actionEditPublicSchema()`.\n- Added `craft\\controllers\\GraphqlController::actionEditToken()`.\n- Added `craft\\controllers\\GraphqlController::actionSaveToken()`.\n- Added `craft\\controllers\\GraphqlController::actionViewToken()`.\n- Added `craft\\controllers\\UsersController::actionSessionInfo()`. ([#5355](https://github.com/craftcms/cms/issues/5355))\n- Added `craft\\db\\ActiveRecord::behaviors()`, which now gives plugins a chance to define their own behaviors.\n- Added `craft\\db\\ActiveRecord::EVENT_DEFINE_BEHAVIORS`.\n- Added `craft\\db\\Connection::DRIVER_MYSQL`.\n- Added `craft\\db\\Connection::DRIVER_PGSQL`.\n- Added `craft\\elements\\Asset::$uploaderId`.\n- Added `craft\\elements\\Asset::getDimensions()`.\n- Added `craft\\elements\\Asset::getFormattedSize()`.\n- Added `craft\\elements\\Asset::getFormattedSizeInBytes()`.\n- Added `craft\\elements\\Asset::getPreviewThumbImg()`.\n- Added `craft\\elements\\Asset::getUploader()`.\n- Added `craft\\elements\\Asset::setUploader()`.\n- Added `craft\\elements\\db\\AssetQuery::$uploaderId`.\n- Added `craft\\elements\\db\\AssetQuery::uploader()`.\n- Added `craft\\elements\\db\\ElementQuery::clearCachedResult()`.\n- Added `craft\\elements\\db\\MatrixBlockQuery::field()`.\n- Added `craft\\elements\\exporters\\Expanded`.\n- Added `craft\\elements\\exporters\\Raw`.\n- Added `craft\\elements\\MatrixBlock::$dirty`.\n- Added `craft\\events\\AssetPreviewEvent`.\n- Added `craft\\events\\BackupEvent::$ignoreTables`. ([#5330](https://github.com/craftcms/cms/issues/5330))\n- Added `craft\\events\\DefineGqlTypeFieldsEvent`.\n- Added `craft\\events\\DefineGqlValidationRulesEvent`.\n- Added `craft\\events\\ExecuteGqlQueryEvent::$schemaId`.\n- Added `craft\\events\\RegisterElementExportersEvent`.\n- Added `craft\\events\\RegisterGqlPermissionsEvent`.\n- Added `craft\\events\\TemplateEvent::$templateMode`.\n- Added `craft\\fields\\Assets::$showUnpermittedVolumes`.\n- Added `craft\\gql\\TypeManager`.\n- Added `craft\\gql\\types\\Number`.\n- Added `craft\\helpers\\AdminTable`.\n- Added `craft\\helpers\\App::isEphemeral()`.\n- Added `craft\\helpers\\ArrayHelper::append()`.\n- Added `craft\\helpers\\ArrayHelper::contains()`.\n- Added `craft\\helpers\\ArrayHelper::isOrdered()`.\n- Added `craft\\helpers\\ArrayHelper::prepend()`.\n- Added `craft\\helpers\\Db::parseDsn()`.\n- Added `craft\\helpers\\Db::url2config()`.\n- Added `craft\\helpers\\FileHelper::invalidate()`.\n- Added `craft\\helpers\\FileHelper::writeGitignoreFile()`.\n- Added `craft\\helpers\\ProjectConfigHelper::flattenConfigArray()`.\n- Added `craft\\helpers\\ProjectConfigHelper::packAssociativeArray()`.\n- Added `craft\\helpers\\ProjectConfigHelper::packAssociativeArrays()`.\n- Added `craft\\helpers\\ProjectConfigHelper::unpackAssociativeArray()`.\n- Added `craft\\helpers\\ProjectConfigHelper::unpackAssociativeArrays()`.\n- Added `craft\\mail\\Mailer::$replyTo`.\n- Added `craft\\migrations\\CreatePhpSessionTable`.\n- Added `craft\\models\\FieldLayoutTab::elementHasErrors()`.\n- Added `craft\\models\\GqlToken`.\n- Added `craft\\models\\MailSettings::$replyToEmail`.\n- Added `craft\\queue\\Command::actionRelease()`.\n- Added `craft\\queue\\jobs\\UpdateSearchIndex::$fieldHandles`.\n- Added `craft\\queue\\Queue::$channel`.\n- Added `craft\\queue\\Queue::$db`.\n- Added `craft\\queue\\Queue::$mutex`.\n- Added `craft\\queue\\Queue::$tableName`.\n- Added `craft\\queue\\QueueInterface::getJobDetails()`.\n- Added `craft\\queue\\QueueInterface::getTotalJobs()`.\n- Added `craft\\queue\\QueueInterface::releaseAll()`.\n- Added `craft\\queue\\QueueInterface::retryAll()`.\n- Added `craft\\records\\Asset::getUploader()`.\n- Added `craft\\records\\GqlToken`.\n- Added `craft\\services\\Assets::EVENT_REGISTER_PREVIEW_HANDLER`.\n- Added `craft\\services\\Assets::getAssetPreviewHandler()`.\n- Added `craft\\services\\Drafts::EVENT_AFTER_MERGE_SOURCE_CHANGES`.\n- Added `craft\\services\\Drafts::EVENT_BEFORE_MERGE_SOURCE_CHANGES`.\n- Added `craft\\services\\Drafts::mergeSourceChanges()`.\n- Added `craft\\services\\Elements::createExporter()`.\n- Added `craft\\services\\Gql::CONFIG_GQL_SCHEMAS_KEY`.\n- Added `craft\\services\\Gql::deleteSchema()`.\n- Added `craft\\services\\Gql::deleteTokenById()`.\n- Added `craft\\services\\Gql::EVENT_REGISTER_GQL_PERMISSIONS`.\n- Added `craft\\services\\Gql::getSchemaByUid()`.\n- Added `craft\\services\\Gql::getTokenByAccessToken()`.\n- Added `craft\\services\\Gql::getTokenById()`.\n- Added `craft\\services\\Gql::getTokenByName()`.\n- Added `craft\\services\\Gql::getTokenByUid()`.\n- Added `craft\\services\\Gql::getTokens()`.\n- Added `craft\\services\\Gql::getValidationRules()`.\n- Added `craft\\services\\Gql::GRAPHQL_COUNT_FIELD`.\n- Added `craft\\services\\Gql::handleChangedSchema()`.\n- Added `craft\\services\\Gql::handleDeletedSchema()`.\n- Added `craft\\services\\Gql::saveToken()`.\n- Added `craft\\services\\Path::getConfigDeltaPath()`.\n- Added `craft\\services\\Plugins::$pluginConfigs`. ([#1989](https://github.com/craftcms/cms/issues/1989))\n- Added `craft\\services\\ProjectConfig::$maxDeltas`.\n- Added `craft\\services\\ProjectConfig::CONFIG_ALL_KEY`.\n- Added `craft\\services\\ProjectConfig::CONFIG_ASSOC_KEY`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\utilities\\QueueManager`.\n- Added `craft\\web\\assets\\admintable\\AdminTableAsset`.\n- Added `craft\\web\\assets\\queuemanager\\QueueManagerAsset`.\n- Added `craft\\web\\Controller::requireGuest()`.\n- Added `craft\\web\\CsvResponseFormatter`.\n- Added `craft\\web\\twig\\nodes\\RequireGuestNode`.\n- Added `craft\\web\\twig\\tokenparsers\\RequireGuestTokenParser`.\n- Added `craft\\web\\twig\\variables\\Paginate::getDynamicRangeUrls()`, making it easy to create Google-style pagination links. ([#5005](https://github.com/craftcms/cms/issues/5005))\n- Added `craft\\web\\User::guestRequired()`.\n- Added `craft\\web\\View::$minifyCss`.\n- Added `craft\\web\\View::$minifyJs`.\n- Added `craft\\web\\View::getDeltaNames()`.\n- Added `craft\\web\\View::getIsDeltaRegistrationActive()`.\n- Added `craft\\web\\View::registerDeltaName()`.\n- Added `craft\\web\\View::setIsDeltaRegistrationActive()`.\n- Added the `Craft.ui.createDateRangePicker()` JavaScript method.\n- Added the `Craft.VueAdminTable` JavaScript class.\n- Added the `beforeUpdateIframe` and `switchTarget` events to the `Craft.Preview` JavaScript class. ([#5359](https://github.com/craftcms/cms/issues/5359))\n- The `Craft.t()` JavaScript method is now capable of parsing `number` and `plural` formatted params (e.g. `{num, plural, =1{item} other{items}}`).\n- Added the `cp.users.edit.prefs` template hook to the Edit User page. ([#5114](https://github.com/craftcms/cms/issues/5114))\n- The `_layouts/elements.html` control panel layout template can now be used for elements that don\u2019t support drafts or revisions.\n- Added the [Interactive Shell Extension for Yii 2](https://github.com/yiisoft/yii2-shell). ([#5228](https://github.com/craftcms/cms/issues/5228))\n- Added the Minify PHP package.\n\n### Changed\n- Control panel requests are now always set to the primary site, regardless of the URL they were accessed from.\n- The control panel no longer shows the tab bar on pages with only one tab. ([#2915](https://github.com/craftcms/cms/issues/2915))\n- The queue info in the global sidebar no longer shows an HUD with job details when clicked; the user is now brought to the new Queue Manager utility, if they have permission to view it. ([#4040](https://github.com/craftcms/cms/issues/4040))\n- Element indexes now load up to 100 elements per page/batch, rather than 50. ([#4555](https://github.com/craftcms/cms/issues/4555))\n- The Assets index page now updates the URL when the selected volume changes.\n- Sections\u2019 entry URI format settings are now shown when running Craft in headless mode. ([#4934](https://github.com/craftcms/cms/issues/4934))\n- The \u201cPrimary entry page\u201d preview target is now user-customizable alongside all other preview targets in sections\u2019 settings. ([#4520](https://github.com/craftcms/cms/issues/4520))\n- Sections\u2019 \u201cPreview Targets\u201d setting now has a \u201cRefresh\u201d checkbox column, which can be unchecked to prevent preview frames from being refreshed automatically when content changes. ([#5359](https://github.com/craftcms/cms/issues/5359))\n- Entry drafts are no longer auto-created when the \u201cPreview\u201d button is clicked, unless/until the content has changed. ([#5201](https://github.com/craftcms/cms/issues/5201))\n- Unsaved entries\u2019 URIs are now updated on each autosave. ([#4581](https://github.com/craftcms/cms/issues/4581))\n- Edit Entry pages now show the entry\u2019s status in the meta pane.\n- Plain Text fields can now specify a maximum size in bytes. ([#5099](https://github.com/craftcms/cms/issues/5099))\n- Plain Text fields\u2019 Column Type settings now have an \u201cAutomatic\u201d option, which is selected by default for new fields. ([#5099](https://github.com/craftcms/cms/issues/5099))\n- Matrix fields now show an accurate description of their propagation behavior in the translation icon tooltip. ([#5304](https://github.com/craftcms/cms/issues/5304))\n- The Clear Caches utility now has info icons next to most cache options with more details about what the cache option refers to. ([#5418](https://github.com/craftcms/cms/issues/5418))\n- The `users/login` action no longer sets a \u201cLogged in.\u201d flash notice. ([#5383](https://github.com/craftcms/cms/issues/5383))\n- Local asset volumes now ensure that their folder exists on save, and if it doesn\u2019t, a `.gitignore` file will be added automatically to it, excluding the directory from Git. ([#5237](https://github.com/craftcms/cms/issues/5237))\n- Set Password and Verify Email links now use the `setPasswordPath` and `verifyEmailPath` config settings. ([#4925](https://github.com/craftcms/cms/issues/4925))\n- Craft now uses the `slugWordSeparator` when generating URI formats. ([#5315](https://github.com/craftcms/cms/pull/5315))\n- The `loginPath` and `logoutPath` config setings can now be set to `false` to disable front-end login/logout. ([#5352](https://github.com/craftcms/cms/issues/5352))\n- The `loginPath`, `logoutPath`, `setPasswordPath`, and `verifyEmailPath` config settings are now ignored when Craft is running in headless mode.\n- ImageMagick is no longer used when the `imageDriver` config setting is set to `auto`, if `Imagick::queryFormats()` returns an empty array. ([#5435](https://github.com/craftcms/cms/issues/5435))\n- CSS registered with `craft\\web\\View::registerCss()` or the `{% css %}` tag is now minified by default. ([#5183](https://github.com/craftcms/cms/issues/5183))\n- JavaScript code registered with `craft\\web\\registerJs()` or the `{% js %}` tag is now minified per the `useCompressedJs` config setting. ([#5183](https://github.com/craftcms/cms/issues/5183))\n- `resave/*` commands now have an `--update-search-index` argument (defaults to `false`). ([#4840](https://github.com/craftcms/cms/issues/4840))\n- The installer now requires `config/db.php` to be setting the `dsn` database config setting with a `DB_DSN` environment variable, if a connection can\u2019t already be established.\n- The full GraphQL schema is now always generated when Dev Mode is enabled.\n- Punctuation is now removed from search keywords and search terms, rather than being replaced with a space. ([#5214](https://github.com/craftcms/cms/issues/5214))\n- The `_includes/forms/field.html` template now supports `fieldAttributes`, `labelAttributes`, and `inputAttributes` variables.\n- The `_includes/field.html` template now supports a `registerDeltas` variable.\n- The `_layouts/cp.html` template now supports `mainAttributes` and `mainFormAttributes` variables.\n- Plugins can now modify the GraphQL schema via `craft\\gql\\TypeManager::EVENT_DEFINE_GQL_TYPE_FIELDS`.\n- Plugins can now modify the GraphQL permissions via `craft\\services\\Gql::EVENT_REGISTER_GQL_PERMISSIONS`.\n- Number fields now return the `Number` type when queried via GraphQL, which can be an integer, a float, or null. ([#5344](https://github.com/craftcms/cms/issues/5344))\n- Renamed the`QueryParameter` GraphQL type to `QueryArgument`.\n- If any elements are selected while exporting, only the selected elements will be included in the export. ([#5130](https://github.com/craftcms/cms/issues/5130))\n- Craft now sorts the `project.yaml` file alphabetically by keys. ([#5147](https://github.com/craftcms/cms/issues/5147))\n- The project config is now stored in its own `projectconfig` table, rather than a `config` column within the `info` table.\n- Project config event handlers are now triggered in order of specificity (from least-to-most specific).\n- Active record classes now normalize attribute values right when they are set.\n- Entry queries no longer factor in seconds when looking for currently live entries. ([#5389](https://github.com/craftcms/cms/issues/5389))\n- Editable tables now set existing row\u2019s cell values to their column\u2019s default value, if the cell is missing from the row data.\n- Preview targets can now opt out of being automatically refreshed when content changes, by setting `refresh` to `false` on their target definition. ([#5359](https://github.com/craftcms/cms/issues/5359))\n- The old `craft\\controllers\\AssetsController::actionSaveAsset()` method has been renamed to `actionUpload()`.\n- Assets fields now open their asset selection modals to the field's Default Upload Location, if it exists. ([#2778](https://github.com/craftcms/cms/issues/2778)\n- The `|merge` filter now has a `recursive` argument. ([#1465](https://github.com/craftcms/cms/issues/1465))\n- `craft\\config\\GeneralConfig::getLoginPath()` and `getLogoutPath()` may now return non-string values.\n- `craft\\elements\\Asset::getImg()` now has an optional `$transform` argument. ([#3563](https://github.com/craftcms/cms/issues/3563))\n- `craft\\helpers\\Db::prepDateForDb()` now has a `$stripSeconds` argument (defaults to `false`).\n- `craft\\i18n\\Formatter::asShortSize()` now capitalizes the size unit.\n- `craft\\mail\\Message::setReplyTo()` can now be set to a `craft\\elements\\User` object, or an array of them.\n- `craft\\models\\GqlSchema::$scope` is now read-only.\n- `craft\\services\\Elements::resaveElements()` now has an `$updateSearchIndex` argument (defaults to `false`). ([#4840](https://github.com/craftcms/cms/issues/4840))\n- `craft\\services\\Elements::saveElement()` now has an `$updateSearchIndex` argument (defaults to `true`). ([#4840](https://github.com/craftcms/cms/issues/4840))\n- `craft\\services\\ProjectConfig::areChangesPending()` will now return `true` if the path was updated but not processed yet.\n- `craft\\services\\ProjectConfig::processConfigChanges()` now has a `$message` argument to specify the reason for config changes.\n- `craft\\services\\ProjectConfig::remove()` now has a `$message` argument to specify the reason for config changes.\n- `craft\\services\\ProjectConfig::set()` now has a `$message` argument to specify the reason for config changes.\n- `craft\\services\\Search::indexElementAttributes()` now has a `$fieldHandles` argument, for specifying which custom fields\u2019 keywords should be updated.\n- `craft\\web\\Controller::renderTemplate()` now has a `$templateMode` argument.\n- `craft\\web\\View::renderTemplate()`, `renderPageTemplate()`, `renderTemplateMacro()`, `doesTemplateExist()`, and `resolveTemplate()` now have `$templateMode` arguments. ([#4570](https://github.com/craftcms/cms/pull/4570))\n- The `ContentBehavior` and `ElementQueryBehavior` behavior classes have been replaced by a single `CustomFieldBehavior` class.\n- Matrix fields now trigger a `blockDeleted` JavaScript event when a block is deleted. ([#5329](https://github.com/craftcms/cms/issues/5329))\n- The `afterUpdateIframe` event fired by the `Craft.Preview` JavaScript class now includes `target` and `$iframe` data properties.\n- Replaced the deprecated zend-feed library with laminas-feed. ([#5400](https://github.com/craftcms/cms/issues/5400))\n- The `index-assets/*` commands now have a `--deleteMissingAssets` option, which deletes the records of Assets that are missing their files after indexing. ([#4928](https://github.com/craftcms/cms/issues/4928))\n- Updated Yii to 2.0.32.\n- Updated yii2-queue to 2.3.\n- Updated Garnish to 0.1.32.\n\n### Deprecated\n- Deprecated the `url`, `driver`, `database`, `server`, `port`, and `unixSocket` database config settings. `dsn` should be used instead.\n- Deprecated `craft\\config\\DbConfig::DRIVER_MYSQL`.\n- Deprecated `craft\\config\\DbConfig::DRIVER_PGSQL`.\n- Deprecated `craft\\config\\DbConfig::updateDsn()`.\n- Deprecated `craft\\controllers\\UsersController::actionGetRemainingSessionTime()`. `actionSessionInfo()` should be used instead.\n- Deprecated `craft\\elements\\Asset::getSupportsPreview()`. Use `craft\\services\\Assets::getAssetPreviewHandler()` instead.\n- Deprecated `craft\\events\\ExecuteGqlQueryEvent::$accessToken`. Use `craft\\events\\ExecuteGqlQueryEvent::$schemaId` instead.\n- Deprecated `craft\\services\\ProjectConfig::$maxBackups`. `$maxDeltas` should be used instead.\n- Deprecated `craft\\services\\Search::indexElementFields()`.\n\n### Removed\n- Removed `craft\\events\\SetStatusEvent`.\n- Removed `craft\\models\\GqlSchema::PUBLIC_TOKEN`.\n- Removed `craft\\models\\GqlSchema::$accessToken`.\n- Removed `craft\\models\\GqlSchema::$enabled`.\n- Removed `craft\\models\\GqlSchema::$expiryDate`.\n- Removed `craft\\models\\GqlSchema::$lastUsed`.\n- Removed `craft\\models\\GqlSchema::$dateCreated`.\n- Removed `craft\\models\\GqlSchema::$isTemporary`.\n- Removed `craft\\models\\GqlSchema::getIsPublic()`.\n\n### Fixed\n- Fixed a SQL error that could occur if the `info` table has more than one row. ([#5222](https://github.com/craftcms/cms/issues/5222))\n- Fixed a bug where the control panel UI could come to a grinding halt if a large number of jobs were in the queue. ([#4533](https://github.com/craftcms/cms/issues/4533))\n- Fixed a layout issue where the control panel footer would be hidden if the Debug Toolbar was shown. ([#4591](https://github.com/craftcms/cms/issues/4591))\n- Fixed a bug where the image editor would not immediately apply new aspect ratio selections when cropping images.\n- Fixed a bug where the `maxBackups` config setting wasn\u2019t getting applied if a custom `backupCommand` was set.\n- Fixed a bug where it wasn\u2019t possible to use aliases for Matrix fields when querying via GraphQL. ([#5008](https://github.com/craftcms/cms/issues/5008))\n- Fixed a bug where Lightswitch column values within Table fields weren\u2019t returning boolean values when queried via GraphQL. ([#5344](https://github.com/craftcms/cms/issues/5344))\n- Fixed a bug where deactivating the Crop tool in the Image Editor would not set the image zoom correctly for straightened images.\n- Fixed a PHP error that could occur when running jobs from the queue in some PostgreSQL installations. ([#2715](https://github.com/craftcms/cms/issues/2715))\n- Fixed a bug where some classes didn\u2019t support `EVENT_DEFINE_BEHAVIORS`.\n- Fixed a bug where directives applied to object fields would be ignored when using GraphQL.\n- Fixed a SQL error that could occur when merging an element that belonged to a structure into another element that didn\u2019t. ([#5450](https://github.com/craftcms/cms/issues/5450))\n- Fixed a bug where eager-loaded relational fields would fetch elements from other sites by default. ([#5451](https://github.com/craftcms/cms/issues/5451))\n- Fixed a bug where Project Config event handlers weren\u2019t getting triggered if a parent config path had been updated in the same request. ([#5440](https://github.com/craftcms/cms/issues/5440))\n- Fixed a SQL error that could occur when searching for elements, if MySQL was used and the `searchindex` table was using InnoDB. ([#3862](https://github.com/craftcms/cms/issues/5440))\n- Fixed a PHP error that occurred when a dynamically generated class was loaded before it was finished being written. ([#5434](https://github.com/craftcms/cms/issues/5434))\n- Fixed an error that occurred after disabling a section for the primary site, while its existing entries were being resaved. ([#5489](https://github.com/craftcms/cms/issues/5489))\n- Fixed a bug where radio buttons within radio groups were getting `id` attributes even if no `id` was passed. ([#5508](https://github.com/craftcms/cms/issues/5508))\n\n## 3.3.20.1 - 2020-01-14\n\n### Fixed\n- Fixed a PHP error that would occur when running console commands. ([#5436](https://github.com/craftcms/cms/issues/5436))\n\n## 3.3.20 - 2020-01-14\n\n### Changed\n- The control panel will now display an alert if `useProjectConfigFile` is enabled, but the `project.yaml` file isn\u2019t writable. ([#4319](https://github.com/craftcms/cms/issues/4319))\n- Browser-based form validation is now disabled for element editor HUDs. ([#5433](https://github.com/craftcms/cms/issues/5433))\n\n### Fixed\n- Fixed a bug where entry revision menus could list sites that the entry didn\u2019t support. ([#5387](https://github.com/craftcms/cms/issues/5387))\n- Fixed a PHP warning that occurred when creating a new database backup. ([#5393](https://github.com/craftcms/cms/issues/5393))\n- Fixed an error that could occur when saving a Table field. ([#5398](https://github.com/craftcms/cms/issues/5398))\n- Fixed a bug where an unknown error was displayed when attempting to create an Asset folder without proper permissions. ([#5223](https://github.com/craftcms/cms/issues/5223))\n- Fixed a PHP warning that occurred sometimes when Craft was attempting to list resized versions of asset images. ([#5399](https://github.com/craftcms/cms/issues/5399))\n- Fixed a bug where preview target URLs weren\u2019t getting generated correctly if they contained an anchor. ([#5404](https://github.com/craftcms/cms/issues/5404))\n- Fixed couple bugs related to entry preview frames maintaining their scroll position between refreshes. ([#5404](https://github.com/craftcms/cms/issues/5404))\n- Fixed a bug where Matrix blocks weren\u2019t getting updated correctly when their field\u2019s Propagation Method setting was changed via `project.yaml`. ([#5295](https://github.com/craftcms/cms/issues/5295))\n- Fixed an error that could occur when syncing the project config if a Matrix field had been changed to something else. ([#5419](https://github.com/craftcms/cms/issues/5419))\n- Fixed a bug where changes to an entry draft\u2019s name or notes weren\u2019t getting saved until the next draft autosave. ([#5432](https://github.com/craftcms/cms/issues/5432))\n\n### Security\n- Fixed XSS vulnerabilities.\n\n## 3.3.19 - 2019-12-30\n\n### Changed\n- Improved the performance of `craft\\helpers\\StringHelper::containsMb4()`. ([#5366](https://github.com/craftcms/cms/issues/5366))\n- Updated Yii to 2.0.31.\n\n### Security\n- Fixed an information exposure vulnerability.\n\n## 3.3.18.4 - 2019-12-21\n\n### Fixed\n- Fixed a bug where \u201cUpdating search indexes\u201d jobs would show inaccurate progress bars. ([#5358](https://github.com/craftcms/cms/pull/5358))\n- Fixed a PHP error that could occur when using the `|attr` filter on an HTML element that had an existing attribute with an empty value. ([#5364](https://github.com/craftcms/cms/issues/5364))\n- Fixed a race condition that could result in a PHP error when generating `ElementQueryBehavior.php`. ([#5361](https://github.com/craftcms/cms/issues/5361))\n\n### Security\n- Fixed a bug where Craft was renewing the identity cookie each time it checked on the user\u2019s remaining session time. ([#3951](https://github.com/craftcms/cms/issues/3951))\n\n## 3.3.18.3 - 2019-12-17\n\n### Changed\n- Slug fields\u2019 translation icon tooltips now clarify that their values are translated for each site. ([#2064](https://github.com/craftcms/cms/issues/2064))\n\n### Fixed\n- Fixed a PHP error that could occur when `craft\\services\\Elements::getElementById()` was called with an element whose class didn\u2019t exist. ([#5345](https://github.com/craftcms/cms/issues/5345))\n- Fixed a PHP error that could occur when autoloading the `ContentBehavior` class in some environments.\n\n## 3.3.18.2 - 2019-12-15\n\n### Changed\n- Autosuggest inputs now restore focus to the input field when an alias is chosen. ([#5338](https://github.com/craftcms/cms/issues/5338))\n- The Guzzle requirement now excludes Guzzle 6.5.0. ([#5326](https://github.com/craftcms/cms/issues/5326))\n\n## 3.3.18.1 - 2019-12-10\n\n### Fixed\n- Fixed a JavaScript error that could occur if Craft didn\u2019t have a license key yet.\n\n## 3.3.18 - 2019-12-10\n\n### Added\n- Added `craft\\queue\\jobs\\ApplyMatrixPropagationMethod`.\n- Added `craft\\services\\Matrix::getSupportedSiteIds()`.\n\n### Changed\n- When a Matrix field\u2019s Propagation Method setting changes, the field\u2019s blocks are now duplicated into any sites where their content would have otherwise been deleted. ([#5182](https://github.com/craftcms/cms/issues/5182))\n- Title fields\u2019 translation icon tooltips now clarify that their values are translated for each site. ([#2064](https://github.com/craftcms/cms/issues/2064))\n\n### Deprecated\n- Deprecated `craft\\services\\Matrix::getSupportedSiteIdsForField()`. `getSupportedSiteIds()` should be used instead.\n\n### Fixed\n- Fixed a bug where the page URL could change when interacting with element selection modals. ([#5254](https://github.com/craftcms/cms/issues/5254))\n- Fixed a bug where entry draft changes could go unnoticed if they were made while another change was being saved. ([#5305](https://github.com/craftcms/cms/issues/5305))\n- Fixed an error that could occur when using the `|group` filter, if a function name was passed in (e.g. `date`).\n- Fixed a bug where `craft\\helpers\\FileHelper::writeToFile()` wasn\u2019t waiting until a lock could be acquired before writing to the file.\n- Fixed an issue where the Plugin Store was not creating a new cart when it was not able to retrieve an existing one. ([#5318](https://github.com/craftcms/cms/issues/5318))\n\n## 3.3.17 - 2019-12-03\n\n### Added\n- Added `craft\\base\\ElementInterface::lowerDisplayName()` and `pluralLowerDisplayName()`. ([#5271](https://github.com/craftcms/cms/issues/5271))\n\n### Changed\n- Error templates now have a `statusCode` variable even if the originating exception wasn\u2019t an instance of `yii\\web\\HttpException`. ([#5273](https://github.com/craftcms/cms/issues/5273))\n- Number fields now normalize their numbers to integers or floats, if the value that came from the database is a numeric string. ([#5268](https://github.com/craftcms/cms/issues/5268))\n- Craft no longer throws an `UnknownPropertyException` if a Local asset volume was converted to a different volume type from `config/volumes.php`. ([#5277](https://github.com/craftcms/cms/issues/5277))\n\n### Fixed\n- Fixed an issue where string encoding might not behave as expected in some environments running PHP 7.3 or greater. ([#4239](https://github.com/craftcms/cms/issues/4239))\n- Fixed an error that occurred when editing an entry if one of its past revisions used an entry type that was soft-deleted. ([#5270](https://github.com/craftcms/cms/issues/5270))\n- Fixed a JavaScript error that occurred when previewing assets via the \u201cPreview file\u201d action. ([#5272](https://github.com/craftcms/cms/pull/5272))\n- Fixed a bug where it wasn\u2019t possible to pass `null` values to GraphQL field arguments. ([#5267](https://github.com/craftcms/cms/issues/5267))\n- Fixed a bug where Craft wouldn\u2019t update the search indexes for non-localized element types (like Users) when the primary site was changed. ([#5281](https://github.com/craftcms/cms/issues/5281))\n- Fixed a bug where it wasn\u2019t possible to change images\u2019 focal points on mobile. ([#3669](https://github.com/craftcms/cms/issues/3669))\n- Fixed a bug where it wasn\u2019t possible to crop images on mobile. ([#5279](https://github.com/craftcms/cms/issues/5279))\n- Fixed an error that occurred if a token route didn\u2019t specify any params. ([#5282](https://github.com/craftcms/cms/pull/5282))\n- Fixed a PHP error that occurred when calling the deprecated `craft.session.getRememberedUsername()` template method, if the `username` cookie wasn\u2019t set. ([#5291](https://github.com/craftcms/cms/issues/5291))\n- Fixed a PHP error that occurred if the path param (`p`) was set to an array. ([#5292](https://github.com/craftcms/cms/issues/5292))\n- Fixed an error that occurred when viewing trashed entries, if any of them had been deleted along with a user account. ([#5287](https://github.com/craftcms/cms/issues/5287))\n\n## 3.3.16.3 - 2019-11-26\n\n### Fixed\n- Fixed an error that occurred when an element query\u2019s `indexBy` param was set `id`, `dateCreated`, `dateUpdated`, or `uid`.\n\n## 3.3.16.2 - 2019-11-26\n\n### Fixed\n- Fixed a SQL error that occurred when an element query\u2019s `indexBy` param set to a column from a table besides `elements`. ([#5216](https://github.com/craftcms/cms/issues/5216))\n- Fixed an issue where the edition was not taken into account when clicking \u201cBuy Now\u201d buttons on Settings \u2192 Plugins.\n\n## 3.3.16.1 - 2019-11-22\n\n### Fixed\n- Fixed an error that occurred if Stringy 5.2 was installed.\n\n## 3.3.16 - 2019-11-22\n\n### Added\n- Added `craft\\models\\GqlSchema::getAllScopePairs()`.\n- Added `craft\\models\\GqlSchema::getAllScopePairsForAction()`.\n- Added `craft\\web\\assets\\axios\\AxiosAsset.php`.\n\n### Changed\n- Improved Plugin Store performance.\n- Craft now makes most of its API requests from JavaScript rather than PHP, so servers with maxed-out HTTP connections won\u2019t get hung up waiting for the API response before serving additional requests. ([#5194](https://github.com/craftcms/cms/issues/5194), [#5232](https://github.com/craftcms/cms/issues/5232))\n- `errorSummary` is now a reserved field handle. ([#3032](https://github.com/craftcms/cms/issues/3032))\n- The `project-config/rebuild` command now ignores the `allowAdminChanges` config setting.\n- Improved the error message when failing to sync global set. ([#5257](https://github.com/craftcms/cms/issues/5257))\n- It\u2019s now easier to send JSON requests with `Craft.postActionRequest()`, by passing `contentType: 'json'` in the `options` argument.\n- Updated svg-sanitizer to 0.13.\n- Updated Yii to 2.0.30.\n\n### Deprecated\n- Deprecated `craft\\web\\assets\\graphiql\\VendorAsset`.\n\n### Fixed\n- Fixed a SQL error that could occur when using PostgreSQL.\n- Fixed a SQL error that could occur when calling an element query\u2019s `ids()` method with `indexBy('id')` set on it. ([#5216](https://github.com/craftcms/cms/issues/5216))\n- Fixed a layout issue with the GraphQL \u2192 Explore page on narrow browser windows. ([#5219](https://github.com/craftcms/cms/issues/5219))\n- Fixed a bug where `craft\\helpers\\UrlHelper::buildQuery()` would remove array param index numbers. ([#5233](https://github.com/craftcms/cms/issues/5233))\n- Fixed a PHP error that could occur when autoloading the `ContentBehavior` and `ElementQueryBehavior` classes in some environments.\n- Fixed an error where it wasn\u2019t possible to query by Date/Time field values via GraphQL. ([#5240](https://github.com/craftcms/cms/issues/5240))\n- Fixed an error where GraphQL caches weren\u2019t getting invalidated when an element was deleted. ([#5238](https://github.com/craftcms/cms/issues/5238))\n- Fixed an error where rebuilding the project config would omit sections\u2019 preview targets. ([#5215](https://github.com/craftcms/cms/issues/5215))\n- Fixed an error that occurred whet attempting to preview an entry revision. ([#5244](https://github.com/craftcms/cms/issues/5244))\n- Fixed a PHP error that could occur when the `relatedTo` param was set to an element query that would yield no results. ([#5242](https://github.com/craftcms/cms/issues/5242))\n- Fixed an error that could occur when saving a Matrix field. ([#5258](https://github.com/craftcms/cms/issues/5258))\n- Fixed a bug where Craft would sometimes fail to generate a correct GraphQL schema when Matrix fields were involved. ([#5255](https://github.com/craftcms/cms/issues/5255))\n\n### Security\n- Craft now requires Portable UTF-8 5.4.28 or later, fixing a security vulnerability.\n\n## 3.3.15 - 2019-11-05\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to apply project config changes that removed a Matrix block type which contained a nested Super Table field, if `allowAdminChanges` was set to `false`. ([#5078](https://github.com/craftcms/cms/issues/5078))\n- Fixed a bug where the nag alert that was shown when the wrong Craft edition was installed was including a \u201cResolve\u201d link even if the user didn\u2019t have access to the Plugin Store. ([#5190](https://github.com/craftcms/cms/issues/5190))\n- Fixed a PHP error that could occur when saving an element, if it had a Dropdown field that had been programmatically saved with integer option values. ([#5172](https://github.com/craftcms/cms/issues/5172))\n- Fixed a bug where \u201cUpdating search indexes\u201d jobs could fail. ([#5191](https://github.com/craftcms/cms/issues/5191))\n- Fixed an error that could occur if an invalid PHP interval string was passed to `craft\\helpers\\DateTimeHelper::isValidIntervalString()`. ([#5193](https://github.com/craftcms/cms/issues/5193))\n- Fixed a bug where it wasn\u2019t possible to access categories\u2019 and tags\u2019 `groupId` property via GraphQL. ([#5199](https://github.com/craftcms/cms/issues/5199))\n\n### Security\n- Fixed a bug where rows in the `sessions` table weren\u2019t getting deleted when a user was logged out.\n\n## 3.3.14 - 2019-10-30\n\n### Added\n- GraphQL entry queries now support an `authorGroupId` argument.\n- Added `craft\\gql\\types\\QueryArgument`.\n\n### Changed\n- It\u2019s now possible to provide multiple values for the `height`, `width`, and `size` arguments when querying or filtering assets via GraphQL.\n- It\u2019s now possible to provide multiple values for the `expiryDate` and `postDate` arguments when querying for elements via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `id` argument when querying for elements via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `folderId` and `volumeId` arguments when querying or filtering assets via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `groupId` argument when querying or filtering tags or categories via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `sectionId`, `typeId`, and `authorId` arguments when querying or filtering entries via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `fieldId`, `ownerId`, and `typeId` when filtering Matrix blocks via GraphQL.\n- Craft no longer bundles Bootstrap, as the Debug Extension now provides its own copy.\n- Updated the bundled locale data based on ICU 64.1.\n- Formatted dates now include two-digit months and days if that\u2019s what\u2019s called for by the ICU date formats. ([#5186](https://github.com/craftcms/cms/issues/5186))\n\n### Fixed\n- Fixed a bug where Edit Entry pages would often warn authors when leaving the page even if nothing had changed, if there was a Redactor field or other field that was doing its own value normalization on page load. ([craftcms/redactor#161](https://github.com/craftcms/redactor/issues/161))\n- Fixed a bug where assets could remain in their temporary upload location after an entry was first published. ([#5139](https://github.com/craftcms/cms/issues/5139)\n- Fixed a bug where the `update` command could run out of memory. ([#1852](https://github.com/craftcms/cms/issues/1852))\n- Fixed a bug where saving a new GraphQL schema would not populate the UID property.\n- Fixed a bug where Craft wasn\u2019t clearing search keywords for custom fields that weren\u2019t searchable anymore. ([#5168](https://github.com/craftcms/cms/issues/5168))\n- Fixed a bug where `relatedTo` element query params weren\u2019t returning elements that were related to the source element when previewing a draft or revision.\n- Fixed a bug where importing project config changes would break if they contained a changed global set and orphaned Matrix block types. ([#4789](https://github.com/craftcms/cms/issues/4789)\n\n## 3.3.13 - 2019-10-23\n\n### Added\n- It\u2019s now possible to pass arrow functions to the `|group` filter. ([#5156](https://github.com/craftcms/cms/issues/5156))\n\n### Changed\n- Underscores are now stripped from search keywords before being saved to the database.\n\n### Fixed\n- Fixed a bug where translation message parameters weren\u2019t getting parsed correctly if the installed ICU library was less than version 4.8. ([#4995](https://github.com/craftcms/cms/issues/4995))\n- Fixed a bug where GraphQL caches were not being invalidated on element save. ([#5148](https://github.com/craftcms/cms/issues/5148))\n- Fixed a bug where GraphQL type generators provided by plugins were not getting invoked when building introspection schemas. ([#5149](https://github.com/craftcms/cms/issues/5149))\n- Fixed an error that occurred when using the `|json_encode` Twig filter on console requests. ([#5150](https://github.com/craftcms/cms/issues/5150))\n- Fixed a bug where editable table rows could get taller than they should. ([#5159](https://github.com/craftcms/cms/issues/5159))\n\n## 3.3.12 - 2019-10-22\n\n### Added\n- GraphQL query results are now cached.\n- The GraphQL \u2192 Explore page now lists a \u201cFull Schema\u201d option before the Public Schema and any custom-defined schemas.\n- Added the \u201cGraphQL caches\u201d option for the Clear Caches utility.\n- Added the `gql()` Twig function, which executes a GraphQL query and returns the result.\n- Added the `enableGraphQlCaching` config setting.\n- Added the `transform` GraphQL parameter for asset URLs (alias of `handle`).\n- Added the `url` field to the `EntryInterface` GraphQL type. ([#5113](https://github.com/craftcms/cms/issues/5113))\n- Added the `relatedTo` and `relatedToAll` arguments for all GraphQL element queries. ([#5071](https://github.com/craftcms/cms/issues/5071))\n- Added support for multi-site GraphQL element queries. ([#5079](https://github.com/craftcms/cms/issues/5079))\n- Added `craft\\helpers\\Gql::createFullAccessSchema()`.\n- Added `craft\\models\\GqlSchema::$isTemporary`.\n- Added the `$invalidateCaches` argument to `craft\\services\\Gql::saveSchema()`.\n\n### Changed\n- Matrix blocks now maintain the same `display` style when expanded as they had before they were initially collapsed. ([#5075](https://github.com/craftcms/cms/issues/5075))\n- It\u2019s no longer necessary to register GraphQL type loaders when creating types.\n- Improved the performance of downloading remote assets. ([#5134](https://github.com/craftcms/cms/pull/5134))\n- The `craft\\services\\Gql::executeQuery()` method now expects an active schema object, instead of a GraphQL Schema object.\n- The `users/save-user` action no longer copies `unverifiedEmail` validation errors over to the `email` attribute if the `email` attribute already has its own errors.\n- `users/set-password` requests now respond with JSON if the request accepts a JSON response. ([#5138](https://github.com/craftcms/cms/pull/5138))\n\n### Deprecated\n- Deprecated the `$checkToken` argument for `craft\\gql\\base\\Query::getQueries()`. `craft\\helpers\\Gql::getFullAccessSchema()` should be used instead to ensure all queries are returned.\n\n### Fixed\n- Fixed a bug that could occur when using plugin specific config files while running functional tests. ([#5137](https://github.com/craftcms/cms/pull/5137))\n- Fixed an error that occurred when loading a relational field\u2019s selection modal, if no sources were visible.\n- Fixed a bug where required relational fields would get a validation error if only elements from other sites were selected. ([#5116](https://github.com/craftcms/cms/issues/5116))\n- Fixed a bug where the \u201cProfile Twig templates when Dev Mode is disabled\u201d admin preference wasn\u2019t saving. ([#5118](https://github.com/craftcms/cms/pull/5118))\n- Fixed a bug where failed queue jobs were losing their `dateReserved`, `timeUpdated`, `progress`, and `progressLabel` values.\n- Fixed a PHP error occurred when viewing the PHP Info utility if `register_argc_argv` was set to `On` in `php.ini`. ([#4878](https://github.com/craftcms/cms/issues/4878))\n- Fixed a bug where the `craft\\queue\\jobs\\UpdateSearchIndex` was ignorning the `siteId` property.\n- Fixed a bug where Craft could attempt to perform transforms on element URLs for elements that were not Assets when using GraphQL.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to pass `*` to `site` arguments via GraphQL. ([#5079](https://github.com/craftcms/cms/issues/5079))\n\n## 3.3.11 - 2019-10-16\n\n### Added\n- Added `craft\\events\\ExecuteGqlQueryEvent`.\n- Added `craft\\services\\Gql::EVENT_BEFORE_EXECUTE_GQL_QUERY`.\n- Added `craft\\services\\Gql::EVENT_AFTER_EXECUTE_GQL_QUERY`.\n- Added `craft\\services\\Gql::executeQuery()`.\n\n### Changed\n- Dropdown and Multi-select fields can now have duplicate option labels, as long as they are in different optgroups. ([#5105](https://github.com/craftcms/cms/issues/5105))\n\n### Fixed\n- Fixed a bug where user email changes were going through email verification even if someone with permission to administrate users was making the change. ([#5088](https://github.com/craftcms/cms/issues/5088))\n- Fixed an error that could occur when duplicating entries with Matrix blocks. ([#5097](https://github.com/craftcms/cms/issues/5097))\n\n## 3.3.10 - 2019-10-15\n\n### Added\n- Added the `allowOwnerDrafts` and `allowOwnerRevisions` Matrix block query params.\n- Added the ability to skip refreshing the project config before running individual tests. ([#5072](https://github.com/craftcms/cms/pull/5072))\n- Added `craft\\test\\Craft::resetProjectConfig()`.\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t passing assets\u2019 MIME types to cloud storage services when saving them. ([#5052](https://github.com/craftcms/cms/issues/5052))\n- Fixed a bug where Assets fields\u2019 image thumbnails weren\u2019t getting refreshed after images were edited. ([#4212](https://github.com/craftcms/cms/issues/4212))\n- Fixed a bug where the `index-assets` command would bail as soon as it came across a file with a disallowed file extension. ([#5086](https://github.com/craftcms/cms/issues/5086))\n- Fixed a bug where it wasn\u2019t possible to eager-load Matrix blocks that belong to a draft or revision. ([#5031](https://github.com/craftcms/cms/issues/5031))\n- Fixed a bug where the `setup` command would think that Craft was installed when it wasn\u2019t. ([#5093](https://github.com/craftcms/cms/issues/5093))\n- Fixed an error that could occur when syncing the project config if a Matrix field had been changed to something else. ([#4015](https://github.com/craftcms/cms/issues/4015))\n- Fixed a bug where Assets fields weren\u2019t always showing the \u201cEdit\u201d button for images when they should. ([#4618](https://github.com/craftcms/cms/issues/4618))\n- Fixed a bug where `craft\\services\\Elements::duplicateElement()` wasn\u2019t ensuring that the duplicate had a valid slug on all sites. ([#5097](https://github.com/craftcms/cms/issues/5097))\n- Fixed a bug where querying for elements by their Lightswitch field value could only return elements that had been saved since the Lightswitch field was added, when using PostgreSQL. ([#5073](https://github.com/craftcms/cms/issues/5073))\n- Fixed a SQL error that could occur when querying for Matrix blocks.\n- Fixed a bug where entries that were disabled globally would still get a green status indicator within the entry context menu on Edit Entry pages.\n\n## 3.3.9 - 2019-10-10\n\n### Changed\n- The `project-config/sync` command now correctly returns an error code on failure. ([#4153](https://github.com/craftcms/cms/issues/4153))\n- User queries now include the `unverifiedEmail` value by default. ([#5019](https://github.com/craftcms/cms/issues/5019))\n\n### Fixed\n- Fixed a bug where updating a draft might delete content on other sites in a multisite setup on certain PHP versions. ([#5048](https://github.com/craftcms/cms/issues/5048))\n- Fixed an error that occurred when running console commands before Craft was installed. ([#5083](https://github.com/craftcms/cms/issues/5083))\n\n## 3.3.8 - 2019-10-09\n\n### Added\n- Added `craft\\web\\Request::getNormalizedContentType()`.\n\n### Changed\n- Eliminated a `SHOW TABLES` SQL query that was getting executed on every request.\n- Craft no longer routes requests based on `action` params in the request body, if the request\u2019s content type is `application/json`.\n- Added support for the `text/vtt` MIME type. ([#5052](https://github.com/craftcms/cms/issues/5052))\n- Updated Twig to 2.12.\n\n### Fixed\n- Fixed a SQL error that could occur when deleting an entry or category with three or more nested levels of elements. ([#3456](https://github.com/craftcms/cms/issues/3456))\n- Fixed a bug where querying for elements by their Lightswitch field value wasn\u2019t working properly on PostgreSQL. ([#5046](https://github.com/craftcms/cms/issues/5046))\n- Fixed a bug where deleting an entry or category with nested elements could leave the structure in a jumbled state.\n- Fixed a bug where Assets fields would attempt to handle the same uploaded files multiple times if an element was saved multiple times in the same request. ([#5061](https://github.com/craftcms/cms/issues/5061))\n- Fixed a PHP error occurred when viewing the PHP Info utility if `register_argc_argv` was set to `On` in `php.ini`. ([#4878](https://github.com/craftcms/cms/issues/4878))\n- Fixed a bug where the `resave/matrix-blocks` command would wittingly resave Matrix blocks even if they hadn\u2019t been loaded with their content, resulting in lost content. ([#5030](https://github.com/craftcms/cms/issues/5030))\n- Fixed some RTL display issues. ([#5051](https://github.com/craftcms/cms/issues/5051))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.3.7 - 2019-10-03\n\n### Changed\n- When saving a user, email validation errors are now copied over to the `email` attribute from the `unverifiedEmail` attribute. ([#5019](https://github.com/craftcms/cms/issues/5019))\n- `craft\\web\\View::renderString()` and `renderObjectTemplate()` now have `$templateMode` arguments. ([#5020](https://github.com/craftcms/cms/issues/5020))\n\n### Fixed\n- Fixed a bug where the Edit User page would list a \u201cCopy activation URL\u201d action for publicly-registered users who already had a password set.\n- Fixed a bug where the list and structure icons were missing on element index pages for RTL languages. ([#5018](https://github.com/craftcms/cms/issues/5018))\n- Fixed a bug where the `prevSiblingOf` and `nextSiblingOf` element query params weren\u2019t working reliably. ([#4997](https://github.com/craftcms/cms/issues/4997))\n- Fixed a bug where the `descendantOf` element query param wasn\u2019t working when previewing a draft or revision. ([#5021](https://github.com/craftcms/cms/issues/5021))\n- Fixed a PHP error that occurred when saving a Dropdown or Multi-select field with optgroups. ([#5014](https://github.com/craftcms/cms/issues/5014))\n- Fixed a bug where relational fields that were managing relations on a per-site basis would forget other sites\u2019 relations when duplicated. ([#5038](https://github.com/craftcms/cms/issues/5038))\n\n## 3.3.6 - 2019-09-27\n\n### Added\n- Added `craft\\base\\ElementInterface::getIsHomepage()`. ([#4993](https://github.com/craftcms/cms/issues/4993))\n- Added `craft\\base\\Element::HOMEPAGE_URI`.\n\n### Changed\n- Updated Garnish to 0.1.31.\n\n### Fixed\n- Fixed a bug where some HTML in the Control Panel was getting improperly encoded. ([#5002](https://github.com/craftcms/cms/issues/5002))\n- Fixed a bug where `craft\\helper\\UrlHelper` wasn\u2019t encoding `+` and `&` characters in query param values.\n- Fixed an error where GraphQL would sometimes not return a proper error message. ([#4999](https://github.com/craftcms/cms/issues/4999))\n- Fixed a bug where HUDs could be positioned incorrectly when first opened. ([#5004](https://github.com/craftcms/cms/issues/5004))\n- Fixed a bug where HUD tip images could be pointing the wrong way for RTL languages.\n\n## 3.3.5 - 2019-09-25\n\n### Added\n- The Control Panel is now translated into Persian. ([#4969](https://github.com/craftcms/cms/pull/4969))\n- Added `craft\\test\\fixtures\\elements\\ElementFixture::$unload`.\n\n### Changed\n- All users with permission to register users can now choose to not have an activation email sent immediately, when registering a new user. ([#4981](https://github.com/craftcms/cms/pull/4981))\n- Craft now shows validation errors when attempting to save a Dropdown, Radio Buttons, Checkboxes, or Multi-select field with duplicate option labels or values. ([#4983](https://github.com/craftcms/cms/issues/4983))\n- Live Preview requests now have an `x-craft-live-preview` query string param, rather than `x-craft-preview`. ([#4950](https://github.com/craftcms/cms/issues/4950))\n- The `_includes/pagination.html` template can now be passed `itemLabel` and `itemsLabel` variables.\n- Any migrations applied during testing are now recorded as content migrations.\n- Added the option to automatically apply all content migrations when setting up the test environment. ([#4904](https://github.com/craftcms/cms/issues/4904))\n- `craft\\helpers\\Html::parseTagAttributes()` now has a `$decode` argument.\n- `craft\\test\\fixtures\\elements\\GlobalSetFixture` now has the option to load the active record instance. ([#4947](https://github.com/craftcms/cms/pull/4947))\n\n### Fixed\n- Fixed a bug where checkbox inputs were positioned incorrectly for RTL languages.\n- Fixed a bug where the updater and `project.yaml` sync pages weren\u2019t always handling error responses correctly. ([#4988](https://github.com/craftcms/cms/issues/4988))\n- Fixed an error that could occur when syncing the project config, if a volume was being deleted that didn\u2019t exist in the database to begin with. ([#4990](https://github.com/craftcms/cms/pull/4990))\n- Fixed an error that could occur if a project config value changed from scalar to an array. ([#4932](https://github.com/craftcms/cms/issues/4932))\n- Fixed a bug where Craft would not recognize certain block types when using the GraphQL API. ([#4961](https://github.com/craftcms/cms/issues/4961))\n- Fixed a bug where `craft\\helpers\\Html::renderTagAttributes()` was double-encoding preexisting attributes. ([#4984](https://github.com/craftcms/cms/issues/4984))\n\n## 3.3.4.1 - 2019-09-17\n\n### Fixed\n- Fixed a bug where elements with enabled Lightswitch fields weren\u2019t getting returned in element queries. ([#4951](https://github.com/craftcms/cms/issues/4951))\n\n## 3.3.4 - 2019-09-17\n\n### Changed\n- It\u2019s now possible to run the `migrate/create install` command for uninstalled plugins.\n- Improved the button labels in the confirmation dialog that can appear after running the Asset Indexes utility. ([#4943](https://github.com/craftcms/cms/issues/4943))\n\n### Fixed\n- Fixed a bug where asset queries\u2019 `withTransforms` param wasn\u2019t working for eager-loaded assets. ([#4931](https://github.com/craftcms/cms/issues/4931))\n- Fixed a bug where the \u201cEdit Image\u201d asset action could be missing even if the user had the required permissions. ([#3349](https://github.com/craftcms/cms/issues/3349))\n- Fixed a bug where querying for elements by their Lightswitch field value could only return elements that had been saved since the Lightswitch field was added. ([#4939](https://github.com/craftcms/cms/issues/4939))\n- Fixed a bug where the Updates utility wasn\u2019t showing the \u201cUpdate all\u201d button when multiple updates were available. ([#4938](https://github.com/craftcms/cms/issues/4938))\n- Fixed a bug where the \u201cUpdating search indexes\u201d job could fail when updating search indexes for a Matrix block that contained a relational field.\n- Fixed a bug where category groups\u2019 site settings weren\u2019t being added to the project config when a new site was created.\n- Fixed a bug where the Translation Method setting wasn\u2019t immediately shown for Matrix sub-fields, if the field type was changed from one that didn\u2019t have multiple translation methods to one that does. ([#4949](https://github.com/craftcms/cms/issues/4949))\n- Fixed a bug where it wasn\u2019t possible to query for entries by author ID using the GraphQL API.\n- Fixed a bug where it wasn\u2019t possible to query for Matrix blocks directly using the GraphQL API.\n\n## 3.3.3 - 2019-09-12\n\n### Changed\n- The GraphQL API now prebuilds the schema for all introspection queries, regardless of whether Dev Mode is enabled.\n\n### Fixed\n- Fixed a bug where Craft was ignoring the `invalidUserTokenPath` request when it was set to an empty string. ([#1998](https://github.com/craftcms/cms/issues/1998))\n- Fixed a bug where the `invalidUserTokenPath` was affecting Control Panel requests.\n- Fixed a bug where revisions weren\u2019t being sorted correctly in Structure sections.\n- Fixed a bug where Edit Entry pages weren\u2019t working with certain versions of PHP if the user\u2019s preferred language was set to French. ([#4930](https://github.com/craftcms/cms/issues/4930))\n\n## 3.3.2 - 2019-09-11\n\n### Added\n- Added the `graphql/dump-schema` and `graphql/print-schema` commands. ([#4834](https://github.com/craftcms/cms/pull/4834))\n- It\u2019s now possible to access a `parent` field on entries and categories when querying the GraphQL API. ([#4880](https://github.com/craftcms/cms/issues/4880))\n- It\u2019s now possible to apply transforms to assets via `url` field arguments when querying the GraphQL API.\n\n### Changed\n- Craft now resets the `dateCreated` attribute when duplicating elements. ([#4906](https://github.com/craftcms/cms/issues/4906))\n- It\u2019s no longer possible to access the `author` field for entries when querying the GraphQL API, if the schema doesn\u2019t include user data.\n- It\u2019s no longer possible to access the `photo` field for users when querying the GraphQL API, if the schema doesn\u2019t include the user photo volume.\n\n### Fixed\n- Fixed a bug where Lightswitch fields weren\u2019t returning a boolean value for the GraphQL API.\n- Fixed a bug where `craft\\web\\View::renderString()` and `renderObjectTemplate()` could leave Craft set to the `site` template mode if an error occurred when preparing or rendering the template. ([#4912](https://github.com/craftcms/cms/issues/4912))\n- Fixed a bug where the Plugin Store wasn\u2019t applying edition upgrade pricing for plugins if the higher edition was already installed as a trial.\n\n## 3.3.1.2 - 2019-09-08\n\n### Fixed\n- Fixed an error that occurred after saving an element with a validation error. ([#4898](https://github.com/craftcms/cms/issues/4898))\n\n## 3.3.1.1 - 2019-09-06\n\n### Changed\n- `graphql/api` preflight responses now explicitly allow `Authorization` headers. ([#4830](https://github.com/craftcms/cms/issues/4830))\n- Updated Garnish to 0.1.30.\n\n### Fixed\n- Fixed a bug where selecting Matrix blocks would cause the content container to scroll. ([#3762](https://github.com/craftcms/cms/issues/3762))\n- Fixed an error that occurred if Stringy 5.2 was installed.\n\n## 3.3.1 - 2019-09-06\n\n### Added\n- Added support for setting `offset` and `limit` params to individual paths\u2019 criteria when eager loading elements.\n- Added the `enableGql` config setting. ([#4836](https://github.com/craftcms/cms/issues/4836))\n- Added the `children` field to the `EntryInterface` and `CategoryInterface` GraphQL types. ([#4843](https://github.com/craftcms/cms/issues/4843))\n- Added the `markdown` GraphQL directive. ([#4832](https://github.com/craftcms/cms/issues/4832))\n\n### Changed\n- Preview target URIs can now be set to environment variables (e.g. `$NEWS_INDEX`) or URLs that begin with an alias (e.g. `@rootUrl/news` or `@rootUrl/news/{slug}`).\n- Templates passed to `craft\\web\\View::renderString()` and `renderObjectTemplate()` can now include front-end templates.\n- Element queries with the `revisions` param set will now return revisions ordered by `num DESC` by default. ([#4825](https://github.com/craftcms/cms/issues/4825))\n- `graphql/api` responses now set the `Access-Control-Allow-Headers: Content-Type` header for preflight requests.\n- Craft no longer forces preview target URLs to use `https` if the current request is over SSL. ([#4867](https://github.com/craftcms/cms/issues/4867))\n\n### Removed\n- Removed `craft\\elements\\MatrixBlock::getField()`. ([#4882](https://github.com/craftcms/cms/issues/4882))\n\n### Fixed\n- Fixed a bug where Number fields weren\u2019t showing validation errors when non-numeric values were entered. ([#4849](https://github.com/craftcms/cms/issues/4849))\n- Fixed an error that occurred when accessing the GraphQL section in the Control Panel if the `allowAdminChanges` config setting was disabled. ([#4884](https://github.com/craftcms/cms/issues/4884))\n- Fixed an error that could occur when executing a GraphQL query if a Matrix field had been converted to a different field type. ([#4848](https://github.com/craftcms/cms/issues/4848))\n- Fixed a deprecation warning when running tests in PhpStorm. ([#4772](https://github.com/craftcms/cms/pull/4772))\n- Fixed an SQL error that occurred when eager loading children for an element that wasn\u2019t in a structure.\n- Fixed a bug that could cause queue jobs to fail when they were run automatically by Craft, if the `enableCsrfProtection` config setting was disabled. ([#4854](https://github.com/craftcms/cms/issues/4854))\n- Fixed an error that could occur if the `select` clause had been completely overridden on an element query, but the `asArray` param wasn\u2019t enabled. ([#4886](https://github.com/craftcms/cms/issues/4886))\n- Fixed a bug where Craft wasn\u2019t always respecting the site-specific status when saving new entries. ([#4892](https://github.com/craftcms/cms/issues/4892))\n\n## 3.3.0.1 - 2019-08-27\n\n### Changed\n- `graphql/api` responses now send CORS headers to allow crossdomain requests. ([#4830](https://github.com/craftcms/cms/issues/4830))\n\n### Fixed\n- Fixed a PHP error that could occur when editing an existing GraphQL schema. ([#4827](https://github.com/craftcms/cms/issues/4827))\n- Fixed a PHP error that could occur when using PostgreSQL. ([#4828](https://github.com/craftcms/cms/issues/4828))\n\n## 3.3.0 - 2019-08-27\n\n### Added\n- Added a built-in, autogenerated GraphQL API for content (Craft Pro only). ([#4540](https://github.com/craftcms/cms/pull/4540))\n- Added \u201cHeadless Mode\u201d, which optimizes the system and Control Panel for headless CMS implementations.\n- It\u2019s now possible to create Single sections without URLs. ([#3883](https://github.com/craftcms/cms/issues/3883))\n- Added the `hiddenInput()` Twig function, which generates a hidden input tag.\n- Added the `input()` Twig function, which generates an input tag.\n- Added the `tag()` Twig function, which generates an HTML tag.\n- Added the `|attr` Twig filter, which modifies the attributes on an HTML tag. ([#4660](https://github.com/craftcms/cms/issues/4660))\n- Added the `|append` and `|prepend` Twig filters, which add new HTML elements as children of an HTML tag. ([#3937](https://github.com/craftcms/cms/issues/3937))\n- Added the `headlessMode` config setting.\n- Added the `purgeStaleUserSessionDuration` config setting.\n- Admin users can now opt into getting the full stack trace view when an uncaught exception occurs when Dev Mode isn\u2019t enabled. ([#4765](https://github.com/craftcms/cms/issues/4765))\n- Admin users can now opt into having Twig templates profiled when Dev Mode isn\u2019t enabled.\n- Added the `graphql/api` controller action.\n- Added `craft\\base\\ApplicationTrait::getGql()`.\n- Added `craft\\base\\EagerLoadingFieldInterface::getEagerLoadingGqlConditions()`.\n- Added `craft\\base\\ElementInterface::getGqlTypeName()`.\n- Added `craft\\base\\ElementInterface::gqlScopesByContext()`.\n- Added `craft\\base\\ElementInterface::gqlTypeNameByContext()`.\n- Added `craft\\base\\Field::getEagerLoadingGqlConditions()`.\n- Added `craft\\base\\FieldInterface::getContentGqlType()`.\n- Added `craft\\base\\GqlInlineFragmentFieldInterface`.\n- Added `craft\\base\\GqlInlineFragmentInterface`.\n- Added `craft\\controllers\\GraphqlController`.\n- Added `craft\\errors\\GqlException`.\n- Added `craft\\events\\RegisterGqlDirectivesEvent`.\n- Added `craft\\events\\RegisterGqlQueriesEvent`.\n- Added `craft\\events\\RegisterGqlTypesEvent`.\n- Added `craft\\gql\\arguments\\elements\\Asset`.\n- Added `craft\\gql\\arguments\\elements\\Category`.\n- Added `craft\\gql\\arguments\\elements\\Entry`.\n- Added `craft\\gql\\arguments\\elements\\GlobalSet`.\n- Added `craft\\gql\\arguments\\elements\\MatrixBlock`.\n- Added `craft\\gql\\arguments\\elements\\Tag`.\n- Added `craft\\gql\\arguments\\elements\\User`.\n- Added `craft\\gql\\base\\Arguments`.\n- Added `craft\\gql\\base\\Directive`.\n- Added `craft\\gql\\base\\ElementArguments`.\n- Added `craft\\gql\\base\\ElementResolver`.\n- Added `craft\\gql\\base\\GeneratorInterface`.\n- Added `craft\\gql\\base\\GqlTypeTrait`.\n- Added `craft\\gql\\base\\InterfaceType`.\n- Added `craft\\gql\\base\\ObjectType`.\n- Added `craft\\gql\\base\\Query`.\n- Added `craft\\gql\\base\\Resolver`.\n- Added `craft\\gql\\base\\StructureElementArguments`.\n- Added `craft\\gql\\directives\\FormatDateTime`.\n- Added `craft\\gql\\directives\\Transform`.\n- Added `craft\\gql\\GqlEntityRegistry`.\n- Added `craft\\gql\\interfaces\\Element`.\n- Added `craft\\gql\\interfaces\\elements\\Asset`.\n- Added `craft\\gql\\interfaces\\elements\\Category`.\n- Added `craft\\gql\\interfaces\\elements\\Entry`.\n- Added `craft\\gql\\interfaces\\elements\\GlobalSet`.\n- Added `craft\\gql\\interfaces\\elements\\MatrixBlock`.\n- Added `craft\\gql\\interfaces\\elements\\Tag`.\n- Added `craft\\gql\\interfaces\\elements\\User`.\n- Added `craft\\gql\\interfaces\\Structure`.\n- Added `craft\\gql\\queries\\Asset`.\n- Added `craft\\gql\\queries\\Category`.\n- Added `craft\\gql\\queries\\Entry`.\n- Added `craft\\gql\\queries\\GlobalSet`.\n- Added `craft\\gql\\queries\\Ping`.\n- Added `craft\\gql\\queries\\Tag`.\n- Added `craft\\gql\\queries\\User`.\n- Added `craft\\gql\\resolvers\\elements\\Asset`.\n- Added `craft\\gql\\resolvers\\elements\\Category`.\n- Added `craft\\gql\\resolvers\\elements\\Entry`.\n- Added `craft\\gql\\resolvers\\elements\\GlobalSet`.\n- Added `craft\\gql\\resolvers\\elements\\MatrixBlock`.\n- Added `craft\\gql\\resolvers\\elements\\Tag`.\n- Added `craft\\gql\\resolvers\\elements\\User`.\n- Added `craft\\gql\\TypeLoader`.\n- Added `craft\\gql\\types\\DateTime`.\n- Added `craft\\gql\\types\\elements\\Asset`.\n- Added `craft\\gql\\types\\elements\\Category`.\n- Added `craft\\gql\\types\\elements\\Element`.\n- Added `craft\\gql\\types\\elements\\Entry`.\n- Added `craft\\gql\\types\\elements\\GlobalSet`.\n- Added `craft\\gql\\types\\elements\\MatrixBlock`.\n- Added `craft\\gql\\types\\elements\\Tag`.\n- Added `craft\\gql\\types\\elements\\User`.\n- Added `craft\\gql\\types\\generators\\AssetType`.\n- Added `craft\\gql\\types\\generators\\CategoryType`.\n- Added `craft\\gql\\types\\generators\\ElementType`.\n- Added `craft\\gql\\types\\generators\\EntryType`.\n- Added `craft\\gql\\types\\generators\\GlobalSetType`.\n- Added `craft\\gql\\types\\generators\\MatrixBlockType`.\n- Added `craft\\gql\\types\\generators\\TableRowType`.\n- Added `craft\\gql\\types\\generators\\TagType`.\n- Added `craft\\gql\\types\\generators\\UserType`.\n- Added `craft\\gql\\types\\Query`.\n- Added `craft\\gql\\types\\TableRow`.\n- Added `craft\\helpers\\App::webResponseConfig()`.\n- Added `craft\\helpers\\ArrayHelper::whereMultiple()`.\n- Added `craft\\helpers\\ElementHelper::sourceElement()`.\n- Added `craft\\helpers\\Gql`.\n- Added `craft\\helpers\\Html::a()`.\n- Added `craft\\helpers\\Html::actionInput()`.\n- Added `craft\\helpers\\Html::appendToTag()`.\n- Added `craft\\helpers\\Html::csrfInput()`.\n- Added `craft\\helpers\\Html::modifyTagAttributes()`.\n- Added `craft\\helpers\\Html::normalizeTagAttributes()`.\n- Added `craft\\helpers\\Html::parseTag()`.\n- Added `craft\\helpers\\Html::parseTagAttributes()`.\n- Added `craft\\helpers\\Html::prependToTag()`.\n- Added `craft\\helpers\\Html::redirectInput()`.\n- Added `craft\\helpers\\StringHelper::afterFirst()`.\n- Added `craft\\helpers\\StringHelper::afterLast()`.\n- Added `craft\\helpers\\StringHelper::append()`.\n- Added `craft\\helpers\\StringHelper::appendRandomString()`.\n- Added `craft\\helpers\\StringHelper::appendUniqueIdentifier()`.\n- Added `craft\\helpers\\StringHelper::at()`.\n- Added `craft\\helpers\\StringHelper::beforeFirst()`.\n- Added `craft\\helpers\\StringHelper::beforeLast()`.\n- Added `craft\\helpers\\StringHelper::capitalizePersonalName()`.\n- Added `craft\\helpers\\StringHelper::count()`.\n- Added `craft\\helpers\\StringHelper::dasherize()`.\n- Added `craft\\helpers\\StringHelper::endsWithAny()`.\n- Added `craft\\helpers\\StringHelper::escape()`.\n- Added `craft\\helpers\\StringHelper::extractText()`.\n- Added `craft\\helpers\\StringHelper::htmlDecode()`.\n- Added `craft\\helpers\\StringHelper::htmlEncode()`.\n- Added `craft\\helpers\\StringHelper::humanize()`.\n- Added `craft\\helpers\\StringHelper::is()`.\n- Added `craft\\helpers\\StringHelper::isBase64()`.\n- Added `craft\\helpers\\StringHelper::isBlank()`.\n- Added `craft\\helpers\\StringHelper::isHexadecimal()`.\n- Added `craft\\helpers\\StringHelper::isHtml()`.\n- Added `craft\\helpers\\StringHelper::isJson()`.\n- Added `craft\\helpers\\StringHelper::isSerialized()`.\n- Added `craft\\helpers\\StringHelper::isUtf8()`.\n- Added `craft\\helpers\\StringHelper::isWhitespace()`.\n- Added `craft\\helpers\\StringHelper::lastSubstringOf()`.\n- Added `craft\\helpers\\StringHelper::lineWrapAfterWord()`.\n- Added `craft\\helpers\\StringHelper::pad()`.\n- Added `craft\\helpers\\StringHelper::padBoth()`.\n- Added `craft\\helpers\\StringHelper::padLeft()`.\n- Added `craft\\helpers\\StringHelper::padRight()`.\n- Added `craft\\helpers\\StringHelper::removeHtml()`.\n- Added `craft\\helpers\\StringHelper::removeHtmlBreak()`.\n- Added `craft\\helpers\\StringHelper::repeat()`.\n- Added `craft\\helpers\\StringHelper::replaceAll()`.\n- Added `craft\\helpers\\StringHelper::replaceBeginning()`.\n- Added `craft\\helpers\\StringHelper::replaceEnding()`.\n- Added `craft\\helpers\\StringHelper::replaceFirst()`.\n- Added `craft\\helpers\\StringHelper::replaceLast()`.\n- Added `craft\\helpers\\StringHelper::safeTruncate()`.\n- Added `craft\\helpers\\StringHelper::shortenAfterWord()`.\n- Added `craft\\helpers\\StringHelper::shuffle()`.\n- Added `craft\\helpers\\StringHelper::slice()`.\n- Added `craft\\helpers\\StringHelper::slugify()`.\n- Added `craft\\helpers\\StringHelper::split()`.\n- Added `craft\\helpers\\StringHelper::startsWithAny()`.\n- Added `craft\\helpers\\StringHelper::stripCssMediaQueries()`.\n- Added `craft\\helpers\\StringHelper::stripEmptyHtmlTags()`.\n- Added `craft\\helpers\\StringHelper::stripHtml()`.\n- Added `craft\\helpers\\StringHelper::stripWhitespace()`.\n- Added `craft\\helpers\\StringHelper::substringOf()`.\n- Added `craft\\helpers\\StringHelper::surround()`.\n- Added `craft\\helpers\\StringHelper::tidy()`.\n- Added `craft\\helpers\\StringHelper::titleizeForHumans()`.\n- Added `craft\\helpers\\StringHelper::toBoolean()`.\n- Added `craft\\helpers\\StringHelper::toSpaces()`.\n- Added `craft\\helpers\\StringHelper::toTabs()`.\n- Added `craft\\helpers\\StringHelper::toTransliterate()`.\n- Added `craft\\helpers\\StringHelper::trimLeft()`.\n- Added `craft\\helpers\\StringHelper::trimRight()`.\n- Added `craft\\helpers\\StringHelper::upperCamelize()`.\n- Added `craft\\helpers\\StringHelper::upperCaseFirst()`.\n- Added `craft\\helpers\\Template::beginProfile()`.\n- Added `craft\\helpers\\Template::endProfile()`.\n- Added `craft\\helpers\\UrlHelper::buildQuery()`.\n- Added `craft\\model\\MatrixBlockType::getField()`.\n- Added `craft\\models\\GqlSchema`.\n- Added `craft\\records\\GqlSchema`.\n- Added `craft\\services\\Fields::getGroupByUid()`.\n- Added `craft\\services\\Gql`.\n- Added `craft\\services\\Matrix::getAllBlockTypes()`.\n- Added `craft\\services\\Sections::getAllEntryTypes()`.\n- Added `craft\\web\\assets\\graphiql\\GraphiqlAsset`.\n- Added `craft\\web\\assets\\graphiql\\VendorAsset`.\n- Added `craft\\web\\twig\\nodes\\ProfileNode`.\n- Added `craft\\web\\twig\\nodevisitors\\Profiler`.\n\n### Changed\n- Relational fields without a specific target site will now only return related elements from the same site as the source element by default, as they did before Craft 3.2. ([#4751](https://github.com/craftcms/cms/issues/4751))\n- Element arrays no longer include `hasDescendants` or `totalDescendants` keys by default. ([#4820](https://github.com/craftcms/cms/issues/4820))\n- Matrix block queries no longer include blocks owned by drafts or revisions by default. ([#4790](https://github.com/craftcms/cms/issues/4790))\n- Entries\u2019 drafts and revisions are now soft-deleted and restored along with their source elements. ([#4797](https://github.com/craftcms/cms/issues/4797))\n- Global set reference tags can now refer to the global set by its handle. ([#4645](https://github.com/craftcms/cms/issues/4645))\n- Improved Twig template profiling to include blocks and macros.\n- Twig template profiling no longer occurs when Dev Mode isn\u2019t enabled, unless an admin user is logged in and has opted into it.\n- The `actionInput()`, `csrfInput()`, and `redirectInput()` Twig functions now support an `options` argument for customizing the HTML tag attributes.\n- The `_layouts/forms/field.html` template now supports `label`, `instructions`, `tip`, `warning`, and `input` blocks that can be overridden when including the template with an `{% embed %}` tag.\n- Editable tables now support a `fullWidth` setting, which can be set to `false` to prevent the table from spanning the full width of the page.\n- Editable tables now support `thin` column settings.\n- Editable tables now support `headingHtml` column settings.\n- Craft no longer overrides the base Twig template class, unless the now-deprecated `suppressTemplateErrors` config setting is enabled. ([#4755](https://github.com/craftcms/cms/issues/4755))\n- Edit Entry pages now get updated preview target URLs after saving a draft, in case the URLs have changed.\n- The confirmation dialog that can appear after running the Asset Indexes utility no longer will close by pressing the <kbd>Esc</kbd> key or clicking outside of the modal. ([#4795](https://github.com/craftcms/cms/issues/4795))\n- Section and Matrix \u201cPropagation Method\u201d settings now display warnings about the potential for data loss when appropriate.\n- Site group settings now display a warning about the potential for data loss.\n- Control Panel subnav items can now have badge counts. ([#4756](https://github.com/craftcms/cms/issues/4756))\n- Improved the performance of element duplication on multi-site installs.\n- Improved the performance of `craft\\web\\View::renderString()` for templates that don\u2019t contain any Twig code.\n- `craft\\behaviors\\DraftBehavior::getCreator()` can now return `null`.\n- `craft\\helpers\\Db::parseParam()` now has an optional `$columnType` argument. ([#4807](https://github.com/craftcms/cms/pull/4807))\n- `craft\\test\\TestSetup::setupCraftDb()` no longer accepts a second argument. Ensure that `craft\\test\\Craft::$testConfig` is set before calling this function. ([#4804](https://github.com/craftcms/cms/pull/4804))\n- `craft\\web\\Request::post()` and `getBodyParam()` will now work with posted JSON data, if the request\u2019s content type is set to `application/json`.\n- Switched from the `stringy/stringy` library to `voku/stringy`. ([#4753](https://github.com/craftcms/cms/issues/4753))\n\n### Deprecated\n- Deprecated the `suppressTemplateErrors` config setting.\n- Deprecated `craft\\services\\Sections::isSectionTemplateValid()`.\n- Deprecated `craft\\web\\twig\\Template`.\n\n### Removed\n- Removed `craft\\base\\ElementInterface::getSource()`. ([#4754](https://github.com/craftcms/cms/issues/4754))\n- Removed `craft\\web\\twig\\Extension::actionInputFunction()`.\n- Removed `craft\\web\\twig\\Extension::csrfInputFunction()`.\n- Removed `craft\\web\\twig\\Extension::redirectInputFunction()`.\n\n### Fixed\n- Fixed an error that could occur if garbage collection was run while Craft 3.2 migrations were pending. ([#4720](https://github.com/craftcms/cms/issues/4720))\n- Fixed a bug where the \u201cPublish live changes for other authors\u2019 entries\u201d permission was being enforced when saving another author\u2019s entry as a new entry. ([#4758](https://github.com/craftcms/cms/issues/4758))\n- Fixed a bug where `craft\\helpers\\UrlHelper` methods would strip out array params in the query string. ([#4778](https://github.com/craftcms/cms/issues/4778))\n- Fixed a SQL error that occurred when a `{% cache %}` tag was used on a page with a 4-byte character in the URI. ([#4780](https://github.com/craftcms/cms/issues/4780))\n- Fixed a bug where Craft could show a nondescript error when navigating away from a Control Panel page if an Ajax request was currently in progress. ([#4796](https://github.com/craftcms/cms/issues/4796))\n- Fixed an error that occurred when editing an entry with a draft that was created by a soft-deleted user. ([#4800](https://github.com/craftcms/cms/issues/4800))\n- Fixed a bug where entry revisions and drafts would be deleted when the user that created them was hard-deleted.\n- Fixed a SQL error that could occur when executing an element query that had custom `JOIN` and `WHERE` clauses if the `search` param was also set. ([#4788](https://github.com/craftcms/cms/issues/4788))\n- Fixed a bug where default field values weren\u2019t being applied to Matrix blocks that were autocreated per the Min Blocks setting. ([#4806](https://github.com/craftcms/cms/issues/4806))\n- Fixed Plugin Store dropdowns which were not working properly with Windows Edge browsers.\n- Fixed a SQL error that could occur when `:empty:` or `not :empty:` was passed to a date param on an element query when running MySQL 8. ([#4808](https://github.com/craftcms/cms/issues/4808))\n- Fixed a bug where Dropdown and Multi-select fields\u2019 Dropdown Options settings weren\u2019t autofocusing on the first input when adding a new row with the keyboard. ([#4823](https://github.com/craftcms/cms/issues/4823))\n\n## 3.2.10 - 2019-08-13\n\n### Added\n- Added `craft\\fields\\BaseRelationField::settingsTemplateVariables()`. ([#4732](https://github.com/craftcms/cms/issues/4732))\n- Added `craft\\services\\Search::deleteOrphanedIndexes()`.\n- Added `craft\\validators\\UriFormatValidator::$disallowTriggers`.\n- Added the `Craft.startsWith()` JavaScript method.\n\n### Changed\n- Improved garbage collection performance when hard-deleting hundreds of thousands of elements. ([#4735](https://github.com/craftcms/cms/issues/4735))\n- Element queries\u2019 `title` param will now accept a value of `'0'`.\n- `craft\\services\\Elements::deleteElementById()` now has a `$hardDelete` argument. ([#4747](https://github.com/craftcms/cms/pull/4747))\n- It\u2019s no longer possible to save routes or URI formats that begin with the `actionTrigger` or `cpTrigger` config settings. ([#4154](https://github.com/craftcms/cms/issues/4154))\n- Categories fields\u2019 selection modals now show the site menu. ([#4749](https://github.com/craftcms/cms/issues/4749))\n\n### Removed\n- Removed `craft\\records\\Route`.\n\n### Fixed\n- Fixed a bug where Entry fixtures wouldn\u2019t get unloaded. ([#4663](https://github.com/craftcms/cms/issues/4663))\n- Fixed a bug where entry content wouldn\u2019t get propagated to other sites if an entry was created and then saved before Craft had finished autosaving the draft. ([#4423](https://github.com/craftcms/cms/issues/4423))\n- Fixed a bug where entry forms could miss the fact that a Matrix block had been deleted. ([#4727](https://github.com/craftcms/cms/issues/4727))\n- Fixed a PHP error that could occur on environments where the Intl PHP extension was installed but the `IDNA_NONTRANSITIONAL_TO_ASCII` or `INTL_IDNA_VARIANT_UTS46` constants weren\u2019t defined. ([#4722](https://github.com/craftcms/cms/issues/4722))\n- Fixed a PHP error that could occur if a plugin was configured with settings even though it didn\u2019t support settings. ([#4706](https://github.com/craftcms/cms/issues/4706))\n- Fixed an error that occurred when a validation error occurred on an entry while it was being created or updated from a draft. ([#4733](https://github.com/craftcms/cms/issues/4733))\n- Fixed an infinite recursion bug that could occur when validating circular relations. ([#4482](https://github.com/craftcms/cms/issues/4482))\n- Fixed a bug where elements with a title of \u201c0\u201d would show their ID instead of their title in element indexes and relational fields. ([#4745](https://github.com/craftcms/cms/issues/4745))\n- Fixed a bug where Craft was redirecting to the Dashboard when attempting to export elements, if the `tokenParam` config setting was set to something besides `token`. ([#4737](https://github.com/craftcms/cms/issues/4737))\n\n## 3.2.9 - 2019-08-06\n\n### Added\n- Added the `ignorePlaceholders` element query param.\n- Added the `cp.entries.edit.meta` and `cp.entries.edit.settings` template hooks to the Edit Entry page.\n- Added `craft\\base\\ElementInterface::getSource()`.\n- Added `craft\\base\\ElementTrait::$newSiteIds`.\n- Added `craft\\models\\Site::$dateCreated` and `$dateUpdated`. ([#4703](https://github.com/craftcms/cms/issues/4703))\n\n### Changed\n- Improved the Control Panel header styling for mobile and on pages with long titles. ([#4548](https://github.com/craftcms/cms/issues/4548))\n- Element references in the Control Panel now reveal the site the element was fetched from in their tooltips, on multi-site installs. ([#4690](https://github.com/craftcms/cms/issues/4690))\n- Element editor HUDs now always show a header with the element\u2019s site name on multi-site installs, even if the element is only editable in one site. ([#4690](https://github.com/craftcms/cms/issues/4690))\n- Entry preview tokens now respect the `defaultTokenDuration` config setting, rather than always expiring after 24 hours. ([#4683](https://github.com/craftcms/cms/pull/4683))\n- Improved disabled select field styling. ([#4709](https://github.com/craftcms/cms/pull/4709))\n\n### Deprecated\n- Deprecated `craft\\behaviors\\DraftBehavior::getSource()`.\n- Deprecated `craft\\behaviors\\RevisionBehavior::getSource()`.\n\n### Fixed\n- Fixed a bug where elements listed in a Structure view could be missing their descendant toggles even if all of their descendants were disabled. ([#4685](https://github.com/craftcms/cms/issues/4685))\n- Fixed a bug where element CSV exports were limited to 50 elements if no limit was set. ([#4692](https://github.com/craftcms/cms/issues/4692))\n- Fixed a 400 error that occurred when submitting an entry form that didn\u2019t have an `entryId` param. ([#4693](https://github.com/craftcms/cms/issues/4693))\n- Fixed a bug where `craft\\base\\Element::getDescendants()` and other structure methods could return the wrong results when called on a draft. ([#4694](https://github.com/craftcms/cms/issues/4694))\n- Fixed a bug where Matrix blocks weren\u2019t getting duplicated to newly-enabled sites for elements if the field\u2019s Propagation Method setting wasn\u2019t set to \u201cSave blocks to all sites the owner element is saved in\u201d. ([#4698](https://github.com/craftcms/cms/issues/4698))\n- Fixed a bug where the Database Backup could result in a 404 error on load-balanced environments. ([#4699](https://github.com/craftcms/cms/issues/4699))\n- Fixed a bug where the \u201cCurrent\u201d entry revision link wouldn\u2019t always work. ([#4705](https://github.com/craftcms/cms/issues/4705))\n- Fixed a bug where the `craft\\services\\Search::EVENT_AFTER_SEARCH` event wasn\u2019t always firing. ([#4710](https://github.com/craftcms/cms/issues/4710))\n- Fixed a bug where `craft\\services\\Users::purgeExpiredPendingUsers()` was attempting to delete already-trashed users.\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.2.8 - 2019-07-30\n\n### Added\n- Element indexes with unsaved drafts now show a \u201cDrafts\u201d option in the status menu.\n- Added the `utils/fix-element-uids` command, which ensures all elements have unique UIDs. ([#4653](https://github.com/craftcms/cms/issues/4653))\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to create a homepage Single section if a prior entry revisions\u2019 URI had been set to `__home__`. ([#4657](https://github.com/craftcms/cms/issues/4657))\n- Fixed a bug where the user deletion confirmation dialog was including revisions and drafts when counting entries for the content summary.\n- Fixed an error that occurred when deleting a user, if another user had been chosen to inherit their content. ([#4670](https://github.com/craftcms/cms/issues/4670))\n- Fixed a bug where users could be warned about losing unsaved changes when updating an entry from a draft, while the draft was being autosaved. ([#4614](https://github.com/craftcms/cms/issues/4614))\n- Fixed a bug where Categories fields weren\u2019t always getting updated when a category they were related to got moved under another category. ([#4672](https://github.com/craftcms/cms/issues/4672))\n- Fixed an error that occurred on the Settings \u2192 Routes page, if one of the routes didn\u2019t have a URI pattern. ([#4676](https://github.com/craftcms/cms/issues/4676))\n- Fixed some styling and behavior issues on the Settings \u2192 Routes page.\n\n## 3.2.7 - 2019-07-25\n\n### Fixed\n- Fixed an error where it wasn\u2019t possible to scale SVGs using only height. ([#4643](https://github.com/craftcms/cms/pull/4643))\n- Fixed a bug where the content area of some Control Panel pages weren\u2019t getting any bottom padding. ([#4644](https://github.com/craftcms/cms/issues/4644))\n- Fixed a bug where installing a plugin immediately after installing Craft from the console could corrupt the project config if `useProjectConfigFile` was enabled. ([#3870](https://github.com/craftcms/cms/issues/3870))\n- Fixed a bug where entry forms could overlook changes made to Categories fields. ([#4648](https://github.com/craftcms/cms/issues/4648))\n- Fixed a bug where element search indexes weren\u2019t being updated right away after an element was created or updated from an element editor HUD.\n- Fixed a bug where back-end slug validation wasn\u2019t working correctly for slugs with some Unicode characters. ([#1535](https://github.com/craftcms/cms/issues/1535))\n- Fixed a bug where Craft was attempting to delete template caches even when saving a draft or revision.\n\n## 3.2.6 - 2019-07-23\n\n### Changed\n- When enabling a new site for a Single section, Craft now uses the primary site\u2019s content as the starting point for the new site\u2019s content, if the section was already enabled for it.\n- Swapped the position of the \u201cSave as a Draft\u201d and \u201cSave Entry\u201d buttons. ([#4622](https://github.com/craftcms/cms/issues/4622))\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports arrays created from `DateTime` objects. ([#4627](https://github.com/craftcms/cms/issues/4627))\n- Plugin license key inputs are no longer limited to 29 characters, to make room for long environment variable names. ([#4393](https://github.com/craftcms/cms/issues/4393))\n- Updated Imagine to 1.2.2.1.\n\n### Fixed\n- Fixed a bug where Craft could load the same JavaScript and CSS files multiple times when opening element editor HUDs. ([#4620](https://github.com/craftcms/cms/issues/4620))\n- Fixed a bug where each animated GIF frame would still be parsed when generating a thumbnail, even if the `transformGifs` setting was set to `false`. ([#4588](https://github.com/craftcms/cms/issues/4588))\n- Fixed a bug where back-end slug validation wasn\u2019t working correctly for slugs with Unicode characters. ([#4628](https://github.com/craftcms/cms/issues/4628))\n- Fixed a bug where it wasn\u2019t possible to create new entries if the section handle matched the `pageTrigger` config setting, and the `pageTrigger` config setting had a trailing slash. ([#4631](https://github.com/craftcms/cms/issues/4631))\n- Fixed a bug where the `sections.previewTargets` database column was getting created as a `varchar` instead of `text` column for new Craft installs. ([#4638](https://github.com/craftcms/cms/issues/4638))\n\n### Security\n- Fixed a bug where the `preserveExifData` config setting wasn\u2019t being respected on image upload.\n\n## 3.2.5.1 - 2019-07-19\n\n### Fixed\n- Fixed an error that occurred if a plugin license key was set to an environment variable, which was set to an invalid key. ([#4604](https://github.com/craftcms/cms/issues/4604))\n- Fixed an error that prevented image thumbnails from generating in the Control Panel when using ImageMagick. ([#4609](https://github.com/craftcms/cms/issues/4609))\n\n## 3.2.5 - 2019-07-19\n\n### Added\n- Added `craft\\services\\Elements::getPlaceholderElements()`.\n\n### Changed\n- If an invalid entry draft or revision edit URL is accessed, but the source entry does exist, Craft now redirects the browser to the source entry\u2019s edit page. ([#4574](https://github.com/craftcms/cms/issues/4574))\n- Preview requests now include the previewed entry in element queries even if the `status`, `drafts`, or `revisions` parameters are set to exclude it. ([#4581](https://github.com/craftcms/cms/issues/4581))\n- Back-end slug generation now follows the same rules as JavaScript. ([#4607](https://github.com/craftcms/cms/issues/4607))\n- Unsaved entry drafts now get assigned a new ID when they are fully saved, so they are treated as new elements. ([#4589](https://github.com/craftcms/cms/issues/4589))\n\n### Fixed\n- Fixed some bugs with the \u201cSave Entry\u201d menu options, when editing an unsaved draft. ([#4614](https://github.com/craftcms/cms/issues/4614))\n- Fixed a bug where Craft could forget which site was being edited when updating an entry from a draft. ([#4615](https://github.com/craftcms/cms/issues/4615))\n\n## 3.2.4.1 - 2019-07-17\n\n### Fixed\n- Fixed an error that occurred when attempting to share a disabled entry. ([#4596](https://github.com/craftcms/cms/issues/4596))\n- Fixed a bug where new Email and URL cells in Table fields weren\u2019t getting the correct input type. ([#4595](https://github.com/craftcms/cms/issues/4595))\n\n## 3.2.4 - 2019-07-17\n\n### Changed\n- Brought back the \u201cPreview\u201d button for the Current revision of entries, which now creates a draft before activating the entry preview. ([#4584](https://github.com/craftcms/cms/issues/4584))\n- The \u201cSave as a Draft\u201d button now creates the draft over Ajax, when it\u2019s not the primary submit button for the page.\n- When Craft isn\u2019t able to sync incoming `project.yaml` changes due to schema version conflicts, Craft now lists which packages are conflicting.. ([#4568](https://github.com/craftcms/cms/issues/4568))\n\n### Fixed\n- Fixed a JavaScript error that could occur after uploading a file directly onto an Assets field when editing the Current revision of an entry.\n- Fixed a bug where draft forms could become unresponsive if the user attempted to navigate away from the page or submit the form in the middle of an autosave. ([#4578](https://github.com/craftcms/cms/issues/4578))\n- Fixed a SQL error that could occur when passing `:empty:` or `:notempty:` to a relational field\u2019s element query param. ([#4529](https://github.com/craftcms/cms/issues/4529))\n- Fixed a bug where Number fields weren\u2019t getting set to their default values for new entries. ([#4586](https://github.com/craftcms/cms/issues/4586))\n- Fixed a bug query string parameters were getting URL-encoded when applied to generated pagination URLs.\n- Fixed a bug where Single entries had the option to be duplicated or deleted. ([#4590](https://github.com/craftcms/cms/issues/4590))\n\n## 3.2.3 - 2019-07-16\n\n### Added\n- Added `craft\\controllers\\EntriesController::actionDuplicateEntry()`.\n- Added `craft\\web\\UrlManager::setMatchedElement()`.\n\n### Changed\n- Craft no longer creates drafts automatically when editing entries. The user must click a \u201cSave as a Draft\u201d button to create one. ([#4549](https://github.com/craftcms/cms/issues/4549))\n- Entries are now immediately savable, whether or not any changes were made. ([#4535](https://github.com/craftcms/cms/issues/4535))\n- The \u201cSave Entry\u201d button now redirects the user to the Entries index page. ([#4575](https://github.com/craftcms/cms/issues/4575))\n- Brought back the \u201cSave and continue editing\u201d and \u201cSave and add another\u201d options for entries.\n- It\u2019s no longer possible to preview entries\u2019 Current revision. A draft must be created first.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to delete Matrix blocks if Min Blocks and Max Blocks were set to the same value, and an element already had more than that many blocks. ([#4562](https://github.com/craftcms/cms/issues/4562))\n- Fixed a bug where `craft\\web\\UrlManager::getMatchedElement()` could return the incorrect result on preview requests. ([#4542](https://github.com/craftcms/cms/issues/4542))\n- Fixed an error that occurred on the Settings \u2192 Email page if email settings were missing from the project config. ([#4552](https://github.com/craftcms/cms/issues/4552))\n- Fixed a bug where it wasn\u2019t possible to toggle site-specific entry statuses when editing drafts. ([#4577](https://github.com/craftcms/cms/issues/4577))\n\n## 3.2.2 - 2019-07-14\n\n### Added\n- Added `craft\\helpers\\ElementHelper::isTempSlug()`.\n- Added `craft\\helpers\\ElementHelper::tempSlug()`.\n- Added `craft\\helpers\\UrlHelper::removeParam()`.\n\n### Changed\n- Craft no longer ensures a recent revision exists before creating a draft for an element.\n- Element exports are limited to CSV files now, to avoid the GD requirement imposed by the PHPSpreadsheet library. ([#4553](https://github.com/craftcms/cms/issues/4553))\n\n### Fixed\n- Fixed a bug where multi-site element queries with the `unique` and `offset` params set weren\u2019t returning any results. ([#4560](https://github.com/craftcms/cms/issues/4560))\n- Fixed an error that could occur when creating a draft. ([#4515](https://github.com/craftcms/cms/issues/4515))\n- Fixed a bug where Craft wasn\u2019t generating a new slug for entries that were saved with a blank Slug field. ([#4518](https://github.com/craftcms/cms/issues/4518))\n- Fixed a bug where disabled select options could lose their disabled text styling in Firefox. ([#4526](https://github.com/craftcms/cms/issues/4526))\n- Fixed a bug where entry forms could miss the fact that a file had been uploaded to an Assets field. ([#4534](https://github.com/craftcms/cms/issues/4534))\n- Fixed a bug where selecting \u201cCreate a new child entry\u201d in a Structure section on a multi-site install would result in a 404 error. ([#4541](https://github.com/craftcms/cms/issues/4541))\n- Fixed a bug where it wasn\u2019t possible to set test-specific config settings. ([#4539](https://github.com/craftcms/cms/pull/4539))\n- Fixed an error that occurred when exporting elements if Limit was set to `0`. ([#4547](https://github.com/craftcms/cms/issues/4547))\n- Fixed a bug where the `{% paginate %}` tag wouldn\u2019t generate links to the first page correctly when using query string pagination. ([#4550](https://github.com/craftcms/cms/issues/4550))\n- Fixed an error that occurred when indexing assets from a console request, if no volumes were defined yet. ([#2798](https://github.com/craftcms/cms/issues/2798))\n- Fixed a bug where the \u201cDelete\u201d link could show up in the draft meta HUD for unsaved drafts. ([#4557](https://github.com/craftcms/cms/issues/4557))\n\n## 3.2.1 - 2019-07-11\n\n### Added\n- Added `craft\\console\\Request::getIsPreview()`.\n- Added `craft\\web\\Request::getIsPreview()`.\n\n### Changed\n- If a draft can\u2019t be saved, an alert icon is now shown in the Control Panel header, which can be clicked on to reveal more information.\n- Element revisions no longer store snapshot data.\n\n### Fixed\n- Fixed a bug where Feed widget items weren\u2019t getting hyperlinked.\n- Fixed a bug where the `app/migrate` controller wasn\u2019t applying new `project.yaml` changes if there were no pending migrations.\n- Fixed a SQL error that could occur when saving an entry or entry draft. ([#4508](https://github.com/craftcms/cms/issues/4508))\n- Fixed a bug where Assets fields set to restrict uploads to a single folder could have empty selector modals. ([#4522](https://github.com/craftcms/cms/issues/4522))\n- Fixed an error that could occur if a template was accessing the deprecated `locale` property of an element query, but `siteId` wasn\u2019t set to an integer. ([#4531](https://github.com/craftcms/cms/issues/4531))\n- Fixed a bug where users without the \u201cPublish live changes\u201d permission for a section weren\u2019t able to create new entries. ([#4528](https://github.com/craftcms/cms/issues/4529))\n- Fixed a PHP error that could occur when uploading files to Assets fields on the front end. ([#4382](https://github.com/craftcms/cms/issues/4382))\n- Fixed a bug where elements listed in a Structure view could show descendant toggles even if they had no descendants. ([#4504](https://github.com/craftcms/cms/issues/4504))\n- Fixed a backwards compatibility issue. ([#4523](https://github.com/craftcms/cms/issues/4523))\n\n## 3.2.0 - 2019-07-09\n\n> **Warning**\n> If you\u2019ve ever run the `project-config/rebuild` command, it\u2019s highly recommended that you run it again with Craft 3.1.34.2, before updating to Craft 3.2.\n\n> **Warning**\n> Custom login controllers must now explicitly set their `$allowAnonymous` values to include `self::ALLOW_ANONYMOUS_OFFLINE` if they wish to be available when the system is offline.\n\n> **Note**\n> If you have Super Table or Neo installed, you should update those **at the same time** as Craft, to avoid unnecessary search index jobs from being added to the queue.\n\n### Added\n- All element types now have the option to support drafts and revisions.\n- Drafts are now autocreated when content is modified, and autosaved whenever the content changes. ([#1034](https://github.com/craftcms/cms/issues/1034))\n- Drafts and revisions now store content across all sites supported by the element. ([#2669](https://github.com/craftcms/cms/issues/2669))\n- Content previewing is now draft-based, and drafts are stored as specialized elements, so it\u2019s no longer necessary to add special cases in templates for preview requests. ([#1787](https://github.com/craftcms/cms/issues/1787), [#2801](https://github.com/craftcms/cms/issues/2801))\n- Sections now have a \u201cPreview Targets\u201d setting when running Craft Pro, which can be used to configure additional locations that entries can be previewed from. ([#1489](https://github.com/craftcms/cms/issues/1489))\n- Sections now have a \u201cPropagation Method\u201d setting, enabling entries to only be propagated to other sites in the same site group, or with the same language. ([#3554](https://github.com/craftcms/cms/issues/3554))\n- Matrix fields now have a \u201cPropagation Method\u201d setting, enabling blocks to only be propagated to other sites in the same site group, or with the same language. ([#3554](https://github.com/craftcms/cms/issues/3554))\n- Single entries now have editable slugs. ([#3368](https://github.com/craftcms/cms/issues/3368))\n- Headless content previewing is now possible by forwarding request tokens off to content API requests. ([#1231](https://github.com/craftcms/cms/issues/1231))\n- Preview iframes are now created with a `src` attribute already in place, improving SPA support. ([#2120](https://github.com/craftcms/cms/issues/2120))\n- Entry \u201cShare\u201d buttons are now visible on mobile. ([#4408](https://github.com/craftcms/cms/issues/4408))\n- Added the \u201cTemp Uploads Location\u201d system setting (available from Settings \u2192 Assets \u2192 Settings), which makes it possible to choose the volume and path that temporary asset uploads should be stored. ([#4010](https://github.com/craftcms/cms/issues/4010))\n- Added the `maxRevisions` config setting. ([#926](https://github.com/craftcms/cms/issues/926))\n- Added the `purgeUnsavedDraftsDuration` config setting, which determines how long unsaved drafts should be allowed to exist before getting deleted via garbage collection.\n- Added the \u201cEdit images\u201d permission. ([#3349](https://github.com/craftcms/cms/issues/3349))\n- Added the \u201cImpersonate users\u201d permission. ([#3501](https://github.com/craftcms/cms/issues/3501))\n- Added the `drafts`, `draftId`, `draftOf`, `draftCreator`, `revisions`, `revisionId`, `revisionOf`, and `revisionCreator` element query params.\n- The `site` element query params now support passing multiple site handles, or `'*'`, to query elements across multiple sites at once. ([#2854](https://github.com/craftcms/cms/issues/2854))\n- Relational fields now have a \u201cValidate related elements\u201d setting, which ensures that the related elements pass validation before the source element can be saved with them selected. ([#4095](https://github.com/craftcms/cms/issues/4095))\n- Table fields can now have Dropdown, Email, and URL columns. ([#811](https://github.com/craftcms/cms/issues/811), [#4180](https://github.com/craftcms/cms/pull/4180))\n- Dropdown and Multi-select fields can now have optgroups. ([#4236](https://github.com/craftcms/cms/issues/4236))\n- Date/Time, Dropdown, Lightswitch, Number, and Radio Buttons fields are now listed as sort options in element indexes. ([#2818](https://github.com/craftcms/cms/issues/2818))\n- Asset, category, entry, and user indexes can now have \u201cUID\u201d columns. ([#4433](https://github.com/craftcms/cms/issues/4433))\n- Added the `unique` element query param, which can be used to prevent duplicate elements when querying elements across multiple sites.\n- Added the `preferSites` element query param, which can be used to set the preferred sites that should be used for multi-site element queries, when the `unique` param is also enabled.\n- Element index pages are now paginated for non-Structure views. ([#818](https://github.com/craftcms/cms/issues/818))\n- Element index pages now have an \u201cExport\u2026\u201d button that will export all of the elements in the current view (across all pages) or up to a custom limit, in either CSV, XLS, XLSX, or ODS format. ([#994](https://github.com/craftcms/cms/issues/994))\n- Added the `{% dd %}` Twig tag. ([#4399](https://github.com/craftcms/cms/issues/4399))\n- Added the `attr()` Twig function, which can generate a list of HTML/XML attributes. ([#4237](https://github.com/craftcms/cms/pull/4237))\n- Added the `|withoutKey` Twig filter.\n- Added the `resave/matrix-blocks` console command.\n- The `index-assets/*` commands now support a `--create-missing-assets=0` option, which prevents Craft from creating asset records when they don\u2019t exist yet, and offers an opportunity to fix the location of any asset records that are missing their associated files, when the filename matches one of the files missing an index.\n- Added the `mailer/test` command. ([#4020](https://github.com/craftcms/cms/issues/4020))\n- Added the `tests/setup` command, which generates a test suite for the current Craft project.\n- Jobs can now set progress labels, which will be shown below their description and progress bar in the queue HUD. ([#1931](https://github.com/craftcms/cms/pull/1931))\n- Added the `_layouts/element` template, which can be extended by element edit pages that wish to support drafts, revisions, and content previewing.\n- Added the `_special/sitepicker` template.\n- It\u2019s now possible for plugins and modules to define custom actions on console controllers.\n- Added a testing framework for Craft and plugins, powered by Codeception. ([#3382](https://github.com/craftcms/cms/pull/3382), [#1485](https://github.com/craftcms/cms/issues/1485), [#944](https://github.com/craftcms/cms/issues/944))\n- Added `craft\\base\\ApplicationTrait::getInstalledSchemaVersion()`.\n- Added `craft\\base\\BlockElementInterface`.\n- Added `craft\\base\\Element::EVENT_AFTER_PROPAGATE`.\n- Added `craft\\base\\Element::EVENT_REGISTER_PREVIEW_TARGETS`.\n- Added `craft\\base\\Element::previewTargets()`.\n- Added `craft\\base\\ElementInterface::afterPropagate()`.\n- Added `craft\\base\\ElementInterface::getCurrentRevision()`.\n- Added `craft\\base\\ElementInterface::getIsDraft()`.\n- Added `craft\\base\\ElementInterface::getIsRevision()`.\n- Added `craft\\base\\ElementInterface::getIsUnsavedDraft()`.\n- Added `craft\\base\\ElementInterface::getPreviewTargets()`.\n- Added `craft\\base\\ElementInterface::getSourceId()`.\n- Added `craft\\base\\ElementInterface::getSourceUid()`.\n- Added `craft\\base\\ElementInterface::getUiLabel()`, which is now used to define what an element will be called in the Control Panel. ([#4211](https://github.com/craftcms/cms/pull/4211))\n- Added `craft\\base\\ElementInterface::pluralDisplayName()`, which element type classes can use to define the plural of their display name.\n- Added `craft\\base\\ElementInterface::setRevisionCreatorId()`.\n- Added `craft\\base\\ElementInterface::setRevisionNotes()`.\n- Added `craft\\base\\ElementTrait::$dateDeleted`. ([#4493](https://github.com/craftcms/cms/issues/4493))\n- Added `craft\\base\\ElementTrait::$draftId`.\n- Added `craft\\base\\ElementTrait::$hardDelete`.\n- Added `craft\\base\\ElementTrait::$previewing`.\n- Added `craft\\base\\ElementTrait::$propagateAll`.\n- Added `craft\\base\\ElementTrait::$revisionId`.\n- Added `craft\\base\\Field::EVENT_AFTER_ELEMENT_PROPAGATE`.\n- Added `craft\\base\\Field::getSortOption()`.\n- Added `craft\\base\\FieldInterface::afterElementPropagate()`.\n- Added `craft\\base\\FieldInterface::valueType()`. ([#3894](https://github.com/craftcms/cms/issues/3894))\n- Added `craft\\base\\SortableFieldInterface`, which can be implemented by field classes that should be sortable in element indexes.\n- Added `craft\\behaviors\\DraftBehavior`.\n- Added `craft\\behaviors\\RevisionBehavior`.\n- Added `craft\\console\\CallableAction`.\n- Added `craft\\console\\Controller`.\n- Added `craft\\console\\controllers\\ResaveController::saveElements()`.\n- Added `craft\\console\\ControllerTrait`.\n- Added `craft\\console\\Request::getToken()`.\n- Added `craft\\controllers\\PreviewController`.\n- Added `craft\\errors\\MissingAssetException`.\n- Added `craft\\events\\BatchElementActionEvent`.\n- Added `craft\\events\\DefineConsoleActionsEvent`.\n- Added `craft\\events\\ElementQueryEvent`.\n- Added `craft\\events\\RegisterPreviewTargetsEvent`.\n- Added `craft\\events\\RevisionEvent`.\n- Added `craft\\helpers\\Component::validateComponentClass()`.\n- Added `craft\\helpers\\ElementHelper::isDraftOrRevision()`.\n- Added `craft\\helpers\\ElementHelper::rootElement()`.\n- Added `craft\\models\\Section::$propagationMethod`.\n- Added `craft\\queue\\jobs\\UpdateSearchIndex`.\n- Added `craft\\services\\Drafts`, accessible via `Craft::$app->drafts`.\n- Added `craft\\services\\Elements::propagateElements()` along with `EVENT_BEFORE_PROPAGATE_ELEMENTS`, `EVENT_AFTER_PROPAGATE_ELEMENTS`, `EVENT_BEFORE_PROPAGATE_ELEMENT`, and `EVENT_AFTER_PROPAGATE_ELEMENT` events. ([#4139](https://github.com/craftcms/cms/issues/4139))\n- Added `craft\\services\\Elements::resaveElements()` along with `EVENT_BEFORE_RESAVE_ELEMENTS`, `EVENT_AFTER_RESAVE_ELEMENTS`, `EVENT_BEFORE_RESAVE_ELEMENT`, and `EVENT_AFTER_RESAVE_ELEMENT` events. ([#3482](https://github.com/craftcms/cms/issues/3482))\n- Added `craft\\services\\Matrix::duplicateBlocks()`.\n- Added `craft\\services\\Matrix::getSupportedSiteIdsForField()`.\n- Added `craft\\services\\Revisions`, accessible via `Craft::$app->revisions`.\n- Added `craft\\services\\Users::canImpersonate()`.\n- Added `craft\\web\\Request::getIsLoginRequest()` and `craft\\console\\Request::getIsLoginRequest()`.\n- Added `craft\\web\\UrlManager::$checkToken`.\n- Added the `Craft.isSameHost()` JavaScript method.\n- Added the `Craft.parseUrl()` JavaScript method.\n- Added the `Craft.randomString()` JavaScript method.\n- Added the `Craft.DraftEditor` JavaScript class.\n- Added the `Craft.Preview` JavaScript class.\n\n### Changed\n- Relational fields are now capable of selecting elements from multiple sites, if they haven\u2019t been locked down to only related elements from a single site. ([#3584](https://github.com/craftcms/cms/issues/3584))\n- Element selector modals now always show source headings, and list sources in the configured order. ([#4494](https://github.com/craftcms/cms/issues/4494))\n- Reference tags can now specify the site to load the element from. ([#2956](https://github.com/craftcms/cms/issues/2956))\n- Improved the button layout of Edit Entry pages. ([#2325](https://github.com/craftcms/cms/issues/2325))\n- Improved the performance of saving elements.\n- The Control Panel now shows the sidebar on screens that are at least 1,000 pixels wide. ([#4079](https://github.com/craftcms/cms/issues/4079))\n- The `_layouts/cp` template now supports a `showHeader` variable that can be set to `false` to remove the header.\n- The `_layouts/cp` Control Panel template now supports a `footer` block, which will be output below the main content area.\n- Renamed `craft\\helpers\\ArrayHelper::filterByValue()` to `where()`.\n- Anonymous/offline/Control Panel access validation now takes place from `craft\\web\\Controller::beforeAction()` rather than `craft\\web\\Application::handleRequest()`, giving controllers a chance to do things like set CORS headers before a `ForbiddenHttpException` or `ServiceUnavailableHttpException` is thrown. ([#4008](https://github.com/craftcms/cms/issues/4008))\n- Controllers can now set `$allowAnonymous` to a combination of bitwise integers `self::ALLOW_ANONYMOUS_LIVE` and `self::ALLOW_ANONYMOUS_OFFLINE`, or an array of action ID/bitwise integer pairs, to define whether their actions should be accessible anonymously even when the system is offline.\n- Improved the error message when Project Config reaches the maximum deferred event count.\n- Craft now deletes expired template caches as part of its garbage collection routine.\n- Craft no longer warns about losing unsaved changes when leaving the page while previewing entries, if the changes were autosaved. ([#4439](https://github.com/craftcms/cms/issues/4439))\n- `fieldValues` is a now reserved field handle. ([#4453](https://github.com/craftcms/cms/issues/4453))\n- Improved the reliability of `craft\\helpers\\UrlHelper::rootRelativeUrl()` and `cpUrl()`.\n- `craft\\base\\ElementInterface::eagerLoadingMap()` and `craft\\base\\EagerLoadingFieldInterface::getEagerLoadingMap()` can now return `null` to opt out of eager loading. ([#4220](https://github.com/craftcms/cms/pull/4220))\n- `craft\\db\\ActiveRecord` no longer sets the `uid`, `dateCreated`, or `dateUpdated` values for new records if they were already explicitly set.\n- `craft\\db\\ActiveRecord` no longer updates the `dateUpdated` value for existing records if nothing else changed or if `dateUpdated` had already been explicitly changed.\n- `craft\\helpers\\UrlHelper::siteUrl()` and `url()` will now include the current request\u2019s token in the generated URL\u2019s query string, for site URLs.\n- `craft\\events\\MoveElementEvent` now extends `craft\\events\\ElementEvent`. ([#4315](https://github.com/craftcms/cms/pull/4315))\n- `craft\\queue\\BaseJob::setProgress()` now has a `$label` argument.\n- `craft\\queue\\jobs\\PropagateElements` no longer needs to be configured with a `siteId`, and no longer propagates elements to sites if they were updated in the target site more recently than the source site.\n- `craft\\queue\\QueueInterface::setProgress()` now has a `$label` argument.\n- `craft\\services\\Assets::getUserTemporaryUploadFolder()` now returns the current user\u2019s temporary upload folder by default if no user is provided.\n- `craft\\services\\Elements::deleteElement()` now has a `$hardDelete` argument.\n- `craft\\services\\Elements::deleteElement()` now has a `$hardDelete` argument. ([#3392](https://github.com/craftcms/cms/issues/3392))\n- `craft\\services\\Elements::getElementById()` now has a `$criteria` argument.\n- `craft\\services\\Elements::propagateElement()` now has a `$siteElement` argument.\n- `craft\\services\\Elements::saveElement()` now preserves existing elements\u2019 current `dateUpdated` value when propagating or auto-resaving elements.\n- `craft\\services\\Elements::saveElement()` now preserves the `uid`, `dateCreated`, and `dateUpdated` values on new elements if they were explicitly set. ([#2909](https://github.com/craftcms/cms/issues/2909))\n- `craft\\services\\Elements::setPlaceholderElement()` now throws an exception if the element that was passed in doesn\u2019t have an ID.\n- `craft\\services\\Matrix::saveField()` is no longer is responsible for duplicating blocks from other elements.\n- `craft\\web\\twig\\variables\\CraftVariable` no longer triggers the `defineComponents` event. ([#4416](https://github.com/craftcms/cms/issues/4416))\n- `craft\\web\\UrlManager::setRouteParams()` now has a `$merge` argument, which can be set to `false` to completely override the route params.\n- It\u2019s now possible to pass a `behaviors` key to the `$newAttributes` argument of `craft\\services\\Elements::duplicateElement()`, to preattach behaviors to the cloned element before it\u2019s saved.\n\n### Removed\n- Removed the Search Indexes utility. ([#3698](https://github.com/craftcms/cms/issues/3698))\n- Removed the `--batch-size` option from `resave/*` actions.\n- Removed the `craft.entryRevisions` Twig component.\n- Removed `craft\\controllers\\EntriesController::actionPreviewEntry()`.\n- Removed `craft\\controllers\\EntriesController::actionShareEntry()`.\n- Removed `craft\\controllers\\EntriesController::actionViewSharedEntry()`.\n- Removed `craft\\events\\VersionEvent`.\n- Removed `craft\\records\\Entry::getVersions()`.\n- Removed `craft\\records\\EntryDraft`.\n- Removed `craft\\records\\EntryVersion`.\n- Removed `craft\\services\\EntryRevisions::saveDraft()`.\n- Removed `craft\\services\\EntryRevisions::publishDraft()`.\n- Removed `craft\\services\\EntryRevisions::deleteDraft()`.\n- Removed `craft\\services\\EntryRevisions::saveVersion()`.\n- Removed `craft\\services\\EntryRevisions::revertEntryToVersion()`.\n- Removed the `Craft.EntryDraftEditor` JavaScript class.\n\n### Deprecated\n- Deprecated the `ownerSite` and `ownerSiteId` Matrix block query params.\n- Deprecated `craft\\controllers\\EntriesController::EVENT_PREVIEW_ENTRY`.\n- Deprecated `craft\\controllers\\LivePreviewController`.\n- Deprecated `craft\\elements\\MatrixBlock::$ownerSiteId`.\n- Deprecated `craft\\events\\DefineComponentsEvent`.\n- Deprecated `craft\\helpers\\ArrayHelper::filterByValue()`. Use `where()` instead.\n- Deprecated `craft\\models\\BaseEntryRevisionModel`.\n- Deprecated `craft\\models\\EntryDraft`.\n- Deprecated `craft\\models\\EntryVersion`.\n- Deprecated `craft\\models\\Section::$propagateEntries`. Use `$propagationMethod` instead.\n- Deprecated `craft\\services\\Assets::getCurrentUserTemporaryUploadFolder()`.\n- Deprecated `craft\\services\\EntryRevisions`.\n- Deprecated `craft\\web\\Request::getIsLivePreview()`.\n- Deprecated `craft\\web\\Request::getIsSingleActionRequest()` and `craft\\console\\Request::getIsSingleActionRequest()`.\n- Deprecated the `Craft.LivePreview` JavaScript class.\n\n### Fixed\n- Fixed a bug where `craft\\helpers\\UrlHelper` methods could add duplicate query params on generated URLs.\n- Fixed a bug where Matrix blocks weren\u2019t getting duplicated for other sites when creating a new element. ([#4449](https://github.com/craftcms/cms/issues/4449))\n\n## 3.1.34.3 - 2019-08-21\n\n### Fixed\n- Fixed a bug where the `project-config/rebuild` command wasn\u2019t discarding unused user groups or user field layouts in the project config. ([#4781](https://github.com/craftcms/cms/pull/4781))\n\n## 3.1.34.2 - 2019-07-23\n\n### Fixed\n- Fixed a bug where the `project-config/rebuild` command was discarding email and user settings.\n\n## 3.1.34.1 - 2019-07-22\n\n### Fixed\n- Fixed a bug where the `project-config/rebuild` command was ignoring entry types that didn\u2019t have a field layout. ([#4600](https://github.com/craftcms/cms/issues/4600))\n\n## 3.1.34 - 2019-07-09\n\n### Changed\n- The `project-config/rebuild` command now rebuilds the existing project config wherever possible, instead of merging database data with the existing project config.\n\n## 3.1.33 - 2019-07-02\n\n### Added\n- Added `craft\\base\\ApplicationTrait::saveInfoAfterRequest()`.\n\n### Changed\n- Craft no longer strips some punctuation symbols from slugs.\n- Improved the performance of saving project config updates. ([#4459](https://github.com/craftcms/cms/issues/4459))\n- Improved the performance of saving fields. ([#4459](https://github.com/craftcms/cms/issues/4459))\n- The `craft update` command no longer updates Craft or plugins if not specified.\n\n### Removed\n- Removed `craft\\services\\ProjectConfig::saveDataAfterRequest()`.\n- Removed `craft\\services\\ProjectConfig::preventSavingDataAfterRequest()`.\n\n### Fixed\n- Fixed a PHP error that occurred when deleting an asset transform. ([#4473](https://github.com/craftcms/cms/issues/4473))\n\n### Security\n- Fixed an XSS vulnerability.\n- Fixed a path disclosure vulnerability. ([#4468](https://github.com/craftcms/cms/issues/4468))\n- Added the `sameSiteCookieValue` config setting. ([#4462](https://github.com/craftcms/cms/issues/4462))\n\n## 3.1.32.1 - 2019-06-25\n\n### Fixed\n- Fixed a couple Windows compatibility issues.\n\n## 3.1.32 - 2019-06-25\n\n### Changed\n- Project Config now sorts arrays when all of the keys are UIDs. ([#4425](https://github.com/craftcms/cms/issues/4425))\n\n### Fixed\n- Fixed a bug where Craft might not match a domain to the proper site if it had a non-ASCII character in the host name.\n- Fixed an error that could occur when using the `|filter` Twig filter. ([#4437](https://github.com/craftcms/cms/issues/4437))\n- Fixed a bug where pagination URL could get repeated page params added to the query string if using query string-based pagination.\n\n## 3.1.31 - 2019-06-18\n\n### Added\n- It\u2019s now possible to set plugin license keys to environment variables using the `$VARIABLE_NAME` syntax. ([#4393](https://github.com/craftcms/cms/issues/4393))\n- Added `craft\\services\\Elements::mergeElements()`. ([#4404](https://github.com/craftcms/cms/pull/4404))\n\n### Changed\n- Pagination URLs now include any query string parameters set on the current request.\n- The default email template no longer sets text or background colors, so emails look better in dark mode. ([#4396](https://github.com/craftcms/cms/pull/4396))\n- Improved the error message that gets logged when Craft isn\u2019t able to finish processing project config changes, due to unresolved dependencies.\n- Craft will no longer log errors and warnings arising from `yii\\i18n\\PhpMessageSource`. ([#4109](https://github.com/craftcms/cms/issues/4109))\n- Improved the performance and reliability of user queries when the `group` param is set to a user group with a large number of users.\n- Updated Yii to 2.0.21.\n\n### Fixed\n- Fixed a bug where `Craft::dd()` wouldn\u2019t work properly if output buffering was enabled. ([#4399](https://github.com/craftcms/cms/issues/4399))\n- Fixed a bug where `Craft::alias()` wasn\u2019t working on Windows servers. ([#4405](https://github.com/craftcms/cms/issues/4405))\n- Fixed a bug where Craft wasn\u2019t parsing the `dsn` DB connection setting properly if it was supplied.\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.1.30 - 2019-06-11\n\n### Changed\n- Improved query performance. ([yiisoft/yii2#17344](https://github.com/yiisoft/yii2/pull/17344), [yiisoft/yii2#17345](https://github.com/yiisoft/yii2/pull/17345), [yiisoft/yii2#17348](https://github.com/yiisoft/yii2/pull/17348))\n- `craft\\services\\Elements::saveElement()` now always propagates elements regardless of the `$propagate` argument value, when saving new elements. ([#4370](https://github.com/craftcms/cms/issues/4370))\n\n### Fixed\n- Fixed a bug where new elements weren\u2019t assigned a UID in time if their URI format contained a `{uid}` token. ([#4364](https://github.com/craftcms/cms/issues/4364))\n- Fixed a bug where Craft was modifying custom log target configs before executing queue jobs. ([#3766](https://github.com/craftcms/cms/issues/3766))\n- Fixed a bug where `craft\\helpers\\ChartHelper::getRunChartDataFromQuery()` assumed that the value would be integers. ([craftcms/commerce#849](https://github.com/craftcms/commerce/issues/849))\n- Fixed a bug where `craft\\services\\Security::validateData()` was returning an empty string instead of `false` when the data didn\u2019t validate. ([#4387](https://github.com/craftcms/cms/issues/4387))\n- Fixed a bug where Craft could inject unexpected JavaScript into front-end requests. ([#4390](https://github.com/craftcms/cms/issues/4390))\n\n## 3.1.29 - 2019-06-04\n\n### Added\n- Added the `restore` command, which restores a database backup.\n- Added the `Craft.escapeRegex()` JavaScript method.\n\n### Changed\n- Asset indexes now sort assets by Date Uploaded in descending order by default. ([#1153](https://github.com/craftcms/cms/issues/1153))\n- `craft\\db\\Paginator` no longer assumes that the application\u2019s database connection should be used.\n- Updated Twig to 2.11. ([#4342](https://github.com/craftcms/cms/issues/4342))\n\n### Fixed\n- Fixed a bug where the Status menu wasn\u2019t visible for the \u201cAll users\u201d source on user indexes. ([#4306](https://github.com/craftcms/cms/pull/4306))\n- Fixed a bug where pressing the <kbd>Esc</kbd> key in the setup wizard would close the modal window. ([#4307](https://github.com/craftcms/cms/issues/4307))\n- Fixed a bug where `craft\\validators\\ArrayValidator::validate()` didn\u2019t work. ([#4309](https://github.com/craftcms/cms/pull/4309))\n- Fixed an error that could occur when rendering templates with a `loop.parent.loop` reference in a nested for-loop. ([#4271](https://github.com/craftcms/cms/issues/4271))\n- Fixed a bug where publishing a Single entry\u2019s draft, or reverting a Single entry to a prior version, would overwrite its title to the section name. ([#4323](https://github.com/craftcms/cms/pull/4323))\n- Fixed a bug where Craft wasn\u2019t invalidating existing asset transforms when changing the dimensions of a named transform.\n- Fixed a bug where `craft\\services\\Fields::getFieldsByElementType()` would return duplicate results if a field was used in more than one field layout for the element type. ([#4336](https://github.com/craftcms/cms/issues/4336))\n- Fixed a bug where Craft wasn\u2019t respecting the `allowUppercaseInSlug` config setting when generating slugs in the Control Panel. ([#4330](https://github.com/craftcms/cms/issues/4330))\n- Fixed a bug where Control Panel Ajax requests weren\u2019t working if a custom `pathParam` config setting value was set. ([#4334](https://github.com/craftcms/cms/issues/4334))\n- Fixed a JavaScript error that could occur when saving a new entry, if the selected entry type didn\u2019t have a Title field. ([#4353](https://github.com/craftcms/cms/issues/4353))\n\n## 3.1.28 - 2019-05-21\n\n### Added\n- Added the \u201cCustomize element sources\u201d user permission. ([#4282](https://github.com/craftcms/cms/pull/4282))\n- Matrix sub-fields now have a \u201cUse this field\u2019s values as search keywords?\u201d setting. ([#4291](https://github.com/craftcms/cms/issues/4291))\n- Added `craft\\web\\twig\\variables\\Paginate::setBasePath()`. ([#4286](https://github.com/craftcms/cms/issues/4286))\n\n### Changed\n- Craft now requires Yii 2.0.19.\n\n### Fixed\n- Fixed a bug where slugs could get double-hyphenated. ([#4266](https://github.com/craftcms/cms/issues/4266))\n- Fixed an error that would occur when installing Craft if the `allowAdminChanges` config setting was disabled. ([#4267](https://github.com/craftcms/cms/issues/4267))\n- Fixed a bug where Matrix fields would return the wrong set of Matrix blocks on new or duplicated elements, immediately after they were saved.\n- Fixed a bug where users could not assign additional user groups to their own account if their permission to do so was granted by another user group they belonged to.\n- Fixed a bug where Number fields would attempt to save non-numeric values. ([craftcms/feed-me#527](https://github.com/craftcms/feed-me/issues/527))\n- Fixed a bug where it was possible to assign a Structure entry or category to a new parent, even if that would cause its descendants to violate the Max Levels setting. ([#4279](https://github.com/craftcms/cms/issues/4279))\n- Fixed an error that could occur when rendering a template from a console request, if the template contained any non-global `{% cache %}` tags. ([#4284](https://github.com/craftcms/cms/pull/4284))\n\n## 3.1.27 - 2019-05-14\n\n### Added\n- Added `craft\\fields\\Matrix::EVENT_SET_FIELD_BLOCK_TYPES`. ([#4252](https://github.com/craftcms/cms/issues/4252))\n\n### Changed\n- Pressing <kbd>Shift</kbd> + <kbd>Return</kbd> (or <kbd>Shift</kbd> + <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Return</kbd>) when a textual cell is focused in an editable table will now change the focus to the same cell in the previous row (after creating a new row if necessary.) ([#4259](https://github.com/craftcms/cms/issues/4259))\n- Craft no longer shows the status menu for element sources that define a status. ([#4249](https://github.com/craftcms/cms/issues/4249))\n- Element URI formats can now conditionally output an empty string, opting the element out of getting its own system URI. ([#4254](https://github.com/craftcms/cms/issues/4254))\n- Table fields now get validation errors if any column handles are entered in the format of \u201ccolX\u201d.\n- Craft no longer clear out users\u2019 verification codes after login. ([#4257](https://github.com/craftcms/cms/issues/4257))\n- The `users/upload-user-photo` and `users/delete-user-photo` actions are now available to front-end requests. ([#3932](https://github.com/craftcms/cms/issues/3932))\n\n### Fixed\n- Fixed a bug where rebuilding the project config could set an incorrect value for the user field layout.\n- Fixed a bug Craft wouldn\u2019t allow users to edit their own photos if they didn\u2019t have upload/remove asset permissions.\n- Fixed a bug where Craft wasn\u2019t removing newline characters when pasting text into some single-line Table column types.\n- Fixed a bug where project config syncing could have inconsistent results on load-balanced environments. ([#4136](https://github.com/craftcms/cms/issues/4136))\n- Fixed a bug where the Plugin Store was not able to load developer details. ([#4241](https://github.com/craftcms/cms/issues/4241))\n- Fixed a bug that could occur when Craft generated URLs with multi-byte characters in the query string.\n- Fixed a bug where you could get some character encoding issues in some environments when using PHP 7.3.\n- Fixed a bug where Craft wasn\u2019t attempting to set a unique URI on duplicated elements. ([#4253](https://github.com/craftcms/cms/issues/4253))\n- Fixed a bug where Table fields could copy cell values to other cells if a column had a handle in the format of \u201ccolX\u201d. ([#4200](https://github.com/craftcms/cms/issues/4200))\n- Fixed an error that could occur on the Login page if a custom Login Page Logo was selected. ([#4261](https://github.com/craftcms/cms/issues/4261))\n\n## 3.1.26 - 2019-05-08\n\n### Changed\n- The \u201cUpdate all\u201d button on the Updates utility is now shown even if the page contains some uninstallable updates. ([#4230](https://github.com/craftcms/cms/issues/4230))\n- Craft now stores the Default User Group\u2019s UID in the project config, in case the group\u2019s ID is different across environments.\n- `craft\\services\\Assets::EVENT_BEFORE_REPLACE_ASSET` event handlers can now change the filename of the replaced asset before it is saved.\n- Improved the performance of background jobs. ([#4219](https://github.com/craftcms/cms/pull/4219))\n- Improved the Plugin Store\u2019s screenshots with arrows for navigation and pinch-to-zoom capability for touch devices.\n\n### Fixed\n- Fixed an error that could occur when saving a Single section if one of its sites had been disabled.\n- Fixed an error that could occur when deleting a site.\n- Fixed a PHP compile error that could occur when paginating a query. ([#4208](https://github.com/craftcms/cms/pull/4208))\n- Fixed an error that could occur on the Settings \u2192 Users \u2192 Settings page if the project config was missing its `users` key. ([#4206](https://github.com/craftcms/cms/issues/4206))\n- Fixed a bug where Craft wasn\u2019t requiring email verification for new user accounts if the project config was missing its `users` key.\n- Fixed a bug where Craft wasn\u2019t eager loading elements in the same site as the source element, if that was different than the currently requested site. ([#3954](https://github.com/craftcms/cms/issues/3954))\n\n## 3.1.25 - 2019-04-30\n\n### Added\n- Added the `|ascii` Twig filter. ([#4193](https://github.com/craftcms/cms/issues/4193))\n\n### Changed\n- Craft now registers its project config event handlers before loading plugins. ([#3943](https://github.com/craftcms/cms/issues/3943))\n- The Control Panel now uses jQuery 3.4.0. ([#4183](https://github.com/craftcms/cms/issues/4183))\n- `behavior` and `behaviors` are now reserved field handles. ([#4184](https://github.com/craftcms/cms/issues/4184))\n- The Updates utility no longer shows notices for expired plugins if no updates are actually available. ([#4186](https://github.com/craftcms/cms/issues/4186))\n\n### Fixed\n- Fixed an error where rebuilding the project config would not typecast the `propagateEntries` and `enableVersioning` section settings correctly. ([#3695](https://github.com/craftcms/cms/issues/3695))\n- Fixed a bug where the Edit Draft HUD would include the current site name in the default Draft Name value for multi-site entries. ([#4171](https://github.com/craftcms/cms/issues/4171))\n- Fixed a bug where resource requests could send a 500 response if the resource didn\u2019t exist. ([#4197](https://github.com/craftcms/cms/pull/4197))\n\n## 3.1.24 - 2019-04-23\n\n### Added\n- Added `craft\\services\\Fields::getFieldIdsByLayoutId()`.\n\n### Changed\n- Craft now correctly typecasts all core boolean and integer values saved to the project config. ([#3695](https://github.com/craftcms/cms/issues/3695))\n- Craft now saves new entry versions every time an entry is saved, unless it\u2019s being propagated or resaved.\n- `users/save-user` and `users/start-elevated-session` requests now check for a `currentPassword` body param in addition to `password`, when looking for the user\u2019s current password. ([#4169](https://github.com/craftcms/cms/issues/4169))\n- `craft\\services\\Path::getStoragePath()` now has a `$create` argument.\n- Updated Twig to 2.8.\n\n### Fixed\n- Fixed an error where re-saving a site would reset its sorting order. ([#4147](https://github.com/craftcms/cms/issues/4147))\n- Fixed a SQL error that could occur when updating to Craft 3.1. ([#3663](https://github.com/craftcms/cms/issues/3663))\n- Fixed an error that occurred when an SVG with `/` characters in its `id` attributes was passed to the `svg()` Twig function. ([#4155](https://github.com/craftcms/cms/issues/4155))\n- Fixed a bug where passing `:empty:` or `:notempty:` to a Matrix field param on an element query could return incorrect results for fields that had soft-deleted blocks. ([#4161](https://github.com/craftcms/cms/issues/4161))\n- Fixed a bug where Craft wasn\u2019t returning a `1` exit code for console requests if the server was running under PHP 7. ([#4153](https://github.com/craftcms/cms/issues/4153))\n- Fixed a \u201cWorld-writable config file 'my.cnf' is ignored\u201d warning that could occur when creating a database backup. ([#4163](https://github.com/craftcms/cms/pull/4163))\n- Fixed a bug where `craft\\services\\Elements::duplicateElements()` would only ignore non-safe attributes passed to the `$newAttributes` argument.\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::exists()` and `offsetExists()` were ignoring cached query results.\n\n## 3.1.23 - 2019-04-16\n\n### Added\n- The `project-config/sync` command now has a `--force` option, which forces the project config to treat all preexisting config values as new. ([#4126](https://github.com/craftcms/cms/issues/4126))\n- Added `craft\\base\\LogTargetTrait`, which can be used by custom `log` components, to gain security and privacy features provided by Craft\u2019s built-in file target. ([#4127](https://github.com/craftcms/cms/pull/4127))\n\n### Changed\n- When creating a new site, global sets are now propagated to it before other element types. ([#3446](https://github.com/craftcms/cms/issues/3446))\n- Locked Twig down to 2.7, to avoid a bug in 2.8.0. ([twigphp/Twig#2942](https://github.com/twigphp/Twig/issues/2942))\n\n### Fixed\n- Fixed an error that occurred when installing a missing plugin from the Settings \u2192 Plugins page. ([#4140](https://github.com/craftcms/cms/issues/4140))\n- Fixed PHP type errors that could occur when calling some deprecated `craft.request` methods in templates. ([#4124](https://github.com/craftcms/cms/issues/4124))\n- Fixed performance issues that could occur where uploading GIFs in the Control Panel. ([#4131](https://github.com/craftcms/cms/pull/4131))\n- Fixed a bug where it wasn\u2019t possible to create a new global set with the same name or handle as a soft-deleted one. ([#4091](https://github.com/craftcms/cms/issues/4091))\n- Fixed a bug where pending users\u2019 verification codes were getting deleted if they were impersonated by an admin. ([#4130](https://github.com/craftcms/cms/issues/4130))\n\n## 3.1.22 - 2019-04-10\n\n### Added\n- Added `craft\\base\\ElementTrait::$resaving`, which indicates whether the element is currently being resaved via a `ResaveElements` job or a `resave` command. ([#3482](https://github.com/craftcms/cms/issues/3482))\n- Added `craft\\db\\Paginator::setPageResults()`. ([#4120](https://github.com/craftcms/cms/issues/4120))\n\n### Changed\n- Changed the way Craft updates search indexes, to reduce the likelihood of a deadlock. ([#3197](https://github.com/craftcms/cms/issues/3197))\n- Improved styles and behavior of the Plugin Store.\n- The Settings \u2192 Plugins page now notes which plugins are expired, with links to renew them on [id.craftcms.com](https://id.craftcms.com).\n- Improved the styling of info HUDs that contain long text or tables. ([#4107](https://github.com/craftcms/cms/pull/4107))\n\n### Fixed\n- Fixed a PHP error that could occur during asset indexing in some cases.\n- Fixed a bug where entry drafts weren\u2019t showing previous changes to Matrix fields on the draft. ([#4105](https://github.com/craftcms/cms/issues/4105))\n- Fixed a bug where `project.yaml` changes weren\u2019t always getting picked up. ([#4028](https://github.com/craftcms/cms/issues/4028))\n- Fixed a bug where the `project-config/rebuild` command would restore soft-deleted components. ([#4100](https://github.com/craftcms/cms/issues/4100))\n- Fixed a bug where the `project-config/sync` command was not performing schema checks.\n- Fixed an error that occurred when backing up the database if the database password contained a `$` character. ([#4115](https://github.com/craftcms/cms/issues/4115))\n\n## 3.1.21.1 - 2019-04-04\n\n### Fixed\n- Fixed a bug where underscores were getting stripped from element slugs. ([#4096](https://github.com/craftcms/cms/issues/4096))\n\n## 3.1.21 - 2019-04-03\n\n### Added\n- Added the `backup` command, which creates a new database backup. ([#4075](https://github.com/craftcms/cms/issues/4075))\n- Added the `queue/retry` command, which can be passed a failed job ID, or `all` to retry all failed jobs. ([#4072](https://github.com/craftcms/cms/issues/4072))\n- Added `craft\\queue\\Queue::retryAll()`.\n- Added `craft\\services\\Sections::$autoResaveEntries`, which can be set to `false` from `config/app.php` to prevent Craft from auto-resaving entries after sections and entry types are updated. ([#3482](https://github.com/craftcms/cms/issues/3482))\n\n### Changed\n- It\u2019s now possible to double-click on asset sources to expand/collapse their subfolders. ([#4070](https://github.com/craftcms/cms/issues/4070))\n- Craft no longer auto-resaves entries after saving a section or entry type if nothing changed of any significance to entries. ([#3482](https://github.com/craftcms/cms/issues/3482))\n- Craft now formats filesizes using metric units (e.g. MB instead of MiB).\n- The updater is now capable of handling package name changes.\n- Craft now requires Yii 2.0.17.\n\n### Fixed\n- Fixed a bug where the Asset Indexes utility wasn\u2019t logging exceptions.\n- Fixed a SQL error that could occur when using the Asset Indexes utility, if any filenames contained 4+ byte characters.\n- Fixed a bug where entry queries could return duplicate results for any entries that belong to a section that has soft-deleted structures associated with it. ([#4066](https://github.com/craftcms/cms/issues/4066))\n- Fixed a bug where rebuilding project config would not work with Matrix fields with no block types. ([#4074](https://github.com/craftcms/cms/issues/4074)\n- Fixed an error that occurred when sending emails if the `testToEmailAddress` config setting was set. ([#4076](https://github.com/craftcms/cms/issues/4076))\n- Fixed a bug where it wasn\u2019t possible to pass the `--element-id` option on `resave/*` commands.\n- Fixed a bug where Matrix fields were including disabled blocks if any changes had been made to the Matrix block query params.\n- Fixed SQL errors that could occur if the table prefix had ever changed.\n\n## 3.1.20.1 - 2019-03-27\n\n### Fixed\n- Fixed an error that occurred when regenerating the project config, if there were any fields without settings. ([#4062](https://github.com/craftcms/cms/issues/4062))\n- Fixed an error that occurred when loading the `_includes/forms/date` template without passing a `value` variable. ([#4063](https://github.com/craftcms/cms/issues/4063))\n\n## 3.1.20 - 2019-03-27\n\n### Added\n- Added the `project-config/rebuild` console command.\n- Added the `verifyEmailSuccessPath` config setting.\n- Added the \u201cPrefix\u201d and \u201cSuffix\u201d settings for Number fields. ([#4055](https://github.com/craftcms/cms/issues/4055))\n- Added the \u201cMax Length\u201d setting for URL fields. ([#4019](https://github.com/craftcms/cms/issues/4019))\n- Added the `devMode` global Twig variable. ([#4038](https://github.com/craftcms/cms/issues/4038))\n- Added `craft\\config\\GeneralConfig::getVerifyEmailSuccessPath()`.\n- Added `craft\\events\\RebuildConfigEvent`.\n- Added `craft\\services\\ProjectConfig::rebuild()`.\n- Added `craft\\services\\Sections::pruneDeletedField()`.\n\n### Changed\n- Textareas within the Control Panel can now be manually vertically resized. ([#4030](https://github.com/craftcms/cms/issues/4030))\n- The Craft Support widget now includes a \u201cMore Resources\u201d section. ([#4058](https://github.com/craftcms/cms/issues/4058))\n- The `_includes/forms/text` Control Panel template now supports `step`, `min`, and `max` attributes.\n- Users without access to the Control Panel are now redirected according to the `verifyEmailSuccessPath` config setting after verifying a new email address. ([#1998](https://github.com/craftcms/cms/issues/1998))\n- The `_includes/forms/text` Control Panel template now supports passing `autocorrect: false` and `autocapitalize: false`, to disable autocorrect and auto-capitalization on iOS devices.\n- iOS autocorrect and auto-capitalization has been disabled for all core \u201cHandle\u201d and \u201cSlug\u201d fields in the Control Panel. ([#4009](https://github.com/craftcms/cms/issues/4009))\n- Number fields now format their values for element index tables. ([#4059](https://github.com/craftcms/cms/issues/4059))\n- When installing Craft using a `project.yaml`, Craft now backups the existing config to the config backup folder if there are errors. ([#4017](https://github.com/craftcms/cms/issues/4017))\n- Craft now prunes entry type layouts when deleting a field.\n- Craft no longer modifies the DSN string if set explicitly with the `dsn` database config setting.\n- Craft no longer throws an `InvalidConfigException` when the `dsn` database config setting is set and contains an unexpected parameter.\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t removing hyphens and other symbols from auto-generated asset titles. ([#4011](https://github.com/craftcms/cms/issues/4011))\n- Fixed a PHP error that occurred when calling `craft\\services\\EntryRevisions::getDraftById()` or `getVersionById()` for a draft/version that belonged to a soft-deleted entry. ([#4013](https://github.com/craftcms/cms/issues/4013))\n- Fixed a bug where Craft wasn\u2019t respecting the site selection for routes defined in Settings \u2192 Routes. ([#4021](https://github.com/craftcms/cms/issues/4021))\n- Fixed a bug where the `project-config/sync` command wasn\u2019t logging exceptions. ([#4015](https://github.com/craftcms/cms/issues/4015))\n- Fixed an error that occurred when attempting to use Live Preview with a pending user account. ([#4025](https://github.com/craftcms/cms/issues/4025))\n- Fixed an error when displaying a date input in the Control Panel if the value passed wasn\u2019t a `DateTime` object. ([#4041](https://github.com/craftcms/cms/issues/4041))\n- Fixed a PHP error that occurred when passing an array of `craft\\elements\\User` objects to `craft\\mail\\Message::setTo()`. ([#4048](https://github.com/craftcms/cms/issues/4048))\n- Fixed a bug where Craft was applying the `offset` param to both ends of the result set when paginating queries. ([#4052](https://github.com/craftcms/cms/issues/4052))\n- Fixed a PHP error that occurred if `true` or `false` was passed to the third argument of `craft\\db\\Command::upsert()`. ([#4054](https://github.com/craftcms/cms/pull/4054))\n- Fixed a bug where deleting fields via `project.yaml` could prevent other changes from being applied.\n- Fixed a bug where field UIDs could be overwritten in some cases.\n\n## 3.1.19 - 2019-03-19\n\n### Added\n- Added the `_includes/pagination` Control Panel template.\n- Added `craft\\db\\Paginator`.\n- Added `craft\\web\\twig\\variables\\Paginate::create()`.\n\n### Changed\n- The `{% paginate %}` tag now accepts any query object, not just element queries.\n- The `_includes/forms/autosuggest` template now has `data` and `methods` blocks that can be overridden by sub-templates to customize the autosuggest behavior.\n\n### Fixed\n- Fixed a bug where sidebar badge counts in the Control Panel were getting formatted with two decimals if the Intl extension wasn\u2019t loaded. ([#4002](https://github.com/craftcms/cms/issues/4002))\n- Fixed a bug where entry drafts would forget that certain field values had been cleared out, and continue using the live revision\u2019s content instead. ([#3981](https://github.com/craftcms/cms/issues/3981))\n- Fixed an error that occurred if a Table field was created with a Date or Time column and no rows in the Default Values setting. ([#4005](https://github.com/craftcms/cms/issues/4005))\n- Fixed a bug where Table fields would forget that they had been saved without any rows in the Default Values setting.\n- Fixed a SQL error that could occur when saving non-UTF-8 characters to the project config. ([#4007](https://github.com/craftcms/cms/issues/4007))\n\n## 3.1.18 - 2019-03-14\n\n### Added\n- Added `craft\\services\\Deprecator::$throwExceptions`. ([#3972](https://github.com/craftcms/cms/pull/3972))\n\n### Changed\n- `Craft::parseEnv()` will now boolean values for environment variables set to `true` or `false`. ([#3975](https://github.com/craftcms/cms/issues/3975))\n- Nested project config keys are no longer sorted alphabetically.\n- Craft now requires Twig 2.7+.\n\n### Fixed\n- Fixed a SQL error that occurred when using a token with a usage limit, if using PostgreSQL. ([#3969](https://github.com/craftcms/cms/issues/3969))\n- Fixed a bug where the Edit User page would forget user group selection changes if there was a validation error. ([#3971](https://github.com/craftcms/cms/issues/3971))\n- Fixed a bug where the updater would get an unexpected response when updating from 3.1.14 - 3.1.16 to 3.1.17+.\n- Fixed a bug where it wasn\u2019t possible to switch plugin editions when the `allowUpdates` config setting was disabled. ([#3987](https://github.com/craftcms/cms/issues/3987))\n- Fixed a bug where multiple consecutive newlines in field instructions would result in multiple `<br>` tags rather than new paragraphs.\n- Fixed a bug where Table fields weren\u2019t always remembering the sort order for their Default Values settings. ([#3947](https://github.com/craftcms/cms/issues/3947))\n- Fixed a bug where Table fields weren\u2019t always remembering the sort order for their Table Columns settings. ([#3997](https://github.com/craftcms/cms/issues/3997))\n\n## 3.1.17.2 - 2019-03-12\n\n### Changed\n- Craft now requires Twig 2.6.\n\n## 3.1.17.1 - 2019-03-08\n\n### Added\n- Added `craft\\helpers\\ArrayHelper::ensureNonAssociative()`.\n\n### Fixed\n- Fixed a bug where commercial plugin editions weren\u2019t showing up in the Plugin Store.\n- Fixed a bug where installing a plugin from the Plugin Store would not respect the selected edition.\n- Fixed a bug where plugins with free and commercial editions weren\u2019t getting license key inputs on the Setting \u2192 Plugins page.\n- Fixed a bug where the Setting \u2192 Plugins page wasn\u2019t linking plugins\u2019 edition badge to their page in the Plugin Store for plugins with free and commercial editions, if the free edition was currently active.\n\n## 3.1.17 - 2019-03-08\n\n### Changed\n- When installing Craft using a `project.yaml`, Craft now processes all sites before installing any plugins. ([craftcms/commerce#752](https://github.com/craftcms/commerce/issues/752))\n- The Plugin Store now shows \u201cReport an issue\u201d links on plugin screens.\n- The Plugin Store now includes a \u201cPackage Name\u201d section on plugin screens. ([#2757](https://github.com/craftcms/cms/issues/2757))\n- The Plugin Store now shows discounted upgrade prices for plugins when a lower edition is already licensed.\n- Craft now requires Yii 2.0.16.1.\n\n### Fixed\n- Fixed a bug where the `positionedBefore` element query param was not including direct ancestors in the results.\n- Fixed a bug where HTML in plugin-supplied field instructions was getting encoded. ([#3928](https://github.com/craftcms/cms/issues/3928))\n- Fixed a bug where Craft would prompt for a user\u2019s current password when registering a new user, even if they weren\u2019t assigning any groups or permissions to that user\n- Fixed a bug where asset indexing could yield inconsistent results in some cases. ([#3450](https://github.com/craftcms/cms/issues/3450))\n- Fixed a bug where the Plugin Store was showing info icons in the feature matrix of multi-edition plugins, even for features that didn\u2019t have an extended description.\n- Fixed a bug where entries weren\u2019t getting new versions when edited from element editor HUDs. ([#3959](https://github.com/craftcms/cms/issues/3959))\n\n## 3.1.16 - 2019-03-05\n\n### Added\n- The Plugin Store now shows Repository links on plugin screens.\n- Added the `create()` Twig function. ([#3921](https://github.com/craftcms/cms/pull/3921))\n- Added the `--type` option to the `resave/entries` command. ([#3939](https://github.com/craftcms/cms/issues/3939))\n- Added `craft\\helers\\Assets::getAllowedFileKinds()`.\n\n### Changed\n- Line breaks in field instructions now get converted to `<br>` tags. ([#3928](https://github.com/craftcms/cms/issues/3928))\n- Assets field settings no longer list file kinds that aren\u2019t allowed to be uploaded, per the `allowedFileExtensions` and `extraAllowedFileExtensions` config settings. ([#3917](https://github.com/craftcms/cms/issues/3917))\n- The `{% exit %}` tag now throws a more specific exception depending on the status code passed to it (e.g. `yii\\web\\NotFoundHttpException` for 404s). ([#3915](https://github.com/craftcms/cms/issues/3915))\n- `craft\\helpers\\MigrationHelper::dropAllIndexesOnTable()` is no longer deprecated.\n- The `--id` option on `resave/*` console commands is now named `--element-id`. ([#3940](https://github.com/craftcms/cms/issues/3940))\n- The `_includes/forms/autosuggest.html` template now supports passing `disabled: true`. ([#3925](https://github.com/craftcms/cms/issues/3925))\n\n### Fixed\n- Fixed a bug where Control Panel content areas weren\u2019t getting their bottom padding applied in Firefox. ([#3874](https://github.com/craftcms/cms/issues/3874))\n- Fixed a PHP error that occurred on the front end if two routes defined in Settings \u2192 Routes had the same URI pattern. ([#3922](https://github.com/craftcms/cms/issues/3922))\n- Fixed a bug where Craft wasn\u2019t always preselecting the correct tab on Control Panel pages if the tab name contained non-ASCII characters. ([#3923](https://github.com/craftcms/cms/issues/3923))\n- Fixed a bug where the `--uid` option on `resave/*` console commands wasn\u2019t working. ([#3941](https://github.com/craftcms/cms/issues/3941))\n- Fixed a SQL error that could occur when running `resave/*` console commands.\n- Fixed a PHP error that occurred when calling the deprecated `getError()` method on a model that had no errors. ([#3934](https://github.com/craftcms/cms/issues/3934))\n- Fixed a bug where Craft wasn\u2019t sanitizing new asset subfolder names. ([#3689](https://github.com/craftcms/cms/issues/3689))\n- Fixed a bug where Table fields weren\u2019t remembering the sort order for their Default Values settings. ([#3947](https://github.com/craftcms/cms/issues/3947))\n\n## 3.1.15 - 2019-02-26\n\n### Added\n- Added the `resave/assets`, `resave/categories`, `resave/entries`, `resave/tags`, and `resave/users` console commands.\n\n### Changed\n- Craft now sends system messages authored for the same root language as the requested language, if an exact language match can\u2019t be found. ([#3888](https://github.com/craftcms/cms/issues/3888))\n- Element source definitions can now include a `badgeCount` key.\n- Login requests no longer enforce CSRF validation if someone is already logged in.\n- Craft now throws an `InvalidConfigException` when updating the project config if any unexpected data types are encountered.\n- The `testToEmailAddress` config setting can now be set to `false`. ([#3910](https://github.com/craftcms/cms/pull/3910))\n\n### Fixed\n- Fixed a bug where the System Messages utility wouldn\u2019t update message previews after editing a message for the primary site\u2019s language, if the user had a different preferred language selected.\n- Fixed a bug where structures weren\u2019t getting deleted and unassigned from their sections properly after converting a Structure section to a Channel or Single. ([#3895](https://github.com/craftcms/cms/issues/3895))\n- Really fixed a bug where Craft could update the `dateModified` value in the project config even when nothing had changed. ([#3792](https://github.com/craftcms/cms/issues/3792))\n- Fixed a bug where the Settings \u2192 Routes page wasn\u2019t listing routes in the user-defined order. ([#3892](https://github.com/craftcms/cms/issues/3892))\n- Fixed an error that occurred when viewing trashed entries, if the \u201cEntry Type\u201d column was shown and one of the trashed entries\u2019 entry types had been deleted. ([#3899](https://github.com/craftcms/cms/issues/3899))\n\n## 3.1.14 - 2019-02-21\n\n### Added\n- Added `craft\\helpers\\ProjectConfig::cleanupConfig()`.\n- Added `craft\\web\\Request::$maxPageNum`, which determines the maximum page number Craft should accept (100,000 by default). ([#3880](https://github.com/craftcms/cms/issues/3880))\n\n### Deprecated\n- Deprecated `craft\\mutex\\FileMutex`.\n\n### Fixed\n- Fixed a bug where Craft could update the `dateModified` value in the project config even when nothing had changed. ([#3792](https://github.com/craftcms/cms/issues/3792))\n- Fixed a SQL error that occurred when running the \u201cLocalizing relations\u201d task if using PostgreSQL. ([#3877](https://github.com/craftcms/cms/issues/3877))\n- Fixed a bug where file locking wasn\u2019t working on Windows. ([#3879](https://github.com/craftcms/cms/issues/3879))\n\n### Security\n- Fixed a bug where sensitive environment variable values weren\u2019t getting redacted correctly.\n\n## 3.1.13 - 2019-02-20\n\n### Added\n- Added `craft\\helpers\\StringHelper::replaceMb4()`.\n- Added `craft\\services\\ProjectConfig::defer()`.\n\n### Changed\n- The `users/login` and `users/logout` actions now include a `csrfTokenValue` key in JSON responses. ([#3858](https://github.com/craftcms/cms/issues/3858))\n- Craft no longer deletes search indexes when soft-deleting an element, until the element gets hard-deleted. ([#3863](https://github.com/craftcms/cms/issues/3863))\n- Updated Yii to 2.0.16.\n\n### Fixed\n- Fixed a bug where Craft could auto-place the `{{ beginBody() }}` and `{{ endBody() }}` tags in the wrong places.\n- Fixed a bug where Craft wasn\u2019t storing custom volume sort orders. ([#3764](https://github.com/craftcms/cms/issues/3764))\n- Fixed a SQL error that would occur when uploading a file with emojis in its name, if using MySQL. ([#3852](https://github.com/craftcms/cms/issues/3852))\n- Fixed a bug where Assets fields weren\u2019t respecting their View Mode setting when files were drag-uploaded to them. ([#3578](https://github.com/craftcms/cms/issues/3578))\n- Fixed a bug where asset queries\u2019 `kind` param wasn\u2019t working for custom file kinds defined by the `extraFileKinds` config setting, for file extensions that were already associated with another file kind. ([#3869](https://github.com/craftcms/cms/issues/3869))\n- Fixed a bug where `craft\\helpers\\FileHelper::sanitizeFilename()` could return inconsistent results.\n- Fixed an error that could occur when syncing `project.yaml` if it introduced a new Super Table field with a nested Matrix field.\n\n## 3.1.12 - 2019-02-15\n\n### Fixed\n- Fixed a bug where the `relatedTo` element query param could include results for elements that were related via soft-deleted Matrix blocks. ([#3846](https://github.com/craftcms/cms/issues/3846))\n- Fixed a bug where some search queries were not returning results when they should, if using MySQL.\n- Fixed an error that could occur when syncing `project.yaml` changes if the `allowAdminChanges` config setting was disabled. ([#3823](https://github.com/craftcms/cms/issues/3823))\n- Fixed an `InvalidConfigException` that was thrown if a user\u2019s photo was soft-deleted. ([#3849](https://github.com/craftcms/cms/issues/3849))\n\n## 3.1.11 - 2019-02-14\n\n### Added\n- Added `craft\\helpers\\UrlHelper::rootRelativeUrl()`.\n\n### Fixed\n- Fixed a bug where the Plugin Store wouldn\u2019t load if the `baseCpUrl` config setting was set to a URL with a different scheme than Craft believed the request had.\n- Fixed a validation error that would occur on non-required Checkboxes and Multi-select fields if no options were selected. ([#3844](https://github.com/craftcms/cms/issues/3844))\n- Fixed a validation error that would occur on Dropdown and Radio Buttons fields if the selected option\u2019s value was `0`. ([#3842](https://github.com/craftcms/cms/issues/3842))\n- Fixed a bug where the Value column for Checkboxes, Dropdown, Multi-select, and Radio Buttons fields\u2019 Options settings weren\u2019t auto-populating if the Option Label column was set to a number.\n- Fixed an error on the Settings \u2192 Users page if `users.photoVolumeUid` was not defined in the project config. ([#3303](https://github.com/craftcms/cms/issues/3303))\n\n## 3.1.10 - 2019-02-13\n\n### Changed\n- `craft\\helpers\\FileHelper::writeToFile()` now invalidates the OPcache for the file. ([#3838](https://github.com/craftcms/cms/pull/3838))\n- The `serve` command now uses `@webroot` as the default `docroot` option value. ([#3770](https://github.com/craftcms/cms/pull/3770))\n\n### Fixed\n- Fixed a bug where the `users/save-user` action wasn\u2019t deleting user photos properly.\n- Fixed a bug where changes to Matrix block type fields\u2019 settings weren\u2019t always saving. ([#3832](https://github.com/craftcms/cms/issues/3832))\n- Fixed a bug where non-searchable fields were still getting search keywords stored when using the Search Indexes utility. ([#3837](https://github.com/craftcms/cms/issues/3837))\n\n## 3.1.9.1 - 2019-02-12\n\n### Fixed\n- Fixed a bug where `Craft::alias()` wasn\u2019t beginning the response string with an `@` character if no `@` was passed into `Craft::setAlias()` to begin with.\n- Fixed an error that could occur if there were any HTML entities in the project config.\n\n## 3.1.9 - 2019-02-12\n\n### Added\n- Added the `disabledPlugins` config setting. ([craftcms/webhooks#4](https://github.com/craftcms/webhooks/issues/4))\n- Added the `$language` argument to `craft\\helpers\\StringHelper::toAscii()`.\n- Added `craft\\validators\\SlugValidator::$language`.\n- Added `craft\\web\\twig\\variables\\Cp::getAsciiCharMap()`.\n\n### Changed\n- The operating system name & version are now shown in the System Report utility. ([#3784](https://github.com/craftcms/cms/issues/3784))\n- Craft\u2019s installer no longer applies the current `project.yaml` file if the installed schema version doesn\u2019t match the one in the file. ([#3783](https://github.com/craftcms/cms/issues/3783))\n- Control Panel settings no longer warn about using the `@web` alias, if it was defined by the `aliases` config setting. ([#3798](https://github.com/craftcms/cms/pull/3798))\n- The `clear-caches` console command now clears CP resource files if the `@webroot` alias was defined by the `aliases` config setting. ([#3787](https://github.com/craftcms/cms/issues/3787))\n- `craft\\models\\VolumeFolder::getVolume()` now throws an `InvalidConfigException` if its `$volumeId` property is set to an invalid volume ID, rather than returning `null`.\n- Craft now checks if all files in project config mapping are valid and regenerates the map if they are not.\n- Craft now auto-generates slugs using an ASCII char map based on the language of the current entry/category, rather than the logged-in user. ([#3820](https://github.com/craftcms/cms/issues/3820))\n\n### Fixed\n- Fixed a SQL error that could occur when deleting an asset. ([#3786](https://github.com/craftcms/cms/issues/3786))\n- Fixed an error that occurred when customizing element indexes if the `allowAdminChanges` config setting was disabled. ([#3788](https://github.com/craftcms/cms/issues/3788))\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Buttons fields wouldn\u2019t pass validation if the selected option value was `true` or `false`.\n- Fixed an error that occurred on the Settings \u2192 Plugins page, if there were any plugins in the database that weren\u2019t Composer-installed.\n- Fixed an error that could occur if an Assets field was configured to upload to a deleted volume. ([#3799](https://github.com/craftcms/cms/issues/3799))\n- Fixed a bug where sections\u2019 Default Status settings weren\u2019t always being respected. ([#3791](https://github.com/craftcms/cms/issues/3791))\n- Fixed a bug where only users with the \u201cEdit users\u201d user permission were allowed to upload a new user photo. ([#3735](https://github.com/craftcms/cms/issues/3735))\n- Fixed a bug where renaming a Matrix block type\u2019s handle would result in new content columns being created in the database, and existing Matrix blocks losing their content. ([#3809](https://github.com/craftcms/cms/issues/3809))\n- Fixed a SQL error that could occur when updating to Craft 3.1 if any system messages contained emoji characters.\n- Fixed an error that could occur when working with elements, if a site had been created earlier in the same request. ([#3824](https://github.com/craftcms/cms/issues/3824))\n\n## 3.1.8 - 2019-02-05\n\n### Changed\n- Craft now automatically logs users in after resetting their password, if the `autoLoginAfterAccountActivation` config setting is enabled. ([#1025](https://github.com/craftcms/cms/issues/1025))\n\n### Fixed\n- Fixed a bug where pressing the <kbd>Return</kbd> key on editable tables with a static number of rows would add a new row. ([#3765](https://github.com/craftcms/cms/issues/3765))\n- Fixed a bug where pressing the <kbd>Return</kbd> key on editable tables would select the next row\u2019s cell even if the cell was disabled.\n- Fixed a bug where pressing the <kbd>Return</kbd> key on an editable table wouldn\u2019t move the focus to the next row\u2019s sell if it had an `<input>` instead of a `<textarea>`.\n- Fixed an error that could occur in the Control Panel if any environment variable values began with an `@` character. ([#3769](https://github.com/craftcms/cms/issues/3769))\n- Fixed a bug where `craft\\helpers\\DateTimeHelper::toDateTime()` was mistaking year-only values for Unix timestamps. ([#3772](https://github.com/craftcms/cms/issues/3772))\n- Fixed an error that occurred when a non-admin user attempted to edit a system message, or when the `allowAdminChanges` config setting was disabled. ([#3775](https://github.com/craftcms/cms/issues/3775))\n- Fixed a bug where it was hard to see error notifications on pages with a licensing alert. ([#3776](https://github.com/craftcms/cms/issues/3776))\n- Fixed a JavaScript error that occurred when adding a new row to a custom editable table that contained a `time` column, if no rows existed on page load. ([#3780](https://github.com/craftcms/cms/issues/3780))\n\n## 3.1.7 - 2019-01-31\n\n### Added\n- Added all the things that came in [Craft 3.0.40](https://github.com/craftcms/cms/blob/master/CHANGELOG-v3.md#3040---2019-01-31).\n- Added `craft\\helpers\\FileHelper::canTrustMimeType()`.\n- Added `craft\\web\\UploadedFile::getMimeType()`.\n\n### Changed\n- The \u201cPort\u201d SMTP mail transport setting can now be set to an environment variable. ([#3740](https://github.com/craftcms/cms/issues/3740))\n- `craft\\web\\Controller::requireAdmin()` now has a `$requireAdminChanges` argument, which dictates whether the `allowAdminChanges` config setting must also be enabled (`true` by default).\n- The `project-config/sync` console command now creates a `project.yaml` file, if it\u2019s missing. ([#3736](https://github.com/craftcms/cms/issues/3736))\n- Querying for active users no longer excludes locked users.\n- `craft\\helpers\\FileHelper::getMimeType()` now returns `application/x-yaml` for `.yaml` and `.yml` files.\n- Updated Craft UI to 0.2.0.\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if a plugin or module was calling `craft\\records\\User::find()`.\n- Fixed a bug where cross-domain Live Preview requests could fail due to CORS restrictions.\n- Fixed a 403 error that would occur when an admin attempted to log in as another user on an environment where the `allowAdminChanges` config setting was disabled. ([#3749](https://github.com/craftcms/cms/issues/3749))\n- Fixed a bug where asset index toolbar items would be misaligned when searching in a volume or folder with subfolders.\n- Fixed a bug where asset indexes could show multiple view mode toggles if a different volume or subfolder was selected while at least one asset was checked. ([#3702](https://github.com/craftcms/cms/issues/3702))\n- Fixed a bug where Plugin Store screenshots were not showing properly. ([#3709](https://github.com/craftcms/cms/issues/3709))\n- Fixed a bug where zoomed Plugin Store screenshots would not close when hitting the browser\u2019s Back button. ([#3754](https://github.com/craftcms/cms/issues/3754))\n- Fixed a bug where the Plugin Store was not working properly when Dev Mode was enabled.\n\n### Security\n- User accounts are now locked after multiple failed password attempts in current-password modals, per the `maxInvalidLogins` config setting.\n- Users are no longer signed out of active sessions when their account becomes locked.\n- Database backup/restore exception messages now redact the database password when using PostgreSQL.\n\n## 3.1.6.1 - 2019-01-29\n\n### Fixed\n- Fixed an error that occurred when creating a Table field with a Date column. ([#3748](https://github.com/craftcms/cms/issues/3748))\n\n## 3.1.6 - 2019-01-29\n\n### Added\n- It\u2019s now possible to update disabled plugins.\n\n### Changed\n- `craft\\web\\Controller::requireAdmin()` now sends a 403 (Forbidden) response if the `allowAdminChanges` config setting has been set to `false`. ([#3728](https://github.com/craftcms/cms/issues/3728))\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `date` key set to the `YYYY-MM-DD` format, in addition to the current locale\u2019s short date format.\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `time` key set to the `HH:MM` format, in addition to the current locale\u2019s short time format.\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `datetime` key, which will be handled the same way strings passed to the method are handled (except that the `datetime` key can be paired with a `timezone` key).\n\n### Fixed\n- Fixed an error that occurred when using the `json_decode` filter. ([#3722](https://github.com/craftcms/cms/pull/3722))\n- Fixed a bug a bug where plugin screenshots in the Plugin Store were not rendering correctly. ([#3709](https://github.com/craftcms/cms/issues/3709))\n- Fixed an error where the `index-assets/one` and `index-assets/all` console commands were creating `.` folders in each volume.\n- Fixed a bug where the Settings \u2192 Plugins page was showing extra \u201cMissing\u201d rows for any unlicensed plugins that were Composer-installed but not Craft-installed. ([#3726](https://github.com/craftcms/cms/issues/3726))\n- Fixed an error that could occur when viewing trashed elements.\n- Fixed a bug where many system message translations were missing line breaks. ([#3737](https://github.com/craftcms/cms/issues/3737))\n- Fixed a bug where unparsed markdown code was present in the Control Panel error message displayed when the system was offline. ([#3746](https://github.com/craftcms/cms/issues/3746))\n\n## 3.1.5 - 2019-01-25\n\n### Changed\n- Control Panel settings that can be set to environment variables now show a tip about that if the value is not already set to an environment variable or alias.\n- Control Panel form fields can now be configured with a `tip` property, which will be displayed below the field.\n- Control Panel templates can now pass `suggestEnvVars: true` and `suggestAliases: true` to autosuggest fields, rather that supplying the `suggestions` array.\n\n### Fixed\n- Fixed a bug where the \u201cDuplicate\u201d action wasn\u2019t available on the Entries index page for non-admin users. ([#3705](https://github.com/craftcms/cms/issues/3705))\n- Fixed a bug where it wasn\u2019t possible to rename an asset\u2019s filename from the Assets index page. ([#3707](https://github.com/craftcms/cms/issues/3707))\n- Fixed an error that occurred when saving a user that had a first or last name set.\n- Fixed a bug where it wasn\u2019t possible to apply project config changes. ([#3713](https://github.com/craftcms/cms/issues/3713))\n- Fixed a bug where the Password field on SMTP and Gmail mail transport settings could be set to an encoded and encrypted password. ([#3699](https://github.com/craftcms/cms/issues/3699))\n- Fixed a bug where it was possible to remove the Primary Site status from the primary site, without offering a new primary site. ([#3720](https://github.com/craftcms/cms/issues/3720))\n- Fixed an error that could occur if PHP\u2019s `memory_limit` was set to a higher size (in bytes) than `PHP_INT_MAX`. ([#3717](https://github.com/craftcms/cms/issues/3717))\n\n### Security\n- Control Panel settings that can be set to an alias now show a warning if the current value begins with the `@web` alias.\n\n## 3.1.4 - 2019-01-24\n\n### Added\n- Added all the things that came in [Craft 3.0.38](https://github.com/craftcms/cms/blob/master/CHANGELOG-v3.md#3038---2019-01-24).\n- The System Name setting can now be set to an environment variable. ([#3529](https://github.com/craftcms/cms/issues/3529))\n- Added the `index-assets/one` console command, which can now be used to index a single subfolder.\n- Added `craft\\base\\ApplicationTrait::getSystemName()`.\n\n### Changed\n- Craft now ensures that installed schema versions match the schema versions in `project.yaml` before syncing project config changes.\n- The `project-config/sync` console command now bails if there are pending Craft or plugin migrations.\n\n### Fixed\n- Fixed a bug where `site` translations were falling back to English if the translated message was identical to the source message. ([#3692](https://github.com/craftcms/cms/issues/3692))\n- Fixed a bug where syncing Matrix field changes to the project config would result in new changes to the project config. ([#3695](https://github.com/craftcms/cms/issues/3695))\n- Fixed an error that occurred when indexing assets in an empty volume.\n- Fixed a bug where soft-deleted assets would show up as missing after indexing.\n- Fixed a JavaScript error that could occur on the Settings \u2192 Plugins page.\n- Fixed a bug where `Craft::parseEnv()` was throwing an `InvalidConfigException` if the given string began with `@` but was not an alias. ([#3700](https://github.com/craftcms/cms/issues/3700))\n\n### Security\n- URLs are no longer allowed in users\u2019 first or last names.\n\n## 3.1.3 - 2019-01-21\n\n### Added\n- Added the `|json_decode` Twig filter. ([#3678](https://github.com/craftcms/cms/pull/3678))\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if a plugin or module was calling any soft-deletable records\u2019 `find()` methods.\n- Fixed an error that occurred when updating from Craft 2 to Craft 3.1 if there were any RichText fields. ([#3677](https://github.com/craftcms/cms/issues/3677))\n- Fixed a bug where it was possible to create duplicate tags by searching for and selecting the same tag name twice in the same Tags field. ([#3676](https://github.com/craftcms/cms/issues/3676))\n- Fixed a bug where system messages were getting sent with the message keys (e.g. \u201cforgot_password_subject\u201d and \u201cforgot_password_body\u201d) if Craft didn\u2019t provide a default message translation for the site language, and the message hadn\u2019t been translated for the user\u2019s preferred language. ([#3673](https://github.com/craftcms/cms/issues/3673))\n- Fixed a bug where `craft\\web\\Request::getIsLivePreview()` was returning `false` on Live Preview requests when called from an `yii\\base\\Controller::EVENT_BEFORE_ACTION` event handler. ([#3680](https://github.com/craftcms/cms/issues/3680))\n\n## 3.1.2.2 - 2019-01-19\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if a plugin or module was calling any `craft\\services\\Sections` methods.\n\n## 3.1.2.1 - 2019-01-19\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Matrix sub-fields that had their type set to a non-existing class. ([#3662](https://github.com/craftcms/cms/issues/3662))\n- Fixed a bug where the project config could be in an unexpected state if a `project.yaml` file existed already when initially updating to Craft 3.1.\n\n## 3.1.2 - 2019-01-18\n\n### Added\n- Added the `index-assets <volume>` and `index-assets/all` console commands. ([#3595](https://github.com/craftcms/cms/pull/3595))\n- Added `craft\\base\\FieldTrait::$oldSettings`.\n- Added `craft\\helpers\\Install`.\n- Added `craft\\services\\Fields::prepFieldForSave()`.\n- Added `craft\\services\\Path::getProjectConfigFilePath()`.\n- Added `craft\\services\\ProjectConfig::$muteEvents`.\n\n### Changed\n- The installer now checks `project.yaml` when determining the default site name, handle, base URL, and language values. ([#3661](https://github.com/craftcms/cms/issues/3661))\n- The Base URL field in the web-based installer now autouggests environment variable names and aliases.\n- Craft now creates a `.gitignore` file in the `storage/config-backups/` folder, preventing any other files within it from getting tracked by Git.\n- Craft no longer prevents changes in `project.yaml` from being synced if a plugins\u2019 schema version in `project.yaml` doesn\u2019t match up with its installed schema version, if one of them is blank.\n\n### Deprecated\n- Deprecated `craft\\services\\Fields::$ignoreProjectConfigChanges`.\n- Deprecated `craft\\services\\Matrix::$ignoreProjectConfigChanges`.\n\n### Fixed\n- Fixed a PHP notice that occurred when updating to Craft 3.1 if there were any plugins installed without settings.\n- Fixed a SQL error that occurred when updating to Craft 3.1 if a plugin or module was calling any `craft\\services\\Fields` methods. ([#3663](https://github.com/craftcms/cms/issues/3663))\n- Fixed a bug where element indexes would forget their source settings after updating to Craft 3.1. ([#3659](https://github.com/craftcms/cms/issues/3659))\n- Fixed a bug where commercial plugins weren\u2019t installable from the Plugin Store.\n- Fixed a bug where Matrix block type fields\u2019 `beforeSave()` methods weren\u2019t getting called.\n- Fixed a bug where Matrix fields could forget their content table name if they were created with a non-global context.\n- Fixed a bug where links to the Plugin Store from Settings \u2192 Plugins were 404ing. ([#3664](https://github.com/craftcms/cms/issues/3664))\n- Fixed a bug where soft-deleted sections and entry types were still showing up in the Control Panel. ([#3648](https://github.com/craftcms/cms/issues/3648))\n- Fixed a bug where an update to Craft 3.1 would fail with a database error in some scenarios.\n- Fixed a bug where Plugin Store\u2019s Try buttons would appear as disabled when they should be enabled. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Fixed an error that occurred when updating to Craft 3.1 if there were any relational fields that were missing some expected settings. ([#3641](https://github.com/craftcms/cms/issues/3641))\n\n### Security\n- Fixed two XSS vulnerabilities.\n\n## 3.1.1 - 2019-01-16\n\n### Added\n- Added support for the `CRAFT_LOG_PHP_ERRORS` PHP constant. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Added `craft\\web\\User::generateToken()`.\n\n### Changed\n- System error message templates no longer parse exception messages as Markdown.\n\n### Fixed\n- Fixed a bug where `craft\\services\\Volumes::getVolumeByHandle()` wasn\u2019t working. ([#3633](https://github.com/craftcms/cms/pull/3633))\n- Fixed a bug where the `clear-caches/cp-resources` command could clear out the wrong directory if the `resourceBasePath` config setting began with `@webroot`. ([#3637](https://github.com/craftcms/cms/issues/3637))\n- Fixed a bug where eager loading Matrix blocks would come up empty. ([#3644](https://github.com/craftcms/cms/issues/3644))\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Matrix blocks without any sub-fields. ([#3635](https://github.com/craftcms/cms/pull/3635))\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Matrix block types left over from a Matrix field that had been converted to something else.\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Assets fields that were missing some expected field settings. ([#3641](https://github.com/craftcms/cms/issues/3641))\n- Fixed an error that occurred when updating to Craft 3.1 if anything was calling `craft\\services\\Fields::getLayoutById()` or `getLayoutByType()` before the update was applied.\n- Fixed an error that could occur when logging deprecation errors on PostgreSQL. ([#3638](https://github.com/craftcms/cms/issues/3638))\n- Fixed a bug where users would get logged out while updating to Craft 3.1, causing a \u201cUser is not permitted to perform this action\u201d error.\n- Fixed a bug where \u201cJavaScript must be enabled\u201d and \u201cCookies must be enabled\u201d messages weren\u2019t getting positioned correctly. ([#3639](https://github.com/craftcms/cms/issues/3639))\n- Fixed a \u201cVariable \"message\" does not exist.\u201d error that could occur in the Control Panel.\n- Fixed a bug where free plugins weren\u2019t installable from the Plugin Store. ([#3642](https://github.com/craftcms/cms/issues/3642))\n\n### Security\n- The Request panel in the Debug Toolbar now redacts any sensitive information. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Fixed two XSS vulnerabilities.\n\n## 3.1.0 - 2019-01-15\n\n> **Warning**\n> This is a more complex update than usual, and failed update attempts are not uncommon. Please ensure you have a recent database backup, and we recommend you test the update on a local/staging environment before updating your production server.\n\n### Added\n- Added the Project Config, a portable and centralized configuration for system settings. ([#1429](https://github.com/craftcms/cms/issues/1429))\n- Category groups, elements, entry types, field layouts, global sets, sections, sites, site groups, structures, tag groups, and volumes are now soft-deleted. ([#867](https://github.com/craftcms/cms/issues/867))\n- Entries, categories, and users can now be restored within the Control Panel by selecting \u201cTrashed\u201d from the status menu on element index pages, and clicking the \u201cRestore\u201d button.\n- Added the System Messages utility for editing system messages, replacing the Settings \u2192 Email \u2192 System Messages page. ([#3421](https://github.com/craftcms/cms/issues/3421))\n- Some Site settings (Base URL), volume settings (Base URL and File System Path), and email settings (System Email Address, Sender Name, HTML Email Template, Username, Password, and Host Name) can now be set to environment variables using a `$VARIABLE_NAME` syntax. ([#3219](https://github.com/craftcms/cms/issues/3219))\n- The installer now checks whether a `project.yaml` file exists and applies any changes in it. ([#3291](https://github.com/craftcms/cms/issues/3291))\n- Control Panel settings that support environment variables now autosuggest environment variable names (and aliases when applicable) while typing.\n- Control Panel settings that define a template path now autosuggest existing template files.\n- Added cross-domain support for Live Preview. ([#1521](https://github.com/craftcms/cms/issues/1521))\n- Plugins can now have multiple editions.\n- Custom fields can now opt out of being included in elements\u2019 search keywords. ([#2600](https://github.com/craftcms/cms/issues/2600))\n- Added the `allowAdminChanges` config setting.\n- Added the `softDeleteDuration` config setting.\n- Added the `storeUserIps` config setting. ([#3311](https://github.com/craftcms/cms/issues/3311))\n- Added the `useProjectConfigFile` config setting.\n- Added the `gc` console command, which can be used to run garbage collection tasks.\n- Added the `project-config/sync` console command. ([#3510](https://github.com/craftcms/cms/issues/3510))\n- Added the `trashed` element query param, which can be used to query for elements that have been soft-deleted.\n- Added the `expression()` Twig function, for creating new `yii\\db\\Expression` objects in templates. ([#3289](https://github.com/craftcms/cms/pull/3289))\n- Added the `parseEnv()` Twig function.\n- Added the `plugin()` Twig function.\n- Added the `_includes/forms/autosuggest.html` include template for the Control Panel.\n- Added `Craft::parseEnv()`.\n- Added `craft\\base\\ApplicationTrait::getIsLive()`.\n- Added `craft\\base\\Element::EVENT_AFTER_RESTORE`.\n- Added `craft\\base\\Element::EVENT_BEFORE_RESTORE`.\n- Added `craft\\base\\Element::EVENT_DEFINE_EAGER_LOADING_MAP`.\n- Added `craft\\base\\ElementInterface::afterRestore()`.\n- Added `craft\\base\\ElementInterface::beforeRestore()`.\n- Added `craft\\base\\Field::EVENT_AFTER_ELEMENT_RESTORE`.\n- Added `craft\\base\\Field::EVENT_BEFORE_ELEMENT_RESTORE`.\n- Added `craft\\base\\FieldInterface::afterElementRestore()`.\n- Added `craft\\base\\FieldInterface::beforeElementRestore()`.\n- Added `craft\\base\\Model::EVENT_DEFINE_RULES`.\n- Added `craft\\base\\Plugin::editions()`.\n- Added `craft\\base\\Plugin::is()`.\n- Added `craft\\base\\SavableComponentInterface::beforeApplyDelete()`.\n- Added `craft\\behaviors\\EnvAttributeParserBehavior`.\n- Added `craft\\controllers\\LivePreviewController`.\n- Added `craft\\db\\ActiveRecord::prepareForDb()`.\n- Added `craft\\db\\Command::restore()`.\n- Added `craft\\db\\Command::softDelete()`.\n- Added `craft\\db\\Migration::restore()`.\n- Added `craft\\db\\Migration::softDelete()`.\n- Added `craft\\db\\SoftDeleteTrait`, which can be used by Active Record classes that wish to support soft deletes.\n- Added `craft\\db\\Table`.\n- Added `craft\\elements\\actions\\Restore`, which can be included in elements\u2019 `defineActions()` methods to opt into element restoration.\n- Added `craft\\events\\ConfigEvent`.\n- Added `craft\\events\\DeleteElementEvent`, which provides a `$hardDelete` property that can be set to `true` to force an element to be immediately hard-deleted. ([#3403](https://github.com/craftcms/cms/pull/3403))\n- Added `craft\\helpers\\App::editionHandle()`.\n- Added `craft\\helpers\\App::editionIdByHandle()`.\n- Added `craft\\helpers\\App::mailSettings()`.\n- Added `craft\\helpers\\ArrayHelper::firstWhere()`.\n- Added `craft\\helpers\\Db::idByUid()`.\n- Added `craft\\helpers\\Db::idsByUids()`.\n- Added `craft\\helpers\\Db::uidById()`.\n- Added `craft\\helpers\\Db::uidsByIds()`.\n- Added `craft\\helpers\\ProjectConfig`.\n- Added `craft\\helpers\\StringHelper::toWords()`.\n- Added `craft\\models\\FieldLayout::createFromConfig()`.\n- Added `craft\\models\\FieldLayout::getConfig()`.\n- Added `craft\\models\\Section::setEntryTypes()`.\n- Added `craft\\models\\Site::getBaseUrl()`.\n- Added `craft\\services\\AssetTransforms::getTransformByUid()`.\n- Added `craft\\services\\AssetTransforms::EVENT_BEFORE_APPLY_TRANSFORM_DELETE`.\n- Added `craft\\services\\Categories::getGroupByUid()`.\n- Added `craft\\services\\Categories::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Elements::restoreElement()`.\n- Added `craft\\services\\Elements::EVENT_AFTER_RESTORE_ELEMENT`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_RESTORE_ELEMENT`.\n- Added `craft\\services\\Fields::applyFieldDelete()`.\n- Added `craft\\services\\Fields::applyFieldSave()`.\n- Added `craft\\services\\Fields::createFieldConfig()`.\n- Added `craft\\services\\Fields::deleteFieldInternal()`.\n- Added `craft\\services\\Fields::restoreLayoutById()`.\n- Added `craft\\services\\Fields::saveFieldInternal()`.\n- Added `craft\\services\\Fields::EVENT_BEFORE_APPLY_FIELD_DELETE`.\n- Added `craft\\services\\Fields::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Gc` for handling garbage collection tasks.\n- Added `craft\\services\\Path::getConfigBackupPath()`.\n- Added `craft\\services\\ProjectConfig`.\n- Added `craft\\services\\Routes::deleteRouteByUid()`\n- Added `craft\\services\\Sections::getSectionByUid()`.\n- Added `craft\\services\\Sections::EVENT_BEFORE_APPLY_ENTRY_TYPE_DELETE`.\n- Added `craft\\services\\Sections::EVENT_BEFORE_APPLY_SECTION_DELETE`.\n- Added `craft\\services\\Sites::restoreSiteById()`.\n- Added `craft\\services\\Sites::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Sites::EVENT_BEFORE_APPLY_SITE_DELETE`.\n- Added `craft\\services\\Tags::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\UserGroups::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Volumes::EVENT_BEFORE_APPLY_VOLUME_DELETE`.\n- Added `craft\\validators\\TemplateValidator`.\n- Added `craft\\web\\Controller::requireCpRequest()`.\n- Added `craft\\web\\Controller::requireSiteRequest()`.\n- Added `craft\\web\\twig\\variables\\Cp::EVENT_REGISTER_CP_SETTINGS`. ([#3314](https://github.com/craftcms/cms/issues/3314))\n- Added `craft\\web\\twig\\variables\\Cp::getEnvSuggestions()`.\n- Added `craft\\web\\twig\\variables\\Cp::getTemplateSuggestions()`.\n- Added the ActiveRecord Soft Delete Extension for Yii2.\n- Added the Symfony Yaml Component.\n- The bundled Vue asset bundle now includes Vue-autosuggest.\n\n### Changed\n- The `defaultWeekStartDay` config setting is now set to `1` (Monday) by default, to conform with the ISO 8601 standard.\n- Renamed the `isSystemOn` config setting to `isSystemLive`.\n- The `app/migrate` web action now applies pending `project.yaml` changes, if the `useProjectConfigFile` config setting is enabled.\n- The `svg()` function now strips `<title>`, `<desc>`, and comments from the SVG document as part of its sanitization process.\n- The `svg()` function now supports a `class` argument, which will add a class name to the root `<svg>` node. ([#3174](https://github.com/craftcms/cms/issues/3174))\n- The `{% redirect %}` tag now supports `with notice` and `with error` params for setting flash messages. ([#3625](https://github.com/craftcms/cms/pull/3625))\n- `info` buttons can now also have a `warning` class.\n- User permission definitions can now include `info` and/or `warning` keys.\n- The old \u201cAdministrate users\u201d permission has been renamed to \u201cModerate users\u201d.\n- The old \u201cChange users\u2019 emails\u201d permission has been renamed to \u201cAdministrate users\u201d, and now comes with the ability to activate user accounts and reset their passwords. ([#942](https://github.com/craftcms/cms/issues/942))\n- All users now have the ability to delete their own user accounts. ([#3013](https://github.com/craftcms/cms/issues/3013))\n- System user permissions now reference things by their UIDs rather than IDs (e.g. `editEntries:<UID>` rather than `editEntries:<ID>`).\n- Animated GIF thumbnails are no longer animated. ([#3110](https://github.com/craftcms/cms/issues/3110))\n- Craft Tokens can now be sent either as a query string param (named after the `tokenParam` config setting) or an `X-Craft-Token` header.\n- Element types that support Live Preview must now hash the `previewAction` value for `Craft.LivePreview`.\n- Live Preview now loads each new preview into its own `<iframe>` element. ([#3366](https://github.com/craftcms/cms/issues/3366))\n- Assets\u2019 default titles now only capitalize the first word extracted from the filename, rather than all the words. ([#2339](https://github.com/craftcms/cms/issues/2339))\n- All console commands besides `setup/*` and `install/craft` now output a warning if Craft isn\u2019t installed yet. ([#3620](https://github.com/craftcms/cms/issues/3620))\n- All classes that extend `craft\\base\\Model` now have `EVENT_INIT` and `EVENT_DEFINE_BEHAVIORS` events; not just classes that extend `craft\\base\\Component`.\n- `craft\\db\\mysql\\Schema::findIndexes()` and `craft\\db\\pgsql\\Schema::findIndexes()` now return arrays with `columns` and `unique` keys.\n- `craft\\helpers\\ArrayHelper::filterByValue()` now defaults its `$value` argument to `true`.\n- `craft\\helpers\\MigrationHelper::doesIndexExist()` no longer has a `$foreignKey` argument, and now has an optional `$db` argument.\n- `craft\\mail\\Mailer::send()` now swallows any exceptions that are thrown when attempting to render the email HTML body, and sends the email as plain text only. ([#3443](https://github.com/craftcms/cms/issues/3443))\n- `craft\\mail\\Mailer::send()` now fires an `afterSend` event with `yii\\mail\\MailEvent::$isSuccessful` set to `false` if any exceptions were thrown when sending the email, and returns `false`. ([#3443](https://github.com/craftcms/cms/issues/3443))\n- `craft\\services\\Routes::saveRoute()` now expects site and route UIDs instead of IDs.\n- `craft\\services\\Routes::updateRouteOrder()` now expects route UIDs instead of IDs.\n- The `craft\\helpers\\Assets::EVENT_SET_FILENAME` event is now fired after sanitizing the filename.\n\n### Removed\n- Removed `craft\\elements\\User::authData()`.\n- Removed `craft\\fields\\Matrix::getOldContentTable()`.\n- Removed `craft\\services\\Routes::deleteRouteById()`\n\n### Deprecated\n- Deprecated `craft\\base\\ApplicationTrait::getIsSystemOn()`. `getIsLive()` should be used instead.\n- Deprecated `craft\\helpers\\MigrationHelper::dropAllIndexesOnTable()`.\n- Deprecated `craft\\helpers\\MigrationHelper::dropAllUniqueIndexesOnTable()`.\n- Deprecated `craft\\helpers\\MigrationHelper::dropIndex()`.\n- Deprecated `craft\\helpers\\MigrationHelper::restoreForeignKey()`.\n- Deprecated `craft\\helpers\\MigrationHelper::restoreIndex()`.\n- Deprecated `craft\\models\\Info::getEdition()`. `Craft::$app->getEdition()` should be used instead.\n- Deprecated `craft\\models\\Info::getName()`. `Craft::$app->projectConfig->get('system.name')` should be used instead.\n- Deprecated `craft\\models\\Info::getOn()`. `Craft::$app->getIsLive()` should be used instead.\n- Deprecated `craft\\models\\Info::getTimezone()`. `Craft::$app->getTimeZone()` should be used instead.\n- Deprecated `craft\\services\\Routes::getDbRoutes()`. `craft\\services\\Routes::getProjectConfigRoutes()` should be used instead.\n- Deprecated `craft\\services\\SystemSettings`. `craft\\services\\ProjectConfig` should be used instead.\n- Deprecated `craft\\validators\\UrlValidator::$allowAlias`. `craft\\behaviors\\EnvAttributeParserBehavior` should be used instead.\n\n### Fixed\n- Fixed a bug where the Dashboard could rapidly switch between two column sizes at certain browser sizes. ([#2438](https://github.com/craftcms/cms/issues/2438))\n- Fixed a bug where ordered and unordered lists in field instructions didn\u2019t have numbers or bullets.\n- Fixed a bug where switching an entry\u2019s type could initially show the wrong field layout tab. ([#3600](https://github.com/craftcms/cms/issues/3600))\n- Fixed an error that occurred when updating to Craft 3 if there were any Rich Text fields without any stored settings.\n- Fixed a bug where Craft wasn\u2019t saving Dashboard widget sizes properly on PostgreSQL. ([#3609](https://github.com/craftcms/cms/issues/3609))\n- Fixed a PHP error that could occur if the primary site didn\u2019t have a base URL. ([#3624](https://github.com/craftcms/cms/issues/3624))\n- Fixed a bug where `craft\\helpers\\MigrationHelper::dropIndexIfExists()` wasn\u2019t working if the index had an unexpected name.\n- Fixed an error that could occur if a plugin attempted to register the same Twig extension twice in the same request.\n\n### Security\n- The web and CLI installers no longer suggest `@web` for the site URL, and now attempt to save the entered site URL as a `DEFAULT_SITE_URL` environment variable in `.env`. ([#3559](https://github.com/craftcms/cms/issues/3559))\n- Craft now destroys all other sessions associated with a user account when a user changes their password.\n- It\u2019s no longer possible to spoof Live Preview requests.\n\n## 3.0.41.1 - 2019-03-12\n\n### Changed\n- Craft now requires Twig 2.6.\n\n## 3.0.41 - 2019-02-22\n\n### Changed\n- System error message templates no longer parse exception messages as Markdown.\n\n### Security\n- Database backup/restore exception messages now redact the database password when using PostgreSQL.\n- URLs are no longer allowed in users\u2019 first or last names.\n- The Request panel in the Debug Toolbar now redacts any sensitive information. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Fixed XSS vulnerabilities.\n\n## 3.0.40.1 - 2019-02-21\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t always aware of plugin licensing issues. ([#3876](https://github.com/craftcms/cms/issues/3876))\n\n## 3.0.40 - 2019-01-31\n\n### Added\n- Added `craft\\helpers\\App::testIniSet()`.\n\n### Changed\n- Craft now warns if `ini_set()` is disabled and [memory_limit](https://php.net/manual/en/ini.core.php#ini.memory-limit) is less than `256M` or [max_execution_time](https://php.net/manual/en/info.configuration.php#ini.max-execution-time) is less than `120` before performing Composer operations.\n- `craft\\helpers\\App::maxPowerCaptain()` now attempts to set the `memory_limit` to `1536M` rather than `-1`.\n\n## 3.0.39 - 2019-01-29\n\n### Changed\n- It\u2019s now possible to update disabled plugins.\n\n### Fixed\n- Fixed an error that could occur if PHP\u2019s `memory_limit` was set to a higher size (in bytes) than `PHP_INT_MAX`. ([#3717](https://github.com/craftcms/cms/issues/3717))\n\n## 3.0.38 - 2019-01-24\n\n### Added\n- Added the `update` command, which can be used to [update Craft from the terminal](https://docs.craftcms.com/v3/updating.html#updating-from-the-terminal).\n- Craft now warns if PHP is running in Safe Mode with a [max_execution_time](https://php.net/manual/en/info.configuration.php#ini.max-execution-time) of less than 120 seconds, before performing Composer operations.\n- Craft now stores backups of `composer.json` and `composer.lock` files in `storage/composer-backups/` before running Composer operations.\n- Added `craft\\db\\Connection::getBackupFilePath()`.\n- Added `craft\\helpers\\App::phpConfigValueInBytes()`.\n- Added `craft\\helpers\\Console::isColorEnabled()`.\n- Added `craft\\helpers\\Console::outputCommand()`.\n- Added `craft\\helpers\\Console::outputWarning()`.\n- Added `craft\\helpers\\FileHelper::cycle()`.\n- Added `craft\\services\\Composer::$maxBackups`.\n- Added `craft\\services\\Path::getComposerBackupsPath()`.\n\n### Changed\n- The `migrate/all` console command now supports a `--no-content` argument that can be passed to ignore pending content migrations.\n- Craft now attempts to disable PHP\u2019s memory and time limits before running Composer operations.\n- Craft no longer respects the `phpMaxMemoryLimit` config setting if PHP\u2019s `memory_limit` setting is already set to `-1` (no limit).\n- Craft now respects Composer\u2019s [classmap-authoritative](https://getcomposer.org/doc/06-config.md#classmap-authoritative) config setting.\n- Craft now links to the [Troubleshooting Failed Updates](https://craftcms.com/knowledge-base/failed-updates) guide when an update fails.\n- `craft\\services\\Composer::install()` can now behave like the `composer install` command, if `$requirements` is `null`.\n- `craft\\services\\Composer::install()` now has a `$whitelist` argument, which can be set to an array of packages to whitelist, or `false` to disable the whitelist.\n\n## 3.0.37 - 2019-01-08\n\n### Added\n- Routes defined in the Control Panel can now have a `uid` token, and URL rules defined in `config/routes.php` can now have a `{uid}` token. ([#3583](https://github.com/craftcms/cms/pull/3583))\n- Added the `extraFileKinds` config setting. ([#1584](https://github.com/craftcms/cms/issues/1584))\n- Added the `clear-caches` console command. ([#3588](https://github.com/craftcms/cms/pull/3588))\n- Added `craft\\feeds\\Feeds::getFeed()`.\n- Added `craft\\helpers\\StringHelper::UUID_PATTERN`.\n\n### Changed\n- Pressing the <kbd>Return</kbd> key (or <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Return</kbd>) when a textual cell is focused in an editable table will now change the focus to the same cell in the next row (after creating a new row if necessary.) ([#3576](https://github.com/craftcms/cms/issues/3576))\n- The Password input in the web-based Craft setup wizard now has a \u201cShow\u201d button like other password inputs.\n- The Feed widget now sets the items\u2019 text direction based on the feed\u2019s language.\n- Matrix blocks that contain validation errors now have red titles and alert icons, to help them stand out when collapsed. ([#3599](https://github.com/craftcms/cms/issues/3599))\n\n### Fixed\n- Fixed a bug where the \u201cEdit\u201d button on asset editor HUDs didn\u2019t launch the Image Editor if the asset was being edited on another element type\u2019s index page. ([#3575](https://github.com/craftcms/cms/issues/3575))\n- Fixed an exception that would be thrown when saving a user from a front-end form with a non-empty `email` or `newPassword` param, if the `password` param was missing or empty. ([#3585](https://github.com/craftcms/cms/issues/3585))\n- Fixed a bug where global set, Matrix block, tag, and user queries weren\u2019t respecting `fixedOrder` params.\n- Fixed a bug where `craft\\helpers\\MigrationHelper::renameColumn()` was only restoring the last foreign key for each table that had multiple foreign keys referencing the table with the renamed column.\n- Fixed a bug where Date/Time fields could output the wrong date in Live Preview requests. ([#3594](https://github.com/craftcms/cms/issues/3594))\n- Fixed a few RTL language styling issues.\n- Fixed a bug where drap-and-drop uploading would not work for custom asset selector inputs. ([#3590](https://github.com/craftcms/cms/pull/3590))\n- Fixed a bug where Number fields weren\u2019t enforcing thein Min Value and Max Value settings if set to 0. ([#3598](https://github.com/craftcms/cms/issues/3598))\n- Fixed a SQL error that occurred when uploading assets with filenames that contained emoji characters, if using MySQL. ([#3601](https://github.com/craftcms/cms/issues/3601))\n\n### Security\n- Fixed a directory traversal vulnerability.\n- Fixed a remote code execution vulnerability.\n\n## 3.0.36 - 2018-12-18\n\n### Added\n- Added the `{{ actionInput() }}` global Twig function. ([#3566](https://github.com/craftcms/cms/issues/3566))\n\n### Changed\n- Suspended users are no longer shown when viewing pending or locked users. ([#3556](https://github.com/craftcms/cms/issues/3556))\n- The Control Panel\u2019s Composer installer now prevents scripts defined in `composer.json` from running. ([#3574](https://github.com/craftcms/cms/issues/3574))\n\n### Fixed\n- Fixed a bug where elements that belonged to more than one structure would be returned twice in element queries.\n\n### Security\n- Fixed a self-XSS vulnerability in the Recent Entries widget.\n- Fixed a self-XSS vulnerability in the Feed widget.\n\n## 3.0.35 - 2018-12-11\n\n### Added\n- Added `craft\\models\\Section::getHasMultiSiteEntries()`.\n\n### Changed\n- Field types that extend `craft\\fields\\BaseRelationField` now pass their `$sortable` property value to the `BaseElementSelectInput` JavaScript class by default. ([#3542](https://github.com/craftcms/cms/pull/3542))\n\n### Fixed\n- Fixed a bug where the \u201cDisabled for Site\u201d entry status option was visible for sections where site propagation was disabled. ([#3519](https://github.com/craftcms/cms/issues/3519))\n- Fixed a bug where saving an entry that was disabled for a site would retain its site status even if site propagation had been disabled for the section.\n- Fixed a SQL error that occurred when saving a field layout with 4-byte characters (like emojis) in a tab name. ([#3532](https://github.com/craftcms/cms/issues/3532))\n- Fixed a bug where autogenerated Post Date values could be a few hours off when saving new entries with validation errors. ([#3528](https://github.com/craftcms/cms/issues/3528))\n- Fixed a bug where plugins\u2019 minimum version requirements could be enforced even if a development version of a plugin had been installed previously.\n\n## 3.0.34 - 2018-12-04\n\n### Fixed\n- Fixed a bug where new Matrix blocks wouldn\u2019t remember that they were supposed to be collapsed if \u201cSave and continue editing\u201d was clicked. ([#3499](https://github.com/craftcms/cms/issues/3499))\n- Fixed an error that occurred on the System Report utility if any non-bootstrapped modules were configured with an array or callable rather than a string. ([#3507](https://github.com/craftcms/cms/issues/3507))\n- Fixed an error that occurred on pages with date or time inputs, if the user\u2019s preferred language was set to Arabic. ([#3509](https://github.com/craftcms/cms/issues/3509))\n- Fixed a bug where new entries within sections where site propagation was disabled would show both \u201cEnabled Globally\u201d and \u201cEnabled for [Site Name]\u201d settings. ([#3519](https://github.com/craftcms/cms/issues/3519))\n- Fixed a bug where Craft wasn\u2019t reducing the size of elements\u2019 slugs if the resulting URI was over 255 characters. ([#3514](https://github.com/craftcms/cms/issues/3514))\n\n## 3.0.33 - 2018-11-27\n\n### Changed\n- Table fields with a fixed number of rows no longer show Delete buttons or the \u201cAdd a row\u201d button. ([#3488](https://github.com/craftcms/cms/issues/3488))\n- Table fields that are fixed to a single row no longer show the Reorder button. ([#3488](https://github.com/craftcms/cms/issues/3488))\n- Setting `components.security.sensitiveKeywords` in `config/app.php` will now append keywords to the default array `craft\\services\\Security::$sensitiveKeywords` array, rather than completely overriding it.\n- When performing an action that requires an elevated session while impersonating another user, admin must now enter their own password instead of the impersonated user\u2019s. ([#3487](https://github.com/craftcms/cms/issues/3487))\n- The System Report utility now lists any custom modules that are installed. ([#3490](https://github.com/craftcms/cms/issues/3490))\n- Control Panel charts now give preference to `ar-SA` for Arabic locales, `de-DE` for German locales, `en-US` for English locales, `es-ES` for Spanish locales, or `fr-FR` for French locales, if data for the exact application locale doesn\u2019t exist. ([#3492](https://github.com/craftcms/cms/pull/3492))\n- \u201cCreate a new child entry\u201d and \u201cCreate a new child category\u201d element actions now open an edit page for the same site that was selected on the index page. ([#3496](https://github.com/craftcms/cms/issues/3496))\n- The default `allowedFileExtensions` config setting value now includes `webp`.\n- The Craft Support widget now sends `composer.json` and `composer.lock` files when contacting Craft Support.\n- It\u2019s now possible to create element select inputs that include a site selection menu by passing `showSiteMenu: true` when including the `_includes/forms/elementSelect.html` Control Panel include template. ([#3494](https://github.com/craftcms/cms/pull/3494))\n\n### Fixed\n- Fixed a bug where a Matrix fields\u2019 block types and content table could be deleted even if something set `$isValid` to `false` on the `beforeDelete` event.\n- Fixed a bug where a global sets\u2019 field layout could be deleted even if something set `$isValid` to `false` on the `beforeDelete` event.\n- Fixed a bug where after impersonating another user, the Login page would show the impersonated user\u2019s username rather than the admin\u2019s.\n- Fixed a bug where `craft\\services\\Sections::getAllSections()` could return stale results if a new section had been added recently. ([#3484](https://github.com/craftcms/cms/issues/3484))\n- Fixed a bug where \u201cView entry\u201d and \u201cView category\u201d element actions weren\u2019t available when viewing a specific section or category group.\n- Fixed a bug where Craft would attempt to index image transforms.\n- Fixed a bug where the Asset Indexes utility could report that asset files were missing even though they weren\u2019t. ([#3450](https://github.com/craftcms/cms/issues/3450))\n\n### Security\n- Updated jQuery File Upload to 9.28.0.\n\n## 3.0.32 - 2018-11-20\n\n### Added\n- The `seq()` Twig function now has a `next` argument, which can be set to `false` to have it return the current number in the sequence without incrementing it. ([#3466](https://github.com/craftcms/cms/issues/3466))\n- Added `craft\\db\\MigrationManager::truncateHistory()`.\n- Added `craft\\helpers\\Sequence::current()`.\n\n### Changed\n- Edit Entry pages now show the entry\u2019s site in the revision menu label so long as the section is enabled for multiple sites, even if \u201cPropagate entries across all enabled sites?\u201d isn\u2019t checked. ([#3471](https://github.com/craftcms/cms/issues/3471))\n- Exact-match search terms (using `::`) now disable `subLeft` and `subRight` attributes by default, regardless of the `defaultSearchTermOptions` config setting says. ([#3474](https://github.com/craftcms/cms/issues/3474))\n\n### Deprecated\n- Deprecated `craft\\validators\\StringValidator::$trim`. Yii\u2019s `'trim'` validator should be used instead.\n\n### Fixed\n- Fixed an error that occurred when querying for Matrix blocks if both the `with` and `indexBy` parameters were set.\n- Fixed an error that occurred when running the `migrate/fresh` console command. ([#3472](https://github.com/craftcms/cms/issues/3472))\n\n## 3.0.31 - 2018-11-13\n\n### Added\n- Added the `seq()` Twig function, for outputting sequential numbers.\n- Added `craft\\helpers\\Sequence`.\n\n### Changed\n- Control Panel templates can now customize `#main-form` HTML attributes by overriding the `mainFormAttributes` block. ([#1665](https://github.com/craftcms/cms/issues/1665))\n- The default PostgreSQL backup command no longer includes database owner, privilege or ACL information in the backup.\n- Craft now attempts to reset OPcache after installing/uninstalling things with Composer. ([#3460](https://github.com/craftcms/cms/issues/3460))\n- Gmail and SMTP mail transport types now trim whitespace off of their Username, Password, and Host Name settings. ([#3459](https://github.com/craftcms/cms/issues/3459))\n\n### Fixed\n- Fixed an error that could occur when duplicating an element with a Matrix field with \u201cManage blocks on a per-site basis\u201d disabled.\n- Fixed a bug where Matrix blocks wouldn\u2019t retain their content translations when an entry was duplicated from the Edit Entry page.\n- Fixed a bug where system message modals could have the wrong language selected by default. ([#3440](https://github.com/craftcms/cms/issues/3440))\n- Fixed a bug where an Internal Server Error would occur if a `users/login` request was missing the `loginName` or `password` parameters. ([#3458](https://github.com/craftcms/cms/issues/3458))\n- Fixed a bug where `craft\\validators\\StringValidator` was trimming whitespace off of strings _after_ performing string length validation.\n- Fixed an infinite recursion bug that could occur if `config/general.php` had any deprecated config settings, and the database connection settings were invalid.\n- Fixed an error that occurred when saving a new entry or category, if its URI format referenced the `level` attribute. ([#3465](https://github.com/craftcms/cms/issues/3465))\n\n## 3.0.30.2 - 2018-11-08\n\n### Fixed\n- Fixed an error that could occur on servers running PHP 7.0.32. ([#3453](https://github.com/craftcms/cms/issues/3453))\n\n## 3.0.30.1 - 2018-11-07\n\n### Fixed\n- Fixed an error that occurred when saving an element with a new Matrix block, if the Matrix field was set to manage blocks on a per-site basis. ([#3445](https://github.com/craftcms/cms/issues/3445))\n\n## 3.0.30 - 2018-11-06\n\n### Added\n- Added \u201cDuplicate\u201d and \u201cDuplicate (with children)\u201d actions to the Entries and Categories index pages. ([#1291](https://github.com/craftcms/cms/issues/1291))\n- Added `craft\\base\\ElementAction::$elementType`, which element action classes can use to reference their associated element type.\n- Added `craft\\elements\\actions\\DeepDuplicate`.\n- Added `craft\\elements\\actions\\Duplicate`.\n- Added `craft\\elements\\actions\\SetStatus::$allowDisabledForSite`, which can be used by localizable element types to enable a \u201cDisabled for Site\u201d status option.\n\n### Changed\n- Entries\u2019 \u201cEnabled\u201d setting is now labeled \u201cEnabled Globally\u201d on multi-site installs. ([#2899](https://github.com/craftcms/cms/issues/2899))\n- Entries\u2019 \u201cEnabled for site\u201d setting now includes the site name in its label, and only shows up if the \u201cEnabled Globally\u201d setting is checked. ([#2899](https://github.com/craftcms/cms/issues/2899))\n- The Set Status action on the Entries index page now includes a \u201cDisabled for Site\u201d option. ([#2899](https://github.com/craftcms/cms/issues/2899))\n- Edit Category pages now have `edit-category` and `site--<SiteHandle>` classes on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n- Edit Entry pages now have `edit-entry` and `site--<SiteHandle>` classes on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n- Edit Global Set pages now have `edit-global-set` and `site--<SiteHandle>` classes on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n- Edit User pages now have an `edit-user` class on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n\n### Fixed\n- Fixed a bug where the Edit User page could forget which permissions were selected when saving a user with validation errors, if the Username, First Name, and Last name fields were all blank. ([#3412](https://github.com/craftcms/cms/issues/3412))\n- Fixed a bug where the Edit User Group page could forget which permissions were selected when saving a user group with validation errors, if the Name field was blank.\n- Fixed a bug where the `{% paginate %}` tag wasn\u2019t factoring the `offset` element query param into its total page calculation. ([#3420](https://github.com/craftcms/cms/issues/3420))\n\n### Security\n- Fixed a bug where sensitive info could be displayed in the Craft log files if there was a problem connecting to the email server.\n\n## 3.0.29 - 2018-10-30\n\n### Added\n- Email and URL fields now have \u201cPlaceholder Text\u201d settings. ([#3397](https://github.com/craftcms/cms/issues/3397))\n\n### Changed\n- The default HTML Purifier configuration now allows `download` attributes in `<a>` tags. ([craftcms/redactor#86](https://github.com/craftcms/redactor/issues/86))\n\n### Fixed\n- Fixed a bug where the `ContentBehaviour` and `ElementQueryBehavior` classes could be missing some field properties. ([#3400](https://github.com/craftcms/cms/issues/3400))\n- Fixed a bug where some fields within Matrix fields could lose their values after enabling the \u201cManage blocks on a per-site basis\u201d setting. ([verbb/super-table#203](https://github.com/verbb/super-table/issues/203))\n- Fixed a bug where HTML Purifier wasn\u2019t being initialized with HTML 5 element support.\n- Fixed a bug where it was possible to save Assets fields with the \u201cRestrict allowed file types?\u201d setting enabled, but no specific file types selected. ([#3410](https://github.com/craftcms/cms/issues/3410))\n\n## 3.0.28 - 2018-10-23\n\n### Added\n- Structure sections now have the ability to disable entry propagation, like Channel sections. ([#2386](https://github.com/craftcms/cms/issues/2386))\n\n### Changed\n- `craft\\base\\Field::supportedTranslationMethods()` now defaults to only returning `none` if the field type doesn\u2019t have a content column. ([#3385](https://github.com/craftcms/cms/issues/3385))\n- Craft.EntryTypeSwitcher now fires a `beforeTypeChange` event before swapping the Edit Entry form tabs. ([#3375](https://github.com/craftcms/cms/pull/3375))\n- Craft.MatrixInput now fires an `afterInit` event after initialization. ([#3375](https://github.com/craftcms/cms/pull/3375))\n- Craft.MatrixInput now fires an `blockAdded` event after adding a new block. ([#3375](https://github.com/craftcms/cms/pull/3375))\n- System messages sent from front-end requests are now sent using the current site\u2019s language. ([#3388](https://github.com/craftcms/cms/issues/3388))\n\n### Fixed\n- Fixed an error that could occur when acquiring a lock for a file path, if the `mutex` component was swapped out with `yii\\mutex\\MysqlMutex`.\n\n## 3.0.27.1 - 2018-10-12\n\n### Fixed\n- Fixed an error that occurred when deleting an entry from the Edit Entry page. ([#3372](https://github.com/craftcms/cms/issues/3372))\n- Fixed an error that could occur when changing a Channel section to Structure. ([#3373](https://github.com/craftcms/cms/issues/3373))\n- Fixed an error that occurred when saving Matrix content from console requests.\n\n## 3.0.27 - 2018-10-11\n\n### Added\n- Added `craft\\helpers\\MigrationHelper::findForeignKey()`.\n- Added the `cp.globals.edit` and `cp.globals.edit.content` template hooks to the Edit Global Set page. ([#3356](https://github.com/craftcms/cms/pull/3356))\n\n### Changed\n- It\u2019s now possible to load a Create Entry page with a specific user preselected in the Author field, using a new `authorId` query string param. ([#3326](https://github.com/craftcms/cms/pull/3326))\n- Matrix fields that are set to manage blocks on a per-site basis will now duplicate Matrix blocks across all of the owner element\u2019s supported sites when the element is first created. ([#3082](https://github.com/craftcms/cms/issues/3082))\n- Disabled Matrix blocks are no longer visible when sharing an entry draft or version. ([#3338](https://github.com/craftcms/cms/issues/3338))\n- Control Panel tabs that have errors now have alert icons.\n- The Debug Toolbar is no longer shown in Live Preview iframes.\n- The Plugin Store now requires browsers with ES6 support.\n- Updated jQuery Touch Events to 2.0.0.\n- Updated Garnish to 0.1.29.\n\n### Fixed\n- Fixed a bug where enabling the \u201cPropagate entries across all enabled sites?\u201d setting for an existing Channel section (or converting the section to a Structure) wouldn\u2019t update entries that had been created for the non-primary site.\n- Fixed a bug where Craft wasn\u2019t detecting and retrying queue jobs that had timed out.\n- Fixed a bug where `Craft::$app->locale` could return the wrong locale during Live Preview requests. ([#3336](https://github.com/craftcms/cms/issues/3336))\n- Fixed a SQL error that could occur when upgrading to Craft 3, if a foreign key had an unexpected name.\n- Fixed a bug where page titles in the Control Panel could be blank when showing validation errors for things that were missing their name or title. ([#3344](https://github.com/craftcms/cms/issues/3344))\n- Fixed an error that could occur if a component\u2019s settings were stored as `null`. ([#3342](https://github.com/craftcms/cms/pull/3342))\n- Fixed a bug where details panes weren\u2019t visible on browser windows sized between 999 and 1,223 pixels wide.\n- Fixed an error that occurred if a Quick Post widget contained a Matrix field that had Min Blocks set and only had one block type.\n- Fixed a bug where disabled Matrix blocks were getting validated as live. ([#3354](https://github.com/craftcms/cms/issues/3354))\n- Fixed a bug where the `EVENT_AFTER_ACTIVATE_USER` event wasn\u2019t getting triggered on user registration when email verification isn\u2019t required. ([craftcms/commerce-digital-products#18](https://github.com/craftcms/commerce-digital-products/issues/18))\n- Added garbage collection for offline storage of remote assets. ([#3335](https://github.com/craftcms/cms/pull/3335))\n- Fixed a bug where Twig could end up in a strange state if an error occurred when preparing to render an object template. ([#3364](https://github.com/craftcms/cms/issues/3364))\n\n### Security\n- The `svg()` Twig function no longer sanitizes SVGs or namespaces their IDs or class names by default when a file path (or alias) was passed in. ([#3337](https://github.com/craftcms/cms/issues/3337))\n\n## 3.0.26.1 - 2018-09-29\n\n### Changed\n- Changed the `yiisoft/yii2-queue` version requirement to `2.1.0`. ([#3332](https://github.com/craftcms/cms/issues/3332))\n\n## 3.0.26 - 2018-09-29\n\n### Changed\n- `ancestors`, `descendants`, `nextSibling`, `parent`, and `prevSibling` are now reserved field handles.\n- The `svg()` Twig function namespaces class names in addition to IDs now.\n- Changed the `yiisoft/yii2-queue` version requirement to `2.0.1`. ([#3332](https://github.com/craftcms/cms/issues/3332))\n\n### Fixed\n- Fixed a validation error that could occur when saving an entry as a new entry if the URI format didn\u2019t contain a `{slug}` tag. ([#3320](https://github.com/craftcms/cms/issues/3320))\n- Fixed a SQL error that could occur if a deprecation error occurred when attempting to upgrade a Craft 2 project. ([#3324](https://github.com/craftcms/cms/issues/3324))\n\n## 3.0.25 - 2018-09-18\n\n### Added\n- Added `craft\\log\\FileTarget::$includeUserIp` which determines whether users\u2019 IP addresses should be included in the logs (`false` by default). ([#3310](https://github.com/craftcms/cms/pull/3310))\n\n### Fixed\n- Fixed an error that could occur when installing or updating something within the Control Panel if `composer.json` required the `roave/security-advisories` package.\n- Fixed a SQL error that could occur when searching elements on PostgreSQL installs.\n- Fixed a bug where Craft would ignore the last segment of template paths that ended in `/0`. ([#3304](https://github.com/craftcms/cms/issues/3304))\n- Fixed a Twig Template Loading Error that would occur when testing email settings, if a custom email template was used and an error occurred when rendering it. ([#3309](https://github.com/craftcms/cms/issues/3309))\n\n## 3.0.24 - 2018-09-11\n\n### Added\n- Added the `extraAppLocales` config setting.\n\n### Changed\n- The `defaultCpLanguage` config setting no longer needs to be a language that Craft is translated into, as long as it is a valid locale ID.\n- Resave Elements jobs that are queued up after saving an entry type now include the section name in the job description. ([#3290](https://github.com/craftcms/cms/issues/3290))\n- Updated Garnish to 0.1.28.\n\n### Fixed\n- Fixed a SQL error that could occur when an element query\u2019s `orderBy` parameter was set to `dateCreated` or `dateUpdated`.\n- Fixed an error that could occur when updating to v3.0.23+ if multiple Matrix fields existed with the same handle, but they had no content tables, somehow.\n- Fixed a bug where links in activation and forgot-password emails weren\u2019t hyperlinked, leaving it up to the mail client to hopefully be smart about it. ([#3288](https://github.com/craftcms/cms/issues/3288))\n\n## 3.0.23.1 - 2018-09-04\n\n### Fixed\n- Fixed a bug where Matrix fields would get new content tables each time they were saved.\n\n## 3.0.23 - 2018-09-04\n\n### Changed\n- Browser-based form validation is now disabled for page forms. ([#3247](https://github.com/craftcms/cms/issues/3247))\n- `craft\\base\\Model::hasErrors()` now supports passing an attribute name with a `.*` suffix, which will return whether any errors exist for the given attribute or any nested model attributes.\n- Added `json` to the default `allowedFileExtensions` config setting value. ([#3254](https://github.com/craftcms/cms/issues/3254))\n- Exception call stacks now collapse internal Twig methods by default.\n- Twig exception call stacks now show all of the steps leading up to the error.\n- Live Preview now reloads the preview pane automatically after an asset is saved from the Image Editor. ([#3265](https://github.com/craftcms/cms/issues/3265))\n\n### Deprecated\n- Deprecated `craft\\services\\Matrix::getContentTableName()`. `craft\\fields\\Matrix::$contentTable` should be used instead.\n\n### Removed\n- Removed `craft\\services\\Matrix::getParentMatrixField()`.\n\n### Fixed\n- Fixed a bug where element selection modals could be initialized without a default source selected, if some of the sources were hidden for not being available on the currently-selected site. ([#3227](https://github.com/craftcms/cms/issues/3227))\n- Fixed a bug where edit pages for categories, entries, global sets, and users weren\u2019t revealing which tab(s) had errors on it, if the errors occurred within a Matrix field. ([#3248](https://github.com/craftcms/cms/issues/3248))\n- Fixed a SQL error that occurred when saving a Matrix field with new sub-fields on PostgreSQL. ([#3252](https://github.com/craftcms/cms/issues/3252))\n- Fixed a bug where custom user fields weren\u2019t showing up on the My Account page when running Craft Solo edition. ([#3228](https://github.com/craftcms/cms/issues/3228))\n- Fixed a bug where multiple Matrix fields could share the same content table. ([#3249]())\n- Fixed a \u201ccache is corrupted\u201d Twig error that could occur when editing or saving an element if it had an Assets field with an unresolvable subfolder path template. ([#3257](https://github.com/craftcms/cms/issues/3257))\n- Fixed a bug where the Dev Mode indicator strip wasn\u2019t visible on Chrome/Windows when using a scaled display. ([#3259](https://github.com/craftcms/cms/issues/3259))\n- Fixed a SQL error that could occur when validating an attribute using `craft\\validators\\UniqueValidator`, if the target record\u2019s `find()` method joined in another table.\n\n## 3.0.22 - 2018-08-28\n\n### Changed\n- The \u201cDeleting stale template caches\u201d job now ensures all expired template caches have been deleted before it begins processing the caches.\n- Text inputs\u2019 `autocomplete` attributes now get set to `off` by default, and they will only not be added if explicitly set to `null`.\n- Improved the error response when Composer is unable to perform an update due to a dependency conflict.\n- Email fields in the Control Panel now have `type=\"email\"`.\n- `craft\\helpers\\Db::parseParam()` now has a `$caseInnensitive` argument, which can be set to `true` to force case-insensitive conditions on PostgreSQL installs.\n- `craft\\validators\\UniqueValidator` now has a `$caseInsensitive` property, which can be set to `true` to cause the unique validation to be case-insensitive on PostgreSQL installs.\n- The CLI setup wizard now detects common database connection errors that occur with MAMP, and automatically retests with adjusted settings.\n- The CLI setup wizard now detects common database authentication errors, and lets the user retry the username and password settings, skipping the others.\n- Updated Garnish to 0.1.27.\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t reverting `composer.json` to its original state if something went wrong when running a Composer update.\n- Fixed a bug where string casing functions in `craft\\helpers\\StringHelper` were adding extra hyphens to strings that came in as `Upper-Kebab-Case`.\n- Fixed a bug where unique validation for element URIs, usernames, and user email address was not case-insensitive on PostgreSQL installs.\n- Fixed a bug where element queries\u2019 `uri` params, and user queries\u2019 `firstName`, `lastName`, `username`, and `email` params, were not case-insensitive on PostgreSQL installs.\n- Fixed a bug where the CLI setup wizard was allowing empty database names.\n- Fixed a bug where it wasn\u2019t possible to clear template caches if template caching was disabled by the `enableTemplateCaching` config setting. ([#3229](https://github.com/craftcms/cms/issues/3229))\n- Fixed a bug where element index toolbars weren\u2019t staying fixed to the top of the content area when scrolling down the page. ([#3233](https://github.com/craftcms/cms/issues/3233))\n- Fixed an error that could occur when updating Craft if the system was reliant on the SSL certificate provided by the`composer/ca-bundle` package.\n\n## 3.0.21 - 2018-08-21\n\n### Added\n- Most element query parameters can now be set to `['not', 'X', 'Y']`, as a shortcut for `['and', 'not X', 'not Y']`.\n\n### Changed\n- The \u201cNew Password\u201d input on the My Account page now has a \u201cShow\u201d button, like other password inputs in the Control Panel.\n- Plugin settings pages now redirect to the Settings index page after save. ([#3216](https://github.com/craftcms/cms/issues/3216))\n- It\u2019s now possible to set [autofill detail tokens](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill-detail-tokens) on the `autocomplete` variable when including the `_includes/forms/text.html` template (e.g. `'name'`).\n- Username and password inputs now have the correct `autocomplete` values, increasing the likelihood that tools like 1Password will handle the form correctly. ([#3207](https://github.com/craftcms/cms/issues/3207))\n\n### Fixed\n- Fixed a SQL error that occurred when saving a user if a `craft\\elements\\User::EVENT_BEFORE_SAVE` event listener was setting `$event->isValid = false`. ([#3206](https://github.com/craftcms/cms/issues/3206))\n- Fixed a bug where password inputs\u2019 jQuery data was getting erased when the \u201cShow\u201d button was clicked.\n- Fixed an error that could occur when upgrading to Craft 3. ([#3208](https://github.com/craftcms/cms/pull/3208))\n- Fixed a bug where non-image assets\u2019 file extension icons could bleed out of the preview area within asset editor HUDs. ([#3209](https://github.com/craftcms/cms/issues/3209))\n- Fixed a bug where Craft wasn\u2019t saving a new entry version when reverting an entry to a previous version. ([#3210](https://github.com/craftcms/cms/issues/3210))\n- Fixed an error that could occur when a Matrix block was saved by a queue job. ([#3217](https://github.com/craftcms/cms/pull/3217))\n\n### Security\n- External links in the Control Panel now set `rel=\"noopener\"`. ([#3201](https://github.com/craftcms/cms/issues/3201))\n\n## 3.0.20 - 2018-08-14\n\n### Added\n- Added `craft\\services\\Fields::refreshFields()`.\n\n### Fixed\n- Fixed a bug where `DateTime` model attributes were getting converted to ISO-8601 date strings for `craft\\web\\View::renderObjectTemplate()`. ([#3185](https://github.com/craftcms/cms/issues/3185))\n- Fixed a bug where timepicker menus had a higher z-index than session expiration modal shades. ([#3186](https://github.com/craftcms/cms/issues/3186))\n- Fixed a bug where users could not log in after upgrading to Craft 3, if there was a custom field named `owner`.\n- Fixed a bug where it was not possible to set non-integer values on asset queries\u2019 `width`, `height`, or `size` params. ([#3195](https://github.com/craftcms/cms/issues/3195))\n- Fixed a bug where all Asset folders were being initiated at once, resulting in performance issues.\n\n## 3.0.19 - 2018-08-07\n\n### Added\n- Added the `craft.query()` template function, for creating new database queries.\n- Added `craft\\services\\Structures::$mutexTimeout`. ([#3148](https://github.com/craftcms/cms/issues/3148))\n- Added `craft\\services\\Api::getComposerWhitelist()`.\n\n### Removed\n- Removed `craft\\services\\Api::getOptimizedComposerRequirements()`.\n\n### Fixed\n- Craft\u2019s console commands now return the correct exit codes. ([#3175](https://github.com/craftcms/cms/issues/3175))\n- Fixed the appearance of checkboxes in IE11 on element index pages. ([#3177](https://github.com/craftcms/cms/issues/3177))\n- Fixed a bug where `composer.json` could end up with a bunch of extra dependencies in the `require` object after a failed update or plugin installation.\n- Fixed an error that could occur when viewing an entry revision, if it had a Matrix field and one of the sub-fields within the Matrix field had been deleted. ([#3183](https://github.com/craftcms/cms/issues/3183))\n- Fixed a bug where thumbnails weren\u2019t loading in relational fields when viewing an entry version.\n\n## 3.0.18 - 2018-07-31\n\n### Added\n- Added `craft\\helpers\\App::assetManagerConfig()`.\n- Added `craft\\helpers\\App::cacheConfig()`.\n- Added `craft\\helpers\\App::dbConfig()`.\n- Added `craft\\helpers\\App::mailerConfig()`.\n- Added `craft\\helpers\\App::mutexConfig()`.\n- Added `craft\\helpers\\App::logConfig()`.\n- Added `craft\\helpers\\App::sessionConfig()`.\n- Added `craft\\helpers\\App::userConfig()`.\n- Added `craft\\helpers\\App::viewConfig()`.\n- Added `craft\\helpers\\App::webRequestConfig()`.\n- Added `craft\\validators\\StringValidator::$trim`, which will cause leading/trailing whitespace to be stripped from model attributes.\n\n### Changed\n- User verification and password-reset emails now link them back to the same site they were on when the email was sent, if it was sent from a front-end request. ([#3029](https://github.com/craftcms/cms/issues/3029))\n- Dynamic app component configs are now defined by methods on `craft\\helpers\\App`, making it easier to modify them from `config/app.php`. ([#3152](https://github.com/craftcms/cms/issues/3152))\n- Structure operations now ensure that no other operations are being performed on the same structure, reducing the risk of corrupting the structure. ([#3148](https://github.com/craftcms/cms/issues/3148))\n- The `{% js %}` tag now supports the following position params: `at POS_HEAD`, `at POS_BEGIN`, `at POS_END`, `on POS_READY`, and `on POS_LOAD` (e.g. `{% js at POS_END %}`).\n- Craft once again checks for `X-Forwarded-For` headers when determining the user\u2019s IP. ([#3036](https://github.com/craftcms/cms/issues/3036))\n- Leading/trailing whitespace characters are now stripped from element titles on save. ([#3020](https://github.com/craftcms/cms/issues/3020))\n- Updated svg-sanitizer to 0.9.\n\n### Deprecated\n- Deprecated `craft\\db\\Connection::createFromConfig()`. `craft\\helpers\\App::dbConfig()` should be used instead.\n- Deprecated `craft\\helpers\\MailerHelper::createMailer()`. `craft\\helpers\\App::mailerConfig()` should be used instead.\n\n### Fixed\n- Fixed a bug where collapsing structure elements would only hide up to 50 of their descendants.\n- Fixed a bug where Date/Time fields could lose their value if they were used in an entry type\u2019s Title Format, and the entry\u2019s site\u2019s language was different than the user\u2019s preferred language. ([#3151](https://github.com/craftcms/cms/issues/3151))\n- Fixed a bug where Dropdown fields could show an incorrect selected value in limited circumstances.\n- Fixed a bug where Dropdown fields on an element index view could show an incorrect selected value in limited circumstances.\n\n## 3.0.17.1 - 2018-07-24\n\n### Fixed\n- Really fixed a PHP error that could occur if the PHP\u2019s `set_time_limit()` was added to the php.ini `disable_functions` list.\n\n## 3.0.17 - 2018-07-24\n\n### Added\n- The Control Panel is now translated for Norwegian Nynorsk. ([#3135](https://github.com/craftcms/cms/pull/3135))\n- Added `craft\\elements\\db\\ElementQuery::anyStatus()`, which can be called when the default `status` and `enabledForSite` filters aren\u2019t desired. ([#3117](https://github.com/craftcms/cms/issues/3117))\n\n### Changed\n- The `addTrailingSlashesToUrls` config setting no longer applies to URLs that end with a segment that has a dot (`.`). ([#3123](https://github.com/craftcms/cms/issues/3123))\n- Craft now redirects install requests back to the Dashboard if it\u2019s already installed. ([#3143](https://github.com/craftcms/cms/issues/3143))\n\n### Fixed\n- Fixed a bug where the Settings \u2192 Email \u2192 System Messages page would show messages in the current application language rather than the primary site\u2019s language.\n- Fixed a bug where system message modals on the Settings \u2192 Email \u2192 System Messages page would initially show messages in the current application language rather than the primary site\u2019s language, even if the application language wasn\u2019t in use by any sites. ([#3115](https://github.com/craftcms/cms/issues/3115))\n- Fixed an error that could occur if `craft\\web\\View::registerAssetFlashes()` was called on a console request. ([#3124](https://github.com/craftcms/cms/issues/3124))\n- Fixed a PHP error that could occur if the PHP\u2019s `set_time_limit()` was added to the php.ini `disable_functions` list.\n- Fixed a bug where expanding a disabled element within a structure index view in the Control Panel wouldn\u2019t reveal any descendants. ([#3126](https://github.com/craftcms/cms/issues/3126))\n- Fixed a bug thumbnails weren\u2019t loading for element index rows that were revealed after expanding a parent element.\n- Fixed an error that occurred if an element\u2019s `getRoute()` method returned a string. ([#3128](https://github.com/craftcms/cms/issues/3128))\n- Fixed a bug where the `|without` filter wasn\u2019t working if an object was passed in. ([#3137](https://github.com/craftcms/cms/issues/3137))\n- Fixed a bug where users\u2019 Language preference would default to Deutsch if the current application language wasn\u2019t one of the available language options. ([#3142](https://github.com/craftcms/cms/issues/3142))\n\n## 3.0.16.1 - 2018-07-18\n\n### Fixed\n- Fixed a bug where the `orderBy` element query param wasn\u2019t being respected when used in conjunction with a `with` param to eager-load elements in a specific order. ([#3109](https://github.com/craftcms/cms/issues/3109))\n- Fixed a bug where underscores were getting removed from slugs. ([#3111](https://github.com/craftcms/cms/issues/3111))\n\n## 3.0.16 - 2018-07-17\n\n### Added\n- The progress bar on the Asset Indexes utility now shows how many files have been indexed, and how many there are in total. ([#2934](https://github.com/craftcms/cms/issues/2934))\n- Added `craft\\base\\PluginInterface::beforeSaveSettings()`.\n- Added `craft\\base\\PluginInterface::afterSaveSettings()`.\n- Added `craft\\base\\Plugin::EVENT_AFTER_SAVE_SETTINGS`.\n- Added `craft\\base\\Plugin::EVENT_BEFORE_SAVE_SETTINGS`.\n\n### Changed\n- Craft no longer relies on ImageMagick or GD to define the image formats that should be considered manipulatable. ([#2408](https://github.com/craftcms/cms/issues/2408))\n- Removed the `showBetaUpdates` config setting as it\u2019s no longer being used.\n- When uploading a file to an Assets field, Craft will automatically sort the file list to show the latest uploads first. ([#2812](https://github.com/craftcms/cms/issues/2812))\n- `dateCreated`, `dateUpdated`, `postDate`, `expiryDate`, `after`, and `before` element query params can new be set to `DateTime` objects.\n- Matrix fields now auto-focus the first text input within newly-created Matrix blocks. ([#3104](https://github.com/craftcms/cms/issues/3104))\n- Updated Twig to 2.5.0.\n- Updated Garnish to 0.1.26.\n- Updated Selectize to 0.12.6.\n\n### Fixed\n- Fixed an error that could occur when sending emails to international domains if the Intl extension wasn\u2019t enabled.\n- Fixed an exception that was thrown if the `securityKey` config setting was changed and Craft was set to use either the SMTP or Gmail mailer transport type. ([#3083](https://github.com/craftcms/cms/issues/3083))\n- Fixed a bug where Asset view was not being refreshed in some cases after using Image Editor. ([#3035](https://github.com/craftcms/cms/issues/3035))\n- Fixed a bug where Craft wouldn\u2019t warn before leaving an edit page with unsaved changes, if Live Preview was active. ([#3092](https://github.com/craftcms/cms/issues/3092))\n- Fixed a bug where entries, categories, and global sets\u2019 `getCpEditUrl()` methods could omit the site handle on multi-site installs. ([#3089](https://github.com/craftcms/cms/issues/3089))\n- Fixed a JavaScript error that occurred when closing Live Preview. ([#3098](https://github.com/craftcms/cms/issues/3098))\n- Fixed a bug where Dashboard widgets could be spaced incorrectly if there was only one grid column. ([#3100](https://github.com/craftcms/cms/issues/3100))\n- Fixed a bug where modal windows with Field Layout Designers could cause the browser to crash. ([#3096](https://github.com/craftcms/cms/pull/3096))\n- Fixed a bug where `craft\\services\\Fields::getAllGroups()` and `getGroupById()` could return incorrect results. ([#3102](https://github.com/craftcms/cms/issues/3102))\n\n## 3.0.15 - 2018-07-09\n\n### Changed\n- It\u2019s now possible to fetch only non-admin users by setting `craft\\elements\\db\\UserQuery::$admin` to `false`.\n- `Craft.EntryTypeSwitcher` now triggers a `typeChange` event after switching the entry type. ([#3067](https://github.com/craftcms/cms/pull/3067))\n- Reduced the left and right padding in the Control Panel for screens less than 768 pixels wide. ([#3073](https://github.com/craftcms/cms/issues/3073))\n- Removed the `useXSendFile` config setting as it\u2019s no longer being used.\n- `craft\\helpers\\StringHelper::toKebabCase()`, `toCamelCase()`, `toPascalCase()`, and `toSnakeCase()` now treat camelCase\u2019d and PascalCale\u2019d strings as multiple words. ([#3090](https://github.com/craftcms/cms/issues/3090))\n\n### Fixed\n- Fixed a bug where `craft\\i18n\\I18N::getPrimarySiteLocale()` and `getPrimarySiteLocaleId()` were returning locale info for the _first_ site, rather than the primary one. ([#3063](https://github.com/craftcms/cms/issues/3063))\n- Fixed a bug where element index pages were loading all elements in the view, rather than waiting for the user to scroll to the bottom of the page before loading the next batch. ([#3068](https://github.com/craftcms/cms/issues/3068))\n- Fixed a bug where sites listed in the Control Panel weren\u2019t always in the correct sort order. ([#3065](https://github.com/craftcms/cms/issues/3065))\n- Fixed an error that occurred when users attempted to create new entries within entry selector modals, for a section they didn\u2019t have permission to publish peer entries in. ([#3069](https://github.com/craftcms/cms/issues/3069))\n- Fixed a bug where the \u201cSave as a new asset\u201d button label wasn\u2019t getting translated in the Image Editor. ([#3070](https://github.com/craftcms/cms/pull/3070))\n- Fixed a bug where it wasn\u2019t possible to set the filename of assets when uploading them as data strings. ([#2973](https://github.com/craftcms/cms/issues/2973))\n- Fixed a bug where the Field Type menu\u2019s options within new Matrix block type settings weren\u2019t getting sorted alphabetically. ([#3072](https://github.com/craftcms/cms/issues/3072))\n- Fixed an exception that was thrown when testing email settings if the Template setting was invalid. ([#3074](https://github.com/craftcms/cms/issues/3074))\n- Fixed a bug where Dropdown fields\u2019 bottom margin could jump up a bit when an empty option was selected. ([#3075](https://github.com/craftcms/cms/issues/3075))\n- Fixed a bug where main content containers in the Control Panel could become too wide in Firefox. ([#3071](https://github.com/craftcms/cms/issues/3071))\n\n## 3.0.14 - 2018-07-03\n\n### Changed\n- `craft\\events\\SiteEvent` now has a `$oldPrimarySiteId` property, which will be set to the previous primary site ID (which may stil be the current site ID, if it didn\u2019t just change).\n- `craft\\helpers\\Search::normalizeKeywords()` now has a `$language` argument, which can be set if the character mappings should be pulled from a different language than the current app language.\n- `craft\\services\\Sites::getEditableSiteIds()` and `getEditableSites()` now return the same things as `getAllSiteIds()` and `getAllSites()` when there\u2019s only one site. ([#3049](https://github.com/craftcms/cms/issues/3049))\n\n### Fixed\n- Fixed a bug where user verification links could get mangled when emails were parsed as Markdown, if the verification code contained two or more underscores.\n- Fixed a bug where Craft was misinterpreting `X-Forwarded-For` headers as the user\u2019s IP instead of the server\u2019s IP. ([#3036](https://github.com/craftcms/cms/issues/3036))\n- Fixed a bug where Craft wasn\u2019t auto-scrolling the content container when dragging items near a window edge. ([#3048](https://github.com/craftcms/cms/issues/3048))\n- Fixed a PHP error that occurred when loading a Debug Toolbar panel on a page that contained serialized Checkboxes or Multi-Select field data. ([#3034](https://github.com/craftcms/cms/issues/3034))\n- Fixed a bug where elements\u2019 normalized search keywords weren\u2019t always using the correct language-specific character mappings. ([#3046](https://github.com/craftcms/cms/issues/3046))\n- Fixed a bug where the `<html lang>` attribute was hard-set to `en-US` rather than the current application language. ([#3053](https://github.com/craftcms/cms/pull/3053))\n- Fixed a PHP error that occurred when entering an invalid number into a Number field that was set to have decimal digits. ([#3059](https://github.com/craftcms/cms/issues/3059))\n\n### Security\n- Craft no longer shows the installer when it can\u2019t establish a database connection if Dev Mode isn\u2019t enabled.\n\n## 3.0.13.2 - 2018-06-27\n\n### Fixed\n- Fixed an error that occurred when deleting users from the Users index page.\n\n## 3.0.13.1 - 2018-06-26\n\n### Fixed\n- Fixed a bug where Delete User modals weren\u2019t showing the total number of entries that will be transferred/deleted.\n\n## 3.0.13 - 2018-06-26\n\n### Added\n- Craft now includes a summary of the content that will be transferred/deleted in Delete User modals. ([#875](https://github.com/craftcms/cms/issues/875))\n- `|date`, `|time`, and `|datetime` filters now support a `locale` argument, for specifying which locale\u2019s formatter should be doing the date/time formatting. ([#3006](https://github.com/craftcms/cms/issues/3006))\n- Added `craft\\base\\ApplicationTrait::getIsInitialized()`.\n- Added `craft\\base\\ClonefixTrait`.\n- Added `craft\\controllers\\AssetsController::actionThumb()`.\n- Added `craft\\controllers\\UsersController::actionUserContentSummary()`.\n- Added `craft\\controllers\\UsersController::EVENT_DEFINE_CONTENT_SUMMARY`.\n- Added `craft\\helpers\\App::backtrace()`.\n- Added `craft\\queue\\jobs\\PropagateElements`.\n- Added `craft\\services\\Elements::propagateElement()`.\n\n### Changed\n- Editable tables now submit an empty string when they have no rows.\n- Reduced the overhead when adding a new site by only resaving existing assets, categories, global sets, and tags once for the newly-created site, rather than for all sites.\n- Web-based queue workers now call `craft\\helpers\\App::maxPowerCaptain()` before running the queue. ([#3011](https://github.com/craftcms/cms/issues/3011))\n- The PHP Info utility no longer displays the original values for settings and only the current environment value. ([#2990](https://github.com/craftcms/cms/issues/2990))\n- Loosened up most of Craft\u2019s Composer dependency constraints.\n- Craft no longer publishes asset thumbnails to the `cpresources/` folder.\n- `attributes`, `error`, `errors`, and `scenario` are now reserved field handles. ([#3032](https://github.com/craftcms/cms/issues/3032))\n- Improved the look of Control Panel tabs.\n- `craft\\web\\UrlManager::createUrl()`, `createAbsoluteUrl()`, and `getMatchedElement()` now log warnings if they\u2019re called before Craft has been fully initialized. ([#3028](https://github.com/craftcms/cms/issues/3028))\n\n### Deprecated\n- Deprecated `craft\\controllers\\AssetsController::actionGenerateThumb()`.\n\n### Fixed\n- Fixed a bug where sidebar meta info on Edit User pages was bleeding over the edge of the page\u2019s content area.\n- Fixed a bug where Table fields wouldn\u2019t remember if they had no rows in their Default Values setting. ([#2979](https://github.com/craftcms/cms/issues/2979))\n- Fixed a bug where passing `timezone=false` to the `|date`, `|time`, and `|datetime` filters would not preserve the given date\u2019s time zone.\n- Fixed a bug where AM/PM strings in formatted dates weren\u2019t respecting the casing specified by the `A`/`a` character in the date format. ([#3007](https://github.com/craftcms/cms/issues/3007))\n- Fixed a bug you could get an invalid license warning in cases where web API calls returned a 500 response code.\n- Fixed a bug where cloning models and queries would lose any associated behaviors. ([#2857](https://github.com/craftcms/cms/issues/2857))\n- Fixed a bug where custom field params were getting forgotten when calling `getNext()` and `getPrev()`, if an element query object was passed in. ([#3019](https://github.com/craftcms/cms/issues/3019))\n- Fixed a bug where datepickers were getting scrollbars.\n- Fixed a bug where volumes\u2019 field layouts weren\u2019t getting deleted when volumes were deleted. ([#3022](https://github.com/craftcms/cms/pull/3022))\n- Fixed a bug where deleting a section or an entry type wouldn\u2019t delete any associated entries that didn\u2019t exist in the primary site. ([#3023](https://github.com/craftcms/cms/issues/3023))\n- Fixed a bug where the `svg()` Twig function could convert `id` attributes within the SVG contents to invalid IDs. ([#3025](https://github.com/craftcms/cms/issues/3025))\n- Fixed a bug where asset thumbnails wouldn\u2019t load reliably in the Control Panel on load-balanced environments. ([#3026](https://github.com/craftcms/cms/issues/3026))\n- Fixed a PHP error that could occur when validating Assets fields if a file was uploaded but no longer exists at the temp location. ([#3033](https://github.com/craftcms/cms/pull/3033))\n\n## 3.0.12 - 2018-06-18\n\n### Added\n- Added a `leaves` element query param that limits the selected elements to just the leaves in the structure (elements without children).\n- Added `craft\\helpers\\Db::deleteIfExists()`.\n- Added `craft\\services\\Categories::deleteGroup()`. ([#3000](https://github.com/craftcms/cms/pull/3000))\n- Added `craft\\services\\Tags::deleteTagGroup()`. ([#3000](https://github.com/craftcms/cms/pull/3000))\n- Added `craft\\services\\UserGroups::deleteGroup()`. ([#3000](https://github.com/craftcms/cms/pull/3000))\n\n### Changed\n- Improved Control Panel styling. ([#2883](https://github.com/craftcms/cms/issues/2883))\n\n### Removed\n- Removed `craft\\services\\Fields::updateFieldVersionAfterRequest()`.\n\n### Fixed\n- Fixed a caching bug where the Fields service could still think a field existed after it had been deleted. ([#2985](https://github.com/craftcms/cms/issues/2985))\n- Fixed a bug where Craft would not invalidate the dynamically-generated `craft\\behaviors\\ContentBehavior` and `craft\\behaviors\\ElementQueryBehavior` after saving/deleting a custom field, if the request didn\u2019t end normally. ([#2999](https://github.com/craftcms/cms/issues/2999))\n- Fixed a PHP error that could occur when saving entries with a URI format that contained certain Twig filters. ([#2995](https://github.com/craftcms/cms/issues/2995))\n- Fixed a bug where `{shorthand}` variables in templates rendered by `craft\\web\\View::renderObjectTemplate()` could end up referencing global variables, if the variable wasn\u2019t a property of the object. ([#3002](https://github.com/craftcms/cms/issues/3002))\n- Fixed a bug where the Find and Replace utility wasn\u2019t updating element titles. ([#2996](https://github.com/craftcms/cms/issues/2996))\n- Fixed some wonky behavior if one of the custom user profile tabs was called \u201cAccount\u201d. ([#2998](https://github.com/craftcms/cms/issues/2998))\n- Fixed a bug where dragging a folder on the Assets index page could have unexpected results. ([#2873](https://github.com/craftcms/cms/issues/2873))\n- Reduced the likelihood of SQL deadlock errors when saving elements. ([#3003](https://github.com/craftcms/cms/issues/3003))\n\n## 3.0.11 - 2018-06-12\n\n### Changed\n- Sort options defined by element types\u2019 `sortOptions()` / `defineSortOptions()` methods can now be specified as sub-arrays with `label`, `orderBy`, and `attribute` keys.\n- Entries and categories can now be sorted by their slugs.\n- The \u201cCache remote images?\u201d option in the Asset Indexes utility is now enabled by default. ([#2977](https://github.com/craftcms/cms/issues/2977))\n\n### Fixed\n- Fixed a bug where it was not possible to order search results by search score, if the element type didn\u2019t specify any sort options.\n- Fixed a bug where clicking on \u201cDate Created\u201d and \u201cDate Updated\u201d column headers on element indexes wouldn\u2019t update the sort order. ([#2975](https://github.com/craftcms/cms/issues/2975))\n- Fixed a bug where Edit Entry pages were listing more than the 10 most recent versions. ([#2976](https://github.com/craftcms/cms/issues/2976))\n- Fixed a SQL error that occurred when upgrading from Craft 2 to 3 via the terminal. ([#1347](https://github.com/craftcms/cms/issues/1347))\n- Fixed the alignment of expand/collapse toggles in asset index sidebars. ([#2981](https://github.com/craftcms/cms/issues/2981))\n\n## 3.0.10.3 - 2018-06-07\n\n### Fixed\n- Fixed a bug where the \u201cNew Entry\u201d menu on the Entries index page would not contain any options on single-site installs, running MySQL. ([#2961](https://github.com/craftcms/cms/issues/2961))\n- Fixed a bug where the `siteName` config setting wasn\u2019t working as expected when set to an array. ([#2968](https://github.com/craftcms/cms/issues/2968))\n\n## 3.0.10.2 - 2018-06-07\n\n### Changed\n- Improved the output of `craft\\helpers\\DateTimeHelper::humanDurationFromInterval()`.\n- Updated Garnish to 0.1.24.\n\n### Fixed\n- Fixed JavaScript errors that could occur in the Control Panel on pages with Ajax requests. ([#2966](https://github.com/craftcms/cms/issues/2966))\n- Fixed a bug where the \u201cNew Entry\u201d menu on the Entries index page would not contain any options on single-site installs. ([#2961](https://github.com/craftcms/cms/issues/2961))\n- Fixed a bug where JavaScript files registered with `craft\\web\\View::registerJsFile()` would be ignored if the `depends` option was set. ([#2965](https://github.com/craftcms/cms/issues/2965))\n\n## 3.0.10.1 - 2018-06-06\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t converting empty strings to `null` when saving data to non-textual columns.\n- Fixed a bug where Craft would show a Database Connection Error on Install requests, if it couldn\u2019t connect to the database.\n- Fixed a bug where Craft wasn\u2019t keeping track of element queries that were executed within `{% cache %}` tags. ([#2959](https://github.com/craftcms/cms/issues/2959))\n\n## 3.0.10 - 2018-06-05\n\n### Added\n- Added support for a `CRAFT_LICENSE_KEY` PHP constant, which can be set to the project\u2019s license key, taking precedence over the `license.key` file.\n- Added `craft\\helpers\\Stringy::getLangSpecificCharsArray()`.\n- Added `craft\\web\\View::setRegisteredAssetBundles()`.\n- Added `craft\\web\\View::setRegisteredJsFiles()`.\n\n### Changed\n- Generated site URLs now always include full host info, even if the base site URL is root/protocol-relative. ([#2919](https://github.com/craftcms/cms/issues/2919))\n- Variables passed into `craft\\web\\View::renderObjectTemplate()` can now be referenced using the shorthand syntax (e.g. `{foo}`).\n- `craft\\helpers\\StringHelper::asciiCharMap()` now has `$flat` and `$language` arguments.\n- Craft no longer saves new versions of entries when absolutely nothing changed about them in the save request. ([#2923](https://github.com/craftcms/cms/issues/2923))\n- Craft no longer enforces plugins\u2019 `minVersionRequired` settings if the currently-installed version begins with `dev-`.\n- Improved the performance of element queries when a lot of values were passed into a param, such as `id`, by using `IN()` and `NOT IN()` conditions when possible. ([#2937](https://github.com/craftcms/cms/pull/2937))\n- The Asset Indexes utility no longer skips files with leading underscores. ([#2943](https://github.com/craftcms/cms/issues/2943))\n- Updated Garnish to 0.1.23.\n\n### Deprecated\n- Deprecated the `customAsciiCharMappings` config setting. (Any corrections to ASCII char mappings should be submitted to [Stringy](https://github.com/danielstjules/Stringy).)\n\n### Fixed\n- Fixed a PHP error that could occur when `craft\\fields\\Number::normalizeValue()` was called without passing an `$element` argument. ([#2913](https://github.com/craftcms/cms/issues/2913))\n- Fixed a bug where it was not possible to fetch Matrix blocks with the `relatedTo` param if a specific custom field was specified.\n- Fixed a bug where `craft\\helpers\\UrlHelper::url()` and `siteUrl()` were not respecting the `$scheme` argument for site URLs.\n- Fixed a bug where `{id}` tags within element URI formats weren\u2019t getting parsed correctly on first save. ([#2922](https://github.com/craftcms/cms/issues/2922))\n- Fixed a bug where `craft\\helpers\\MigrationHelper::dropAllForeignKeysToTable()` wasn\u2019t working correctly. ([#2897](https://github.com/craftcms/cms/issues/2897))\n- Fixed a \u201cCraft is not defined\u201d JavaScript error that could occur on the Forgot Password page in the Control Panel and Dev Toolbar requests.\n- Fixed a bug where rotating the screen on iOS would change how the page was zoomed.\n- Fixed a bug where `craft\\helpers\\StringHelper::toAscii()` and the `Craft.asciiString()` JS method weren\u2019t using language-specific character replacements, or any custom replacements defined by the `customAsciiCharMappings` config setting.\n- Fixed a bug where the number `0` would not save in a Plain Text field.\n- Fixed a bug where Craft could pick the wrong current site if the primary site had a root-relative or protocol-relative URL, and another site didn\u2019t, but was otherwise an equal match.\n- Fixed a bug where Control Panel Ajax requests could cause some asset bundles and JavaScript files to be double-registered in the browser.\n- Fixed a bug where the \u201cNew entry\u201d menu on the Entries index page was including sections that weren\u2019t available in the selected site, and they weren\u2019t linking to Edit Entry pages for the selected site. ([#2925](https://github.com/craftcms/cms/issues/2925))\n- Fixed a bug where the `|date`, `|time`, and `|datetime` filters weren\u2019t respecting their `$timezone` arguments. ([#2926](https://github.com/craftcms/cms/issues/2926))\n- Fixed a bug where element queries weren\u2019t respecting the `asArray` param when calling `one()`. ([#2940](https://github.com/craftcms/cms/issues/2940))\n- Fixed a bug where the Asset Indexes utility wouldn\u2019t work as expected if all of a volume\u2019s assets had been deleted from the file system. ([#2955](https://github.com/craftcms/cms/issues/2955))\n- Fixed a SQL error that could occur when a `{% cache %}` tag had no body. ([#2953](https://github.com/craftcms/cms/issues/2953))\n\n## 3.0.9 - 2018-05-22\n\n### Added\n- Added a default plugin icon to plugins without an icon in the Plugin Store.\n- Added `craft\\helpers\\ArrayHelper::without()` and `withoutValue()`.\n- Added `craft\\base\\FieldInterface::modifyElementIndexQuery()`.\n- Added `craft\\elements\\db\\ElementQueryInterface::andWith()`.\n\n### Changed\n- Fixed a bug where Craft was checking the file system when determining if an asset was a GIF, when it should have just been checking the file extension.\n- `craft\\base\\Plugin` now sets the default `$controllerNamespace` value to the plugin class\u2019 namespace + `\\controllers` or `\\console\\controllers`, depending on whether it\u2019s a web or console request.\n- Improved the contrast of success and error notices in the Control Panel to meet WCAG AA requirements. ([#2885](https://github.com/craftcms/cms/issues/2885))\n- `fieldValue` is now a protected field handle. ([#2893](https://github.com/craftcms/cms/issues/2893))\n- Craft will no longer discard any preloaded elements when setting the `with` param on an element query, fixing a bug where disabled Matrix blocks could show up in Live Preview if any nested fields were getting eager-loaded. ([#1576](https://github.com/craftcms/cms/issues/1576))\n- Improved memory usage when using the `{% cache %}` tag. ([#2903](https://github.com/craftcms/cms/issues/2903))\n\n### Fixed\n- Fixed a bug where the Plugin Store was listing featured plugins (e.g. \u201cRecently Added\u201d) in alphabetical order rather than the API-defined order. ([pixelandtonic/craftnet#83](https://github.com/pixelandtonic/craftnet/issues/83))\n- Fixed a SQL error that occurred when programmatically saving a field layout, if the field\u2019s `required` property wasn\u2019t set.\n- Fixed a JavaScript error that could occur when multiple Assets fields were present on the same page.\n- Fixed an error that could occur when running the `setup` command on some environments.\n- Fixed a PHP error that could occur when calling `craft\\elements\\db\\ElementQuery::addOrderBy()` if `$columns` normalized to an empty array. ([#2896](https://github.com/craftcms/cms/issues/2896))\n- Fixed a bug where it wasn\u2019t possible to access custom field values on Matrix blocks via `matrixblock` reference tags.\n- Fixed a bug where relational fields with only disabled elements selected would get empty table cells on element indexes. ([#2910](https://github.com/craftcms/cms/issues/2910))\n\n## 3.0.8 - 2018-05-15\n\n### Added\n- Number fields now have a \u201cDefault Value\u201d setting. ([#927](https://github.com/craftcms/cms/issues/927))\n- Added the `preserveCmykColorspace` config setting, which can be set to `true` to prevent images\u2019 color spaces from getting converted to sRGB on environments running ImageMagick.\n\n### Changed\n- Error text is now orange instead of red. ([#2885](https://github.com/craftcms/cms/issues/2885))\n- Detail panes now have a lighter, more saturated background color.\n\n### Fixed\n- Fixed a bug where Craft\u2019s default MySQL backup command would not respect the `unixSocket` database config setting. ([#2794](https://github.com/craftcms/cms/issues/2794))\n- Fixed a bug where some SVG files were not recognized as SVG files.\n- Fixed a bug where Table fields could add the wrong number of default rows if the Min Rows setting was set, and the Default Values setting had something other than one row. ([#2864](https://github.com/craftcms/cms/issues/2864))\n- Fixed an error that could occur when parsing asset reference tags. ([craftcms/redactor#47](https://github.com/craftcms/redactor/issues/47))\n- Fixed a bug where \u201cTry\u201d and \u201cBuy\u201d buttons in the Plugin Store were visible when the `allowUpdates` config setting was disabled. ([#2781](https://github.com/craftcms/cms/issues/2781))\n- Fixed a bug where Number fields would forget their Min/Max Value settings if they were set to 0.\n- Fixed a bug where entry versions could be displayed in the wrong order if multiple versions had the same creation date. ([#2889](https://github.com/craftcms/cms/issues/2889))\n- Fixed an error that occurred when installing Craft on a domain with an active user session.\n- Fixed a bug where email verification links weren\u2019t working for publicly-registered users if the registration form contained a Password field and the default user group granted permission to access the Control Panel.\n\n### Security\n- Login errors for locked users now factor in whether the `preventUserEnumeration` config setting is enabled.\n\n## 3.0.7 - 2018-05-10\n\n### Added\n- Added the `transformGifs` config setting, which can be set to `false` to prevent GIFs from getting transformed or cleansed. ([#2845](https://github.com/craftcms/cms/issues/2845))\n- Added `craft\\helpers\\FileHelper::isGif()`.\n\n### Changed\n- Craft no longer logs warnings about missing translation files when Dev Mode isn\u2019t enabled. ([#1531](https://github.com/craftcms/cms/issues/1531))\n- Added `craft\\services\\Deprecator::$logTarget`. ([#2870](https://github.com/craftcms/cms/issues/2870))\n- `craft\\services\\Deprecator::log()` no longer returns anything.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to upload new assets to Assets fields using base64-encoded strings. ([#2855](https://github.com/craftcms/cms/issues/2855))\n- Fixed a bug where Assets fields would ignore all submitted asset IDs if any new assets were uploaded as well.\n- Fixed a bug where SVG files that were using single quotes instead of double quotes would not be recognized as SVGs.\n- Fixed a bug where translated versions of the \u201cIt looks like someone is currently performing a system update.\u201d message contained an HTML-encoded `<br/>` tag.\n- Fixed a bug where changing an entry\u2019s type could skip adding the new entry type\u2019s tabs, if the previous entry type didn\u2019t have any tabs. ([#2859](https://github.com/craftcms/cms/issues/2859))\n- Fixed warnings about missing SVG files that were logged by Control Panel requests.\n- Fixed a bug where the `|date` filter would ignore date formatting characters that don\u2019t have ICU counterparts. ([#2867](https://github.com/craftcms/cms/issues/2867))\n- Fixed a bug where the global `currentUser` Twig variable could be set to `null` and global sets and could be missing some custom field values when a user was logged-in, if a plugin was loading Twig during or immediately after plugin instantiation. ([#2866](https://github.com/craftcms/cms/issues/2866))\n\n## 3.0.6 - 2018-05-08\n\n### Added\n- Error messages about missing plugin-supplied field and volume types now show an Install button when possible.\n- Added `craft\\base\\MissingComponentTrait::getPlaceholderHtml()`.\n- Added `craft\\db\\Migration::EVENT_AFTER_UP` and `EVENT_AFTER_DOWN` events.\n- Added `craft\\elements\\Asset::getContents()`.\n\n### Changed\n- Edit User pages will now warn editors when leaving the page with unsaved changes. ([#2832](https://github.com/craftcms/cms/issues/2832))\n- Modules are once again loaded before plugins, so they have a chance to register Twig initialization events before a plugin initializes Twig. ([#2831](https://github.com/craftcms/cms/issues/2831))\n- `craft\\helpers\\FileHelper::isSvg()` now returns `true` for files with an `image/svg` MIME type (missing the `+xml`). ([#2837](https://github.com/craftcms/cms/pull/2837))\n- The `svg()` Twig function now accepts assets to be passed directly into it. ([#2838](https://github.com/craftcms/cms/pull/2838))\n- The \u201cSave and add another\u201d save menu option on Edit Entry and Edit Categories pages now maintain the currently-selected site. ([#2844](https://github.com/craftcms/cms/issues/2844))\n- PHP date patterns that are *only* a month name or week day name character will now format the date using the stand-alone month/week day name value. (For example, `'F'` will format a date as \u201cMaggio\u201d instead of \u201cmaggio\u201d.)\n- Servers without the Intl extension will now use location-agnostic locale data as a fallback if locale data for the specific locale isn\u2019t available.\n- The `|date` Twig filter always goes through `craft\\i18n\\Formatter::asDate()` now, unless formatting a `DateInterval` object.\n- The Settings \u2192 Plugins page now shows \u201cBuy now\u201d buttons for any commercial plugins that don\u2019t have a license key yet.\n\n### Deprecated\n- Deprecated `craft\\helpers\\DateTimeHelper::translateDate()`. `craft\\i18n\\Formatter::asDate()` should be used instead.\n\n### Removed\n- Removed the `translate` argument from the `|date`, `|time`, and `|datetime` Twig filters; the resulting formatted dates will always be translated now. (Use `myDate.format()` to avoid translations.)\n\n### Fixed\n- Fixed an error that could occur in the Plugin Store.\n- Fixed a bug where `myDate|date('F')` was returning the short \u201cMay\u201d translation rather than the full-length one. ([#2848](https://github.com/craftcms/cms/issues/2848))\n\n## 3.0.5 - 2018-05-01\n\n### Changed\n- Fields\u2019 translation icons now reveal the chosen Translation Method in their tooltip. ([#2808](https://github.com/craftcms/cms/issues/2808))\n- Improved the error messages displayed when an Assets field has an invalid Upload Location setting. ([#2803](https://github.com/craftcms/cms/issues/2803))\n- Craft now logs errors that occur when saving and replacing assets. ([#2814](https://github.com/craftcms/cms/issues/2814))\n- Single sections\u2019 entry types\u2019 handles are now updated to match their section\u2019s handle whenever the section is saved. ([#2824](https://github.com/craftcms/cms/issues/2824))\n- The Control Panel background color was lightened up a bit.\n\n### Fixed\n- Fixed an error that would occur on servers without the Phar PHP extension enabled.\n- Fixed an error that could occur if a Matrix block was deleted by a queue job. ([#2813](https://github.com/craftcms/cms/issues/2813))\n- Fixed a bug where Twig could be configured to output times in UTC rather than the system timezone, if a bootstrapped module was loading Twig. ([#2761](https://github.com/craftcms/cms/issues/2761))\n- Fixed a SQL error that could occur when upgrading from Craft 2 to Craft 3 with an active user session.\n- Fixed various SQL errors that could occur when upgrading from Craft 2 to Craft 3, if there were any lingering Craft 3 database tables from a previous upgrade attempt.\n- Fixed a bug where the Clear Caches tool was deleting the `.gitignore` file inside `web/cpresources/`. ([#2823](https://github.com/craftcms/cms/issues/2823))\n- Fixed the vertical positioning of checkboxes in the Control Panel. ([#2825](https://github.com/craftcms/cms/issues/2825))\n- Fixed a JavaScript error that could occur if an element type\u2019s class name contained `\\u`. ([#2826](https://github.com/craftcms/cms/issues/2826))\n\n## 3.0.4 - 2018-04-24\n\n### Added\n- Added the `craft.globalSets()` template function. ([#2790](https://github.com/craftcms/cms/issues/2790))\n- Added the `hasDescendants` element query param. ([#2786](https://github.com/craftcms/cms/issues/2786))\n- Added `craft\\elements\\User::$hasDashboard`.\n\n### Changed\n- Sections and category groups now ignore posted Template settings for sites that don\u2019t have URI Formats.\n- Control Panel resources are once again eager-published. ([#2763](https://github.com/craftcms/cms/issues/2763))\n- `entries/save-entries` and `categories/save-category` actions now include the `slug` for responses that accept JSON. ([#2792](https://github.com/craftcms/cms/issues/2792))\n- Most `craft\\services\\Path` methods now have a `$create` argument, which can be set to `false` to prevent the directory from being created if it doesn\u2019t exist yet.\n- Craft no longer creates directories when it just needed to clear it. ([#2771](https://github.com/craftcms/cms/issues/2771))\n- `craft\\services\\Config::setDotEnvVar()` now sets the environment variable for the current request, in addition to updating the `.env` file.\n- Removed `craft\\controllers\\AssetsController::actionDownloadTempAsset()`.\n- User now must be logged in to use the Asset Preview File functionality.\n\n### Fixed\n- Fixed a bug where users would regain all default Dashboard widgets if all widgets were removed. ([#2769](https://github.com/craftcms/cms/issues/2769))\n- Fixed a bug where you would get a \u201cnot a valid language\u201d error message when creating a new site using certain languages.\n- Fixed a bug where database connection settings that were set by the `setup` command weren\u2019t always taking effect in time for the CLI installer. ([#2774](https://github.com/craftcms/cms/issues/2774))\n- Fixed a bug where empty Plain Text fields were getting empty string values rather than `null`.\n- Fixed a bug where elements within relational fields could have two thumbnails. ([#2785](https://github.com/craftcms/cms/issues/2785))\n- Fixed a bug where it was not possible to pass a `--table-prefix` argument to the `setup/db-creds` command. ([#2791](https://github.com/craftcms/cms/pull/2791))\n- Fixed an error that occurred for users without permission to perform updates, if available update info wasn\u2019t cached.\n- Fixed an error that occurred when `craft\\elements\\Asset::sources()` was called in a console request. ([#2798](https://github.com/craftcms/cms/issues/2798))\n- Fixed JavaScript errors that could occur on the front end after deleting Matrix blocks. ([#2799](https://github.com/craftcms/cms/pull/2799))\n\n## 3.0.3.1 - 2018-04-18\n\n### Fixed\n- Fixed an error that occurred when editing an entry if any of the entry\u2019s revisions were created with an entry type that no longer exists.\n- Fixed an error that could occur when saving an asset. ([#2764](https://github.com/craftcms/cms/issues/2764))\n- Fixed a bug where Craft assumed an asset was missing if there was an error when indexing it. ([#2763](https://github.com/craftcms/cms/issues/2763))\n\n## 3.0.3 - 2018-04-17\n\n### Added\n- Added `craft\\elements\\Entry::updateTitle()`.\n- Added `Yii::alias()`.\n\n### Changed\n- New sites\u2019 Base URLs now default to `@web/`.\n- Textual custom fields now ensure that they don\u2019t contain 4+ byte characters. ([#2725](https://github.com/craftcms/cms/issues/2725))\n- It is no longer expected that all of the `defaultSearchTermOptions` config setting options will be set if any of the default option values need to be overridden. ([#2737](https://github.com/craftcms/cms/issues/2737))\n- Control Panel panes now have at least 48 pixels of bottom padding. ([#2744](https://github.com/craftcms/cms/issues/2744))\n- Craft now intercepts 404-ing resource requests, and publishes the resources on the fly.\n- The Clear Caches utility now has a \u201cControl Panel resources\u201d option.\n- The Clear Caches utility now sorts the cache options alphabetically.\n- When enabling new sites for a section, the new sites\u2019 content is now based on the primary site\u2019s content, if the section was and still is enabled for the primary site. ([#2748](https://github.com/craftcms/cms/issues/2748))\n- Improved the responsiveness of element indexes.\n- `Craft.BaseElementIndexView` now has a `loadMoreElementsAction` setting. ([#2762](https://github.com/craftcms/cms/pull/2762))\n\n### Fixed\n- Fixed a bug where the Clear Caches utility was not deleting template caches. ([#2720](https://github.com/craftcms/cms/issues/2720))\n- Fixed a bug where the Plugin Store was not displaying payment errors on checkout.\n- Fixed a bug where Control Panel-defined routes that contained special regular expression characters weren\u2019t working. ([#2721](https://github.com/craftcms/cms/issues/2721))\n- Fixed a bug where it was not possible to save system messages in some cases.\n- Fixed a bug where static translations within dynamic entry title formats were getting translated using the current site\u2019s language, rather than the entry\u2019s language. ([#2722](https://github.com/craftcms/cms/issues/2722))\n- Fixed a bug where deprecation errors for some date formatting methods were not escaping backslashes.\n- Fixed a bug where plugins\u2019 \u201cLast update\u201d timestamps in the Plugin Store weren\u2019t getting formatted correctly in Safari. ([#2733](https://github.com/craftcms/cms/issues/2733))\n- Fixed references to a nonexistent `Craft.eot` file in the Control Panel CSS. ([#2740](https://github.com/craftcms/cms/issues/2740))\n- Fixed a bug where the default PostgreSQL database restore command wasn\u2019t setting the `PGPASSWORD` environment variable. ([#2741](https://github.com/craftcms/cms/pull/2741))\n- Fixed an error that could occur if the system time zone was not supported by the ICU library, on environments with the Intl extension loaded.\n- Fixed a bug where several administrative fields had translatable icons. ([#2742](https://github.com/craftcms/cms/issues/2742))\n- Fixed a bug where `craft\\controllers\\PluginStoreController::actionSavePluginLicenseKeys()` was trying to set a plugin license key for plugins which were not installed.\n\n### Security\n- Fixed a bug assets were not getting cleansed on upload. ([#2709](https://github.com/craftcms/cms/issues/2709))\n\n## 3.0.2 - 2018-04-10\n\n### Added\n- Added the `EVENT_BEFORE_DELETE_CACHES` and `EVENT_AFTER_DELETE_CACHES` events to `craft\\services\\TemplateCaches`.\n- Added `craft\\events\\DeleteTemplateCachesEvent`.\n\n### Changed\n- Craft now deletes all compiled templates whenever Craft or a plugin is updated. ([#2686](https://github.com/craftcms/cms/issues/2686))\n- The Plugin Store now displays commercial plugins\u2019 renewal prices. ([#2690](https://github.com/craftcms/cms/issues/2690))\n- The Plugin Store no longer shows the \u201cUpgrade Craft CMS\u201d link if Craft is already running (and licensed to run) the Pro edition. ([#2713](https://github.com/craftcms/cms/issues/2713))\n- Matrix fields now set `$propagating` to `true` when saving Matrix blocks, if the owner element is propagating.\n- `craft\\helpers\\ArrayHelper::toArray()` no longer throws a deprecation error when a string without commas is passed to it. ([#2711](https://github.com/craftcms/cms/issues/2711))\n- Editable tables now support an `html` column type, which will output cell values directly without encoding HTML entities. ([#2716](https://github.com/craftcms/cms/pull/2716))\n- `Craft.EditableTable` instances are now accessible via `.data('editable-table')` on their `<table>` element. ([#2694](https://github.com/craftcms/cms/issues/2694))\n- Updated Composer to 1.6.3. ([#2707](https://github.com/craftcms/cms/issues/2707))\n- Updated Garnish to 0.1.22. ([#2689](https://github.com/craftcms/cms/issues/2689))\n\n### Fixed\n- Fixed an error that could occur in the Control Panel if any plugins with licensing issues were installed. ([#2691](https://github.com/craftcms/cms/pull/2691))\n- Fixed a bug on the Plugin Store\u2019s Payment screen where the \u201cUse a new credit card\u201d radio option would not get selected automatically even if it was the only one available.\n- Fixed a bug where `craft\\web\\assets\\vue\\VueAsset` didn\u2019t respect the `useCompressedJs` config setting.\n- Fixed an error that occurred when saving a Single entry over Ajax. ([#2687](https://github.com/craftcms/cms/issues/2687))\n- Fixed an error that could occur when disabling a site on a Single section. ([#2695](https://github.com/craftcms/cms/issues/2695))\n- Fixed an error that could occur on requests without a content type on the response. ([#2704](https://github.com/craftcms/cms/issues/2704))\n- Fixed a bug where the `includeSubfolders` asset query param wasn\u2019t including results in the parent folder. ([#2706](https://github.com/craftcms/cms/issues/2706))\n- Fixed an error that could occur when querying for users eager-loaded with their photos, if any of the resulting users didn\u2019t have a photo. ([#2708](https://github.com/craftcms/cms/issues/2708))\n- Fixed a bug where relational fields within Matrix fields wouldn\u2019t save relations to elements that didn\u2019t exist on all of the sites the owner element existed on. ([#2683](https://github.com/craftcms/cms/issues/2683))\n- Fixed a bug where relational fields were ignoring disabled related elements in various functions, including required field validation and value serialization.\n- Fixed an error that would occur if a new custom field was created and added to an element\u2019s field layout, and its value was accessed, all in the same request. ([#2705](https://github.com/craftcms/cms/issues/2705))\n- Fixed a bug where the `id` param was ignored when used on an eager-loaded elements\u2019 criteria. ([#2717](https://github.com/craftcms/cms/issues/2717))\n- Fixed a bug where the default restore command for MySQL wouldn\u2019t actually restore the database. ([#2714](https://github.com/craftcms/cms/issues/2714))\n\n## 3.0.1 - 2018-04-04\n\n### Deprecated\n- Brought back and deprecated the `Craft::Personal` and `Craft::Client` constants.\n\n### Fixed\n- Fixed a bug where elements\u2019 `getNext()` and `getPrev()` methods were modifying the element query passed into them. ([#2160](https://github.com/craftcms/cms/issues/2160))\n- Fixed a bug where Table fields could be pre-populated with one too many rows. ([#2680](https://github.com/craftcms/cms/pull/2680))\n\n### Security\n- Craft no longer sends exception messages to error templates, unless the exception is an instance of `yii\\base\\UserException`.\n\n## 3.0.0.2 - 2018-04-04\n\n### Fixed\n- Fixed a bug where Craft Pro installs were getting identified as Craft Solo in the Control Panel.\n\n## 3.0.0 - 2018-04-04\n\n### Added\n- The codebase has been completely rewritten and refactored to improve performance, maintainability, and extensibility.\n- Craft can now be [installed](https://docs.craftcms.com/v3/installation.html) via Composer in addition to a zip file. ([#895](https://github.com/craftcms/cms/issues/895))\n- Craft\u2019s setup wizard is now available as a CLI tool in addition to the web-based one.\n- [Plugins](https://docs.craftcms.com/v3/plugin-intro.html) are now loaded as Composer dependencies, and implemented as extensions of [Yii modules](http://www.yiiframework.com/doc-2.0/guide-structure-modules.html).\n- Added [multi-site](https://docs.craftcms.com/v3/sites.html) support.\n- Added the Plugin Store, where plugins can be discovered, trialled, and purchased. ([#808](https://github.com/craftcms/cms/issues/808))\n- Plugins can now be updated and removed from within the Control Panel.\n- Asset sources are now called \u201cvolumes\u201d, and plugins can supply their own volume types.\n- Added the Image Editor, which can be used to rotate, crop, and flip images, as well as set focal points on them.\n- Added asset previews, which can be triggered via a \u201cPreview file\u201d action on the Assets index, or with a <kbd>Shift</kbd> + <kbd>Spacebar</kbd> keyboard shortcut throughout the Control Panel.\n- Asset editor HUDs now show image previews. ([#837](https://github.com/craftcms/cms/issues/837))\n- Added the \u201cUtilities\u201d section to the Control Panel, replacing the Tools area of the Settings page.\n- Added the Debug Toolbar, powered by the [Debug Extension for Yii 2](http://www.yiiframework.com/doc-2.0/guide-tool-debugger.html).\n- Added support for [Content Migrations](https://docs.craftcms.com/v3/content-migrations.html).\n- Added support for PostgreSQL.\n\n### Changed\n- The Control Panel has been redesigned for better usability, readability and responsiveness.\n- Renamed all \u201cURL Format\u201d things to \u201cURI Format\u201d, in the Control Panel UI and in the code.\n- Added the \u201cPropagate entries across all enabled sites?\u201d section setting. If disabled, entries will only be associated with the site they were created on. ([#2330](https://github.com/craftcms/cms/issues/2330))\n- Structure sections and category groups no longer have Nested URL Format settings. (It\u2019s still possible to achieve the same result with a single URI Format setting.)\n- When an entry type is updated, Craft now re-saves all entries of that type.\n- When a category is deleted, its nested categories are no longer deleted with it.\n- Craft no longer re-saves *all* localizable elements after a new site is created; entries and Matrix blocks are skipped, and plugins that supply custom element types must now re-save their elements manually as well.\n- The \u201cNew entry\u201d and \u201cNew category\u201d buttons on Entries and Categories index pages now load the Edit page for the currently-selected site. ([#2236](https://github.com/craftcms/cms/issues/2236))\n- Elements now validate that custom field values will fit within their database columns, for fields with textual or numeric column types.\n- User photos are now assets. ([#933](https://github.com/craftcms/cms/issues/933))\n- Assets now have a \u201cLink\u201d table attribute option.\n- Volumes\u2019 \u201cBase URL\u201d settings can now begin with `@web`, which is an alias for the root URL that Craft is running from.\n- Local volumes\u2019 \u201cFile System Path\u201d settings can now begin with `@webroot`, which is an alias for the path to the directory that `index.php` lives in.\n- Global Sets\u2019 field layouts can now have custom tabs.\n- Color inputs can now be left blank.\n- Color values within Table fields are now represented by `craft\\fields\\data\\ColorData` objects.\n- Element titles now get a validation error if they contain any 4+ byte characters (like emoji), on servers running MySQL. ([#2513](https://github.com/craftcms/cms/issues/2513))\n- Lightswitch fields that don\u2019t have a value yet will now be assigned the default field value, even for existing elements. ([#2404](https://github.com/craftcms/cms/issues/2404))\n- The system installer now sets the initial admin account\u2019s preferred language to the site language selected in the installation wizard. ([#2480](https://github.com/craftcms/cms/issues/2480))\n- Table fields now have \u201cMin Rows\u201d, \u201cMax Rows\u201d, and \u201cAdd Row Label\u201d settings. ([#2372](https://github.com/craftcms/cms/issues/2372))\n- Table fields now have \u201cDate\u201d, \u201cTime\u201d, \u201cLightswitch\u201d, and \u201cColor\u201d column type options.\n- Color fields now return a `craft\\fields\\data\\ColorData` object, with `hex`, `rgb`, `red`, `green`, `blue`, `r`, `g`, `b`, and `luma` properties.\n- Matrix fields now have \u201cManage blocks on a per-site basis\u201d, \u201cMin Blocks\u201d, and \u201cMax Blocks\u201d settings.\n- Matrix fields with only one block type, and equal values for the Min Blocks and Max Blocks settings, now hide the UI for adding and deleting blocks.\n- Matrix fields with only one block type will now auto-create the minimum number of blocks required by the field, per the Min Blocks setting, for new elements. ([#850](https://github.com/craftcms/cms/issues/850))\n- The `migrate/up` console command will now update the appropriate schema version in the database after successfully completing all migrations. ([#1907](https://github.com/craftcms/cms/issues/1907))\n- Users can now set their preferred language to any supported application language. ([#847](https://github.com/craftcms/cms/issues/847))\n- Users are no longer logged out when verifying a new email address on their own account. ([#1421](https://github.com/craftcms/cms/issues/1421))\n- Users no longer get an exception or error message if they click on an invalid/expired email verification link and are already logged in. Instead they\u2019ll be redirected to wherever they would normally be taken immediately after logging in. ([#1422](https://github.com/craftcms/cms/issues/1422))\n- If anything prevents a user from being deleted, any changes that were made in preparation for deleting the user are now rolled back.\n- Added `webp` as a web-safe image format.\n- Craft now checks if the current installation can manipulate an image instead of checking against a predefined list. ([#1648](https://github.com/craftcms/cms/issues/1648), [#1545](https://github.com/craftcms/cms/issues/1545))\n- The `getCsrfInput()` global function has been renamed to `csrfInput()`. (getCsrfInput() still works but produces a deprecation error.)\n- The `{% cache %}` tag no longer includes the query string when storing the cache URL.\n- Added the `|timestamp` Twig filter, for formatting a date as a user-friendly timestamp.\n- Added the `|datetime` Twig filter, for formatting a date with a localized date+time format.\n- Added the `|time` Twig filter, for formatting a date with a localized time format.\n- Added the `|multisort` Twig filter, which duplicates an array and sorts it with [`craft\\helpers\\ArrayHelper::multisort()`](http://www.yiiframework.com/doc-2.0/yii-helpers-basearrayhelper.html#multisort()-detail).\n- Added the `|atom` and `|rss` Twig filters, for formatting dates in Atom and RSS date formats, respectively.\n- Added the `|column` Twig filter, for capturing the key/property values of a series of arrays/objects.\n- Added the `|index` Twig filter, for indexing an array of arrays/objects by one of their keys/values.\n- Added the `|filterByValue` Twig filter.\n- Added the `|duration` Twig filter, which converts a `DateInterval` object into a human-readable duration.\n- The `t` filter now always defaults to translating the given string using the `site` category unless it is otherwise specified (e.g. `myString|t('pluginhandle')`).\n- The `|date` filter can be passed `'short'`, `'medium'`, `'long'`, and `'full'`, which will format the date with a localized date format.\n- It is now possibly to customize the SQL of [element queries](https://docs.craftcms.com/v3/element-queries.html), and there are more choices on how the data should be returned.\n- Element queries are no longer limited to 100 results by default.\n- The \u201cFailed\u201d message in the queue HUD in the Control Panel now shows the full error message as alt text. ([#855](https://github.com/craftcms/cms/issues/855))\n- Added the `convertFilenamesToAscii` config setting.\n- Added the `preserveExifData` config setting, `false` by default and requires Imagick. ([#2034](https://github.com/craftcms/cms/issues/2034))\n- Added the `aliases` config setting, providing an easy way to define custom [aliases](http://www.yiiframework.com/doc-2.0/guide-concept-aliases.html).\n- Removed support for automatically determining the values for the `omitScriptNameInUrls` and `usePathInfo` config settings.\n- It\u2019s now possible to override Craft\u2019s application config via `config/app.php`.\n- It\u2019s now possible to override volume settings via `config/volumes.php`.\n- It\u2019s now possible to override all plugins\u2019 settings via `config/<plugin-handle>.php`.\n- Renamed the `runTasksAutomatically` config setting to `runQueueAutomatically`.\n- The `translationDebugOutput` config setting will now wrap strings with `@` characters if the category is `app`, `$` if the category is `site`, and `%` for anything else.\n- All user-defined strings in the Control Panel (e.g. section names) are now translated using the `site` category, to prevent translation conflicts with Craft\u2019s own Control Panel translations.\n- Routes can now be stored on a per-site basis, rather than per-locale.\n- Web requests are now logged to `storage/logs/web.log`.\n- Web requests that result in 404 errors are now logged to `storage/logs/web-404s.log`.\n- Console requests are now logged to `storage/logs/console.log`.\n- Queue requests are now logged to `storage/logs/queue.log`.\n- Craft 3 now requires PHP 7.0.0 or later.\n- Craft 3 now requires MySQL 5.5+ or PostgreSQL 9.5+.\n- Craft now takes advantage of the [PHP Intl extension](https://php.net/manual/en/book.intl.php) when available.\n- Craft now uses Stringy for better string processing support.\n- Craft now uses Flysystem for better asset volume support.\n- Craft now uses Swiftmailer for better email sending support.\n- Craft now uses the [Yii 2 Queue Extension](https://github.com/yiisoft/yii2-queue) for managing background tasks.\n- Craft now uses the Zend Feed library for better RSS and Atom processing support.\n- Updated Yii to 2.0.15.1.\n- Updated Twig to 2.4.\n- Updated Guzzle to 6.3.\n\n### Deprecated\n- Many things have been deprecated. See [Changes in Craft 3](https://docs.craftcms.com/v3/changes-in-craft-3.html) for a complete list.\n\n### Fixed\n- Fixed a bug where a PHP session would be started on every template rendering request whether it was needed or not. ([#1765](https://github.com/craftcms/cms/issues/1765))\n\n### Security\n- Craft uses OpenSSL for encryption rather than mcrypt, which is far more secure and well-maintained.\n", "!function(){var t;t=jQuery,Craft.QuickPostWidget=Garnish.Base.extend({params:null,initFields:null,formHtml:null,$widget:null,$form:null,$spinner:null,$errorList:null,loading:!1,init:function(i,r,e,n){this.params=r,this.initFields=e,this.formHtml=n,this.$widget=t(\"#widget\"+i),this.initForm(this.$widget.find(\"form:first\"))},initForm:function(t){this.$form=t,this.$spinner=this.$form.find(\".spinner\"),this.initFields();var i=this.$form.find(\"> .buttons > .btngroup > .menubtn\"),r=i.data(\"menubtn\").menu.$container.find(\"> ul > li > a\");i.menubtn(),this.addListener(this.$form,\"submit\",\"handleFormSubmit\"),this.addListener(r,\"click\",\"saveAndContinueEditing\")},handleFormSubmit:function(t){t.preventDefault(),this.save(this.onSave.bind(this))},saveAndContinueEditing:function(){this.save(this.gotoEntry.bind(this))},save:function(i){var r=this;if(!this.loading){this.loading=!0,this.$spinner.removeClass(\"hidden\");var e=Garnish.getPostData(this.$form),n=t.extend({enabled:1},e,this.params);Craft.postActionRequest(\"entries/save-entry\",n,(function(e,n){if(r.loading=!1,r.$spinner.addClass(\"hidden\"),r.$errorList&&r.$errorList.children().remove(),\"success\"===n)if(e.success)Craft.cp.displayNotice(Craft.t(\"app\",\"Entry saved.\")),i(e);else if(Craft.cp.displayError(Craft.t(\"app\",\"Couldn\u2019t save entry.\")),e.errors)for(var s in r.$errorList||(r.$errorList=t('<ul class=\"errors\"/>').insertAfter(r.$form)),e.errors)if(e.errors.hasOwnProperty(s))for(var a=0;a<e.errors[s].length;a++){var o=e.errors[s][a];t(\"<li>\"+o+\"</li>\").appendTo(r.$errorList)}}))}},onSave:function(i){var r=t(this.formHtml);if(this.$form.replaceWith(r),Craft.initUiElements(r),this.initForm(r),void 0!==Craft.RecentEntriesWidget)for(var e=0;e<Craft.RecentEntriesWidget.instances.length;e++){var n=Craft.RecentEntriesWidget.instances[e];n.params.sectionId&&n.params.sectionId!=this.params.sectionId||n.addEntry({url:i.cpEditUrl,title:i.title,dateCreated:i.dateCreated,username:i.authorUsername})}},gotoEntry:function(t){Craft.redirectTo(t.cpEditUrl)}})}();\n//# sourceMappingURL=QuickPostWidget.js.map", "{\"version\":3,\"file\":\"QuickPostWidget.js\",\"mappings\":\"YAAA,IAAWA,EAAAA,EAyIRC,OAtIDC,MAAMC,gBAAkBC,QAAQC,KAAKC,OAAO,CAC1CC,OAAQ,KACRC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAU,KACVC,WAAY,KACZC,SAAS,EAETC,KAAM,SAAUC,EAAUT,EAAQC,EAAYC,GAC5CQ,KAAKV,OAASA,EACdU,KAAKT,WAAaA,EAClBS,KAAKR,SAAWA,EAChBQ,KAAKP,QAAUV,EAAE,UAAYgB,GAE7BC,KAAKC,SAASD,KAAKP,QAAQS,KAAK,gBAGlCD,SAAU,SAAUP,GAClBM,KAAKN,MAAQA,EACbM,KAAKL,SAAWK,KAAKN,MAAMQ,KAAK,YAEhCF,KAAKT,aAEL,IAAIY,EAAWH,KAAKN,MAAMQ,KAAK,qCAC7BE,EAA6BD,EAC1BE,KAAK,WACLC,KAAKC,WAAWL,KAAK,iBAE1BC,EAASK,UAETR,KAAKS,YAAYT,KAAKN,MAAO,SAAU,oBACvCM,KAAKS,YACHL,EACA,QACA,2BAIJM,iBAAkB,SAAUC,GAC1BA,EAAMC,iBAENZ,KAAKa,KAAKb,KAAKc,OAAOC,KAAKf,QAG7BgB,uBAAwB,WACtBhB,KAAKa,KAAKb,KAAKiB,UAAUF,KAAKf,QAGhCa,KAAM,SAAUK,GAAU,WACxB,IAAIlB,KAAKH,QAAT,CAIAG,KAAKH,SAAU,EACfG,KAAKL,SAASwB,YAAY,UAE1B,IAAIC,EAAWjC,QAAQkC,YAAYrB,KAAKN,OACtCW,EAAOtB,EAAEM,OAAO,CAACiC,QAAS,GAAIF,EAAUpB,KAAKV,QAE/CL,MAAMsC,kBACJ,qBACAlB,GACA,SAACmB,EAAUC,GAQT,GAPA,EAAK5B,SAAU,EACf,EAAKF,SAAS+B,SAAS,UAEnB,EAAK9B,YACP,EAAKA,WAAW+B,WAAWC,SAGV,YAAfH,EACF,GAAID,EAASK,QACX5C,MAAM6C,GAAGC,cAAc9C,MAAM+C,EAAE,MAAO,iBACtCd,EAASM,QAIT,GAFAvC,MAAM6C,GAAGG,aAAahD,MAAM+C,EAAE,MAAO,yBAEjCR,EAASU,OAOX,IAAK,IAAIC,KANJ,EAAKvC,aACR,EAAKA,WAAab,EAAE,wBAAwBqD,YAC1C,EAAK1C,QAIa8B,EAASU,OAC7B,GAAKV,EAASU,OAAOG,eAAeF,GAIpC,IAAK,IAAIG,EAAI,EAAGA,EAAId,EAASU,OAAOC,GAAWI,OAAQD,IAAK,CAC1D,IAAIE,EAAQhB,EAASU,OAAOC,GAAWG,GACvCvD,EAAE,OAASyD,EAAQ,SAASC,SAAS,EAAK7C,kBAU1DkB,OAAQ,SAAUU,GAEhB,IAAIkB,EAAW3D,EAAEiB,KAAKR,UAMtB,GALAQ,KAAKN,MAAMiD,YAAYD,GACvBzD,MAAM2D,eAAeF,GACrB1C,KAAKC,SAASyC,QAG2B,IAA9BzD,MAAM4D,oBACf,IAAK,IAAIP,EAAI,EAAGA,EAAIrD,MAAM4D,oBAAoBC,UAAUP,OAAQD,IAAK,CACnE,IAAIS,EAAS9D,MAAM4D,oBAAoBC,UAAUR,GAE9CS,EAAOzD,OAAO0D,WACfD,EAAOzD,OAAO0D,WAAahD,KAAKV,OAAO0D,WAEvCD,EAAOE,SAAS,CACdC,IAAK1B,EAAS2B,UACdC,MAAO5B,EAAS4B,MAChBC,YAAa7B,EAAS6B,YACtBC,SAAU9B,EAAS+B,mBAO7BtC,UAAW,SAAUO,GAEnBvC,MAAMuE,WAAWhC,EAAS2B,c\",\"sources\":[\"webpack:///./QuickPostWidget.js\"],\"sourcesContent\":[\"(function ($) {\\n  /** global: Craft */\\n  /** global: Garnish */\\n  Craft.QuickPostWidget = Garnish.Base.extend({\\n    params: null,\\n    initFields: null,\\n    formHtml: null,\\n    $widget: null,\\n    $form: null,\\n    $spinner: null,\\n    $errorList: null,\\n    loading: false,\\n\\n    init: function (widgetId, params, initFields, formHtml) {\\n      this.params = params;\\n      this.initFields = initFields;\\n      this.formHtml = formHtml;\\n      this.$widget = $('#widget' + widgetId);\\n\\n      this.initForm(this.$widget.find('form:first'));\\n    },\\n\\n    initForm: function ($form) {\\n      this.$form = $form;\\n      this.$spinner = this.$form.find('.spinner');\\n\\n      this.initFields();\\n\\n      var $menuBtn = this.$form.find('> .buttons > .btngroup > .menubtn'),\\n        $saveAndContinueEditingBtn = $menuBtn\\n          .data('menubtn')\\n          .menu.$container.find('> ul > li > a');\\n\\n      $menuBtn.menubtn();\\n\\n      this.addListener(this.$form, 'submit', 'handleFormSubmit');\\n      this.addListener(\\n        $saveAndContinueEditingBtn,\\n        'click',\\n        'saveAndContinueEditing'\\n      );\\n    },\\n\\n    handleFormSubmit: function (event) {\\n      event.preventDefault();\\n\\n      this.save(this.onSave.bind(this));\\n    },\\n\\n    saveAndContinueEditing: function () {\\n      this.save(this.gotoEntry.bind(this));\\n    },\\n\\n    save: function (callback) {\\n      if (this.loading) {\\n        return;\\n      }\\n\\n      this.loading = true;\\n      this.$spinner.removeClass('hidden');\\n\\n      var formData = Garnish.getPostData(this.$form),\\n        data = $.extend({enabled: 1}, formData, this.params);\\n\\n      Craft.postActionRequest(\\n        'entries/save-entry',\\n        data,\\n        (response, textStatus) => {\\n          this.loading = false;\\n          this.$spinner.addClass('hidden');\\n\\n          if (this.$errorList) {\\n            this.$errorList.children().remove();\\n          }\\n\\n          if (textStatus === 'success') {\\n            if (response.success) {\\n              Craft.cp.displayNotice(Craft.t('app', 'Entry saved.'));\\n              callback(response);\\n            } else {\\n              Craft.cp.displayError(Craft.t('app', 'Couldn\u2019t save entry.'));\\n\\n              if (response.errors) {\\n                if (!this.$errorList) {\\n                  this.$errorList = $('<ul class=\\\"errors\\\"/>').insertAfter(\\n                    this.$form\\n                  );\\n                }\\n\\n                for (var attribute in response.errors) {\\n                  if (!response.errors.hasOwnProperty(attribute)) {\\n                    continue;\\n                  }\\n\\n                  for (var i = 0; i < response.errors[attribute].length; i++) {\\n                    var error = response.errors[attribute][i];\\n                    $('<li>' + error + '</li>').appendTo(this.$errorList);\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      );\\n    },\\n\\n    onSave: function (response) {\\n      // Reset the widget\\n      var $newForm = $(this.formHtml);\\n      this.$form.replaceWith($newForm);\\n      Craft.initUiElements($newForm);\\n      this.initForm($newForm);\\n\\n      // Are there any Recent Entries widgets to notify?\\n      if (typeof Craft.RecentEntriesWidget !== 'undefined') {\\n        for (var i = 0; i < Craft.RecentEntriesWidget.instances.length; i++) {\\n          var widget = Craft.RecentEntriesWidget.instances[i];\\n          if (\\n            !widget.params.sectionId ||\\n            widget.params.sectionId == this.params.sectionId\\n          ) {\\n            widget.addEntry({\\n              url: response.cpEditUrl,\\n              title: response.title,\\n              dateCreated: response.dateCreated,\\n              username: response.authorUsername,\\n            });\\n          }\\n        }\\n      }\\n    },\\n\\n    gotoEntry: function (response) {\\n      // Redirect to the entry's edit URL\\n      Craft.redirectTo(response.cpEditUrl);\\n    },\\n  });\\n})(jQuery);\\n\"],\"names\":[\"$\",\"jQuery\",\"Craft\",\"QuickPostWidget\",\"Garnish\",\"Base\",\"extend\",\"params\",\"initFields\",\"formHtml\",\"$widget\",\"$form\",\"$spinner\",\"$errorList\",\"loading\",\"init\",\"widgetId\",\"this\",\"initForm\",\"find\",\"$menuBtn\",\"$saveAndContinueEditingBtn\",\"data\",\"menu\",\"$container\",\"menubtn\",\"addListener\",\"handleFormSubmit\",\"event\",\"preventDefault\",\"save\",\"onSave\",\"bind\",\"saveAndContinueEditing\",\"gotoEntry\",\"callback\",\"removeClass\",\"formData\",\"getPostData\",\"enabled\",\"postActionRequest\",\"response\",\"textStatus\",\"addClass\",\"children\",\"remove\",\"success\",\"cp\",\"displayNotice\",\"t\",\"displayError\",\"errors\",\"attribute\",\"insertAfter\",\"hasOwnProperty\",\"i\",\"length\",\"error\",\"appendTo\",\"$newForm\",\"replaceWith\",\"initUiElements\",\"RecentEntriesWidget\",\"instances\",\"widget\",\"sectionId\",\"addEntry\",\"url\",\"cpEditUrl\",\"title\",\"dateCreated\",\"username\",\"authorUsername\",\"redirectTo\"],\"sourceRoot\":\"\"}", "(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.QuickPostWidget = Garnish.Base.extend({\n    params: null,\n    initFields: null,\n    formHtml: null,\n    $widget: null,\n    $form: null,\n    $spinner: null,\n    $errorList: null,\n    loading: false,\n\n    init: function (widgetId, params, initFields, formHtml) {\n      this.params = params;\n      this.initFields = initFields;\n      this.formHtml = formHtml;\n      this.$widget = $('#widget' + widgetId);\n\n      this.initForm(this.$widget.find('form:first'));\n    },\n\n    initForm: function ($form) {\n      this.$form = $form;\n      this.$spinner = this.$form.find('.spinner');\n\n      this.initFields();\n\n      var $menuBtn = this.$form.find('> .buttons > .btngroup > .menubtn'),\n        $saveAndContinueEditingBtn = $menuBtn\n          .data('menubtn')\n          .menu.$container.find('> ul > li > a');\n\n      $menuBtn.menubtn();\n\n      this.addListener(this.$form, 'submit', 'handleFormSubmit');\n      this.addListener(\n        $saveAndContinueEditingBtn,\n        'click',\n        'saveAndContinueEditing'\n      );\n    },\n\n    handleFormSubmit: function (event) {\n      event.preventDefault();\n\n      this.save(this.onSave.bind(this));\n    },\n\n    saveAndContinueEditing: function () {\n      this.save(this.gotoEntry.bind(this));\n    },\n\n    save: function (callback) {\n      if (this.loading) {\n        return;\n      }\n\n      this.loading = true;\n      this.$spinner.removeClass('hidden');\n\n      var formData = Garnish.getPostData(this.$form),\n        data = $.extend({enabled: 1}, formData, this.params);\n\n      Craft.postActionRequest(\n        'entries/save-entry',\n        data,\n        (response, textStatus) => {\n          this.loading = false;\n          this.$spinner.addClass('hidden');\n\n          if (this.$errorList) {\n            this.$errorList.children().remove();\n          }\n\n          if (textStatus === 'success') {\n            if (response.success) {\n              Craft.cp.displayNotice(Craft.t('app', 'Entry saved.'));\n              callback(response);\n            } else {\n              Craft.cp.displayError(Craft.t('app', 'Couldn\u2019t save entry.'));\n\n              if (response.errors) {\n                if (!this.$errorList) {\n                  this.$errorList = $('<ul class=\"errors\"/>').insertAfter(\n                    this.$form\n                  );\n                }\n\n                for (var attribute in response.errors) {\n                  if (!response.errors.hasOwnProperty(attribute)) {\n                    continue;\n                  }\n\n                  for (var i = 0; i < response.errors[attribute].length; i++) {\n                    var error = response.errors[attribute][i];\n                    $('<li>' + error + '</li>').appendTo(this.$errorList);\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    },\n\n    onSave: function (response) {\n      // Reset the widget\n      var $newForm = $(this.formHtml);\n      this.$form.replaceWith($newForm);\n      Craft.initUiElements($newForm);\n      this.initForm($newForm);\n\n      // Are there any Recent Entries widgets to notify?\n      if (typeof Craft.RecentEntriesWidget !== 'undefined') {\n        for (var i = 0; i < Craft.RecentEntriesWidget.instances.length; i++) {\n          var widget = Craft.RecentEntriesWidget.instances[i];\n          if (\n            !widget.params.sectionId ||\n            widget.params.sectionId == this.params.sectionId\n          ) {\n            widget.addEntry({\n              url: response.cpEditUrl,\n              title: response.title,\n              dateCreated: response.dateCreated,\n              username: response.authorUsername,\n            });\n          }\n        }\n      }\n    },\n\n    gotoEntry: function (response) {\n      // Redirect to the entry's edit URL\n      Craft.redirectTo(response.cpEditUrl);\n    },\n  });\n})(jQuery);\n"], "fixing_code": ["# Release Notes for Craft CMS 3.x\n\n## Unreleased\n\n- Content tab menus now reveal when a tab contains validation errors, and invalid tabs\u2019 menu options get the same warning icon treatment as inline tabs do. ([#12971](https://github.com/craftcms/cms/issues/12971))\n- Element index bulk action spinners are now centered on the viewport. ([#12972](https://github.com/craftcms/cms/issues/12972))\n- Fixed a bug where Assets fields weren\u2019t respecting their View Mode setting when viewing entry revisions. ([#12948](https://github.com/craftcms/cms/issues/12948))\n- Fixed a bug where some relational fields were showing duplicate selected relations. ([#12949](https://github.com/craftcms/cms/issues/12949))\n- Fixed a bug where asset pagination was broken when there was more than 100 subfolders. ([#12969](https://github.com/craftcms/cms/issues/12969))\n- Fixed a bug where entry index pages\u2019 \u201cRevision Notes\u201d and \u201cLast Edited By\u201d columns weren\u2019t getting populated for disabled entries. ([#12981](https://github.com/craftcms/cms/issues/12981))\n- Fixed a JavaScript error that occurred when closing a disclosure menu within Live Preview. ([#12992](https://github.com/craftcms/cms/issues/12992))\n- Fixed a bug where assets were getting relocated to the root volume folder when renamed. ([#12995](https://github.com/craftcms/cms/issues/12995))\n- Fixed a bug where it wasn\u2019t possible to preview entries on another domain when the system was offline. ([#12979](https://github.com/craftcms/cms/issues/12979))\n- Fixed an XSS vulnerability.\n\n## 3.8.5 - 2023-03-21\n\n- Fixed a bug where relation data was getting deleted when running garbage collection on PostgreSQL. ([#9905](https://github.com/craftcms/cms/issues/9905))\n- Fixed a bug where Lightswitch fields\u2019 \u201cOFF Label\u201d and \u201cON Label\u201d settings weren\u2019t getting translated. ([#12942](https://github.com/craftcms/cms/issues/12942))\n- Fixed a bug where `craft\\events\\DefineUserContentSummaryEvent::$userId` was never set for `craft\\controllers\\EVENT_DEFINE_CONTENT_SUMMARY` events. ([#12944](https://github.com/craftcms/cms/issues/12944))\n- Updated svg-sanitizer to 0.16. ([#12943](https://github.com/craftcms/cms/issues/12943))\n\n## 3.8.4 - 2023-03-20\n\n- The `|json_encode` Twig filter now calls `craft\\helpers\\Json::encode()` internally, improving error handling. ([#12919](https://github.com/craftcms/cms/issues/12919))\n- `craft\\helpers\\Json::encode()` no longer sets the `JSON_UNESCAPED_SLASHES` flag by default.\n- Fixed a JavaScript error that occurred when resolving an asset move conflict. ([#12920](https://github.com/craftcms/cms/issues/12920))\n- Fixed a bug where volume subfolders were being shown when viewing soft-deleted assets. ([#12927](https://github.com/craftcms/cms/issues/12927))\n- Fixed a bug where structure data was getting deleted when running garbage collection on PostgreSQL. ([#12925](https://github.com/craftcms/cms/issues/12925))\n\n## 3.8.3 - 2023-03-16\n\n- Customize Sources modals no longer hide when the <kbd>Esc</kbd> key is pressed on the surrounding area is clicked on. ([#12895](https://github.com/craftcms/cms/issues/12895))\n- Added `craft\\helpers\\FileHelper::uniqueName()`.\n- Fixed an error that occurred when uploading an asset with a filename over 250 characters long. ([#12889](https://github.com/craftcms/cms/issues/12889))\n- Fixed an error that could occur when preparing licensing alerts, if any licenses were invalid. ([#12899](https://github.com/craftcms/cms/issues/12899))\n- Fixed a bug where it wasn\u2019t possible to drag nested Neo blocks. ([#12896](https://github.com/craftcms/cms/issues/12896))\n- Fixed a bug where fields with reduced widths in Matrix blocks were becoming full-width while dragged. ([#12909](https://github.com/craftcms/cms/issues/12909))\n- Fixed a bug where multi-edition plugins weren\u2019t showing their edition labels within the Plugin Store cart. ([#12910](https://github.com/craftcms/cms/issues/12910))\n\n## 3.8.2 - 2023-03-14\n\n- Fixed a bug where it wasn\u2019t always possible to access entry or category edit pages if the `slugWordSeparator` config setting was set to `/`. ([#12871](https://github.com/craftcms/cms/issues/12871))\n- Fixed a bug where `craft\\helpers\\Html::parseTagAttribute()` wasn\u2019t decoding attribute values, which could lead to double-encoded attributes, e.g. when using the `|attr` filter. ([#12887](https://github.com/craftcms/cms/issues/12887))\n- Fixed XSS vulnerabilities.\n- Fixed an SSRF vulnerability.\n\n## 3.8.1 - 2023-03-09\n\n- Fixed a bug where it wasn\u2019t possible to select subfolders on the Assets index page. ([#12802](https://github.com/craftcms/cms/issues/12802))\n- Fixed a bug where element index search inputs were losing focus when the element listing was updated. ([#12846](https://github.com/craftcms/cms/issues/12846))\n- Fixed a bug where the database driver was being referenced as \u201cMySQL\u201d when using MariaDB. ([#12827](https://github.com/craftcms/cms/issues/12827))\n- Fixed a bug where users weren\u2019t able to select assets within Assets fields, if they didn\u2019t have full permissions for the volume. ([#12851](https://github.com/craftcms/cms/issues/12851))\n- Fixed a bug where the Assets index page\u2019s URL would get updated incorrectly when renaming a subfolder.\n- Added `craft\\db\\Connection::getDriverLabel()`.\n\n## 3.8.0 - 2023-03-08\n\n### Content Management\n- Volume subfolders are now displayed within the element listing pane on asset indexes, rather than as nested sources in the sidebar. ([#12558](https://github.com/craftcms/cms/pull/12558), [#9171](https://github.com/craftcms/cms/discussions/9171), [#5809](https://github.com/craftcms/cms/issues/5809))\n- Asset indexes now display the current subfolder path above the element listing. ([#12558](https://github.com/craftcms/cms/pull/12558))\n- Assets and folders can now be drag-and-dropped simultaneously. ([#12792](https://github.com/craftcms/cms/pull/12792))\n- Reduced the likelihood of accidentally triggering an asset drag operation. ([#12792](https://github.com/craftcms/cms/pull/12792))\n- Reduced the likelihood of accidentally dropping dragged assets/folders on an unintended target. ([#12792](https://github.com/craftcms/cms/pull/12792))\n- It\u2019s now possible to move volume folders and assets to a new location via a new \u201cMove\u2026\u201d bulk element action, rather than via drag-and-drop interactions. ([#12558](https://github.com/craftcms/cms/pull/12558))\n- It\u2019s now possible to sort asset indexes by image width and height. ([#12653](https://github.com/craftcms/cms/pull/12653))\n\n### Administration\n- Most licensing isuses are now consolidated into a single control panel alert, with a button to resolve them all with a single purchase on Craft Console. ([#12768](https://github.com/craftcms/cms/pull/12768))\n- Added the `users/unlock` console command. ([#12345](https://github.com/craftcms/cms/discussions/12345))\n- The `utils/prune-revisions` console command now has a `--section` option. ([#8783](https://github.com/craftcms/cms/discussions/8783))\n\n### Development\n- Added the `revisionNotes` field to elements queried via GraphQL. ([#12610](https://github.com/craftcms/cms/issues/12610))\n- `craft\\elements\\Asset::getMimeType()` now has a `$transform` argument, and assets\u2019 `mimeType` GraphQL fields now support a `@transform` directive. ([#12269](https://github.com/craftcms/cms/discussions/12269), [#12397](https://github.com/craftcms/cms/pull/12397), [#12522](https://github.com/craftcms/cms/pull/12522))\n\n### Extensibility\n- Added support for private plugins. ([#12716](https://github.com/craftcms/cms/pull/12716), [#8908](https://github.com/craftcms/cms/discussions/8908))\n- Element source definitions can now include a `defaultSourcePath` key.\n- Added `craft\\base\\ApplicationTrait::getEditionHandle()`.\n- Added `craft\\base\\Element::indexElements()`.\n- Added `craft\\base\\ElementInterface::findSource()`.\n- Added `craft\\base\\ElementInterface::indexElementCount()`.\n- Added `craft\\db\\Migration::dropForeignKeyIfExists()`.\n- Added `craft\\models\\VolumeFolder::getHasChildren()`.\n- Added `craft\\models\\VolumeFolder::setHasChildren()`.\n- Added `craft\\services\\Assets::createFolderQuery()`.\n- Added `craft\\services\\Assets::foldersExist()`.\n- Added `craft\\services\\Search::normalizeSearchQuery()`.\n- Added `Craft.AssetMover`.\n- Added `Craft.BaseElementIndex::getSourcePathActionLabel()`.\n- Added `Craft.BaseElementIndex::getSourcePathActions()`.\n- Added `Craft.BaseElementIndex::getSourcePathLabel()`.\n- Added `Craft.BaseElementIndex::onSourcePathChange()`.\n- Added `Craft.BaseElementIndex::sourcePath`.\n- Added `Craft.BaseElementSelectorModal::getElementIndexParams()`.\n- Added `Craft.BaseElementSelectorModal::getIndexSettings()`.\n- Added `Craft.BaseElementSelectorModal::hasSelection()`.\n- Added `Craft.VolumeFolderSelectorModal`.\n- Deprecated `craft\\helpers\\Assets::sortFolderTree()`.\n- Deprecated `craft\\services\\Assets::getFolderTreeByFolderId()`.\n- Deprecated `craft\\services\\Assets::getFolderTreeByVolumeIds`.\n- The custom `activate` jQuery event will now trigger when the <kbd>Return</kbd> key is pressed.\n- The custom `activate` jQuery event will no longer trigger for <kbd>Ctrl</kbd>/<kbd>Command</kbd>-clicks.\n\n### System\n- Fixed a database deadlock error that could occur when updating a relation or structure position for an element that was simultaneously being saved. ([#9905](https://github.com/craftcms/cms/issues/9905))\n\n## 3.7.68 - 2023-03-07\n\n- Fixed a bug where `craft\\events\\RegisterElementSourcesEvent::$context` wasn\u2019t always set to `modal` when defining the available element sources for an element selection modal.\n- Fixed a styling bug where multi-line checkbox labels within the Customize Sources modal weren\u2019t wrapping properly. ([#12717](https://github.com/craftcms/cms/issues/12717))\n- Fixed a bug where asset thumbnails within collapsed Matrix blocks weren\u2019t loading when the block was expanded. ([#12720](https://github.com/craftcms/cms/issues/12720))\n- Fixed a bug where custom fields\u2019 database columns would get deleted when applying project config changes, if the field type wasn\u2019t present. ([#12760](https://github.com/craftcms/cms/issues/12760))\n- Fixed a bug where Assets, Categories, and Tags fields weren\u2019t respecting their \u201cAllow self relations\u201d settings. ([#12769](https://github.com/craftcms/cms/issues/12769))\n- Fixed a bug where dynamically-generated entry titles weren\u2019t always generated with the site\u2019s formatting locale in place. ([12780](https://github.com/craftcms/cms/issues/12780))\n- Fixed a bug where element titles weren\u2019t getting a pointer cursor or underlines on hover, when selected on an element index page.\n- Fixed a bug where it wasn\u2019t possible to close modals that were opened by a custom select menu via the `<kbd>Esc</kbd>` key. ([#12814](https://github.com/craftcms/cms/pull/12814))\n- Fixed an XSS vulnerability.\n\n## 3.7.67 - 2023-02-17\n\n- Fixed a bug where clicking on the scrollbar of a disclosure menu would close it. ([#12681](https://github.com/craftcms/cms/issues/12681))\n- Fixed an error that could occur when loading the Plugin Store, if there wasn\u2019t a `.env` file. ([#12687](https://github.com/craftcms/cms/issues/12687))\n\n## 3.7.66 - 2023-02-14\n\n- HTML Purifier now allows `oembed` tags. ([ckeditor#59](https://github.com/craftcms/ckeditor/issues/59))\n- Added `craft\\htmlpurifier\\VideoEmbedUrlDef`.\n- Fixed a bug where entries that aren\u2019t propagated to the primary site weren\u2019t showing revision notes. ([#12641](https://github.com/craftcms/cms/issues/12641))\n- Fixed a bug where HTML tags weren\u2019t getting stripped from auto-generated Handle and URI Format setting values.\n- Fixed a JavaScript error that could occur if an object with `null` values was passed to `Craft.compare()`.\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::toArray()` was calling getter methods whose names conflicted with custom field handles. ([#12635](https://github.com/craftcms/cms/pull/12635))\n\n## 3.7.65.2 - 2023-02-08\n\n- Fixed a PHP error that could occur if relational fields were getting eager-loaded for elements that the fields didn\u2019t belong to. ([#12648](https://github.com/craftcms/cms/issues/12648))\n\n## 3.7.65.1 - 2023-02-08\n\n- Fixed a PHP error that occurred after performing a Composer action within Craft. ([#12647](https://github.com/craftcms/cms/issues/12647))\n- Fixed a bug where element attributes weren\u2019t getting eager-loaded. ([#12646](https://github.com/craftcms/cms/pull/12646), [#12645](https://github.com/craftcms/cms/issues/12645))\n\n## 3.7.65 - 2023-02-07\n\n- Updated Composer to 2.2.19, fixing a PHP error that could occur when performing a Composer action within Craft, when the autoload classmap was generated with Composer 2.5. ([#12482](https://github.com/craftcms/cms/issues/12482))\n- Fixed a bug where Matrix blocks weren\u2019t getting eager-loaded. ([#12631](https://github.com/craftcms/cms/issues/12631))\n- Fixed a PHP error that could occur when calling `craft\\services\\Assets::getAllDescendantFolders()` for the root folder. ([craftcms/feed-me#1231](https://github.com/craftcms/feed-me/issues/1231))\n\n## 3.7.64.1 - 2023-02-05\n\n- Fixed a bug where `craft\\behaviors\\CustomFieldBehavior::$owner` was getting nullified by `craft\\base\\Element::fieldByHandle()`. ([#12624](https://github.com/craftcms/cms/issues/12624))\n\n## 3.7.64 - 2023-02-03\n\n- Improved the performance of the \u201cGenerating pending image transforms\u201d queue job. ([#12274](https://github.com/craftcms/cms/issues/12274))\n- Added more reserved field handles to avoid conflicts with `craft\\base\\Element` properties. ([#12577](https://github.com/craftcms/cms/issues/12577))\n- Control panel requests no longer override the `pageTrigger` config setting value to `'p'`. ([#12598](https://github.com/craftcms/cms/issues/12598), [#12614](https://github.com/craftcms/cms/pull/12614))\n- Fixed field status badge styling in some contexts. ([#12403](https://github.com/craftcms/cms/issues/12403))\n- Fixed a bug where exporting elements with multiple field layouts as a CSV file using the \u201cExpanded\u201d export type would result in mismatched column values.\n- Fixed a bug where cancelling a conflicting volume folder move would result in the moved folder getting deleted.\n- Fixed a bug where Date and Number fields could be misinterpreted in category Live Preview requests, if the site\u2019s language used different date/number formats than the user\u2019s formatting locale.\n- Fixed a bug where the horizontal scroll position wasn\u2019t being retained when refreshing Live Preview. ([#12504](https://github.com/craftcms/cms/issues/12504))\n- Fixed a bug where HTML tags within field labels, instructions, tips, and warnings weren\u2019t always getting escaped.\n- Fixed a bug where the sidebar scroll position wasn\u2019t retained when selecting a new source on element index pages. ([#12523](https://github.com/craftcms/cms/issues/12523))\n- Fixed a bug where `resave/*` commands\u2019 output didn\u2019t take the offset into account. ([#12526](https://github.com/craftcms/cms/issues/12526))\n- Fixed a bug where warnings were getting logged for video assets that were \u201cmissing\u201d their dimensions.\n- Fixed a bug where `craft\\services\\Assets::getAllDescendantFolders()` could return unexpected results for folders that contained an underscore.\n- Fixed a bug where accessing a custom field\u2019s magic property on an element would return the field\u2019s raw database value rather than `null`, if it didn\u2019t belong to the element\u2019s field layout anymore. ([#12539](https://github.com/craftcms/cms/issues/12539), [#12578](https://github.com/craftcms/cms/pull/12578))\n- Fixed a bug where `craft\\image\\Raster::getIsTransparent()` wasn\u2019t working. ([#12565](https://github.com/craftcms/cms/issues/12565))\n- Fixed a bug where the component name comments in project config YAML files would always lag behind the current project config a little. ([#12576](https://github.com/craftcms/cms/issues/12576), [#12581](https://github.com/craftcms/cms/pull/12581))\n- Fixed a SQL error that occurred when creating a database backup using the default backup command, when running MySQL 5.7.41+ or 8.0.32+. ([#12557](https://github.com/craftcms/cms/issues/12557), [#12560](https://github.com/craftcms/cms/pull/12560))\n- Fixed a bug where database backups weren\u2019t respecting SSL database connection settings if they were specified when using MySQL. ([#10351](https://github.com/craftcms/cms/issues/10351), [#11753](https://github.com/craftcms/cms/issues/11753), [#12596](https://github.com/craftcms/cms/pull/12596))\n- Fixed a bug where element indexes could stop showing their loading spinner prematurely if the element listing needed to be reloaded multiple times in rapid succession. ([#12595](https://github.com/craftcms/cms/issues/12595))\n- Fixed a bug where element indexes would show show an expand/collapse toggle for structured elements that only had unsaved draft children, which aren\u2019t actually shown. ([#11253](https://github.com/craftcms/cms/issues/11253))\n- Added `craft\\helpers\\Db::escapeForLike()`.\n- Added `craft\\web\\twig\\variables\\Paginate::$pageTrigger`. ([#12614](https://github.com/craftcms/cms/pull/12614))\n- `craft\\services\\Assets::getAllDescendantFolders()` now has a `$withParent` argument, which can be passed `false` to omit the parent folder from the results. ([#12536](https://github.com/craftcms/cms/issues/12536))\n- Deprecated `craft\\helpers\\DateTimeHelper::timeZoneAbbreviation()`.\n- Deprecated `craft\\helpers\\DateTimeHelper::timeZoneOffset()`.\n\n## 3.7.63.1 - 2023-01-09\n\n- Fixed a bug where editing certain Matrix/Neo/Super Table fields could result in content loss. ([#12445](https://github.com/craftcms/cms/issues/12445))\n\n## 3.7.63 - 2023-01-04\n\n- Template caching is no longer enabled for tokenized requests. ([#12458](https://github.com/craftcms/cms/issues/12458))\n- Elisions are now stripped from search keywords. ([#12467](https://github.com/craftcms/cms/issues/12467), [#12474](https://github.com/craftcms/cms/pull/12474))\n- Added support for HEIC/HEIF images. ([#9115](https://github.com/craftcms/cms/discussions/9115))\n- The `allowedFileExtensions` config setting now includes `heic`, `heif`, and `hevc` by default. ([#12490](https://github.com/craftcms/cms/discussions/12490))\n- It\u2019s now possible to assign aliases `children` fields queried via GraphQL. ([#12494](https://github.com/craftcms/cms/pull/12494))\n- Added `craft\\helpers\\Image::isWebSafe()`.\n- Added `craft\\services\\Images::getSupportsHeic()`.\n- `Craft.MatrixInput` now fires `blockSortDragStop`, `beforeMoveBlockUp`, `moveBlockUp`, `beforeMoveBlockDown`, and `moveBlockDown` events. ([#12498](https://github.com/craftcms/cms/pull/12498))\n- Fixed an error that could occur when processing template caches in a console request, if a globally-scoped template cache was processed before it.\n- Fixed a bug where some custom field property types in `craft\\behaviors\\CustomFieldBehavior` were incorrect.\n- Fixed an error that could occur if a Matrix sub-field\u2019s handle was too long. ([#12422](https://github.com/craftcms/cms/issues/12422))\n- Updated Imagine to 1.3.3.\n\n## 3.7.62 - 2022-12-13\n\n- Fixed a bug where it wasn\u2019t possible to enter `0` in Number fields and numeric column cells within editable tables, using certain keyboard layouts. ([#12412](https://github.com/craftcms/cms/issues/12412))\n- Fixed a JavaScript error that could occur when autosaving an entry draft. ([#12445](https://github.com/craftcms/cms/issues/12445))\n- Added `Craft.filterInputVal()`.\n- Added `Craft.filterNumberInputVal()`.\n\n## 3.7.61 - 2022-11-17\n\n- Fixed an error that occurred if an arrow function was passed to the `|sort` Twig filter. ([#12334](https://github.com/craftcms/cms/issues/12334))\n- Fixed a bug where nested fields set to numbers could be inadvertently changed when an entry draft was created.\n- `craft\\services\\Fields::getFieldsWithContent()` and `getFieldsWithoutContent()` now have `$context` arguments.\n\n## 3.7.60 - 2022-11-16\n\n- Fixed an information disclosure vulnerability.\n- Fixed an XSS vulnerability.\n- Fixed a bug where `resave/*` commands weren\u2019t catching exceptions thrown when applying the `--set` and `--to` options. ([#12262](https://github.com/craftcms/cms/issues/12262))\n- Fixed a bug where the `|group` Twig filter was logging a deprecation warning when passed an element query.\n- Fixed a bug where `craft\\elements\\Entry::getIsEditable()` was returning `false` for enabled entries, if the logged-in user had the \u201cPublish live changes\u201d permission but not \u201cPublish live changes for other authors\u2019 entries\u201d. ([#12315](https://github.com/craftcms/cms/issues/12315))\n- Fixed a bug where element indexes were showing the labels of empty Dropdown options when selected. ([#12319](https://github.com/craftcms/cms/issues/12319))\n- Fixed an error that occurred when saving an entry via GraphQL, if a parent entry was assigned that didn\u2019t exist on the requested site. ([#12291](https://github.com/craftcms/cms/issues/12291))\n- Fixed a bug where fields set to numbers could be inadvertently changed when an entry draft was created.\n- Added `craft\\services\\Fields::getFieldsWithoutContent()`.\n\n## 3.7.59 - 2022-10-27\n\n- Asset folder and file names are now converted to ASCII using the primary site\u2019s language for character mappings, regardless of the current user\u2019s preferred language, when the `convertFilenamesToAscii` config setting is enabled. ([#12207](https://github.com/craftcms/cms/discussions/12207))\n- Fixed a JavaScript 404 error that occurred when users\u2019 Language was set to Chinese. ([#12194](https://github.com/craftcms/cms/issues/12194))\n- Fixed an error that could occur during garbage collection, if any nested volume folders were missing their path. ([#12195](https://github.com/craftcms/cms/issues/12195))\n\n## 3.7.58 - 2022-10-25\n\n### Fixed\n- Fixed a bug where Entry URI Format and Template inputs were editable within sections\u2019 Site Settings tables, for disabled sites.\n\n## 3.7.57 - 2022-10-18\n\n### Fixed\n- Fixed an error that could occur when running tests. ([#12088](https://github.com/craftcms/cms/issues/12088))\n- Fixed a bug where the \u201cYour session has ended\u201d modal could be shown on the control panel\u2019s login page. ([#12121](https://github.com/craftcms/cms/issues/12121))\n- Fixed an error that could occur in the control panel. ([#12133](https://github.com/craftcms/cms/issues/12133))\n- Fixed a bug where image transforms that used the `fit` mode but didn\u2019t specify a width or height weren\u2019t getting their missing dimension set on the asset. ([#12137](https://github.com/craftcms/cms/issues/12137))\n\n## 3.7.56 - 2022-10-11\n\n### Added\n- Added the `--as-json` option to the `help` command. ([#12017](https://github.com/craftcms/cms/pull/12017), [#12074](https://github.com/craftcms/cms/pull/12074))\n- Added `craft\\helpers\\ElementHelper::isAttributeEmpty()`.\n- Added `craft\\queue\\jobs\\ResaveElements::$ifEmpty`.\n- Added `craft\\queue\\jobs\\ResaveElements::$set`.\n- Added `craft\\queue\\jobs\\ResaveElements::$to`.\n- Added `craft\\queue\\jobs\\ResaveElements::$touch`.\n\n### Changed\n- When passing a PHP callback function to the `--to` option of a `resave/*` command, the `$element` argument is now optional.\n\n### Deprecated\n- Deprecated `craft\\web\\assets\\focusvisible\\FocusVisibleAsset`. ([#12037](https://github.com/craftcms/cms/pull/12037))\n\n### Fixed\n- Fixed a bug where `resave/*` commands weren\u2019t respecting the `--set`, `--to`, or `--touch` options when `--queue` was passed. ([#11974](https://github.com/craftcms/cms/issues/11974))\n- Fixed an error that could occur when passing an element query to a `relatedTo` param, if the parent element query contained any closures. ([#11981](https://github.com/craftcms/cms/issues/11981))\n- Fixed a bug where unsaved drafts could be unintentionally deleted when saved, if a plugin or module was blocking the save via `EVENT_BEFORE_SAVE`. ([#12015](https://github.com/craftcms/cms/issues/12015))\n- Fixed a bug where \u201cPropagating tags\u201d jobs would fail if two tags had similar titles.\n- Fixed a bug where image transforms weren\u2019t getting sized correctly in some cases when `upscaleImages` was disabled. ([#12023](https://github.com/craftcms/cms/issues/12023))\n- Fixed a bug where table cells within Redactor fields could appear to be focused when they weren\u2019t. ([#12001](https://github.com/craftcms/cms/issues/12001), [#12037](https://github.com/craftcms/cms/pull/12037))\n- Fixed a bug where alerts saying a folder can\u2019t be renamed due to a naming conflict were showing the old folder name instead of the new one. ([#12049](https://github.com/craftcms/cms/pull/12049))\n- Fixed a bug where Edit Entry pages were listing other authors\u2019 drafts in the revision menu, for users who didn\u2019t have permission to edit them.\n- Fixed a bug where some GraphQL results could be missing if multiple sets of nested elements were being queried using the same alias. ([#11982](https://github.com/craftcms/cms/issues/11982))\n\n### Security\n- Fixed information disclosure vulnerabilities.\n\n## 3.7.55.3 - 2022-10-03\n\n### Security\n- Updated Twig to 2.15. ([#12022](https://github.com/craftcms/cms/issues/12022))\n\n## 3.7.55.2 - 2022-09-22\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.55.1 - 2022-09-21\n\n### Fixed\n- Fixed a bug where the \u201cNew category\u201d button could be missing from the Categories index page. ([#11977](https://github.com/craftcms/cms/issues/11977))\n- Fixed a bug where `Craft::t()` and the `|t` Twig filter were modifying digit-dash-digit sequences. ([#11980](https://github.com/craftcms/cms/issues/11980))\n- Fixed PHP errors that occurred if `webonyx/graphql-php` 14.11.17 was installed. ([#11979](https://github.com/craftcms/cms/issues/11979), [webonyx/graphql-php#1221](https://github.com/webonyx/graphql-php/issues/1221))\n\n## 3.7.55 - 2022-09-20\n\n### Added\n- Added `craft\\helpers\\Image::targetDimensions()`.\n\n### Removed\n- Removed the Punycode PHP library. ([#11948](https://github.com/craftcms/cms/issues/11948))\n\n### Fixed\n- Fixed a bug where image transforms weren\u2019t always getting applied properly to all animation frames. ([#11937](https://github.com/craftcms/cms/pull/11937))\n- Fixed a bug where animated WebP images would lose their animation frames when transformed. ([#11937](https://github.com/craftcms/cms/pull/11937))\n- Fixed a bug where image transform dimensions could be calculated incorrectly when `upscaleImages` was `false`. ([#11837](https://github.com/craftcms/cms/issues/11837))\n- Fixed an error that occurred when setting a non-numeric `width` or `height` on an image transform. ([#11837](https://github.com/craftcms/cms/issues/11837))\n- Fixed a bug where `relatedTo*` arguments weren\u2019t supported by `children` fields in GraphQL. ([#11918](https://github.com/craftcms/cms/issues/11918))\n- Fixed a bug where Image Editor and slideout action buttons were obstructed when the Debug Toolbar was enabled. ([#11965](https://github.com/craftcms/cms/issues/11965))\n- Fixed an error that occurred when installing Craft when MySQL\u2019s `sql_require_primary_key` setting was enabled. ([#11374](https://github.com/craftcms/cms/discussions/11374))\n- Fixed a bug where invalid entries could be duplicated via the \u201cSave as a new entry\u201d action, despite the duplication appearing to have failed with validation errors. ([#11959](https://github.com/craftcms/cms/issues/11959))\n- Fixed a PHP error that could occur in a potential race condition when calling  `craft\\helpers\\FileHelper::clearDirectory()`.\n- Fixed a bug where Structure section entries that were duplicated via the \u201cSave as a new entry\u201d action on a provisional draft weren\u2019t being placed within the structure properly.\n- Fixed a bug where element\u2019s `searchScore` properties would be set to `null` when their original score was below 1, rather than rounding to 0 or 1. ([#11973](https://github.com/craftcms/cms/issues/11973))\n\n## 3.7.54 - 2022-09-13\n\n### Changed\n- Control panel menus now automatically reposition themselves when the window is resized.\n- `resave/*` commands now have a `--touch` option. When passed, elements\u2019 `dateUpdated` timestamps will be updated as they\u2019re resaved. ([#11849](https://github.com/craftcms/cms/discussions/11849))\n- Underscores within query param values that begin/end with `*` are now escaped, so they aren\u2019t treated as wildcard characters by the `like` condition. ([#11898](https://github.com/craftcms/cms/issues/11898))\n- `craft\\services\\Elements::resaveElements()` now has a `$touch` argument.\n\n### Fixed\n- Fixed a bug where element caches weren\u2019t being invalidated during garbage collection, so hard-deleted elements could appear to still exist.\n- Fixed an error that could occur when rendering front-end templates if there was a problem connecting to the database. ([#11855](https://github.com/craftcms/cms/issues/11855))\n- Fixed a bug where it was possible to save an asset with a focal point outside its cropped area. ([#11875](https://github.com/craftcms/cms/issues/11875))\n- Fixed a bug where the Assets index page wasn\u2019t handling failed uploads properly. ([#11866](https://github.com/craftcms/cms/issues/11866))\n- Fixed a UI bug where renaming a newly-created volume subfolder didn\u2019t appear to have any effect.\n- Fixed a bug where empty URL fields would be marked as changed, even when no change was made to them. ([#11908](https://github.com/craftcms/cms/issues/11908))\n- Fixed a bug where transforming an animated GIF into a WebP file would only include the first frame. ([#11889](https://github.com/craftcms/cms/issues/11889))\n\n### Security\n- Password inputs no longer temporarily reveal the password when the <kbd>Alt</kbd> key is pressed. ([#11930](https://github.com/craftcms/cms/issues/11930))\n\n## 3.7.53.1 - 2022-08-26\n\n### Fixed\n- Fixed a PHP error that occurred when garbage collection was run on web requests. ([#11829](https://github.com/craftcms/cms/issues/11829))\n\n## 3.7.53 - 2022-08-26\n\n### Added\n- Added `craft\\services\\Gc::removeEmptyTempFolders()`.\n\n### Changed\n- If a plugin\u2019s license key is set to an empty environment variable, its trial license key will now be stored in `.env` rather than the project config. ([#11830](https://github.com/craftcms/cms/issues/11830))\n- Empty subfolders within the temporary upload volume are now removed during garbage collection. ([#10746](https://github.com/craftcms/cms/issues/10746))\n\n### Fixed\n- Fixed a bug where the \u201cEdit files uploaded by other users\u201d volume permission was useless unless the \u201cUpload files\u201d permission had been granted. ([#11818](https://github.com/craftcms/cms/issues/11818))\n- Fixed a bug where the \u201cSave and add another\u201d entry action was being shown for users without the \u201cCreate entries\u201d section permission. ([#11819](https://github.com/craftcms/cms/issues/11819))\n\n## 3.7.52 - 2022-08-23\n\n### Changed\n- Improved console output for the `gc` command.\n- The `gc` command now runs garbage collection for data caches.\n- Exception JSON responses now include `name` and `code` keys. ([#11799](https://github.com/craftcms/cms/discussions/11799))\n\n### Fixed\n- Fixed a bug where `iframeResizer.contentWindow.js` was getting loaded for all preview requests, not just Live Preview, and even when `useIframeResizer` was disabled. ([#11778](https://github.com/craftcms/cms/issues/11778))\n- Fixed a bug where deleted relations and Matrix blocks could persist if the edit form was submitted before they had been fully animated away. ([#11789](https://github.com/craftcms/cms/issues/11789))\n- Fixed a PHP error that could occur if `craft\\services\\Assets::getUserTemporaryUploadFolder()` was called when there was no logged-in user account. ([#11751](https://github.com/craftcms/cms/issues/11751))\n\n## 3.7.51 - 2022-08-09\n\n### Added\n- Added the `project-config/export` command. ([#11733](https://github.com/craftcms/cms/pull/11733))\n\n### Deprecated\n- Deprecated `craft\\services\\Categories::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Globals::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Sections::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Tags::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Users::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n- Deprecated `craft\\services\\Volumes::pruneDeletedField()`. ([#11054](https://github.com/craftcms/cms/discussions/11054), [#9567](https://github.com/craftcms/cms/issues/9567))\n\n### Fixed\n- Fixed a bug where the `project-config/apply` command could appear to end prematurely.\n- Fixed a bug where not all project config changes would be applied if a field or site was deleted. ([#9567](https://github.com/craftcms/cms/issues/9567))\n- Fixed an error that could occur when saving an element to a disabled site. ([#10499](https://github.com/craftcms/cms/issues/10499), [#11741](https://github.com/craftcms/cms/issues/11741))\n- Fixed a bug where `$` characters in database connection passwords weren\u2019t being escaped property when backing up/restoring the database. ([#11750](https://github.com/craftcms/cms/issues/11750))\n- Fixed a bug where system messages provided by Yii weren\u2019t getting translated in some cases. ([#11712](https://github.com/craftcms/cms/issues/11712))\n\n## 3.7.50 - 2022-07-26\n\n### Changed\n- Treating element queries as arrays is no longer deprecated. ([#11625](https://github.com/craftcms/cms/discussions/11625))\n- Using the `|length` filter on an element query is no longer deprecated. ([#11625](https://github.com/craftcms/cms/discussions/11625))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.49 - 2022-07-26\n\n### Added\n- The control panel is now translated into Ukrainian.\n- Added `craft\\helpers\\Template::resolveTemplatePathAndLine()`.\n\n### Changed\n- Deprecation warnings\u2019 stack traces now show source templates\u2019 paths and line numbers.\n- Matrix block previews now show selected option labels rather than their raw values. ([#11659](https://github.com/craftcms/cms/issues/11659))\n- Exception JSON responses now include the previous exception details, recursively. ([#11694](https://github.com/craftcms/cms/discussions/11694))\n\n### Fixed\n- Fixed a bug where deprecation warnings for treating an element query as an array weren\u2019t getting logged with an origin, if they involved Twig\u2019s `|batch` filter. ([#11597](https://github.com/craftcms/cms/issues/11597))\n- Fixed a bug where `{% js %}`, `{% script %}`, and `{% css %}` tags weren\u2019t registering JavaScript and CSS code properly when used within a `{% cache %}` tag that contained an ungenerated image transform. ([#11602](https://github.com/craftcms/cms/issues/11602))\n- Fixed a bug where the \u201cUser saved\u201d notification was translated for the former language, when changing the current user\u2019s language preference.\n- Fixed a JavaScript error that occurred when removing a category from a Categories field, if any of its descendants were selected as well. ([#11641](https://github.com/craftcms/cms/issues/11641))\n- Fixed a bug where links to config settings from **Settings** \u2192 **General** didn\u2019t include the correct setting anchors. ([#11665](https://github.com/craftcms/cms/pull/11665))\n- Fixed styling issues with Live Preview in Firefox.\n\n### Security\n- Fixed an information disclosure vulnerability.\n\n## 3.7.48 - 2022-07-12\n\n### Changed\n- Relation fields now focus on the next related element\u2019s \u201cRemove\u201d button when an element is removed. ([#11577](https://github.com/craftcms/cms/issues/11577))\n\n### Fixed\n- Fixed a bug where Craft\u2019s Composer commands could produce a malformed `composer.json` file. ([#11564](https://github.com/craftcms/cms/issues/11564))\n- Fixed a bug where date range inputs weren\u2019t working on mobile. ([#11571](https://github.com/craftcms/cms/issues/11571))\n- Fixed a bug where the \u201cCraft Support\u201d Dashboard widget wasn\u2019t being labeled properly in the widget settings HUD and delete confirmation dialog. ([#11573](https://github.com/craftcms/cms/discussions/11573))\n- Fixed a bug where treating element queries as arrays wasn\u2019t always logging deprecation warnings.\n- Fixed a bug where the project config cache was getting invalidated on each public GraphQL API request.\n- Fixed a bug where the \u201cStatus\u201d label on Edit User pages was blank for suspended users.\n- Fixed an error that could occur when an image transform was configured with a non-integer width or height. ([#11587](https://github.com/craftcms/cms/issues/11587))\n\n## 3.7.47.1 - 2022-07-06\n\n### Fixed\n- Fixed a bug where asset bundles weren\u2019t getting registered on the front end. ([#11555](https://github.com/craftcms/cms/issues/11555))\n\n## 3.7.47 - 2022-07-05\n\n### Changed\n- Template caching is now supported for console requests, for `{% cache %}` tags that have the `globally` param. ([#11551](https://github.com/craftcms/cms/issues/11551))\n- Updated Composer to 2.2.15. ([#11538](https://github.com/craftcms/cms/issues/11538))\n\n### Fixed\n- Fixed focus styling issues with the Edit Route modal.\n\n## 3.7.46 - 2022-06-28\n\n### Added\n- Added `craft\\fields\\BaseOptionsField::encodeValue()`.\n\n### Changed\n- `canonical` is now a reserved field handle. ([#11503](https://github.com/craftcms/cms/issues/11503))\n- `craft\\fields\\BaseOptionsField::translatedOptions()` now has an `$encode` argument.\n\n### Fixed\n- Fixed a bug where `Garnish.setFocusWithin()` wasn\u2019t working if the first focusable element was a checkbox. ([#11498](https://github.com/craftcms/cms/discussions/11498))\n- Fixed a bug where Matrix blocks could be saved in the wrong order.\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Buttons fields could lose their values if their option values were set to integers. ([#11461](https://github.com/craftcms/cms/issues/11461))\n\n## 3.7.45.2 - 2022-06-24\n\n### Fixed\n- Fixed a SQL error that could occur on MySQL 5. ([#11493](https://github.com/craftcms/cms/issues/11493))\n- Fixed a bug where Craft\u2019s Composer commands weren\u2019t ensuring that `config.allow-plugins.yiisoft/yii2-composer` was `true` in `composer.json`. ([#11399](https://github.com/craftcms/cms/issues/11399))\n\n## 3.7.45.1 - 2022-06-21\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to rename assets.\n- Fixed a bug where a provisional draft could be created for an entry if its form was interacted with before the page had fully initialized. ([#11466](https://github.com/craftcms/cms/issues/11466))\n- Fixed exact phrase searching on PostgreSQL. ([#11486](https://github.com/craftcms/cms/issues/11486))\n\n## 3.7.45 - 2022-06-21\n\n### Changed\n- Improved performance when working with temp asset folders.\n- Temp asset folders are no longer created until they\u2019re actually needed. ([#11427](https://github.com/craftcms/cms/issues/11427))\n- Element index queries are no longer cached if they contain a search term.\n- Search inputs within field layout designers now prevent the containing form from being submitted when the <kbd>Return</kbd> key is pressed. ([#11415](https://github.com/craftcms/cms/discussions/11415))\n\n### Fixed\n- Fixed a bug where element types\u2019 `actions()` methods were getting called for all `element-indexes/*` action requests.\n- Fixed a bug where the `install` command would run non-interactively even if not all needed options were passed, resulting in an error after the database tables had been added. ([#11305](https://github.com/craftcms/cms/issues/11305))\n- Fixed a viewport clipping bug on the control panel\u2019s Login page. ([#11372](https://github.com/craftcms/cms/pull/11372))\n- Fixed a bug where filtering an element query by a relational field using `:empty:`/`:notempty:` wasn\u2019t factoring in the field\u2019s \u201cWhich site should entries be related from?\u201d setting properly.\n- Fixed a bug where filtering an element query by a relational field using `:empty:`/`:notempty:` wasn\u2019t factoring in the source elements\u2019 site IDs, for fields set to manage relations on a per-site basis. ([#11418](https://github.com/craftcms/cms/issues/11418))\n- Fixed a bug where the Temporary Uploads asset source wasn\u2019t including subfolders.\n- Fixed a bug where file upload progress bars weren\u2019t always going away when an upload error occurred.\n- Fixed a bug where Pashto was not being treated as an RTL langauge. ([#11428](https://github.com/craftcms/cms/issues/11428))\n- Fixed a bug where the `upscaleImages` config setting wasn\u2019t being respected for transforms where only a single image dimension was specified. ([#11398](https://github.com/craftcms/cms/issues/11398))\n- Fixed an error that could occur when executing a GraphQL query, if a section didn\u2019t have any entry types. ([#11273](https://github.com/craftcms/cms/issues/11273))\n- Fixed an error that could occur when changing the primary site on installs with a large number of users. ([#11459](https://github.com/craftcms/cms/issues/11459))\n- Fixed a bug where Assets fields within Vizy fields weren\u2019t getting relocated from the user\u2019s temp uploads folder. ([#11462](https://github.com/craftcms/cms/issues/11462))\n\n### Security\n- Environment-aware control panel fields no longer suggest environment variables that begin with `HTTP_`.\n- The Sendmail mailer no longer validates if the Sendmail Command setting is set to an enivornment variable that begins with `HTTP_`.\n\n## 3.7.44 - 2022-06-03\n\n### Changed\n- Read/write splitting is now disabled for all console requests.\n- The `db/restore` command now prompts to clear data caches after the import is complete. ([#11327](https://github.com/craftcms/cms/issues/11327))\n- Entry queries no longer factor in seconds when looking for currently-live entries, without excluding entries that were published in the past minute. ([#5389](https://github.com/craftcms/cms/issues/5389))\n\n### Fixed\n- Fixed an error that could occur on PHP 8.1. ([#11345](https://github.com/craftcms/cms/pull/11345))\n- Fixed a bug where project config paths that contained slashes weren\u2019t getting handled properly. ([#10774](https://github.com/craftcms/cms/issues/10774))\n- Fixed a bug where the Login page had a tab-focusable \u201cSkip to content\u201d button. ([#11375](https://github.com/craftcms/cms/issues/11375))\n\n## 3.7.43 - 2022-05-20\n\n### Changed\n- Reversed the order of Lightswitch fields\u2019 \u201cON Label\u201d and \u201cOFF Label\u201d settings. ([#11259](https://github.com/craftcms/cms/issues/11259))\n- `craft\\services\\Elements::duplicateElement()` now has a `$trackDuplication` argument.\n- `craft\\services\\Matrix::duplicateBlocks()` now has a `$trackDuplications` argument.\n\n### Fixed\n- Fixed a bug where editable tables\u2019 delete buttons\u2019 `aria-label` attributes weren\u2019t getting updated when table rows were reordered or deleted.\n- Fixed a bug where editable tables\u2019 delete buttons weren\u2019t visually disabled when the minimum number of rows had been reached.\n- Fixed a bug where all eager-loaded `srcset`-style transform sizes were relative to the first eager-loaded transform, rather than the prior one. ([#11209](https://github.com/craftcms/cms/issues/11209))\n- Fixed a bug where eager-loaded `srcset`-style transform sizes didn\u2019t reference the prior eager-loaded transform\u2019s `format`, `interlace`, `mode`, `position`, or `quality` settings. ([#11264](https://github.com/craftcms/cms/issues/11264))\n- Fixed a bug where the web-based installation wizard wouldn\u2019t show the database connection screen if a connection could be established but no database was selected. ([#11245](https://github.com/craftcms/cms/issues/11245))\n- Fixed an error that could occur when applying a multi-site draft with relational fields. ([#11220](https://github.com/craftcms/cms/issues/11220))\n- Fixed a bug where Matrix blocks could be deleted from newly-created multi-site entries, if the edit page was reloaded. ([#10906](https://github.com/craftcms/cms/issues/10906))\n\n## 3.7.42 - 2022-05-11\n\n### Added\n- Added `craft\\events\\LocateUploadedFilesEvent`.\n- Added `craft\\fields\\Assets::EVENT_LOCATE_UPLOADED_FILES`. ([#11123](https://github.com/craftcms/cms/discussions/11123))\n\n### Changed\n- Improved save performance for multi-site elements ([#11113](https://github.com/craftcms/cms/issues/11113))\n- Built-in Composer actions now ensure that `composer.json` allows the `craftcms/plugin-installer` Composer plugin.\n\n### Fixed\n- Fixed a bug where soft-deleted drafts\u2019 search keywords weren\u2019t getting re-indexed if they were restored.\n- Fixed an error that occurred when transforming an SVG image without specifying a width or height. ([#11122](https://github.com/craftcms/cms/issues/11122))\n- Fixed an error that occurred when saving a Number field with a non-numeric value. ([#11164](https://github.com/craftcms/cms/issues/11164))\n- Fixed a bug where it wasn\u2019t possible to drag an item to the top in admin tables. ([#10781](https://github.com/craftcms/cms/issues/10781))\n- Fixed a bug where entries within Structure sections weren\u2019t expandable if their only descendants were unpublished drafts.\n- Fixed a bug where expanding a collapsed Structure section entry wouldn\u2019t reveal its descendants, if the parent was a draft. ([#11186](https://github.com/craftcms/cms/issues/11186))\n- Fixed a bug where element caches weren\u2019t getting cleared for elements when they were propagated to a newly-created site.\n\n## 3.7.41 - 2022-05-06\n\n### Changed\n- The Upgrade utility now lists any uninstalled and unknown plugins. ([#11101](https://github.com/craftcms/cms/discussions/11101))\n\n### Fixed\n- Fixed an error that occurred when attempting to delete a global set. ([#11100](https://github.com/craftcms/cms/issues/11100))\n- Fixed an error that could occur when applying a draft. ([#11083](https://github.com/craftcms/cms/issues/11083))\n- Fixed a bug where element queries weren\u2019t returning any results if an element attribute table wasn\u2019t joined in, and the element query was set to an abstract element class. ([#11105](https://github.com/craftcms/cms/issues/11105))\n\n## 3.7.40.1 - 2022-05-04\n\n### Fixed\n- Fixed a bug where empty fields could be marked as changed, even when no change was made to them. ([#11078](https://github.com/craftcms/cms/issues/11078))\n\n## 3.7.40 - 2022-05-03\n\n> **Warning**\n> If you are currently running Craft 3.7.39, you will need to [perform this update with Composer](https://craftcms.com/knowledge-base/updating-from-craft-3-7-39).\n\n### Added\n- Added the \u201cCraft 4 Upgrade\u201d utility.\n- Added `craft\\helpers\\Db::extractGlue()`.\n- Added `craft\\helpers\\Db::normalizeParam()`.\n- Added `craft\\utilities\\Upgrade`.\n- Added `craft\\web\\assets\\upgrade\\UpgradeAsset`.\n\n### Changed\n- Improved database performance for concurrent requests. ([#10662](https://github.com/craftcms/cms/issues/10662))\n- The Crop tool in the image editor no longer displays the (incorrect) crop dimensions. ([#11046](https://github.com/craftcms/cms/issues/11046))\n- Asset queries\u2019 `volume` params now support passing an array of `craft\\base\\VolumeInterface` objects.\n- Category queries\u2019 `group` params now support passing an array of `craft\\models\\CategoryGroup` objects.\n- Entry queries\u2019 `section` params now support passing an array of `craft\\models\\Section` objects.\n- Entry queries\u2019 `type` params now support passing an array of `craft\\models\\EntryType` objects. ([#11057](https://github.com/craftcms/cms/issues/11057))\n- Matrix block queries\u2019 `field` params now support passing an array of `craft\\fields\\Matrix` objects.\n- Tag queries\u2019 `group` params now support passing an array of `craft\\models\\TagGroup` objects.\n- Options passed to the `_includes/forms/select` control panel template can now specify a `hidden` key. ([#11053](https://github.com/craftcms/cms/pull/11053))\n- `craft\\services\\Fields::getLayoutsByType()` now memoizes its results. ([#11037](https://github.com/craftcms/cms/pull/11037))\n- Downgraded Composer to 2.2.12, fixing an error that occurred when updating Craft or installing/updating/uninstalling plugins.\n\n### Removed\n- Removed the `--propagate` option from `resave/*` commands, which didn\u2019t have any effect. ([#11032](https://github.com/craftcms/cms/discussions/11032))\n\n### Fixed\n- Fixed a bug where \u201cName\u201d and \u201cHandle\u201d were not getting translated properly in field, volume, and global set validation errors. ([#11029](https://github.com/craftcms/cms/issues/11029))\n- Fixed a bug where passing an array of `craft\\models\\UserGroup` objects to a user query\u2019s `group` param had no effect.\n- Fixed a bug where passing an array that began with `not` into a user query\u2019s `group` param wouldn\u2019t return users that had no user groups.\n- Fixed a bug where it wasn\u2019t possible to order elements by `rand()`/`random()` via GraphQL. ([#11063](https://github.com/craftcms/cms/issues/11063))\n- Fixed a bug where empty Date and Number fields would be marked as changed, even when no change was made to them. ([#10804](https://github.com/craftcms/cms/issues/10804))\n\n## 3.7.39 - 2022-04-26\n\n### Added\n- The Caches utility now has a \u201cCompiled classes\u201d option. ([#10281](https://github.com/craftcms/cms/pull/10281))\n- Added the `folderPath` asset query param.\n- Added `craft\\services\\Assets::getTempVolumeAndSubpath()`.\n- Added `craft\\services\\Assets::createTempAssetQuery()`.\n- Added `craft\\services\\Fields::updateColumn()`.\n- Added `craft\\services\\Sections::getEntryTypeByUid()`.\n\n### Changed\n- Fields\u2019 search indexes are now immediately removed when their \u201cUse this field\u2019s values as search keywords\u201d settings are disabled.\n- User groups\u2019 permission lists are now sorted alphabetically when saved to the project config. ([#10408](https://github.com/craftcms/cms/issues/10408))\n- Improved dropdown menu styling for Firefox.\n- Improved GraphQL performance.\n- `{% nav %}` tags now skips elements whose immediate parent weren\u2019t included in the output. ([#10925](https://github.com/craftcms/cms/issues/10925))\n- Asset, entry, and category selection modals now clear the search results when a new element is created. ([#11015](https://github.com/craftcms/cms/issues/11015))\n- Asset and entry selection modals now sort the elements by Date Created (descending) when a new element is created, to ensure it is immediately visible and selected.\n\n### Fixed\n- Fixed a bug where Matrix blocks could lose their Date field values, if multiple Date fields had with the same handle across different block types. ([#10884](https://github.com/craftcms/cms/issues/10884))\n- Fixed a bug where Matrix block menus were getting truncated if they were too large to fit within the content pane. ([#10883](https://github.com/craftcms/cms/issues/10883))\n- Fixed a bug where Assets fields weren\u2019t respecting their dynamic folder path settings for unpublished drafts, if the Temp Upload Location asset setting was set to a volume. ([#9619](https://github.com/craftcms/cms/issues/9619))\n- Fixed an error that could occur when saving an Assets field for a draft.\n- Fixed a bug where element queries weren\u2019t being limited to return elements of the configured type, if no element type-specific tables were joined in.\n- Fixed a bug where element thumbnails weren\u2019t loading for all but the initial content tab. ([#10918](https://github.com/craftcms/cms/issues/10918))\n- Fixed a bug where Matrix fields\u2019 Min Blocks settings weren\u2019t getting enforced for empty Matrix fields.\n- Fixed an error that could occur when saving Matrix fields with either Min Blocks or Max Blocks configured, but not both, if the Intl extension wasn\u2019t installed. ([#10922](https://github.com/craftcms/cms/issues/10922))\n- Fixed a bug where the system name container was taking up the full viewport height in Safari 13. ([#10930](https://github.com/craftcms/cms/issues/10930))\n- Fixed a bug where Matrix sub-fields were losing their column suffixes after they were resaved. ([#10973](https://github.com/craftcms/cms/issues/10973))\n- Fixed a bug where saving a Matrix field without any block types would result in no changes made to the previously-configured block types, rather than displaying a validation error. ([#10989](https://github.com/craftcms/cms/issues/10989))\n\n### Security\n- The `redirect` controller action now requires the passed-in `url` param to be hashed. ([#10994](https://github.com/craftcms/cms/issues/10994))\n\n## 3.7.38 - 2022-04-06\n\n### Added\n- Added `craft\\helpers\\ArrayHelper::onlyContains()`.\n- Added `craft\\test\\Craft::assertNotPushedToQueue()`. ([#10510](https://github.com/craftcms/cms/pull/10510))\n\n### Changed\n- Duplicated elements no longer have \u201ccopy\u201d appended to the end of their titles. ([#10707](https://github.com/craftcms/cms/pull/10707))\n- User queries\u2019 `group` and `groupId` params now support passing an array that begins with `and`, to only return users that are in all of the subsequent user groups.\n- `Craft.BaseElementSelectorModal` now has `bodyAction` and `indexSettings` settings. ([#4348](https://github.com/craftcms/cms/pull/4348))\n\n### Fixed\n- Fixed a bug where color pickers weren\u2019t clickbale within Table fields. ([#10775](https://github.com/craftcms/cms/issues/10775))\n- Fixed a bug where multi-site elements weren\u2019t getting all of their titles duplicated correctly. ([#10702](https://github.com/craftcms/cms/issues/10702))\n- Fixed deprecation errors that occurred when validating relational and Matrix fields. ([#10815](https://github.com/craftcms/cms/issues/10815))\n- Fixed an error that occurred if field instructions contained any unclosed HTML tags. ([#10290](https://github.com/craftcms/cms/issues/10290))\n- Fixed a bug where the selected volume subfolder would get included in folder drag-and-drop operations. ([#10745](https://github.com/craftcms/cms/issues/10745))\n- Fixed a bug where slideouts weren\u2019t closing when clicked out of, after being opened for the second time. ([#10586](https://github.com/craftcms/cms/issues/10586))\n- Fixed a bug where `Craft.appendHeadHtml()` wasn\u2019t pruning out `<link>` tags that were already present in the DOM.\n- Fixed a bug where image transforms weren\u2019t always getting generated for disabled sites. ([#10498](https://github.com/craftcms/cms/issues/10498))\n- Fixed a bug where it wasn\u2019t possible to scroll the content pane horizontally if any fields took up more than 100% of its width. ([#10849](https://github.com/craftcms/cms/issues/10849))\n\n## 3.7.37 - 2022-03-16\n\n### Changed\n- Improved the styling of copy buttons in the control panel. ([#10732](https://github.com/craftcms/cms/discussions/10732))\n- In-app Plugin Store purchases are now completed on `id.craftcms.com` rather than within the control panel.\n\n### Fixed\n- Fixed a bug where two users could be created with the same username and email, if the **Save** button was double-clicked. ([#9835](https://github.com/craftcms/cms/issues/9835), [#10661](https://github.com/craftcms/cms/issues/10661))\n- Fixed an error that could occur when updating from an earlier version than Craft 3.5.6. ([#10685](https://github.com/craftcms/cms/issues/10685))\n- Fixed an error that could occur when rendering an exception view for another error. ([#10712](https://github.com/craftcms/cms/issues/10712))\n- Fixed a bug where pressing <kbd>Spacebar</kbd> on copy buttons in admin tables didn\u2019t activate them.\n- Fixed a style issue for Safari. ([#10748](https://github.com/craftcms/cms/pull/10748))\n\n## 3.7.36 - 2022-03-03\n\n### Changed\n- `{% js %}` and `{% css %}` tags can now import URLs that don\u2019t end in `.js` or `.css`, so long as they begin with `https://` or `http://`. ([#10666](https://github.com/craftcms/cms/discussions/10666))\n- The `plugin/list` command now shows plugins\u2019 package names. ([#10667](https://github.com/craftcms/cms/discussions/10667))\n\n### Fixed\n- Fixed a bug that prevented moving assets between volumes. ([#10668](https://github.com/craftcms/cms/issues/10668))\n\n## 3.7.35 - 2022-03-01\n\n### Added\n- Added `craft\\errors\\BusyResourceException`.\n- Added `craft\\errors\\StaleResourceException`.\n\n### Changed\n- Improved Live Preview accessibility. ([#7476](https://github.com/craftcms/cms/issues/7476))\n- Improved error reporting when trying to upload an Asset from a disallowed location. ([#10633](https://github.com/craftcms/cms/issues/10633))\n- The `resave/entries` command now supports a `--revisions` flag. ([#10634](https://github.com/craftcms/cms/issues/10634))\n\n### Fixed\n- Fixed an error that occurred when initializing an element with custom field values that weren\u2019t included in its field layout. ([#10622](https://github.com/craftcms/cms/issues/10622))\n- Fixed a PHP 8 compatibility bug.\n- Fixed a bug where drafts weren\u2019t getting propagated when a section was enabled for new sites. ([#10634](https://github.com/craftcms/cms/issues/10634))\n- Fixed a bug where moving files and folders from the Assets index page wouldn\u2019t ever resolve properly if there was an unexpected server error.\n- Fixed a bug where disclosure menus could be shorter than their contents. ([#10639](https://github.com/craftcms/cms/issues/10639))\n- Fixed potential race conditions that could result in old project config data getting cached. ([#7795](https://github.com/craftcms/cms/issues/7795))\n- Fixed a bug where numerically-indexed array keys weren\u2019t always consecutive after the project config was rebuilt. ([#10512](https://github.com/craftcms/cms/issues/10512))\n\n## 3.7.34 - 2022-02-22\n\n### Added\n- Added `craft\\helpers\\App::phpConfigValueAsPaths()`.\n- Added `craft\\helpers\\App::normalizePhpPaths()`.\n- Added `craft\\helpers\\App::isPathAllowed()`.\n\n### Changed\n- Improved date and time input accessibility. ([#10575](https://github.com/craftcms/cms/pull/10575))\n- Craft no longer attempts to write a license key file when `CRAFT_EPHEMERAL` is set to `true`. ([#10558](https://github.com/craftcms/cms/pull/10558))\n- Craft no longer attempts to write project config YAML files when `CRAFT_EPHEMERAL` is set to `true`. ([#10558](https://github.com/craftcms/cms/pull/10558))\n- Craft no longer publishes asset bundles when `CRAFT_EPHEMERAL` is set to `true`. ([#10558](https://github.com/craftcms/cms/pull/10558))\n\n### Fixed\n- Fixed a bug where Date fields weren\u2019t displaying properly.\n- Fixed a bug where some GraphQL API query arguments would break element queries. ([#10580](https://github.com/craftcms/cms/issues/10580))\n- Fixed a PHP 8.1 compatibility bug. ([#10594](https://github.com/craftcms/cms/issues/10594))\n- Fixed a bug where Matrix action menus were causing horizontal scrollbars within Live Preview. ([#10601](https://github.com/craftcms/cms/issues/10601))\n- Fixed a PHP warning that would occur when running Craft in Dev Mode, if the `open_basedir` PHP setting was set. ([#10581](https://github.com/craftcms/cms/issues/10581))\n- Fixed a bug where the \u201cView\u201d button on Edit Category pages wasn\u2019t getting linked to a tokenized preview page for disabled sites.\n- Fixed a bug where asset subfolder toggles weren\u2019t visible when their source was focused. ([#10617](https://github.com/craftcms/cms/issues/10617))\n- Fixed a bug where Live Preview would close when the <kbd>Esc</kbd> key was pressed, when a modal window was open. ([#10623](https://github.com/craftcms/cms/issues/10623))\n\n### Security\n- Craft now HTML-encodes user\u2019 names in the default system email messages.\n\n## 3.7.33 - 2022-02-15 [CRITICAL]\n\n> **Note**\n> The way CSRF tokens are generated has changed in this release, so all users will be logged out during the update.\n\n### Added\n- Added support for PHP 8.1.\n- Added the `users/logout-all` console command.\n- Added `Garnish.prefersReducedMotion()`.\n\n### Changed\n- Lightswitch inputs are no longer animated for browsers that have requested reduced motion. ([#10532](https://github.com/craftcms/cms/pull/10532))\n- Reverted the 3.7.32 change to plugin settings. ([#10533](https://github.com/craftcms/cms/issues/10533))\n- Improved accessibility for the Craft Support widget. ([#7290](https://github.com/craftcms/cms/issues/7290))\n- The `graphql/api` controller action now supports passing the GraphQL bearer token via an `X-Craft-Authorization` header, in addition to `Authorization`. ([#10539](https://github.com/craftcms/cms/discussions/10539))\n- `craft\\helpers\\App::parseBooleanEnv()` now treats `0` and `1` as boolean values. ([#10524](https://github.com/craftcms/cms/issues/10524))\n- Updated GraphiQL to 1.5.16.\n- Updated Yii to 2.0.45.\n- Updated svg-sanitizer to 0.15.\n\n## Fixed\n- Fixed a bug where admin tables would display the wrong handle values after an item was deleted. ([#10538](https://github.com/craftcms/cms/issues/10538))\n- Fixed a bug where entries and Matrix blocks weren\u2019t necessarily getting propagated from the primary site, when they were activated for a new site via a setting change. ([#10561](https://github.com/craftcms/cms/issues/10561))\n- Fixed an error that occurred when testing queue jobs. ([#10569](https://github.com/craftcms/cms/pull/10569))\n\n### Security\n- Fixed a potential CSRF security issue.\n\n## 3.7.32 - 2022-02-09\n\n### Added\n- Added `craft\\base\\FieldInterface::getInputId()`.\n- Added `craft\\db\\Migration::createIndexIfMissing()`.\n- Added `craft\\db\\Migration::dropIndexIfExists()`.\n- Added `craft\\services\\Users::canSuspend()`.\n- Added `craft\\validators\\SiteIdValidator::$allowDisabled`.\n\n### Changed\n- Improved element query performance. ([#10418](https://github.com/craftcms/cms/discussions/10418))\n- Improved asset transform eager-loading performance. ([#10427](https://github.com/craftcms/cms/discussions/10427))\n- The \u201cSuspend\u201d and \u201cUnsuspend\u201d user actions are now smarter about when they should be available, based on the selected users.\n- Plugin settings forms now display the values stored in the project config, even if they\u2019ve been overridden by the plugin\u2019s config file.\n- Improved the styling of field tips and warnings.\n- The Edit Field page will now instantiate a new field instance of the expected field type, if it had been previously saved while the field type was missing. ([#10437](https://github.com/craftcms/cms/issues/10437))\n\n### Fixed\n- Fixed a bug where Date and Time fields\u2019 labels weren\u2019t referencing the correct input IDs.\n- Fixed a bug where the last control panel breadcrumb could be collapsed under a \u201cMore\u2026\u201d menu when there was enough room to display it. ([#10495](https://github.com/craftcms/cms/issues/10495))\n- Fixed a bug where it was possible for non-admins to suspend/unsuspend admins from the Users index page. ([#10422](https://github.com/craftcms/cms/issues/10422))\n- Fixed a bug where the `project-config/apply` command output could get mangled. ([#9900](https://github.com/craftcms/cms/issues/9900))\n- Fixed an error that could occur when saving an entry programmatically on a front-end request, if any sites were disabled. ([#10499](https://github.com/craftcms/cms/issues/10499))\n- Fixed a bug where Date and Time inputs weren\u2019t clearable on mobile. ([#10500](https://github.com/craftcms/cms/issues/10500))\n- Fixed a bug where Date and Time fields created by JavaScript weren\u2019t getting native `date` and `time` inputs on mobile.\n- Fixed a JavaScript error on the Edit User page. ([#10509](https://github.com/craftcms/cms/issues/10509))\n- Fixed a bug where it was possible to save a custom field whose type was missing. ([#10437](https://github.com/craftcms/cms/issues/10437))\n\n### Security\n- Fixed a GraphQL API vulnerability.\n\n## 3.7.31 - 2022-02-08\n\n### Added\n- Added the `clear-deprecations` command. ([#10430](https://github.com/craftcms/cms/discussions/10430))\n- Added the `plugin/list` command. ([#10470](https://github.com/craftcms/cms/pull/10470))\n- Added the `users/activation-url` and `users/password-reset-url` commands. ([#10482](https://github.com/craftcms/cms/pull/10482))\n- Added the `revisionId` field to drafts when queried via GraphQL. ([#10462](https://github.com/craftcms/cms/pull/10462))\n- Added `craft\\web\\View::registerJsWithVars()`.\n\n### Changed\n- Improved focus styles in the control panel. ([#10398](https://github.com/craftcms/cms/pull/10398))\n- Improved Matrix field accessibility for screen readers. ([#10480](https://github.com/craftcms/cms/pull/10480))\n- Improved Table field accessibility for screen readers. ([#10502](https://github.com/craftcms/cms/pull/10502))\n- Handles within admin tables are now displayed as copy-buttons. ([#10475](https://github.com/craftcms/cms/discussions/10475))\n- Craft no longer sends a `Permissions-Policy: interest-cohort=()` header by default, as Google has [abandoned](https://blog.google/products/chrome/get-know-new-topics-api-privacy-sandbox/) its FLoC proposal.\n- Craft no longer attempts to create the `cpresources` folder when `CRAFT_EPHEMERAL` is set to `true`. ([#10412](https://github.com/craftcms/cms/issues/10412))\n- Video assets\u2019 focal points are no longer suppressed, if they were set by a plugin or module. ([#10415](https://github.com/craftcms/cms/discussions/10415))\n- Plugins are now consistently loaded in the same order across all environments. ([#10441](https://github.com/craftcms/cms/issues/10441))\n- Element exporters\u2019 `export()` methods can now return an array or generator function, even if `isFormattable()` returns `true`. ([#10484](https://github.com/craftcms/cms/pull/10484))\n- `Craft.BaseElementSelectorModal` now supports a `fullscreen` setting.\n\n### Fixed\n- Fixed a bug where Craft would not display an appropriate error message if a Local volume was pointing to a broken symlink. ([#10396](https://github.com/craftcms/cms/issues/10396)\n- Fixed an error that could occur when calling an element\u2019s `getUrl()` method for a disabled site. ([#10421](https://github.com/craftcms/cms/issues/10421))\n- Fixed a JavaScript error that occurred after saving an unpublished draft.\n- Fixed a bug where Live Preview wasn\u2019t always showing changes for entries that weren\u2019t live. ([#10455](https://github.com/craftcms/cms/issues/10455))\n- Fixed a bug where it wasn\u2019t possible to restore a soft-deleted global set with project config. ([#10458](https://github.com/craftcms/cms/issues/10458))\n- Fixed right-to-left layout styling bugs. ([#10459](https://github.com/craftcms/cms/issues/10459), [#10439](https://github.com/craftcms/cms/issues/10439))\n- Fixed a bug where entry revision menus would show newly-added sites as enabled even if they were disabled by default.\n- Fixed a bug where `craft\\base\\Element::getCanonical()` wasn\u2019t memoizing its result based on the `$anySite` argument.\n- Fixed a JavaScript error. ([#10428](https://github.com/craftcms/cms/issues/10428))\n- Fixed a bug where Dashboard widget flip animations weren\u2019t always working in Firefox.\n- Fixed an error that could occur if an element\u2019s `getSupportedSites()` method returned info for a site that didn\u2019t exist or was soft-deleted.\n- Fixed GraphiQL layout issues for users with a RTL language set. ([#10465](https://github.com/craftcms/cms/pull/10465))\n\n## 3.7.30.1 - 2022-01-21\n\n### Fixed\n- Fixed a bug where the \u201cNew category\u201d button on the Categories index page wasn\u2019t working. ([#10399](https://github.com/craftcms/cms/issues/10399))\n- Fixed an error that occurred when saving an Assets field with a file that was in a temporary location within the `storage/` folder, if the `storage/` folder didn\u2019t live within the project root. ([#10401](https://github.com/craftcms/cms/issues/10401))\n\n## 3.7.30 - 2022-01-20\n\n> **Warning**\n> The `mutex` component now uses a file-based driver by default. Load-balanced environments should [switch to a different driver](https://craftcms.com/knowledge-base/configuring-load-balanced-environments#mutex-locks).\n\n### Added\n- Added `craft\\mutex\\Mutex`.\n- Added `craft\\mutex\\MutexTrait`.\n- Added `craft\\mutex\\NullMutex`.\n\n### Changed\n- When a draft is published, Craft now automatically reloads other browser tabs that are opened to the same Edit Entry page. ([#10381](https://github.com/craftcms/cms/issues/10381))\n- Improved modal and slideout accessibility for screen readers. ([#10384](https://github.com/craftcms/cms/pull/10384), [#10234](https://github.com/craftcms/cms/pull/10234))\n- The `mutex` component is now set to `craft\\mutex\\Mutex` by default, and should no longer be overridden directly. Its nested `mutex` property should be [overridden instead](https://craftcms.com/knowledge-base/configuring-load-balanced-environments#mutex-locks).\n- `craft\\helpers\\App::mutexConfig()` is no longer deprecated.\n\n### Deprecated\n- Deprecated `craft\\helpers\\App::dbMutexConfig()`, as database-based mutex locking is no longer recommended.\n- Deprecated `craft\\mutex\\DbMutexTrait`.\n- Deprecated `craft\\mutex\\MysqlMutex`.\n- Deprecated `craft\\mutex\\PgsqlMutex`.\n\n### Fixed\n- Fixed a bug where Craft could generate `CustomFieldBehavior` classes that were missing the available fields. ([#6013](https://github.com/craftcms/cms/issues/6013))\n- Fixed a bug where Live Preview iframes weren\u2019t full-height when `useIframeResizer` was disabled. ([#10380](https://github.com/craftcms/cms/issues/10380))\n- Fixed an error that could occur if an Assets field was saved while set to a file stored in `storage/runtime/assets/tempuploads/`. ([#10382](https://github.com/craftcms/cms/issues/10382))\n- Fixed a bug where it wasn\u2019t possible to apply a numeric namespace to input names. ([#6656](https://github.com/craftcms/cms/pull/6656))\n\n## 3.7.29 - 2022-01-18\n\n### Added\n- `resave/*` commands now support bulk-setting an attribute/custom field value via new `--set`, `--to`, and `--if-empty` options. ([#10356](https://github.com/craftcms/cms/pull/10356))\n- Added `craft\\fieldlayoutelements\\BaseField::statusId()`.\n- Added `craft\\helpers\\App::parseEnv()` and `parseBooleanEnv()`, replacing their `Craft` class counterparts. ([#10319](https://github.com/craftcms/cms/discussions/10319))\n\n### Changed\n- The Users index page now updates the URL based on the selected source. ([#10336](https://github.com/craftcms/cms/issues/10336))\n- Live Preview no longer reloads the iframe when the device type is changed. ([#10353](https://github.com/craftcms/cms/discussions/10353))\n- `admins`, `all`, and `new` are now reserved user group handles.\n- The content in the `resourcepaths` table is now excluded from database backups by default.\n- User caches are now invalidated after login attempts. ([#10313](https://github.com/craftcms/cms/discussions/10313))\n- Assets fields\u2019 \u201cUpload files\u201d buttons now have `aria-describedby` attributes when appropriate.\n- Color fields\u2019 hex inputs now have `aria-label` attributes.\n- Field status messages are now included in their `aria-describedby` attributes.\n- User queries will no longer exclude suspended users when `status('pending')` is passed. ([#10361](https://github.com/craftcms/cms/issues/10361))\n- Template autosuggest fields now include suggestions for templates in custom site template roots. ([#10372](https://github.com/craftcms/cms/discussions/10372))\n\n### Deprecated\n- Deprecated `Craft::parseEnv()`. `craft\\helpers\\App::parseEnv()` should be used instead.\n- Deprecated `Craft::parseBooleanEnv()`. `craft\\helpers\\App::parseBooleanEnv()` should be used instead.\n\n### Fixed\n- Fixed a bug where admin tables were displaying titles incorrectly.\n- Fixed a bug where `aria-describedby` attributes were getting namespaced incorrectly when they referenced multiple IDs.\n- Fixed a bug where \u201cView\u201d links on Edit Entry pages weren\u2019t getting updated when the entry\u2019s preview target URLs changed. ([#10257](https://github.com/craftcms/cms/issues/10257))\n- Fixed a bug where `craft\\base\\ApplicationTrait::getIsMultiSite()` would return `false` on the front end, if there was only one enabled site, but additional disabled sites.\n- Fixed a bug where `craft\\base\\Element::getSite()` would throw an exception on the front end, if the element belonged to a disabled site.\n- Fixed a bug where `craft\\services\\Sites::getEditableSiteIds()` would exclude disabled sites on the front end.\n- Fixed a bug where validation errors referenced by `aria-describedby` attributes weren\u2019t getting read out by VoiceOver. ([#10355](https://github.com/craftcms/cms/pull/10355))\n- Fixed a bug where element queries\u2019 `withQueries` properties were ignored. ([#10359](https://github.com/craftcms/cms/pull/10359))\n- Fixed a bug where fatal PHP errors were not logged to `stderr` when the `CRAFT_STREAM_LOG` PHP constant was set to `true`. ([#10366](https://github.com/craftcms/cms/pull/10366))\n- Fixed a bug where Dropdown fields with invalid data would not always display a blank option. ([#10365](https://github.com/craftcms/cms/issues/10365))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.28 - 2022-01-05\n\n### Changed\n- Updated Yii to 2.0.44.\n\n### Fixed\n- Fixed a Composer error that could occur if `composer.craftcms.com` was missing an expected package/version, but Packagist knew about it. ([#10311](https://github.com/craftcms/cms/issues/10311))\n- Fixed a PHP error that could occur when querying for Matrix blocks. ([#10315](https://github.com/craftcms/cms/issues/10315))\n- Fixed a bug where Single sections\u2019 drafts would get deleted when their section settings were updated. ([#10307](https://github.com/craftcms/cms/issues/10307))\n- Fixed an error that could occur on the Dashboard if there were any Quick Post widgets that included a Title field. ([#10314](https://github.com/craftcms/cms/issues/10314))\n\n## 3.7.27.2 - 2022-01-06\n\n### Fixed\n- Fixed an error that could occur when updating to Craft 3.7.28/Yii 2.0.44 from the control panel.\n\n## 3.7.27.1 - 2022-01-04\n\n### Fixed\n- Fixed a PHP error that would occur when creating a new user. ([#10308](https://github.com/craftcms/cms/issues/10308))\n\n## 3.7.27 - 2022-01-04\n\n### Added\n- Added the `setSchemaOnConnect` database connection setting. ([#10273](https://github.com/craftcms/cms/issues/10273))\n- Added `craft\\errors\\InvalidHtmlTagException`.\n- Added `craft\\helpers\\Html::encodeInvalidTags()`.\n- Added `craft\\models\\FieldLayout::getCustomFieldElements()`.\n- Added `craft\\services\\Fields::getLayoutsByIds()`.\n- Added `craft\\web\\twig\\variables\\Image::getContents()`, `getDataUrl()`, `getMimeType()`, and `getPath()`. ([#10268](https://github.com/craftcms/cms/issues/10268))\n\n### Changed\n- Improved the performance of the control panel, for installs with a large number of entry types.\n- A warning is now logged when a password-reset email could not be sent, if `preventUserEnumeration` is enabled.\n- The `install/check`, `install/craft`, and `setup/db-creds` commands now explicitly check if Craft is installed in the default schema on Postgres.\n- The `setup/db-creds` command now uses existing environment variable values for its default prompt values, if available.\n- The `setup/db-creds` command no longer prompts for the database schema on Postgres, unless `setSchemaOnConnect` is enabled. Instead it will determine the appropriate schema to use based on `SHOW search_path`. ([#10273](https://github.com/craftcms/cms/issues/10273))\n- The web-based installation wizard no longer shows a field for the database schema on Postgres. ([#10273](https://github.com/craftcms/cms/issues/10273))\n- Dashboard widgets\u2019 `data-colspan` attributes are now updated when their colspan changes. ([#10286](https://github.com/craftcms/cms/discussions/10286))\n- `craft\\base\\ApplicationTrait::getIsInstalled()` will now explicitly check if Craft is installed in the default schema on Postgres, when `true` is passed.\n- `craft\\helpers\\Html::parseTag()` now throws an `InvalidHtmlTagException` exception when an invalid tag is encountered. (Catching `InvalidArgumentException`s will still work.)\n- `craft\\services\\Routes::getProjectConfigRoutes()` now returns a numerically-indexed array of URL rule arrays, with `pattern` keys that define the URI patterns.\n- `craft\\services\\Users::getUserPreferences()` and `getUserPreference()` no longer accept `null` passed to the first argument.\n\n### Deprecated\n- Deprecated `craft\\elements\\User::mergePreferences()`.\n\n### Fixed\n- Fixed a bug where the details pane could jump down when scrolling on desktop browsers that are less than 974 pixels wide.\n- Fixed a bug where soft-deleted Matrix blocks nested within Neo blocks could become duplicated when restored from a prior revision. ([#10256](https://github.com/craftcms/cms/issues/10256))\n- Fixed a bug where Color fields\u2019 HSL values could be incorrect. ([#10261](https://github.com/craftcms/cms/issues/10261))\n- Fixed a bug where `<video>`, `<embed>`, and `<iframe>` tags within field instructions could be wider than the field\u2019s container. ([#10264](https://github.com/craftcms/cms/issues/10264))\n- Fixed an error that occurred if the first control panel-defined route had a numeric URI pattern. ([#10251](https://github.com/craftcms/cms/issues/10251))\n- Fixed an error that could occur if a section didn\u2019t have any entry types. ([#10272](https://github.com/craftcms/cms/issues/10272))\n- Fixed a bug where `craft\\services\\Config::setDotEnvVar()` wasn\u2019t escaping backslashes when modifying the value of an existing environment variable. ([#10274](https://github.com/craftcms/cms/issues/10274))\n- Fixed a bug where Live Preview could fail to load if opened while changes were being autosaved. ([#10280](https://github.com/craftcms/cms/issues/10280))\n- Fixed a bug where the control panel layout could break if any field instructions/tips/warnings included an HTML tag that wasn\u2019t closed properly. Such tags are now encoded so they appear as plain text. ([#10290](https://github.com/craftcms/cms/issues/10290))\n- Fixed a bug where disabled plugins could cause duplicate database queries.\n- Fixed a bug where multiple calls to `craft\\services\\Users::getUserPreferences()` could cause duplicate database queries.\n\n### Security\n- Fixed a bug where it was possible to identify valid usernames/user emails via password-reset forms when `preventUserEnumeration` was enabled. ([#6000](https://github.com/craftcms/cms/issues/6000))\n\n## 3.7.26 - 2021-12-15\n\n### Added\n- Added `avif` as a web-safe image format. ([#10222](https://github.com/craftcms/cms/pull/10222))\n- Added `avif` to the allowed asset file extensions.\n- Added `craft\\fields\\data\\ColorData::getHsl()`, `getH()`, `getHue()`, `getL()`, `getLightness()`, `getS()`, and `getSaturation()`. ([#10235](https://github.com/craftcms/cms/discussions/10235))\n- Added `craft\\services\\Images::getSupportsAvif()`.\n\n### Changed\n- Reverted a 3.7.24 change where URL fields started encoding query string params. ([#10193](https://github.com/craftcms/cms/discussions/10193))\n- User verification and password-reset URLs for users with control panel access are no longer based on the front-end URL, when generated within the control panel. ([#10224](https://github.com/craftcms/cms/issues/10224))\n- Element queries\u2019 `status` arguments can now begin with `not` to return all elements except those with a given status or statuses. ([#9541](https://github.com/craftcms/cms/discussions/9541))\n- The `previewTokenDuration` config setting now defaults to the same value as `defaultTokenDuration`. ([#2394](https://github.com/craftcms/cms/issues/2394))\n- Craft no longer requires the Portable UTF-8 library directly. ([#10252](https://github.com/craftcms/cms/issues/10252))\n\n### Fixed\n- Fixed a bug where Neo blocks could lose their content if Preparse resaved a provisional draft as it was being created.\n- Fixed a bug where `craft\\services\\Fields::getLayoutByType()` could return an outdated field layout, if it had been updated in the same request. ([#10237](https://github.com/craftcms/cms/issues/10237))\n- Fixed a SQL error that could occur when querying for users via GraphQL.\n- Fixed an error that could occur when loading elements, if any custom fields were selected in the query before the element\u2019s field layout ID. ([#10205](https://github.com/craftcms/cms/issues/10205))\n- Fixed an error that could occur when searching for elements in the control panel. ([#10238](https://github.com/craftcms/cms/issues/10238))\n- Fixed a bug where `craft\\db\\ActiveRecord` was JSON-encoding database expression objects. ([#10239](https://github.com/craftcms/cms/issues/10239))\n- Fixed a bug where entry editor slideouts weren\u2019t warning of losing unsaved changes after the entry type was changed. ([#10243](https://github.com/craftcms/cms/issues/10243))\n- Fixed a bug where Matrix fields weren\u2019t getting reverted properly when reverting an entry\u2019s content to a prior revision, if they were nested within a Neo or Super Table field. ([#10253](https://github.com/craftcms/cms/issues/10253))\n\n## 3.7.25.1 - 2021-12-07\n\n### Added\n- Added `craft\\helpers\\ElementHelper::rootSource()`.\n\n### Fixed\n- Fixed an error that could occur on element indexes.\n- Fixed a bug where it wasn\u2019t possible to sort nested element sources by custom fields. ([#10226](https://github.com/craftcms/cms/issues/10226))\n\n## 3.7.25 - 2021-12-07\n\n### Changed\n- Improved the accessibility of the \u201cDefault Asset Location\u201d and \u201cAsset Location\u201d Assets field settings.\n- Element indexes now keep track of recent sort selections and factor them into the new element order. ([#10203](https://github.com/craftcms/cms/issues/10203))\n- The \u201cView\u201d button and \u201cView\u201d menu options on Edit Entry pages now use `<a>` tags. ([#10220](https://github.com/craftcms/cms/discussions/10220))\n- A `describedBy` variable is now available for `input` blocks rendered when embedding the `_includes/forms/field` control panel template.\n- `craft\\services\\Tokens::createToken()` and `createPreviewToken()` now have `$token` arguments, which accept pre-generated tokens.\n\n### Fixed\n- Fixed an error that could occur if the `field()` macro in the `_includes/forms` control panel template was called withoun an `input` argument. ([#10208](https://github.com/craftcms/cms/issues/10208))\n- Fixed a bug where the `migrate/fresh` command was erasing all migration history and attempting to reapply migrations. ([#10209](https://github.com/craftcms/cms/issues/10209))\n- Fixed a JavaScript error that occurred when pressing <kbd>Return</kbd> on an autosuggest input when no option was selected.\n- Fixed a bug where Edit Category pages could have two sets of \u201cPreview\u201d and \u201cView\u201d buttons. ([#10215](https://github.com/craftcms/cms/issues/10215))\n- Fixed a bug where boolean menus weren\u2019t showing the \u201cNo\u201d option as selected when the value was `false`.\n\n## 3.7.24 - 2021-12-02\n\n### Added\n- Added the `parseBooleanEnv()` Twig function.\n- Added `craft\\base\\FieldTrait::$describedBy`, which custom fields should reference when setting their input\u2019s `aria-describedby` attribute. ([#10183](https://github.com/craftcms/cms/pull/10183))\n- Added `craft\\behaviors\\EnvAttributeParserBehavior::getUnparsedAttribute()`.\n- Added `craft\\fieldlayoutelements\\BaseField::errorsId()`.\n- Added `craft\\fieldlayoutelements\\BaseField::instructions()`.\n- Added `craft\\fieldlayoutelements\\BaseField::instructionsId()`.\n- Added `craft\\fieldlayoutelements\\BaseField::tipId()`.\n- Added `craft\\fieldlayoutelements\\BaseField::warningId()`.\n- Added `craft\\helpers\\UrlHelper::encodeParams()`.\n- Added `craft\\i18n\\Formatter::willBeMisrepresented()`.\n- Added `craft\\services\\Config::setBooleanDotEnvVar()`.\n- Added `craft\\services\\Security::isSensitive()`.\n- Added `craft\\web\\twig\\variables\\Cp::field()`.\n\n### Changed\n- Improved the color contrast of UI controls throughout the control panel. ([#10169](https://github.com/craftcms/cms/pull/10169))\n- Improved the accessibility of element select fields for screen readers. ([#10169](https://github.com/craftcms/cms/pull/10169))\n- Improved built-in input descriptions for screen readers. ([#10183](https://github.com/craftcms/cms/pull/10183))\n- URL fields now allow query strings to be appended to email addresses (e.g. `hello@example.com?subject=Check+this+out\u2026`). ([#10193](https://github.com/craftcms/cms/discussions/10193))\n- `{% deprecated %}` tags now log proper Craft deprecation warnings rather than triggering an `E_USER_DEPRECATED` error. ([#10181](https://github.com/craftcms/cms/discussions/10181))\n- Editable tables\u2019 `template` columns now support `suggestEnvVars` and `suggestAliases` settings on the column definition. ([#10143](https://github.com/craftcms/cms/discussions/10143))\n- Editable tables now support an `autosuggest` column type, which support `suggestEnvVars` and `suggestAliases` settings on the column definition. ([#10143](https://github.com/craftcms/cms/discussions/10143))\n- The `cp.assets.edit.meta`, `cp.categories.edit.meta`, and `cp.entries.edit.meta` template hooks are now located after the native meta fields, rather than before. ([#10172](https://github.com/craftcms/cms/issues/10172))\n- `craft\\helpers\\Cp::fieldHtml()` now supports `headingPrefix` and `headingSuffix` config keys.\n\n### Fixed\n- Fixed an error that could occur when PHP\u2019s `set_time_limit()` function was disabled. ([#10152](https://github.com/craftcms/cms/issues/10152))\n- Fixed a bug where the `_includes/forms/autosuggest` template wasn\u2019t respecting `suggestEnvVars` if `suggestions` was already defined.\n- Fixed a bug where Table fields could have an incorrect GraphQL input type definition. ([#10173](https://github.com/craftcms/cms/issues/10173))\n- Fixed a bug where structure element query params weren\u2019t working if the passed-in element was missing its structure data. ([#10122](https://github.com/craftcms/cms/issues/10122))\n- Fixed a bug where `craft\\base\\Element::getChildren()` and `getDescendants()` could return results for elements without an ID.\n- Fixed an error that occurred when opening the Timeline view in the Debug Toolbar. ([#10176](https://github.com/craftcms/cms/issues/10176))\n- Fixed a bug where Number fields\u2019 Default Value, Min Value, and Max Value settings could show values formatted in the wrong locale, leading to an error on save. ([#10184](https://github.com/craftcms/cms/issues/10184))\n- Fixed an error that could occur when creating a Table field. ([#10186](https://github.com/craftcms/cms/issues/10186))\n- Fixed a bug where Matrix blocks within drafts could lose track of their canonical blocks when they were updated upstream, resulting in duplicated blocks. ([#10130](https://github.com/craftcms/cms/issues/10130))\n- Fixed a bug where disabled site handles referenced in `config/routes.php` were being treated as URL patterns. ([#10197](https://github.com/craftcms/cms/issues/10197))\n\n### Security\n- Fixed a bug where sensitive-sounding environment variables\u2019 values could be included in validation errors.\n- The \u201cSendmail Command\u201d email setting no longer allows arbitrary values. Now it can only be set to a known `sendmail` command, an environment variable, or its current value.\n\n## 3.7.23 - 2021-11-26\n\n### Added\n- Added `craft\\console\\Controller::table()`.\n- Added `craft\\helpers\\Console::table()`.\n\n### Changed\n- Reduced the amount of time it took for the GraphiQL IDE to initialize.\n- The `plugin/install`, `plugin/uninstall`, `plugin/enable`, and `plugin/disable` commands\u2019 `handle` arguments are no longer required for interactive shells. When not passed, a plugin handle can be chosen from a list of applicable plugins. ([#10158](https://github.com/craftcms/cms/discussions/10158))\n- Select fields that include environment variable options now show a tip about that when an environment variable isn\u2019t already selected.\n- Hyperlinks within tips are now always underlined.\n- Updated Garnish to 0.1.48.\n\n### Fixed\n- Fixed a bug where GraphiQL Explorer wasn\u2019t working. ([#10153](https://github.com/craftcms/cms/issues/10153))\n- Fixed a bug where the last control panel breadcrumb could be collapsed under a \u201cMore\u2026\u201d menu when there was enough room to display it.\n- Fixed a bug where the \u201cCreate a new child category\u201d action on the Categories index page resulted in a 404. ([#10148](https://github.com/craftcms/cms/issues/10148))\n- Fixed a bug where it wasn\u2019t possible to save an image transform when the Image Format setting was set to \u201cAuto\u201d. ([#10150](https://github.com/craftcms/cms/issues/10150))\n- Fixed an error that could occur if any asset bundles\u2019 `js` or `css` values were set to arrays. ([#10154](https://github.com/craftcms/cms/issues/10154))\n- Fixed a bug where structure data wasn\u2019t always present when duplicating a multi-site elements. ([#10165](https://github.com/craftcms/cms/issues/10165))\n\n## 3.7.22 - 2021-11-23\n\n### Added\n- Added the `booleanMenu`, `booleanMenuField`, `selectize`, and `selectizeField` macros to the `_includes/forms.html` control panel template. ([#8866](https://github.com/craftcms/cms/discussions/8866))\n- Added `Craft::parseBooleanEnv()`.\n- Added `craft\\base\\ApplicationTrait::getWebpack()`.\n- Added `craft\\services\\Webpack`.\n- Added `craft\\web\\twig\\variables\\Cp::getBooleanEnvOptions()`.\n- Added `craft\\web\\twig\\variables\\Cp::getEnvOptions()`.\n\n### Changed\n- The \u201cSystem Status\u201d and \u201cTime Zone\u201d general settings can now be set to environment variables. ([#9855](https://github.com/craftcms/cms/issues/9855))\n- The \u201cUse authentication\u201d and \u201cEncryption Method\u201d SMTP mailer type settings can now be set to an environment variable. ([#8989](https://github.com/craftcms/cms/discussions/8989))\n- The `timeZone` and `timeZoneField` control panel form macros now support an `includeEnvVars` setting.\n\n### Fixed\n- Fixed a bug where the `entry-revisions/save-draft` action wasn\u2019t respecting the `provisional` param when creating a new entry and draft. ([#10105](https://github.com/craftcms/cms/issues/10105))\n- Fixed an error that occurred when saving an element, if any custom field handles conflicted with magic properties on element queries. ([#10099](https://github.com/craftcms/cms/issues/10099))\n- Fixed a bug where relational field thumbnails weren\u2019t always loading for fields that weren\u2019t on the initial tab.\n- Fixed a bug where previewing disabled Structure section entries or categories would return a 404 response. ([#10121](https://github.com/craftcms/cms/issues/10121))\n- Fixed a bug where ancestor/sibling/descendant queries were yielding no results when previewing a draft or revision. ([#10122](https://github.com/craftcms/cms/issues/10122))\n- Fixed a bug where Matrix fields weren\u2019t getting reverted properly when reverting an entry\u2019s content to a prior revision. ([#10106](https://github.com/craftcms/cms/issues/10106))\n\n## 3.7.21 - 2021-11-16\n\n### Added\n- Added `craft\\behaviors\\CustomFieldBehavior::$canSetProperties`.\n- Added `craft\\services\\Fields::getFieldVersion()`.\n- Added `craft\\validators\\DateCompareValidator`.\n\n### Changed\n- Improved the accessibility of several field types. ([#10085](https://github.com/craftcms/cms/pull/10085))\n- Entries now validate that their post date comes before their expiry date, if they have one. ([#10074](https://github.com/craftcms/cms/issues/10074))\n- Entry post dates now default to the day before their expiry date, if they have one. ([#10074](https://github.com/craftcms/cms/issues/10074))\n- Video assets\u2019 dimensions are no longer suppressed, if they were set by a plugin or module. ([#9038](https://github.com/craftcms/cms/discussions/9038))\n- The GraphiQL IDE no longer updates the URL automatically as the query is modified. The query is now deep-linkable via a new \u201cShare query\u201d button. ([#10064](https://github.com/craftcms/cms/issues/10064))\n- `canSetProperties` and `hasMethods` are now reserved field handles.\n- Improved the performance of entry queries. ([#10095](https://github.com/craftcms/cms/issues/10095))\n- `craft\\base\\Element::__set()` now detects whether a custom field value is being set, and if so, passes the value through `setFieldValue()`. ([#7726](https://github.com/craftcms/cms/issues/7726))\n- Updated GraphiQL to 1.4.7.\n\n### Fixed\n- Fixed a bug where `craft\\base\\FieldTrait::$required` wasn\u2019t getting set before custom fields\u2019 `getInputHtml()` methods were called.\n- Fixed a bug where entry drafts and revisions were missing their structure info when previewed. ([#10056](https://github.com/craftcms/cms/issues/10056))\n- Fixed a bug where \u201cCustomize\u201d buttons on element index pages didn\u2019t have a pointer cursor. ([#10067](https://github.com/craftcms/cms/issues/10067))\n- Fixed a bug where Edit Entry pages would warn about losing unsaved changes if the page was unloaded immediately after the entry type was changed. ([#10076](https://github.com/craftcms/cms/issues/10076))\n- Fixed a bug where Craft wasn\u2019t able to resolve dynamic control panel resource requests if Craft was installed in a subdirectory.\n- Fixed an error that occurred when attempting to create a new entry and draft via the `entry-revisions/save-draft` action. ([#10089](https://github.com/craftcms/cms/issues/10089))\n- Fixed a bug where entries\u2019 descendants\u2019 URIs weren\u2019t always getting updated after a parent\u2019s URI changed. ([#10094](https://github.com/craftcms/cms/issues/10094))\n\n## 3.7.20 - 2021-11-06\n\n### Changed\n- Non-admin users with permission to administrate other users can now require password resets for other users. ([#10057](https://github.com/craftcms/cms/issues/10057))\n- The Plugin Store will now prevent installation of plugins that require a greater PHP version than what\u2019s allowed by the environment.\n\n### Fixed\n- Fixed a bug where focus rings weren\u2019t visible on Safari. ([#10058](https://github.com/craftcms/cms/pull/10058))\n- Fixed a 403 error that occurred when executing pending migrations from the control panel while logged out. ([#9990](https://github.com/craftcms/cms/issues/9990))\n\n## 3.7.19.1 - 2021-11-04\n\n### Changed\n- `craft\\elements\\Entry::setAuthor()` now sets the entry\u2019s `$authorId` property.\n\n### Fixed\n- Fixed a bug where Edit Entry pages weren\u2019t preselecting the entry\u2019s parent, if it didn\u2019t exist on the primary site. ([#10050](https://github.com/craftcms/cms/issues/10050))\n\n## 3.7.19 - 2021-11-02\n\n> **Note**\n> After updating, run the following command for each Structure section, to prune unneeded structure data for drafts and revisions.\n>\n> ```\n> php craft utils/repair/section-structure <sectionHandle>\n> ```\n\n### Added\n- Added `craft\\services\\Structures::remove()`.\n\n### Changed\n- Entry drafts and revisions are no longer placed within the section\u2019s structure (with the exception of unpublished drafts, and provisional drafts which have been assigned a new parent entry). ([#9977](https://github.com/craftcms/cms/issues/9977), [#9999](https://github.com/craftcms/cms/issues/9999))\n- The `utils/repair/section-structure` command now prunes unneeded structure data for drafts and revisions.\n- The `utils/repair/section-structure` command now appends entries to the structure root if they don\u2019t have any supported sites in common with their parent.\n- `craft\\base\\Elementinterface::getModifiedFields()` and `isFieldModified()` now have `$anySite` attributes.\n- `craft\\services\\Elements::duplicateElement()` no longer places derivative elements in the structure.\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.7.17+ from the control panel. ([#9990](https://github.com/craftcms/cms/issues/9990))\n- Fixed a bug where Structure section entries would forget who their parent entry was, if it was an unpublished draft.\n- Fixed a bug where Structure sections\u2019 structure data wasn\u2019t getting soft-deleted when the section type was changed.\n- Fixed a bug where provisional drafts weren\u2019t given a position within the structure when converting a Channel section to a Structure.\n- Fixed a bug where `isset()` checks on renamed config settings were always returning `false`.\n- Fixed an error that could occur when deleting image transforms. ([#9957](https://github.com/craftcms/cms/issues/9957))\n- Fixed a bug where some Matrix sub-field changes could be discarded when applying a draft. ([#10034](https://github.com/craftcms/cms/issues/10034))\n- Fixed an incompatibility with the Overflow plugin. ([#10044](https://github.com/craftcms/cms/issues/10044))\n- Fixed a bug where Categories fields weren\u2019t eager-loading their relations in the structure-defined order. ([#10042](https://github.com/craftcms/cms/issues/10042))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.7.18.2 - 2021-10-27\n\n### Fixed\n- Fixed an error that could occur if the `CRAFT_STREAM_LOG` PHP constant was set to `true`.\n- Fixed a bug where the \u201cSave and continue editing\u201d action and its <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keybord shortcut weren\u2019t working for entry drafts, if the `autosaveDrafts` config setting was disabled. ([#10029](https://github.com/craftcms/cms/issues/10029))\n\n## 3.7.18.1 - 2021-10-27\n\n### Fixed\n- Fixed a bug where GraphQL mutations to create new entries were returning `null`. ([#10016](https://github.com/craftcms/cms/issues/10016))\n- Fixed a couple focus ring styling issues. ([#10017](https://github.com/craftcms/cms/issues/10017), [#10018](https://github.com/craftcms/cms/issues/10018))\n\n## 3.7.18 - 2021-10-26\n\n### Added\n- Added `craft\\console\\ErrorHandler`. ([#10006](https://github.com/craftcms/cms/pull/10006))\n\n### Changed\n- Craft no longer writes out informational log messages when it\u2019s not installed yet or an update is pending, if Dev Mode is disabled.\n- Dropdown fields now prepend a blank option to their menu when the current value is invalid. ([#9989](https://github.com/craftcms/cms/issues/9989))\n- Some control panel POST requests no longer disable database replica connections. ([#9996](https://github.com/craftcms/cms/discussions/9996))\n- Updated Axios to 0.21.4.\n- Updated jQuery UI to 1.13.0.\n\n### Fixed\n- Fixed a bug where `craft\\helpers\\Html::parseTagAttributes()` was ignoring tag attribute values if there were any whitespace characters surrounding the `=` character. ([#9997](https://github.com/craftcms/cms/pull/9997))\n- Fixed a bug where `craft\\helpers\\Html::parseTagAttributes()` was including trailing tabs, newlines, and other non-space whitespace characters in the parsed values of unquoted attributes. ([#9997](https://github.com/craftcms/cms/pull/9997))\n- Fixed an error that could occur if the `log` component was configured with a custom log target and `flushInterval` set to `1`.\n- Fixed a bug where `plugin/*` commands weren\u2019t always handling failures properly. ([#9984](https://github.com/craftcms/cms/issues/9984))\n- Fixed a bug where entry title changes could be overlooked when merging upstream changes into a draft. ([#9966](https://github.com/craftcms/cms/issues/9966))\n- Fixed a bug where it wasn\u2019t possible to query for draft or revision creators via GraphQL. ([craftcms/gatsby-source-craft#56](https://github.com/craftcms/gatsby-source-craft/issues/56))\n- Fixed a bug where Super Table blocks could go missing when a draft was created, if their block type ID matched another Matrix/Super Table/Neo block\u2019s ID on the same page.\n\n## 3.7.17.2 - 2021-10-21\n\n### Changed\n- `Craft::dd()` no longer defaults to including syntax highlighting in its output for console requests. ([#9972](https://github.com/craftcms/cms/pull/9972))\n\n### Fixed\n- Fixed a PHP error that could occur when uploading assets on some environments. ([#9995](https://github.com/craftcms/cms/issues/9995))\n- Fixed a PHP error that occurred when exporting elements on PHP 7.2 or 7.3. ([#9958](https://github.com/craftcms/cms/issues/9958))\n- Fixed a JavaScript error that occurred in Safari. ([#9976](https://github.com/craftcms/cms/issues/9976))\n\n## 3.7.17.1 - 2021-10-20\n\n### Fixed\n- Fixed an error that could occur when creating database backups on Windows. ([#9978](https://github.com/craftcms/cms/issues/9978))\n- Fixed a bug where it wasn\u2019t possible to upload assets if the `storage/` folder was symlinked. ([#9980](https://github.com/craftcms/cms/issues/9980))\n\n## 3.7.17 - 2021-10-19\n\n### Added\n- Added the `provisional` argument for the remaining draft mutations via GraphQL. ([#9946](https://github.com/craftcms/cms/issues/9946))\n- Added the `notes` and `name` arguments to the create draft mutation via GraphQL.\n- Added the `is countable` Twig test.\n- Added the `is object` Twig test.\n- Added `craft\\helpers\\ElementHelper::isCanonical()`.\n- Added `craft\\helpers\\ElementHelper::isDerivative()`.\n- Added `craft\\services\\Path::getSystemPaths()`.\n\n### Changed\n- Improved the accessibility of overflowing breadcrumbs and the \u201cMy account\u201d menu. ([#9945](https://github.com/craftcms/cms/pull/9945))\n- Logs now include the raw request body in place of the `$_POST` array, if the `$_POST` array is empty. ([#9941](https://github.com/craftcms/cms/discussions/9941))\n- It\u2019s now possible to modify Entries fields to relate entry drafts. ([#9963](https://github.com/craftcms/cms/issues/9963))\n- It\u2019s now possible to set Matrix block queries\u2019 `field` and `owner` params via config arrays. ([#9968](https://github.com/craftcms/cms/issues/9968))\n- The `_includes/forms/text.html` control panel template now supports an `orientation` config value, which defines the `dir` input attribute.\n- Craft no longer logs a warning when the request path attempts to break out of the `templates/` folder. ([#9929](https://github.com/craftcms/cms/issues/9929))\n- Updated Composer to 2.1.9.\n- Updated Garnish to 0.1.47.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to create or publish a provisional draft via GraphQL. ([#9946](https://github.com/craftcms/cms/issues/9946))\n- Fixed a bug where entry drafts weren\u2019t getting propagated to other sites automatically after a section\u2019s Propagation Method setting was changed. ([#9944](https://github.com/craftcms/cms/issues/9944))\n- Fixed a bug where element indexes weren\u2019t immediately showing changes after an element was restored.\n- Fixed a bug where user indexes weren\u2019t immediately showing changes to users\u2019 activation/suspension states. ([#9947](https://github.com/craftcms/cms/issues/9947))\n- Fixed an element query performance issue. ([#9806](https://github.com/craftcms/cms/discussions/9806))\n- Fixed a bug where front-end action requests could resolve to disabled sites.\n- Fixed a bug where Assets fields weren\u2019t respecting their dynamic folder path settings for unpublished drafts. ([#9619](https://github.com/craftcms/cms/issues/9619))\n- Fixed a bug where deprecation warnings weren\u2019t getting logged if `craft\\services\\Deprecator::$logTarget` was set to `'logs'`.\n- Fixed a bug where escaped quotes (`\\\"`) in element export data were causing CSV cell values to end prematurely. ([#9958](https://github.com/craftcms/cms/issues/9958))\n- Fixed a bug where HTML entities within nested field values weren\u2019t getting encoded for Matrix block previews. ([#9964](https://github.com/craftcms/cms/issues/9964))\n- Fixed an error that could occur on element edit pages if there weren\u2019t any alternate form actions. ([#9969](https://github.com/craftcms/cms/issues/9969))\n- Fixed a bug where it wasn\u2019t possible to upload an asset via a data URL if its MIME type contained a period. ([#9632](https://github.com/craftcms/cms/issues/9632))\n- Fixed a bug where the characters-left indicator was right-aligned for RTL Plain Text fields, for users with an LTR formatting locale. ([#9967](https://github.com/craftcms/cms/issues/9967))\n- Fixed a bug where `craft\\web\\ErrorHandler::EVENT_BEFORE_HANDLE_EXCEPTION` wasn\u2019t getting triggered for requests that accepted a JSON response. ([#9973](https://github.com/craftcms/cms/issues/9973))\n\n### Security\n- Assets fields now require temporary files to reside in temporary folders or somewhere within the project root, excluding system directories.\n- Fixed a potential RCE vulnerability.\n\n## 3.7.16 - 2021-10-06\n\n### Added\n- Added `craft\\elements\\Asset::getUrlsBySize()`. ([#9931](https://github.com/craftcms/cms/discussions/9931))\n\n### Fixed\n- Fixed a bug where the top-level \u201cEnabled\u201d lightswitch on Edit Entry pages wasn\u2019t getting updated when adding a new site to an entry. ([#9935](https://github.com/craftcms/cms/issues/9935))\n- Fixed a bug where entry indexes weren\u2019t showing changes to unpublished drafts until a published entry was saved. ([#9940](https://github.com/craftcms/cms/issues/9940))\n\n## 3.7.15 - 2021-10-05\n\n### Added\n- Added the `graphql/create-token` command. ([#9930](https://github.com/craftcms/cms/discussions/9930))\n- Added the `graphql/list-schemas` command.\n- Added the `users/impersonate` command. ([#9919](https://github.com/craftcms/cms/pull/9919))\n- Added the `provisional` argument for draft mutations via GraphQL.\n- Added the `is array` Twig test.\n- Added the `is callable` Twig test.\n- Added the `is float` Twig test.\n- Added the `is integer` Twig test.\n- Added the `is numeric` Twig test.\n- Added the `is resource` Twig test.\n- Added the `is scalar` Twig test.\n- Added the `is string` Twig test.\n- Added `craft\\base\\ElementTrait::$isNewForSite`.\n- Added `craft\\mutex\\DbMutexTrait`.\n\n### Changed\n- Mutex locks which are \u201creleased\u201d during a database transaction are no longer actually released for other requests until the transaction is complete.\n- Username inputs now disable auto-capitalization on iOS devices.\n- Date and time fields now use native `date` and `time` input types on mobile. ([#9903](https://github.com/craftcms/cms/discussions/9903))\n- Improved the performance of eager-loading entry authors. ([#9907](https://github.com/craftcms/cms/discussions/9907))\n- Simultaneous entry-save requests are now executed once at a time.\n- Matrix block queries now factor in nested fields based on the `type`/`typeId` param, if set. ([#9921](https://github.com/craftcms/cms/discussions/9921))\n- The `graphql/dump-schema` and `graphql/print-schema` commands now support a `--schema` argument.\n- The `users/delete` and `users/set-password` commands now support passing a user ID.\n- `craft\\fields\\Matrix::getBlockTypeFields()` now has a `$typeIds` argument.\n\n### Deprecated\n- Deprecated `craft\\helpers\\UrlHelper::baseRequestUrl()`. `Craft::getAlias('@web')` should be used instead.\n- Deprecated `craft\\mutex\\PrefixedMutexTrait`. `DbMutexTrait` should be used instead.\n\n### Fixed\n- Fixed a bug where the \u201cDuplicate (with descendants)\u201d element action would only partially duplicate multi-level structures. ([#9889](https://github.com/craftcms/cms/issues/9889))\n- Fixed a bug where it wasn\u2019t possible to mutate a provisional draft via GraphQL. ([#9892](https://github.com/craftcms/cms/issues/9892))\n- Fixed a bug where it wasn\u2019t possible to mutate a draft via GraphQL without passing all required custom fields. ([#9893](https://github.com/craftcms/cms/issues/9893))\n- Fixed an error that could occur when merging upstream changes into a draft, if the canonical entry had been enabled for a new site and contained new Matrix blocks. ([#9895](https://github.com/craftcms/cms/issues/9895))\n- Fixed a bug where sections\u2019 Default Status settings weren\u2019t being respected when adding a new site to an entry. ([#9896](https://github.com/craftcms/cms/issues/9896))\n- Fixed a bug where the `utils/repair/section-structure` command was removing provisional drafts from the structure. ([#9868](https://github.com/craftcms/cms/issues/9868))\n- Fixed a bug where the control panel header elements could become squished. ([#9902](https://github.com/craftcms/cms/issues/9902))\n- Fixed a bug where collapsed structure elements weren\u2019t getting included in exports. ([#9913](https://github.com/craftcms/cms/issues/9913))\n- Fixed a bug where Matrix blocks weren\u2019t getting propagated to sites that were added to a draft, when its changes were applied to the canonical entry. ([#9910](https://github.com/craftcms/cms/issues/9910))\n- Fixed a bug where it wasn\u2019t possible to revert Matrix blocks that had been soft-deleted. ([#9928](https://github.com/craftcms/cms/issues/9928))\n- Fixed a styling conflict with Craft Commerce.\n- Fixed a bug where `craft\\services\\AssetTransforms::getLocalImageSource()` was trying to delete non-existent transform source files. ([#9884](https://github.com/craftcms/cms/issues/9884))\n- Fixed a bug where `craft\\services\\Fields::getLayoutByType()` wasn\u2019t setting the `type` property when a field layout didn\u2019t exist yet for the element type. ([#9918](https://github.com/craftcms/cms/issues/9918))\n\n### Security\n- Generated front-end URLs now begin with the `@web` alias value if the current site doesn\u2019t have a base URL.\n- Password inputs now hide the password when their form is submitted.\n\n## 3.7.14 - 2021-09-28\n\n### Added\n- Added `craft\\base\\Element::EVENT_PREP_QUERY_FOR_TABLE_ATTRIBUTE`. ([#9862](https://github.com/craftcms/cms/pull/9862))\n- Added `craft\\base\\ElementInterface::getIsFresh()`.\n- Added `craft\\base\\ElementInterface::setIsFresh()`.\n- Added `craft\\cache\\ElementQueryTagDependency`.\n- Added `craft\\elements\\db\\ElementQuery::getCacheTags()`.\n- Added `craft\\events\\ElementIndexTableAttributeEvent`.\n- Added `craft\\events\\SearchEvent::$elementQuery`.\n- Added `craft\\events\\SearchEvent::getElementIds()`.\n- Added `craft\\events\\SearchEvent::setElementIds()`.\n- Added `craft\\services\\Search::searchElements()`.\n- Added the `fullPane` setting to Vue admin tables, which can be set to `false` if the table is not the only UI component in its content pane.\n\n### Changed\n- Enhanced the visibility of global navigation badges.\n- Enhanced the visibility of focused menu options.\n- Improved the performance of element query `search` params. ([#9867](https://github.com/craftcms/cms/issues/9867))\n- Element queries\u2019 `cache()` methods now create a cache dependency based on the element queries\u2019 cache tags by default.\n- Element index queries are now cached.\n- The `migrate/all` command now includes plugins whose schema versions have changed, even if they don\u2019t have any new migrations. ([#9860](https://github.com/craftcms/cms/issues/9860))\n- It\u2019s now possible to pass an array of Matrix block IDs into a Matrix field\u2019s element query param. ([#9875](https://github.com/craftcms/cms/issues/9875))\n- Improved GraphQL performance. ([#9830](https://github.com/craftcms/cms/issues/9830))\n\n### Deprecated\n- Deprecated `craft\\base\\Element::getHasFreshContent()`. `getIsFresh()` should be used instead.\n- Deprecated `craft\\services\\Search::filterElementIdsByQuery()`.\n\n### Fixed\n- Fixed the control panel heading order for more intuitive navigation by screen reader users.\n- Fixed an uncaught error that could occur when saving a draft. ([#9841](https://github.com/craftcms/cms/issues/9841))\n- Fixed an error that occurred when mutating an entry via GraphQL, if it belonged to any disabled sites. ([#9842](https://github.com/craftcms/cms/issues/9842))\n- Fixed a bug where some field types wouldn\u2019t use their configured default values on new entries, fields that weren\u2019t included in the primary entry type. ([#9852](https://github.com/craftcms/cms/issues/9852))\n- Fixed a bug where some action menus didn\u2019t have a label for screen readers.\n- Fixed a bug where `craft\\web\\Response::redirect()` no longer supported passing an array to the `$url` argument. ([#9857](https://github.com/craftcms/cms/issues/9857))\n- Fixed a bug where duplicated entries that were created via an \u201cApplying new propagation method\u201d job weren\u2019t getting positioned correctly based on the original entries\u2019 structure. ([#9782](https://github.com/craftcms/cms/issues/9782))\n- Fixed a bug where unpublished drafts could disappear after clicking \u201cCreate entry\u201d if the URI could not be made unique. ([#9873](https://github.com/craftcms/cms/issues/9873))\n- Fixed an error that could occur when processing `relatedTo*` GraphQL arguments in some cases.\n- Fixed an error that could occur when an entry\u2019s Title Format referenced a custom field with `author` in its handle. ([#9891](https://github.com/craftcms/cms/issues/9891))\n\n### Security\n- Fixed a potential CSV injection vulnerability.\n\n## 3.7.13 - 2021-09-14\n\n### Added\n- Added the `up` command, which calls `migrate/all` and `project-config/apply`, wrapped in a mutex lock.\n- Added `craft\\services\\Plugins::updatePluginVersionInfo()`.\n\n### Changed\n- Matrix fields are now fully highlighted when changed, rather than just the specific sub-field. ([#9814](https://github.com/craftcms/cms/issues/9814))\n- When a draft is saved, Craft now automatically reloads other browser tabs that are opened to the same Edit Entry page.\n- Emoji characters are now stripped from search keywords. ([#9813](https://github.com/craftcms/cms/issues/9813))\n- Control panel pages now send `Content-Security-Policy: frame-ancestors 'self'` headers.\n- Edit Entry pages now reveal some exception messages when drafts are unable to save.\n- Control panel pages now have a \u201cSkip to content\u201d link before the navigation, for screen readers. ([#9832](https://github.com/craftcms/cms/pull/9832))\n- Live Preview now maintains the window\u2019s original scroll position when closed. ([#9828](https://github.com/craftcms/cms/issues/9828))\n- `craft\\console\\Controller::run()` now passes the `--interactive`, `--color`, and `--silentExitOnException` options to the sub-command.\n\n### Deprecated\n- Deprecated `craft\\services\\Updates::setNewPluginInfo()`. `craft\\services\\Plugins::updatePluginVersionInfo()` should be used instead.\n\n### Fixed\n- Fixed an incompatibility with SEOmatic. ([#9811](https://github.com/craftcms/cms/issues/9811))\n- Fixed a bug where the `backup`, `install/plugin`, `restore`, and `setup` commands weren\u2019t passing the `--interactive`, `--color`, and `--silentExitOnException` options to their sub-commands.\n- Fixed a bug where drafts were getting autosaved when the site status toggles were expanded, if the entry was disabled for the current site but enabled for other sites.\n- Fixed a bug where it was possible for two provisional drafts to exist for the same entry and user.\n- Fixed an error that could occur if a log target was configured with a low flush interval. ([#9818](https://github.com/craftcms/cms/issues/9818))\n- Fixed an error that could occur on the Settings \u2192 General page if the `system` project config array was missing any values. ([#7350](https://github.com/craftcms/cms/issues/7350))\n- Fixed a bug where Edit Entry pages weren\u2019t redirecting to the Current revision after reverting an entry to a prior revision. ([#9821](https://github.com/craftcms/cms/issues/9821))\n- Fixed a bug where Assets fields were suppressing some exceptions while rendering the subpath, which weren\u2019t related to template rendering. ([#9824](https://github.com/craftcms/cms/issues/9824))\n- Fixed an error that could occur when setting an integer value on an active record attribute for a `MEDIUMTEXT` or `LONGTEXT` column. ([#9825](https://github.com/craftcms/cms/issues/9825))\n- Fixed a bug where it wasn\u2019t possible to pinch-zoom the control panel on Android devices. ([#9833](https://github.com/craftcms/cms/pull/9833))\n\n## 3.7.12 - 2021-09-08\n\n### Added\n- Added `craft\\helpers\\ElementHelper::isOutdated()`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_UPDATE_SEARCH_INDEX`. ([#9801](https://github.com/craftcms/cms/discussions/9801))\n\n### Changed\n- Improved the performance of applying drafts. ([#9802](https://github.com/craftcms/cms/issues/9802))\n- Improved the performance of element queries. ([#9806](https://github.com/craftcms/cms/discussions/9806))\n- Live Preview is once again supported by entries when the `autosaveDrafts` config setting is disabled.\n- Checkboxes, Dropdown, Multi-select, and Radio Buttons fields now include the selected options\u2019 labels in their search keywords. ([#9799](https://github.com/craftcms/cms/issues/9799))\n- It\u2019s now possible for field types to disable delta name registration for nested custom fields by calling `Craft::$app->view->setIsDeltaRegistrationActive(false);` before rendering them.\n- `craft\\events\\ElementEvent` now extends `craft\\events\\CancelableEvent`.\n- `craft\\models\\FieldLayout::createForm()` now accepts a `registerDeltas` key in its `$config` argument, which can be set to `true` or `false` to enable/disable delta name registration for any custom fields in the form.\n- `craft\\services\\Elements::duplicateElement()` now has a `$placeInStructure` argument.\n- The `Craft.t()` JS method now supports translation messages with [`select` parameters](https://www.yiiframework.com/doc/guide/2.0/en/tutorial-i18n#selection).\n\n### Deprecated\n- Deprecated `craft\\behaviors\\DraftBehavior::getIsOutdated()`.\n\n### Fixed\n- Fixed an error that occurred when merging upstream Matrix field changes into a draft, if the draft didn\u2019t exist in all the same sites as its canonical entry. ([#9774](https://github.com/craftcms/cms/issues/9774))\n- Fixed a bug where duplicated entries that were created via an \u201cApplying new propagation method\u201d job weren\u2019t getting positioned correctly based on the original entries\u2019 structure. ([#9782](https://github.com/craftcms/cms/issues/9782))\n- Fixed a bug where `craft\\fieldlayoutelements\\CustomField::formHtml()` was always enabling delta name registration, unless the form was static.\n- Fixed an exception that could occur if an invalid alias was passed to the `svg()` Twig function.\n- Fixed a bug where Edit Category pages weren\u2019t remembering changes or showing validation errors in the event that a category couldn\u2019t be saved. ([#9796](https://github.com/craftcms/cms/issues/9796))\n- Fixed a bug where the `migrate/all` command wasn\u2019t running Craft and plugin migrations if the schema versions hadn\u2019t changed.\n- Fixed a bug where Craft was indexing search keywords for block elements that belonged to entry revisions. ([#9801](https://github.com/craftcms/cms/discussions/9801))\n- Fixed a bug where `craft\\services\\Elements::mergeCanonicalChanges()` was doing more work than it needed to. ([#9802](https://github.com/craftcms/cms/issues/9802))\n- Fixed a bug where it wasn\u2019t possible to paste into a Number field on Windows. ([#9803](https://github.com/craftcms/cms/issues/9803))\n\n## 3.7.11 - 2021-08-31\n\n### Added\n- Added the `canonicalUid` field to entries queried via GraphQL.\n- Added `craft\\base\\ElementInterface::getCanonicalUid()`. ([#9757](https://github.com/craftcms/cms/issues/9757))\n\n### Changed\n- Edit Entry pages now show a \u201cSave draft\u201d button for users without the \u201cPublish live changes\u201d permission. ([#9750](https://github.com/craftcms/cms/issues/9750))\n- Users without the \u201cDelete entries\u201d permission can now delete their own unpublished drafts.\n- All entries now have a `canonicalId` field when queried via GraphQL now; not just drafts.\n- `craft\\services\\Matrix::validateBlockType()` no longer has a `$validateUniques` argument.\n- Improved the performance of entry queries for installs with several hundred thousand entries or more.\n- Visible password inputs now prevent the browser from auto-capitalizing the input text.\n\n### Deprecated\n- Deprecated `craft\\records\\MatrixBlockType::$validateUniques`.\n\n### Fixed\n- Fixed an error that could occur when saving Matrix fields, if the Type Linked Field and Expanded Singles plugins were both installed. ([#9749](https://github.com/craftcms/cms/issues/9749))\n- Fixed a bug where `craft\\helpers\\Queue::push()` wasn\u2019t returning the job ID. ([#9764](https://github.com/craftcms/cms/issues/9764))\n- Fixed a bug where code editors powered by Monaco Editor were showing focus rings on the text cursor. ([#9772](https://github.com/craftcms/cms/issues/9772))\n\n## 3.7.10 - 2021-08-19\n\n### Changed\n- It\u2019s now possible to hook into the delete process of a Vue admin table row.\n- Dynamically-served control panel resources no longer get cache headers, and no longer validate that the URI hash matches. ([#9738](https://github.com/craftcms/cms/issues/9738))\n\n### Fixed\n- Fixed a bug where Tokenfield inputs weren\u2019t getting sized correctly when the window was resized, if rendered within a field that used a fieldset. ([#9734](https://github.com/craftcms/cms/issues/9734))\n- Fixed a bug where row headings that included a status were getting bold text in Vue admin tables. ([#9704](https://github.com/craftcms/cms/issues/9704))\n- Fix a bug where GraphQL queries could fail if they included Date fields with empty values.\n- Fixed an error that could occur when installing Craft using whe web-based install wizard, if a database connection couldn\u2019t be established. ([#9740](https://github.com/craftcms/cms/pull/9740))\n\n## 3.7.9 - 2021-08-17\n\n### Added\n- Added the `utils/prune-provisional-drafts` command, which prunes provisional drafts for entries that have more than one per user.\n- Added `craft\\helpers\\App::supportsIdn()`.\n\n### Changed\n- Custom fields\u2019 search keywords are now indexed for entry drafts.\n- Email fields now allow IDNA ASCII characters in the domain name, on servers with the Intl extension. ([#9698](https://github.com/craftcms/cms/discussions/9698))\n- Revved asset URLs now use a `v` query string param. ([#9716](https://github.com/craftcms/cms/issues/9716))\n- Element sources\u2019 badge counts are now kept up-to-date when performing bulk element actions. ([#9728](https://github.com/craftcms/cms/issues/9728))\n- Date fields that are set to show the time zone now set their values to the selected time zone by default when queried via GraphQL, to be consistent with the PHP and Twig APIs. ([#9719](https://github.com/craftcms/cms/issues/9719))\n- The `utils/prune-revisions` command now has a `--dry-run` flag.\n- The `utils/prune-revisions` command will now output how many excess revisions it could actually load for each entry, if it differed from the original estimate.\n- Updated Yii to 2.0.43.\n\n### Deprecated\n- Deprecated `craft\\helper\\App::isNitro()`. ([#9709](https://github.com/craftcms/cms/issues/9709))\n\n### Fixed\n- Fixed a bug where custom fields\u2019 search keywords weren\u2019t getting indexed for newly-created entries. ([#9699](https://github.com/craftcms/cms/issues/9699))\n- Fixed a bug where user email addresses would validate if they had IDNA ASCII characters in the local part, even though Swiftmailer doesn\u2019t allow it. ([#9096](https://github.com/craftcms/cms/issues/9096))\n- Fixed a bug where Date fields weren\u2019t handling array values with `datetime` keys properly. ([#9708](https://github.com/craftcms/cms/issues/9708))\n- Fixed a bug where Edit Asset pages for top-level assets had an extra breadcrumb. ([#9720](https://github.com/craftcms/cms/issues/9720))\n- Fixed a bug where the \u201cNew category\u201d button on the Categories index page would link to a 404 when a non-primary site was selected. ([#9722](https://github.com/craftcms/cms/issues/9722))\n- Fixed a bug where changing the site from an Edit Category page would go to a 404 when editing a new, unsaved category.\n- Fixed a bug where deep-linking to a volume\u2019s subfolder that contained any non-ASCII characters would return a 404. ([#9723](https://github.com/craftcms/cms/issues/9723))\n- Fixed a bug where the Assets index page wasn\u2019t updating the URL when selecting a subfolder that had been renamed on the same page load.\n- Fixed a bug where the CLI installer would always save a `PRIMARY_SITE_URL` environment variable to the `.env` file, even if the initial site\u2019s base URL was already set to an alias or environment variable. ([#9724](https://github.com/craftcms/cms/issues/9724))\n- Fixed an `UnsupportedSiteException` error that could occur on Edit Entry pages for provisional drafts, if any upstream Matrix blocks needed to be merged in, whose Matrix field\u2019s Propagation Method was set to something besides \u201cSave blocks to all sites the owner element is saved in\u201d. ([#9664](https://github.com/craftcms/cms/issues/9664))\n- Fixed a bug where replacing an asset\u2019s file from an Edit Asset page would seem to not take effect until the page was refreshed. ([#9700](https://github.com/craftcms/cms/issues/9700))\n- Fixed a bug where upstream translatable field changes weren\u2019t always getting merged into entry drafts properly. ([#9729](https://github.com/craftcms/cms/issues/9729))\n\n## 3.7.8 - 2021-08-06\n\n### Added\n- It\u2019s now possible to bypass console warnings about running Craft as the root/super user by defining a `CRAFT_ALLOW_SUPERUSER` environment variable. ([#7955](https://github.com/craftcms/cms/issues/7955))\n- Added `craft\\web\\Request::setIsActionRequest()`.\n- Added `craft\\web\\twig\\CpExtension`.\n- Added `craft\\web\\twig\\GlobalsExtension`.\n\n### Changed\n- Craft\u2019s global Twig variables (e.g. `craft`) can now be autocompleted within Twig templates when using PhpStorm with the [Symfony Support](https://plugins.jetbrains.com/plugin/7219-symfony-support) plugin.\n\n### Fixed\n- Fixed a bug where the site menu on Edit Category pages wasn\u2019t working properly. ([#9658](https://github.com/craftcms/cms/issues/9658))\n- Fixed a bug where the \u201cSave and add another\u201d action on Edit Category pages wasn\u2019t retaining the currently-selected site or parent category selection. ([#9677](https://github.com/craftcms/cms/issues/9677))\n- Fixed a bug where the \u201cDiscard changes\u201d button on Edit Entry pages wasn\u2019t retaining the currently-selected site. ([#9663](https://github.com/craftcms/cms/issues/9663))\n- Fixed an error that occurred when attempting to change a global set\u2019s handle, if its former handle was a reserved word.\n- Fixed a bug where it wasn\u2019t possible to search for Matrix blocks by a specific sub-field\u2019s handle using the `search` param. ([#9679](https://github.com/craftcms/cms/issues/9679))\n- Fix a JavaScript error that occurred after moving a subfolder on the Assets index page. ([#9686](https://github.com/craftcms/cms/issues/9686))\n- Fixed an infinite loop that could occur when handing a front-end set-password request, if there was a validation error on the submitted password. ([#9684](https://github.com/craftcms/cms/issues/9684))\n- Fixed a bug where entries could lose other sites\u2019 content when being saved from an unpublished draft, if their section\u2019s Propagation Method was set to \u201cLet each entry choose which sites it should be saved to\u201d. ([#9680](https://github.com/craftcms/cms/issues/9680))\n- Fixed a bug where entries that were created via the \u201cSave as a new entry\u201d action on an Edit Entry page didn\u2019t include all content changes made in the original entries\u2019 provisional draft. ([#9681](https://github.com/craftcms/cms/issues/9681))\n- Fixed a bug where code blocks in field instructions could bleed into the subsequent field. ([#9683](https://github.com/craftcms/cms/issues/9683))\n\n## 3.7.7 - 2021-07-29\n\n### Added\n- Added the `canonicalId` GraphQL field for entries.\n\n### Deprecated\n- Deprecated the `sourceId` and `sourceUid` GraphQL fields for entries. `canonicalId` should be used instead.\n\n### Fixed\n- Fixed an error that could occur when creating a new entry, if the section\u2019s Entry URI Format contained `{canonicalId}`. ([#6080](https://github.com/craftcms/cms/issues/6080))\n- Fixed a bug where `craft\\helpers\\Db::isTextualColumnType()` was always returning `false`.\n- Fixed a bug where `:empty:` element query conditions weren\u2019t working correctly for empty string values on Postgres. ([#9641](https://github.com/craftcms/cms/issues/9641))\n- Fixed an error that occurred if an entry\u2019s `getSupportedSites()` method was called on a front-end, non-action request. ([#9649](https://github.com/craftcms/cms/issues/9649))\n- Fixed a SQL error that could occur when running the \u201cFind and Replace\u201d utility. ([#9651](https://github.com/craftcms/cms/pull/9651))\n- Fixed a bug where Date fields that were set to only show the time input weren\u2019t saving new values properly. ([#9650](https://github.com/craftcms/cms/issues/9650))\n- Fixed a bug where `craft\\services\\Fields::$oldFieldColumnPrefix` wasn\u2019t getting set properly when deleting a Matrix block type.\n- Fixed a bug where Matrix sub-fields were getting new content columns whenever their block type\u2019s handle was changed, when the existing columns should have been renamed.\n\n## 3.7.6 - 2021-07-27\n\n### Added\n- Added the `provisionalDrafts` argument for entry GraphQL queries.\n\n### Fixed\n- Fixed a bug where global set queries could contain fields that were supposed to be hidden.\n- Fixed a bug where `craft\\helpers\\DateTimeHelper::toDateTime()` was interpreting year-only values as timestamps. ([#9642](https://github.com/craftcms/cms/issues/9642))\n- Fixed a bug where blank Email field values were getting stored as empty strings rather than `NULL`. ([#9641](https://github.com/craftcms/cms/issues/9641))\n- Fixed a bug where it wasn\u2019t possible to clear out some entry field values, if their values were blank to begin with. ([#9643](https://github.com/craftcms/cms/issues/9643))\n\n## 3.7.5 - 2021-07-23\n\n### Added\n- Added `craft\\base\\ElementTrait::$firstSave`. ([#9638](https://github.com/craftcms/cms/discussions/9638))\n- Added `craft\\base\\FieldInterface::getOrientation()`.\n- Added `craft\\helpers\\FieldHelper`.\n\n### Changed\n- Field orientations are now based on the primary site\u2019s language for single-site installs. ([#9616](https://github.com/craftcms/cms/issues/9616))\n- Matrix block type handles are now limited to 47 characters. ([#9636](https://github.com/craftcms/cms/issues/9636))\n\n### Fixed\n- Fixed a bug where Live Preview stopped working when the device type was changed, for preview targets that had auto-refresh disabled. ([#9610](https://github.com/craftcms/cms/issues/9610))\n- Fixed a 403 error that occurred when attempting to discard changes on an entry. ([#9602](https://github.com/craftcms/cms/issues/9602))\n- Fixed a bug where opening the image editor would cause the page to scroll to the top. ([#9612](https://github.com/craftcms/cms/issues/9612))\n- Fixed a bug where provisional drafts weren\u2019t displaying a notice when upstream changes had been merged into them. ([#9615](https://github.com/craftcms/cms/issues/9615))\n- Fixed a bug where entry titles were set to `null` before getting regenerated via their Title Format for new drafts.\n- Fixed SQL errors that could occur when updating Craft 3.7. ([#9624](https://github.com/craftcms/cms/issues/9624), [#9625](https://github.com/craftcms/cms/issues/9625))\n- Fixed a bug where `craft\\web\\Request::getRawCookies()` was returning hashed cookie values.\n- Fixed a PHP error that could occur when saving a site, if there were any event handlers on `craft\\services\\Sites::EVENT_BEFORE_SAVE_SITE`.\n- Fixed an error that could occur when deleting a route from the control panel if there were any event handlers on `craft\\services\\Routes::EVENT_AFTER_DELETE_ROUTE`.\n- Fixed a bug where existing fields\u2019 maximum handle lengths were nine characters less than they needed to be.\n- Fixed a bug where Craft would send a `X-Robots-Tag: none` header on front-end Login pages. ([#9621](https://github.com/craftcms/cms/issues/9621))\n- Fixed a bug where the \u201cSingles\u201d entry source showed the Author column by default. ([#9627](https://github.com/craftcms/cms/issues/9627))\n- Fixed a bug where the control panel header could remain \u201cstuck\u201d after closing Live Preview in Firefox. ([#9630](https://github.com/craftcms/cms/issues/9630))\n- Fixed a JavaScript error that could occur on Edit Entry pages. ([#9631](https://github.com/craftcms/cms/pull/9631))\n- Fixed a bug where assets weren\u2019t always getting moved out of the Temporary Uploads volume when saving an entry. ([#9619](https://github.com/craftcms/cms/issues/9619))\n- Fixed a bug where it wasn\u2019t possible to upload an asset via a data URL if its MIME type contained a dash. ([#9632](https://github.com/craftcms/cms/issues/9632))\n\n## 3.7.4 - 2021-07-19\n\n### Added\n- Added `craft\\helpers\\ElementHelper::shouldTrackChanges()`.\n\n### Changed\n- Improved the performance of delta form submissions. ([#9605](https://github.com/craftcms/cms/pull/9605))\n\n### Fixed\n- Fixed a bug where temporary volume folders couldn\u2019t be created for console requests. ([#9597](https://github.com/craftcms/cms/pull/9597))\n- Fixed a bug where `craft\\base\\Field::copyValue()` wasn\u2019t passing the source element to `$this->serializeValue()`. ([sebastian-lenz/craft-linkfield#161](https://github.com/sebastian-lenz/craft-linkfield/issues/161))\n- Fixed a bug where entries were only tracking modified attributes for the site the changes were made on.\n- Fixed a bug where entries were only tracking modified relation fields for the site changes were made on. ([#9596](https://github.com/craftcms/cms/issues/9596))\n- Fixed a bug where images within rich text fields\u2019 static previews could bleed out of their container element. ([#9603](https://github.com/craftcms/cms/issues/9603))\n- Fixed a bug where passing an empty value to `relatedTo()` and `andRelatedTo()` would yield no results on an element query. ([#9599](https://github.com/craftcms/cms/issues/9599))\n- Fixed a bug where existing Matrix/Neo/Super Table blocks could lose their content when creating a provisional draft, if additional block changes were queued up before the draft was fully created. ([#9601](https://github.com/craftcms/cms/issues/9601))\n\n## 3.7.3.2 - 2021-07-18\n\n### Fixed\n- Fixed a bug where Edit Entry pages weren\u2019t submitting changes to fields if they had been changed back to their original value they had on page load. ([#9575](https://github.com/craftcms/cms/issues/9575))\n\n## 3.7.3.1 - 2021-07-17\n\n### Changed\n- Improved the performance of Edit Entry pages. ([#9575](https://github.com/craftcms/cms/issues/9575))\n\n### Fixed\n- Fixed styling issues in the control panel. ([#9590](https://github.com/craftcms/cms/issues/9590), [#9592](https://github.com/craftcms/cms/issues/9592))\n- Fixed a bug where entry drafts could label fields as being modified on the canonical entry, even when they weren\u2019t.\n\n## 3.7.3 - 2021-07-16\n\n### Added\n- Added the `sendContentLengthHeader` config setting.\n\n### Changed\n- Template requests no longer respond with a `Content-Length` header, unless the `sendContentLengthHeader` config setting is enabled. ([#8070](https://github.com/craftcms/cms/issues/8070))\n- Edit Asset pages are now located at `assets/edit/<id>-<filename>` rather than `assets/<volume>/<id>-<filename>`.\n- `edit` is now a reserved volume handle.\n- Number fields no longer allow non-numeric input. ([#9586](https://github.com/craftcms/cms/issues/9586))\n\n### Fixed\n- Fixed a bug where object templates didn\u2019t support string interpolation within normal Twig tags. ([#9138](https://github.com/craftcms/cms/discussions/9138))\n- Fixed an error that could occur after applying project config changes.\n- Fixed a bug where assets\u2019 control panel URLs were getting routed to the Assets index page. ([#9583](https://github.com/craftcms/cms/issues/9583))\n- Fixed a visual bug where field status indicators were overlapping the prior field in the same row. ([#9585](https://github.com/craftcms/cms/issues/9585))\n\n## 3.7.2 - 2021-07-15\n\n### Fixed\n- Fixed a SQL error that could occur when updating to Craft 3.7. ([#9574](https://github.com/craftcms/cms/issues/9574))\n- Fixed a bug where Edit Entries pages were displaying a \u201cDelete draft\u201d action for provisional drafts.\n- Fixed a 404 error that occurred when linking to a volume\u2019s subfolder on the Assets index page, if the subfolder contained a dash. ([#9579](https://github.com/craftcms/cms/issues/9579))\n- Fixed a bug where Craft was logging errors and warnings to `stdout` when Dev Mode was disabled, if the `CRAFT_STREAM_LOG` PHP constant was set. ([#9572](https://github.com/craftcms/cms/pull/9572))\n\n## 3.7.1 - 2021-07-14\n\n### Added\n- Added the `transformSvgs` config setting. ([#9557](https://github.com/craftcms/cms/pull/9557))\n\n### Changed\n- Console requests no longer force Dev Mode to be enabled. ([#5256](https://github.com/craftcms/cms/issues/5256))\n\n### Fixed\n- Fixed deprecation warnings that occurred on some edit pages. ([#9556](https://github.com/craftcms/cms/pull/9556))\n- Fixed an error that occurred when updating from Craft 3.6.7 or earlier.\n- Fixed a bug where progress bar labels weren\u2019t always removed correctly.\n- Fixed a bug where it wasn\u2019t possible to filter by status on the Categories index page. ([#9555](https://github.com/craftcms/cms/issues/9555))\n- Fixed a bug where Edit Category pages didn\u2019t have a \u201cSave and add another\u201d action.\n- Fixed a bug where moving an asset with an invalid file extension would be treated as if there was a conflicting asset in the destination directory. ([#9147](https://github.com/craftcms/cms/issues/9147))\n- Fixed a bug where multiple tab bars could appear on Edit Entry pages, if the Entry Type had been changed multiple times. ([#9562](https://github.com/craftcms/cms/issues/9562))\n- Fixed a bug where some control panel icons had unhelpful `<title>` tags and other cruft. ([#9563](https://github.com/craftcms/cms/pull/9563))\n- Fixed a bug where the \u201cCreate a draft\u201d button on Edit Entry pages wasn\u2019t working properly for users that didn\u2019t have permission to publish changes to the entry. ([#9570](https://github.com/craftcms/cms/issues/9570))\n- Fixed a bug where Edit Entry pages could show a provisional draft immediately after saving published changes to the entry, if the save was initiated at the same time that the provisional draft was getting created. ([#9568](https://github.com/craftcms/cms/issues/9568))\n- Fixed a bug where entry slugs weren\u2019t getting auto-generated on first save, if their title was generated based on a custom Title Format. ([#9561](https://github.com/craftcms/cms/issues/9561))\n\n## 3.7.0 - 2021-07-13\n\n> **Note**\n> Read through the [Upgrading to Craft 3.7](https://craftcms.com/knowledge-base/upgrading-to-craft-3-7) guide before updating.\n\n### Added\n- The control panel now displays new feature announcements. ([#8056](https://github.com/craftcms/cms/pull/8056))\n- Added the \u201cAlways show focus rings\u201d user preference. ([#7790](https://github.com/craftcms/cms/issues/7790))\n- The Entries index page now has \u201cCreate a new entry before\u201d and \u201cCreate a new entry after\u201d actions for entries within Structure sections. ([#870](https://github.com/craftcms/cms/issues/870))\n- The Entries index page now has a \u201cDelete for site\u201d action for entries whose section\u2019s Propagation Method is set to \u201cLet each entry choose which sites it should be saved to\u201d. ([#9119](https://github.com/craftcms/cms/pull/9119))\n- Edit Entry pages now treat unpublished drafts similarly to published entries, rather than drafts. ([#7899](https://github.com/craftcms/cms/pull/7899))\n- Edit Entry pages no longer appear to create a draft when the Current revision is edited within Live Preview. Unsaved changes are now stored within a \u201cprovisional draft\u201d, which is mostly hidden from the author. ([#7899](https://github.com/craftcms/cms/pull/7899))\n- Category groups now have a \u201cDefault Category Placement\u201d setting, which determines where new categories should be placed within the structure by default. ([#7759](https://github.com/craftcms/cms/issues/7759))\n- Structure sections now have a \u201cDefault Entry Placement\u201d setting, which determines where new entries should be placed within the structure by default. ([#7759](https://github.com/craftcms/cms/issues/7759))\n- The Assets index page now remembers the selected subfolder between page loads. ([#9546](https://github.com/craftcms/cms/discussions/9546))\n- It\u2019s now possible to deep-link to a specific subfolder on the Assets index page.\n- Edit Asset pages now redirect back to the subfolder the asset is located in on save.\n- It\u2019s now possible to reorder global sets. ([#8052](https://github.com/craftcms/cms/pull/8052))\n- Date fields now have a \u201cShow Time Zone\u201d setting, allowing authors to choose which time zone the date is set to, rather than using the system time zone.\n- Matrix fields can now be set to custom propagation methods, based on a propagation key template. ([#7610](https://github.com/craftcms/cms/issues/7610))\n- Added a \u201cRefresh\u201d button to Live Preview, for preview targets whose \u201cAuto-refresh\u201d (formerly \u201cRefresh\u201d) setting is disabled.\n- Added the `users/create` and `users/delete` commands. ([#8014](https://github.com/craftcms/cms/issues/8014))\n- Added the `siteSettingsId` element query and GraphQL API query parameter for all elements.\n- Added the `preferSites` GraphQL API query argument for all elements. ([#8006](https://github.com/craftcms/cms/pull/8006))\n- Added the `ancestors`, `descendants`, `drafts`, `draftCreator`, `revisions`, `currentRevision`, and `revisionCreator` fields to entry GraphQL queries. ([#7950](https://github.com/craftcms/cms/issues/7950))\n- Added the `httpProxy` config setting, which can be used instead of setting the `proxy` Guzzle request option. ([#9105](https://github.com/craftcms/cms/issues/9105))\n- Added the `previewTokenDuration` config setting. ([#2394](https://github.com/craftcms/cms/issues/2394))\n- Added the `revAssetUrls` config setting. ([#7847](https://github.com/craftcms/cms/issues/7847))\n- Added the `setGraphqlDatesToSystemTimeZone` config setting. ([#8016](https://github.com/craftcms/cms/pull/8016))\n- Added the `useUnbufferedConnections` database connection setting, which can be set to `true` when using MySQL to cause batched queries to be executed over separate, unbuffered database connections when using MySQL. ([#7338](https://github.com/craftcms/cms/issues/7338))\n- Added the \u201cValidate custom fields on public registration\u201d user setting. ([#4229](https://github.com/craftcms/cms/issues/4229))\n- Added the `|removeClass` Twig filter.\n- Added `craft\\base\\ApplicationTrait::getAnnouncements()`.\n- Added `craft\\base\\ConfigurableComponent::EVENT_DEFINE_SETTINGS_ATTRIBUTES`. ([#8004](https://github.com/craftcms/cms/issues/8004))\n- Added `craft\\base\\Element::EVENT_DEFINE_IS_DELETABLE`.\n- Added `craft\\base\\Element::EVENT_DEFINE_IS_EDITABLE`. ([#8023](https://github.com/craftcms/cms/issues/8023))\n- Added `craft\\base\\Element::EVENT_DEFINE_METADATA`.\n- Added `craft\\base\\Element::EVENT_DEFINE_META_FIELDS_HTML`.\n- Added `craft\\base\\Element::EVENT_DEFINE_SIDEBAR_HTML`.\n- Added `craft\\base\\Element::cpEditUrl()`, which should be overridden rather than `getCpEditUrl()`.\n- Added `craft\\base\\Element::hasFieldLayout()`.\n- Added `craft\\base\\Element::isDeletable()`.\n- Added `craft\\base\\Element::isEditable()`.\n- Added `craft\\base\\Element::metaFieldsHtml()`.\n- Added `craft\\base\\Element::metadata()`.\n- Added `craft\\base\\Element::slugFieldHtml()`.\n- Added `craft\\base\\ElementInterface::getCanonical()`.\n- Added `craft\\base\\ElementInterface::getCanonicalId()`.\n- Added `craft\\base\\ElementInterface::getIsCanonical()`.\n- Added `craft\\base\\ElementInterface::getIsDerivative()`.\n- Added `craft\\base\\ElementInterface::getMetadata()`.\n- Added `craft\\base\\ElementInterface::getModifiedAttributes()`.\n- Added `craft\\base\\ElementInterface::getModifiedFields()`.\n- Added `craft\\base\\ElementInterface::getOutdatedAttributes()`.\n- Added `craft\\base\\ElementInterface::getOutdatedFields()`.\n- Added `craft\\base\\ElementInterface::getParentUri()`. ([#7932](https://github.com/craftcms/cms/issues/7932))\n- Added `craft\\base\\ElementInterface::getSidebarHtml()`.\n- Added `craft\\base\\ElementInterface::isAttributeModified()`.\n- Added `craft\\base\\ElementInterface::isAttributeOutdated()`.\n- Added `craft\\base\\ElementInterface::isFieldModified()`.\n- Added `craft\\base\\ElementInterface::isFieldOutdated()`.\n- Added `craft\\base\\ElementInterface::mergeCanonicalChanges()`.\n- Added `craft\\base\\ElementInterface::setCanonical()`.\n- Added `craft\\base\\ElementInterface::setCanonicalId()`.\n- Added `craft\\base\\ElementTrait::$dateLastMerged`.\n- Added `craft\\base\\ElementTrait::$isProvisionalDraft`.\n- Added `craft\\base\\ElementTrait::$mergingCanonicalChanges`.\n- Added `craft\\base\\ElementTrait::$updatingFromDerivative`.\n- Added `craft\\base\\FieldInterface::copyValue()`.\n- Added `craft\\base\\FieldInterface::getStatus()`.\n- Added `craft\\base\\FieldTrait::$columnSuffix`.\n- Added `craft\\console\\ControllerTrait::checkRootUser()`.\n- Added `craft\\console\\ControllerTrait::createAttributeValidator()`. ([#8066](https://github.com/craftcms/cms/pull/8066))\n- Added `craft\\console\\controllers\\ResaveController::resaveElements()`.\n- Added `craft\\elements\\User::EVENT_DEFINE_FRIENDLY_NAME`. ([#8027](https://github.com/craftcms/cms/issues/8027))\n- Added `craft\\elements\\User::EVENT_DEFINE_NAME`. ([#8027](https://github.com/craftcms/cms/issues/8027))\n- Added `craft\\elements\\User::setFriendlyName()`.\n- Added `craft\\elements\\User::setName()`.\n- Added `craft\\elements\\db\\ElementQuery::provisionalDrafts()`.\n- Added `craft\\events\\DefineHtmlEvent`.\n- Added `craft\\events\\DefineMetadataEvent`.\n- Added `craft\\events\\DefineValueEvent`.\n- Added `craft\\events\\DraftEvent::$provisional`.\n- Added `craft\\fields\\Matrix::$propagationKeyFormat`.\n- Added `craft\\fields\\Matrix::PROPAGATION_METHOD_CUSTOM`.\n- Added `craft\\helpers\\Cp::autosuggestFieldHtml()`.\n- Added `craft\\helpers\\Cp::dateTimeFieldHtml()`.\n- Added `craft\\helpers\\Cp::editElementTitles()`.\n- Added `craft\\helpers\\Cp::elementSelectFieldHtml()`.\n- Added `craft\\helpers\\Cp::metadataHtml()`.\n- Added `craft\\helpers\\Db::batch()` and `each()`, which can be used instead of `craft\\db\\Query::batch()` and `each()`, to execute batched SQL queries over a new, unbuffered database connection (if using MySQL and `useUnbufferedConnections` is `true`). ([#7338](https://github.com/craftcms/cms/issues/7338))\n- Added `craft\\helpers\\ElementHelper::fieldColumn()`.\n- Added `craft\\helpers\\ElementHelper::fieldColumnFromField()`.\n- Added `craft\\helpers\\ElementHelper::isDraft()`.\n- Added `craft\\helpers\\ElementHelper::isRevision()`.\n- Added `craft\\helpers\\Html::parseTagAttribute()`.\n- Added `craft\\helpers\\Html::widont()`.\n- Added `craft\\mail\\Message::$error`. ([#8091](https://github.com/craftcms/cms/pull/8091))\n- Added `craft\\models\\CategoryGroup::$defaultPlacement`.\n- Added `craft\\models\\CategoryGroup::DEFAULT_PLACEMENT_BEGINNING`.\n- Added `craft\\models\\CategoryGroup::DEFAULT_PLACEMENT_END`.\n- Added `craft\\models\\FieldLayout::$reservedFieldHandles`.\n- Added `craft\\models\\Section::$defaultPlacement`.\n- Added `craft\\models\\Section::DEFAULT_PLACEMENT_BEGINNING`.\n- Added `craft\\models\\Section::DEFAULT_PLACEMENT_END`.\n- Added `craft\\models\\SiteGroup::getName()`.\n- Added `craft\\models\\SiteGroup::setName()`.\n- Added `craft\\services\\Announcements`.\n- Added `craft\\services\\Elements::EVENT_AFTER_MERGE_CANONICAL_CHANGES`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_MERGE_CANONICAL_CHANGES`.\n- Added `craft\\services\\Elements::mergeCanonicalChanges()`.\n- Added `craft\\services\\Elements::updateCanonicalElement()`.\n- Added `craft\\services\\Matrix::mergeCanonicalChanges()`.\n- Added `craft\\services\\Tokens::createPreviewToken()`.\n- Added `craft\\web\\Request::checkIfActionRequest()`.\n- Added `craft\\web\\View::clearCssBuffer()`.\n- Added `craft\\web\\View::clearScriptBuffer()`.\n- Added `craft\\web\\View::getInitialDeltaValues()`.\n- Added `craft\\web\\View::startCssBuffer()`.\n- Added `craft\\web\\View::startScriptBuffer()`.\n- Added `craft\\web\\twig\\variables\\Cp::getTimeZoneOptions()`.\n- Added the `timeZone` and `timeZoneField` macros to the `_includes/forms.html` control panel template.\n- Added the `Craft.Slideout` JavaScript class.\n- Added the `Craft.Tabs` JavaScript class.\n- Added the `Craft.group()` JavaScript method.\n- Added the `Craft.setFocusWithin()` JavaScript method.\n- Added the `Craft.trapFocusWithin()` JavaScript method.\n\n### Changed\n- Changes from an entry\u2019s Current revision are now automatically merged into drafts upon visiting drafts\u2019 edit pages.\n- When changes from an entry\u2019s Current revision are merged into a draft, Matrix field changes are now merged on a per-block basis. ([#5503](https://github.com/craftcms/cms/issues/5503), [#7710](https://github.com/craftcms/cms/pull/7710))\n- Inline element editors now use slideouts rather than HUDs, and include the element\u2019s fully-rendered field layout (including tabs and custom UI elements), meta fields (Slug, Post Date, etc.) and metadata, plus a link to open the element\u2019s dedicated edit page in a new browser tab. ([#8017](https://github.com/craftcms/cms/pull/8017))\n- The \u201cPublish draft\u201d button has been relabelled to \u201cApply draft\u201d.\n- Entries now retain their original IDs when created from an unpublished draft. ([#9104](https://github.com/craftcms/cms/issues/9104))\n- Matrix blocks now retain their original IDs and UIDs when a draft is published. ([#7710](https://github.com/craftcms/cms/pull/7710))\n- Improved the styling of field status indicators.\n- Field status indicators now appear immediately after a field\u2019s value is changed and saved successfully to a draft.\n- Improved the design and accessibility of tabs in the control panel. ([#7299](https://github.com/craftcms/cms/issues/7299))\n- Asset, category, and entry indexes now use \u201cAsset\u201d, \u201cCategory\u201d, and \u201cEntry\u201d header column headings by default, rather than \u201cTitle\u201d.\n- Improved the UI of the Time Zone input in Settings \u2192 General.\n- It\u2019s now possible to toggle site-specific category statuses from the Edit Category page. ([#7636](https://github.com/craftcms/cms/issues/7636))\n- Tag field layouts now include the Title field, allowing its placement and label to be customized.\n- Tag field layouts can now contain multiple tabs and UI elements.\n- Custom fields with a custom translation method are no longer labelled as translatable if the translation key is an empty string. ([#7647](https://github.com/craftcms/cms/issues/7647))\n- Category and tag groups no longer validate if their field layout contains a field called `group`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- Entry types no longer validate if their field layout contains a field called `author`, `section`, or `type`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- Volumes no longer validate if their field layout contains a field called `folder` or `volume`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- The user field layout no longer validates if it contains a field called `groups` or `photo`. ([#2797](https://github.com/craftcms/cms/issues/2797))\n- The `resave/entries` command now has a `--provisional-drafts` option.\n- `resave/*` commands now have a `--queue` option. ([#8040](https://github.com/craftcms/cms/issues/8040))\n- Entries no longer support Live Preview if the `autosaveDrafts` config setting is disabled.\n- Most text areas in the control panel will now submit the closest form when <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Return</kbd> is pressed. ([#7999](https://github.com/craftcms/cms/issues/7999))\n- The `defaultCpLanguage` config setting no longer affects console requests. ([#7747](https://github.com/craftcms/cms/issues/7747))\n- The `{% cache %}` tag now stores any JavaScript or CSS code registered with `{% js %}`, `{% script %}`, and `{% css %}` tags. ([#7758](https://github.com/craftcms/cms/issues/7758))\n- The `date()` Twig function now supports arrays with `date` and/or `time` keys. ([#7681](https://github.com/craftcms/cms/issues/7681))\n- Date query params now support passing in times relative to `now` (e.g. `>= now`). ([#9117](https://github.com/craftcms/cms/issues/9117))\n- Object templates (such as `redirect` params and URI Format settings) now support string interpolation. ([#9138](https://github.com/craftcms/cms/discussions/9138))\n- Custom field column names now include a random string, preventing column name conflicts when deploying multiple project config changes at once. ([#6922](https://github.com/craftcms/cms/issues/6922))\n- Custom fields can now store data across multiple columns in the `content` table.\n- Channel and Structure sections\u2019 initial entry types are now named \u201cDefault\u201d by default. ([#7078](https://github.com/craftcms/cms/issues/7078))\n- Entries can now be eager-loaded with `revisions`.\n- Console commands now show a confirmation prompt when executed as the root user. ([#7955](https://github.com/craftcms/cms/issues/7955))\n- Project config component UID/name mappings are now stored in the project config itself, making them portable across environments. ([#7709](https://github.com/craftcms/cms/issues/7709))\n- Validation errors in the control panel are now parsed for Markdown syntax. ([#8008](https://github.com/craftcms/cms/issues/8008))\n- Renamed the `enableGraphQlCaching` config setting to `enableGraphqlCaching`. (The old name still works but is deprecated.)\n- Admin tables can now include linked buttons in the toolbar.\n- Admin tables can now include single action buttons.\n- Admin tables now support separators in menu button lists.\n- Site group names can now be set to environment variables. ([#8044](https://github.com/craftcms/cms/issues/8044))\n- Template requests now respond with a `Content-Length` header. ([#8070](https://github.com/craftcms/cms/issues/8070))\n- Exceptions thrown by queue jobs are now logged. ([#8060](https://github.com/craftcms/cms/issues/8060))\n- `craft\\base\\Element::getCpEditUrl()` now includes a `draftId`/`revisionId` query string param in the returned URL if the element is a draft or revision. ([#7832](https://github.com/craftcms/cms/issues/7832))\n- `craft\\base\\FieldInterface::getContentColumnType()` can now return an array, if the field stores content across multiple columns.\n- `craft\\helpers\\Cp::elementHtml()` now has a `$single` argument.\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing in `'now'`. ([#9117](https://github.com/craftcms/cms/issues/9117))\n- `craft\\services\\AssetTransforms::normalizeTransform()` now accepts transform configs arrays that specify a base transform which should be extended, via a `transform` key set to the stored transform\u2019s handle. ([#7892](https://github.com/craftcms/cms/issues/7892))\n- `craft\\services\\Drafts::EVENT_AFTER_APPLY_DRAFT` is no longer deprecated.\n- `craft\\services\\Drafts::EVENT_BEFORE_APPLY_DRAFT` is no longer deprecated.\n- `craft\\services\\Drafts::applyDraft()` is no longer deprecated.\n- `craft\\services\\Users::saveLayout()` now has a `$runValidation` argument, which is `true` by default.\n- `craft\\web\\View::clearJsBuffer()` now has a `$combine` argument.\n- `craft\\web\\View::namespaceInputs()` now accepts a callback function for the first argument, which simplifies the process of setting and resetting the registered namespace before and after generating the to-be-namespaced HTML.\n- Updated Garnish to 0.1.46.\n\n### Deprecated\n- Deprecated `craft\\base\\Element::ATTR_STATUS_CONFLICTED`.\n- Deprecated `craft\\base\\Element::getFieldStatus()`.\n- Deprecated `craft\\base\\Element::getSourceId()`. `getCanonicalId()` should be used instead.\n- Deprecated `craft\\base\\Element::getSourceUid()`. `getCanonical()->uid` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::folderExists()`. `directoryExists()` should be used instead.\n- Deprecated `craft\\behaviors\\BaseRevisionBehavior::$sourceId`. `craft\\base\\ElementInterface::getCanonicalId()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::$dateLastMerged`. `craft\\base\\ElementTrait::$dateLastMerged` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::$mergingChanges`. `craft\\base\\ElementTrait::$mergingCanonicalChanges` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::$trackChanges`.\n- Deprecated `craft\\behaviors\\DraftBehavior::getOutdatedAttributes()`. `craft\\base\\ElementInterface::getOutdatedAttributes()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::getOutdatedFields()`. `craft\\base\\ElementInterface::getOutdatedFields()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isAttributeModified()`. `craft\\base\\ElementInterface::isAttributeModified()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isAttributeOutdated()`. `craft\\base\\ElementInterface::isAttributeOutdated()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isFieldModified()`. `craft\\base\\ElementInterface::isFieldModified()` should be used instead.\n- Deprecated `craft\\behaviors\\DraftBehavior::isFieldOutdated()`. `craft\\base\\ElementInterface::isFieldOutdated()` should be used instead.\n- Deprecated `craft\\console\\controllers\\ResaveController::saveElements()`. `resaveElements()` should be used instead.\n- Deprecated `craft\\elements\\Asset::KIND_FLASH`.\n- Deprecated `craft\\services\\Content::getContentRow()`.\n- Deprecated `craft\\services\\Content::populateElementContent()`.\n- Deprecated `craft\\services\\Drafts::EVENT_AFTER_MERGE_SOURCE_CHANGES`.\n- Deprecated `craft\\services\\Drafts::EVENT_AFTER_PUBLISH_DRAFT`. `EVENT_AFTER_APPLY_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::EVENT_BEFORE_MERGE_SOURCE_CHANGES`.\n- Deprecated `craft\\services\\Drafts::EVENT_BEFORE_PUBLISH_DRAFT`. `EVENT_BEFORE_APPLY_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::mergeSourceChanges()`.\n- Deprecated `craft\\services\\Drafts::publishDraft()`. `applyDraft()` should be used instead.\n- Deprecated `craft\\web\\View::getInitialDeltaValue()`.\n\n### Removed\n- Removed support for the \u201cFlash\u201d file kind. ([#7626](https://github.com/craftcms/cms/issues/7626))\n\n### Fixed\n- Fixed a bug where Craft would place the `beginBody()` tag incorrectly if a template\u2019s `<body>` tag had attribute values that included `>` characters. ([#7779](https://github.com/craftcms/cms/issues/7779))\n- Fixed a bug where updated attributes and fields weren\u2019t getting tracked when publishing a draft or reverting an entry to a revision.\n- Fixed a bug where it wasn\u2019t easily possible to submit forms to controller actions from Live Preview pages. ([#7885](https://github.com/craftcms/cms/issues/7885))\n- Fixed a bug where it was possible to choose a different parent entry when editing a draft, even though the change wouldn\u2019t stick when publishing the draft.\n- Fixed a bug where changing an entry\u2019s parent wouldn\u2019t update any of its drafts.\n- Fixed a SQL error that occurred when deleting a volume folder that had subfolders nested more than 15 levels deep. ([#8073](https://github.com/craftcms/cms/issues/8073))\n- Fixed a SQL error that occurred when hard-deleting a volume that had subfolders nested more than 15 levels deep. ([#8073](https://github.com/craftcms/cms/issues/8073))\n- Fixed a bug where exported CSV files weren\u2019t being imported with an UTF-8 encoding by Excel. ([#8067](https://github.com/craftcms/cms/issues/8067))\n- Fixed a bug where Dropdown fields weren\u2019t always saving properly within element editor slideouts, if left unchanged. ([#8090](https://github.com/craftcms/cms/issues/8090))\n- Fixed a bug where value normalizers for GraphQL mutations would not be executed in nested field. ([#9139](https://github.com/craftcms/cms/issues/9139))\n\n### Security\n- The default `allowedFileExtensions` config setting value no longer includes `xml`.\n\n## 3.6.18 - 2021-07-13\n\n### Added\n- Added `craft\\web\\Response::redirect()`.\n- Added `craft\\gql\\handlers\\Site`.\n\n### Changed\n- Increased the margin around the image editor on small viewports. ([#9143](https://github.com/craftcms/cms/issues/9143))\n\n### Fixed\n- Fixed a button styling issue in Safari. ([#8076](https://github.com/craftcms/cms/pull/8076))\n- Fixed an error that occurred when running the `db/restore` command, if the `info` table was missing its row. ([#7028](https://github.com/craftcms/cms/issues/7028))\n- Fixed an error that occurred when uninstalling a plugin via the `plugin/uninstall` command with `--force`, if the plugin didn\u2019t have a row in the `plugins` table.\n- Fixed a bug where element thumbnails weren\u2019t always getting lazy-loaded properly. ([#6621](https://github.com/craftcms/cms/issues/6621))\n- Fixed a bug where control panel requests weren\u2019t always redirecting to the control panel when they were supposed to. ([#9081](https://github.com/craftcms/cms/issues/9081))\n- Fixed a bug where control panel URLs were getting empty hashes appended to them in Firefox, adding an extra element to the browser\u2019s session history. ([#9118](https://github.com/craftcms/cms/issues/9118))\n- Fixed a bug where it was impossible to use `\"*\"` as a value for the `siteId` argument when using the GraphQL API. ([#9098](https://github.com/craftcms/cms/issues/9098))\n- Fixed a bug where dynamically-served control panel resources weren\u2019t getting proper cache headers. ([#9140](https://github.com/craftcms/cms/issues/9140))\n- Fixed a bug where dynamically-served control panel resources weren\u2019t 404ing if the file hashes didn\u2019t match. ([#9140](https://github.com/craftcms/cms/issues/9140))\n- Fixed a bug where currency options weren\u2019t sorted alphabetically within Number field settings. ([#9141](https://github.com/craftcms/cms/issues/9141))\n- Fixed a bug where `craft\\helpers\\Db::isNumericColumnType()` was always returning `false`.\n\n## 3.6.17 - 2021-06-15\n\n### Changed\n- Mobile viewports no longer zoom into inputs on focus automatically.\n\n### Fixed\n- Fixed a bug where missing plugin notices for Google Cloud Storage were linking to Amazon S3 instead. ([#8012](https://github.com/craftcms/cms/issues/8012))\n- Fixed a bug where Number fields\u2019 Default Value, Min Value, and Max Value settings were getting formatted with decimal values when the Intl extension wasn\u2019t installed, causing validation errors when saving the field. ([#8007](https://github.com/craftcms/cms/issues/8007))\n- Fixed a type coercion related bug when passing an empty string as a dimension to Asset transforms. ([#8025](https://github.com/craftcms/cms/issues/8025))\n- Fixed a bug where nested element sources weren\u2019t showing source-specific sort options. ([#8026](https://github.com/craftcms/cms/issues/8026))\n- Fixed a bug where volumes would lose their sort position when edited. ([#8033](https://github.com/craftcms/cms/issues/8033))\n- Fixed a bug where unpublished drafts were getting ignored when lazy-loading additional entries in Structure sections.\n- Fixed a PHP error that occurred when indexing search keywords for a Table field with a Date or Time column. ([#8061](https://github.com/craftcms/cms/issues/8061))\n\n## 3.6.16 - 2021-06-01\n\n### Added\n- Added `craft\\helpers\\Db::supportsTimeZones()`.\n\n### Changed\n- The control panel sidebar no longer shows delayed queue jobs until they\u2019re actually executing. ([#7998](https://github.com/craftcms/cms/issues/7998))\n\n### Fixed\n- Fixed a bug where eager-loading entries\u2019 authors wasn\u2019t including pending and suspended authors. ([#7963](https://github.com/craftcms/cms/issues/7963))\n- Fixed a bug where not all element types\u2019 GraphQL queries supported a `status` argument. ([craftcms/gatsby-source-craft#35](https://github.com/craftcms/gatsby-source-craft/issues/35))\n- Fixed JavaScript errors that could occur in the control panel.\n- Fixed a bug where the System Messages utility was showing default messages in the user\u2019s preferred language, even if that wasn\u2019t one of the sites\u2019 languages. ([#7992](https://github.com/craftcms/cms/issues/7992))\n- Fixed a bug where Table fields were getting duplicate search keywords, making it difficult to perform exact match searching on their values. ([#7984](https://github.com/craftcms/cms/issues/7984))\n- Fixed a bug where Structure section entries and categories would show \u201cCreate a new child\u201d and \u201cDelete (with descendants)\u201d actions even if the structure was limited to a single level. ([#7988](https://github.com/craftcms/cms/issues/7988))\n\n## 3.6.15 - 2021-05-18\n\n### Added\n- Added `craft\\services\\Updates::getIsUpdatePending()`. ([#7946](https://github.com/craftcms/cms/issues/7946))\n\n### Changed\n- The `allowedFileExtensions` config setting now includes `dotx` and `dotm` files by default. ([#7935](https://github.com/craftcms/cms/issues/7935))\n- Craft now recognizes `dotx` files. ([#7935](https://github.com/craftcms/cms/issues/7935))\n- Updated Garnish to 0.1.44. ([#7940](https://github.com/craftcms/cms/issues/7940))\n\n### Fixed\n- Fixed an error that occurred when running tests that use `craft\\test\\fixtures\\FieldLayoutFixture`.\n- Fixed a SQL error that occurred when calling `craft\\records\\Site::getGroup()`. ([#7914](https://github.com/craftcms/cms/issues/7914))\n- Fixed a bug where search terms that contained camelCased attribute names could yield no results. ([#7927](https://github.com/craftcms/cms/issues/7927))\n- Fixed a bug where the browser would jump back to the top of the page when scrolling passed a Redactor field with a fixed toolbar. ([#7888](https://github.com/craftcms/cms/issues/7888))\n- Fixed a bug where the My Drafts widget wasn\u2019t showing drafts for entries that didn\u2019t exist in the primary site. ([#7942](https://github.com/craftcms/cms/issues/7942))\n- Fixed a JavaScript error that occurred when switching an entry\u2019s type from one that had multiple tabs to one with only one. ([#7943](https://github.com/craftcms/cms/issues/7943))\n- Fixed a bug where nested GraphQL arguments could be parsed incorrectly. ([#7534](https://github.com/craftcms/cms/issues/7534))\n- Fixed a bug where public GraphQL schemas could be unavailable on environments that didn\u2019t allow admin changes. ([#7925](https://github.com/craftcms/cms/issues/7925))\n\n## 3.6.14 - 2021-05-11\n\n### Added\n- Added the `permissionsPolicyHeader` config setting. ([#7915](https://github.com/craftcms/cms/issues/7915))\n- Added `craft\\helpers\\App::defaultLogTargets()`.\n\n### Changed\n- The `plugin/uninstall` console command now has a `--force` flag. ([#7907](https://github.com/craftcms/cms/pull/7907))\n- `craft\\services\\Plugins::uninstallPlugin()` now has a `$force` argument. ([#7907](https://github.com/craftcms/cms/pull/7907))\n- Updated Yii to 2.0.42.\n- Updated yii2-queue to 2.3.2. ([#7773](https://github.com/craftcms/cms/issues/7773))\n\n### Fixed\n- Fixed an error that could occur if `craft\\web\\View::registerAssetFlashes()` was called after the PHP session had closed.\n- Fixed a bug where the control panel could show the wrong nag alert message for plugin licensing issues.\n- Fixed a bug where control panel pages would scroll down a bit on page load, if the location hash was set to a tab ID. ([#7888](https://github.com/craftcms/cms/issues/7888))\n- Fixed a bug where autofocused inputs in the control panel were losing focus on page load.\n- Fixed a bug where it wasn\u2019t possible to index some volume folders with dots in their name. ([#7900](https://github.com/craftcms/cms/issues/7900))\n- Fixed a bug where editable tables within nested Matrix field settings were initially unresponsive when editing an existing Matrix field. ([#7911](https://github.com/craftcms/cms/issues/7911))\n- Fixed a bug where duplicated entries\u2019 slugs and URIs could be incremented when changing a section\u2019s propagation method. ([#7895](https://github.com/craftcms/cms/issues/7895))\n- Fixed a bug where the `Permissions-Policy` anti-FLoC header was being applied incorrectly. ([#7896](https://github.com/craftcms/cms/issues/7896))\n- Fixed a SQL error that could occur when indexing search keywords which contained certain Russian characters on MySQL. ([#7905](https://github.com/craftcms/cms/issues/7905))\n- Fixed a bug where `craft\\elements\\actions\\Delete` wasn\u2019t hard-deleting elements when `$hard` was set to `true`, if the element index wasn\u2019t already set to query soft-deleted elements. ([#7901](https://github.com/craftcms/cms/issues/7901))\n- Fixed a bug where `craft\\elements\\actions\\Delete` wasn\u2019t clearing search indexes when `$hard` was set to `true`. ([#7901](https://github.com/craftcms/cms/issues/7901))\n- Fixed a PHP error that could occur if `config/app.php` was overriding the `log` component using `craft\\helpers\\App::logConfig()`, and expecting it to return an array with log target configs (as it used to before Craft 3.6).\n- Fixed a SQL error that occurred when calling `craft\\records\\SiteGroup::getSites()`. ([#7914](https://github.com/craftcms/cms/issues/7914))\n- Fixed an error that occurred when saving a Number field with a non-numeric value. ([#7917](https://github.com/craftcms/cms/issues/7917))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.6.13 - 2021-05-04\n\n### Changed\n- Improved the accessibility of Plain Text fields. ([#6914](https://github.com/craftcms/cms/issues/6914))\n- Improved the accessibility of color inputs. ([#7320](https://github.com/craftcms/cms/issues/7320))\n- Improved the accessibility of flash notices. ([#7879](https://github.com/craftcms/cms/pull/7879))\n- Improved the tab focus behavior. ([#7140](https://github.com/craftcms/cms/issues/7140))\n- The `setPasswordPath` and `verifyEmailPath` config settings can now be set to absolute URLs, which will cause them to be respected when running Craft in headless mode. ([#6226](https://github.com/craftcms/cms/issues/6226))\n- Matrix block type settings modals now have \u201cApply\u201d buttons instead of \u201cSave\u201d. ([#7822](https://github.com/craftcms/cms/issues/7822))\n- Nag alerts now have a light red background color, improving the visibility of error notices that may show up on top of them. ([#7627](https://github.com/craftcms/cms/issues/7627))\n- The `globals/save-content` action now accepts a `fieldsLocation` param. ([#7870](https://github.com/craftcms/cms/pull/7870))\n- The `users/save-user` action now accepts a `fieldsLocation` param. ([#7870](https://github.com/craftcms/cms/pull/7870))\n- `craft\\elements\\Asset::getSrcset()` now accepts an optional `$transform` argument. ([#7839](https://github.com/craftcms/cms/issues/7839))\n- Improved the performance of `craft\\services\\Elements::getElementById()` and `getElementByUid()`. ([#7846](https://github.com/craftcms/cms/pull/7846))\n- `craft\\services\\TemplateCaches::getTemplateCache()`, `endTemplateCache()`, and `deleteCachesByKey()` now throw an exception on console requests, if `$global` isn\u2019t `true`. ([#7862](https://github.com/craftcms/cms/issues/7862))\n- `@method` tags in `CustomFieldBehavior` now use `$this` as the return type instead of `static`. ([#7873](https://github.com/craftcms/cms/issues/7873))\n\n### Fixed\n- Fixed a bug where Matrix fields\u2019 Configuration settings weren\u2019t expanding when nested field settings got taller. ([#7827](https://github.com/craftcms/cms/issues/7827))\n- Fixed an error that occurred when attempting to create a new entry, if a unique URI for the entry could not be generated per its URI format. ([#7863](https://github.com/craftcms/cms/issues/7863))\n- Fixed a bug where it wasn\u2019t possible to click on breadcrumb links when a flash notice was present. ([#7572](https://github.com/craftcms/cms/issues/7572))\n- Fixed a bug where it wasn\u2019t possible to delete a volume folder if the physical directory didn\u2019t exist. ([#7868](https://github.com/craftcms/cms/issues/7868))\n- Fixed a race condition that could result in two assets getting saved with conflicting filenames if they were both moved to the same directory at the same time. ([#7866](https://github.com/craftcms/cms/issues/7866))\n- Fixed an error that occurred on PHP 8. ([#7848](https://github.com/craftcms/cms/issues/7848))\n- Fixed a SQL error when using PHP 7.4.18 or 8.0.5 and PostgreSQL. ([#7874](https://github.com/craftcms/cms/issues/7874))\n\n### Security\n- Craft now sets a `Permissions-Policy: interest-cohort=()` header for all requests, opting out of FLoC tracking due to security and privacy concerns.\n- Fixed an XSS vulnerability.\n\n## 3.6.12.1 - 2021-04-29\n\n### Fixed\n- Fixed a bug where entry indexes weren\u2019t showing the entries\u2019 authors if they were pending or suspended.\n- Fixed a bug where renaming an empty volume folder would create a subfolder inside it. ([#7721](https://github.com/craftcms/cms/issues/7721))\n- Fixed a bug where simultaneously-executed MySQL backups could result in a `my.cnf` conflict. ([#7801](https://github.com/craftcms/cms/issues/7801))\n- Fixed a bug where radio button labels weren\u2019t including custom container attributes passed to the input.\n- Fixed a bug where the `migrate/all` command was attempting to re-apply old content migrations when updating from Craft 3.4 or earlier. ([#7818](https://github.com/craftcms/cms/issues/7818))\n- Fixed a bug where assets could cause n+1 queries even when eager-loaded. ([#7812](https://github.com/craftcms/cms/pull/7812))\n- Fixed an error that occurred when executing a GraphQL query with nested `relatedTo*` arguments. ([#7824](https://github.com/craftcms/cms/issues/7824))\n- Fixed a bug where selected tabs in the control panel weren\u2019t getting focus rings.\n- Fixed a bug where it wasn\u2019t possible to select tabs in the overflow menu via the keyboard. ([#7813](https://github.com/craftcms/cms/issues/7813))\n- Fixed a bug where `{% cache %}` tags\u2019 `until` params weren\u2019t being respected. ([#7826](https://github.com/craftcms/cms/issues/7826))\n- Fixed a bug where the control panel JavaScript was missing several ASCII character mappings. ([#7828](https://github.com/craftcms/cms/issues/7828))\n- Fixed a bug where Single sections wouldn\u2019t validate if one of their URI values contained any spaces. ([#7834](https://github.com/craftcms/cms/issues/7834))\n- Fixed a bug where the \u201cShow\u201d link on password inputs wasn\u2019t positioned correctly for RTL languages. ([#7835](https://github.com/craftcms/cms/issues/7835))\n- Fixed a bug where entry queries were not returning all entries created within the last minute. ([#7853](https://github.com/craftcms/cms/issues/7853))\n- Fixed a bug where the `searchindex` table wasn\u2019t getting set to the MyISAM engine for fresh installs.\n\n### Security\n- Updated Composer to 2.0.13, fixing a [command execution vulnerability](https://github.com/composer/composer/security/advisories/GHSA-h5h8-pc6h-jvvx).\n\n## 3.6.12 - 2021-04-13\n\n### Changed\n- Improved the focus styles throughout the control panel. ([#6886](https://github.com/craftcms/cms/issues/6886))\n- User activation and password reset links now point to the control panel when running Craft in headless mode. ([#6226](https://github.com/craftcms/cms/issues/6226))\n- Category indexes can now show a \u201cSlug\u201d column. ([#7760](https://github.com/craftcms/cms/issues/7760))\n- \u201cGenerating pending image transforms\u201d jobs are now deprioritized. ([#7778](https://github.com/craftcms/cms/issues/7778))\n- Improved the performance of Recent Entries widgets. ([#6655](https://github.com/craftcms/cms/pull/6655))\n- `craft\\helpers\\UrlHelper::actionUrl()` now has a `$showScriptName` argument, which can be set to `false` to prevent the script name (`index.php`) from being included in the generated URL. (Only recommended for URLs that will be used by GET requests.)\n- Updated Composer to 2.0.12.\n\n### Fixed\n- Fixed a bug where restored entries could get deleted by garbage collection, if their `authorId` value was set to a soft-deleted author. ([#7751](https://github.com/craftcms/cms/issues/7751))\n- Fixed a bug where indexing assets from the command line could work incorrectly in some cases. ([#7741](https://github.com/craftcms/cms/issues/7741))\n- Fixed a SQL error that could occur if a job in the queue failed and had a very long error message on MySQL.\n- Fixed a bug where validation events would trigger when saving an element via `craft\\services\\Elements::saveElement()`, even if `$runValidation` was set to `false`. ([#7756](https://github.com/craftcms/cms/issues/7756))\n- Fixed a bug where `craft\\helpers\\Html::parseTag()` would parse child tags of `<script>` and `<style>` tags.\n- Fixed a bug where pagination labels below Vue admin tables weren\u2019t using the translatable pagination message.\n- Fixed a bug where Craft would place the `beginBody()` tag incorrectly if a template\u2019s `<body>` tag included an inline arrow function (`=>`). ([#7779](https://github.com/craftcms/cms/issues/7779))\n- Fixed a bug where action URLs were based on the current request\u2019s host name rather than the control panel URL when running Craft in headless mode, unless the `pathParam` config setting had been set to `null`. ([#7783](https://github.com/craftcms/cms/issues/7783))\n- Fixed a bug where the `utils/repair/section-structure` or `utils/repair/category-group-structure` commands could reposition elements in the wrong order. ([#7784](https://github.com/craftcms/cms/issues/7784))\n\n## 3.6.11.2 - 2021-03-29\n\n### Fixed\n- Fixed a bug where Matrix field changes on the Current revision weren\u2019t getting propagated to drafts when the \u201cMerge changes into draft\u201d button was clicked. ([#7727](https://github.com/craftcms/cms/issues/7727))\n- Fixed an error that occurred when publishing a draft with an outdated Matrix field. ([#7727](https://github.com/craftcms/cms/issues/7727))\n- Fixed a bug where renaming empty folders would delete them from the disk, instead. ([#7721](https://github.com/craftcms/cms/issues/7721))\n- Fixed a bug where the `inReverse` element query param was getting ignored when eager-loading elements. ([#7737](https://github.com/craftcms/cms/issues/7737))\n- Fixed a bug where the `migrate/all` command was attempting to re-apply old plugin migrations when updating from Craft 3.4 or earlier.\n- Fixed a bug where action requests weren\u2019t getting `X-Robots-Tag: none` headers in their responses. ([#7738](https://github.com/craftcms/cms/issues/7738))\n\n## 3.6.11.1 - 2021-03-24\n\n### Fixed\n- Fixed a bug where the cached project config data wasn\u2019t getting invalidated after applying YAML changes.\n- Fixed an error that could occur when adding jobs to the queue with a custom priority, if the queue driver didn\u2019t support priorities. ([#7719](https://github.com/craftcms/cms/issues/7719))\n- Fixed a bug where some field name characters were getting double-encoded in validation errors. ([#7718](https://github.com/craftcms/cms/issues/7718))\n\n## 3.6.11 - 2021-03-23\n\n### Added\n- Added the `andRelatedTo` element query param, for adding additional relation criteria. ([#5733](https://github.com/craftcms/cms/issues/5733))\n- Added the `{% script %}` tag, for outputting `<script>` tags with full control over the attributes. ([#7676](https://github.com/craftcms/cms/issues/7676))\n- Added `craft\\web\\User::getToken()`.\n- Added `craft\\test\\Craft::mockDbMethods()`.\n\n### Changed\n- The Queue Manager utility now shows delayed jobs. ([#7692](https://github.com/craftcms/cms/issues/7692))\n- The `gc` command can now delete unneeded rows from deprecated database tables, including `templatecaches`, `entrydrafts`, and `entryrevisions`. ([#6434](https://github.com/craftcms/cms/issues/6434))\n- `relatedTo` element query params can now be set to multiple `or` relation criteria inclusively, without specifying the `element`/`targetElement`/`sourceElement` keys. ([#5733](https://github.com/craftcms/cms/issues/5733))\n- `craft\\helpers\\ElementHelper::setUniqueUri()` now starts incrementing duplicate slugs with `-2` instead of `-1`.\n- `craft\\helpers\\Queue::push()` now has `$delay` and `$ttr` arguments.\n- `craft\\queue\\Queue::run()` now has `$repeat` and `$timeout` arguments.\n- Updated Garnish to 0.1.41.\n\n### Deprecated\n- Deprecated `craft\\queue\\Queue::listen()`. `run()` can be used instead.\n\n### Fixed\n- Fixed a bug where requests with an invalid `action` param would return a 500 status code instead of 400. ([#7668](https://github.com/craftcms/cms/issues/7668))\n- Fixed a bug where asset, category, and entry queries could return results when they shouldn\u2019t. ([#7678](https://github.com/craftcms/cms/issues/7678))\n- Fixed a bug where users were getting logged out after changing their password. ([#7682](https://github.com/craftcms/cms/issues/7682))\n- Fixed an infinite loop bug that could occur when saving an element with a non-unique URI over 255 bytes long. ([#7684](https://github.com/craftcms/cms/pull/7684))\n- Fixed a bug where `Craft.initUiElements()` was adding `rel=\"noopener\"` and `target=\"_blank\"` to all external links, rather than just ones within the passed-in container. ([#7686](https://github.com/craftcms/cms/issues/7686))\n- Fixed a bug where the `queue/listen` command wasn\u2019t always respecting exit signals. ([#7704](https://github.com/craftcms/cms/issues/7704))\n- Fixed a SQL error that could occur when running the `utils/repair/section-structure` or `utils/repair/category-group-structure` commands. ([#7699](https://github.com/craftcms/cms/issues/7699))\n- Fixed an error that could occur if the project config data contained any incomplete packed associative arrays.\n- Fixed a bug where `craft\\helpers\\Queue::push()` wasn\u2019t respecting its `$priority` argument.\n- Fixed a bug where relational fields weren\u2019t showing all of the currently selected elements if the field\u2019s limit had decreased, making it difficult to fix the validation error. ([#7707](https://github.com/craftcms/cms/issues/7707))\n- Fixed a PHP error that occurred during garbage collection if the `purgeUnsavedDraftsDuration` config setting was set to a [duration string](https://en.wikipedia.org/wiki/ISO_8601#Durations). ([#7714](https://github.com/craftcms/cms/issues/7714))\n- Fixed a bug where project config changes could be applied incorrectly for numerically-indexed arrays with 10 or more items. ([presseddigital/linkit#88](https://github.com/presseddigital/linkit/issues/88#issuecomment-802794767))\n- Fixed a JavaScript error that would occur if any elements had a `pill` class. ([#7705](https://github.com/craftcms/cms/issues/7705))\n- Fixed a bug where `craft\\test\\Craft::mockMethods()` and `mockCraftMethods()`\u2019 `$constructorParams` arguments only accepted a single argument\u2019s value, rather than an array of constructor arguments.\n\n## 3.6.10 - 2021-03-09\n\n### Added\n- Added the `|httpdate` Twig filter, which can be used to format dates for HTTP headers such as `Expires`. ([craftcms/docs#167](https://github.com/craftcms/docs/pull/167))\n- Added `craft\\events\\FormActionsEvent`.\n- Added `craft\\web\\twig\\variables\\Cp::EVENT_REGISTER_FORM_ACTIONS`. ([#7660](https://github.com/craftcms/cms/issues/7660))\n- Added `craft\\web\\twig\\variables\\Cp::prepFormActions()`.\n\n### Fixed\n- Fixed a bug where console requests were logging non-error/warning logs when Dev Mode was disabled. ([#7659](https://github.com/craftcms/cms/issues/7659))\n- Fixed an error that could occur when updating Craft. ([#7662](https://github.com/craftcms/cms/issues/7662))\n- Fixed a bug where search results could yield no results if any of the search terms were MySQL fulltext stop words. ([#7642](https://github.com/craftcms/cms/issues/7642))\n- Fixed a bug where entries could return the wrong Matrix/Neo/Super Table blocks if the blocks were queried immediately after the entry was created via `craft\\services\\Elements::duplicateElement()`.\n- Fixed a bug where Craft wasn\u2019t updating the prior primary site\u2019s project config when a new site was set as the primary in the control panel. ([#7657](https://github.com/craftcms/cms/issues/7657))\n- Fixed a bug where the `project-config/apply` command output didn\u2019t make any sense at times.\n- Fixed a race condition where the same queue job could get executed multiple times if there was more than one active queue worker and the database used read/write splitting.\n- Fixed a race condition that could result in a SQL error if two revisions were attempted to be created for the same entry at the same time if the database used read/write splitting. ([#7598](https://github.com/craftcms/cms/issues/7598))\n\n## 3.6.9 - 2021-03-05\n\n### Added\n- Added `craft\\helpers\\Session`, which provides methods for working with PHP session variables, without creating a new PHP session if one didn\u2019t need to exist.\n\n### Changed\n- Updated Yii to 2.0.41.\n- Warning and error logs are no longer included in the `stdout` log target if the `CRAFT_STREAM_LOG` PHP constant is set to `true`.\n\n### Fixed\n- Fixed a bug where entry drafts were retaining their former parent entry relationship, if the parent entry was removed and not replaced. ([#7643](https://github.com/craftcms/cms/issues/7643))\n- Fixed an error that could occur during the `update` command on Windows. ([#7644](https://github.com/craftcms/cms/issues/7644))\n- Fixed a bug where the `utils/repair/project-config` command was removing all packed arrays, not just double-packed arrays.\n- Fixed SQL errors that could occur when MySQL was running in `ANSI`/`ANSI_QUOTES` modes. ([#5804](https://github.com/craftcms/cms/issues/5804))\n- Fixed a bug where 404s weren\u2019t getting logged to `web-404s.log`. ([#7653](https://github.com/craftcms/cms/issues/7653))\n- Fixed a bug where `craft\\helpers\\Assets::prepareAssetName()` was appending a `.` to file names that did not have an extension.\n- Fixed a bug where all requests were creating PHP sessions, even if no `CraftSessionId` cookie was present.\n\n## 3.6.8 - 2021-03-03\n\n### Added\n- Added the `is boolean` Twig test.\n- GraphQL schemas now include settings that determine whether inactive elements, drafts, and/or revisions should be included in query results. ([#7590](https://github.com/craftcms/cms/issues/7590)).\n- Added `craft\\gql\\base\\ElementArguments::getRevisionArguments()`.\n- Added `craft\\helpers\\Db::truncateTable()`.\n- Added `craft\\helpers\\Gql::canQueryDrafts()`.\n- Added `craft\\helpers\\Gql::canQueryInactiveElements()`.\n- Added `craft\\helpers\\Gql::canQueryRevisions()`.\n\n### Changed\n- Project config YAML files now include comments alongside UIDs, identifying the name of the component being referenced. ([#7584](https://github.com/craftcms/cms/issues/7584))\n- Control panel requests now explicitly send no-cache headers. ([#7631](https://github.com/craftcms/cms/issues/7631))\n- Plain Text fields\u2019 Placeholder settings now support emoji on MySQL. ([#7629](https://github.com/craftcms/cms/issues/7629))\n- `deleteEntry` GraphQL mutation queries now support `siteId` arguments. ([#7611](https://github.com/craftcms/cms/issues/7611))\n\n### Fixed\n- Fixed a bug where release dates shown in the Updates utility could be off by a day compared to the dates in the changelogs, for clients whose system clock was set to a time zone behind UTC. ([#7612](https://github.com/craftcms/cms/issues/7612))\n- Fixed a bug where user sessions weren\u2019t lasting the extended duration specified by the `rememberedUserSessionDuration` config setting when the `rememberMe` checkbox was ticked. ([#7619](https://github.com/craftcms/cms/issues/7619))\n- Fixed a bug where the <kbd>Ctrl</kbd> + <kbd>Alt</kbd> + <kbd>S</kbd> \u201cPublish draft\u201d keyboard shortcut wasn\u2019t working for unpublished drafts on Windows computers.\n- Fixed a bug where Redis connection exceptions were getting swallowed when Dev Mode was disabled, and Craft was falsely reporting that it wasn't installed yet instead. ([#7617](https://github.com/craftcms/cms/issues/7617))\n- Fixed a bug where Local volumes were creating extra directories in the web root when saved, if the File System Path was set to an environment variable.\n- Fixed an error that could occur when indexing the search keywords for an element in a disabled site. ([#6383](https://github.com/craftcms/cms/issues/6383))\n- Fixed a bug where `craft\\helpers\\ProjectConfig::cleanupConfig` wasn\u2019t handling packed aways properly. ([#7630](https://github.com/craftcms/cms/issues/7630))\n- Fixed a bug where the `_includes/forms/text.html` control panel template and `Craft.ui.createTextInput()` JavaScript method weren\u2019t respecting custom `autocomplete` values.\n- Fixed a bug where the \u201cSave and continue editing\u201d action on the Edit Entry page wasn\u2019t retaining the currently-selected site.\n- Fixed a bug where non-admins weren\u2019t able to impersonate inactive users. ([#7475](https://github.com/craftcms/cms/issues/7475))\n- Fixed a bug where the Plugin Store wouldn\u2018t fully load when clicking the \u201cBuy now\u201d button on the \u201cThere are trial licenses that require payment\u201d alert, if any of the trialled plugins were disabled.\n- Fixed a bug where the Plugin Store\u2019s cart was not showing the updates dropdown for plugin trial licenses.\n- Fixed a bug where the Plugin Store was showing a generic error when a credit card was declined, instead of a more detailed error.\n- Fixed an error where it wasn\u2019t possible to delete entries from non-primary sites via GraphQL. ([#7611](https://github.com/craftcms/cms/issues/7611))\n- Fixed a bug where the GraphQL API could return unexpected results if multiple `relatedTo*` arguments were used. ([#7534](https://github.com/craftcms/cms/issues/7534))\n\n## 3.6.7 - 2021-02-23\n\n### Added\n- Added `craft\\gql\\base\\ElementArguments::getStatusArguments()`.\n- Added `craft\\helpers\\Gql::relatedArgumentComplexity()`.\n\n### Changed\n- The Updates utility and Plugin Store now identify abandoned plugins.\n- URLs within plain text email bodies are no longer wrapped with `<` and `>` characters, fixing a bug where they could be removed by email providers for looking like HTML tags.\n- The `relatedToAssets`, `relatedToCategories`, `relatedToEntries`, `relatedToTags`, and `relatedToUsers` GraphQL arguments now accept a list of multiple criteria sets. ([#7528](https://github.com/craftcms/cms/issues/7528))\n- Adjusted GraphQL complexity values for relational fields.\n- `craft\\helpers\\UrlHelper::getSchemeForTokenizedUrl()` and `urlWithToken()` now have a `$cp` argument, indicating whether the method call is for a control panel URL.\n- Updated Composer to 2.0.10.\n\n### Removed\n- Removed all draft arguments for assets, categories, global sets, Matrix blocks, tags, and users when querying via the GraphQL API.\n- Removed the `status`, `archived` and `trashed` arguments for global sets when querying via the GraphQL API.\n- Removed the `status` argument for assets when querying via the GraphQL API.\n\n### Fixed\n- Fixed a JavaScript error that occurred after saving an entry from the Quick Post widget, preventing the widget from being used to create a second entry. ([#7582](https://github.com/craftcms/cms/issues/7582))\n- Fixed a bug where it was possible to access the homepage entry from `/__home__`. ([#7585](https://github.com/craftcms/cms/issues/7585))\n- Fixed a bug where URL fields weren\u2019t getting validated properly if their \u201cAllowed URL Types\u201d setting was set to only \u201cTelephone\u201d or \u201cEmail\u201d. ([#7588](https://github.com/craftcms/cms/issues/7588))\n- Fixed a bug where Craft would set plugins\u2019 base paths to the file system root directory, if they were configured with an invalid `basePath` in `vendor/craftcms/plugins.php`.\n- Fixed a bug where user verification and password-reset URLs would use `https` in some cases where they shouldn\u2019t. ([#7581](https://github.com/craftcms/cms/issues/7581))\n- Fixed a bug where it wasn\u2019t possible to override the `User-Agent` header sent by Guzzle from `config/guzzle.php`. ([#7597](https://github.com/craftcms/cms/issues/7597))\n- Fixed a bug where non-admin users weren\u2019t able to replace files from the Edit Asset page, unless they had the \u201cRemove files and folders\u201d permission. ([#7601](https://github.com/craftcms/cms/issues/7601))\n- Fixed a bug where links within info HUDs weren\u2019t opening in a new window.\n\n### Security\n- It\u2019s no longer possible to save a Local volume with the File System Path setting set to a system directory (e.g. the `templates/` or `vendor/` folders).\n\n## 3.6.6 - 2021-02-15\n\n### Added\n- Added the `successMessageInput()` and `failMessageInput()` Twig functions. ([#7561](https://github.com/craftcms/cms/pull/7561))\n- Added the `prefixGqlRootTypes` config setting, which determines whether the `gqlTypePrefix` config setting should impact `query`, `mutation`, and `subscription` types. ([#7552](https://github.com/craftcms/cms/issues/7552))\n- Added the `savedDraftsOnly` entry query param.\n- Added `craft\\behaviors\\DraftBehavior::$markAsSaved`.\n- Added `craft\\helpers\\Html::failMessageInput()`.\n- Added `craft\\helpers\\Html::successMessageInput()`.\n- Added `craft\\services\\Gc::deletePartialElements()`.\n\n### Changed\n- The Entries index page no longer shows unpublished drafts that have never been updated with content.\n- It\u2019s now possible to delete entries from the \u201cAll entries\u201d source. ([#7545](https://github.com/craftcms/cms/issues/7545))\n- Garbage collection now deletes unpublished drafts that were never updated with content, per the (no longer deprecated) `purgeUnsavedDraftsDuration` config setting.\n- Garbage collection now deletes orphaned rows in the `drafts` and `revisions` tables.\n- Garbage collection now deletes incomplete element data, for built-in element types. ([#6434](https://github.com/craftcms/cms/issues/6434))\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t deleting unpublished drafts when converting a Channel or Structure section to a Single. ([#7542](https://github.com/craftcms/cms/issues/7542))\n- Fixed a bug where it was possible for admins to delete a Single entry from the Edit Entry page. ([#7547](https://github.com/craftcms/cms/issues/7547))\n- Fixed an error that occurred when attempting to reposition an unpublished draft within a Structure section.\n- Fixed a CSS bug that prevented elements within relational fields from being easily reordered. ([#7549](https://github.com/craftcms/cms/issues/7549))\n- Fixed a bug where the \u201cMy Drafts\u201d dashboard widget wasn\u2019t listing disabled drafts. ([#7546](https://github.com/craftcms/cms/issues/7546))\n- Fixed a bug where unpublished drafts weren\u2019t getting soft-deleted along with other entries when their section or entry type was deleted, causing an error on the Dashboard if there was a \u201cMy Drafts\u201d widget. ([#7550](https://github.com/craftcms/cms/issues/7550))\n- Fixed a bug where it wasn\u2019t possible for non-admins to rename, replace, edit, or delete their own temporary assets. ([#7420](https://github.com/craftcms/cms/issues/7420))\n- Fixed a bug where Craft wasn\u2019t fully applying custom project configs when running tests. ([#7412](https://github.com/craftcms/cms/issues/7412), [#1953](https://github.com/craftcms/commerce/issues/1953))\n- Fixed a bug where the `config/project/` folder within the test directory wasn\u2019t getting deleted after a test suite was run.\n\n## 3.6.5.1 - 2021-02-10\n\n### Fixed\n- Fixed a bug where all fields were getting assigned to a field group on save, even if they weren\u2019t global. ([#7540](https://github.com/craftcms/cms/issues/7540))\n\n## 3.6.5 - 2021-02-10\n\n### Added\n- Added the \u201cMy Drafts\u201d dashboard widget. ([#7517](https://github.com/craftcms/cms/issues/7517))\n- Users can now be hard-deleted. ([#4420](https://github.com/craftcms/cms/issues/4420))\n- Added `craft\\controllers\\UsersController::EVENT_INVALID_USER_TOKEN`. ([#7520](https://github.com/craftcms/cms/issues/7520))\n- Added `craft\\elements\\actions\\DeleteActionInterface`.\n- Added `craft\\events\\DefineSourceSortOptionsEvent`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n- Added `craft\\events\\DefineSourceTableAttributesEvent`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n- Added `craft\\events\\InvalidUserTokenEvent`. ([#7520](https://github.com/craftcms/cms/issues/7520))\n- Added `craft\\mail\\Mailer::EVENT_BEFORE_PREP`. ([#7501](https://github.com/craftcms/cms/issues/7501))\n- Added `craft\\services\\Drafts::generateDraftName()`.\n- Added `craft\\services\\ElementIndexes::EVENT_DEFINE_SOURCE_SORT_OPTIONS`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n- Added `craft\\services\\ElementIndexes::EVENT_DEFINE_SOURCE_TABLE_ATTRIBUTES`. ([#7515](https://github.com/craftcms/cms/issues/7515))\n\n### Changed\n- The Entries index page no longer shows unpublished drafts when filtering by entry status.\n- The \u201cDrafts\u201d entry status now shows all entry drafts; not just unpublished drafts. ([#6632](https://github.com/craftcms/cms/issues/6632), [#7517](https://github.com/craftcms/cms/issues/7517))\n- Improved the styling of entry drafts within entry indexes. ([#7517](https://github.com/craftcms/cms/issues/7517))\n- The Edit Entry page now notifies the author that they\u2019re editing a draft after closing Live Preview, if a draft was auto-created for them. ([#6681](https://github.com/craftcms/cms/issues/6681))\n- Field groups are now soft-deleted.\n- Color fields\u2019 text inputs are now updated based on the color input\u2019s `input` event rather than `change`. ([#7529](https://github.com/craftcms/cms/issues/7529))\n- Entry drafts\u2019 search keywords now get partially indexed.\n- The `resave/entries` command now supports a `--drafts` flag.\n\n### Fixed\n- Fixed a bug where saving an entry to a site other than the primary via GraphQL would return `null`. ([#7468](https://github.com/craftcms/cms/issues/7468))\n- Fixed a bug where some content could go missing when applying project config changes, if a field group had been deleted and its fields had been moved to a different group. ([#7526](https://github.com/craftcms/cms/issues/7526))\n- Fixed a JavaScript error that occurred when clickin on a color input. ([#7529](https://github.com/craftcms/cms/issues/7529))\n- Fixed an error that could occur on element index pages. ([#7535](https://github.com/craftcms/cms/issues/7535))\n\n## 3.6.4.1 - 2021-02-05\n\n### Fixed\n- Fixed a bug where extra rows could be created in the `drafts` table. ([#7542](https://github.com/craftcms/cms/issues/7542))\n\n## 3.6.4 - 2021-02-05\n\n### Added\n- Added the `accessibilityDefaults` config setting, which determines users\u2019 default accessibility preferences. ([#7504](https://github.com/craftcms/cms/issues/7504))\n- Added the `collation` database config setting, which determines the default collation that should be used when creating tables, rather than leaving it up to the character set\u2019s default collation. (MySQL only.)\n- Added the `db/convert-charset` command, which can be used to convert all database tables\u2019 and textual columns\u2019 character sets and collations in one fell swoop.\n- Added `craft\\base\\ElementInterface::uiLabel()`.\n- Added `craft\\services\\Drafts::insertDraftRow()`.\n\n### Changed\n- Unpublished drafts with no titles are now labeled as \u201cUntitled entry\u201d rather than by their ID. ([#7500](https://github.com/craftcms/cms/issues/7500))\n- Unpublished drafts no longer show a value for URL columns in entry indexes.\n- Entry selection modals no longer show unpublished drafts.\n- Entry drafts no longer get a status color in entry indexes.\n- `craft\\elements\\User::getDirtyAttributes()` now accurately reports changed attributes. ([#7505](https://github.com/craftcms/cms/pull/7505))\n\n### Fixed\n- Fixed a JavaScript error that could occur in the control panel. ([#7492](https://github.com/craftcms/cms/issues/7492))\n- Fixed a bug where the Edit Site page\u2019s title could be set to the raw site\u2019s name setting, if it was set to an environment variable.\n- Fixed a bug where some ASCII character mappings included a trailing `'` character. ([#7491](https://github.com/craftcms/cms/issues/7491))\n- Fixed an error that could occur on the System Report utility. ([#7493](https://github.com/craftcms/cms/issues/7493))\n- Fixed a bug where Number field inputs were slightly indented. ([#7498](https://github.com/craftcms/cms/issues/7498))\n- Fixed a bug where built-in Composer features weren\u2019t reading credentials from the global `auth.json` file. ([#7466](https://github.com/craftcms/cms/issues/7466))\n- Fixed a bug where unpublished drafts were revealing their temporary slugs in the URI and Slug columns of entry indexes, if a slug hadn\u2019t been chosen yet.\n- Fixed a bug that could break some autosuggest inputs.\n- Fixed a bug where Craft wasn\u2019t recording entry-specific attribute changes.\n- Fixed a bug where `craft\\helpers\\Html::namespaceAttributes()` was ignoring `url()` references if multiple existed on the same line. ([#7496](https://github.com/craftcms/cms/pull/7496))\n- Fixed an error that could occur when editing an element with a URL field without a value. ([#7506](https://github.com/craftcms/cms/pull/7506))\n- Fixed a bug where duplicating an unpublished draft wouldn\u2019t create a new row in the `drafts` table, so the two drafts would be joined at the hip. ([#7508](https://github.com/craftcms/cms/issues/7508))\n\n## 3.6.3 - 2021-02-03\n\n### Added\n- Added `craft\\base\\ElementInterface::setUiLabel()`.\n- Added `craft\\fields\\BaseRelationField::tableAttributeHtml()`.\n- Added `craft\\helpers\\Cp::elementPreviewHtml()`.\n\n### Changed\n- Entry indexes now include draft entries in the main entry listings. ([#7401](https://github.com/craftcms/cms/issues/7401))\n- Entry indexes can now show a \u201cDrafts\u201d column, which lists the entries\u2019 drafts. ([#7473](https://github.com/craftcms/cms/issues/7473))\n- The \u201cPublish draft\u201d button on Edit Entry pages can now be activated using a <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Alt</kbd>/<kbd>Option</kbd> + <kbd>S</kbd> keyboard shortcut.\n- Entry queries\u2019 `drafts` param can now be set to `null`, indicating that both normal entries _and_ drafts can be included in the results.\n- Entries can now be eager-loaded with `drafts`.\n- `craft\\helpers\\Cp::elementHtml` now has a `$showDraftBadge` argument.\n\n### Removed\n- Removed `craft\\fields\\BaseRelationField::elementPreviewHtml()`.\n\n### Fixed\n- Fixed a bug where Edit Entry pages would get a \u201cCreate a new entry\u201d heading when editing an existing draft entry.\n- Fixed a bug where user impersonation URLs only worked for active users. ([#7475](https://github.com/craftcms/cms/issues/7475))\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::draftOf()` didn\u2019t accept passing in `'*'`. ([#7470](https://github.com/craftcms/cms/issues/7470))\n\n## 3.6.2 - 2021-01-29\n\n### Added\n- Added `craft\\gql\\handlers\\Site`.\n- Added `craft\\service\\Gql::handleQueryErrors()`.\n\n### Changed\n- The web-based installer now respects the `postCpLoginRedirect` config setting. ([#5648](https://github.com/craftcms/cms/issues/5648))\n- Improved GraphQL error reporting.\n- `craft\\test\\console\\CommandTest::stdOut()`, `outputCommand()`, and `stderr()` now accept an array of possible expected strings.\n- Downgraded webonyx/graphql-php to 14.4. ([#7452](https://github.com/craftcms/cms/issues/7452))\n\n### Fixed\n- Fixed a bug where any license key inputs on the Settings \u2192 Plugins page that were set to environment variable names would get replaced with the actual license key after a short period of time.\n- Fixed a bug where some GraphQL queries could not be executed when Dev Mode was disabled. ([#7452](https://github.com/craftcms/cms/issues/7452))\n- Fixed a bug where GraphQL queries which set `site: '*'` would result in an error. ([#5079](https://github.com/craftcms/cms/issues/5079))\n- Fixed a bug where sections\u2019 Template setting values weren\u2019t getting auto-generated based on the Name setting, for new sections.\n- Fixed a PHP error that could occur when running the `update` command if specific versions were requested.\n- Fixed an error that could occur if a deprecation warning was logged before Craft was installed.\n\n## 3.6.1 - 2021-01-27\n\n### Added\n- Added `craft\\console\\ControllerTrait::checkTty()`.\n\n### Changed\n- The `setup/welcome` command that is run automatically after installing Craft via `composer create-project craftcms/craft` can now initiate the setup process automatically, if using Composer 2.\n- `craft\\console\\Controller::$interactive` is now set to `false` automatically for non-interactive shells.\n\n### Fixed\n- Fixed a bug where the `migrate/all` command wasn\u2019t working when executed from a Composer script in a non-interactive shell, unless `--interactive=0` was explicitly passed. ([#7381](https://github.com/craftcms/cms/issues/7381))\n- Fixed an error that occurred when saving a Categories field with a branch limit. ([#7449](https://github.com/craftcms/cms/pull/7449))\n\n## 3.6.0.1 - 2021-01-26\n\n### Fixed\n- Fixed an error that could occur when validating dates. ([#7443](https://github.com/craftcms/cms/issues/7443))\n\n## 3.6.0 - 2021-01-26\n\n> **Warning**\n> Read through the [Upgrading to Craft 3.6](https://craftcms.com/knowledge-base/upgrading-to-craft-3-6) guide before updating.\n\n### Added\n- Craft now supports PHP 8. ([#7050](https://github.com/craftcms/cms/issues/7050))\n- Craft now requires PHP 7.2.5 or later.\n- Commercial plugins now receive license keys automatically when installed as trials.\n- It\u2019s now possible for admins to purchase Craft and plugin licenses when `allowAdminChanges` is disabled.\n- It\u2019s now possible to browse the Plugin Store when `allowAdminChanges` is disabled.\n- Added tablet and phone viewport emulation to Live Preview (Craft Pro only.) ([#1006](https://github.com/craftcms/cms/issues/1006))\n- Entries now begin life as \u201cunpublished drafts\u201d rather than \u201cunsaved drafts\u201d. They are no longer ephemeral; they will continue to exist until explicitly published or deleted. ([#5661](https://github.com/craftcms/cms/issues/5661), [#7216](https://github.com/craftcms/cms/issues/7216))\n- It\u2019s now possible to delete entries for a specific site, if their section\u2019s propagation method is set to \u201cLet each entry choose which sites it should be saved to\u201d. ([#7190](https://github.com/craftcms/cms/issues/7190))\n- Added the \u201cCopy impersonation URL\u201d user action, which generates a URL that can be pasted into a private window to impersonate the user without losing the current session. ([#7281](https://github.com/craftcms/cms/issues/7281))\n- User indexes can now include a \u201cGroups\u201d column. ([#7211](https://github.com/craftcms/cms/issues/7211))\n- Volumes now have \u201cTitle Translation Method\u201d and \u201cTitle Translation Key Format\u201d settings, like entry types. ([#7135](https://github.com/craftcms/cms/issues/7135))\n- It\u2019s now possible to set sites\u2019 Name settings to environment variables.\n- URL fields now have an \u201cAllowed URL Types\u201d setting, which adds the ability to accept telephone and email URLs. ([#5497](https://github.com/craftcms/cms/issues/5497))\n- Added the \u201cCaptions/Subtitles\u201d file kind. ([#7304](https://github.com/craftcms/cms/issues/7304))\n- Added the `users/list-admins` and `users/set-password` commands. ([#7067](https://github.com/craftcms/cms/issues/7067))\n- Added the `disableGraphqlTransformDirective` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `enableGraphqlIntrospection` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `handleCasing` config setting, which determines the default casing that should be used when autogenerating component handles. ([#4276](https://github.com/craftcms/cms/issues/4276))\n- Added the `maxGraphqlComplexity` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `maxGraphqlDepth` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `maxGraphqlResults` config setting. ([#6466](https://github.com/craftcms/cms/issues/6466))\n- Added the `rasterizeSvgThumbs` config setting. ([#7146](https://github.com/craftcms/cms/issues/7146))\n- Added the `sanitizeCpImageUploads` config setting, which determines whether images uploaded via the control panel should be sanitized. ([#3060](https://github.com/craftcms/cms/issues/3060))\n- Added the `{% tag %}` Twig tag.\n- Added the `withGroups` user query param.\n- Added the `relatedToAssets`, `relatedToCategories`, `relatedToEntries`, `relatedToTags`, and `relatedToUsers` arguments to GraphQL queries. ([#7110](https://github.com/craftcms/cms/issues/7110))\n- Added the `isUnpublishedDraft` GraphQL field.\n- Added `craft\\base\\ApplicationTrait::getFormattingLocale()`, which returns the locale that should be used for date/time formatting.\n- Added `craft\\base\\ElementExporterInterface::isFormattable()`.\n- Added `craft\\base\\ElementInterface::getIsUnpublishedDraft()`.\n- Added `craft\\base\\FieldInterface::includeInGqlSchema()`. ([#7244](https://github.com/craftcms/cms/pull/7244))\n- Added `craft\\base\\FieldInterface::useFieldset()`, which custom fields can override to return `true` if a `<fieldset>` and `<legend>` should be used, rather than a `<div>` and `<label>`.\n- Added `craft\\base\\VolumeInterface::createDirectory()`.\n- Added `craft\\base\\VolumeInterface::deleteDirectory()`.\n- Added `craft\\base\\VolumeInterface::getDateModified()`.\n- Added `craft\\base\\VolumeInterface::getFileSize()`.\n- Added `craft\\base\\VolumeInterface::renameDirectory()`.\n- Added `craft\\base\\VolumeTrait::$titleTranslationKeyFormat`.\n- Added `craft\\base\\VolumeTrait::$titleTranslationMethod`.\n- Added `craft\\console\\Controller::passwordPrompt()`.\n- Added `craft\\console\\Request::getHadToken()`.\n- Added `craft\\console\\Request::getSiteToken()`.\n- Added `craft\\console\\Request::setToken()`.\n- Added `craft\\controllers\\BaseEntriesController::enforceDeleteEntryPermissions()`.\n- Added `craft\\elements\\db\\ElementQueryInterface::afterPopulate()`.\n- Added `craft\\elements\\db\\ElementQueryInterface::createElement()`.\n- Added `craft\\elements\\Entry::EVENT_DEFINE_ENTRY_TYPES`. ([#7136](https://github.com/craftcms/cms/issues/7136))\n- Added `craft\\elements\\Entry::getAvailableEntryTypes()`.\n- Added `craft\\events\\CreateFieldLayoutFormEvent`.\n- Added `craft\\events\\DefineEntryTypesEvent`.\n- Added `craft\\events\\RegisterGqlArgumentHandlersEvent`.\n- Added `craft\\events\\SearchEvent::$results`. ([#7237](https://github.com/craftcms/cms/issues/7237))\n- Added `craft\\fieldlayoutelements\\AssetTitleField`.\n- Added `craft\\fieldlayoutelements\\BaseField::useFieldset()`.\n- Added `craft\\fields\\Url::TYPE_EMAIL`.\n- Added `craft\\fields\\Url::TYPE_TEL`.\n- Added `craft\\fields\\Url::TYPE_URL`.\n- Added `craft\\gql\\ArgumentManager`.\n- Added `craft\\gql\\base\\ArgumentHandler`.\n- Added `craft\\gql\\base\\ArgumentHandlerInterface`.\n- Added `craft\\gql\\base\\Generator`.\n- Added `craft\\gql\\base\\RelationArgumentHandler`.\n- Added `craft\\gql\\ElementQueryConditionBuilder::setArgumentManager()`.\n- Added `craft\\gql\\handlers\\RelatedAssets`.\n- Added `craft\\gql\\handlers\\RelatedCategories`.\n- Added `craft\\gql\\handlers\\RelatedEntries`.\n- Added `craft\\gql\\handlers\\RelatedTags`.\n- Added `craft\\gql\\handlers\\RelatedUsers`.\n- Added `craft\\gql\\types\\input\\criteria\\Asset`.\n- Added `craft\\gql\\types\\input\\criteria\\Category`.\n- Added `craft\\gql\\types\\input\\criteria\\Entry`.\n- Added `craft\\gql\\types\\input\\criteria\\Tag`.\n- Added `craft\\gql\\types\\input\\criteria\\User`.\n- Added `craft\\helpers\\App::createFormattingLocale()`.\n- Added `craft\\helpers\\App::phpSizeToBytes()`.\n- Added `craft\\helpers\\Cp::checkboxFieldHtml()`.\n- Added `craft\\helpers\\Cp::checkboxSelectFieldHtml()`.\n- Added `craft\\helpers\\Cp::colorFieldHtml()`.\n- Added `craft\\helpers\\Cp::editableTableFieldHtml()`.\n- Added `craft\\helpers\\Cp::lightswitchFieldHtml()`.\n- Added `craft\\helpers\\Cp::renderTemplate()`.\n- Added `craft\\helpers\\Cp::selectFieldHtml()`.\n- Added `craft\\helpers\\Cp::selectHtml()`.\n- Added `craft\\helpers\\Cp::textareaFieldHtml()`.\n- Added `craft\\helpers\\Cp::textFieldHtml()`.\n- Added `craft\\helpers\\Diff`.\n- Added `craft\\helpers\\Gql::eagerLoadComplexity()`.\n- Added `craft\\helpers\\Gql::nPlus1Complexity()`.\n- Added `craft\\helpers\\Gql::singleQueryComplexity()`.\n- Added `craft\\helpers\\Template::paginateQuery()`.\n- Added `craft\\i18n\\I18N::validateAppLocaleId()`.\n- Added `craft\\i18n\\Locale::setDateTimeFormats()`. ([#7394](https://github.com/craftcms/cms/issues/7394))\n- Added `craft\\log\\Dispatcher`.\n- Added `craft\\models\\FieldLayout::EVENT_CREATE_FORM`. ([#7258](https://github.com/craftcms/cms/issues/7258))\n- Added `craft\\models\\Site::getName()`.\n- Added `craft\\models\\Site::setBaseUrl()`.\n- Added `craft\\models\\Site::setName()`.\n- Added `craft\\mutex\\MysqlMutex`.\n- Added `craft\\mutex\\PgsqlMutex`.\n- Added `craft\\services\\Assets::$generatePendingTransformsViaQueue`. ([#7360](https://github.com/craftcms/cms/issues/7360))\n- Added `craft\\services\\Drafts::EVENT_AFTER_APPLY_DRAFT`.\n- Added `craft\\services\\Drafts::EVENT_BEFORE_APPLY_DRAFT`.\n- Added `craft\\services\\Drafts::publishDraft()`.\n- Added `craft\\services\\Globals::deleteSet()`.\n- Added `craft\\services\\Globals::reset()`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_CPU_HEAVY`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_EAGER_LOAD`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_NPLUS1`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_QUERY`.\n- Added `craft\\services\\Gql::GRAPHQL_COMPLEXITY_SIMPLE_FIELD`.\n- Added `craft\\services\\Structures::applyBranchLimitToElements()`.\n- Added `craft\\services\\Structures::fillGapsInElements()`.\n- Added `craft\\test\\ActiveFixture`.\n- Added `craft\\test\\DbFixtureTrait`.\n- Added `craft\\test\\fixtures\\elements\\BaseContentFixture`.\n- Added `craft\\test\\fixtures\\elements\\BaseElementFixture`.\n- Added `craft\\test\\TestSetup::SITE_URL`.\n- Added `craft\\validators\\UrlValidator::URL_PATTERN`.\n- Added `craft\\web\\Request::getHadToken()`.\n- Added `craft\\web\\Request::getSiteToken()`.\n- Added `craft\\web\\Request::setToken()`.\n- Added the `Craft.index()` JavaScript method.\n\n### Changed\n- Relational fields now include all related elements\u2019 titles as search keywords, including disabled elements. ([#7079](https://github.com/craftcms/cms/issues/7079))\n- Improved the performance of project config change diffs. ([#7218](https://github.com/craftcms/cms/issues/7218))\n- Improved the accessibility of info icons.\n- Checkbox and radio button group fields now use `<fieldset>`s and `<legend>`s throughout the control panel.\n- Field containers no longer set the `aria-describedby` attribute, leaving it up to the actual inputs to do so. ([#7365](https://github.com/craftcms/cms/issues/7365))\n- Number field settings and input values are now fully formatted, unless the Preview Format setting is set to \u201cUnformatted\u201d.\n- The Settings \u2192 Plugin page now shows which developer created each plugin. ([#7254](https://github.com/craftcms/cms/issues/7254))\n- Field layout designers will no longer create a new tab if no tab name is entered in the prompt. ([#7333](https://github.com/craftcms/cms/issues/7333))\n- Site URLs that are generated on the front-end of disabled sites now include the `siteToken` param, if one was passed to the current page. ([#7264](https://github.com/craftcms/cms/issues/7264))\n- Mutex lock names are now prefixed with the application ID, to avoid lock conflicts if two Craft installs shared the same database. ([#7384](https://github.com/craftcms/cms/issues/7384))\n- Action URLs are now always based on the control panel URL when running Craft in headless mode. ([#5553](https://github.com/craftcms/cms/issues/5553))\n- Renamed the `backup` and `restore` commands to `db/backup` and `db/restore`. ([#7023](https://github.com/craftcms/cms/issues/7023))\n- The `migrate/all` command now lists the migrations that will be applied. ([#7381](https://github.com/craftcms/cms/issues/7381))\n- The `project-config/apply` command now displays a list of changes it is applying. ([#7235](https://github.com/craftcms/cms/issues/7235))\n- The `allowedFileExtensions` config setting now includes several file extensions used by caption and subtitle file formats by default. ([#7304](https://github.com/craftcms/cms/issues/7304))\n- When applying project config changes, Craft now installs new plugins _before_ uninstalling removed plugins. ([#7436](https://github.com/craftcms/cms/issues/7436))\n- The `currency`, `filesize`, `number`, `percentage`, and `timestamp` Twig filters now return the passed-in value verbatim if it wasn\u2019t a valid number.\n- The `withoutKey` Twig filter can now accept an array, for removing multiple keys at once. ([#7230](https://github.com/craftcms/cms/issues/7230))\n- It\u2019s now possible to add new log targets by overriding `components.log.targets` in `config/app.php`, rather than the entire `log` component config.\n- The `_includes/forms/field.html` control panel template and `craft\\helpers\\Cp::fieldHtml()` now accept a `fieldset` variable/config key, which can be set to `true` to cause the resulting field to be a `<fieldset>` instead of a `<div>`, and the label to be a `<legend>` instead of a `<label>`.\n- The `_includes/forms/field.html` control panel template and `craft\\helpers\\Cp::fieldHtml()` now accept an `instructionsPosition` variable/config key, which can be set to `'after'` to cause the field instructions to be rerdered after the input instead of before.\n- The `_includes/forms/field.html` control panel template and `craft\\helpers\\Cp::fieldHtml()` now accept a `fieldLabel` variable/config key, which will take precedence over `label`.\n- The `checkboxField` macro within the `_includes/forms.html` control panel template now returns a `<fieldset>` if a `fieldLabel` config key was passed.\n- `craft\\base\\ElementExporterInterface::export()` can now return raw response data, a callable, or a resource, if `isFormattable()` returns `false`. If a callable or resource is returned, it will be streamed to the browser. ([#7148](https://github.com/craftcms/cms/issues/7148))\n- `craft\\behaviors\\EnvAttributeParserBehavior::$attributes` can now be set to an array with key/value pairs, where the key is the attribute name, and the value is the raw (unparsed) value, or a callable that returns the raw value.\n- `craft\\behaviors\\EnvAttributeParserBehavior::$attributes` can now be set to an array with key/value pairs, where the key is the attribute name, and the value is the raw (unparsed) value, or a callable that returns the raw value.\n- `craft\\db\\Connection::getPrimaryKeyName()`, `getForeignKeyName()`, and `getIndexName()` now generate completely random object names, rather than basing them on a table name, etc. ([#7153](https://github.com/craftcms/cms/issues/7153))\n- `craft\\base\\ApplicationTrait::getLocale()` now returns the same locale that the application language is set to.\n- `craft\\helpers\\Cp::fieldHtml()` now accepts a control panel template path, prefixed with `template:`.\n- `craft\\helpers\\Gql::isSchemaAwareOf()`, `extractAllowedEntitiesFromSchema()`, `canSchema()`, `extractEntityAllowedActions()`, `canMutateEntries()`, `canMutateTags()`, `canMutateGlobalSets()`, `canMutateCategories()`, `canMutateAssets()`, `canQueryEntries()`, `canQueryAssets()`, `canQueryCategories()`, `canQueryTags()`, `canQueryGlobalSets()`, and `canQueryUsers()` now have `$schema` arguments.\n- `craft\\models\\Site::$baseUrl` is now a magic property, which returns the parsed base URL. ([#3964](https://github.com/craftcms/cms/issues/3964))\n- `craft\\models\\Site::$name` is now a magic property, which returns the parsed site name. ([#3964](https://github.com/craftcms/cms/issues/3964))\n- `craft\\models\\Site::getBaseUrl()` now has a `$parse` argument, which can be set to `false` to return the raw (unparsed) base URL.\n- `craft\\services\\Composer::install()` no longer has an `$allowlist` argument.\n- `craft\\services\\Gql::getValidationRules()` now has an `$isIntrospectionQuery` argument.\n- `Craft.formatNumber()` and other D3-based number formatting now uses a dynamically-generated locale definition based on info pulled from the application\u2019s formatting locale. ([#7341](https://github.com/craftcms/cms/issues/7341))\n- Craft no longer reports PHP deprecation errors.\n- Exception JSON responses now include `exception`, `file`, `line`, and `trace` keys. ([#7406](https://github.com/craftcms/cms/issues/7406))\n- GraphQL queries now support eager-loading for arguments provided as input objects.\n- Made it easier to extend Craft\u2019s Codeception testing module with custom code. ([#7339](https://github.com/craftcms/cms/issues/7339))\n- Updated Yii to 2.0.40.\n- Updated Guzzle to 7.x, for projects that don\u2019t have any plugins that require Guzzle 6. ([#6997](https://github.com/craftcms/cms/issues/6997))\n- Updated Composer to 2.0.8.\n- Updated LitEmoji to 2.x.\n- Updated the Symfony Yaml component to 5.x.\n- Updated svg-sanitizer to 0.14.\n- Updated webonyx/graphql-php to 14.x.\n\n### Deprecated\n- Deprecated the `backup` and `restore` commands.\n- Deprecated the `purgeUnsavedDraftsDuration` config setting.\n- Deprecated the `siteName` config setting. Sites\u2019 Name settings should be set to environment variables instead.\n- Deprecated the `siteUrl` config setting. Sites\u2019 Base URL settings should be set to aliases or environment variables instead. ([#3205](https://github.com/craftcms/cms/issues/3205))\n- Deprecated the `relatedToAll` GraphQL query argument. `relatedTo: [\"and\", ...ids]` should be used instead.\n- Deprecated the `isUnsavedDraft` GraphQL field.\n- Deprecated `craft\\base\\Element::getIsUnsavedDraft()`. `getIsUnpublishedDraft()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::createDir()`. `createDirectory()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::deleteDir()`. `deleteDirectory()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::getFileMetadata()`. `getFileSize()` and `getDateModified()` should be used instead.\n- Deprecated `craft\\base\\VolumeInterface::renameDir()`. `renameDirectory()` should be used instead.\n- Deprecated `craft\\db\\Connection::trimObjectName()`.\n- Deprecated `craft\\gql\\base\\Resolver::getArrayableArguments()`.\n- Deprecated `craft\\gql\\base\\Resolver::prepareArguments()`.\n- Deprecated `craft\\helpers\\App::logConfig()`.\n- Deprecated `craft\\helpers\\Template::paginateCriteria()`. `paginateQuery()` should be used instead.\n- Deprecated `craft\\services\\Categories::applyBranchLimitToCategories()`. `craft\\services\\Structures::applyBranchLimitToElements()` should be used instead.\n- Deprecated `craft\\services\\Categories::fillGapsInCategories()`. `craft\\services\\Structures::fillGapsInElements()` should be used instead.\n- Deprecated `craft\\services\\Composer::$disablePackagist`.\n- Deprecated `craft\\services\\Drafts::applyDraft()`. `publishDraft()` should be used instead.\n- Deprecated `craft\\services\\Drafts::EVENT_AFTER_APPLY_DRAFT`. `EVENT_AFTER_PUBLISH_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::EVENT_BEFORE_APPLY_DRAFT`. `EVENT_BEFORE_PUBLISH_DRAFT` should be used instead.\n- Deprecated `craft\\services\\Drafts::purgeUnsavedDrafts()`.\n- Deprecated `craft\\test\\Fixture`. `craft\\test\\ActiveFixture` should be used instead.\n- Deprecated `craft\\web\\View::$minifyCss`.\n- Deprecated `craft\\web\\View::$minifyJs`.\n- Deprecated `craft\\web\\View::renderTemplateMacro()`.\n\n### Removed\n- Removed the \u201cPlaceholder\u201d setting from URL fields. ([#7303](https://github.com/craftcms/cms/issues/7303))\n- Removed `craft\\controllers\\ElementIndexesController::actionCreateExportToken()`.\n- Removed `craft\\controllers\\ExportController`.\n- Removed `craft\\services\\Api::getComposerWhitelist()`.\n- Removed `craft\\test\\fixtures\\elements\\ElementFixture`. `craft\\test\\fixtures\\elements\\BaseElementFixture` or `BaseContentFixture` should be used instead.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::deleteAllByFieldHandle()`.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::extractTabsFromFieldLayout()`.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::getTabsForFieldLayout()`.\n- Removed `craft\\test\\fixtures\\FieldLayoutFixture::linkFieldToLayout()`.\n- Removed Minify and jsmin-php.\n\n### Fixed\n- Fixed an error that occurred when a schema change was made within a transaction, if using MySQL and PHP 8. ([#7174](https://github.com/craftcms/cms/issues/7174))\n- Fixed a bug where asset queries\u2019 `withTransforms` param wasn\u2019t being respected for eager-loaded assets. ([#6140](https://github.com/craftcms/cms/issues/6140))\n- Fixed a bug where `craft\\db\\Connection::getPrimaryKeyName()`, `getForeignKeyName()`, and `getIndexName()` could generate non-unique object names. ([#7153](https://github.com/craftcms/cms/issues/7153))\n- Fixed a bug where number strings were not correctly typecast to the right PHP numeric type when using the Number GraphQL type.\n- Fixed a bug where it wasn\u2019t possible to save a Global set with a predefined UID.\n- Fixed a bug where `craft\\helpers\\Db::prepareValuesForDb()` would omit or JSON-encode `DateTime` objects, depending on the PHP version, rather than converting them to ISO-8601-formatted strings.\n- Fixed a bug where info icons\u2019 content was focusable before the icon was activated. ([#7257](https://github.com/craftcms/cms/issues/7257))\n- Fixed a bug where generated URLs would include the token from the current request, even if it had expired or met its usage limit.\n- Fixed a bug where Number field settings and input values could be stored incorrectly if the user\u2019s formatting locale used a different decimal character that the application language.\n- Fixed a MySQL deadlock error that could occur when running background jobs. ([#7179](https://github.com/craftcms/cms/issues/7179))\n\n### Security\n- The default `allowedFileExtensions` config setting value no longer includes `htm` or `html`.\n\n## 3.5.19.1 - 2021-01-28\n\n### Fixed\n- Fixed an error that could occur when validating dates. ([#7459](https://github.com/craftcms/cms/issues/7459))\n\n## 3.5.19 - 2021-01-26\n\n### Changed\n- The control panel is now fully translated in all supported languages.\n\n### Fixed\n- Fixed a bug where Date fields with existing values were always considered dirty when saving an entry. ([#7404](https://github.com/craftcms/cms/issues/7404))\n\n## 3.5.18 - 2021-01-19\n\n### Changed\n- Improved the accessibility of lightswitches in the control panel. ([#7313](https://github.com/craftcms/cms/issues/7313))\n- Improved the accessibility of the Login page. ([#7268](https://github.com/craftcms/cms/issues/7268), [#7287](https://github.com/craftcms/cms/issues/7287), [#7288](https://github.com/craftcms/cms/issues/7288))\n- Improved the accessibility of Number fields. ([#7367](https://github.com/craftcms/cms/issues/7367))\n- Added `aria-label` or `aria-hidden` attributes to control panel icons, where appropriate. ([#7302](https://github.com/craftcms/cms/pull/7302))\n- Dynamic subfolder paths in Assets fields can now output `:ignore:` to avoid an invalid subpath error if no segment is intended. ([#7353](https://github.com/craftcms/cms/issues/7353))\n- Improved the error message that is output when running the `clear-caches/cp-resources` command, if the `@webroot` alias isn\u2019t explicitly set. ([#7286](https://github.com/craftcms/cms/issues/7286))\n- `craft\\i18n\\I18N::getFormatter()` now instantiates the formatter via `Craft::createObject()`. ([#7341](https://github.com/craftcms/cms/issues/7341))\n\n### Fixed\n- Fixed a bug where auto-created Matrix blocks were taking over the focus when creating a new entry. ([#7363](https://github.com/craftcms/cms/issues/7363))\n- Fixed an error that could occur due to a race condition when generating `CustomFieldBehavior` classes. ([#7379](https://github.com/craftcms/cms/issues/7379))\n- Fixed a bug where field layout tabs\u2019 settings buttons could become inaccessible if the tab name began with a long word without any hyphens. ([#7298](https://github.com/craftcms/cms/issues/7298))\n- Fixed a bug where Dropdown, Multi-select, and Number fields\u2019 inputs weren\u2019t getting `id` attributes that matched their labels\u2019 `for` attributes. ([#7319](https://github.com/craftcms/cms/issues/7319))\n- Fixed a bug where week day and month names were being translated based on the current formatting locale, rather than the current language. ([#7312](https://github.com/craftcms/cms/issues/7312))\n- Fixed a bug where Matrix blocks weren\u2019t getting validated when autosaving entry drafts.\n- Fixed an error that could occur when saving elements with Matrix fields, if there were any custom fields whose handles conflicted with `craft\\elements\\db\\ElementQuery` getter methods, such as `criteria`. ([#7335](https://github.com/craftcms/cms/issues/7335))\n- Fixed a bug where it wasn\u2019t possible to upload some file types via GraphQL mutations. ([#7327](https://github.com/craftcms/cms/issues/7327))\n- Fixed an error that could occur on console requests if Craft didn\u2019t think it was installed yet. ([#7309](https://github.com/craftcms/cms/issues/7309))\n- Fixed a bug where clearing control panel resources would delete the `.gitignore` file as well. ([#7361](https://github.com/craftcms/cms/issues/7361))\n- Fixed a bug where user registration forms could get a \u201cUsername cannot be blank\u201d error even if the `useEmailAsUsername` config setting was enabled. ([#7357](https://github.com/craftcms/cms/issues/7357))\n- Fixed a bug where `craft\\elements\\Asset::getSrcset()` could return the wrong value if the asset had a named transform set on it. ([#7352](https://github.com/craftcms/cms/issues/7352))\n- Fixed a bug where the \u201cAll\u201d checkbox label was getting HTML-encoded when using `Craft.ui.createCheckboxSelect()`.\n- Fixed a bug where `Craft.formatNumber()` could format numbers based on the user\u2019s preferred language rather than the preferred formatting locale.\n\n## 3.5.17.1 - 2020-12-17\n\n### Fixed\n- Fixed a bug where search keywords weren\u2019t getting normalized based on the selected site when searching for elements in the control panel. ([#3145](https://github.com/craftcms/cms/issues/3145))\n- Fixed a bug where element indexes\u2019 custom header column headings weren\u2019t translatable. ([#7272](https://github.com/craftcms/cms/issues/7272))\n- Fixed a bug where the `gc` command would delete all soft-deleted items when `--interactive=0` was passed. ([#7280](https://github.com/craftcms/cms/issues/7280))\n- Fixed an error that occurred when uploading a file directly to an Assets field within a new Matrix block. ([#7284](https://github.com/craftcms/cms/issues/7284))\n\n## 3.5.17 - 2020-12-15\n\n### Added\n- Edit Section and Edit Entry Type pages now have a \u201cSave and continue editing\u201d Save menu option, and the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut is now assigned to that. ([#2872](https://github.com/craftcms/cms/issues/2872))\n- Added the `fullSchema` option to the `graphql/dump-schema` and `graphql/print-schema` commands. ([#7226](https://github.com/craftcms/cms/issues/7226))\n\n### Changed\n- Improved accessibility throughout the control panel. ([#7231](https://github.com/craftcms/cms/pull/7231))\n- The Username, First Name, Last Name, Email, and New Password fields on Edit User pages now prevent LastPass from autofilling them. ([#7177](https://github.com/craftcms/cms/issues/7177))\n- Field layout elements\u2019 settings HUDs now automatically set the focus on the first text input when opened. ([#7175](https://github.com/craftcms/cms/issues/7175))\n- Field instructions within the details pane are now replaced with info icons. ([#7180](https://github.com/craftcms/cms/issues/7180))\n- Panes with `overflow: auto` and no focusable content within them now have `tabindex=\"0\"` attributes, so their content can be keyboard-scrollable on Chromium and WebKit-based browsers. ([#7236](https://github.com/craftcms/cms/issues/7236))\n- The `generateTransformsBeforePageLoad` config setting is now automatically enabled when rendering emails. ([#7267](https://github.com/craftcms/cms/issues/7267))\n- It\u2019s now possible to pass arrays to relational fields\u2019 element query params which begin with `':empty:'`, to fetch elements where the relational field is either empty or has a certain value. ([#7256](https://github.com/craftcms/cms/issues/7256))\n- `users/set-password` requests now include a `status` key in JSON responses, set to the user\u2019s status. ([#7239](https://github.com/craftcms/cms/issues/7239))\n\n### Fixed\n- Fixed a bug where `craft\\base\\Field::isFresh()` could return the wrong result.\n- Fixed a bug where required Checkboxes, Dropdown, Multi-select, and Radio Button fields within Matrix blocks could cause validation errors. ([#7205](https://github.com/craftcms/cms/issues/7205))\n- Fixed a bug where assets could be uploaded to a folder named after the primary site rather than the selected site, when uploaded via an Assets field in a global set, if the field had a dynamic upload path that contained `{site.handle}`. ([#7213](https://github.com/craftcms/cms/issues/7213))\n- Fixed a PHP error that could occur when running functional tests. ([#7207](https://github.com/craftcms/cms/pull/7207))\n- Fixed a bug where the plugin installer wasn\u2019t always handling plugins\u2019 post-install redirects correctly. ([#7204](https://github.com/craftcms/cms/issues/7204))\n- Fixed a bug where the `siteName` and `siteUrl` config settings could get hard-coded into the project config when the project config was rebuilt. ([#7208](https://github.com/craftcms/cms/issues/7208))\n- Fixed a bug where sites\u2019 Name setting would show the `siteName` config setting value rather than the stored value, if it was set.\n- Fixed a bug where `craft\\elements\\Asset::getSrcset()` would not respect some of the properties of the transform set on the asset. ([#7193](https://github.com/craftcms/cms/issues/7193))\n- Fixed a bug where WebP images were not transformable, even if the server was configured for it. ([#7170](https://github.com/craftcms/cms/issues/7170))\n- Fixed a bug where the image editor could save an image incorrectly, if the `upscaleImages` config setting was set to `false`.\n- Fixed a bug where it wasn\u2019t possible to install a plugin if it had a row in the `plugins` table, but it wasn\u2019t in the project config. ([#7229](https://github.com/craftcms/cms/issues/7229))\n- Fixed a bug where Craft wasn\u2019t always respecting plugins\u2019 `minVersionRequired`. ([#7191](https://github.com/craftcms/cms/issues/7191))\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::getCriteria()` wasn\u2019t including custom field criteria values. ([#7225](https://github.com/craftcms/cms/issues/7225))\n- Fixed a MySQL deadlock error that could occur when running background jobs. ([#7179](https://github.com/craftcms/cms/issues/7179))\n- Fixed a bug where Craft was responding to set-password requests for pending users as if they had been activated, even if something prevented them from being activated. ([#7239](https://github.com/craftcms/cms/issues/7239))\n- Fixed a bug where the `|attr` Twig filter wasn\u2019t removing `class` and `style` attributes when they were set to `false` or `null`. ([#7234](https://github.com/craftcms/cms/issues/7234))\n- Fixed a bug where eager-loading would load incorrect elements in some cases when using GraphQL API.\n- Fixed a bug where select inputs could bleed out of their container divs. ([#7183](https://github.com/craftcms/cms/issues/7183))\n- Fixed a bug where Edit Entry pages would show \u201cSave and add another\u201d and \u201cSave as a new entry\u201d action options for users who didn\u2019t have permission to create new entries in the section. ([#7232](https://github.com/craftcms/cms/issues/7232))\n- Fixed a bug where some control panel SVG icons had conflicting IDs. ([#7247](https://github.com/craftcms/cms/pull/7247))\n- Fixed a bug where it wasn\u2019t possible to set multiple options on Checkboxes and Multi-select fields when saving elements via GraphQL mutations. ([#7197](https://github.com/craftcms/cms/issues/7197))\n- Fixed a bug where users were able to delete entries if they had the \u201cDelete other authors\u2019 entries\u201d permission but not the \u201cDelete entries\u201d permission. ([#7233](https://github.com/craftcms/cms/issues/7233))\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Buttons fields\u2019 values weren\u2019t getting translated on element indexes. ([#7271](https://github.com/craftcms/cms/issues/7271))\n\n## 3.5.16 - 2020-11-24\n\n### Added\n- It\u2019s now possible to save image transforms that generate WebP files, on environments that support it.\n- It's now possible to send a `X-Craft-Gql-Cache: no-cache` header with GraphQL API requests, to bypass the GraphQL cache. ([craftcms/gatsby-source-craft#8](https://github.com/craftcms/gatsby-source-craft/issues/8))\n- Added the `setPasswordUrl` global Twig variable.\n- Added `craft\\gql\\GqlEntityRegistry::getPrefix()`.\n- Added `craft\\gql\\GqlEntityRegistry::setPrefix()`.\n- Added `craft\\helpers\\StringHelper::idnToUtf8Email()`.\n- Added `craft\\test\\Craft::deleteElement()`.\n\n### Changed\n- Improved the wording of the user deletion confirmation dialog. ([#5293](https://github.com/craftcms/cms/issues/5293))\n- Improved the accessibility of element source toggles.\n- The Settings \u2192 Users \u2192 Fields and Settings \u2192 Users \u2192 Settings pages no longer redirect the browser when saved. ([#7131](https://github.com/craftcms/cms/pull/7131))\n- Editable table columns can now specify the `<textarea rows>` attribute value via a `rows` key on the column config. ([#7124](https://github.com/craftcms/cms/issues/7124))\n- The GraphQL query `relatedTo` and `relatedToAll` arguments now also allow string values.\n- Editable tables no longer show their heading row if there aren\u2019t any data rows yet. ([#7158](https://github.com/craftcms/cms/issues/7158))\n- Relational fields\u2019 \u201cShow the site menu\u201d settings are no longer enabled by default.\n- Relational fields\u2019 element selection modals now always default to the source element\u2019s site, if no target site is specified in the field\u2019s settings. ([#7164](https://github.com/craftcms/cms/issues/7164))\n- Controllers now run request and permission checks from `beforeAction()` rather than `init()`. ([#7168](https://github.com/craftcms/cms/issues/7168))\n- Updated Imagine to 1.2.4.\n\n### Deprecated\n- Deprecated `craft\\fields\\BaseRelationField::inputSiteId()`.\n\n### Fixed\n- Fixed a bug where `craft\\elements\\Asset::getSrcset()` would not respect the format of the transform set on the asset. ([#6660](https://github.com/craftcms/cms/issues/6660))\n- Fixed a bug where Craft could attempt to use the Imagick driver even if it wasn\u2019t available.\n- Fixed a PHP error that occurred if a test called `craft\\test\\fixtures\\elements\\ElementFixture::getModel()`. ([#7089](https://github.com/craftcms/cms/issues/7089))\n- Fixed a bug where `1x` image transforms weren\u2019t using the original image transform.\n- Fixed a bug where sometimes Craft could not process an uploaded file if its extension was in uppercase.\n- Fixed a bug where progress bar was not removed correctly when using the Asset Indexes utility. ([#7111](https://github.com/craftcms/cms/issues/7111))\n- Fixed a PHP error that occurred if image size information could not be parsed from an image file. ([#6898](https://github.com/craftcms/cms/issues/6898))\n- Fixed a bug where elements wouldn\u2019t get fully saved if they were passed to `craft\\services\\Elements::saveElement()` from their `EVENT_AFTER_PROPAGATE` event. ([#7108](https://github.com/craftcms/cms/issues/7108))\n- Fixed a bug where formatted dates could use the wrong timezone for certain format characters.\n- Fixed a bug where it was possible to discard pending project config YAML changes, or rebuild the project config, when `allowAdminChanges` was disabled, from the Project Config utility. ([#7125](https://github.com/craftcms/cms/issues/7125))\n- Fixed an error that occurred when attempting to backup the database when the database connection used a Unix socket. ([#7121](https://github.com/craftcms/cms/issues/7121))\n- Fixed a bug where IDNA ASCII emails and usernames weren\u2019t getting converted back to Unicode. ([#7103](https://github.com/craftcms/cms/issues/7103))\n- Fixed a bug where IDs returned by the GraphQL API could not be re-used in `relatedTo` and `relatedToAll` arguments without type-casting. ([#7128](https://github.com/craftcms/cms/issues/7128))\n- Fixed a bug where entry and asset Title fields didn\u2019t always have the correct text orientation. ([#7152](https://github.com/craftcms/cms/issues/7152))\n- Fixed a bug where element indexes weren\u2019t scrolling back to the top when switching views or navigating to the next/previous page. ([#7154](https://github.com/craftcms/cms/issues/7154))\n- Fixed a bug where `craft\\events\\UserGroupsAssignEvent::$removedGroupIds` was getting set to the wrong IDs.\n- Fixed an error that could occur when attempting to delete an admin user when the `allowAdminChanges` config setting was disabled. ([#7157](https://github.com/craftcms/cms/issues/7157))\n- Fixed a bug where template caches weren\u2019t getting invalidated when global sets were saved. ([#7166](https://github.com/craftcms/cms/issues/7166))\n- Fixed a bug where validation rules defined by fields\u2019 `getElementValidationRules()` methods could lose their `isEmpty` and `on` keys.\n\n## 3.5.15.1 - 2020-11-04\n\n### Fixed\n- Fixed a bug where error responses weren\u2019t getting sent as HTML. ([#7092](https://github.com/craftcms/cms/issues/7092))\n- Fixed a bug where the Updates utility wasn\u2019t showing \u201cUpdate\u201d buttons. ([#7091](https://github.com/craftcms/cms/issues/7091))\n\n## 3.5.15 - 2020-11-03\n\n### Added\n- Assets now have a `srcset` field available via GraphQL. ([#6660](https://github.com/craftcms/cms/issues/6660))\n- Entries\u2019 and categories\u2019 `parent` GraphQL fields now support passing criteria arguments. ([#7036](https://github.com/craftcms/cms/issues/7036))\n- It\u2019s now possible to update user photos with base64-encoded images. ([#6520](https://github.com/craftcms/cms/issues/6520))\n- The `restore` command now supports restoring zipped database backups. ([#7049](https://github.com/craftcms/cms/issues/7049))\n- Added `craft\\services\\Updates::getAreMigrationsPending()`. ([#7068](https://github.com/craftcms/cms/issues/7068))\n- Added `craft\\helpers\\FileHelper::getExtensionByMimeType()`.\n- Added `craft\\helpers\\Update`.\n- Added `craft\\models\\Update::$phpConstraint`.\n- Added `craft\\services\\Composer::getConfig()`.\n\n### Changed\n- `aria-label` attributes are now used more consistently across the control panel. ([#6833](https://github.com/craftcms/cms/issues/6833))\n- Craft no longer optimizes the class autoloader when running Composer commands internally, as [recommended](https://getcomposer.org/doc/articles/autoloader-optimization.md) for local development.\n- The built-in updater will now warn if the latest eligible Craft CMS release requires a PHP version that is greater than what the environment is running, or what the `config.platform.php` setting is set to in `composer.json`.\n- It\u2019s now possible to query for assets ordered by their path. ([#7085](https://github.com/craftcms/cms/issues/7085))\n- Updated Twig to 2.14, for environments running PHP 7.2.5 or later, and where the `config.platform.php` value in `composer.json` is at least `7.2.5`. ([#7044](https://github.com/craftcms/cms/issues/7044))\n\n### Fixed\n- Fixed a bug where `craft\\events\\UserGroupsAssignEvent::$groupIds` was getting set incorrectly for the `craft\\services\\Users::EVENT_BEFORE_ASSIGN_USER_TO_GROUPS` event. ([#7046](https://github.com/craftcms/cms/issues/7046))\n- Fixed a bug where the `craft\\base\\Element::EVENT_SET_EAGER_LOADED_ELEMENTS` event was being triggered as a class-level event rather than an instance-level event. ([#7047](https://github.com/craftcms/cms/issues/7047))\n- Fixed some errors when running PHP 8.\n- Fixed an error when accessing `draftNotes` or `draftName` on a non-draft using the GraphQL API.\n- Fixed a bug where it was possible for users to delete assets they weren\u2019t permitted to delete from the Assets index page. ([#7059](https://github.com/craftcms/cms/issues/7059))\n- Fixed a bug where Assets fields weren\u2019t always creating volume subfolders properly.\n- Fixed a bug where it wasn\u2019t possible for logged-out visitors to preview disabled categories. ([#7060](https://github.com/craftcms/cms/issues/7060))\n- Fixed a bug where Matrix fields were triggering the `blockDeleted` JavaScript event before the block was removed from the DOM. ([#7064](https://github.com/craftcms/cms/issues/7064))\n- Fixed an error where dragging several assets at one could obscure the progress bar. ([#6982](https://github.com/craftcms/cms/issues/6982))\n- Fixed a bug where job progress status labels weren\u2019t getting styled properly in the control panel sidebar. ([#7070](https://github.com/craftcms/cms/issues/7070))\n- Fixed a bug where it was possible to select assets located in subfolders within Assets fields that were restricted to a single folder, by ticking the \u201cSearch in subfolders\u201d checkbox while searching. ([#7071](https://github.com/craftcms/cms/issues/7071))\n- Fixed a bug where custom `Content-Type` headers were getting overridden if an `{% exit %}` tag was used. ([#7074](https://github.com/craftcms/cms/issues/7074))\n- Fixed a bug where user photos\u2019 filenames could be generated incorrectly when they were updated programatically.\n\n## 3.5.14 - 2020-10-20\n\n### Added\n- Added the `ul()` and `ol()` Twig functions, which return the HTML for `<ul>` and `<ol>` tags for a passed-in array of strings.\n- Added the `project-config/touch` command, which updates the `dateModified` value in `project.yaml`, even if the `dateModified` line is currently part of a Git conflict. ([#7002](https://github.com/craftcms/cms/issues/7002))\n- Added the `setPasswordRequestPath` config setting. ([#7024](https://github.com/craftcms/cms/issues/7024))\n- Added `craft\\config\\GeneralConfig::getSetPasswordRequestPath()`.\n- Added `craft\\helpers\\ProjectConfig::touch()`.\n- Added `craft\\services\\Assets::relocateUserPhoto()`.\n\n### Changed\n- Craft now ignores the requested template\u2019s `.twig` file extension when determining the default `Content-Type` header value for the response. ([#7025](https://github.com/craftcms/cms/issues/7025))\n- Date and Time fields\u2019 Minute Increment settings now allow 5 and 10-minute increments. ([#7029](https://github.com/craftcms/cms/issues/7029))\n- Tags field menus now support up and down arrow navigation. ([#7031](https://github.com/craftcms/cms/issues/7031))\n- Tokenized user verification URLs no longer redirect to the user to the `postLoginRedirect`/`postCpLoginRedirect` when the token is invalid and the user is logged in, if they still have a verification token on their account. ([#7006](https://github.com/craftcms/cms/issues/7006))\n- Craft now ensures user photos are saved in the right location when users are saved. ([#7034](https://github.com/craftcms/cms/issues/7034))\n- Built-in class properties set to `craft\\base\\MemoizableArray` are now unset during serialization. ([#7038](https://github.com/craftcms/cms/issues/7038))\n- Craft now passes `--column-inserts` flag to the `pg_dump` command by default when backing up a PostgreSQL database.\n\n### Fixed\n- Fixed a styling bug with the hamburger menu on pages with breadcrumbs. ([#7021](https://github.com/craftcms/cms/issues/7021))\n- Fixed a bug where new entries weren\u2019t assigned a UID in time if their URI format contained a `{uid}` token. ([#4364](https://github.com/craftcms/cms/issues/4364))\n- Fixed a bug where entries that were deleted along with their section/entry type weren\u2019t getting restored properly when the section/entry type was restored, if they weren\u2019t live or didn\u2019t exist for the primary site.\n- Fixed an error that occurred when installing Craft, if an issue prevented Craft from using the existing project config data. ([#7027](https://github.com/craftcms/cms/issues/7027))\n- Fixed a JavaScript error that occurred when selecting entries or categories that supported the \u201cCreate a new child entry/category\u201d action.\n\n## 3.5.13.2 - 2020-10-16\n\n### Fixed\n- Fixed a JavaScript error that could occur on element indexes for multi-site installs, resulting in no elements being shown. ([#7017](https://github.com/craftcms/cms/issues/7017))\n- Fixed a bug where the `purgeUnsavedDraftsDuration` config setting didn\u2019t actually accept non-integer values despite the docs claiming it did. ([#7019](https://github.com/craftcms/cms/issues/7019))\n\n## 3.5.13.1 - 2020-10-15\n\n### Fixed\n- Fixed a bug where Checkboxes fields weren\u2019t validating.\n\n## 3.5.13 - 2020-10-15\n\n### Added\n- It\u2019s now possible to disallow uploading files directly to Assets fields, as opposed to going through the selection modal. ([#6954](https://github.com/craftcms/cms/issues/6954))\n- Reset Password pages are now discoverable by clients that support [.well-known/change-password URLs](https://w3c.github.io/webappsec-change-password-url/), [such as Google Chrome](https://security.googleblog.com/2020/10/new-password-protections-and-more-in.html).\n- Craft now supports `/admin/edit/X` URLs to elements\u2019 edit pages, where `X` is an element\u2019s ID or UID, provided that the user has permission to edit the element. ([#7000](https://github.com/craftcms/cms/issues/7000))\n- The System Report utility now lists all defined [aliases](https://craftcms.com/docs/3.x/config/#aliases). ([#6992](https://github.com/craftcms/cms/issues/6992))\n- Added the `project-config/write` command, which write out the currently-loaded project config as YAML files to the `config/project/` folder, discarding any pending YAML changes.\n- The `project-config/diff` command now has an `--invert` flag, which will treat the loaded project config as the source of truth, rather than the YAML files.\n- Added the `dataUrl()` Twig function, which generates a base64-encoded [data URL](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs) for the passed-in file path or asset.\n- Added `craft\\controllers\\EditController`.\n- Added `craft\\controllers\\RedirectController`.\n- Added `craft\\controllers\\UsersController::EVENT_AFTER_ASSIGN_GROUPS_AND_PERMISSIONS`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\controllers\\UsersController::EVENT_BEFORE_ASSIGN_GROUPS_AND_PERMISSIONS`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\db\\ActiveQuery`.\n- Added `craft\\elements\\Asset::getDataUrl()`.\n- Added `craft\\events\\UserGroupsAssignEvent::$newGroupIds`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\events\\UserGroupsAssignEvent::$removedGroupIds`. ([#6937](https://github.com/craftcms/cms/issues/6937))\n- Added `craft\\fields\\Assets::$allowUploads`.\n- Added `craft\\helpers\\Html::dataUrl()`.\n- Added `craft\\helpers\\Html::dataUrlFromString()`.\n- Added `craft\\queue\\jobs\\PruneRevisions::$maxRevisions`. ([#6999](https://github.com/craftcms/cms/issues/6999))\n- Added `craft\\services\\Elements::getElementByUid()`.\n- Added `craft\\services\\Elements::getElementTypeByUid()`.\n- Added `craft\\services\\ProjectConfig::$writeYamlAutomatically`, which can be set to `false` from `config/app.php` if you\u2019d prefer Craft to not write project config YAML files to `config/project/` automatically when they are missing or changes are made.\n- Added `craft\\services\\ProjectConfig::getDoesYamlExist()`.\n- Added `craft\\services\\Sites::refreshSites()`.\n- Added missing `rel=\"noopener\"` to outbound links.\n\n### Changed\n- Improved color contrast throughout the control panel. ([#6951](https://github.com/craftcms/cms/pull/6951), [#6972](https://github.com/craftcms/cms/pull/6972))\n- The control panel viewport is now scalable for mobile browsers. ([#6972](https://github.com/craftcms/cms/pull/6972))\n- The \u201cShare\u201d button on Edit Entry and Edit Category pages has been renamed to \u201cView\u201d. ([#6963](https://github.com/craftcms/cms/issues/6963))\n- Edit Entry pages now show validation errors for the `typeId` attribute. ([#6958](https://github.com/craftcms/cms/issues/6958))\n- Table fields now support emoji characters. ([#7012](https://github.com/craftcms/cms/issues/7012))\n- The `draftOf` entry query parameter can now be set to `'*'`, to match drafts of any source element, so long as they have one. ([#6632](https://github.com/craftcms/cms/issues/6632))\n- `resave/*` commands now show a progress count in the output for each element. ([#6936](https://github.com/craftcms/cms/pull/6936))\n- The `on` and `off` commands no longer update the `dateModified` project config value. ([#6729](https://github.com/craftcms/cms/issues/6729))\n- It\u2019s now possible to enable the Debug extension on a per-request basis when Dev Mode is enabled, by including a `X-Debug: enable` header on the request. ([#6978](https://github.com/craftcms/cms/issues/6978))\n- The `disabledPlugins` config setting can now be set to `'*'` to disable **all** plugins. ([#5106](https://github.com/craftcms/cms/issues/5106))\n- `*Field()` macros in the `_includes/forms.html` control panel template now define a default `id` value if none was provided.\n- `craft\\db\\ActiveRecord::find()` now returns a `craft\\db\\ActiveQuery` object.\n- `craft\\helpers\\ProjectConfig::diff()` now has an `$invert` argument.\n- `craft\\helpers\\ProjectConfig::ensureAllSitesProcessed()` now has a `$force` argument.\n- `craft\\services\\Fields::saveLayout()` now maintains existing field layout tab IDs.\n- `craft\\services\\ProjectConfig::saveModifiedConfigData()` now has a `$writeYaml` argument.\n- `craft\\services\\ProjectConfig::set()` now has an `$updateTimestamp` argument.\n\n### Deprecated\n- `craft\\services\\Fields::assembleLayoutFromPost()` now supports field layout data that was posted in the original (pre-3.5) format. ([barrelstrength/sprout-forms#521](https://github.com/barrelstrength/craft-sprout-forms/issues/521))\n\n### Fixed\n- Fixed an error that could occur when installing Craft with existing project config data. ([#6943](https://github.com/craftcms/cms/issues/6943))\n- Fixed an error that occurred when propagating a Time field value to another site. ([#6950](https://github.com/craftcms/cms/issues/6950))\n- Fixed an error that could occur when calling `craft\\web\\View::renderTemplate()` from a console request. ([#6945](https://github.com/craftcms/cms/issues/6945))\n- Fixed a Twig error that would occur when rendering the `_includes/forms/elementSelect.html` template if no `limit` variable was passed. ([#6953](https://github.com/craftcms/cms/issues/6953))\n- Fixed an error that could occur when updating to Craft 3.5, if any Assets fields had an upload location set to `{site.group}`. ([#6818](https://github.com/craftcms/cms/issues/6818))\n- Fixed a bug where in some cases querying for Assets using GraphQL API could fail.\n- Fixed a SQL error that could occur when joining two soft-deletable active record classes together. ([#6957](https://github.com/craftcms/cms/issues/6957))\n- Fixed a bug where sub-fields queried via GraphQL could be aliased incorrectly. ([#6874](https://github.com/craftcms/cms/issues/6874))\n- Fixed a bug where element selection modals could show no results if they were limited to a single source, and that source wasn\u2019t available to the primary site. ([#6968](https://github.com/craftcms/cms/issues/6968))\n- Fixed a bug where Matrix fields weren\u2019t identifying themselves as translatable on the Fields index page. ([#6970](https://github.com/craftcms/cms/issues/6970))\n- Fixed a bug where `craft\\helpers\\Html::modifyTagAttributes()` wasn\u2019t working properly with custom elements with hyphenated names. ([#6973](https://github.com/craftcms/cms/issues/6973))\n- Fixed a bug where elements that were eager-loaded via `ancestors`, `children`, and `descendants` handles weren\u2019t getting loaded in the correct order by default. ([#6974](https://github.com/craftcms/cms/issues/6974))\n- Fixed a bug where Assets fields could bleed out of view within element editor HUDs. ([#6975](https://github.com/craftcms/cms/issues/6975))\n- Fixed an error that could occur when updating from Craft 2.\n- Fixed a bug where the `on` and `off` commands were discarding any pending pending changes in the project config YAML files. ([#6984](https://github.com/craftcms/cms/issues/6984))\n- Fixed a bug where `craft\\helpers\\Db::reset()` wasn\u2019t closing the previous database connection. ([#6998](https://github.com/craftcms/cms/pull/6998))\n- Fixed a bug where it wasn\u2019t possible to access the selected preview target in `Craft.Preview` JavaScript events.\n- Fixed a styling bug with Checkboxes fields. ([#7011](https://github.com/craftcms/cms/issues/7011))\n\n## 3.5.12.1 - 2020-10-02\n\n### Fixed\n- Fixed a bug where `craft\\helpers\\StringHelper::toAscii()` and the `Craft.asciiString()` JavaScript method weren\u2019t handling decomposed umlauted characters properly, such as macOS filenames. ([#6923](https://github.com/craftcms/cms/issues/6923))\n- Fixed a JavaScript error that occurred when attempting to open or close Live Preview, after a file had been uploaded from an Assets field. ([#6940](https://github.com/craftcms/cms/issues/6940))\n- Fixed a bug where deprecation warnings logged by the `getCsrfInput()`, `getFootHtml()`, `getHeadHtml()`, `round()`, and `svg()` Twig functions, and the `|ucwords` Twig filter, weren\u2019t showing the template name and line number that the warning came from. ([#6927](https://github.com/craftcms/cms/issues/6927))\n- Fixed some potential database timeout and sequence issues when running multiple suites of tests.\n- Fixed a bug where the \u201cUpload files\u201d button within Assets fields was visible if the field limit was already reached on page load. ([#6939](https://github.com/craftcms/cms/issues/6939))\n\n## 3.5.12 - 2020-10-01\n\n### Added\n- Added the \u201cTime\u201d field type. ([#6775](https://github.com/craftcms/cms/issues/6775), [#6842](https://github.com/craftcms/cms/issues/6842))\n- Assets fields now have an \u201cUpload files\u201d button, which will upload files to the field\u2019s default upload location, just like files uploaded via drag-n-drop. ([#2778](https://github.com/craftcms/cms/issues/2778))\n- Added `craft\\base\\ElementInterface::getIsDeletable()`, which states whether the element can be deleted by the current user.\n- Added `craft\\elements\\db\\EagerLoadPlan::$all`.\n- Added `craft\\elements\\db\\EagerLoadPlan::$when`.\n- Added `craft\\errors\\InvalidFieldException`.\n- Added `craft\\validators\\DateTimeValidator::$max`.\n- Added `craft\\validators\\DateTimeValidator::$min`.\n- Added `craft\\validators\\DateTimeValidator::$tooEarly`.\n- Added `craft\\validators\\DateTimeValidator::$tooLate`.\n- Added `craft\\validators\\TimeValidator`.\n\n### Changed\n- \u201cDate/Time\u201d fields have been renamed to \u201cDate\u201d, and it\u2019s no longer possible to create new Date fields that only display the time. ([#6842](https://github.com/craftcms/cms/issues/6842))\n- Element editor HUDs will now close when clicked out of, or if the <kbd>Esc</kbd> key is pressed. If any content has changed, a confirmation dialog will be shown first. ([#6877](https://github.com/craftcms/cms/issues/6877))\n- Entry indexes will now sort entries without a post date at the top when ordering by Post Date in descending order, and vise-versa. ([#6924](https://github.com/craftcms/cms/issues/6924))\n- The field layout designer will now prompt for a tab name immediately when the \u201cNew Tab\u201d button is clicked. ([#1956](https://github.com/craftcms/cms/issues/1956))\n- It\u2019s now possible to specify eager-loading plans as hashes with `path`, `criteria`, `count`, and `when` keys.\n- The `users/save-user` action now includes a `csrfTokenValue` key in its JSON responses, if the user\u2019s password was changed. ([#6283](https://github.com/craftcms/cms/issues/6283))\n- \u201cDelete\u201d element actions will now only enable themselves if all of the selected elements\u2019 `getIsDeletable()` methods returned `true`.\n- Date/Time fields configured to only show the time no longer set the date to 1970-01-01. ([#6842](https://github.com/craftcms/cms/issues/6842))\n- If a SQL error occurs when attempting to change a field\u2019s content column type, Craft will now rename the old column (e.g. `field_fieldHandle_old`), and create a new column with the new type, rather than surfacing the SQL error. ([#3605](https://github.com/craftcms/cms/issues/3605), [#5266](https://github.com/craftcms/cms/issues/5266))\n- `craft\\gql\\ElementQueryConditionBuilder::extractQueryConditions()` now returns an array of `craft\\elements\\db\\EagerLoadPlan` objects. ([#6874](https://github.com/craftcms/cms/issues/6874), [#6811](https://github.com/craftcms/cms/issues/6811))\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `time` key in the format of `HH:MM:SS`, rather than just `HH:MM`.\n- `craft\\services\\TemplateCaches::deleteCachesByKey()` is no longer deprecated, and now has `$global` and `$siteId` arguments. ([#6932](https://github.com/craftcms/cms/issues/6932))\n- `craft\\web\\View::hook()` now has an `$append` argument, which can be set to `false` to cause the hook method to be called before other methods.\n- Callback methods passed to `craft\\web\\View::hook()` can now accept a `$handled` argument by reference, which can be set to `false` within the method body to prevent subsequent hook methods from getting triggered. ([#6912](https://github.com/craftcms/cms/issues/6912))\n- Element types\u2019 `sortOptions()` methods can now define the `orderBy` key as a callback method.\n- The `_includes/forms/time.html` control panel template now supports passing `minTime`, `maxTime`, `disableTimeRanges`, and `forceRoundTime` variables, which map to the corresponding jquery.timepicker settings.\n\n### Deprecated\n- Deprecated `craft\\errors\\FieldNotFoundException`.\n\n### Fixed\n- Fixed a bug where `craft\\services\\Config::setDotEnvVar()` wasn\u2019t surrounding values with quotes if they contained a `#` character. ([#6867](https://github.com/craftcms/cms/issues/6867))\n- Fixed a bug where GraphQL API queries could produce an incorrect eager-loading plan. ([#6849](https://github.com/craftcms/cms/issues/6849))\n- Fixed a bug where eager-loading elements wasn\u2019t working if also eager-loading the count of related elements for the exact same path.\n- Fixed a bug where the button to show all related elements for relational fields within element indexes was getting formatted with two decimal places on environments that didn\u2019t have the Intl extension installed. ([#6869](https://github.com/craftcms/cms/issues/6869))\n- Fixed a bug where element selection modals would show the source sidebar even if there was only one selectable source, if a source heading came before it. ([#6871](https://github.com/craftcms/cms/issues/6871))\n- Fixed a bug where Plain Text fields with a limit set and line breaks allowed weren\u2019t showing the remaining characters/bytes allowed indicator. ([#6872](https://github.com/craftcms/cms/issues/6872))\n- Fixed a bug where it wasn\u2019t possible to set an alias when eager-loading Matrix sub-fields.\n- Fixed a bug where it was possible to initiate a file upload to an Assets field via drag-n-drop, even if the user didn\u2019t have permission to upload files to the default field volume.\n- Fixed a bug where Dashboard widget settings could receive focus even when not visible. ([#6885](https://github.com/craftcms/cms/issues/6885))\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Button fields could show their default values in element indexes. ([#6891](https://github.com/craftcms/cms/issues/6891))\n- Fixed a bug where Title fields were showing a translation indicator even on single-site Craft installs. ([#6503](https://github.com/craftcms/cms/issues/6503))\n- Fixed a bug where it wasn\u2019t possible to set date values using variables via GraphQL mutations.\n- Fixed a bug where `craft\\helpers\\UrlHelper` was removing empty URL parameters. ([#6900](https://github.com/craftcms/cms/issues/6900))\n- Fixed a bug where Checkboxes and Multi-select fields\u2019 `getOptions()` methods were only returning the selected options. ([#6899](https://github.com/craftcms/cms/issues/6899))\n- Fixed a bug where Project Config files were not being applied running tests even though it was configured in `codeception.yml`. ([#6879](https://github.com/craftcms/cms/issues/6879))\n- Fixed a bug where Matrix block type settings weren\u2019t saving properly if the Matrix field was nested within another Matrix field (via a Super Table or Neo field).\n- Fixed a bug where it wasn\u2019t possible for users to delete their own entries from Entry Edit pages, if they didn\u2019t have the \u201cPublish live changes\u201d permission. ([#6908](https://github.com/craftcms/cms/issues/6908))\n- Fixed a bug where it wasn\u2019t possible for users to delete their own entries from the Entries index page, if they didn\u2019t have the \u201cDelete other authors\u2019 entries\u201d permission. ([#6908](https://github.com/craftcms/cms/issues/6908))\n- Fixed a bug where components (such as fields) could be deleted if they were saved without any changes, and their corresponding config file was missing from the `config/project/` folder. ([#6913](https://github.com/craftcms/cms/issues/6913))\n- Fixed a bug where the user account menu button could be clipped by the scrollbar. ([#6920](https://github.com/craftcms/cms/issues/6920))\n- Fixed a bug where Date/Time fields\u2019 Min Date and Max Date settings weren\u2019t being enforced.\n- Fixed a bug where it was possible to save a Date/Time field with a Max Date value that was set to an earlier date than the Min Date value.\n\n### Security\n- Fixed a bug where Plain Text fields with line breaks allowed weren\u2019t HTML-encoding their values. ([#6935](https://github.com/craftcms/cms/issues/6935))\n\n## 3.5.11.1 - 2020-09-18\n\n### Changed\n- Craft now disables read/write splitting for all POST requests.\n\n### Fixed\n- Fixed a bug where entries were getting a \u201cBad slug\u201d validation error. ([#6866](https://github.com/craftcms/cms/issues/6866))\n\n## 3.5.11 - 2020-09-18\n\n### Added\n- Number fields now have a \u201cPreview Format\u201d setting, which determines whether values should be displayed as decimal numbers, currency values, or without any formatting, on element indexes. ([#5873](https://github.com/craftcms/cms/issues/5873))\n- Assets fields now have a \u201cPreview Mode\u201d setting, which can be set to \u201cShow thumbnails only\u201d to only display related assets\u2019 thumbnails within element indexes. ([#6848](https://github.com/craftcms/cms/issues/6848))\n- Edit Field pages now have a \u201cDelete\u201d menu option. ([#6846](https://github.com/craftcms/cms/issues/6846))\n- Added `craft\\fields\\BaseRelationField::elementPreviewHtml()`.\n\n### Changed\n- Date/Time fields configured to only show the time now consistently set the date to 1970-01-01. ([#6842](https://github.com/craftcms/cms/issues/6842))\n- It\u2019s now possible for `craft\\elements\\db\\ElementQuery::EVENT_AFTER_POPULATE_ELEMENT` event handlers to replace the element that should be returned by `createElement()`.\n- `craft\\helpers\\elementHtml()` now has `$showStatus`, `$showThumb`, and `$showLabel` arguments.\n\n### Fixed\n- Fixed a bug where pending project config YAML changes could be unexpectedly applied rather than discarded when other project config changes were made.\n- Fixed a bug where the wrong field values could be used when querying for elements via GraphQL, if an alias was used.\n- Fixed an error that could occur on the Dashboard if there was a custom field with the handle of `author`.\n- Fixed a 400 error that could occur when a route config\u2019s `template` key was set to `null`.\n- Fixed a bug where validation errors within element editor HUDs and detail pains were getting displayed beside the input instead of below it. ([#6853](https://github.com/craftcms/cms/issues/6853))\n- Fixed styling issues with UI elements within field layout designers. ([#6854](https://github.com/craftcms/cms/issues/6854))\n- Fixed a bug where GraphQL could return incorrect results in some cases.\n- Fixed a bug where it wasn\u2019t possible to set date values via GraphQL mutations.\n- Fixed a SQL error that could occur when updating from Craft 2.\n\n## 3.5.10.1 - 2020-09-15\n\n### Fixed\n- Fixed a bug where eager loading `children` would return incomplete results.\n\n## 3.5.10 - 2020-09-15\n\n### Added\n- Edit Entry pages now have a field for entering revision notes, when editing the current revision.\n- Edit Field pages now have a \u201cSave and continue editing\u201d Save menu option, and the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut is now assigned to that. ([#2872](https://github.com/craftcms/cms/issues/2872))\n- Edit Section pages now have \u201cSettings\u201d and \u201cEntry Types\u201d tabs, providing quick access to edit a section\u2019s entry types. ([#6826](https://github.com/craftcms/cms/issues/6826))\n- New sections\u2019 \u201cSave\u201d button is now labeled \u201cSave and edit entry types\u201d, and the browser is redirected to the section\u2019s entry type index after save.\n- Added the `|truncate` Twig filter. ([#6838](https://github.com/craftcms/cms/issues/6838))\n- Added the `disallowRobots` config setting, which can be set to `true` for development and staging environments, indicating that front end pages should not be indexed, and links should not be followed, by web crawlers.\n- Added `craft\\fields\\data\\OptionData::$valid`.\n- Added `craft\\gql\\ElementQueryConditionBuilder::setResolveInfo()`.\n- Added `craft\\web\\Request::$generalConfig`.\n- Added `craft\\web\\Request::$sites`.\n\n### Changed\n- The Username and Password inputs on the Login page now specify `aria-label` attributes.\n- The account menu button now specifies `aria-label` and `title` attributes.\n- The `_includes/forms/textarea.html` template now supports `disabled`, `inputAttributes`, `inputmode`, and `title` variables.\n- The `_layouts/cp.html` control panel template now defines a `submitButton` block.\n- `craft\\helpers\\Gql::getFieldNameWithAlias()` now has a `$context` argument to allow sharing context over a single GraphQL API call.\n- Updated Yii to 2.0.38.\n- Updated Twig to 2.13, for environments running PHP 7.1.3 or later, and where the `config.platform.php` value in `composer.json` is at least `7.1.3`.\n- Updated Garnish to 0.1.37.\n- Updated Vue to 2.6.12.\n\n### Fixed\n- Fixed a bug where all fields were showing as searchable on the Settings \u2192 Fields page on MySQL installs. ([#6808](https://github.com/craftcms/cms/issues/6808))\n- Fixed a bug where Dropdown, Radio Buttons, Checkboxes, and Multi-select fields weren\u2019t getting validation errors if an invalid value was posted to them. ([#6535](https://github.com/craftcms/cms/issues/6535))\n- Fixed a bug where Craft wasn\u2019t handling site requests properly if it was installed in a subfolder and the site\u2019s base URL contained additional URI segments.\n- Fixed a bug where Dropdown, Radio Buttons, Checkboxes, and Multi-select fields that had values that were empty, numeric or contained special characters, couldn't be used in GraphQL mutations. ([#6535](https://github.com/craftcms/cms/issues/6535))\n- Fixed a bug where eager loading elements\u2019 children across multiple levels wasn\u2019t working. ([#6820](https://github.com/craftcms/cms/issues/6820))\n- Fixed a bug where aliased fields would sometimes not be assigned correctly when using GraphQL API. ([#6811](https://github.com/craftcms/cms/issues/6811)))\n- Removed `vue`, `vue-router` and `vuex` Plugin Store dependencies as they are already handled by Craft. ([#6732](https://github.com/craftcms/cms/pull/6732), [#6815](https://github.com/craftcms/cms/pull/6815))\n- Fixed a bug where GraphQL API requests could return 400 responses on an empty cache.\n- Fixed a bug where GraphQL API queries weren\u2019t getting cached based on the current site.\n\n### Security\n- Fixed a bug where custom field labels weren\u2019t getting HTML-encoded.\n\n## 3.5.9 - 2020-09-08\n\n### Added\n- Added support for childless GraphQL schema components.\n- Added `craft\\migrations\\Install::$applyProjectConfigYaml`.\n\n### Changed\n- The `craft\\behaviors\\CustomFieldBehavior` class is now saved to a file with a name based on the current field version, avoiding OPcache issues.\n- Asset filenames are now automatically shortened if they are longer than 255 characters. ([#6766](https://github.com/craftcms/cms/issues/6766))\n- Improved the style of up/down/right/left angles in the control panel.\n- Built-in element types\u2019 date sort options are now sorted in descending order by default when selected. ([#1153](https://github.com/craftcms/cms/issues/1153))\n- It\u2019s now possible for element sort options returned by `craft\\base\\ElementInterface::sortOptions()` and `craft\\base\\Element::defineSortOptions()` to include `defaultDir` keys, which specify the default sort direction that should be used when the option is selected. ([#1153](https://github.com/craftcms/cms/issues/1153))\n- Replaced the icon that identifies translatable fields.\n- The Settings \u2192 Fields page now identifies which fields are searchable and translatable. ([#5453](https://github.com/craftcms/cms/issues/5453))\n\n### Fixed\n- Fixed a bug where `update` commands weren\u2019t working if there was no `config/license.key` file yet. ([#6777](https://github.com/craftcms/cms/issues/6777))\n- Fixed a bug where it wasn\u2019t possible for GraphQL resolvers to return arrays.\n- Fixed an error that could occur when updating to Craft 3.5 if the `migrations` table had rows with broken `pluginId` foreign keys.\n- Fixed an error that could occur when deleting a Matrix block type, if it contained nested block-based fields that had existing content. ([#6780](https://github.com/craftcms/cms/issues/6780))\n- Fixed a bug where the `_includes/forms/select.html` template wasn\u2019t always setting the `data-target-prefix` attribute if `toggle` was set.\n- Fixed a bug where Number fields could return incorrect values via GraphQL. ([#6743](https://github.com/craftcms/cms/issues/6743))\n- Fixe a bug where duplicating elements from their edit pages could result in the selected site\u2019s content getting propagated to all other sites for the duplicated element. ([#6804](https://github.com/craftcms/cms/issues/6804))\n- Fixed a 400 error that could occur when a section\u2019s Template setting was blank.\n- Fixed a bug where GraphQL queries for entry drafts weren\u2019t getting invalidated when drafts were saved or deleted. ([#6792](https://github.com/craftcms/cms/issues/6792))\n- Fixed an error that could occur when running the `project-config/apply` command, if there was a Single section that was enabled for a site that was disabled on the front end. ([#6799](https://github.com/craftcms/cms/issues/6799))\n- Fixed a bug where the `tests/setup` command wasn\u2019t working. ([#6790](https://github.com/craftcms/cms/issues/6790))\n\n## 3.5.8 - 2020-09-01\n\n### Added\n- Added the \u201cRetry Duration\u201d general setting, which defines the number of seconds that the `Retry-After` header should be set to for 503 responses when the system is offline.\n- Added the `off` and `on` commands, for toggling the system status. ([#6729](https://github.com/craftcms/cms/issues/6729))\n- Added the `utils/update-usernames` command, for ensuring all usernames match users\u2019 email addresses, if the `useEmailAsUsername` config setting is enabled. ([#6312](https://github.com/craftcms/cms/issues/6312))\n- Added the `configure()` Twig function. ([#6731](https://github.com/craftcms/cms/pull/6731))\n- Added `craft\\base\\MemoizableArray`.\n- Added `craft\\cache\\FileCache`.\n- Added `craft\\helpers\\ArrayHelper::whereIn()`.\n- Added `craft\\helpers\\Cp::elementHtml()`.\n- Added `craft\\models\\Site::getLocale()`.\n- Added `craft\\services\\ProjectConfig::DIFF_CACHE_KEY`.\n- Added `craft\\services\\Sites::getGroupByUid()`.\n\n### Changed\n- Improved the styling of Lightswitch fields that have ON/OFF labels. ([#6666](https://github.com/craftcms/cms/issues/6666))\n- The \u201cSystem Status\u201d setting now has \u201cOffline\u201d and \u201cOnline\u201d labels.\n- Deprecation warnings can now contain Markdown formatting.\n- The Project Config utility now loads the comparison data over Ajax, and will only show the first 20 lines by default. ([#6736](https://github.com/craftcms/cms/issues/6736))\n- Improved the wording of version compatibility issues when applying project config YAML changes. ([#6755](https://github.com/craftcms/cms/issues/6755))\n- The GraphQL API now supports `variables` and `operationName` query string parameters. ([#6728](https://github.com/craftcms/cms/issues/6728))\n- Mutation GraphQL queries should now specify an `id` field when defining Matrix blocks, set to the existing Matrix block ID or a `newX` string.\n- Improved system performance.\n- `craft\\helpers\\ArrayHelper::where()` now has a `$keepKeys` argument, which defaults to `true`.\n- `craft\\helpers\\ProjectConfig::diff()` now caches its results. ([#6736](https://github.com/craftcms/cms/issues/6736))\n- `craft\\services\\Config::setDotEnvVar()` no longer surrounds the value with quotes unless it contains a space. ([craftcms/docker#5](https://github.com/craftcms/docker/issues/5))\n\n### Deprecated\n- Deprecated support for overriding volume settings via `config/volumes.php`. [Environment variables](https://craftcms.com/docs/3.x/config/#environmental-configuration) or [dependency injection](https://craftcms.com/knowledge-base/using-local-volumes-for-development) should be used instead.\n- Mutating Matrix blocks via GraphQL without specifying an `id` field for each block is now deprecated.\n\n### Fixed\n- Fixed a bug where the required field indicator wasn\u2019t visible within the field layout designer, for fields with overflowing labels or hidden labels. ([#6725](https://github.com/craftcms/cms/issues/6725))\n- Fixed a bug where user group names were getting double-encoded within the User Groups setting on Edit User pages. ([#6727](https://github.com/craftcms/cms/issues/6727))\n- Fixed a bug where aliasing fields via GraphQL could break eager loading in some cases.\n- Fixed a bug where GraphQL API queries could break down when using complex fields that didn\u2019t support eager loading. ([#6723](https://github.com/craftcms/cms/issues/6723))\n- Fixed an error that could occur when accessing the \u201cGlobals\u201d section in the control panel, for users that didn\u2019t have permission to edit the first global set. ([#6730](https://github.com/craftcms/cms/pull/6730))\n- Fixed a bug where various array-returning methods could return arrays with nonsequential keys beginning with `0`.\n- Fixed a bug where entry drafts would get autosaved after creating new Matrix/Neo/Super Table blocks even if the `autosaveDrafts` config setting was disabled. ([#6704](https://github.com/craftcms/cms/issues/6704))\n- Fixed a bug where field checkboxes in Quick Post widget settings were all disabled. ([#6738](https://github.com/craftcms/cms/issues/6738))\n- Fixed a bug where assets uploaded by front-end entry forms weren\u2019t getting saved with the `uploaderId` attribute. ([#6456](https://github.com/craftcms/cms/issues/6456))\n- Fixed a bug where Live Preview wasn\u2019t showing custom fields for categories.\n- Fixed a bug where rebuilding the Project Config would not persist the new config data to the loaded project config.\n- Fixed a JavaScript error that could occur when displaying certain prompts. ([#6753](https://github.com/craftcms/cms/issues/6753))\n- Fixed a bug where the `system.schemaVersion` was not getting set when rebuilding the project config.\n- Fixed a bug where all file caches were being saved inside a single subdirectory of `storage/runtime/cache/` based on the cache key prefix. ([#6746](https://github.com/craftcms/cms/issues/6746))\n- Fixed a bug where field handles would get jumpy on hover if their increased size caused them to be too large to fit on the same line as the field name. ([#6742](https://github.com/craftcms/cms/issues/6742))\n- Fixed a bug where the \u201cPhoto\u201d field was shown on Edit User pages, even if the User Photos volume had been deleted. ([#6752](https://github.com/craftcms/cms/issues/6752))\n- Fixed an error that occurred when passing an array to an entry query\u2019s `typeId` param, with the first item set to `'not'`. ([#6754](https://github.com/craftcms/cms/issues/6754))\n- Fixed a bug where element queries with the `siteId` param set to `*` would query for elements in soft-deleted sites. ([#6756](https://github.com/craftcms/cms/issues/6756))\n- Fixed a bug where Title fields weren\u2019t identifying themselves as required. ([#6763](https://github.com/craftcms/cms/issues/6763))\n- Fixed a bug where inline JavaScript code could stop working if it contained the string `.js`. ([#6762](https://github.com/craftcms/cms/issues/6762))\n\n## 3.5.7 - 2020-08-26\n\n### Changed\n- Improved the warning that is output for console commands if Craft can\u2019t connect to the database, or isn\u2019t installed yet. ([#6718](https://github.com/craftcms/cms/issues/6718))\n- `craft\\helpers\\Console::outputWarning()` now has a `$center` argument.\n- The GraphiQL IDE now automatically loads the query passed by the URL, if present. ([#6583](https://github.com/craftcms/cms/issues/6583))\n\n### Fixed\n- Fixed a bug where Table field settings were displaying validation errors for the \u201cTable Columns\u201d setting under the \u201cDefault Values\u201d setting.\n- Fixed a bug where Table fields were allowing columns to be defined with invalid handles. ([#6714](https://github.com/craftcms/cms/issues/6714))\n- Fixed a bug where GraphQL schemas weren\u2019t getting generated properly if there were any Table fields with empty column handles. ([#6714](https://github.com/craftcms/cms/issues/6714))\n- Fixed a bug where it wasn\u2019t possible to access entry drafts or revisions within Structure sections, if they were created before the section type was changed to Structure. ([#4866](https://github.com/craftcms/cms/issues/4866))\n- Fixed a bug where the `_includes/forms/select.html` template wasn\u2019t setting the `data-target-prefix` attribute properly. ([#6721](https://github.com/craftcms/cms/issues/6721))\n- Fixed various SQL errors that could occur when running tests. ([#6549](https://github.com/craftcms/cms/issues/6549))\n\n## 3.5.6 - 2020-08-25\n\n### Added\n- Added the `autosaveDrafts` config setting. ([#6704](https://github.com/craftcms/cms/issues/6704))\n- It\u2019s now possible to pass a CSS file URL to the `{% css %}` tag. ([#6672](https://github.com/craftcms/cms/issues/6672))\n- It\u2019s now possible to pass a JavaScript file URL to the `{% js %}` tag. ([#6671](https://github.com/craftcms/cms/issues/6671))\n- The Project Config utility now shows a comparison of the pending project config YAML changes and the loaded project project config.\n- The Project Config utility now has a \u201cDiscard changes\u201d button, which will regenerate the project config YAML files based on the loaded project config, discarding any pending changes in them.\n- The Project Config utility now has a \u201cDownload\u201d button. ([#3979](https://github.com/craftcms/cms/issues/3979))\n- Added the `app/health-check` action, which will return a 200 status code even if an update is pending.\n- Added the `project-config/diff` command, which outputs a comparison of the pending project config YAML changes and the loaded project config.\n- Added `craft\\controllers\\ProjectConfigController::actionDiscard()`.\n- Added `craft\\controllers\\ProjectConfigController::actionDownload()`.\n- Added `craft\\controllers\\ProjectConfigController::actionRebuild()`.\n- Added `craft\\fieldlayoutelements\\BaseField::showLabel()`.\n- Added `craft\\helpers\\ProjectConfig::diff()`.\n- Added `craft\\helpers\\Template::css()`.\n- Added `craft\\helpers\\Template::js()`.\n- Added `craft\\services\\Content::$db`. ([#6549](https://github.com/craftcms/cms/issues/6549))\n- Added `craft\\services\\Drafts::$db`. ([#6549](https://github.com/craftcms/cms/issues/6549))\n\n### Changed\n- All buttons in the control panel are now actual `<button>` elements. ([#6670](https://github.com/craftcms/cms/issues/6670))\n- Title fields now get autofocused if they are positioned on the first tab. ([#6662](https://github.com/craftcms/cms/issues/6662))\n- Element edit pages now remember the selected tab when switching to a different site/revision. ([#4018](https://github.com/craftcms/cms/issues/4018), [#4164](https://github.com/craftcms/cms/issues/4164))\n- Craft now shows an alert at the top of the control panel if there are pending changes in the project config YAML files, rather than blocking access to the entire control panel.\n- Craft no longer requires the installed Craft and plugin versions to be compatible with the versions listed in the project config YAML files, except when applying changes.\n- The `install` command no longer prompts for a username if the `useEmailAsUsername` config setting is enabled. ([#6669](https://github.com/craftcms/cms/issues/6669))\n- Spaces in asset URLs are now URL-encoded, avoiding parsing conflicts with `srcset` attributes. ([#6668](https://github.com/craftcms/cms/issues/6668))\n- `graphql/api` requests now set the `Access-Control-Allow-Headers` header on non-preflight requests. ([#6674](https://github.com/craftcms/cms/issues/6674))\n- The `_includes/forms/field.html` template now supports an `inputContainerAttributes` variable, rather than `inputAttributes`, as `inputAttributes` was conflicting with variables of the same name in `_includes/forms/text.html` and `_includes/forms/checkbox.html`.\n- The `_includes/forms/select.html` template now supports an `inputAttributes` variable. ([#6696](https://github.com/craftcms/cms/issues/6696))\n\n### Removed\n- Removed `craft\\controllers\\ProjectConfigController::actionIgnore()`.\n- Removed `craft\\controllers\\TemplatesController::actionConfigSyncKickoff()`.\n- Removed `craft\\controllers\\TemplatesController::actionIncompatibleConfigAlert()`.\n- Removed `craft\\controllers\\UtilitiesController::actionProjectConfigPerformAction()`.\n\n### Fixed\n- Fixed a bug where nested block content wasn\u2019t getting updated properly when editing an entry draft, if the draft had been created since the initial page load. ([#6480](https://github.com/craftcms/cms/issues/6480))\n- Fixed a bug where entry revision menus could show site group headings even if the user didn\u2019t have permission to edit any sites within that group. ([#6615](https://github.com/craftcms/cms/issues/6615))\n- Fixed a bug where entry revision menus weren\u2019t showing the list of sites, if the entry was disabled across all of its sites. ([#6679](https://github.com/craftcms/cms/issues/6679))\n- Fixed a bug where it was possible to trigger the \u201cClear Caches\u201d and \u201cInvalidate Data Caches\u201d actions of the Caches utility, even if no options were selected. ([#6661](https://github.com/craftcms/cms/issues/6661))\n- Fixed a bug where it was possible to select parent entries that didn\u2019t belong to the same site. ([#6667](https://github.com/craftcms/cms/issues/6667))\n- Fixed an error that could occur when selecting a parent entry if it didn\u2019t belong to the primary site. ([#6667](https://github.com/craftcms/cms/issues/6667))\n- Fixed a bug where it wasn\u2019t possible to apply transform arguments to the `width` and `height` fields on assets via GraphQL. ([#6660](https://github.com/craftcms/cms/issues/6660))\n- Fixed a bug where the \u201cSave and continue editing\u201d Save button option wasn\u2019t working within Quick Post widgets.\n- Fixed a bug where the \u201cSelect all\u201d checkbox within admin tables wouldn\u2019t select all rows. ([#6678](https://github.com/craftcms/cms/issues/6678))\n- Fixed a bug where `craft\\i18n\\Formatter::asDatetime()` and `asTime()` were ignoring certain formatting characters that aren\u2019t supported by ICU, if the format string began with `php:`. ([#6691](https://github.com/craftcms/cms/issues/6691))\n- Fixed an error that could occur when downloading an asset. ([#6692](https://github.com/craftcms/cms/pull/6692))\n- Fixed a bug where fields with hidden labels would refer to themselves as `__blank__` in validation errors. ([#6699](https://github.com/craftcms/cms/issues/6699))\n- Fixed a bug where it wasn\u2019t possible to pass lists to GraphQL directive arguments. ([#6693](https://github.com/craftcms/cms/issues/6693))\n- Fixed a bug where asset indexing didn\u2019t work properly if no files were found on the selected volumes. ([#6658](https://github.com/craftcms/cms/issues/6658))\n- Fixed a bug where project config files could get deleted if the casing of a component\u2019s handle was changed, on case-insensitive file systems. ([#6708](https://github.com/craftcms/cms/issues/6708))\n- Fixed an error that could occur when applying project config changes from the Project Config utility, if the logged-in user wasn\u2019t an admin.\n- Fixed a bug where changes to the `dateModified` project config value weren\u2019t getting applied.\n- Fixed a bug where rebuilding the project config would pull in any pending changes in the YAML files unexpectedly.\n- Fixed a bug where the \u201cLocalizing relations\u201d job wouldn\u2019t run if a relational field\u2019s \u201cManage relations on a per-site basis\u201d setting was enabled via the project config. ([#6711](https://github.com/craftcms/cms/issues/6711))\n- Fixed a bug where autosuggest menus weren\u2019t getting closed when the input was blurred via the keyboard. ([#6710](https://github.com/craftcms/cms/issues/6710))\n\n## 3.5.5 - 2020-08-17\n\n### Added\n- Added the `useIframeResizer` config setting, which defaults to `false`. ([#6645](https://github.com/craftcms/cms/issues/6645))\n- Added `craft\\base\\ElementInterface::getHasCheckeredThumb()`.\n- Added `craft\\base\\ElementInterface::getHasRoundedThumb()`.\n\n### Changed\n- Email fields now set `inputmode=\"email\"` on their input.\n- URL fields now set `inputmode=\"url\"` on their input.\n- Number fields now set `inputmode=\"numeric\"` or `inputmode=\"decimal\"` on their input, depending on whether they allow decimals.\n- Tightened up the top control panel headers.\n- Element thumbnails no longer have checkered backgrounds, except for PNG, GIF, and SVG assets. ([#6646](https://github.com/craftcms/cms/pull/6646))\n- User photos are now circular, except in thumbnail view. ([#6646](https://github.com/craftcms/cms/pull/6646))\n- Setting the `previewIframeResizerOptions` config setting to `false` is no longer a way to disable iFrame Resizer, now that `useIframeResizer` exists. ([#6645](https://github.com/craftcms/cms/issues/6645))\n- The `_includes/forms/text.html` control panel template now supports passing an `inputmode` variable.\n- `craft\\models\\FieldLayout::setFields()` now accepts `null` to clear the currently memoized fields.\n\n### Fixed\n- Fixed a couple styling issues with element editor HUDs.\n- Fixed a bug where the quality setting was being ignored for image transforms that were not in either JPG or PNG format. ([#6629](https://github.com/craftcms/cms/issues/6629))\n- Fixed a bug where mail wouldn\u2019t send if the `testToEmailAddress` config setting was set to `false`.\n- Fixed a JavaScript error that could occur in Safari 12. ([#6635](https://github.com/craftcms/cms/issues/6635))\n- Fixed a bug where `craft\\services\\Globals::getAllSets()`, `getEditableSets()`, `getSetById()`, and `getSetByHandle()` could return global sets in the wrong site, if the current site had been changed since the first time the global sets had been memoized. ([#6636](https://github.com/craftcms/cms/issues/6636))\n- Fixed the styling of some control panel field instructions. ([#6640](https://github.com/craftcms/cms/issues/6640))\n- Fixed a bug where field instructions weren\u2019t getting escaped. ([#6642](https://github.com/craftcms/cms/issues/6642))\n- Fixed a bug where the initial site created by the installer was still getting saved with its base URL set to `$DEFAULT_SITE_URL`, despite the base URL provided to the installer getting stored as an environment variable named `PRIMARY_SITE_URL`. ([#6650](https://github.com/craftcms/cms/issues/6650))\n- Fixed a bug where it wasn\u2019t possible to add a new custom field to a field layout and set a value on an element for that field in the same request. ([#6651](https://github.com/craftcms/cms/issues/6651))\n\n## 3.5.4 - 2020-08-13\n\n### Added\n- It\u2019s now possible to hide field labels from within field layout designers. ([#6608](https://github.com/craftcms/cms/issues/6608))\n- Lightswitch fields now have an \u201cON Label\u201d and \u201cOFF Label\u201d settings. ([#3741](https://github.com/craftcms/cms/issues/3741))\n- Edit Category pages now support a <kbd>Shift</kbd> + <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut for saving the category and creating a new one.\n- Added the \u201cShow field handles in edit forms\u201d admin user preference. ([#6610](https://github.com/craftcms/cms/issues/6610))\n- Added `craft\\fields\\Lightswitch::$offLabel`.\n- Added `craft\\fields\\Lightswitch::$onLabel`.\n- Added `craft\\services\\AssetTransforms::$db`. ([#6549](https://github.com/craftcms/cms/issues/6549))\n\n### Changed\n- All admin-only user preferences are now grouped under a single \u201cDevelopment\u201d heading.\n- Improved system performance.\n- Stack traces within exception views now show source Twig templates rather than the compiled PHP classes.\n- The \u201cEnabled everywhere\u201d entry status label has been renamed to \u201cEnabled\u201d. ([#6623](https://github.com/craftcms/cms/issues/6623))\n- `error` is now a reserved handle. ([#6626](https://github.com/craftcms/cms/issues/6626))\n- The `_includes/forms/checkbox.html` control panel template now supports an `inputAttributes` variable.\n- The `_includes/forms/field.html` control panel template now supports overriding the heading HTML via a `heading` block.\n- `craft\\helpers\\Db::idByUid()` now has a `$db` argument.\n- `craft\\helpers\\Db::idsByUids()` now has a `$db` argument.\n- `craft\\helpers\\Db::uidById()` now has a `$db` argument.\n- `craft\\helpers\\Db::uidsByIds()` now has a `$db` argument.\n- `craft\\models\\FieldLayout::createForm()` now supports passing a `namespace` key into the `$config` argument, to namespace the tab contents.\n\n### Fixed\n- Fixed an infinite redirect that could occur if Craft was installed within a subdirectory of the webroot. ([#6616](https://github.com/craftcms/cms/issues/6616))\n- Fixed a bug where all Title fields within Quick Post widgets had the same input ID.\n- Fixed a bug where Title fields weren\u2019t showing change status badges when editing an entry draft.\n- Fixed an error that could occur when using the `formatDateTime` GraphQL directive on environments that didn\u2019t have the `Intl` PHP extension installed. ([#6614](https://github.com/craftcms/cms/issues/6614))\n- Fixed a bug where template profiling was interfering with Twig\u2019s ability to guess offending template lines in error reports.\n- Fixed a bug where soft-deleted categories and entries within Structure sections had two \u201cDelete permanently\u201d actions. ([#6619](https://github.com/craftcms/cms/issues/6619))\n- Fixed a bug where field handles were being displayed within element editor HUDs. ([#6620](https://github.com/craftcms/cms/issues/6620))\n\n## 3.5.3 - 2020-08-11\n\n### Added\n- Fields in the control panel now always display their handle without needing to press the <kbd>Option</kbd>/<kbd>ALT</kbd> key, when Dev Mode is enabled, and they will be copied to the clipboard when clicked on. ([#6532](https://github.com/craftcms/cms/issues/6532))\n- Added `craft\\helpers\\Gql::prepareTransformArguments()`.\n- Added the `_includes/forms/copytextbtn.html` control panel template.\n\n### Changed\n- It\u2019s now possible to change a revision\u2019s creator and source via `craft\\services\\Revisions::EVENT_BEFORE_CREATE_REVISION`. ([#6600](https://github.com/craftcms/cms/pull/6600))\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to use the `transform` argument in some cases via the GraphQL API.\n- Fixed a bug where Craft was routing requests based on the full requested URI rather than just the URI segments that came after `index.php`. ([#6579](https://github.com/craftcms/cms/issues/6579))\n- Fixed a bug where `data-target-prefix` attributes that specified a class name were getting namespaced. ([#6604](https://github.com/craftcms/cms/issues/6604))\n- Fixed a bug where `craft\\helpers\\Json::isJsonObject()` was returning `false` if the JSON string spanned multiple lines. ([#6607](https://github.com/craftcms/cms/issues/6607))\n- Fixed a bug where the `limit` param wasn\u2019t working when applied to eager-loaded elements. ([#6596](https://github.com/craftcms/cms/issues/6596))\n- Fixed an error that would occur if Craft tried to make a database backup in a VM with Windows as the host OS.\n\n## 3.5.2 - 2020-08-09\n\n### Added\n- Added `craft\\db\\Command::deleteDuplicates()`.\n- Added `craft\\db\\Migration::deleteDuplicates()`.\n- Added `craft\\db\\mysql\\QueryBuilder::deleteDuplicates()`.\n- Added `craft\\db\\pgsql\\QueryBuilder::deleteDuplicates()`.\n\n### Changed\n- Live Preview now attempts to maintain the iframe scroll position between page reloads even if the `previewIframeResizerOptions` config setting is set to `false`. ([#6569](https://github.com/craftcms/cms/issues/6569))\n- `language` and `localized` are now reserved field handles. ([#6564](https://github.com/craftcms/cms/issues/6564))\n- `craft\\base\\Element::__get()` now prioritizes field handles over getter methods. ([#6564](https://github.com/craftcms/cms/issues/6564))\n- Data caches stored in `storage/runtime/cache/` now get a cache key prefix based on the application ID.\n- Craft now clears the schema cache before running each migration, in addition to after. ([#6552](https://github.com/craftcms/cms/issues/6552))\n- Renamed `craft\\base\\ElementTrait::$elementSiteId` to `$siteSettingsId`. ([verbb/navigation#179](https://github.com/verbb/navigation/issues/179), [verbb/wishlist#56](https://github.com/verbb/wishlist/issues/56))\n\n### Fixed\n- Fixed a PHP error that occurred when setting a `relatedTo` param to an array that began with `'and'`. ([#6573](https://github.com/craftcms/cms/issues/6573))\n- Fixed a SQL error that could occur when updating to Craft 3.5 if the `migrations` table contained duplicate migration rows. ([#6580](https://github.com/craftcms/cms/issues/6580))\n- Fixed a PHP error that could occur during public registration. ([#6499](https://github.com/craftcms/cms/issues/6499))\n\n## 3.5.1 - 2020-08-05\n\n### Fixed\n- Fixed an error where it wasn\u2019t possible to create a GraphQL schema that had write-only access to a Single entry. ([#6554](https://github.com/craftcms/cms/issues/6554))\n- Fixed a PHP error that could occur with certain versions of PHP. ([#6544](https://github.com/craftcms/cms/issues/6544))\n- Fixed an error that could occur when updating to Craft 3.5. ([#6464](https://github.com/craftcms/cms/issues/6464))\n- Fixed errors in fixtures that prevented them from being used in tests.\n\n## 3.5.0 - 2020-08-04\n\n> **Warning**\n> Read through the [Upgrading to Craft 3.5](https://craftcms.com/knowledge-base/upgrading-to-craft-3-5) guide before updating.\n\n### Added\n- It\u2019s now possible to customize the labels and author instructions for all fields (including Title fields), from within field layout designers. ([#806](https://github.com/craftcms/cms/issues/806), [#841](https://github.com/craftcms/cms/issues/841))\n- It\u2019s now possible to set Title fields\u2019 positions within field layout designers. ([#3953](https://github.com/craftcms/cms/issues/3953))\n- It\u2019s now possible to set field widths to 25%, 50%, 75%, or 100% (including Matrix sub-fields), and fields will be positioned next to each other when there\u2019s room. ([#2644](https://github.com/craftcms/cms/issues/2644), [#6346](https://github.com/craftcms/cms/issues/6346))\n- It\u2019s now possible to add headings, tips, warnings, horizontal rules, and custom UI elements based on site templates, to field layouts. ([#1103](https://github.com/craftcms/cms/issues/1103), [#1138](https://github.com/craftcms/cms/issues/1138), [#4738](https://github.com/craftcms/cms/issues/4738))\n- It\u2019s now possible to search for fields from within field layout designers. ([#913](https://github.com/craftcms/cms/issues/913))\n- Added the \u201cHeader Column Heading\u201d element index source setting. ([#3814](https://github.com/craftcms/cms/issues/3814))\n- Added the \u201cFormatting Locale\u201d user preference. ([#6363](https://github.com/craftcms/cms/issues/6363))\n- Added the \u201cUse shapes to represent statuses\u201d user preference. ([#3293](https://github.com/craftcms/cms/issues/3293))\n- Added the \u201cUnderline links\u201d user preference. ([#6153](https://github.com/craftcms/cms/issues/6153))\n- Added the \u201cSuspend by default\u201d user registration setting. ([#5830](https://github.com/craftcms/cms/issues/5830))\n- Added the ability to disable sites on the front end. ([#3005](https://github.com/craftcms/cms/issues/3005))\n- Entries within Structure sections and categories now have a \u201cDelete (with descendants)\u201d element action.\n- Soft-deleted elements now have a \u201cDelete permanently\u201d element action. ([#4420](https://github.com/craftcms/cms/issues/4420))\n- Entry types can now change the Title field\u2019s translation method, similar to how custom fields\u2019 translation methods. ([#2856](https://github.com/craftcms/cms/issues/2856))\n- Entry draft forms no longer have a primary action, and the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut now forces a resave of the draft, rather than publishing it. ([#6199](https://github.com/craftcms/cms/issues/6199))\n- Edit Entry pages now support a <kbd>Shift</kbd> + <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut for saving the entry and creating a new one. ([#2851](https://github.com/craftcms/cms/issues/2851))\n- Assets now have a \u201cCopy URL\u201d element action. ([#2944](https://github.com/craftcms/cms/issues/2944))\n- Entry indexes can now show \u201cRevision Notes\u201d and \u201cLast Edited By\u201d columns. ([#5907](https://github.com/craftcms/cms/issues/5907))\n- Sections now have a new Propagation Method option, which gives entries control over which sites they should be saved to. ([#5988](https://github.com/craftcms/cms/issues/5988))\n- User groups can now have descriptions. ([#4893](https://github.com/craftcms/cms/issues/4893))\n- It\u2019s now possible to set a custom route that handles Set Password requests. ([#5722](https://github.com/craftcms/cms/issues/5722))\n- Field labels now reveal their handles when the <kbd>Option</kbd>/<kbd>ALT</kbd> key is pressed. ([#5833](https://github.com/craftcms/cms/issues/5833))\n- Added the Project Config utility, which can be used to perform project config actions, and view a dump of the stored project config. ([#4371](https://github.com/craftcms/cms/issues/4371))\n- Added \u201cGraphQL queries\u201d and \u201cTemplate caches\u201d cache tag invalidation options to the Caches (formerly \u201cClear Caches\u201d) utility. ([#6279](https://github.com/craftcms/cms/issues/6279))\n- Added the `allowedGraphqlOrigins` config setting. ([#5933](https://github.com/craftcms/cms/issues/5933))\n- Added the `brokenImagePath` config setting. ([#5877](https://github.com/craftcms/cms/issues/5877))\n- Added the `cpHeadTags` config setting, making it possible to give the control panel a custom favicon. ([#4003](https://github.com/craftcms/cms/issues/4003))\n- Added the `defaultCpLocale` config setting. ([#6363](https://github.com/craftcms/cms/issues/6363))\n- Added the `enableBasicHttpAuth` config setting. ([#6421](https://github.com/craftcms/cms/issues/6421))\n- Added the `gqlTypePrefix` config setting, making it possible to prefix all GraphQL types created by Craft. ([#5950](https://github.com/craftcms/cms/issues/5950))\n- Added the `imageEditorRatios` config setting, making it possible to customize the list of available aspect ratios in the image editor. ([#6201](https://github.com/craftcms/cms/issues/6201))\n- Added the `previewIframeResizerOptions` config setting. ([#6388](https://github.com/craftcms/cms/issues/6388))\n- Added the `siteToken` config setting.\n- Added the `install/check` command. ([#5810](https://github.com/craftcms/cms/issues/5810))\n- Added the `invalidate-tags` command. ([#6279](https://github.com/craftcms/cms/issues/6279))\n- Added the `plugin/install`, `plugin/uninstall`, `plugin/enable`, and `plugin/disable` commands. ([#5817](https://github.com/craftcms/cms/issues/5817))\n- `{% cache %}` tags and GraphQL queries now use a new tag-based cache invalidation strategy. (No more \u201cDeleting stale template caches\u201d background jobs clogging up the queue!) ([#1507](https://github.com/craftcms/cms/issues/1507), [#1689](https://github.com/craftcms/cms/issues/1689))\n- Added the `{% html %}` Twig tag, which makes it possible to register arbitrary HTML for inclusion in the `<head>`, beginning of `<body>`, or end of `<body>`. ([#5955](https://github.com/craftcms/cms/issues/5955))\n- Added the `|diff` Twig filter.\n- Added the `|explodeClass` Twig filter, which converts class names into an array.\n- Added the `|explodeStyle` Twig filter, which converts CSS styles into an array of property/value pairs.\n- Added the `|namespaceAttributes` Twig filter, which namespaces `id`, `for`, and other attributes, but not `name`.\n- Added the `|push` Twig filter, which returns a new array with one or more items appended to it.\n- Added the `|unshift` Twig filter, which returns a new array with one or more items prepended to it.\n- Added the `|where` Twig filter.\n- Added the `raw()` Twig function, which wraps the given string in a `Twig\\Markup` object to prevent it from getting HTML-encoded.\n- Added support for eager loading elements\u2019 current revisions, via `currentRevision`.\n- Added support for eager loading drafts\u2019 and revisions\u2019 creators, via `draftCreator` and `revisionCreator`.\n- Added support for the `CRAFT_CP` PHP constant. ([#5122](https://github.com/craftcms/cms/issues/5122))\n- Added support for [GraphQL mutations](https://craftcms.com/docs/3.x/graphql.html#mutations). ([#4835](https://github.com/craftcms/cms/issues/4835))\n- Added the `drafts`, `draftOf`, `draftId`, `draftCreator`, `revisions`, `revisionOf`, `revisionId` and `revisionCreator` arguments to element queries using GraphQL API. ([#5580](https://github.com/craftcms/cms/issues/5580))\n- Added the `isDraft`, `isRevision`, `sourceId`, `sourceUid`, and `isUnsavedDraft` fields to elements when using GraphQL API. ([#5580](https://github.com/craftcms/cms/issues/5580))\n- Added the `assetCount`, `categoryCount`, `entryCount`, `tagCount`, and `userCount` queries for fetching the element counts to the GraphQL API. ([#4847](https://github.com/craftcms/cms/issues/4847))\n- Added the `locale` argument to the `formatDateTime` GraphQL directive. ([#5593](https://github.com/craftcms/cms/issues/5593))\n- Added support for specifying a transform on assets\u2019 `width` and `height` fields via GraphQL.\n- Added the `hasPhoto` user query param/GraphQL argument. ([#6083](https://github.com/craftcms/cms/issues/6083))\n- Added the `localized` field when querying entries and categories via GraphQL. ([#6045](https://github.com/craftcms/cms/issues/6045))\n- Added the `language` field when querying elements via GraphQL.\n- Added support for GraphQL query batching. ([#5677](https://github.com/craftcms/cms/issues/5677))\n- The GraphiQL IDE now opens as a fullscreen app in a new window.\n- Added the \u201cPrettify\u201d and \u201cHistory\u201d buttons to the GraphiQL IDE.\n- Added the Explorer plugin to GraphiQL.\n- Added support for external subnav links in the global control panel nav.\n- Added the `fieldLayoutDesigner()` and `fieldLayoutDesignerField()` macros to the `_includes/forms.html` control panel template.\n- Added the `_includes/forms/fieldLayoutDesigner.html` control panel template.\n- Added the `_layouts/components/form-action-menu.twig` control panel template.\n- Added the `parseRefs` GraphQL directive. ([#6200](https://github.com/craftcms/cms/issues/6200))\n- Added the `prev` and `next` fields for entries, categories and assets when querying elements via GraphQL. ([#5571](https://github.com/craftcms/cms/issues/5571))\n- Added the \u201cReplace file\u201d permission. ([#6336](https://github.com/craftcms/cms/issues/6336))\n- Web requests now support basic authentication. ([#5303](https://github.com/craftcms/cms/issues/5303))\n- Added support for JavaScript events on admin tables. ([#6063](https://github.com/craftcms/cms/issues/6063))\n- Added the ability to enable/disable checkboxes on a per row basis in admin tables. ([#6223](https://github.com/craftcms/cms/issues/6223))\n- Added `craft\\base\\ConfigurableComponent`.\n- Added `craft\\base\\ConfigurableComponentInterface`.\n- Added `craft\\base\\Element::defineFieldLayouts()`.\n- Added `craft\\base\\Element::EVENT_DEFINE_KEYWORDS`. ([#6028](https://github.com/craftcms/cms/issues/6028))\n- Added `craft\\base\\Element::EVENT_REGISTER_FIELD_LAYOUTS`.\n- Added `craft\\base\\Element::EVENT_SET_EAGER_LOADED_ELEMENTS`.\n- Added `craft\\base\\Element::searchKeywords()`.\n- Added `craft\\base\\ElementActionInterface::isDownload()`.\n- Added `craft\\base\\ElementInterface::fieldLayouts()`.\n- Added `craft\\base\\ElementInterface::getCacheTags()`.\n- Added `craft\\base\\ElementInterface::getIsTitleTranslatable()`.\n- Added `craft\\base\\ElementInterface::getLanguage()`.\n- Added `craft\\base\\ElementInterface::getLocalized()`.\n- Added `craft\\base\\ElementInterface::getTitleTranslationDescription()`.\n- Added `craft\\base\\ElementInterface::getTitleTranslationKey()`.\n- Added `craft\\base\\ElementInterface::gqlMutationNameByContext()`.\n- Added `craft\\base\\ElementInterface::isAttributeDirty()`.\n- Added `craft\\base\\ElementInterface::isFieldEmpty()`.\n- Added `craft\\base\\ElementInterface::setDirtyAttributes()`.\n- Added `craft\\base\\ElementTrait::$elementSiteId`.\n- Added `craft\\base\\Field::EVENT_DEFINE_INPUT_HTML`. ([#5867](https://github.com/craftcms/cms/issues/5867))\n- Added `craft\\base\\Field::EVENT_DEFINE_KEYWORDS`. ([#6028](https://github.com/craftcms/cms/issues/6028))\n- Added `craft\\base\\Field::inputHtml()`.\n- Added `craft\\base\\Field::searchKeywords()`.\n- Added `craft\\base\\FieldInterface::getContentGqlMutationArgumentType()`.\n- Added `craft\\base\\FieldInterface::getContentGqlQueryArgumentType()`.\n- Added `craft\\base\\FieldLayoutElement`.\n- Added `craft\\base\\FieldLayoutElementInterface`.\n- Added `craft\\base\\Model::EVENT_DEFINE_EXTRA_FIELDS`.\n- Added `craft\\base\\Model::EVENT_DEFINE_FIELDS`.\n- Added `craft\\base\\VolumeInterface::getFieldLayout()`.\n- Added `craft\\behaviors\\BaseRevisionBehavior`.\n- Added `craft\\config\\GeneralConfig::getTestToEmailAddress()`.\n- Added `craft\\console\\actions\\InvalidateTagAction`.\n- Added `craft\\console\\controllers\\InvalidateTagsController`.\n- Added `craft\\console\\controllers\\MailerController::$to`.\n- Added `craft\\console\\controllers\\MigrateController::EVENT_REGISTER_MIGRATOR`.\n- Added `craft\\controllers\\AppController::actionBrokenImage()`.\n- Added `craft\\controllers\\BaseEntriesController::enforceSitePermissions()`.\n- Added `craft\\controllers\\FieldsController::actionRenderLayoutElementSelector()`.\n- Added `craft\\controllers\\UtilitiesController::actionInvalidateTags()`.\n- Added `craft\\controllers\\UtilitiesController::actionProjectConfigPerformAction()`.\n- Added `craft\\db\\MigrationManager::TRACK_CONTENT`.\n- Added `craft\\db\\MigrationManager::TRACK_CRAFT`.\n- Added `craft\\elements\\actions\\CopyUrl`.\n- Added `craft\\elements\\actions\\Delete::$hard`.\n- Added `craft\\elements\\actions\\Delete::$withDescendants`.\n- Added `craft\\elements\\Asset::defineFieldLayouts()`.\n- Added `craft\\elements\\Asset::getCacheTags()`.\n- Added `craft\\elements\\Asset::getSrcset()`. ([#5774](https://github.com/craftcms/cms/issues/5774))\n- Added `craft\\elements\\Asset::getVolumeId()`.\n- Added `craft\\elements\\Asset::gqlMutationNameByContext()`.\n- Added `craft\\elements\\Asset::setVolumeId()`.\n- Added `craft\\elements\\Category::defineFieldLayouts()`.\n- Added `craft\\elements\\Category::getCacheTags()`.\n- Added `craft\\elements\\Category::gqlMutationNameByContext()`.\n- Added `craft\\elements\\db\\AssetQuery::cacheTags()`.\n- Added `craft\\elements\\db\\CategoryQuery::cacheTags()`.\n- Added `craft\\elements\\db\\EagerLoadPlan`.\n- Added `craft\\elements\\db\\ElementQuery::cacheTags()`.\n- Added `craft\\elements\\db\\EntryQuery::cacheTags()`.\n- Added `craft\\elements\\db\\MatrixBlockQuery::cacheTags()`.\n- Added `craft\\elements\\db\\TagQuery::cacheTags()`.\n- Added `craft\\elements\\db\\UserQuery::$hasPhoto`.\n- Added `craft\\elements\\db\\UserQuery::hasPhoto()`.\n- Added `craft\\elements\\Entry::defineFieldLayouts()`.\n- Added `craft\\elements\\Entry::getCacheTags()`.\n- Added `craft\\elements\\Entry::gqlMutationNameByContext()`.\n- Added `craft\\elements\\GlobalSet::getConfig()`.\n- Added `craft\\elements\\GlobalSet::gqlMutationNameByContext()`.\n- Added `craft\\elements\\MatrixBlock::getCacheTags()`.\n- Added `craft\\elements\\Tag::getCacheTags()`.\n- Added `craft\\elements\\Tag::gqlMutationNameByContext()`.\n- Added `craft\\elements\\User::getPreferredLocale()`.\n- Added `craft\\events\\DefineAttributeKeywordsEvent`.\n- Added `craft\\events\\DefineFieldHtmlEvent`.\n- Added `craft\\events\\DefineFieldKeywordsEvent`.\n- Added `craft\\events\\DefineFieldLayoutElementsEvent`.\n- Added `craft\\events\\DefineFieldLayoutFieldEvent`.\n- Added `craft\\events\\DefineFieldsEvent`.\n- Added `craft\\events\\EagerLoadElementsEvent`.\n- Added `craft\\events\\MutationPopulateElementEvent`.\n- Added `craft\\events\\RegisterElementFieldLayoutsEvent`.\n- Added `craft\\events\\RegisterGqlEagerLoadableFields`.\n- Added `craft\\events\\RegisterGqlMutationsEvent`.\n- Added `craft\\events\\RegisterGqlSchemaComponentsEvent`.\n- Added `craft\\events\\RegisterMigratorEvent`.\n- Added `craft\\events\\SetEagerLoadedElementsEvent`.\n- Added `craft\\fieldlayoutelements\\BaseField`.\n- Added `craft\\fieldlayoutelements\\BaseUiElement`.\n- Added `craft\\fieldlayoutelements\\CustomField`.\n- Added `craft\\fieldlayoutelements\\EntryTitleField`.\n- Added `craft\\fieldlayoutelements\\Heading`.\n- Added `craft\\fieldlayoutelements\\HorizontalRule`.\n- Added `craft\\fieldlayoutelements\\StandardField`.\n- Added `craft\\fieldlayoutelements\\StandardTextField`.\n- Added `craft\\fieldlayoutelements\\Template`.\n- Added `craft\\fieldlayoutelements\\Tip`.\n- Added `craft\\fieldlayoutelements\\TitleField`.\n- Added `craft\\fields\\BaseOptionsField::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\BaseRelationField::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Date::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Lightswitch::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Lightswitch::getContentGqlQueryArgumentType()`.\n- Added `craft\\fields\\Matrix::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Number::getContentGqlMutationArgumentType()`.\n- Added `craft\\fields\\Table::getContentGqlMutationArgumentType()`.\n- Added `craft\\gql\\arguments\\mutations\\Asset`.\n- Added `craft\\gql\\arguments\\mutations\\Draft`.\n- Added `craft\\gql\\arguments\\mutations\\Entry`.\n- Added `craft\\gql\\arguments\\mutations\\Structure`.\n- Added `craft\\gql\\base\\ElementMutationArguments`.\n- Added `craft\\gql\\base\\ElementMutationResolver`.\n- Added `craft\\gql\\base\\InterfaceType::resolveElementTypeName()`.\n- Added `craft\\gql\\base\\MutationArguments`.\n- Added `craft\\gql\\base\\MutationResolver`.\n- Added `craft\\gql\\base\\SingleGeneratorInterface`.\n- Added `craft\\gql\\base\\StructureMutationTrait`.\n- Added `craft\\gql\\ElementQueryConditionBuilder`.\n- Added `craft\\gql\\GqlEntityRegistry::prefixTypeName()`.\n- Added `craft\\gql\\Mutation`.\n- Added `craft\\gql\\mutations\\Category`.\n- Added `craft\\gql\\mutations\\Entry`.\n- Added `craft\\gql\\mutations\\GlobalSet`.\n- Added `craft\\gql\\mutations\\Ping`.\n- Added `craft\\gql\\mutations\\Tag`.\n- Added `craft\\gql\\resolvers\\mutations\\Asset`.\n- Added `craft\\gql\\resolvers\\mutations\\Category`.\n- Added `craft\\gql\\resolvers\\mutations\\Entry`.\n- Added `craft\\gql\\resolvers\\mutations\\GlobalSet`.\n- Added `craft\\gql\\resolvers\\mutations\\Tag`.\n- Added `craft\\gql\\types\\input\\File`.\n- Added `craft\\gql\\types\\input\\Matrix`.\n- Added `craft\\gql\\types\\Mutation`.\n- Added `craft\\gql\\types\\TableRow::prepareRowFieldDefinition()`.\n- Added `craft\\helpers\\App::dbMutexConfig()`.\n- Added `craft\\helpers\\ArrayHelper::isNumeric()`.\n- Added `craft\\helpers\\Assets::parseSrcsetSize()`.\n- Added `craft\\helpers\\Component::iconSvg()`.\n- Added `craft\\helpers\\Console::ensureProjectConfigFileExists()`.\n- Added `craft\\helpers\\Db::batchInsert()`.\n- Added `craft\\helpers\\Db::delete()`.\n- Added `craft\\helpers\\Db::insert()`.\n- Added `craft\\helpers\\Db::replace()`.\n- Added `craft\\helpers\\Db::update()`.\n- Added `craft\\helpers\\Db::upsert()`.\n- Added `craft\\helpers\\ElementHelper::generateSlug()`.\n- Added `craft\\helpers\\ElementHelper::normalizeSlug()`.\n- Added `craft\\helpers\\ElementHelper::translationDescription()`.\n- Added `craft\\helpers\\ElementHelper::translationKey()`.\n- Added `craft\\helpers\\FileHelper::addFilesToZip()`.\n- Added `craft\\helpers\\FileHelper::zip()`.\n- Added `craft\\helpers\\Gql::canMutateAssets()`.\n- Added `craft\\helpers\\Gql::canMutateCategories()`.\n- Added `craft\\helpers\\Gql::canMutateEntries()`.\n- Added `craft\\helpers\\Gql::canMutateGlobalSets()`.\n- Added `craft\\helpers\\Gql::canMutateTags()`.\n- Added `craft\\helpers\\Gql::extractEntityAllowedActions()`.\n- Added `craft\\helpers\\Html::explodeClass()`.\n- Added `craft\\helpers\\Html::explodeStyle()`.\n- Added `craft\\helpers\\Html::id()`.\n- Added `craft\\helpers\\Html::namespaceAttributes()`.\n- Added `craft\\helpers\\Html::namespaceHtml()`.\n- Added `craft\\helpers\\Html::namespaceId()`.\n- Added `craft\\helpers\\Html::namespaceInputName()`.\n- Added `craft\\helpers\\Html::namespaceInputs()`.\n- Added `craft\\helpers\\Html::sanitizeSvg()`.\n- Added `craft\\helpers\\Json::isJsonObject()`.\n- Added `craft\\helpers\\MailerHelper::normalizeEmails()`.\n- Added `craft\\helpers\\MailerHelper::settingsReport()`.\n- Added `craft\\helpers\\ProjectConfig::ensureAllGqlSchemasProcessed()`.\n- Added `craft\\helpers\\ProjectConfig::splitConfigIntoComponents()`.\n- Added `craft\\helpers\\Queue`.\n- Added `craft\\models\\CategoryGroup::getConfig()`.\n- Added `craft\\models\\EntryType::$sortOrder`.\n- Added `craft\\models\\EntryType::getConfig()`.\n- Added `craft\\models\\FieldGroup::getConfig()`.\n- Added `craft\\models\\FieldLayout::createForm()`.\n- Added `craft\\models\\FieldLayout::EVENT_DEFINE_STANDARD_FIELDS`.\n- Added `craft\\models\\FieldLayout::EVENT_DEFINE_UI_ELEMENTS`. ([#6360](https://github.com/craftcms/cms/issues/6360))\n- Added `craft\\models\\FieldLayout::getAvailableCustomFields()`.\n- Added `craft\\models\\FieldLayout::getAvailableStandardFields()`.\n- Added `craft\\models\\FieldLayout::getAvailableUiElements()`.\n- Added `craft\\models\\FieldLayout::getField()`.\n- Added `craft\\models\\FieldLayout::isFieldIncluded()`.\n- Added `craft\\models\\FieldLayoutForm`.\n- Added `craft\\models\\FieldLayoutFormTab`.\n- Added `craft\\models\\FieldLayoutTab::$elements`.\n- Added `craft\\models\\FieldLayoutTab::createFromConfig()`.\n- Added `craft\\models\\FieldLayoutTab::getConfig()`.\n- Added `craft\\models\\FieldLayoutTab::getElementConfigs()`.\n- Added `craft\\models\\FieldLayoutTab::updateConfig()`.\n- Added `craft\\models\\GqlSchema::getConfig()`.\n- Added `craft\\models\\GqlToken::setSchema()`.\n- Added `craft\\models\\MatrixBlockType::getConfig()`.\n- Added `craft\\models\\Section::getConfig()`.\n- Added `craft\\models\\Section::PROPAGATION_METHOD_CUSTOM`.\n- Added `craft\\models\\Site::$enabled`.\n- Added `craft\\models\\Site::getConfig()`.\n- Added `craft\\models\\SiteGroup::getConfig()`.\n- Added `craft\\models\\TagGroup::getConfig()`.\n- Added `craft\\models\\UserGroup::getConfig()`.\n- Added `craft\\queue\\jobs\\PruneRevisions`.\n- Added `craft\\services\\AssetTransforms::extendTransform()`. ([#5853](https://github.com/craftcms/cms/issues/5853))\n- Added `craft\\services\\Composer::handleError()`.\n- Added `craft\\services\\Composer::run()`.\n- Added `craft\\services\\ElementIndexes::getFieldLayoutsForSource()`.\n- Added `craft\\services\\ElementIndexes::getSourceSortOptions()`.\n- Added `craft\\services\\ElementIndexes::getSourceTableAttributes()`.\n- Added `craft\\services\\Elements::collectCacheTags()`.\n- Added `craft\\services\\Elements::createEagerLoadingPlans()`.\n- Added `craft\\services\\Elements::createElementQuery()`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_EAGER_LOAD_ELEMENTS`.\n- Added `craft\\services\\Elements::getIsCollectingCacheTags()`.\n- Added `craft\\services\\Elements::invalidateAllCaches()`.\n- Added `craft\\services\\Elements::invalidateCachesForElement()`.\n- Added `craft\\services\\Elements::invalidateCachesForElementType()`.\n- Added `craft\\services\\Elements::startCollectingCacheTags()`.\n- Added `craft\\services\\Elements::stopCollectingCacheTags()`.\n- Added `craft\\services\\Fields::createLayoutElement()`.\n- Added `craft\\services\\Fields::getLayoutsByType()`.\n- Added `craft\\services\\Gql::CONFIG_GQL_KEY`.\n- Added `craft\\services\\Gql::CONFIG_GQL_PUBLIC_TOKEN_KEY`.\n- Added `craft\\services\\Gql::getAllSchemaComponents()`.\n- Added `craft\\services\\Gql::getPublicToken()`.\n- Added `craft\\services\\Gql::handleChangedPublicToken()`.\n- Added `craft\\services\\Images::getSupportsWebP()`. ([#5853](https://github.com/craftcms/cms/issues/5853))\n- Added `craft\\services\\Path::getProjectConfigPath()`.\n- Added `craft\\services\\ProjectConfig::$folderName`. ([#5982](https://github.com/craftcms/cms/issues/5982))\n- Added `craft\\services\\ProjectConfig::FILE_ISSUES_CACHE_KEY`.\n- Added `craft\\services\\ProjectConfig::getHadFileWriteIssues()`.\n- Added `craft\\services\\ProjectConfig::IGNORE_CACHE_KEY`.\n- Added `craft\\services\\ProjectConfig::ignorePendingChanges()`.\n- Added `craft\\services\\Users::CONFIG_USERS_KEY`.\n- Added `craft\\services\\Volumes::createVolumeConfig()`.\n- Added `craft\\test\\mockclasses\\elements\\MockElementQuery`.\n- Added `craft\\utilities\\ClearCaches::EVENT_REGISTER_TAG_OPTIONS`.\n- Added `craft\\utilities\\ClearCaches::tagOptions()`.\n- Added `craft\\utilities\\ProjectConfig`.\n- Added `craft\\web\\Application::authenticate()`.\n- Added `craft\\web\\AssetBundle\\ContentWindowAsset`.\n- Added `craft\\web\\AssetBundle\\IframeResizerAsset`.\n- Added `craft\\web\\Controller::setFailFlash()`.\n- Added `craft\\web\\Controller::setSuccessFlash()`.\n- Added `craft\\web\\Request::getAcceptsImage()`.\n- Added `craft\\web\\Request::getFullUri()`.\n- Added `craft\\web\\Request::getIsGraphql()`.\n- Added `craft\\web\\Request::getIsJson()`.\n- Added `craft\\web\\Request::getMimeType()`.\n- Added `craft\\web\\Request::getRawCookies()`.\n- Added `craft\\web\\Request::loadRawCookies()`.\n- Added `craft\\web\\Response::getRawCookies()`.\n- Added `craft\\web\\Response::setNoCacheHeaders()`.\n- `craft\\web\\View::evaluateDynamicContent()` can no longer be called by default. ([#6185](https://github.com/craftcms/cms/pull/6185))\n- Added the `_includes/forms/password.html` control panel template.\n- Added the `_includes/forms/copytext.html` control panel template.\n- Added the `copytext` and `copytextField` macros to the `_includes/forms.html` control panel template.\n- Added the `Craft.Listbox` JavaScript class.\n- Added the `Craft.SlidePicker` JavaScript class.\n- Added the `Craft.removeLocalStorage()`, `getCookie()`, `setCookie()`, and `removeCookie()` JavaScript methods.\n- Added the `Craft.submitForm()` JavaScript method.\n- Added the `Craft.cp.getSiteId()` and `setSiteId()` JavaScript methods.\n- Added the `Craft.ui.createCopyTextInput()`, `createCopyTextField()`, and `createCopyTextPrompt()` JavaScript methods.\n- Added the [iFrame Resizer](http://davidjbradshaw.github.io/iframe-resizer/) library.\n\n### Changed\n- Craft now stores project config files in a new `config/project/` folder, regardless of whether the (deprecated) `useProjectConfigFile` config setting is enabled, and syncing new project config file changes is now optional.\n- The public GraphQL schema\u2019s access settings are now stored in the project config. ([#6078](https://github.com/craftcms/cms/issues/6078))\n- Built-in system components now consistently store their settings in the project config with the expected value types. ([#4424](https://github.com/craftcms/cms/issues/4424))\n- The account menu in the control panel header now includes identity info. ([#6460](https://github.com/craftcms/cms/issues/6460))\n- User registration forms in the control panel now give users the option to send an activation email, even if email verification isn\u2019t required. ([#5836](https://github.com/craftcms/cms/issues/5836))\n- Activation emails are now sent automatically on public registration if the `deferPublicRegistrationPassword` config setting is enabled, even if email verification isn\u2019t required. ([#5836](https://github.com/craftcms/cms/issues/5836))\n- Craft now remembers the selected site across global sets and element indexes. ([#2779](https://github.com/craftcms/cms/issues/2779))\n- The available table columns and sort options within element indexes now only list custom fields that are present in field layouts for the selected element source. ([#4314](https://github.com/craftcms/cms/issues/4314), [#4802](https://github.com/craftcms/cms/issues/4802))\n- The default account activation and password reset emails now reference the system name rather than the current site name. ([#6089](https://github.com/craftcms/cms/pull/6089))\n- Craft will now regenerate missing transforms on local volumes. ([#5956](https://github.com/craftcms/cms/issues/5956))\n- Asset, category, entry, and user edit pages now retain their scroll position when the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut is used. ([#6513](https://github.com/craftcms/cms/issues/6513))\n- Preview frames now maintain their scroll position across refreshes, even for cross-origin preview targets.\n- Preview targets that aren\u2019t directly rendered by Craft must now include `lib/iframe-resizer-cw/iframeResizer.contentWindow.js` in order to maintain scroll position across refreshes.\n- The preview frame header no longer hides the top 54px of the preview frame when it\u2019s scrolled all the way to the top. ([#5547](https://github.com/craftcms/cms/issues/5547))\n- Element editor HUDs now warn before switching to another site, if there are any unsaved content changes. ([#2512](https://github.com/craftcms/cms/issues/2512))\n- Improved the styling of password inputs in the control panel.\n- Improved the UI for copying user activation URLs, asset reference tags, and GraphQL tokens\u2019 authentication headers.\n- Improved the wording of the meta info displayed in entry revision menus. ([#5889](https://github.com/craftcms/cms/issues/5889))\n- Plain Text fields now have a \u201cUI Mode\u201d setting.\n- Plain Text fields are now sortable in the control panel. ([#5819](https://github.com/craftcms/cms/issues/5819))\n- Relational fields now have a \u201cShow the site menu\u201d setting. ([#5864](https://github.com/craftcms/cms/issues/5864))\n- Date/Time fields now have \u201cMin Date\u201d and \u201cMax Date\u201d settings. ([#6241](https://github.com/craftcms/cms/issues/6241))\n- When creating a new field, the \u201cUse this field\u2019s values as search keywords?\u201d setting is now disabled by default. ([#6390](https://github.com/craftcms/cms/issues/6390))\n- Sections\u2019 \u201cEntry URI Format\u201d settings now have placeholder text indicating that the the input should be left blank if entries don\u2019t have URLs. ([#6527](https://github.com/craftcms/cms/issues/6527))\n- Quick Post widgets now have a \u201cSite\u201d setting. ([#5253](https://github.com/craftcms/cms/issues/5253))\n- Craft now supports running migrations for custom migration tracks. ([#6172](https://github.com/craftcms/cms/issues/6172))\n- Extra entry revisions (per the `maxRevisions` config setting) are now pruned via a background job. ([#5902](https://github.com/craftcms/cms/issues/5902))\n- Database backups created by the Database Backup utility are now saved as zip files. ([#5822](https://github.com/craftcms/cms/issues/5822))\n- It\u2019s now possible to specify aliases when eager loading elements via the `with` param. ([#5793](https://github.com/craftcms/cms/issues/5793))\n- It\u2019s now possible to use aliases when eager loading elements via GraphQL. ([#5481](https://github.com/craftcms/cms/issues/5481))\n- It\u2019s now possible to eager-load elements\u2019 ancestors and parents. ([#1382](https://github.com/craftcms/cms/issues/1382))\n- The `cpTrigger` config setting can now be set to `null`. ([#5122](https://github.com/craftcms/cms/issues/5122))\n- The `pathParam` config setting can now be set to `null`. ([#5676](https://github.com/craftcms/cms/issues/5676))\n- If the `baseCpUrl` config setting is set, Craft will no longer treat any other base URLs as control panel requests, even if they contain the correct trigger segment. ([#5860](https://github.com/craftcms/cms/issues/5860))\n- The `backup` command now has an `--overwrite` flag that can be passed to overwrite existing backup files for non-interactive shells.\n- The `backup` command now has a `--zip` flag that can be passed to store the backup as a zip file. ([#6335](https://github.com/craftcms/cms/issues/6335))\n- The `mailer/test` command now only supports testing the current email settings.\n- The `project-config/sync` command has been renamed to `project-config/apply`.\n- `migrate` commands now have a `--track` option, which can be set to `craft`, `content`, or a custom migration track name.\n- Reference tags can now provide a fallback value to be used if the reference can\u2019t be resolved. ([#5589](https://github.com/craftcms/cms/issues/5589))\n- Front-end asset forms can now set a hashed `assetVariable` param, to customize the name of the variable that the asset should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- Front-end category forms can now set a hashed `categoryVariable` param, to customize the name of the variable that the category should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- Front-end entry forms can now set a hashed `entryVariable` param, to customize the name of the variable that the entry should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- Front-end user forms can now set a hashed `userVariable` param, to customize the name of the variable that the user should be passed back to the template as, if it contains any validation errors. ([#6240](https://github.com/craftcms/cms/issues/6240))\n- It\u2019s no longer necessary to append the `|raw` filter after the `|namespace` filter.\n- The `|namespace` Twig filter now namespaces ID selectors within `<style>` tags. ([#5921](https://github.com/craftcms/cms/issues/5921))\n- The `|namespace` Twig filter now has a `withClasses` argument, which if set to `true` causes `class` attributes and class name CSS selectors within `<style>` tags to be namespaced. ([#5921](https://github.com/craftcms/cms/issues/5921))\n- The `{% namespace %}` Twig tag can now have a `withClasses` flag, which causes `class` attributes and class name CSS selectors within `<style>` tags to be namespaced. ([#5921](https://github.com/craftcms/cms/issues/5921))\n- Element queries\u2019 `siteId` params can now be set to an array that begins with `'not'` to exclude specific site IDs.\n- The `withTransforms` asset query param can now include `srcset`-style sizes (e.g. `100w` or `2x`), following a normal transform definition.\n- The `QueryArgument` GraphQL type now also allows boolean values.\n- Improved eager loading support when querying for image transforms via GraphQL.\n- Users\u2019 photos are now eager-loaded when queried via GraphQL.\n- It\u2019s now possible to register template roots without a template prefix. ([#6015](https://github.com/craftcms/cms/issues/6015))\n- It\u2019s now possible to register multiple directories per template root. ([#6015](https://github.com/craftcms/cms/issues/6015))\n- It\u2019s now possible to pass `type`, `status`, `title`, `slug`, `postDate`, `expiryDate`, and custom field query string params to the new entry URL, to set the default entry values (e.g. `/admin/entries/locations/new?phone=555-0123`).\n- Lightswitch inputs can now have labels, like checkboxes.\n- Clicking on a Lightswitch field\u2019s label will now set focus to the lightswitch.\n- Improved the focus styling for relational fields. ([#6002](https://github.com/craftcms/cms/issues/6002))\n- Matrix blocks\u2019 action menus now include \u201cMove up\u201d and \u201cMove down\u201d options. ([#1035](https://github.com/craftcms/cms/issues/1035))\n- Improved support for eager loading elements across multiple sites at once.\n- All built-in success/fail flash messages are now customizable by passing a hashed `successMessage`/`failMessage` param with the request. ([#6192](https://github.com/craftcms/cms/issues/6192))\n- \u201cResaving elements\u201d jobs no longer ignore the `offset`, `limit`, and `orderBy` params specified by the criteria.\n- Craft now uses `yii\\mutex\\MysqlMutex` or `yii\\mutex\\PgsqlMutex` for mutex locking by default.\n- Database backups are now named in the format `system-name--YYYY-MM-DD-HHMMSS--vX.Y.Z.sql`. ([#6231](https://github.com/craftcms/cms/issues/6231))\n- The `app/migrate` action no longer applies project config file changes by default, unless `?applyProjectConfigChanges=1` is passed.\n- The `graphql/api` and `live-preview/preview` actions no longer add CORS headers that were already set on the response. ([#6355](https://github.com/craftcms/cms/issues/6355))\n- `craft\\base\\ConfigurableComponent::getSettings()` now converts `DateTime` attributes returned from `datetimeAttributes()` into ISO-8601 strings.\n- `craft\\base\\Element::getRoute()` now returns the route defined by `craft\\events\\SetElementRouteEvent::$route` even if it\u2019s null, as long as `SetElementRouteEvent::$handled` is set to `true`.\n- `craft\\base\\ElementInterface::sortOptions()` now allows the returned `orderBy` key to be set to an array of column names.\n- `craft\\base\\SavableComponent::isSelectable()` has been moved into the base component class, `craft\\base\\Component`.\n- `craft\\base\\SavableComponentInterface::isSelectable()` has been moved into the base component interface, `craft\\base\\ComponentInterface`.\n- `craft\\base\\SortableFieldInterface::getSortOption()` now allows the returned `orderBy` key to be set to an array of column names.\n- `craft\\behaviors\\SessionBehavior::setNotice()` and `setError()` now store flash messages using `cp-notice` and `cp-error` keys when called from control panel requests. ([#5704](https://github.com/craftcms/cms/issues/5704))\n- `craft\\db\\ActiveRecord` now unsets any empty primary key values when saving new records, to avoid a SQL error on PostgreSQL. ([#5814](https://github.com/craftcms/cms/pull/5814))\n- `craft\\elements\\Asset::getImg()` now has a `$sizes` argument. ([#5774](https://github.com/craftcms/cms/issues/5774))\n- `craft\\elements\\Asset::getUrl()` now supports including a `transform` key in the `$transform` argument array, which specifies a base transform. ([#5853](https://github.com/craftcms/cms/issues/5853))\n- `craft\\elements\\db\\ElementQuery::$enabledForSite` is now set to `false` by default, leaving it up to elements\u2019 status conditions to factor in the site-specific element statuses. ([#6273](https://github.com/craftcms/cms/issues/6273))\n- `craft\\helpers\\Component::createComponent()` now creates component objects via `Craft::createObject()`. ([#6097](https://github.com/craftcms/cms/issues/6097))\n- `craft\\helpers\\ElementHelper::supportedSitesForElement()` now has a `$withUnpropagatedSites` argument.\n- `craft\\helpers\\StringHelper::randomString()` no longer includes capital letters or numbers by default.\n- `craft\\i18n\\Formatter::asTimestamp()` now has a `$withPreposition` argument.\n- `craft\\services\\ElementIndexes::getAvailableTableAttributes()` no longer has an `$includeFields` argument.\n- `craft\\services\\Fields::getFieldByHandle()` now has an optional `$context` argument.\n- `craft\\services\\Gql::setCachedResult()` now has a `$dependency` argument.\n- `craft\\services\\Gql` now fires a `registerGqlMutations` event that allows for plugins to register their own GraphQL mutations.\n- `craft\\services\\ProjectConfig::areChangesPending()` now has a `$force` argument.\n- `craft\\services\\Sites::getAllSiteIds()`, `getSiteByUid()`, `getAllSites()`, `getSitesByGroupId()`, `getSiteById()`, and `getSiteByHandle()` now have `$withDisabled` arguments.\n- `craft\\services\\TemplateCaches::startTemplateCache()` no longer has a `$key` argument.\n- `craft\\web\\Controller::requireAcceptsJson()` no longer throws an exception for preflight requests.\n- Improved `data`/`aria` tag normalization via `craft\\helpers\\Html::parseTagAttributes()` and `normalizeTagAttributes()`.\n- Control panel form input macros and templates that accept a `class` variable can now pass it as an array of class names.\n- Radio groups in the control panel can now toggle other UI elements, like select inputs.\n- Control panel templates can now set a `formActions` variable, which registers alternative Save menu actions, optionally with associated keyboard shortcuts.\n- Control panel templates that support the <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> keyboard shortcut can now have the browser retain its scroll position on the next page load by setting `retainScrollPosOnSaveShortcut = true`, or including `retainScroll: true` in a `formActions` object. ([#6513](https://github.com/craftcms/cms/issues/6513))\n- The `_layouts/base` template now supports a `bodyAttributes` variable.\n- Control panel settings pages registered via `craft\\web\\twig\\variables\\Cp::EVENT_REGISTER_CP_SETTINGS` can now specify their icon path with an `iconMask` key, which will have it filled in with the same color as Craft\u2019s built-in settings icons.\n- The `Craft.cp.submitPrimaryForm()` method now accepts an `options` argument for customizing the form submit.\n- New installs now set the primary site\u2019s base URL to a `PRIMARY_SITE_URL` environment variable, rather than `DEFAULT_SITE_URL`.\n- Updated Yii to 2.0.36.\n- Updated Composer to 1.10.10. ([#5925](https://github.com/craftcms/cms/pull/5925))\n- Updated PrismJS to 1.20.0.\n- Updated voku/stringy to ^6.2.2. ([#5989](https://github.com/craftcms/cms/issues/5989))\n\n### Deprecated\n- Deprecated the `project-config/sync` command. `project-config/apply` should be used instead.\n- Deprecated the `useCompressedJs` config setting.\n- Deprecated the `useProjectConfigFile` config setting.\n- Deprecated the `install/plugin` command. `plugin/install` should be used instead.\n- Deprecated the `|filterByValue` Twig filter. `|where` should be used instead.\n- Deprecated the `|ucwords` Twig filter. `|title` should be used instead.\n- Deprecated the `class` argument of the `svg()` Twig function. The `|attr` filter should be used instead.\n- Deprecated the `--type` option on `migrate` commands. `--track` or `--plugin` should be used instead.\n- Deprecated `craft\\db\\Table::TEMPLATECACHEELEMENTS`.\n- Deprecated `craft\\db\\Table::TEMPLATECACHEQUERIES`.\n- Deprecated `craft\\db\\Table::TEMPLATECACHES`.\n- Deprecated `craft\\elements\\actions\\DeepDuplicate`.\n- Deprecated `craft\\elements\\db\\ElementQuery::$enabledForSite`.\n- Deprecated `craft\\elements\\db\\ElementQuery::enabledForSite()`.\n- Deprecated `craft\\events\\RegisterGqlPermissionsEvent`. `craft\\events\\RegisterGqlSchemaComponentsEvent` should be used instead.\n- Deprecated `craft\\gql\\base\\Resolver::extractEagerLoadCondition()`. `ElementQueryConditionBuilder` should be used instead.\n- Deprecated `craft\\helpers\\App::mutexConfig()`.\n- Deprecated `craft\\helpers\\ElementHelper::createSlug()`. `normalizeSlug()` should be used instead.\n- Deprecated `craft\\helpers\\Stringy`.\n- Deprecated `craft\\queue\\jobs\\DeleteStaleTemplateCaches`.\n- Deprecated `craft\\services\\ElementIndexes::getAvailableTableFields()`. `getSourceTableAttributes()` should be used instead.\n- Deprecated `craft\\services\\Fields::assembleLayout()`.\n- Deprecated `craft\\services\\Gql::getAllPermissions()`. `craft\\services\\Gql::getAllSchemaComponents()` should be used instead.\n- Deprecated `craft\\services\\ProjectConfig::CONFIG_ALL_KEY`.\n- Deprecated `craft\\services\\ProjectConfig::CONFIG_KEY`.\n- Deprecated `craft\\services\\TemplateCaches::deleteAllCaches()`. `craft\\services\\Elements::invalidateAllCaches()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCacheById()`.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElement()`. `craft\\services\\Elements::invalidateCachesForElement()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElementId()`. `craft\\services\\Elements::invalidateCachesForElement()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElementQuery()`. `craft\\services\\Elements::invalidateCachesForElementType()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByElementType()`. `craft\\services\\Elements::invalidateCachesForElementType()` should be used instead.\n- Deprecated `craft\\services\\TemplateCaches::deleteCachesByKey()`.\n- Deprecated `craft\\services\\TemplateCaches::deleteExpiredCaches()`.\n- Deprecated `craft\\services\\TemplateCaches::deleteExpiredCachesIfOverdue()`.\n- Deprecated `craft\\services\\TemplateCaches::EVENT_AFTER_DELETE_CACHES`.\n- Deprecated `craft\\services\\TemplateCaches::EVENT_BEFORE_DELETE_CACHES`.\n- Deprecated `craft\\services\\TemplateCaches::handleResponse()`.\n- Deprecated `craft\\services\\TemplateCaches::includeElementInTemplateCaches()`.\n- Deprecated `craft\\services\\TemplateCaches::includeElementQueryInTemplateCaches()`.\n- Deprecated `craft\\web\\AssetBundle::dotJs()`.\n- Deprecated `craft\\web\\AssetBundle::useCompressedJs()`.\n- Deprecated `craft\\web\\User::destroyDebugPreferencesInSession()`.\n- Deprecated `craft\\web\\User::saveDebugPreferencesToSession()`.\n- Deprecated `craft\\web\\View::formatInputId()`. `craft\\helpers\\Html::namespaceHtml()` should be used instead.\n\n### Removed\n- Removed the \u201cTemplate caches\u201d option from the Clear Caches tool and `clear-caches` command.\n- Removed the [Interactive Shell Extension for Yii 2](https://github.com/yiisoft/yii2-shell), as it\u2019s now a dev dependency of the `craftcms/craft` project instead. ([#5783](https://github.com/craftcms/cms/issues/5783))\n- Removed support for the `import` directive in project config files.\n- Removed the `cacheElementQueries` config setting.\n- Removed the `entries/_fields.html` control panel template.\n- Removed the `entries/_titlefield.html` control panel template.\n- Removed `craft\\controllers\\UtilitiesController::actionDbBackupPerformAction()`.\n- Removed `craft\\db\\MigrationManager::TYPE_APP`.\n- Removed `craft\\db\\MigrationManager::TYPE_CONTENT`.\n- Removed `craft\\db\\MigrationManager::TYPE_PLUGIN`.\n- Removed `craft\\models\\EntryType::$titleLabel`.\n- Removed `craft\\models\\Info::$configMap`.\n- Removed `craft\\records\\Migration`.\n- Removed `craft\\records\\Plugin::getMigrations()`.\n\n### Fixed\n- Fixed a bug where the `mailer/test` command wasn\u2019t factoring in custom `mailer` configurations in its settings report. ([#5763](https://github.com/craftcms/cms/issues/5763))\n- Fixed a bug where some characters were getting double-encoded in Assets fields\u2019 \u201cDefault Upload Location\u201d/\u201cUpload Location\u201d setting. ([#5885](https://github.com/craftcms/cms/issues/5885))\n- Fixed a bug where the `svg()` Twig function wasn\u2019t namespacing ID and class name CSS selectors that didn\u2019t have any matching `id`/`class` attribute values. ([#5922](https://github.com/craftcms/cms/issues/5922))\n- Fixed a bug where `users/set-password` and `users/verify-email` requests weren\u2019t responding with JSON when requested, if an invalid verification code was passed. ([#5210](https://github.com/craftcms/cms/issues/5210))\n- Fixed a bug where it wasn\u2019t possible to filter elements using a Lightswitch field via GraphQL. ([#5930](https://github.com/craftcms/cms/issues/5930))\n- Fixed an error that could occur when saving template caches. ([#2674](https://github.com/craftcms/cms/issues/2674))\n- When previewing an image asset on a non-public volume, the image is no longer published to the `cpresources` folder. ([#6093](https://github.com/craftcms/cms/issues/6093)\n- Fixed a bug where Entry Edit pages would start showing a tab bar after switching entry types, even if the new entry type only had one content tab.\n- Fixed a SQL error that could occur when applying project config changes due to unique constraints. ([#5946](https://github.com/craftcms/cms/issues/5946))\n- Fixed a bug where element actions weren\u2019t always getting configured properly if an element type defined multiple actions of the same type.\n- Fixed a browser console warning about `axios.min.map` not loading. ([#6506](https://github.com/craftcms/cms/issues/6506))\n- Fixed a SQL error that could occur when updating to Craft 3 from Craft 2.6.2984 or later, if there were multiple routes with the same URI pattern.\n- Fixed a bug where Craft was exiting with a 200 status code if the `license.key` file didn\u2019t contain a valid license key, and wasn\u2019t writable. ([#6475](https://github.com/craftcms/cms/issues/6475))\n- Fixed a PHP error that would occur when calling `craft\\web\\User::guestRequired()` if a user was logged in. ([#6497](https://github.com/craftcms/cms/issues/6497))\n- Fixed an error that occurred if a user photo was deleted and replaced in the same request. ([#6491](https://github.com/craftcms/cms/issues/6491))\n- Fixed a bug where `craft\\web\\Request::getFullPath()` wasn\u2019t including any URI segments defined by the site\u2019s base URL. ([#6546](https://github.com/craftcms/cms/issues/6546))\n\n### Security\n- The `_includes/forms/checkbox.html`, `checkboxGroup.html`, and `checkboxSelect.html` control panel templates now HTML-encode checkbox labels by default, preventing possible XSS vulnerabilities. If HTML code was desired, it must be passed through the new `raw()` function first.\n- `craft\\web\\View::evaluateDynamicContent()` can no longer be called by default. ([#6185](https://github.com/craftcms/cms/pull/6185))\n\n## 3.4.30 - 2020-07-28\n\n### Changed\n- Improved support for nesting Matrix fields within other fields.\n\n### Fixed\n- Fixed a bug where assets uploaded by front-end entry forms weren\u2019t getting saved with the `uploaderId` attribute. ([#6456](https://github.com/craftcms/cms/issues/6456))\n- Fixed a bug where Matrix blocks weren\u2019t always propagating to newly-enabled sites right away.\n\n## 3.4.29.1 - 2020-07-22\n\n### Fixed\n- Fixed a bug where the `entries/save-entry` action wasn\u2019t working for updating existing entries on front-end forms. ([#6430](https://github.com/craftcms/cms/issues/6430))\n\n## 3.4.29 - 2020-07-21\n\n### Added\n- Added `craft\\errors\\ElementException`.\n- Added `craft\\errors\\UnsupportedSiteException`.\n- Added `craft\\services\\Path::getTestsPath()`.\n\n### Changed\n- `craft\\services\\Elements` methods now throw `craft\\errors\\UnsupportedSiteException` errors when attempting to perform an element operation for an unsupported site.\n\n### Fixed\n- Fixed a bug where entry data could get corrupted when a newly-created draft was autosaved. ([#6344](https://github.com/craftcms/cms/issues/6344))\n- Fixed a PHP error that would occur when using the `craft fixture` console command. ([#6331](https://github.com/craftcms/cms/issues/6331))\n- Fixed a bug where requesting an asset transform via GraphQL API would ignore the `transformGifs` config setting. ([#6407](https://github.com/craftcms/cms/issues/6407))\n- Fixed a bug where \u201cApplying new propagation method to Matrix blocks\u201d jobs could fail if a Matrix block existed for a site that its owner didn\u2019t support.\n\n## 3.4.28.1 - 2020-07-16\n\n### Fixed\n- Fixed a PHP error that occurred when attempting to create a volume folder that already exists.\n\n## 3.4.28 - 2020-07-16\n\n### Added\n- Added the `inlineOnly` argument to the `markdown` GraphQL directive, which can be used to specify that only inline element markdown should be processed. ([#6353](https://github.com/craftcms/cms/pull/6353))\n- Added `craft\\services\\AssetIndexer::deleteStaleIndexingData()`.\n\n### Changed\n- Craft no longer throws an exception when attempting to create a volume folder that already exists. ([#6394](https://github.com/craftcms/cms/issues/6394))\n- Improved error handling when asset transform generation fails. ([#6357](https://github.com/craftcms/cms/issues/6357))\n\n### Fixed\n- Fixed compatibility with MySQL 8.0.21. ([#6379](https://github.com/craftcms/cms/issues/6379))\n- Fixed an error that would occur when backing up a MySQL 5 database using `mysqldump` v8. ([#6368](https://github.com/craftcms/cms/issues/6368))\n- Fixed a bug where rebuilding the project config without an existing `project.yaml` file could result in data loss. ([#6350](https://github.com/craftcms/cms/issues/6350))\n- Fixed a bug where eager loading relations across multiple sites wasn\u2019t working. ([#6366](https://github.com/craftcms/cms/issues/6366))\n- Fixed a bug where it was not always possible to use the `relatedToAll` argument with GraphQL queries. ([#6343](https://github.com/craftcms/cms/issues/6343))\n- Fixed a bug where orphan rows could be left in the `elements` table after deleting an asset folder. ([#6326](https://github.com/craftcms/cms/issues/6326))\n- Fixed a bug where the asset indexer would wasn\u2019t skipping files with disallowed file extensions.\n- Fixed a bug where the asset indexer wasn\u2019t handling missing volume folders properly.\n- Fixed a bug where the asset indexer wasn\u2019t cleaning up after itself.\n- Fixed a bug where the Asset Indexes utility could display a \u201cDelete them\u201d button even if there were no files or folders to delete.\n- Fixed a bug where the \u201cDrafts\u201d status option wasn\u2019t showing up on the Entries index page, if unsaved entry drafts only existed in a non-primary site. ([#6370](https://github.com/craftcms/cms/issues/6370))\n- Fixed a bug where Live Preview wouldn\u2019t open after it had been previously closed, if the active target was configured with `refresh: false`. ([#6356](https://github.com/craftcms/cms/issues/6356))\n- Fixed a bug where it wasn\u2019t possible to change a disabled plugin\u2019s license key. ([#4525](https://github.com/craftcms/cms/issues/4525))\n- Fixed a bug where all Title fields within Quick Post widgets had the same input ID.\n- Fixed a bug where `craft\\helpers\\FileHelper::getMimeType()` could return the wrong MIME type for SVG files. ([#6351](https://github.com/craftcms/cms/issues/6351))\n- Fixed a bug where the `setup/db-creds` command was ignoring the `port` option. ([#6339](https://github.com/craftcms/cms/issues/6339))\n- Fixed a bug where it wasn\u2019t possible to install a plugin via the `install/plugin` command when the `allowAdminChanges` config setting was disabled. ([#6329](https://github.com/craftcms/cms/issues/6329))\n- Fixed a bug where site-specific tests were not able to properly use `craft\\test\\fixtures\\elements\\AssetFixture`. ([#6309](https://github.com/craftcms/cms/issues/6309))\n- Fixed a PHP error that could occur when using `craft\\test\\TestMailer` in some scenarios. ([#6259](https://github.com/craftcms/cms/issues/6259))\n\n## 3.4.27 - 2020-07-03\n\n### Changed\n- Improved the performance of structured element index views.\n\n### Fixed\n- Fixed a bug where Structure section entries would get repositioned after a revision was reverted. ([#6313](https://github.com/craftcms/cms/issues/6313))\n- Fixed an unexpected PHP error that could occur if `craft\\helpers\\FileHelper::writeToFile()` was unable to acquire a lock. ([#6315](https://github.com/craftcms/cms/issues/6315))\n- Fixed a bug where eager loading from GraphQL could break if using named fragments inside matrix fields. ([#6294](https://github.com/craftcms/cms/issues/6294))\n- Fixed a bug where associative array values within the project config could get duplicated. ([#6317](https://github.com/craftcms/cms/issues/6317))\n\n## 3.4.26 - 2020-07-01\n\n### Added\n- Added the `utils/repair/project-config` command, which repairs double-packed associative arrays in the project config. ([#5533](https://github.com/craftcms/cms/issues/5533))\n\n### Changed\n- The `graphql/api` action now checks for the access token in all `Authorization` headers, as well as all comma-separated values in each individual `Authorization` header.\n- The `users/set-password` and `users/save-user` actions now include a `csrfTokenValue` key in their JSON responses for Ajax requests, if the user was logged in during the request. ([#6283](https://github.com/craftcms/cms/issues/6283))\n- Improved performance when handling asset uploads that conflict with an existing file. ([#6253](https://github.com/craftcms/cms/issues/6253))\n- `craft\\elements\\User::getCpEditUrl()` no longer returns `myaccount` for the currently logged-in user when the method is called from the front end. ([#6275](https://github.com/craftcms/cms/issues/6275))\n- `craft\\elements\\Asset::getUrl()` now has a `$generateNow` argument. ([#2103](https://github.com/craftcms/cms/issues/2103))\n\n### Fixed\n- Fixed a JavaScript error that occurred when clicking the \u201cExport\u2026\u201d button, on a view that had no bulk actions. ([#6183](https://github.com/craftcms/cms/issues/6183))\n- Fixed a bug where custom field values could be autosaved incorrectly. ([#6258](https://github.com/craftcms/cms/issues/6258))\n- Fixed a PHP error that could occur when saving a GraphQL schema, if there were any validation errors.\n- Fixed a bug where Craft\u2019s `TestMailer` class was not available for tests under some cicrumstances. ([#6263](https://github.com/craftcms/cms/pull/6263))\n- Fixed a bug where clicking the info icons on the Clear Caches utility would toggle their checkbox\u2019s state.\n- Fixed a bug where Matrix blocks could be duplicated after a new site was added, when they should have been propagated from a preexisting site instead. ([#6244](https://github.com/craftcms/cms/issues/6244))\n- Fixed a bug where it wasn\u2019t possible to revoke all permissions from a user. ([#6292](https://github.com/craftcms/cms/issues/6292))\n- Fixed a bug where Craft wasn\u2019t saving new search indexes after a new site was added to a section. ([#6296](https://github.com/craftcms/cms/issues/6296))\n- Fixed a bug where it was possible for associative arrays in the project config to get double-packed, resulting in nested `__assoc__` keys. ([#5533](https://github.com/craftcms/cms/issues/5533))\n- Fixed a bug where `index-assets` commands would error out if a file was moved/deleted within the volume after the index process had started. ([#6291](https://github.com/craftcms/cms/issues/6291))\n\n## 3.4.25 - 2020-06-23\n\n### Added\n- Added the `setup/app-id` command. ([#6249](https://github.com/craftcms/cms/issues/6249))\n- Added `craft\\db\\PrimaryReplicaTrait`, which adds `primary`/`replica` properties and methods to `craft\\db\\Connection`, as alternatives to `master`/`slave`. ([yiisoft/yii2#18102](https://github.com/yiisoft/yii2/pull/18102))\n\n### Changed\n- Element query `title` params are now case-insensitive.\n- `craft\\helpers\\Db::escapeParam()` now escapes operators.\n- The `templatecacheelements` table now has a primary key on new installs. ([#6246](https://github.com/craftcms/cms/issues/6246))\n\n### Fixed\n- Fixed a bug where new user groups weren\u2019t getting set on user accounts in time for activation email templates to reference them. ([#6225](https://github.com/craftcms/cms/issues/6225))\n- Fixed an error that occurred when adding multiple tags that began with the word \u201cnot\u201d.\n- Fixed a bug where it was possible to create two tags with the same title, but different casing. ([#6229](https://github.com/craftcms/cms/issues/6229))\n- Fixed a bug where the `migrate/all` command would create a `migrations/` folder for no good reason. ([#6220](https://github.com/craftcms/cms/issues/6220))\n- Fixed an error that could occur during installation, if an old database schema data was cached.\n- Fixed a bug where transform aspect ratios could be ignored. ([#6084](https://github.com/craftcms/cms/issues/6084))\n- Fixed a bug where no sections or category groups were considered \u201ceditable\u201d, and no volumes were considered \u201cviewable\u201d for console requests. ([#6237](https://github.com/craftcms/cms/issues/6237))\n- Fixed an error that could occur when syncing the project config, if a Single entry didn\u2019t validate due to a duplicate URI. ([#4369](https://github.com/craftcms/cms/issues/4369))\n- Fixed a bug where a \u201cCouldn\u2019t change Craft CMS edition\u201d notice would be displayed after successfully switching the Craft edition.\n- Fixed a bug where Structure section entries would get repositioned after their draft was published. ([#6250](https://github.com/craftcms/cms/issues/6250))\n\n## 3.4.24 - 2020-06-16\n\n### Added\n- Added the `utils/repair/section-structure` and `utils/repair/category-group-structure` commands, which can be used to repair structure data, or apply a new Max Levels setting to existing elements.\n- Added `craft\\console\\controllers\\utils\\RepairController`.\n- Added `craft\\controllers\\DashboardController::actionCacheFeedData()`.\n- Added `craft\\fields\\BaseOptionsField::options()`.\n\n### Changed\n- `graphql/api` preflight requests now include `X-Craft-Token` in the `Access-Control-Allow-Headers` response header. ([#6207](https://github.com/craftcms/cms/issues/6207))\n- `craft\\services\\Elements::duplicateElements()` no longer attempts to insert duplicated elements into the source element\u2019s structure, if the duplicated element doesn\u2019t have a `structureId`. ([#6205](https://github.com/craftcms/cms/issues/6205))\n\n### Deprecated\n- Deprecated support for passing a `userRegisteredNotice` param to `users/save-user` actions. A hashed `successMessage` param should be passed instead. ([#6192](https://github.com/craftcms/cms/issues/6192))\n- Deprecated `craft\\controllers\\DashboardController::actionGetFeedItems()`.\n- Deprecated `craft\\fields\\BaseOptionsField::optionLabel()`.\n- Deprecated `craft\\services\\Feeds`.\n\n### Fixed\n- Fixed a bug where new entries that were saved with a disabled parent entry wouldn\u2019t get added to the structure, resulting in a 404 error when accessing their edit page. ([#6204](https://github.com/craftcms/cms/issues/6204))\n- Fixed a bug where the system could become unresponsive while loading feed data, if the feed\u2019s server was unresponsive.\n- Fixed a styling issue with the query dropdown menu in the GraphiQL client. ([#6215](https://github.com/craftcms/cms/issues/6215))\n- Fixed a bug where \u201cDeselect All\u201d buttons in user permission lists could enable group-defined permission. ([#6211](https://github.com/craftcms/cms/issues/6211))\n- Fixed an error that occurred when replacing an asset that conflicted with an existing file that was missing from the index. ([#6216](https://github.com/craftcms/cms/issues/6216))\n\n### Security\n- Fixed potential XSS vulnerabilities.\n\n## 3.4.23 - 2020-06-09\n\n### Added\n- Added `Craft.DraftEditor::pause()` and `resume()`, which should be called on the `window.draftEditor` instance (if it exists) before and after making DOM changes that don\u2019t happen immediately (e.g. after an animation has completed). ([#6154](https://github.com/craftcms/cms/issues/6154))\n\n### Changed\n- Improved the styling of Live Preview.\n- Local volumes now respect the `defaultFileMode` and `defaultDirMod` config settings. ([#4251](https://github.com/craftcms/cms/pull/4251))\n- Craft no longer logs unnecessary warnings when loading remote images\u2019 thumbnails. ([#6166](https://github.com/craftcms/cms/pull/6166))\n- Matrix fields no longer create default blocks if the field has any validation errors. ([#6173](https://github.com/craftcms/cms/issues/6173))\n- The `setup` command and web-based installer now set `DB_DRIVER`, `DB_SERVER`, `DB_PORT`, and `DB_DATABASE` environment variables, if a `DB_DSN` environment variable isn\u2019t already defined. ([#6159](https://github.com/craftcms/cms/issues/6159))\n\n### Fixed\n- Fixed a race condition that could result in lost Matrix content when a new Matrix block was added from Live Preview, under very specific conditions. ([#6154](https://github.com/craftcms/cms/issues/6154))\n- Fixed a bug where the built-in GraphQL client would not work on some environments.\n- Fixed a bug where newly-added entries and entry drafts wouldn\u2019t remember their new parent entry selection when published. ([#6168](https://github.com/craftcms/cms/issues/6168))\n- Fixed a bug where switching the site within an element selection modal would affect which site is shown by default on element index pages. ([#6174](https://github.com/craftcms/cms/issues/6174))\n- Fixed a bug where `setup` and `clear-caches` commands weren\u2019t respecting the `--color` option. ([#6178](https://github.com/craftcms/cms/issues/6178))\n- Fixed a bug where an exception message would be shown instead of the web-based installer on Craft Nitro.\n- Fixed an error that occurred when uploading an asset that conflicted with an existing file that was missing from the index. ([#6193](https://github.com/craftcms/cms/issues/6193))\n\n### Security\n- Fixed a server path disclosure bug in the control panel.\n\n## 3.4.22.1 - 2020-05-30\n\n### Added\n- Added `craft\\image\\SvgAllowedAttributes`.\n\n### Changed\n- SVG sanitization now allows the `filterUnits` attribute.\n\n### Fixed\n- Fixed an error that could occur when rendering field type settings, if the field\u2019s `getSettingsHtml()` method was expecting to be called from a Twig template.\n\n## 3.4.22 - 2020-05-29\n\n### Added\n- Added `craft\\controllers\\FieldsController::actionRenderSettings()`.\n- Added `craft\\web\\assets\\fieldsettings\\FieldSettingsAsset`.\n\n### Changed\n- Field settings are now lazy-loaded when the Field Type selection changes, improving the up-front load time of Edit Field pages. ([#5792](https://github.com/craftcms/cms/issues/5792))\n- The URL of the conflicting asset is now returned when uploading a file via the `assets/upload` action. ([#6158](https://github.com/craftcms/cms/issues/6158))\n- Craft no longer minifies JavaScript and CSS by default. ([#5792](https://github.com/craftcms/cms/issues/5792))\n\n### Deprecated\n- Deprecated `craft\\web\\assets\\positionselect\\PositionSelectAsset`.\n\n### Fixed\n- Fixed a PHP error that could occur when editing a non-image asset. ([#6162](https://github.com/craftcms/cms/issues/6162))\n- Fixed a bug where asset thumbnails could never load from Live Preview.\n\n## 3.4.21 - 2020-05-28\n\n### Added\n- Table fields and other editable tables now support pasting in tabular data. ([#1207](https://github.com/craftcms/cms/issues/1207))\n- Added the \u201cAllow self relations\u201d advanced setting to relational fields. ([#6113](https://github.com/craftcms/cms/issues/6113))\n- Added `craft\\helpers\\Assets::scaledDimensions()`.\n- Added `craft\\services\\Structures::MODE_AUTO`.\n- Added `craft\\services\\Structures::MODE_INSERT`.\n- Added `craft\\services\\Structures::MODE_UPDATE`.\n\n### Changed\n- Thumbnails now use the same aspect ratio as the source image. ([#5518](https://github.com/craftcms/cms/issues/5518), [#5515](https://github.com/craftcms/cms/issues/5515))\n- Thumbnails now get a checkered background to reveal image transparency. ([#6151](https://github.com/craftcms/cms/issues/6151))\n- Thumbnails in the control panel now only load once they are in view, or close to it. ([#6104](https://github.com/craftcms/cms/issues/6104))\n- Modal backdrops no longer blur the page content. ([#5651](https://github.com/craftcms/cms/issues/5651))\n- Date + time inputs now have a close button when they have a value. ([#6124](https://github.com/craftcms/cms/issues/6124))\n- The suggested filename is now returned when uploading a file via the `assets/upload` action. ([#6099](https://github.com/craftcms/cms/issues/6099))\n- Table fields now support setting cell values by column handle, rather than just by column ID. ([#6119](https://github.com/craftcms/cms/issues/6119))\n- `craft\\services\\Structures::append()` now allows an integer to be passed to its `$parentElement` argument.\n- `craft\\services\\Structures::moveAfter()` now allows an integer to be passed to its `$prevElement` argument.\n- `craft\\services\\Structures::moveBefore()` now allows an integer to be passed to its `$nextElement` argument.\n- `craft\\services\\Structures::prepend()` now allows an integer to be passed to its `$parentElement` argument.\n- `craft\\config\\DbConfig::$url`, `$driver`, `$server`, `$port`, `$unixSocket`, and `$database` are no longer deprecated. ([#6159](https://github.com/craftcms/cms/issues/6159))\n\n### Deprecated\n- Deprecated `craft\\db\\Connection::getVersion()`. `yii\\base\\Schema::getServerVersion()` should be used instead.\n- Deprecated `craft\\events\\GlobalSetContentEvent`.\n\n### Fixed\n- Fixed a bug where non-sortable fields could be listed as element index sort options, and sortable fields could be listed twice, for element types that didn\u2019t override the `defineSortOptions()` method.\n- Fixed a bug where asset custom field values could go unsaved. ([#6086](https://github.com/craftcms/cms/issues/6086))\n- Fixed a bug where the `upscaleImages` config setting wasn\u2019t applying properly. ([#6084](https://github.com/craftcms/cms/issues/6084))\n- Fixed a bug where image thumbnails in the control panel could stop loading if three thumbnails failed to load properly.\n- Fixed a bug where clicking on the color preview within Color fields wasn\u2019t opening the browser\u2019s color picker in Safari. ([#6107](https://github.com/craftcms/cms/issues/6107))\n- Fixed a bug where the \u201cPublish changes\u201d button label was not getting translated after clicking \u201cSave as a draft\u201d on an Edit Entry page. ([#6112](https://github.com/craftcms/cms/issues/6112))\n- Fixed a couple errors that could occur when running console commands via Cron. ([#6102](https://github.com/craftcms/cms/issues/6102))\n- Fixed a bug in test fixtures where primary keys were not being detected for relational fields. ([#6103](https://github.com/craftcms/cms/pull/6103))\n- Fixed a bug where duplicated Structure entries wouldn\u2019t retain the original entries\u2019 structure when a new propagation method was being applied to the section. ([#6115](https://github.com/craftcms/cms/issues/6115))\n- Fixed a bug where assets would cause n+1 queries even when eager-loaded. ([#6140](https://github.com/craftcms/cms/issues/6140))\n- Fixed a validation error that could occur when saving an element with a Dropdown field, if the value of the Dropdown field\u2019s first option had changed. ([#6148](https://github.com/craftcms/cms/issues/6148))\n- Fixed a bug where Craft was serving 503 errors instead of 403 when the system was online and an action was requested that didn\u2019t allow anonymous access. ([#6149](https://github.com/craftcms/cms/pull/6149))\n- Fixed a bug where Craft was not correctly encoding rounded float values for storage in project config. ([#6121](https://github.com/craftcms/cms/issues/6121))\n- Fixed a bug where progress bars in a pending state appeared to be fully complete. ([#6156](https://github.com/craftcms/cms/issues/6156))\n\n## 3.4.20 - 2020-05-18\n\n### Changed\n- The `users/login` action no longer adds a random delay to the request for successful login attempts. ([#6090](https://github.com/craftcms/cms/pull/6090))\n- `craft\\web\\View::renderObjectTemplate()` now supports wrapping function calls in single curly brace delimiters (e.g. `{clone(variable)}`).\n- Element fixtures now support the `field:handle` syntax when generating element queries. ([#5929](https://github.com/craftcms/cms/pull/5929))\n- \u201cFirst draft\u201d is now translatable. ([#6096](https://github.com/craftcms/cms/pull/6096))\n\n### Fixed\n- Fixed a bug where custom field names weren\u2019t getting translated in element index sort menus. ([#6073](https://github.com/craftcms/cms/issues/6073))\n- Fixed a bug where the Plugin Store could incorrectly report license key statuses. ([#6079](https://github.com/craftcms/cms/issues/6079))\n- Fixed an error that could occur when creating a new entry, if the section\u2019s Entry URI Format contained `{sourceId}`. ([#6080](https://github.com/craftcms/cms/issues/6080))\n- Fixed a bug where some UI elements were sized incorrectly while being dragged.\n- Fixed a bug where custom aliases were not automatically registered for tests. ([#5932](https://github.com/craftcms/cms/issues/5932))\n\n## 3.4.19.1 - 2020-05-13\n\n### Changed\n- Entries no longer apply their dynamic titles if the result of the Title Format is an empty string. ([#6051](https://github.com/craftcms/cms/issues/6051))\n\n### Fixed\n- Fixed a bug where the site selector wasn\u2019t working when adding related elements to a relational field.\n- Fixed an error that could occur when adding related elements to a relational field.\n\n## 3.4.19 - 2020-05-12\n\n### Added\n- Added `craft\\fields\\BaseRelationField::inputSiteId()`.\n- Added `craft\\helpers\\App::isNitro()`.\n\n### Changed\n- The web-based installer now defaults the database server to `127.0.0.1` instead of `localhost`.\n- The web-based installer and `setup` command now skip asking for the database server name/IP, username, and password, if they are able to detect that Craft is running within Nitro.\n- `craft\\web\\View::renderObjectTemplate()` now injects `{% verbatim %}` tags around inline code and code blocks, preventing their contents from being parsed by Twig.\n- Updated jQuery to 3.5.1. ([#6039](https://github.com/craftcms/cms/issues/6039))\n\n### Fixed\n- Fixed a 403 error that occurred when a user double-clicked on an asset immediately after selecting it in an Assets field, if they didn\u2019t have access to the primary site. ([#5949](https://github.com/craftcms/cms/issues/5949))\n- Fixed a bug where `resave/*` commands\u2019 output didn\u2019t take the limit into account. ([#6036](https://github.com/craftcms/cms/issues/6036))\n- Fixed an error that could occur when processing project config changes that included deleted user groups. ([#6011](https://github.com/craftcms/cms/issues/6011))\n- Fixed a bug where Date/Time fields weren\u2019t taking their \u201cShow date\u201d/\u201cShow time\u201d settings into account when displaying their values in element indexes. ([#6038](https://github.com/craftcms/cms/issues/6038))\n- Fixed a PHP error that occurred when requesting the GraphQL API with a token that didn\u2019t have a schema assigned to it. ([#6043](https://github.com/craftcms/cms/issues/6043))\n- Fixed a bug where Single sections\u2019 entry type handles weren\u2019t getting updated if both the section name and handle changed at the same time. ([#6044](https://github.com/craftcms/cms/issues/6044))\n- Fixed a bug where updating a transform would not bust the generated transform caches on volumes with the `expires` setting set.\n- Fixed a bug where it wasn\u2019t possible to create new Dashboard widgets that had settings.\n- Fixed a bug where relational fields weren\u2019t always showing related elements in the selected site on element indexes. ([#6052](https://github.com/craftcms/cms/issues/6052))\n- Fixed various UI bugs related to breaking changes in jQuery 3.5. ([#6049](https://github.com/craftcms/cms/issues/6049), [#6053](https://github.com/craftcms/cms/issues/6053))\n- Fixed a bug where disabled multi-site entries would become enabled if they became single-site entries per a change to their section\u2019s Propagation Method setting. ([#6054](https://github.com/craftcms/cms/issues/6054))\n- Fixed a bug where it wasn\u2019t possible to double-click on Single entries to edit them. ([#6058](https://github.com/craftcms/cms/issues/6058))\n- Fixed a bug where querying for disabled elements wouldn\u2019t include elements that were disabled for the current site.\n\n### Security\n- Fixed a bug where database connection details were getting cached. ([#6047](https://github.com/craftcms/cms/issues/6047))\n\n## 3.4.18 - 2020-05-05\n\n### Added\n- Added the \u201cDelete asset\u201d option to the Save menu on Edit Asset pages. ([#6020](https://github.com/craftcms/cms/issues/6020))\n- Added `craft\\helpers\\App::env()`. ([#5893](https://github.com/craftcms/cms/pull/5893))\n\n### Changed\n- Template autosuggest fields no longer suggest files within `node_modules/` folders. ([#4122](https://github.com/craftcms/cms/pull/4122))\n- Matrix fields now ensure that they have at least one block type on validation. ([#5996](https://github.com/craftcms/cms/issues/5996))\n- Number fields\u2019 Default Value, Min Value, and Max Value settings now support localized number formats. ([#6006](https://github.com/craftcms/cms/issues/6006))\n- Element select inputs\u2019 `selectElements` events now contain references to the newly created element, rather than the one in the element selector modal.\n- Users are now redirected back to the Assets index page after saving an asset from its edit page.\n- Updated Yii to 2.0.35.\n- Updated jQuery to 3.5.0.\n\n### Fixed\n- Fixed a bug where relational fields wouldn\u2019t eager load some relations if the field was set to manage relations on a per-site basis, and the source elements were from a variety of sites.\n- Fixed a bug where relational fields wouldn\u2019t eager load cross-site relations even if a target site had been selected in the field settings. ([#5995](https://github.com/craftcms/cms/issues/5995))\n- Fixed a bug where relational fields weren\u2019t showing cross-site relations in element indexes.\n- Fixed a bug where Assets fields weren\u2019t showing custom asset sources. ([#5983](https://github.com/craftcms/cms/issues/5983))\n- Fixed a bug where Craft wasn\u2019t clearing the database schema cache after migrations were run.\n- Fixed a bug where Structure entry drafts were including the current entry in the Parent selection options.\n- Fixed a bug where users\u2019 emails could be overridden by a previously-entered, unverified email, if an admin overwrote their email after it was set. ([#6001](https://github.com/craftcms/cms/issues/6001))\n- Fixed a bug where Number fields weren\u2019t ensuring that their Default Value setting was a number. ([#6006](https://github.com/craftcms/cms/issues/6006))\n- Fixed a bug where checkboxes\u2019 state persisted after an admin table row was deleted. ([#6018](https://github.com/craftcms/cms/issues/6018))\n- Fixed a bug where the `autoLoginAfterAccountActivation` and `activateAccountSuccessPath` config settings weren\u2019t being respected after users verified their email. ([#5980](https://github.com/craftcms/cms/issues/5980))\n- Fixed a bug where the \u201cPreview file\u201d asset action wasn\u2019t available if any other elements were being displayed in the table row (e.g. the file\u2019s uploader or any relations). ([#6012](https://github.com/craftcms/cms/issues/6012))\n- Fixed a bug where `update` commands could time out when running migrations or reverting Composer changes. ([#6021](https://github.com/craftcms/cms/pull/6021))\n- Fixed a bug where source/owner elements could be selectable in relational fields. ([#6016](https://github.com/craftcms/cms/issues/6016))\n- Fixed a bug where relational fields weren\u2019t ignoring disabled and soft-deleted elements when `:empty:` or `:notempty:` were passed to their element query params. ([#6026](https://github.com/craftcms/cms/issues/6026))\n- Fixed a bug where Matrix fields weren\u2019t ignoring disabled blocks when `:empty:` or `:notempty:` were passed to their element query params. ([#6026](https://github.com/craftcms/cms/issues/6026))\n\n## 3.4.17.1 - 2020-04-25\n\n### Fixed\n- Fixed a JavaScript error that occurred when attempting to save an asset from an element editor HUD. ([#5970](https://github.com/craftcms/cms/issues/5970))\n\n## 3.4.17 - 2020-04-24\n\n### Added\n- The control panel is now translated for Swiss German. ([#5957](https://github.com/craftcms/cms/issues/5957))\n\n### Changed\n- Craft now fully logs migration exceptions.\n\n### Fixed\n- Fix a bug where Project Config would not rebuild GraphQL schemas correctly. ([#5961](https://github.com/craftcms/cms/issues/5961))\n- Fixed an error that would occur when uploading an asset, if its `getUrl()` method was called before it was fully saved.\n- Fixed a bug where the `relatedTo` element query param wasn\u2019t filtering out relations that belonged to disabled Matrix blocks, if the relations were being fetched by the target element. ([#5951](https://github.com/craftcms/cms/issues/5951))\n- Fixed a bug where `craft\\base\\Element::getDescendants()` would return all descendants if they had been eager-loaded, even if the `$dist` argument was set.\n- Fixed a bug where element editor HUDs could forget to submit content changes if a validation error occurred. ([#5966](https://github.com/craftcms/cms/issues/5966))\n\n## 3.4.16 - 2020-04-20\n\n### Added\n- Added `craft\\events\\ElementCriteriaEvent`.\n- Added `craft\\fields\\BaseRelationField::EVENT_DEFINE_SELECTION_CRITERIA`. ([#4299](https://github.com/craftcms/cms/issues/4299))\n- Added `craft\\helpers\\FileHelper::unlink()`, ensuring that it always returns `false` rather than throwing unexpected exceptions.\n\n### Changed\n- Improved Plugin Store performance.\n- Asset indexes now show the \u201cLink\u201d column by default. ([#5910](https://github.com/craftcms/cms/pull/5910))\n- Element editors no longer close automatically when the <kbd>Esc</kbd> key is pressed or the shade is clicked on.\n- Element editors now support <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> save shortcuts.\n- Static element views now show custom fields\u2019 instructions. ([#5928](https://github.com/craftcms/cms/issues/5928))\n- When upgrading to Craft 3, sites now maintain the same UIDs as the Craft 2 locales they replace. ([#5914](https://github.com/craftcms/cms/issues/5914))\n- Craft now sets the `access-control-allow-origin` header to `*` rather than the incoming request\u2019s origin, for `graphql/api` and `live-preview/preview` requests. ([#4830](https://github.com/craftcms/cms/issues/4830))\n- Updated Garnish to 0.1.36.\n\n### Fixed\n- Fixed a bug where users weren\u2019t getting activated after verifying their email address, if a password was already set on their account. ([#5911](https://github.com/craftcms/cms/issues/5911))\n- Fixed an error that could occur when syncing a `project.yaml` file that restored a soft-deleted global set. ([#5915](https://github.com/craftcms/cms/issues/5915))\n- Fixed a bug where the `app/get-plugin-license-info` action was not parsing license key environment variables.\n- Fixed a bug where PHP would get itself into an infinite loop when minifying CSS with an unclosed block. ([#5912](https://github.com/craftcms/cms/issues/5912))\n- Fixed a bug where <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>S</kbd> save shortcuts would apply even if a modal or HUD was currently visible, potentially resulting in lost content changes. ([#5916](https://github.com/craftcms/cms/issues/5916))\n- Fixed an error that occurred when a user without permission to publish live entries attempted to create a new entry within an Entries field. ([#5917](https://github.com/craftcms/cms/issues/5917))\n- Fixed a bug where `craft\\services\\Assets::getFolderTreeByFolderId()` would ignore children folders. ([#5939](https://github.com/craftcms/cms/issues/5939))\n- Fixed a bug where it wasn\u2019t clear when a GraphQL token didn\u2019t have a selected schema, if its previous schema had been deleted. ([#5942](https://github.com/craftcms/cms/issues/5942))\n- Fixed a bug where the Plugin Store was not showing checkout errors.\n\n## 3.4.15 - 2020-04-09\n\n### Added\n- Categories now have a `url` field when queried via GraphQL.\n\n### Changed\n- Entry revision menus now list drafts sorted by date updated in descending order, and show the drafts\u2019 update timestamps. ([#5889](https://github.com/craftcms/cms/issues/5889))\n\n### Fixed\n- Fixed a bug where `craft\\i18n\\Formatter::asTimestamp()` and the `|timestamp` filter weren\u2019t returning weekday names for dates within the past 3-7 days.\n- Fixed a bug where `craft\\base\\Element::getCurrentRevision()` would return `null` when called on a draft or revision.\n- Fixed a bug where entry revision menus could list revisions out of order.\n\n## 3.4.14 - 2020-04-06\n\n### Added\n- Added the `setup/db-cache-table` command.\n- Added `craft\\cache\\DbCache`, which should be used instead of `yii\\caching\\DbCache` if storing data caches in the database. ([#5884](https://github.com/craftcms/cms/issues/5884))\n- Added `craft\\db\\Table::CACHE`.\n- Added `craft\\helpers\\Db::parseBooleanParam()`.\n\n### Changed\n- Craft now disables read/write splitting before applying new `project.yaml` changes. ([#5802](https://github.com/craftcms/cms/issues/5802))\n\n### Fixed\n- Fixed a PHP error that occurred when running the `project-config/rebuild` command, if no `project.yaml` file existed yet. ([#5888](https://github.com/craftcms/cms/pull/5888))\n- Fixed a bug where passing `'not 1'` or `:empty:` to a Lightswitch field\u2019s element query param would have the opposite effect that was intended. ([#5896](https://github.com/craftcms/cms/issues/5896))\n\n## 3.4.13 - 2020-04-02\n\n### Added\n- Added `craft\\models\\GqlToken::getIsValid()`.\n\n### Changed\n- Improved the 400 response messages returned by the `graphql/api` controller action, if the bearer token was missing or invalid.\n- Ajax requests sent with `Craft.sendActionRequest()` now have an `X-Requested-With: XMLHttpRequest` header. ([#5868](https://github.com/craftcms/cms/issues/5868))\n- `craft\\helpers\\Db::parseParam()` no longer assumes that `null` values within boolean columns should equate to `false`.\n\n### Fixed\n- Fixed a bug where Lightswitch element query params were filtering out entries that hadn\u2019t been saved since the Lightswitch field was added, if the field\u2019s default value was enabled. ([#5866](https://github.com/craftcms/cms/issues/5866))\n- Fixed an error that could occur if the `graphql/api` controller action wasn\u2019t able to determine which GraphQL schema to use.\n- Fixed an error that could occur when transforming images to exactly the same size. ([#5772](https://github.com/craftcms/cms/issues/5772))\n- Fixed an error that occurred when adding \u201cUpdating search indexes\u201d jobs to the queue, if the queue didn\u2019t support custom push priorities. ([#5876](https://github.com/craftcms/cms/issues/5876))\n\n## 3.4.12 - 2020-03-31\n\n### Added\n- Added the `utils/ascii-filenames` command, which converts all non-ASCII asset filenames to ASCII.\n- Added `craft\\services\\Deprecator::storeLogs()`.\n\n### Changed\n- \u201cUpdating search indexes\u201d jobs now get a lower priority than other jobs.\n- `craft\\base\\ApplicationTrait::getIsConnectionValid()` now logs exceptions thrown by `craft\\db\\Connection::open()`.\n- `craft\\base\\ApplicationTrait::getIsInstalled()` now logs exceptions thrown by `getInfo()`.\n- The `$siteId` argument of `craft\\services\\Elements::getElementById()` now accepts the same value types as element query `siteId` params. ([#5861](https://github.com/craftcms/cms/pull/5861))\n- It\u2019s no longer necessary to manually apply `craft\\behaviors\\SessionBehavior` to custom-defined `session` components, if using `craft\\helpers\\App::sessionConfig()` as a starting point.\n\n### Fixed\n- Fixed a bug where the `relatedTo` element query param wasn\u2019t filtering out relations that belonged to disabled Matrix blocks. ([#5849](https://github.com/craftcms/cms/issues/5849))\n- Fixed a bug where Craft wasn\u2019t ensuring that a `project.yaml` file exists before rebuilding the project config.\n- Fixed a bug where it was possible to create multiple tags with the same title. ([#5865](https://github.com/craftcms/cms/issues/5865))\n- Fixed a PHP error that occurred if any deprecated config settings were set.\n- Fixed a bug where the debug toolbar wasn\u2019t showing deprecation warnings if `craft\\services\\Deprecator::$logTarget` was set to `'logs'`.\n\n## 3.4.11 - 2020-03-26\n\n### Changed\n- Updated Yii to 2.0.34.\n\n### Fixed\n- Fixed an error that could occur during garbage collection if there were any unsaved drafts due to be purged, whose entry type had been deleted. ([#5820](https://github.com/craftcms/cms/issues/5820))\n- Fixed a bug where `craft\\helpers\\Console::outputWarning()` was mangling its output if the input text contained a line break.\n- Fixed a bug where activation emails were getting sent after user registration regardless of the \u201cSend an activation email now?\u201d setting, if the logged-in user didn\u2019t have permission to administrate users.\n- Fixed a bug where removing two elements from a relation field in rapid succession could trigger an element editor HUD. ([#5831](https://github.com/craftcms/cms/issues/5831))\n- Fixed a bug where setting a field\u2019s translation method to \u201cTranslate for each site group\u201d wouldn\u2019t work if the field type was changed at the same time. ([#5832](https://github.com/craftcms/cms/issues/5832))\n- Fixed a SQL error that could occur when installing Craft via the `craft setup` command, if using PostgreSQL. ([#5757](https://github.com/craftcms/cms/issues/5757))\n- Fixed a bug where content wasn\u2019t getting transferred correctly when deleting a user from the Users index page. ([#5838](https://github.com/craftcms/cms/issues/5838))\n\n## 3.4.10.1 - 2020-03-18\n\n### Fixed\n- Fixed an error that could occur when saving an asset. ([#5801](https://github.com/craftcms/cms/issues/5801))\n- Fixed a bug where field types\u2019 `afterSave()` methods weren\u2019t getting called if no top-level field settings had changed. ([#5803](https://github.com/craftcms/cms/issues/5803))\n\n## 3.4.10 - 2020-03-17\n\n### Added\n- Added `craft\\base\\Elements::markAsDirty()`.\n- Added `craft\\services\\Search::$useFullText`. ([#5696](https://github.com/craftcms/cms/issues/5696))\n\n### Changed\n- Category groups\u2019 category URI format settings are now shown when running Craft in headless mode. ([#5786](https://github.com/craftcms/cms/issues/5786))\n- Reduced the likelihood of a race condition that can result in a PHP error, if a request comes in between the time a field is saved with a new field handle, and the `info.fieldVersion` value is updated in the database. ([#5742](https://github.com/craftcms/cms/issues/5742))\n- `craft\\base\\ApplicationTrait::getIsInstalled()` now has a `$refresh` argument.\n- `craft\\base\\ApplicationTrait::saveInfo()` now has an `$attributeNames` argument.\n- The `$siteElement` argument of `craft\\services\\Elements::propagateElement()` can now be set to `false` to indicate that the element is known to not exist for the target site yet.\n- XML element exports now call all generic nodes `<item>`, instead of being named after the element type that is getting exported.\n- Updated Garnish to 0.1.34.\n\n### Fixed\n- Fixed a bug where a SQL deadlock could occur if two elements\u2019 relational field values were being saved simultaneously. ([#5745](https://github.com/craftcms/cms/pull/5745))\n- Fixed a bug where the Plugin Store was not showing validation errors during the payment process. ([#5728](https://github.com/craftcms/cms/issues/5728))\n- Fixed an error that could occur when processing project config changes that included newly created sites. ([#5790](https://github.com/craftcms/cms/issues/5790))\n- Fixed a bug where table cells with the `thin` class were wrapping. ([#5746](https://github.com/craftcms/cms/pull/5746))\n- Fixed a bug where Craft could think it was already installed after running the `setup` command, if it had been installed at the beginning of the request.\n- Fixed an error where applying changes to Matrix fields from the `project.yaml` file could result in the file being re-saved.\n- Fixed a bug where GraphQL cache was not invalidated when structured elements were rearranged. ([#5761](https://github.com/craftcms/cms/issues/5761))\n- Fixed a bug where lightswitch inputs would be unresponsive if they had been configured with `disabled` set to an empty, non-boolean value.\n- Fixed a bug where Edit Entry pages would often create a draft when clicking the \u201cPreview\u201d button even if nothing had changed, if there was a Redactor field or other field that was doing its own value normalization on page load.\n- Fixed a bug where Redactor fields weren\u2019t getting autofocused when a new Matrix block was added. ([#5773](https://github.com/craftcms/cms/issues/5773))\n- Fixed a \u201cDivision by zero\u201d error that occurred if an image didn\u2019t have a width or height.\n- Fixed a bug where Matrix and relational fields weren\u2019t getting propagated correctly for global sets, assets, categories, and tags, when a new site was added. ([#5775](https://github.com/craftcms/cms/issues/5775))\n- Fixed a bug where the `request` component could be loaded recursively in the event that a fatal error occurred during its initialization. ([#5788](https://github.com/craftcms/cms/issues/5788), [#5791](https://github.com/craftcms/cms/issues/5791))\n- Fixed a bug where it was possible to delete an autocreated Matrix block if the Min Blocks and Max Blocks settings were both set to the same value, and there was only one block type. ([#5781](https://github.com/craftcms/cms/issues/5781))\n- Fixed a bug where elements weren\u2019t styled correctly while dragging.\n\n## 3.4.9 - 2020-02-28\n\n### Fixed\n- Fixed a bug where relational fields weren\u2019t validating that their Limit setting was set to an integer. ([#5709](https://github.com/craftcms/cms/issues/5709))\n- Fixed a bug where structure data was getting joined into entry queries even if the `section` param was set to a non-Structure section. ([#5707](https://github.com/craftcms/cms/issues/5707))\n- Fixed a JavaScript error that occurred when attempting to set the cropping constraint using the image editor. ([#5718](https://github.com/craftcms/cms/issues/5718))\n- Fixed a SQL error that occurred when running the `utils/prune-revisions` command when using PostgreSQL. ([#5712](https://github.com/craftcms/cms/issues/5712))\n- Fixed a bug where root-level classes weren\u2019t properly namespaced in `CustomFieldBehavior.php` docblocks. ([#5716](https://github.com/craftcms/cms/issues/5716))\n- Fixed an error that could occur while installing Craft with an existing `project.yaml` file. ([#5697](https://github.com/craftcms/cms/issues/5697))\n- Fixed an error that could occur if a deprecation warning was logged with a message longer than 255 characters. ([#5738](https://github.com/craftcms/cms/issues/5738))\n\n## 3.4.8 - 2020-02-21\n\n### Added\n- Added the `withTransforms` argument to asset GraphQL queries, which can be used to specify image transforms that should be eager-loaded.\n- Added `craft\\controllers\\AssetsController::asBrokenImage()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requirePeerVolumePermissionByAsset()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requireVolumePermission()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requireVolumePermissionByAsset()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\controllers\\AssetsController::requireVolumePermissionByFolder()`. ([#5702](https://github.com/craftcms/cms/issues/5702))\n- Added `craft\\queue\\jobs\\ApplyNewPropagationMethod`.\n\n### Changed\n- When a section\u2019s Propagation Method setting changes, the section\u2019s entries are now duplicated into any sites where their content would have otherwise been deleted.\n- Craft now sends `X-Robots-Tag: none` headers back for all tokenized requests. ([#5698](https://github.com/craftcms/cms/issues/5698))\n\n### Deprecated\n- Deprecated `craft\\queue\\jobs\\ApplyMatrixPropagationMethod`.\n\n### Fixed\n- Fixed a bug where Craft could get itself in an unrecoverable state if a custom field\u2019s handle *and* type were changed at the same time, but the new field type\u2019s content column was incompatible with the existing field data.\n- Fixed a JavaScript error that occurred when displaying some charts in the control panel.\n\n## 3.4.7.1 - 2020-02-20\n\n### Fixed\n- Fixed an error that could occur on the Dashboard if there was a Quick Post widget that contained a Matrix field which contained an Assets field.\n\n## 3.4.7 - 2020-02-20\n\n### Added\n- Plugins can now modify GraphQL query variables and the operation name using the `craft\\services\\Gql::EVENT_BEFORE_EXECUTE_GQL_QUERY` event.\n\n### Changed\n- Improved the look of Matrix fields. ([#5652](https://github.com/craftcms/cms/issues/5652))\n\n### Fixed\n- Fixed an error that could occur in some cases when updating Craft from a previous 3.4.x version.\n- Fixed an error where the `dateModified` key would be missing from the project config when installing from scratch.\n- Fixed a bug where it wasn\u2019t possible to use GraphQL variables in sub-queries. ([#5645](https://github.com/craftcms/cms/issues/5645))\n- Fixed a bug where scalar database queries weren\u2019t reverting the query\u2019s `select`, `orderBy`, `limit`, and `offset` params back to their original values if an exception was thrown. ([#5690](https://github.com/craftcms/cms/issues/5690))\n- Fixed a bug where element titles within table views weren\u2019t wrapping. ([#5681](https://github.com/craftcms/cms/issues/5681))\n- Fixed a bug where element queries could return duplicate results on single-site installs that had a soft-deleted site. ([#5678](https://github.com/craftcms/cms/issues/5678))\n- Fixed an error that could occur during garbage collection if any unsaved entry drafts were missing their row in the `entries` table. ([#5684](https://github.com/craftcms/cms/issues/5684))\n- Fixed JavaScript errors that occurred in Safari 9 and 10. ([#5671](https://github.com/craftcms/cms/issues/5671))\n- Fixed a bug where some fields\u2019 default values weren\u2019t getting saved when creating new entries. ([#5455](https://github.com/craftcms/cms/issues/5455))\n\n## 3.4.6.1 - 2020-02-18\n\n### Fixed\n- Fixed an error that could occur when updating Craft on a server that had already applied the same update before.\n\n## 3.4.6 - 2020-02-18\n\n### Added\n- Added `craft\\controllers\\ElementIndexesController::actionCountElements()`.\n- Added `craft\\gql\\arguments\\OptionField`.\n- Added `craft\\gql\\resolvers\\OptionField`.\n- Added `craft\\web\\View::getInitialDeltaValue()`.\n- Added `craft\\web\\View::setInitialDeltaValue()`.\n- Added the boolean `label` argument to the Checkbox, Dropdown, and Multi-select GraphQL API fields which can be used to specify the label(s) of selected option(s) should be returned instead. ([#5514](https://github.com/craftcms/cms/issues/5514))\n- Added the `nextSiblingOf`, `prevSiblingOf`, `positionedAfter`, and `positionedBefore` arguments to Entry and Category GraphQL queries. ([#5627](https://github.com/craftcms/cms/issues/5627))\n- Added the `Craft.sendActionRequest()` JavaScript method, which is a Promise-based, cancelable alternative to `Craft.postActionRequest()`.\n\n### Changed\n- Improved the performance of element indexes.\n- Element indexes now cancel current Ajax requests before sending new ones. ([#5655](https://github.com/craftcms/cms/issues/5655))\n- Improved the performance of element queries on single-site installs.\n- Improved the performance of loading the stored project config data. ([#5630](https://github.com/craftcms/cms/issues/5630))\n- Relational fields\u2019 element selection modals now default to the source element\u2019s site. ([#5643](https://github.com/craftcms/cms/issues/5643))\n- The Edit Entry page now has a \u201cCreate\u201d button rather than \u201cSave\u201d, if the entry has never been fully saved. ([#5661](https://github.com/craftcms/cms/issues/5661))\n- Assets, categories, entries, and users can now be sorted by their IDs in the control panel.\n- Element URIs are now longer required to be unique for disabled elements.\n- Duplicated elements are now automatically saved as disabled, if a unique URI cannot be generated for them. ([#5510](https://github.com/craftcms/cms/issues/5510))\n- It\u2019s now possible to query for elements by their Checkboxes/Multi-select field values using a simplified query param syntax. ([#5639](https://github.com/craftcms/cms/issues/5639))\n- Environment variable autosuggestions in the control panel are now based on `$_SERVER` rather than `$_ENV`.\n- The `_includes/forms/text.html` template now supports an `inputAttributes` variable.\n- `craft\\base\\ApplicationTrait::getIsMultiSite()` now has a `$withTrashed` argument.\n\n### Deprecated\n- Deprecated `craft\\controllers\\ElementIndexesController::$paginated`.\n- Deprecated the `Craft.postActionRequest()` JavaScript method.\n\n### Fixed\n- Fixed a bug where content would not be loaded correctly for some parts of queries when using GraphQL API in some instances. ([#5548](https://github.com/craftcms/cms/issues/5548))\n- Fixed a bug where the built-in GraphQL client would not work on some environments.\n- Fixed a bug where text cells weren\u2019t wrapping in static editable tables. ([#5611](https://github.com/craftcms/cms/issues/5611))\n- Fixed a bug where header cells weren\u2019t wrapping in editable tables. ([#5656](https://github.com/craftcms/cms/issues/5656))\n- Fixed a bug where search keywords weren\u2019t being extracted from HTML field values properly. ([#5631](https://github.com/craftcms/cms/issues/5631))\n- Fixed an error that could occur after updating to Craft 3.4. ([#5633](https://github.com/craftcms/cms/issues/5633))\n- Fixed a bug where Dropdown field values weren\u2019t getting saved if the first option was selected. ([#5632](https://github.com/craftcms/cms/issues/5632))\n- Fixed a bug where sections\u2019 preview targets weren\u2019t getting saved in the user-defined order. ([#5634](https://github.com/craftcms/cms/issues/5634))\n- Fixed a bug where querying for Matrix blocks on a newly-created element\u2019s Matrix field value would yield no results. ([#5618](https://github.com/craftcms/cms/issues/5618))\n- Fixed a bug where changing the focal point on an Asset would not invalidate its cached transforms. ([#3685](https://github.com/craftcms/cms/issues/3685))\n- Fixed a migration error that could occur when updating from prior to Craft 3.2.6.\n- Fixed a bug where element labels could wrap multiple lines in the control panel. ([#5646](https://github.com/craftcms/cms/issues/5646))\n- Fixed a bug where meta field labels weren\u2019t aligned with their values. ([#5647](https://github.com/craftcms/cms/issues/5647))\n- Fixed a bug where saving an asset from an Edit Asset page would save the content for the primary site, regardless of which site was selected. ([#5659](https://github.com/craftcms/cms/issues/5659))\n- Fixed a validation error that occurred when duplicating an entry, if the URI format was based on a custom field value. ([#4759](https://github.com/craftcms/cms/issues/4759))\n- Fixed a deprecation warning when accessing the `children` field using GraphQL in some cases. ([#5642](https://github.com/craftcms/cms/issues/5642))\n- Fixed a bug where element search indexes weren\u2019t getting updated for propagated saves. ([#5654](https://github.com/craftcms/cms/issues/5654))\n\n## 3.4.5 - 2020-02-07\n\n### Added\n- Added `craft\\models\\GqlToken::getIsExpired()`.\n\n### Changed\n- `craft\\services\\Gql::getPublicSchema()` now returns `null` if the public schema doesn\u2019t exist yet and `allowAdminChanges` is disabled.\n- Tightened up the horizontal padding on text inputs. ([#5608](https://github.com/craftcms/cms/issues/5608))\n- Improved the look of Matrix blocks.\n- Improved the look of editable tables. ([#5615](https://github.com/craftcms/cms/issues/5615))\n- URL and Email fields now trim leading/trailing whitespace from their values before validating. ([#5614](https://github.com/craftcms/cms/issues/5614))\n- Table fields now trim leading/trailing whitespace from textual cell values before validating.\n- Improved GraphQL API performance. ([#5607](https://github.com/craftcms/cms/issues/5607))\n- Updated Garnish to 0.1.33.\n\n### Deprecated\n- Deprecated `craft\\gql\\base\\Arguments::buildContentArguments()`.\n\n### Fixed\n- Fixed an error that occurred when working with GraphQL on an environment with `allowAdminChanges` disabled, if the public schema didn\u2019t exist yet. ([#5588](https://github.com/craftcms/cms/issues/5588))\n- Fixed a bug where static Matrix blocks weren\u2019t getting any top padding. ([#5609](https://github.com/craftcms/cms/issues/5609))\n- Fixed a bug where static text cells within editable tables were getting cut off. ([#5611](https://github.com/craftcms/cms/issues/5611))\n- Fixed an error that occurred when saving an element with an Assets field set to restrict files to a single folder, if any of the selected assets\u2019 files didn\u2019t exist.\n- Fixed an error that occurred when attempting to export elements. ([#5617](https://github.com/craftcms/cms/issues/5617))\n- Fixed a bug where HTTP exceptions were getting lost if triggered from a template via an `{% exit %}` tag.\n\n## 3.4.4.1 - 2020-02-06\n\n### Changed\n- Plugins can now modify the params sent with element index Ajax requests by hooking into the new `registerViewParams` event triggered by `Craft.BaseElementIndex`.\n\n### Fixed\n- Fixed an error that occurred when searching for elements from element indexes. ([#5599](https://github.com/craftcms/cms/issues/5599))\n\n## 3.4.4 - 2020-02-05\n\n### Added\n- Added the ability to limit multiple selections in admin tables.\n- Added an event to admin tables when selections are changed.\n- Added an event to admin tables to retrieve currently visible data.\n- Added `craft\\controllers\\ElementIndexesController::actionExport()`.\n- Added the `Craft.downloadFromUrl()` JavaScript method.\n\n### Deprecated\n- Deprecated `craft\\controllers\\ElementIndexesController::actionCreateExportToken()`.\n- Deprecated `craft\\controllers\\ExportController`.\n\n### Fixed\n- Fixed a bug where data tables weren\u2019t getting horizontal scrollbars in Firefox. ([#5574](https://github.com/craftcms/cms/issues/5574))\n- Fixed a bug where HTML was being escaped twice in some admin tables. ([#5532](https://github.com/craftcms/cms/issues/5532))\n- Fixed a 404 error that would occur when attempting to preview a PDF file in a volume that didn\u2019t have a base URL. ([#5581](https://github.com/craftcms/cms/issues/5581))\n- Fixed a bug where the Asset Indexes utility could leave the progress bar visible after it was done.\n- Fixed a bug where the `_count` field would sometimes not work correctly when using GraphQL. ([#4847](https://github.com/craftcms/cms/issues/4847))\n- Fixed a bug where assets that had been drag-uploaded to an Assets field would be hyperlinked. ([#5584](https://github.com/craftcms/cms/issues/5584))\n- Fixed a bug where `CustomFieldBehavior.php` was getting created with restricted permissions. ([#5570](https://github.com/craftcms/cms/issues/5570))\n- Fixed a bug where element exporting would redirect the browser window if the export request didn\u2019t immediately return the export data. ([#5558](https://github.com/craftcms/cms/issues/5558))\n- Fixed a \u201cDivision by zero\u201d error that occurred if an image transform didn\u2019t specify a width or a height. ([#5590](https://github.com/craftcms/cms/issues/5590))\n- Fixed a bug where elements weren\u2019t always retaining their positions in element indexes between pages.\n\n## 3.4.3 - 2020-02-03\n\n### Added\n- It\u2019s now possible to preview video files. ([#5565](https://github.com/craftcms/cms/pull/5565))\n- Added the `--no-backup` option to the `migrate/all` command.\n\n### Changed\n- Craft now logs full exception reports when an exception is thrown from a queue job.\n\n### Fixed\n- Fixed a bug where the `update` command was backing up the database twice.\n- Fixed a bug where the \u201cDuplicate\u201d element action was available for users who didn\u2019t have permission to create new entries in the section. ([#5566](https://github.com/craftcms/cms/issues/5566))\n- Fixed a bug where using directives in GraphQL could make the field return unexpected results. ([#5569](https://github.com/craftcms/cms/issues/5569))\n- Fixed a bug where the active queue job could be missing from the global sidebar and Queue Manager if there were 50 or more pending jobs with higher priorities. ([#5506](https://github.com/craftcms/cms/issues/5506))\n- Fixed a bug where Craft wouldn\u2019t detect requests to non-primary sites if their base URL only contained one extra character than the primary site. ([#5575](https://github.com/craftcms/cms/issues/5575))\n\n## 3.4.2 - 2020-01-31\n\n### Added\n- Added the ability to pass a custom failure message to the delete action on admin tables. ([#5507](https://github.com/craftcms/cms/issues/5507))\n- `craft\\services\\ProjectConfig::processConfigChanges()` now has a `$force` argument that defaults to `false`.\n- Added the ability for admin table actions to restrict usage if multiple items are selected.\n- Edit Asset pages now have `cp.assets.edit`, `cp.assets.edit.details`, `cp.assets.edit.settings`, and `cp.assets.edit.meta` template hooks. ([#5560](https://github.com/craftcms/cms/pull/5560))\n- Added `craft\\queue\\jobs\\ResaveElements::$updateSearchIndex`.\n\n### Changed\n- Edit Asset pages now show a \u201cView\u201d button for image, PDF, and text assets. ([#5555](https://github.com/craftcms/cms/issues/5555))\n- Edit Asset pages now show the asset\u2019s location in the meta pane.\n- The `generateTransformsBeforePageLoad` config setting is now automatically enabled for GraphQL API requests. ([#5553](https://github.com/craftcms/cms/issues/5553))\n- Brought back the `_elements/indexcontainer.html` template (though it is deprecated). ([Dolphiq/craft3-plugin-redirect#108](https://github.com/Dolphiq/craft3-plugin-redirect/issues/108))\n\n### Fixed\n- Fixed a couple errors that could have occurred when updating to Craft 3.4. ([#5527](https://github.com/craftcms/cms/issues/5527))\n- Fixed a bug where HTML was being escaped twice in some admin tables. ([#5532](https://github.com/craftcms/cms/issues/5532))\n- Fixed an error that could occur when processing new Project Config values.\n- Fixed an error that could occur when saving Project Config values that contained 4+ byte characters.\n- Fixed a bug where asset previews weren\u2019t working on Craft Solo. ([#5517](https://github.com/craftcms/cms/issues/5517))\n- Fixed a bug where Matrix fields weren\u2019t always showing validation errors.\n- Fixed a bug where unsaved Matrix blocks could be lost if an entry was saved with validation errors, and any unsaved Matrix blocks weren\u2019t modified before reattempting to save the entry. ([#5544](https://github.com/craftcms/cms/issues/5544))\n- Fixed a bug where Table fields weren\u2019t getting initialized properly unless they were located on the initially-selected content tab. ([#5549](https://github.com/craftcms/cms/issues/5549))\n- Fixed a bug where the control panel\u2019s login form was off-center vertically when a login page logo was used. ([#5552](https://github.com/craftcms/cms/issues/5552))\n- Fixed a bug where it wasn\u2019t possible to pass variables into GraphQL directive arguments. ([#5543](https://github.com/craftcms/cms/issues/5543))\n- Fixed a bug where users with permission to create entries would get a 403 error when attempting to save a new entry.\n- Fixed a styling issue on the Login page if the `rememberedUserSessionDuration` config setting was set to `0`. ([#5556](https://github.com/craftcms/cms/issues/5556))\n- Fixed an error that occurred when viewing trashed elements in an element index and then changing the selected source. ([#5559](https://github.com/craftcms/cms/issues/5559))\n- Fixed a bug where Craft would update the search index for Matrix blocks and other nested elements, even if the owner element was saved with `$updateSearchIndex = false`.\n\n## 3.4.1 - 2020-01-29\n\n### Changed\n- Craft now only logs errors and warnings for console requests, when Dev Mode isn\u2019t enabled. ([#5256](https://github.com/craftcms/cms/issues/5256))\n- Improved the styling of the system name in the global sidebar. ([#5524](https://github.com/craftcms/cms/issues/5524))\n- The default MySQL backup command will now set the `--default-character-set` argument to the value of the `charset` database config setting. ([#5529](https://github.com/craftcms/cms/issues/5529))\n\n### Fixed\n- Fixed a bug where plugin settings would get mangled when installing Craft using an existing `project.yaml` file.\n- Fixed a bug where Assets fields\u2019 selection modals could be blank if the Default Upload Location setting specified an unpermitted volume. ([#5520](https://github.com/craftcms/cms/issues/5520))\n- Fixed a bug where users\u2019 Week Start Day preference was being ignored if set to Sunday. ([#5513](https://github.com/craftcms/cms/issues/5513))\n\n## 3.4.0.2 - 2020-01-28\n\n### Fixed\n- Fixed a bug where installing Craft from the terminal wasn\u2019t setting the `DB_DSN` environment variable in `.env`.\n- Fixed a bug where sections could lose their preview targets when updating to Craft 3.4. ([#5519](https://github.com/craftcms/cms/issues/5519))\n- Fixed a bug where preview target URLs weren\u2019t being normalized to site URLs. ([#5519](https://github.com/craftcms/cms/issues/5519))\n\n## 3.4.0.1 - 2020-01-28\n\n### Fixed\n- Fixed an error that could occur when updating to Craft 3.4.\n- Fixed a bug where Assets fields\u2019 selection modals could be blank if limited to a single folder. ([#5516](https://github.com/craftcms/cms/issues/5516))\n\n## 3.4.0 - 2020-01-28\n\n> **Warning**\n> If `useProjectConfigFile` is enabled and you are using the GraphQL API, restore a fresh database backup from your production environment before updating your development environment. Otherwise you may lose your GraphQL schema data when updating production.\n\n> **Warning**\n> There have been some changes in behavior that plugin developers should be aware of! See [Updating Plugins for Craft 3.4](https://craftcms.com/knowledge-base/updating-plugins-for-craft-34) for details.\n\n> **Note**\n> Element search indexing is a little smarter in Craft 3.4. It\u2019s recommended that you resave all your entries from your terminal **after** you\u2019ve finished updating.\n>\n> ```bash\n> > ./craft resave/entries --update-search-index\n> ```\n\n### Added\n- Improved the overall look and feel of the Control Panel. ([#2883](https://github.com/craftcms/cms/issues/2883))\n- Added an overflow menu for Control Panel tabs that don\u2019t fit into the available space. ([#3073](https://github.com/craftcms/cms/issues/3073))\n- Added support for delta element updates. ([#4064](https://github.com/craftcms/cms/issues/4064))\n- Elements now track which field values have changed since the element was first loaded. ([#4149](https://github.com/craftcms/cms/issues/4149))\n- Entry drafts now show which fields and attributes have changed within the draft, and which are outdated.\n- If an entry draft contains outdated field and attribute values, it\u2019s now possible to merge the latest source entry values into the draft manually, and they will be automatically merged in when the draft is published. ([#4642](https://github.com/craftcms/cms/issues/4642))\n- \u201cSet Status\u201d element actions no longer have the option to disable multi-site elements globally; only for the currently selected site. ([#2817](https://github.com/craftcms/cms/issues/2817), [#2899](https://github.com/craftcms/cms/issues/2899))\n- Multi-site entries\u2019 edit pages no longer have the option to set the entry\u2019s global status. Instead, only the current site\u2019s status is shown by default, and that setting can be expanded to show all sites that the user has permission to edit, for bulk-editing the entry\u2019s status across multiple sites. ([#2817](https://github.com/craftcms/cms/issues/2817), [#2899](https://github.com/craftcms/cms/issues/2899))\n- It\u2019s now possible to see all of the elements selected by relation fields from element indexes. ([#3030](https://github.com/craftcms/cms/issues/3030))\n- Assets now have their own dedicated edit pages in the control panel. ([#1249](https://github.com/craftcms/cms/issues/1249))\n- Asset volumes\u2019 field layouts can now define multiple tabs.\n- Assets now keep track of which user account was logged-in when the asset was uploaded. ([#3553](https://github.com/craftcms/cms/issues/3553))\n- Asset indexes can now have an \u201cUploaded by\u201d column.\n- It\u2019s now possible to eager-load assets with their `uploader` value.\n- Added new \u201cView files uploaded by other users\u201d, \u201cEdit files uploaded by other users\u201d, \u201cReplace files uploaded by other users\u201d, \u201cRemove files uploaded by other users\u201d, and \u201cEdit images uploaded by other users\u201d user permissions.\n- Assets fields now have a \u201cShow unpermitted volumes\u201d setting, which determines whether the field should show volumes that the user doesn\u2019t have permission to view (disabled by default for new fields; enabled by default for existing fields). ([#887](https://github.com/craftcms/cms/issues/887))\n- Assets fields now have a \u201cShow unpermitted files setting, which determines whether the field should show files that the user doesn\u2019t have permission to view per the new \u201cView files uploaded by other users\u201d permission.\n- It\u2019s now possible to download multiple assets at once as a zip file. ([#5259](https://github.com/craftcms/cms/issues/5259))\n- It\u2019s now possible to preview text and PDF assets, and plugins can add support for additional file types. ([#5136](https://github.com/craftcms/cms/pull/5136))\n- It\u2019s now possible to set a custom aspect ratio when cropping images with the image editor. ([#4359](https://github.com/craftcms/cms/issues/4359))\n- It\u2019s now possible to change the the aspect ratio orientation when cropping images with the image editor. ([#4359](https://github.com/craftcms/cms/issues/4359))\n- Added the Queue Manager utility. ([#2753](https://github.com/craftcms/cms/issues/2753), [#3489](https://github.com/craftcms/cms/issues/3489))\n- It\u2019s now possible to define additional queues using `craft\\queue\\Queue`, with custom `channel` values. ([#5492](https://github.com/craftcms/cms/issues/5492))\n- Added the `queue/release` action. ([#4777](https://github.com/craftcms/cms/issues/4777))\n- Added the `utils/prune-revisions` action. ([#4851](https://github.com/craftcms/cms/issues/4851))\n- Added the `verifyEmailPath` config setting.\n- Added the `maxBackups` config setting. ([#2078](https://github.com/craftcms/cms/issues/2078))\n- Added the `upscaleImages` config setting. ([#844](https://github.com/craftcms/cms/issues/844))\n- Added the \u201cReply-To Address\u201d email setting. ([#5498](https://github.com/craftcms/cms/issues/5498))\n- Added the `{% requireGuest %}` Twig tag, which redirects a user to the path specified by the `postLoginRedirect` config setting if they\u2019re already logged in. ([#5015](https://github.com/craftcms/cms/pull/5015))\n- Added the `combine()` Twig function.\n- Added the `|contains` Twig filter.\n- Added the `|purify` Twig filter. ([#5184](https://github.com/craftcms/cms/issues/5184))\n- Public registration forms can now customize the flash notice displayed on successful registration by passing a `userRegisteredNotice` param. ([#5213](https://github.com/craftcms/cms/issues/5213))\n- It\u2019s now possible to query for Matrix blocks by their field handle, via the new `field` param. ([#5218](https://github.com/craftcms/cms/issues/5218))\n- It\u2019s now possible to filter element query results by their related elements using relational fields\u2019 element query params (e.g. `publisher(100)` rather than `relatedTo({targetElement: 100, field: 'publisher'})`). ([#5200](https://github.com/craftcms/cms/issues/5200))\n- It\u2019s now possible to query for elements by their custom field values via GraphQL. ([#5208](https://github.com/craftcms/cms/issues/5208))\n- It\u2019s now possible to eager-load the *count* of related elements, by setting `'count' => true` on the eager loading criteria.\n- GraphQL access tokens are now managed separately from schema definitions, making it possible to create multiple tokens for the same schema.\n- GraphQL schemas are now stored in the project config (sans tokens). ([#4829](https://github.com/craftcms/cms/issues/4829))\n- Added a new \u201cExpanded\u201d element exporter type, which includes expanded custom field values, including Matrix and relational fields. ([#4484](https://github.com/craftcms/cms/issues/4484))\n- It\u2019s now possible to export elements as CSV, JSON, or XML files.\n- Added support for plugin-supplied element exporters. ([#5090](https://github.com/craftcms/cms/issues/5090))\n- Control panel pages can now implement Vue-based admin tables that support bulk actions, search, and pagination.\n- Elements now have a `_count` field when queried via GraphQL, which returns the total number of related elements for a given relational field handle.\n- It\u2019s now possible to filter users by their groups when querying for them via GraphQL. ([#5374](https://github.com/craftcms/cms/issues/5374))\n- Added the `asset`, `category`, `entry`, `globalSet`, `tag`, and `user` queries to fetch single elements via GraphQL. ([#5363](https://github.com/craftcms/cms/issues/5363))\n- It\u2019s now possible to apply the `transform` GraphQL directive to entire assets. ([#5425](https://github.com/craftcms/cms/issues/5425))\n- The Image Editor now displays the resulting image size when cropping. ([#4551](https://github.com/craftcms/cms/issues/4551))\n- Improved the crop behavior when dragging along the edges of an image in the Image Editor.\n- The Sendmail mailer transport now has a \u201cSendmail Command\u201d setting. ([#5445](https://github.com/craftcms/cms/pull/5445))\n- Added support for the `CRAFT_EPHEMERAL` PHP constant, which can be defined as `true` when Craft is running on an environment with ephemeral storage.\n- Added the `setup/php-session-table` command for creating a database table to store PHP sessions.\n- Added `craft\\assetpreviews\\Image`.\n- Added `craft\\assetpreviews\\Pdf`.\n- Added `craft\\assetpreviews\\Text`.\n- Added `craft\\base\\AssetPreviewHandler`.\n- Added `craft\\base\\AssetPreviewHandlerInterface`.\n- Added `craft\\base\\Element::ATTR_STATUS_CONFLICTED`.\n- Added `craft\\base\\Element::ATTR_STATUS_MODIFIED`.\n- Added `craft\\base\\Element::ATTR_STATUS_OUTDATED`.\n- Added `craft\\base\\Element::defineExporters()`.\n- Added `craft\\base\\Element::EVENT_REGISTER_EXPORTERS`.\n- Added `craft\\base\\ElementExporter`.\n- Added `craft\\base\\ElementExporterInterface`.\n- Added `craft\\base\\ElementInterface::exporters()`\n- Added `craft\\base\\ElementInterface::getAttributeStatus()`.\n- Added `craft\\base\\ElementInterface::getDirtyAttributes()`.\n- Added `craft\\base\\ElementInterface::getDirtyFields()`.\n- Added `craft\\base\\ElementInterface::getEagerLoadedElementCount()`.\n- Added `craft\\base\\ElementInterface::getEnabledForSite()`.\n- Added `craft\\base\\ElementInterface::getFieldStatus()`.\n- Added `craft\\base\\ElementInterface::isFieldDirty()`.\n- Added `craft\\base\\ElementInterface::markAsClean()`.\n- Added `craft\\base\\ElementInterface::setAttributeStatus()`.\n- Added `craft\\base\\ElementInterface::setEagerLoadedElementCount()`.\n- Added `craft\\base\\ElementInterface::setEnabledForSite()`.\n- Added `craft\\base\\ElementInterface::trackChanges()`.\n- Added `craft\\base\\FieldInterface::getTranslationDescription()`.\n- Added `craft\\base\\Model::defineRules()`. Models that define a `rules()` method should use `defineRules()` instead, so `EVENT_DEFINE_RULES` event handlers have a chance to modify them.\n- Added `craft\\base\\UtilityInterface::footerHtml()`.\n- Added `craft\\base\\UtilityInterface::toolbarHtml()`.\n- Added `craft\\base\\WidgetInterface::getSubtitle()`.\n- Added `craft\\behaviors\\DraftBehavior::$dateLastMerged`.\n- Added `craft\\behaviors\\DraftBehavior::$mergingChanges`.\n- Added `craft\\behaviors\\DraftBehavior::$trackChanges`.\n- Added `craft\\behaviors\\DraftBehavior::getIsOutdated()`.\n- Added `craft\\behaviors\\DraftBehavior::getOutdatedAttributes()`.\n- Added `craft\\behaviors\\DraftBehavior::getOutdatedFields()`.\n- Added `craft\\behaviors\\DraftBehavior::isAttributeModified()`.\n- Added `craft\\behaviors\\DraftBehavior::isAttributeOutdated()`.\n- Added `craft\\behaviors\\DraftBehavior::isFieldModified()`.\n- Added `craft\\behaviors\\DraftBehavior::isFieldOutdated()`.\n- Added `craft\\controllers\\AssetsController::actionEditAsset()`.\n- Added `craft\\controllers\\AssetsController::actionSaveAsset()`.\n- Added `craft\\controllers\\DraftsController`.\n- Added `craft\\controllers\\GraphqlController::actionDeleteToken()`.\n- Added `craft\\controllers\\GraphqlController::actionEditPublicSchema()`.\n- Added `craft\\controllers\\GraphqlController::actionEditPublicSchema()`.\n- Added `craft\\controllers\\GraphqlController::actionEditToken()`.\n- Added `craft\\controllers\\GraphqlController::actionSaveToken()`.\n- Added `craft\\controllers\\GraphqlController::actionViewToken()`.\n- Added `craft\\controllers\\UsersController::actionSessionInfo()`. ([#5355](https://github.com/craftcms/cms/issues/5355))\n- Added `craft\\db\\ActiveRecord::behaviors()`, which now gives plugins a chance to define their own behaviors.\n- Added `craft\\db\\ActiveRecord::EVENT_DEFINE_BEHAVIORS`.\n- Added `craft\\db\\Connection::DRIVER_MYSQL`.\n- Added `craft\\db\\Connection::DRIVER_PGSQL`.\n- Added `craft\\elements\\Asset::$uploaderId`.\n- Added `craft\\elements\\Asset::getDimensions()`.\n- Added `craft\\elements\\Asset::getFormattedSize()`.\n- Added `craft\\elements\\Asset::getFormattedSizeInBytes()`.\n- Added `craft\\elements\\Asset::getPreviewThumbImg()`.\n- Added `craft\\elements\\Asset::getUploader()`.\n- Added `craft\\elements\\Asset::setUploader()`.\n- Added `craft\\elements\\db\\AssetQuery::$uploaderId`.\n- Added `craft\\elements\\db\\AssetQuery::uploader()`.\n- Added `craft\\elements\\db\\ElementQuery::clearCachedResult()`.\n- Added `craft\\elements\\db\\MatrixBlockQuery::field()`.\n- Added `craft\\elements\\exporters\\Expanded`.\n- Added `craft\\elements\\exporters\\Raw`.\n- Added `craft\\elements\\MatrixBlock::$dirty`.\n- Added `craft\\events\\AssetPreviewEvent`.\n- Added `craft\\events\\BackupEvent::$ignoreTables`. ([#5330](https://github.com/craftcms/cms/issues/5330))\n- Added `craft\\events\\DefineGqlTypeFieldsEvent`.\n- Added `craft\\events\\DefineGqlValidationRulesEvent`.\n- Added `craft\\events\\ExecuteGqlQueryEvent::$schemaId`.\n- Added `craft\\events\\RegisterElementExportersEvent`.\n- Added `craft\\events\\RegisterGqlPermissionsEvent`.\n- Added `craft\\events\\TemplateEvent::$templateMode`.\n- Added `craft\\fields\\Assets::$showUnpermittedVolumes`.\n- Added `craft\\gql\\TypeManager`.\n- Added `craft\\gql\\types\\Number`.\n- Added `craft\\helpers\\AdminTable`.\n- Added `craft\\helpers\\App::isEphemeral()`.\n- Added `craft\\helpers\\ArrayHelper::append()`.\n- Added `craft\\helpers\\ArrayHelper::contains()`.\n- Added `craft\\helpers\\ArrayHelper::isOrdered()`.\n- Added `craft\\helpers\\ArrayHelper::prepend()`.\n- Added `craft\\helpers\\Db::parseDsn()`.\n- Added `craft\\helpers\\Db::url2config()`.\n- Added `craft\\helpers\\FileHelper::invalidate()`.\n- Added `craft\\helpers\\FileHelper::writeGitignoreFile()`.\n- Added `craft\\helpers\\ProjectConfigHelper::flattenConfigArray()`.\n- Added `craft\\helpers\\ProjectConfigHelper::packAssociativeArray()`.\n- Added `craft\\helpers\\ProjectConfigHelper::packAssociativeArrays()`.\n- Added `craft\\helpers\\ProjectConfigHelper::unpackAssociativeArray()`.\n- Added `craft\\helpers\\ProjectConfigHelper::unpackAssociativeArrays()`.\n- Added `craft\\mail\\Mailer::$replyTo`.\n- Added `craft\\migrations\\CreatePhpSessionTable`.\n- Added `craft\\models\\FieldLayoutTab::elementHasErrors()`.\n- Added `craft\\models\\GqlToken`.\n- Added `craft\\models\\MailSettings::$replyToEmail`.\n- Added `craft\\queue\\Command::actionRelease()`.\n- Added `craft\\queue\\jobs\\UpdateSearchIndex::$fieldHandles`.\n- Added `craft\\queue\\Queue::$channel`.\n- Added `craft\\queue\\Queue::$db`.\n- Added `craft\\queue\\Queue::$mutex`.\n- Added `craft\\queue\\Queue::$tableName`.\n- Added `craft\\queue\\QueueInterface::getJobDetails()`.\n- Added `craft\\queue\\QueueInterface::getTotalJobs()`.\n- Added `craft\\queue\\QueueInterface::releaseAll()`.\n- Added `craft\\queue\\QueueInterface::retryAll()`.\n- Added `craft\\records\\Asset::getUploader()`.\n- Added `craft\\records\\GqlToken`.\n- Added `craft\\services\\Assets::EVENT_REGISTER_PREVIEW_HANDLER`.\n- Added `craft\\services\\Assets::getAssetPreviewHandler()`.\n- Added `craft\\services\\Drafts::EVENT_AFTER_MERGE_SOURCE_CHANGES`.\n- Added `craft\\services\\Drafts::EVENT_BEFORE_MERGE_SOURCE_CHANGES`.\n- Added `craft\\services\\Drafts::mergeSourceChanges()`.\n- Added `craft\\services\\Elements::createExporter()`.\n- Added `craft\\services\\Gql::CONFIG_GQL_SCHEMAS_KEY`.\n- Added `craft\\services\\Gql::deleteSchema()`.\n- Added `craft\\services\\Gql::deleteTokenById()`.\n- Added `craft\\services\\Gql::EVENT_REGISTER_GQL_PERMISSIONS`.\n- Added `craft\\services\\Gql::getSchemaByUid()`.\n- Added `craft\\services\\Gql::getTokenByAccessToken()`.\n- Added `craft\\services\\Gql::getTokenById()`.\n- Added `craft\\services\\Gql::getTokenByName()`.\n- Added `craft\\services\\Gql::getTokenByUid()`.\n- Added `craft\\services\\Gql::getTokens()`.\n- Added `craft\\services\\Gql::getValidationRules()`.\n- Added `craft\\services\\Gql::GRAPHQL_COUNT_FIELD`.\n- Added `craft\\services\\Gql::handleChangedSchema()`.\n- Added `craft\\services\\Gql::handleDeletedSchema()`.\n- Added `craft\\services\\Gql::saveToken()`.\n- Added `craft\\services\\Path::getConfigDeltaPath()`.\n- Added `craft\\services\\Plugins::$pluginConfigs`. ([#1989](https://github.com/craftcms/cms/issues/1989))\n- Added `craft\\services\\ProjectConfig::$maxDeltas`.\n- Added `craft\\services\\ProjectConfig::CONFIG_ALL_KEY`.\n- Added `craft\\services\\ProjectConfig::CONFIG_ASSOC_KEY`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\services\\ProjectConfig::CONFIG_DELTA_FILENAME`.\n- Added `craft\\utilities\\QueueManager`.\n- Added `craft\\web\\assets\\admintable\\AdminTableAsset`.\n- Added `craft\\web\\assets\\queuemanager\\QueueManagerAsset`.\n- Added `craft\\web\\Controller::requireGuest()`.\n- Added `craft\\web\\CsvResponseFormatter`.\n- Added `craft\\web\\twig\\nodes\\RequireGuestNode`.\n- Added `craft\\web\\twig\\tokenparsers\\RequireGuestTokenParser`.\n- Added `craft\\web\\twig\\variables\\Paginate::getDynamicRangeUrls()`, making it easy to create Google-style pagination links. ([#5005](https://github.com/craftcms/cms/issues/5005))\n- Added `craft\\web\\User::guestRequired()`.\n- Added `craft\\web\\View::$minifyCss`.\n- Added `craft\\web\\View::$minifyJs`.\n- Added `craft\\web\\View::getDeltaNames()`.\n- Added `craft\\web\\View::getIsDeltaRegistrationActive()`.\n- Added `craft\\web\\View::registerDeltaName()`.\n- Added `craft\\web\\View::setIsDeltaRegistrationActive()`.\n- Added the `Craft.ui.createDateRangePicker()` JavaScript method.\n- Added the `Craft.VueAdminTable` JavaScript class.\n- Added the `beforeUpdateIframe` and `switchTarget` events to the `Craft.Preview` JavaScript class. ([#5359](https://github.com/craftcms/cms/issues/5359))\n- The `Craft.t()` JavaScript method is now capable of parsing `number` and `plural` formatted params (e.g. `{num, plural, =1{item} other{items}}`).\n- Added the `cp.users.edit.prefs` template hook to the Edit User page. ([#5114](https://github.com/craftcms/cms/issues/5114))\n- The `_layouts/elements.html` control panel layout template can now be used for elements that don\u2019t support drafts or revisions.\n- Added the [Interactive Shell Extension for Yii 2](https://github.com/yiisoft/yii2-shell). ([#5228](https://github.com/craftcms/cms/issues/5228))\n- Added the Minify PHP package.\n\n### Changed\n- Control panel requests are now always set to the primary site, regardless of the URL they were accessed from.\n- The control panel no longer shows the tab bar on pages with only one tab. ([#2915](https://github.com/craftcms/cms/issues/2915))\n- The queue info in the global sidebar no longer shows an HUD with job details when clicked; the user is now brought to the new Queue Manager utility, if they have permission to view it. ([#4040](https://github.com/craftcms/cms/issues/4040))\n- Element indexes now load up to 100 elements per page/batch, rather than 50. ([#4555](https://github.com/craftcms/cms/issues/4555))\n- The Assets index page now updates the URL when the selected volume changes.\n- Sections\u2019 entry URI format settings are now shown when running Craft in headless mode. ([#4934](https://github.com/craftcms/cms/issues/4934))\n- The \u201cPrimary entry page\u201d preview target is now user-customizable alongside all other preview targets in sections\u2019 settings. ([#4520](https://github.com/craftcms/cms/issues/4520))\n- Sections\u2019 \u201cPreview Targets\u201d setting now has a \u201cRefresh\u201d checkbox column, which can be unchecked to prevent preview frames from being refreshed automatically when content changes. ([#5359](https://github.com/craftcms/cms/issues/5359))\n- Entry drafts are no longer auto-created when the \u201cPreview\u201d button is clicked, unless/until the content has changed. ([#5201](https://github.com/craftcms/cms/issues/5201))\n- Unsaved entries\u2019 URIs are now updated on each autosave. ([#4581](https://github.com/craftcms/cms/issues/4581))\n- Edit Entry pages now show the entry\u2019s status in the meta pane.\n- Plain Text fields can now specify a maximum size in bytes. ([#5099](https://github.com/craftcms/cms/issues/5099))\n- Plain Text fields\u2019 Column Type settings now have an \u201cAutomatic\u201d option, which is selected by default for new fields. ([#5099](https://github.com/craftcms/cms/issues/5099))\n- Matrix fields now show an accurate description of their propagation behavior in the translation icon tooltip. ([#5304](https://github.com/craftcms/cms/issues/5304))\n- The Clear Caches utility now has info icons next to most cache options with more details about what the cache option refers to. ([#5418](https://github.com/craftcms/cms/issues/5418))\n- The `users/login` action no longer sets a \u201cLogged in.\u201d flash notice. ([#5383](https://github.com/craftcms/cms/issues/5383))\n- Local asset volumes now ensure that their folder exists on save, and if it doesn\u2019t, a `.gitignore` file will be added automatically to it, excluding the directory from Git. ([#5237](https://github.com/craftcms/cms/issues/5237))\n- Set Password and Verify Email links now use the `setPasswordPath` and `verifyEmailPath` config settings. ([#4925](https://github.com/craftcms/cms/issues/4925))\n- Craft now uses the `slugWordSeparator` when generating URI formats. ([#5315](https://github.com/craftcms/cms/pull/5315))\n- The `loginPath` and `logoutPath` config setings can now be set to `false` to disable front-end login/logout. ([#5352](https://github.com/craftcms/cms/issues/5352))\n- The `loginPath`, `logoutPath`, `setPasswordPath`, and `verifyEmailPath` config settings are now ignored when Craft is running in headless mode.\n- ImageMagick is no longer used when the `imageDriver` config setting is set to `auto`, if `Imagick::queryFormats()` returns an empty array. ([#5435](https://github.com/craftcms/cms/issues/5435))\n- CSS registered with `craft\\web\\View::registerCss()` or the `{% css %}` tag is now minified by default. ([#5183](https://github.com/craftcms/cms/issues/5183))\n- JavaScript code registered with `craft\\web\\registerJs()` or the `{% js %}` tag is now minified per the `useCompressedJs` config setting. ([#5183](https://github.com/craftcms/cms/issues/5183))\n- `resave/*` commands now have an `--update-search-index` argument (defaults to `false`). ([#4840](https://github.com/craftcms/cms/issues/4840))\n- The installer now requires `config/db.php` to be setting the `dsn` database config setting with a `DB_DSN` environment variable, if a connection can\u2019t already be established.\n- The full GraphQL schema is now always generated when Dev Mode is enabled.\n- Punctuation is now removed from search keywords and search terms, rather than being replaced with a space. ([#5214](https://github.com/craftcms/cms/issues/5214))\n- The `_includes/forms/field.html` template now supports `fieldAttributes`, `labelAttributes`, and `inputAttributes` variables.\n- The `_includes/field.html` template now supports a `registerDeltas` variable.\n- The `_layouts/cp.html` template now supports `mainAttributes` and `mainFormAttributes` variables.\n- Plugins can now modify the GraphQL schema via `craft\\gql\\TypeManager::EVENT_DEFINE_GQL_TYPE_FIELDS`.\n- Plugins can now modify the GraphQL permissions via `craft\\services\\Gql::EVENT_REGISTER_GQL_PERMISSIONS`.\n- Number fields now return the `Number` type when queried via GraphQL, which can be an integer, a float, or null. ([#5344](https://github.com/craftcms/cms/issues/5344))\n- Renamed the`QueryParameter` GraphQL type to `QueryArgument`.\n- If any elements are selected while exporting, only the selected elements will be included in the export. ([#5130](https://github.com/craftcms/cms/issues/5130))\n- Craft now sorts the `project.yaml` file alphabetically by keys. ([#5147](https://github.com/craftcms/cms/issues/5147))\n- The project config is now stored in its own `projectconfig` table, rather than a `config` column within the `info` table.\n- Project config event handlers are now triggered in order of specificity (from least-to-most specific).\n- Active record classes now normalize attribute values right when they are set.\n- Entry queries no longer factor in seconds when looking for currently live entries. ([#5389](https://github.com/craftcms/cms/issues/5389))\n- Editable tables now set existing row\u2019s cell values to their column\u2019s default value, if the cell is missing from the row data.\n- Preview targets can now opt out of being automatically refreshed when content changes, by setting `refresh` to `false` on their target definition. ([#5359](https://github.com/craftcms/cms/issues/5359))\n- The old `craft\\controllers\\AssetsController::actionSaveAsset()` method has been renamed to `actionUpload()`.\n- Assets fields now open their asset selection modals to the field's Default Upload Location, if it exists. ([#2778](https://github.com/craftcms/cms/issues/2778)\n- The `|merge` filter now has a `recursive` argument. ([#1465](https://github.com/craftcms/cms/issues/1465))\n- `craft\\config\\GeneralConfig::getLoginPath()` and `getLogoutPath()` may now return non-string values.\n- `craft\\elements\\Asset::getImg()` now has an optional `$transform` argument. ([#3563](https://github.com/craftcms/cms/issues/3563))\n- `craft\\helpers\\Db::prepDateForDb()` now has a `$stripSeconds` argument (defaults to `false`).\n- `craft\\i18n\\Formatter::asShortSize()` now capitalizes the size unit.\n- `craft\\mail\\Message::setReplyTo()` can now be set to a `craft\\elements\\User` object, or an array of them.\n- `craft\\models\\GqlSchema::$scope` is now read-only.\n- `craft\\services\\Elements::resaveElements()` now has an `$updateSearchIndex` argument (defaults to `false`). ([#4840](https://github.com/craftcms/cms/issues/4840))\n- `craft\\services\\Elements::saveElement()` now has an `$updateSearchIndex` argument (defaults to `true`). ([#4840](https://github.com/craftcms/cms/issues/4840))\n- `craft\\services\\ProjectConfig::areChangesPending()` will now return `true` if the path was updated but not processed yet.\n- `craft\\services\\ProjectConfig::processConfigChanges()` now has a `$message` argument to specify the reason for config changes.\n- `craft\\services\\ProjectConfig::remove()` now has a `$message` argument to specify the reason for config changes.\n- `craft\\services\\ProjectConfig::set()` now has a `$message` argument to specify the reason for config changes.\n- `craft\\services\\Search::indexElementAttributes()` now has a `$fieldHandles` argument, for specifying which custom fields\u2019 keywords should be updated.\n- `craft\\web\\Controller::renderTemplate()` now has a `$templateMode` argument.\n- `craft\\web\\View::renderTemplate()`, `renderPageTemplate()`, `renderTemplateMacro()`, `doesTemplateExist()`, and `resolveTemplate()` now have `$templateMode` arguments. ([#4570](https://github.com/craftcms/cms/pull/4570))\n- The `ContentBehavior` and `ElementQueryBehavior` behavior classes have been replaced by a single `CustomFieldBehavior` class.\n- Matrix fields now trigger a `blockDeleted` JavaScript event when a block is deleted. ([#5329](https://github.com/craftcms/cms/issues/5329))\n- The `afterUpdateIframe` event fired by the `Craft.Preview` JavaScript class now includes `target` and `$iframe` data properties.\n- Replaced the deprecated zend-feed library with laminas-feed. ([#5400](https://github.com/craftcms/cms/issues/5400))\n- The `index-assets/*` commands now have a `--deleteMissingAssets` option, which deletes the records of Assets that are missing their files after indexing. ([#4928](https://github.com/craftcms/cms/issues/4928))\n- Updated Yii to 2.0.32.\n- Updated yii2-queue to 2.3.\n- Updated Garnish to 0.1.32.\n\n### Deprecated\n- Deprecated the `url`, `driver`, `database`, `server`, `port`, and `unixSocket` database config settings. `dsn` should be used instead.\n- Deprecated `craft\\config\\DbConfig::DRIVER_MYSQL`.\n- Deprecated `craft\\config\\DbConfig::DRIVER_PGSQL`.\n- Deprecated `craft\\config\\DbConfig::updateDsn()`.\n- Deprecated `craft\\controllers\\UsersController::actionGetRemainingSessionTime()`. `actionSessionInfo()` should be used instead.\n- Deprecated `craft\\elements\\Asset::getSupportsPreview()`. Use `craft\\services\\Assets::getAssetPreviewHandler()` instead.\n- Deprecated `craft\\events\\ExecuteGqlQueryEvent::$accessToken`. Use `craft\\events\\ExecuteGqlQueryEvent::$schemaId` instead.\n- Deprecated `craft\\services\\ProjectConfig::$maxBackups`. `$maxDeltas` should be used instead.\n- Deprecated `craft\\services\\Search::indexElementFields()`.\n\n### Removed\n- Removed `craft\\events\\SetStatusEvent`.\n- Removed `craft\\models\\GqlSchema::PUBLIC_TOKEN`.\n- Removed `craft\\models\\GqlSchema::$accessToken`.\n- Removed `craft\\models\\GqlSchema::$enabled`.\n- Removed `craft\\models\\GqlSchema::$expiryDate`.\n- Removed `craft\\models\\GqlSchema::$lastUsed`.\n- Removed `craft\\models\\GqlSchema::$dateCreated`.\n- Removed `craft\\models\\GqlSchema::$isTemporary`.\n- Removed `craft\\models\\GqlSchema::getIsPublic()`.\n\n### Fixed\n- Fixed a SQL error that could occur if the `info` table has more than one row. ([#5222](https://github.com/craftcms/cms/issues/5222))\n- Fixed a bug where the control panel UI could come to a grinding halt if a large number of jobs were in the queue. ([#4533](https://github.com/craftcms/cms/issues/4533))\n- Fixed a layout issue where the control panel footer would be hidden if the Debug Toolbar was shown. ([#4591](https://github.com/craftcms/cms/issues/4591))\n- Fixed a bug where the image editor would not immediately apply new aspect ratio selections when cropping images.\n- Fixed a bug where the `maxBackups` config setting wasn\u2019t getting applied if a custom `backupCommand` was set.\n- Fixed a bug where it wasn\u2019t possible to use aliases for Matrix fields when querying via GraphQL. ([#5008](https://github.com/craftcms/cms/issues/5008))\n- Fixed a bug where Lightswitch column values within Table fields weren\u2019t returning boolean values when queried via GraphQL. ([#5344](https://github.com/craftcms/cms/issues/5344))\n- Fixed a bug where deactivating the Crop tool in the Image Editor would not set the image zoom correctly for straightened images.\n- Fixed a PHP error that could occur when running jobs from the queue in some PostgreSQL installations. ([#2715](https://github.com/craftcms/cms/issues/2715))\n- Fixed a bug where some classes didn\u2019t support `EVENT_DEFINE_BEHAVIORS`.\n- Fixed a bug where directives applied to object fields would be ignored when using GraphQL.\n- Fixed a SQL error that could occur when merging an element that belonged to a structure into another element that didn\u2019t. ([#5450](https://github.com/craftcms/cms/issues/5450))\n- Fixed a bug where eager-loaded relational fields would fetch elements from other sites by default. ([#5451](https://github.com/craftcms/cms/issues/5451))\n- Fixed a bug where Project Config event handlers weren\u2019t getting triggered if a parent config path had been updated in the same request. ([#5440](https://github.com/craftcms/cms/issues/5440))\n- Fixed a SQL error that could occur when searching for elements, if MySQL was used and the `searchindex` table was using InnoDB. ([#3862](https://github.com/craftcms/cms/issues/5440))\n- Fixed a PHP error that occurred when a dynamically generated class was loaded before it was finished being written. ([#5434](https://github.com/craftcms/cms/issues/5434))\n- Fixed an error that occurred after disabling a section for the primary site, while its existing entries were being resaved. ([#5489](https://github.com/craftcms/cms/issues/5489))\n- Fixed a bug where radio buttons within radio groups were getting `id` attributes even if no `id` was passed. ([#5508](https://github.com/craftcms/cms/issues/5508))\n\n## 3.3.20.1 - 2020-01-14\n\n### Fixed\n- Fixed a PHP error that would occur when running console commands. ([#5436](https://github.com/craftcms/cms/issues/5436))\n\n## 3.3.20 - 2020-01-14\n\n### Changed\n- The control panel will now display an alert if `useProjectConfigFile` is enabled, but the `project.yaml` file isn\u2019t writable. ([#4319](https://github.com/craftcms/cms/issues/4319))\n- Browser-based form validation is now disabled for element editor HUDs. ([#5433](https://github.com/craftcms/cms/issues/5433))\n\n### Fixed\n- Fixed a bug where entry revision menus could list sites that the entry didn\u2019t support. ([#5387](https://github.com/craftcms/cms/issues/5387))\n- Fixed a PHP warning that occurred when creating a new database backup. ([#5393](https://github.com/craftcms/cms/issues/5393))\n- Fixed an error that could occur when saving a Table field. ([#5398](https://github.com/craftcms/cms/issues/5398))\n- Fixed a bug where an unknown error was displayed when attempting to create an Asset folder without proper permissions. ([#5223](https://github.com/craftcms/cms/issues/5223))\n- Fixed a PHP warning that occurred sometimes when Craft was attempting to list resized versions of asset images. ([#5399](https://github.com/craftcms/cms/issues/5399))\n- Fixed a bug where preview target URLs weren\u2019t getting generated correctly if they contained an anchor. ([#5404](https://github.com/craftcms/cms/issues/5404))\n- Fixed couple bugs related to entry preview frames maintaining their scroll position between refreshes. ([#5404](https://github.com/craftcms/cms/issues/5404))\n- Fixed a bug where Matrix blocks weren\u2019t getting updated correctly when their field\u2019s Propagation Method setting was changed via `project.yaml`. ([#5295](https://github.com/craftcms/cms/issues/5295))\n- Fixed an error that could occur when syncing the project config if a Matrix field had been changed to something else. ([#5419](https://github.com/craftcms/cms/issues/5419))\n- Fixed a bug where changes to an entry draft\u2019s name or notes weren\u2019t getting saved until the next draft autosave. ([#5432](https://github.com/craftcms/cms/issues/5432))\n\n### Security\n- Fixed XSS vulnerabilities.\n\n## 3.3.19 - 2019-12-30\n\n### Changed\n- Improved the performance of `craft\\helpers\\StringHelper::containsMb4()`. ([#5366](https://github.com/craftcms/cms/issues/5366))\n- Updated Yii to 2.0.31.\n\n### Security\n- Fixed an information exposure vulnerability.\n\n## 3.3.18.4 - 2019-12-21\n\n### Fixed\n- Fixed a bug where \u201cUpdating search indexes\u201d jobs would show inaccurate progress bars. ([#5358](https://github.com/craftcms/cms/pull/5358))\n- Fixed a PHP error that could occur when using the `|attr` filter on an HTML element that had an existing attribute with an empty value. ([#5364](https://github.com/craftcms/cms/issues/5364))\n- Fixed a race condition that could result in a PHP error when generating `ElementQueryBehavior.php`. ([#5361](https://github.com/craftcms/cms/issues/5361))\n\n### Security\n- Fixed a bug where Craft was renewing the identity cookie each time it checked on the user\u2019s remaining session time. ([#3951](https://github.com/craftcms/cms/issues/3951))\n\n## 3.3.18.3 - 2019-12-17\n\n### Changed\n- Slug fields\u2019 translation icon tooltips now clarify that their values are translated for each site. ([#2064](https://github.com/craftcms/cms/issues/2064))\n\n### Fixed\n- Fixed a PHP error that could occur when `craft\\services\\Elements::getElementById()` was called with an element whose class didn\u2019t exist. ([#5345](https://github.com/craftcms/cms/issues/5345))\n- Fixed a PHP error that could occur when autoloading the `ContentBehavior` class in some environments.\n\n## 3.3.18.2 - 2019-12-15\n\n### Changed\n- Autosuggest inputs now restore focus to the input field when an alias is chosen. ([#5338](https://github.com/craftcms/cms/issues/5338))\n- The Guzzle requirement now excludes Guzzle 6.5.0. ([#5326](https://github.com/craftcms/cms/issues/5326))\n\n## 3.3.18.1 - 2019-12-10\n\n### Fixed\n- Fixed a JavaScript error that could occur if Craft didn\u2019t have a license key yet.\n\n## 3.3.18 - 2019-12-10\n\n### Added\n- Added `craft\\queue\\jobs\\ApplyMatrixPropagationMethod`.\n- Added `craft\\services\\Matrix::getSupportedSiteIds()`.\n\n### Changed\n- When a Matrix field\u2019s Propagation Method setting changes, the field\u2019s blocks are now duplicated into any sites where their content would have otherwise been deleted. ([#5182](https://github.com/craftcms/cms/issues/5182))\n- Title fields\u2019 translation icon tooltips now clarify that their values are translated for each site. ([#2064](https://github.com/craftcms/cms/issues/2064))\n\n### Deprecated\n- Deprecated `craft\\services\\Matrix::getSupportedSiteIdsForField()`. `getSupportedSiteIds()` should be used instead.\n\n### Fixed\n- Fixed a bug where the page URL could change when interacting with element selection modals. ([#5254](https://github.com/craftcms/cms/issues/5254))\n- Fixed a bug where entry draft changes could go unnoticed if they were made while another change was being saved. ([#5305](https://github.com/craftcms/cms/issues/5305))\n- Fixed an error that could occur when using the `|group` filter, if a function name was passed in (e.g. `date`).\n- Fixed a bug where `craft\\helpers\\FileHelper::writeToFile()` wasn\u2019t waiting until a lock could be acquired before writing to the file.\n- Fixed an issue where the Plugin Store was not creating a new cart when it was not able to retrieve an existing one. ([#5318](https://github.com/craftcms/cms/issues/5318))\n\n## 3.3.17 - 2019-12-03\n\n### Added\n- Added `craft\\base\\ElementInterface::lowerDisplayName()` and `pluralLowerDisplayName()`. ([#5271](https://github.com/craftcms/cms/issues/5271))\n\n### Changed\n- Error templates now have a `statusCode` variable even if the originating exception wasn\u2019t an instance of `yii\\web\\HttpException`. ([#5273](https://github.com/craftcms/cms/issues/5273))\n- Number fields now normalize their numbers to integers or floats, if the value that came from the database is a numeric string. ([#5268](https://github.com/craftcms/cms/issues/5268))\n- Craft no longer throws an `UnknownPropertyException` if a Local asset volume was converted to a different volume type from `config/volumes.php`. ([#5277](https://github.com/craftcms/cms/issues/5277))\n\n### Fixed\n- Fixed an issue where string encoding might not behave as expected in some environments running PHP 7.3 or greater. ([#4239](https://github.com/craftcms/cms/issues/4239))\n- Fixed an error that occurred when editing an entry if one of its past revisions used an entry type that was soft-deleted. ([#5270](https://github.com/craftcms/cms/issues/5270))\n- Fixed a JavaScript error that occurred when previewing assets via the \u201cPreview file\u201d action. ([#5272](https://github.com/craftcms/cms/pull/5272))\n- Fixed a bug where it wasn\u2019t possible to pass `null` values to GraphQL field arguments. ([#5267](https://github.com/craftcms/cms/issues/5267))\n- Fixed a bug where Craft wouldn\u2019t update the search indexes for non-localized element types (like Users) when the primary site was changed. ([#5281](https://github.com/craftcms/cms/issues/5281))\n- Fixed a bug where it wasn\u2019t possible to change images\u2019 focal points on mobile. ([#3669](https://github.com/craftcms/cms/issues/3669))\n- Fixed a bug where it wasn\u2019t possible to crop images on mobile. ([#5279](https://github.com/craftcms/cms/issues/5279))\n- Fixed an error that occurred if a token route didn\u2019t specify any params. ([#5282](https://github.com/craftcms/cms/pull/5282))\n- Fixed a PHP error that occurred when calling the deprecated `craft.session.getRememberedUsername()` template method, if the `username` cookie wasn\u2019t set. ([#5291](https://github.com/craftcms/cms/issues/5291))\n- Fixed a PHP error that occurred if the path param (`p`) was set to an array. ([#5292](https://github.com/craftcms/cms/issues/5292))\n- Fixed an error that occurred when viewing trashed entries, if any of them had been deleted along with a user account. ([#5287](https://github.com/craftcms/cms/issues/5287))\n\n## 3.3.16.3 - 2019-11-26\n\n### Fixed\n- Fixed an error that occurred when an element query\u2019s `indexBy` param was set `id`, `dateCreated`, `dateUpdated`, or `uid`.\n\n## 3.3.16.2 - 2019-11-26\n\n### Fixed\n- Fixed a SQL error that occurred when an element query\u2019s `indexBy` param set to a column from a table besides `elements`. ([#5216](https://github.com/craftcms/cms/issues/5216))\n- Fixed an issue where the edition was not taken into account when clicking \u201cBuy Now\u201d buttons on Settings \u2192 Plugins.\n\n## 3.3.16.1 - 2019-11-22\n\n### Fixed\n- Fixed an error that occurred if Stringy 5.2 was installed.\n\n## 3.3.16 - 2019-11-22\n\n### Added\n- Added `craft\\models\\GqlSchema::getAllScopePairs()`.\n- Added `craft\\models\\GqlSchema::getAllScopePairsForAction()`.\n- Added `craft\\web\\assets\\axios\\AxiosAsset.php`.\n\n### Changed\n- Improved Plugin Store performance.\n- Craft now makes most of its API requests from JavaScript rather than PHP, so servers with maxed-out HTTP connections won\u2019t get hung up waiting for the API response before serving additional requests. ([#5194](https://github.com/craftcms/cms/issues/5194), [#5232](https://github.com/craftcms/cms/issues/5232))\n- `errorSummary` is now a reserved field handle. ([#3032](https://github.com/craftcms/cms/issues/3032))\n- The `project-config/rebuild` command now ignores the `allowAdminChanges` config setting.\n- Improved the error message when failing to sync global set. ([#5257](https://github.com/craftcms/cms/issues/5257))\n- It\u2019s now easier to send JSON requests with `Craft.postActionRequest()`, by passing `contentType: 'json'` in the `options` argument.\n- Updated svg-sanitizer to 0.13.\n- Updated Yii to 2.0.30.\n\n### Deprecated\n- Deprecated `craft\\web\\assets\\graphiql\\VendorAsset`.\n\n### Fixed\n- Fixed a SQL error that could occur when using PostgreSQL.\n- Fixed a SQL error that could occur when calling an element query\u2019s `ids()` method with `indexBy('id')` set on it. ([#5216](https://github.com/craftcms/cms/issues/5216))\n- Fixed a layout issue with the GraphQL \u2192 Explore page on narrow browser windows. ([#5219](https://github.com/craftcms/cms/issues/5219))\n- Fixed a bug where `craft\\helpers\\UrlHelper::buildQuery()` would remove array param index numbers. ([#5233](https://github.com/craftcms/cms/issues/5233))\n- Fixed a PHP error that could occur when autoloading the `ContentBehavior` and `ElementQueryBehavior` classes in some environments.\n- Fixed an error where it wasn\u2019t possible to query by Date/Time field values via GraphQL. ([#5240](https://github.com/craftcms/cms/issues/5240))\n- Fixed an error where GraphQL caches weren\u2019t getting invalidated when an element was deleted. ([#5238](https://github.com/craftcms/cms/issues/5238))\n- Fixed an error where rebuilding the project config would omit sections\u2019 preview targets. ([#5215](https://github.com/craftcms/cms/issues/5215))\n- Fixed an error that occurred whet attempting to preview an entry revision. ([#5244](https://github.com/craftcms/cms/issues/5244))\n- Fixed a PHP error that could occur when the `relatedTo` param was set to an element query that would yield no results. ([#5242](https://github.com/craftcms/cms/issues/5242))\n- Fixed an error that could occur when saving a Matrix field. ([#5258](https://github.com/craftcms/cms/issues/5258))\n- Fixed a bug where Craft would sometimes fail to generate a correct GraphQL schema when Matrix fields were involved. ([#5255](https://github.com/craftcms/cms/issues/5255))\n\n### Security\n- Craft now requires Portable UTF-8 5.4.28 or later, fixing a security vulnerability.\n\n## 3.3.15 - 2019-11-05\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to apply project config changes that removed a Matrix block type which contained a nested Super Table field, if `allowAdminChanges` was set to `false`. ([#5078](https://github.com/craftcms/cms/issues/5078))\n- Fixed a bug where the nag alert that was shown when the wrong Craft edition was installed was including a \u201cResolve\u201d link even if the user didn\u2019t have access to the Plugin Store. ([#5190](https://github.com/craftcms/cms/issues/5190))\n- Fixed a PHP error that could occur when saving an element, if it had a Dropdown field that had been programmatically saved with integer option values. ([#5172](https://github.com/craftcms/cms/issues/5172))\n- Fixed a bug where \u201cUpdating search indexes\u201d jobs could fail. ([#5191](https://github.com/craftcms/cms/issues/5191))\n- Fixed an error that could occur if an invalid PHP interval string was passed to `craft\\helpers\\DateTimeHelper::isValidIntervalString()`. ([#5193](https://github.com/craftcms/cms/issues/5193))\n- Fixed a bug where it wasn\u2019t possible to access categories\u2019 and tags\u2019 `groupId` property via GraphQL. ([#5199](https://github.com/craftcms/cms/issues/5199))\n\n### Security\n- Fixed a bug where rows in the `sessions` table weren\u2019t getting deleted when a user was logged out.\n\n## 3.3.14 - 2019-10-30\n\n### Added\n- GraphQL entry queries now support an `authorGroupId` argument.\n- Added `craft\\gql\\types\\QueryArgument`.\n\n### Changed\n- It\u2019s now possible to provide multiple values for the `height`, `width`, and `size` arguments when querying or filtering assets via GraphQL.\n- It\u2019s now possible to provide multiple values for the `expiryDate` and `postDate` arguments when querying for elements via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `id` argument when querying for elements via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `folderId` and `volumeId` arguments when querying or filtering assets via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `groupId` argument when querying or filtering tags or categories via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `sectionId`, `typeId`, and `authorId` arguments when querying or filtering entries via GraphQL.\n- It\u2019s now possible to use the `not` keyword in the `fieldId`, `ownerId`, and `typeId` when filtering Matrix blocks via GraphQL.\n- Craft no longer bundles Bootstrap, as the Debug Extension now provides its own copy.\n- Updated the bundled locale data based on ICU 64.1.\n- Formatted dates now include two-digit months and days if that\u2019s what\u2019s called for by the ICU date formats. ([#5186](https://github.com/craftcms/cms/issues/5186))\n\n### Fixed\n- Fixed a bug where Edit Entry pages would often warn authors when leaving the page even if nothing had changed, if there was a Redactor field or other field that was doing its own value normalization on page load. ([craftcms/redactor#161](https://github.com/craftcms/redactor/issues/161))\n- Fixed a bug where assets could remain in their temporary upload location after an entry was first published. ([#5139](https://github.com/craftcms/cms/issues/5139)\n- Fixed a bug where the `update` command could run out of memory. ([#1852](https://github.com/craftcms/cms/issues/1852))\n- Fixed a bug where saving a new GraphQL schema would not populate the UID property.\n- Fixed a bug where Craft wasn\u2019t clearing search keywords for custom fields that weren\u2019t searchable anymore. ([#5168](https://github.com/craftcms/cms/issues/5168))\n- Fixed a bug where `relatedTo` element query params weren\u2019t returning elements that were related to the source element when previewing a draft or revision.\n- Fixed a bug where importing project config changes would break if they contained a changed global set and orphaned Matrix block types. ([#4789](https://github.com/craftcms/cms/issues/4789)\n\n## 3.3.13 - 2019-10-23\n\n### Added\n- It\u2019s now possible to pass arrow functions to the `|group` filter. ([#5156](https://github.com/craftcms/cms/issues/5156))\n\n### Changed\n- Underscores are now stripped from search keywords before being saved to the database.\n\n### Fixed\n- Fixed a bug where translation message parameters weren\u2019t getting parsed correctly if the installed ICU library was less than version 4.8. ([#4995](https://github.com/craftcms/cms/issues/4995))\n- Fixed a bug where GraphQL caches were not being invalidated on element save. ([#5148](https://github.com/craftcms/cms/issues/5148))\n- Fixed a bug where GraphQL type generators provided by plugins were not getting invoked when building introspection schemas. ([#5149](https://github.com/craftcms/cms/issues/5149))\n- Fixed an error that occurred when using the `|json_encode` Twig filter on console requests. ([#5150](https://github.com/craftcms/cms/issues/5150))\n- Fixed a bug where editable table rows could get taller than they should. ([#5159](https://github.com/craftcms/cms/issues/5159))\n\n## 3.3.12 - 2019-10-22\n\n### Added\n- GraphQL query results are now cached.\n- The GraphQL \u2192 Explore page now lists a \u201cFull Schema\u201d option before the Public Schema and any custom-defined schemas.\n- Added the \u201cGraphQL caches\u201d option for the Clear Caches utility.\n- Added the `gql()` Twig function, which executes a GraphQL query and returns the result.\n- Added the `enableGraphQlCaching` config setting.\n- Added the `transform` GraphQL parameter for asset URLs (alias of `handle`).\n- Added the `url` field to the `EntryInterface` GraphQL type. ([#5113](https://github.com/craftcms/cms/issues/5113))\n- Added the `relatedTo` and `relatedToAll` arguments for all GraphQL element queries. ([#5071](https://github.com/craftcms/cms/issues/5071))\n- Added support for multi-site GraphQL element queries. ([#5079](https://github.com/craftcms/cms/issues/5079))\n- Added `craft\\helpers\\Gql::createFullAccessSchema()`.\n- Added `craft\\models\\GqlSchema::$isTemporary`.\n- Added the `$invalidateCaches` argument to `craft\\services\\Gql::saveSchema()`.\n\n### Changed\n- Matrix blocks now maintain the same `display` style when expanded as they had before they were initially collapsed. ([#5075](https://github.com/craftcms/cms/issues/5075))\n- It\u2019s no longer necessary to register GraphQL type loaders when creating types.\n- Improved the performance of downloading remote assets. ([#5134](https://github.com/craftcms/cms/pull/5134))\n- The `craft\\services\\Gql::executeQuery()` method now expects an active schema object, instead of a GraphQL Schema object.\n- The `users/save-user` action no longer copies `unverifiedEmail` validation errors over to the `email` attribute if the `email` attribute already has its own errors.\n- `users/set-password` requests now respond with JSON if the request accepts a JSON response. ([#5138](https://github.com/craftcms/cms/pull/5138))\n\n### Deprecated\n- Deprecated the `$checkToken` argument for `craft\\gql\\base\\Query::getQueries()`. `craft\\helpers\\Gql::getFullAccessSchema()` should be used instead to ensure all queries are returned.\n\n### Fixed\n- Fixed a bug that could occur when using plugin specific config files while running functional tests. ([#5137](https://github.com/craftcms/cms/pull/5137))\n- Fixed an error that occurred when loading a relational field\u2019s selection modal, if no sources were visible.\n- Fixed a bug where required relational fields would get a validation error if only elements from other sites were selected. ([#5116](https://github.com/craftcms/cms/issues/5116))\n- Fixed a bug where the \u201cProfile Twig templates when Dev Mode is disabled\u201d admin preference wasn\u2019t saving. ([#5118](https://github.com/craftcms/cms/pull/5118))\n- Fixed a bug where failed queue jobs were losing their `dateReserved`, `timeUpdated`, `progress`, and `progressLabel` values.\n- Fixed a PHP error occurred when viewing the PHP Info utility if `register_argc_argv` was set to `On` in `php.ini`. ([#4878](https://github.com/craftcms/cms/issues/4878))\n- Fixed a bug where the `craft\\queue\\jobs\\UpdateSearchIndex` was ignorning the `siteId` property.\n- Fixed a bug where Craft could attempt to perform transforms on element URLs for elements that were not Assets when using GraphQL.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to pass `*` to `site` arguments via GraphQL. ([#5079](https://github.com/craftcms/cms/issues/5079))\n\n## 3.3.11 - 2019-10-16\n\n### Added\n- Added `craft\\events\\ExecuteGqlQueryEvent`.\n- Added `craft\\services\\Gql::EVENT_BEFORE_EXECUTE_GQL_QUERY`.\n- Added `craft\\services\\Gql::EVENT_AFTER_EXECUTE_GQL_QUERY`.\n- Added `craft\\services\\Gql::executeQuery()`.\n\n### Changed\n- Dropdown and Multi-select fields can now have duplicate option labels, as long as they are in different optgroups. ([#5105](https://github.com/craftcms/cms/issues/5105))\n\n### Fixed\n- Fixed a bug where user email changes were going through email verification even if someone with permission to administrate users was making the change. ([#5088](https://github.com/craftcms/cms/issues/5088))\n- Fixed an error that could occur when duplicating entries with Matrix blocks. ([#5097](https://github.com/craftcms/cms/issues/5097))\n\n## 3.3.10 - 2019-10-15\n\n### Added\n- Added the `allowOwnerDrafts` and `allowOwnerRevisions` Matrix block query params.\n- Added the ability to skip refreshing the project config before running individual tests. ([#5072](https://github.com/craftcms/cms/pull/5072))\n- Added `craft\\test\\Craft::resetProjectConfig()`.\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t passing assets\u2019 MIME types to cloud storage services when saving them. ([#5052](https://github.com/craftcms/cms/issues/5052))\n- Fixed a bug where Assets fields\u2019 image thumbnails weren\u2019t getting refreshed after images were edited. ([#4212](https://github.com/craftcms/cms/issues/4212))\n- Fixed a bug where the `index-assets` command would bail as soon as it came across a file with a disallowed file extension. ([#5086](https://github.com/craftcms/cms/issues/5086))\n- Fixed a bug where it wasn\u2019t possible to eager-load Matrix blocks that belong to a draft or revision. ([#5031](https://github.com/craftcms/cms/issues/5031))\n- Fixed a bug where the `setup` command would think that Craft was installed when it wasn\u2019t. ([#5093](https://github.com/craftcms/cms/issues/5093))\n- Fixed an error that could occur when syncing the project config if a Matrix field had been changed to something else. ([#4015](https://github.com/craftcms/cms/issues/4015))\n- Fixed a bug where Assets fields weren\u2019t always showing the \u201cEdit\u201d button for images when they should. ([#4618](https://github.com/craftcms/cms/issues/4618))\n- Fixed a bug where `craft\\services\\Elements::duplicateElement()` wasn\u2019t ensuring that the duplicate had a valid slug on all sites. ([#5097](https://github.com/craftcms/cms/issues/5097))\n- Fixed a bug where querying for elements by their Lightswitch field value could only return elements that had been saved since the Lightswitch field was added, when using PostgreSQL. ([#5073](https://github.com/craftcms/cms/issues/5073))\n- Fixed a SQL error that could occur when querying for Matrix blocks.\n- Fixed a bug where entries that were disabled globally would still get a green status indicator within the entry context menu on Edit Entry pages.\n\n## 3.3.9 - 2019-10-10\n\n### Changed\n- The `project-config/sync` command now correctly returns an error code on failure. ([#4153](https://github.com/craftcms/cms/issues/4153))\n- User queries now include the `unverifiedEmail` value by default. ([#5019](https://github.com/craftcms/cms/issues/5019))\n\n### Fixed\n- Fixed a bug where updating a draft might delete content on other sites in a multisite setup on certain PHP versions. ([#5048](https://github.com/craftcms/cms/issues/5048))\n- Fixed an error that occurred when running console commands before Craft was installed. ([#5083](https://github.com/craftcms/cms/issues/5083))\n\n## 3.3.8 - 2019-10-09\n\n### Added\n- Added `craft\\web\\Request::getNormalizedContentType()`.\n\n### Changed\n- Eliminated a `SHOW TABLES` SQL query that was getting executed on every request.\n- Craft no longer routes requests based on `action` params in the request body, if the request\u2019s content type is `application/json`.\n- Added support for the `text/vtt` MIME type. ([#5052](https://github.com/craftcms/cms/issues/5052))\n- Updated Twig to 2.12.\n\n### Fixed\n- Fixed a SQL error that could occur when deleting an entry or category with three or more nested levels of elements. ([#3456](https://github.com/craftcms/cms/issues/3456))\n- Fixed a bug where querying for elements by their Lightswitch field value wasn\u2019t working properly on PostgreSQL. ([#5046](https://github.com/craftcms/cms/issues/5046))\n- Fixed a bug where deleting an entry or category with nested elements could leave the structure in a jumbled state.\n- Fixed a bug where Assets fields would attempt to handle the same uploaded files multiple times if an element was saved multiple times in the same request. ([#5061](https://github.com/craftcms/cms/issues/5061))\n- Fixed a PHP error occurred when viewing the PHP Info utility if `register_argc_argv` was set to `On` in `php.ini`. ([#4878](https://github.com/craftcms/cms/issues/4878))\n- Fixed a bug where the `resave/matrix-blocks` command would wittingly resave Matrix blocks even if they hadn\u2019t been loaded with their content, resulting in lost content. ([#5030](https://github.com/craftcms/cms/issues/5030))\n- Fixed some RTL display issues. ([#5051](https://github.com/craftcms/cms/issues/5051))\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.3.7 - 2019-10-03\n\n### Changed\n- When saving a user, email validation errors are now copied over to the `email` attribute from the `unverifiedEmail` attribute. ([#5019](https://github.com/craftcms/cms/issues/5019))\n- `craft\\web\\View::renderString()` and `renderObjectTemplate()` now have `$templateMode` arguments. ([#5020](https://github.com/craftcms/cms/issues/5020))\n\n### Fixed\n- Fixed a bug where the Edit User page would list a \u201cCopy activation URL\u201d action for publicly-registered users who already had a password set.\n- Fixed a bug where the list and structure icons were missing on element index pages for RTL languages. ([#5018](https://github.com/craftcms/cms/issues/5018))\n- Fixed a bug where the `prevSiblingOf` and `nextSiblingOf` element query params weren\u2019t working reliably. ([#4997](https://github.com/craftcms/cms/issues/4997))\n- Fixed a bug where the `descendantOf` element query param wasn\u2019t working when previewing a draft or revision. ([#5021](https://github.com/craftcms/cms/issues/5021))\n- Fixed a PHP error that occurred when saving a Dropdown or Multi-select field with optgroups. ([#5014](https://github.com/craftcms/cms/issues/5014))\n- Fixed a bug where relational fields that were managing relations on a per-site basis would forget other sites\u2019 relations when duplicated. ([#5038](https://github.com/craftcms/cms/issues/5038))\n\n## 3.3.6 - 2019-09-27\n\n### Added\n- Added `craft\\base\\ElementInterface::getIsHomepage()`. ([#4993](https://github.com/craftcms/cms/issues/4993))\n- Added `craft\\base\\Element::HOMEPAGE_URI`.\n\n### Changed\n- Updated Garnish to 0.1.31.\n\n### Fixed\n- Fixed a bug where some HTML in the Control Panel was getting improperly encoded. ([#5002](https://github.com/craftcms/cms/issues/5002))\n- Fixed a bug where `craft\\helper\\UrlHelper` wasn\u2019t encoding `+` and `&` characters in query param values.\n- Fixed an error where GraphQL would sometimes not return a proper error message. ([#4999](https://github.com/craftcms/cms/issues/4999))\n- Fixed a bug where HUDs could be positioned incorrectly when first opened. ([#5004](https://github.com/craftcms/cms/issues/5004))\n- Fixed a bug where HUD tip images could be pointing the wrong way for RTL languages.\n\n## 3.3.5 - 2019-09-25\n\n### Added\n- The Control Panel is now translated into Persian. ([#4969](https://github.com/craftcms/cms/pull/4969))\n- Added `craft\\test\\fixtures\\elements\\ElementFixture::$unload`.\n\n### Changed\n- All users with permission to register users can now choose to not have an activation email sent immediately, when registering a new user. ([#4981](https://github.com/craftcms/cms/pull/4981))\n- Craft now shows validation errors when attempting to save a Dropdown, Radio Buttons, Checkboxes, or Multi-select field with duplicate option labels or values. ([#4983](https://github.com/craftcms/cms/issues/4983))\n- Live Preview requests now have an `x-craft-live-preview` query string param, rather than `x-craft-preview`. ([#4950](https://github.com/craftcms/cms/issues/4950))\n- The `_includes/pagination.html` template can now be passed `itemLabel` and `itemsLabel` variables.\n- Any migrations applied during testing are now recorded as content migrations.\n- Added the option to automatically apply all content migrations when setting up the test environment. ([#4904](https://github.com/craftcms/cms/issues/4904))\n- `craft\\helpers\\Html::parseTagAttributes()` now has a `$decode` argument.\n- `craft\\test\\fixtures\\elements\\GlobalSetFixture` now has the option to load the active record instance. ([#4947](https://github.com/craftcms/cms/pull/4947))\n\n### Fixed\n- Fixed a bug where checkbox inputs were positioned incorrectly for RTL languages.\n- Fixed a bug where the updater and `project.yaml` sync pages weren\u2019t always handling error responses correctly. ([#4988](https://github.com/craftcms/cms/issues/4988))\n- Fixed an error that could occur when syncing the project config, if a volume was being deleted that didn\u2019t exist in the database to begin with. ([#4990](https://github.com/craftcms/cms/pull/4990))\n- Fixed an error that could occur if a project config value changed from scalar to an array. ([#4932](https://github.com/craftcms/cms/issues/4932))\n- Fixed a bug where Craft would not recognize certain block types when using the GraphQL API. ([#4961](https://github.com/craftcms/cms/issues/4961))\n- Fixed a bug where `craft\\helpers\\Html::renderTagAttributes()` was double-encoding preexisting attributes. ([#4984](https://github.com/craftcms/cms/issues/4984))\n\n## 3.3.4.1 - 2019-09-17\n\n### Fixed\n- Fixed a bug where elements with enabled Lightswitch fields weren\u2019t getting returned in element queries. ([#4951](https://github.com/craftcms/cms/issues/4951))\n\n## 3.3.4 - 2019-09-17\n\n### Changed\n- It\u2019s now possible to run the `migrate/create install` command for uninstalled plugins.\n- Improved the button labels in the confirmation dialog that can appear after running the Asset Indexes utility. ([#4943](https://github.com/craftcms/cms/issues/4943))\n\n### Fixed\n- Fixed a bug where asset queries\u2019 `withTransforms` param wasn\u2019t working for eager-loaded assets. ([#4931](https://github.com/craftcms/cms/issues/4931))\n- Fixed a bug where the \u201cEdit Image\u201d asset action could be missing even if the user had the required permissions. ([#3349](https://github.com/craftcms/cms/issues/3349))\n- Fixed a bug where querying for elements by their Lightswitch field value could only return elements that had been saved since the Lightswitch field was added. ([#4939](https://github.com/craftcms/cms/issues/4939))\n- Fixed a bug where the Updates utility wasn\u2019t showing the \u201cUpdate all\u201d button when multiple updates were available. ([#4938](https://github.com/craftcms/cms/issues/4938))\n- Fixed a bug where the \u201cUpdating search indexes\u201d job could fail when updating search indexes for a Matrix block that contained a relational field.\n- Fixed a bug where category groups\u2019 site settings weren\u2019t being added to the project config when a new site was created.\n- Fixed a bug where the Translation Method setting wasn\u2019t immediately shown for Matrix sub-fields, if the field type was changed from one that didn\u2019t have multiple translation methods to one that does. ([#4949](https://github.com/craftcms/cms/issues/4949))\n- Fixed a bug where it wasn\u2019t possible to query for entries by author ID using the GraphQL API.\n- Fixed a bug where it wasn\u2019t possible to query for Matrix blocks directly using the GraphQL API.\n\n## 3.3.3 - 2019-09-12\n\n### Changed\n- The GraphQL API now prebuilds the schema for all introspection queries, regardless of whether Dev Mode is enabled.\n\n### Fixed\n- Fixed a bug where Craft was ignoring the `invalidUserTokenPath` request when it was set to an empty string. ([#1998](https://github.com/craftcms/cms/issues/1998))\n- Fixed a bug where the `invalidUserTokenPath` was affecting Control Panel requests.\n- Fixed a bug where revisions weren\u2019t being sorted correctly in Structure sections.\n- Fixed a bug where Edit Entry pages weren\u2019t working with certain versions of PHP if the user\u2019s preferred language was set to French. ([#4930](https://github.com/craftcms/cms/issues/4930))\n\n## 3.3.2 - 2019-09-11\n\n### Added\n- Added the `graphql/dump-schema` and `graphql/print-schema` commands. ([#4834](https://github.com/craftcms/cms/pull/4834))\n- It\u2019s now possible to access a `parent` field on entries and categories when querying the GraphQL API. ([#4880](https://github.com/craftcms/cms/issues/4880))\n- It\u2019s now possible to apply transforms to assets via `url` field arguments when querying the GraphQL API.\n\n### Changed\n- Craft now resets the `dateCreated` attribute when duplicating elements. ([#4906](https://github.com/craftcms/cms/issues/4906))\n- It\u2019s no longer possible to access the `author` field for entries when querying the GraphQL API, if the schema doesn\u2019t include user data.\n- It\u2019s no longer possible to access the `photo` field for users when querying the GraphQL API, if the schema doesn\u2019t include the user photo volume.\n\n### Fixed\n- Fixed a bug where Lightswitch fields weren\u2019t returning a boolean value for the GraphQL API.\n- Fixed a bug where `craft\\web\\View::renderString()` and `renderObjectTemplate()` could leave Craft set to the `site` template mode if an error occurred when preparing or rendering the template. ([#4912](https://github.com/craftcms/cms/issues/4912))\n- Fixed a bug where the Plugin Store wasn\u2019t applying edition upgrade pricing for plugins if the higher edition was already installed as a trial.\n\n## 3.3.1.2 - 2019-09-08\n\n### Fixed\n- Fixed an error that occurred after saving an element with a validation error. ([#4898](https://github.com/craftcms/cms/issues/4898))\n\n## 3.3.1.1 - 2019-09-06\n\n### Changed\n- `graphql/api` preflight responses now explicitly allow `Authorization` headers. ([#4830](https://github.com/craftcms/cms/issues/4830))\n- Updated Garnish to 0.1.30.\n\n### Fixed\n- Fixed a bug where selecting Matrix blocks would cause the content container to scroll. ([#3762](https://github.com/craftcms/cms/issues/3762))\n- Fixed an error that occurred if Stringy 5.2 was installed.\n\n## 3.3.1 - 2019-09-06\n\n### Added\n- Added support for setting `offset` and `limit` params to individual paths\u2019 criteria when eager loading elements.\n- Added the `enableGql` config setting. ([#4836](https://github.com/craftcms/cms/issues/4836))\n- Added the `children` field to the `EntryInterface` and `CategoryInterface` GraphQL types. ([#4843](https://github.com/craftcms/cms/issues/4843))\n- Added the `markdown` GraphQL directive. ([#4832](https://github.com/craftcms/cms/issues/4832))\n\n### Changed\n- Preview target URIs can now be set to environment variables (e.g. `$NEWS_INDEX`) or URLs that begin with an alias (e.g. `@rootUrl/news` or `@rootUrl/news/{slug}`).\n- Templates passed to `craft\\web\\View::renderString()` and `renderObjectTemplate()` can now include front-end templates.\n- Element queries with the `revisions` param set will now return revisions ordered by `num DESC` by default. ([#4825](https://github.com/craftcms/cms/issues/4825))\n- `graphql/api` responses now set the `Access-Control-Allow-Headers: Content-Type` header for preflight requests.\n- Craft no longer forces preview target URLs to use `https` if the current request is over SSL. ([#4867](https://github.com/craftcms/cms/issues/4867))\n\n### Removed\n- Removed `craft\\elements\\MatrixBlock::getField()`. ([#4882](https://github.com/craftcms/cms/issues/4882))\n\n### Fixed\n- Fixed a bug where Number fields weren\u2019t showing validation errors when non-numeric values were entered. ([#4849](https://github.com/craftcms/cms/issues/4849))\n- Fixed an error that occurred when accessing the GraphQL section in the Control Panel if the `allowAdminChanges` config setting was disabled. ([#4884](https://github.com/craftcms/cms/issues/4884))\n- Fixed an error that could occur when executing a GraphQL query if a Matrix field had been converted to a different field type. ([#4848](https://github.com/craftcms/cms/issues/4848))\n- Fixed a deprecation warning when running tests in PhpStorm. ([#4772](https://github.com/craftcms/cms/pull/4772))\n- Fixed an SQL error that occurred when eager loading children for an element that wasn\u2019t in a structure.\n- Fixed a bug that could cause queue jobs to fail when they were run automatically by Craft, if the `enableCsrfProtection` config setting was disabled. ([#4854](https://github.com/craftcms/cms/issues/4854))\n- Fixed an error that could occur if the `select` clause had been completely overridden on an element query, but the `asArray` param wasn\u2019t enabled. ([#4886](https://github.com/craftcms/cms/issues/4886))\n- Fixed a bug where Craft wasn\u2019t always respecting the site-specific status when saving new entries. ([#4892](https://github.com/craftcms/cms/issues/4892))\n\n## 3.3.0.1 - 2019-08-27\n\n### Changed\n- `graphql/api` responses now send CORS headers to allow crossdomain requests. ([#4830](https://github.com/craftcms/cms/issues/4830))\n\n### Fixed\n- Fixed a PHP error that could occur when editing an existing GraphQL schema. ([#4827](https://github.com/craftcms/cms/issues/4827))\n- Fixed a PHP error that could occur when using PostgreSQL. ([#4828](https://github.com/craftcms/cms/issues/4828))\n\n## 3.3.0 - 2019-08-27\n\n### Added\n- Added a built-in, autogenerated GraphQL API for content (Craft Pro only). ([#4540](https://github.com/craftcms/cms/pull/4540))\n- Added \u201cHeadless Mode\u201d, which optimizes the system and Control Panel for headless CMS implementations.\n- It\u2019s now possible to create Single sections without URLs. ([#3883](https://github.com/craftcms/cms/issues/3883))\n- Added the `hiddenInput()` Twig function, which generates a hidden input tag.\n- Added the `input()` Twig function, which generates an input tag.\n- Added the `tag()` Twig function, which generates an HTML tag.\n- Added the `|attr` Twig filter, which modifies the attributes on an HTML tag. ([#4660](https://github.com/craftcms/cms/issues/4660))\n- Added the `|append` and `|prepend` Twig filters, which add new HTML elements as children of an HTML tag. ([#3937](https://github.com/craftcms/cms/issues/3937))\n- Added the `headlessMode` config setting.\n- Added the `purgeStaleUserSessionDuration` config setting.\n- Admin users can now opt into getting the full stack trace view when an uncaught exception occurs when Dev Mode isn\u2019t enabled. ([#4765](https://github.com/craftcms/cms/issues/4765))\n- Admin users can now opt into having Twig templates profiled when Dev Mode isn\u2019t enabled.\n- Added the `graphql/api` controller action.\n- Added `craft\\base\\ApplicationTrait::getGql()`.\n- Added `craft\\base\\EagerLoadingFieldInterface::getEagerLoadingGqlConditions()`.\n- Added `craft\\base\\ElementInterface::getGqlTypeName()`.\n- Added `craft\\base\\ElementInterface::gqlScopesByContext()`.\n- Added `craft\\base\\ElementInterface::gqlTypeNameByContext()`.\n- Added `craft\\base\\Field::getEagerLoadingGqlConditions()`.\n- Added `craft\\base\\FieldInterface::getContentGqlType()`.\n- Added `craft\\base\\GqlInlineFragmentFieldInterface`.\n- Added `craft\\base\\GqlInlineFragmentInterface`.\n- Added `craft\\controllers\\GraphqlController`.\n- Added `craft\\errors\\GqlException`.\n- Added `craft\\events\\RegisterGqlDirectivesEvent`.\n- Added `craft\\events\\RegisterGqlQueriesEvent`.\n- Added `craft\\events\\RegisterGqlTypesEvent`.\n- Added `craft\\gql\\arguments\\elements\\Asset`.\n- Added `craft\\gql\\arguments\\elements\\Category`.\n- Added `craft\\gql\\arguments\\elements\\Entry`.\n- Added `craft\\gql\\arguments\\elements\\GlobalSet`.\n- Added `craft\\gql\\arguments\\elements\\MatrixBlock`.\n- Added `craft\\gql\\arguments\\elements\\Tag`.\n- Added `craft\\gql\\arguments\\elements\\User`.\n- Added `craft\\gql\\base\\Arguments`.\n- Added `craft\\gql\\base\\Directive`.\n- Added `craft\\gql\\base\\ElementArguments`.\n- Added `craft\\gql\\base\\ElementResolver`.\n- Added `craft\\gql\\base\\GeneratorInterface`.\n- Added `craft\\gql\\base\\GqlTypeTrait`.\n- Added `craft\\gql\\base\\InterfaceType`.\n- Added `craft\\gql\\base\\ObjectType`.\n- Added `craft\\gql\\base\\Query`.\n- Added `craft\\gql\\base\\Resolver`.\n- Added `craft\\gql\\base\\StructureElementArguments`.\n- Added `craft\\gql\\directives\\FormatDateTime`.\n- Added `craft\\gql\\directives\\Transform`.\n- Added `craft\\gql\\GqlEntityRegistry`.\n- Added `craft\\gql\\interfaces\\Element`.\n- Added `craft\\gql\\interfaces\\elements\\Asset`.\n- Added `craft\\gql\\interfaces\\elements\\Category`.\n- Added `craft\\gql\\interfaces\\elements\\Entry`.\n- Added `craft\\gql\\interfaces\\elements\\GlobalSet`.\n- Added `craft\\gql\\interfaces\\elements\\MatrixBlock`.\n- Added `craft\\gql\\interfaces\\elements\\Tag`.\n- Added `craft\\gql\\interfaces\\elements\\User`.\n- Added `craft\\gql\\interfaces\\Structure`.\n- Added `craft\\gql\\queries\\Asset`.\n- Added `craft\\gql\\queries\\Category`.\n- Added `craft\\gql\\queries\\Entry`.\n- Added `craft\\gql\\queries\\GlobalSet`.\n- Added `craft\\gql\\queries\\Ping`.\n- Added `craft\\gql\\queries\\Tag`.\n- Added `craft\\gql\\queries\\User`.\n- Added `craft\\gql\\resolvers\\elements\\Asset`.\n- Added `craft\\gql\\resolvers\\elements\\Category`.\n- Added `craft\\gql\\resolvers\\elements\\Entry`.\n- Added `craft\\gql\\resolvers\\elements\\GlobalSet`.\n- Added `craft\\gql\\resolvers\\elements\\MatrixBlock`.\n- Added `craft\\gql\\resolvers\\elements\\Tag`.\n- Added `craft\\gql\\resolvers\\elements\\User`.\n- Added `craft\\gql\\TypeLoader`.\n- Added `craft\\gql\\types\\DateTime`.\n- Added `craft\\gql\\types\\elements\\Asset`.\n- Added `craft\\gql\\types\\elements\\Category`.\n- Added `craft\\gql\\types\\elements\\Element`.\n- Added `craft\\gql\\types\\elements\\Entry`.\n- Added `craft\\gql\\types\\elements\\GlobalSet`.\n- Added `craft\\gql\\types\\elements\\MatrixBlock`.\n- Added `craft\\gql\\types\\elements\\Tag`.\n- Added `craft\\gql\\types\\elements\\User`.\n- Added `craft\\gql\\types\\generators\\AssetType`.\n- Added `craft\\gql\\types\\generators\\CategoryType`.\n- Added `craft\\gql\\types\\generators\\ElementType`.\n- Added `craft\\gql\\types\\generators\\EntryType`.\n- Added `craft\\gql\\types\\generators\\GlobalSetType`.\n- Added `craft\\gql\\types\\generators\\MatrixBlockType`.\n- Added `craft\\gql\\types\\generators\\TableRowType`.\n- Added `craft\\gql\\types\\generators\\TagType`.\n- Added `craft\\gql\\types\\generators\\UserType`.\n- Added `craft\\gql\\types\\Query`.\n- Added `craft\\gql\\types\\TableRow`.\n- Added `craft\\helpers\\App::webResponseConfig()`.\n- Added `craft\\helpers\\ArrayHelper::whereMultiple()`.\n- Added `craft\\helpers\\ElementHelper::sourceElement()`.\n- Added `craft\\helpers\\Gql`.\n- Added `craft\\helpers\\Html::a()`.\n- Added `craft\\helpers\\Html::actionInput()`.\n- Added `craft\\helpers\\Html::appendToTag()`.\n- Added `craft\\helpers\\Html::csrfInput()`.\n- Added `craft\\helpers\\Html::modifyTagAttributes()`.\n- Added `craft\\helpers\\Html::normalizeTagAttributes()`.\n- Added `craft\\helpers\\Html::parseTag()`.\n- Added `craft\\helpers\\Html::parseTagAttributes()`.\n- Added `craft\\helpers\\Html::prependToTag()`.\n- Added `craft\\helpers\\Html::redirectInput()`.\n- Added `craft\\helpers\\StringHelper::afterFirst()`.\n- Added `craft\\helpers\\StringHelper::afterLast()`.\n- Added `craft\\helpers\\StringHelper::append()`.\n- Added `craft\\helpers\\StringHelper::appendRandomString()`.\n- Added `craft\\helpers\\StringHelper::appendUniqueIdentifier()`.\n- Added `craft\\helpers\\StringHelper::at()`.\n- Added `craft\\helpers\\StringHelper::beforeFirst()`.\n- Added `craft\\helpers\\StringHelper::beforeLast()`.\n- Added `craft\\helpers\\StringHelper::capitalizePersonalName()`.\n- Added `craft\\helpers\\StringHelper::count()`.\n- Added `craft\\helpers\\StringHelper::dasherize()`.\n- Added `craft\\helpers\\StringHelper::endsWithAny()`.\n- Added `craft\\helpers\\StringHelper::escape()`.\n- Added `craft\\helpers\\StringHelper::extractText()`.\n- Added `craft\\helpers\\StringHelper::htmlDecode()`.\n- Added `craft\\helpers\\StringHelper::htmlEncode()`.\n- Added `craft\\helpers\\StringHelper::humanize()`.\n- Added `craft\\helpers\\StringHelper::is()`.\n- Added `craft\\helpers\\StringHelper::isBase64()`.\n- Added `craft\\helpers\\StringHelper::isBlank()`.\n- Added `craft\\helpers\\StringHelper::isHexadecimal()`.\n- Added `craft\\helpers\\StringHelper::isHtml()`.\n- Added `craft\\helpers\\StringHelper::isJson()`.\n- Added `craft\\helpers\\StringHelper::isSerialized()`.\n- Added `craft\\helpers\\StringHelper::isUtf8()`.\n- Added `craft\\helpers\\StringHelper::isWhitespace()`.\n- Added `craft\\helpers\\StringHelper::lastSubstringOf()`.\n- Added `craft\\helpers\\StringHelper::lineWrapAfterWord()`.\n- Added `craft\\helpers\\StringHelper::pad()`.\n- Added `craft\\helpers\\StringHelper::padBoth()`.\n- Added `craft\\helpers\\StringHelper::padLeft()`.\n- Added `craft\\helpers\\StringHelper::padRight()`.\n- Added `craft\\helpers\\StringHelper::removeHtml()`.\n- Added `craft\\helpers\\StringHelper::removeHtmlBreak()`.\n- Added `craft\\helpers\\StringHelper::repeat()`.\n- Added `craft\\helpers\\StringHelper::replaceAll()`.\n- Added `craft\\helpers\\StringHelper::replaceBeginning()`.\n- Added `craft\\helpers\\StringHelper::replaceEnding()`.\n- Added `craft\\helpers\\StringHelper::replaceFirst()`.\n- Added `craft\\helpers\\StringHelper::replaceLast()`.\n- Added `craft\\helpers\\StringHelper::safeTruncate()`.\n- Added `craft\\helpers\\StringHelper::shortenAfterWord()`.\n- Added `craft\\helpers\\StringHelper::shuffle()`.\n- Added `craft\\helpers\\StringHelper::slice()`.\n- Added `craft\\helpers\\StringHelper::slugify()`.\n- Added `craft\\helpers\\StringHelper::split()`.\n- Added `craft\\helpers\\StringHelper::startsWithAny()`.\n- Added `craft\\helpers\\StringHelper::stripCssMediaQueries()`.\n- Added `craft\\helpers\\StringHelper::stripEmptyHtmlTags()`.\n- Added `craft\\helpers\\StringHelper::stripHtml()`.\n- Added `craft\\helpers\\StringHelper::stripWhitespace()`.\n- Added `craft\\helpers\\StringHelper::substringOf()`.\n- Added `craft\\helpers\\StringHelper::surround()`.\n- Added `craft\\helpers\\StringHelper::tidy()`.\n- Added `craft\\helpers\\StringHelper::titleizeForHumans()`.\n- Added `craft\\helpers\\StringHelper::toBoolean()`.\n- Added `craft\\helpers\\StringHelper::toSpaces()`.\n- Added `craft\\helpers\\StringHelper::toTabs()`.\n- Added `craft\\helpers\\StringHelper::toTransliterate()`.\n- Added `craft\\helpers\\StringHelper::trimLeft()`.\n- Added `craft\\helpers\\StringHelper::trimRight()`.\n- Added `craft\\helpers\\StringHelper::upperCamelize()`.\n- Added `craft\\helpers\\StringHelper::upperCaseFirst()`.\n- Added `craft\\helpers\\Template::beginProfile()`.\n- Added `craft\\helpers\\Template::endProfile()`.\n- Added `craft\\helpers\\UrlHelper::buildQuery()`.\n- Added `craft\\model\\MatrixBlockType::getField()`.\n- Added `craft\\models\\GqlSchema`.\n- Added `craft\\records\\GqlSchema`.\n- Added `craft\\services\\Fields::getGroupByUid()`.\n- Added `craft\\services\\Gql`.\n- Added `craft\\services\\Matrix::getAllBlockTypes()`.\n- Added `craft\\services\\Sections::getAllEntryTypes()`.\n- Added `craft\\web\\assets\\graphiql\\GraphiqlAsset`.\n- Added `craft\\web\\assets\\graphiql\\VendorAsset`.\n- Added `craft\\web\\twig\\nodes\\ProfileNode`.\n- Added `craft\\web\\twig\\nodevisitors\\Profiler`.\n\n### Changed\n- Relational fields without a specific target site will now only return related elements from the same site as the source element by default, as they did before Craft 3.2. ([#4751](https://github.com/craftcms/cms/issues/4751))\n- Element arrays no longer include `hasDescendants` or `totalDescendants` keys by default. ([#4820](https://github.com/craftcms/cms/issues/4820))\n- Matrix block queries no longer include blocks owned by drafts or revisions by default. ([#4790](https://github.com/craftcms/cms/issues/4790))\n- Entries\u2019 drafts and revisions are now soft-deleted and restored along with their source elements. ([#4797](https://github.com/craftcms/cms/issues/4797))\n- Global set reference tags can now refer to the global set by its handle. ([#4645](https://github.com/craftcms/cms/issues/4645))\n- Improved Twig template profiling to include blocks and macros.\n- Twig template profiling no longer occurs when Dev Mode isn\u2019t enabled, unless an admin user is logged in and has opted into it.\n- The `actionInput()`, `csrfInput()`, and `redirectInput()` Twig functions now support an `options` argument for customizing the HTML tag attributes.\n- The `_layouts/forms/field.html` template now supports `label`, `instructions`, `tip`, `warning`, and `input` blocks that can be overridden when including the template with an `{% embed %}` tag.\n- Editable tables now support a `fullWidth` setting, which can be set to `false` to prevent the table from spanning the full width of the page.\n- Editable tables now support `thin` column settings.\n- Editable tables now support `headingHtml` column settings.\n- Craft no longer overrides the base Twig template class, unless the now-deprecated `suppressTemplateErrors` config setting is enabled. ([#4755](https://github.com/craftcms/cms/issues/4755))\n- Edit Entry pages now get updated preview target URLs after saving a draft, in case the URLs have changed.\n- The confirmation dialog that can appear after running the Asset Indexes utility no longer will close by pressing the <kbd>Esc</kbd> key or clicking outside of the modal. ([#4795](https://github.com/craftcms/cms/issues/4795))\n- Section and Matrix \u201cPropagation Method\u201d settings now display warnings about the potential for data loss when appropriate.\n- Site group settings now display a warning about the potential for data loss.\n- Control Panel subnav items can now have badge counts. ([#4756](https://github.com/craftcms/cms/issues/4756))\n- Improved the performance of element duplication on multi-site installs.\n- Improved the performance of `craft\\web\\View::renderString()` for templates that don\u2019t contain any Twig code.\n- `craft\\behaviors\\DraftBehavior::getCreator()` can now return `null`.\n- `craft\\helpers\\Db::parseParam()` now has an optional `$columnType` argument. ([#4807](https://github.com/craftcms/cms/pull/4807))\n- `craft\\test\\TestSetup::setupCraftDb()` no longer accepts a second argument. Ensure that `craft\\test\\Craft::$testConfig` is set before calling this function. ([#4804](https://github.com/craftcms/cms/pull/4804))\n- `craft\\web\\Request::post()` and `getBodyParam()` will now work with posted JSON data, if the request\u2019s content type is set to `application/json`.\n- Switched from the `stringy/stringy` library to `voku/stringy`. ([#4753](https://github.com/craftcms/cms/issues/4753))\n\n### Deprecated\n- Deprecated the `suppressTemplateErrors` config setting.\n- Deprecated `craft\\services\\Sections::isSectionTemplateValid()`.\n- Deprecated `craft\\web\\twig\\Template`.\n\n### Removed\n- Removed `craft\\base\\ElementInterface::getSource()`. ([#4754](https://github.com/craftcms/cms/issues/4754))\n- Removed `craft\\web\\twig\\Extension::actionInputFunction()`.\n- Removed `craft\\web\\twig\\Extension::csrfInputFunction()`.\n- Removed `craft\\web\\twig\\Extension::redirectInputFunction()`.\n\n### Fixed\n- Fixed an error that could occur if garbage collection was run while Craft 3.2 migrations were pending. ([#4720](https://github.com/craftcms/cms/issues/4720))\n- Fixed a bug where the \u201cPublish live changes for other authors\u2019 entries\u201d permission was being enforced when saving another author\u2019s entry as a new entry. ([#4758](https://github.com/craftcms/cms/issues/4758))\n- Fixed a bug where `craft\\helpers\\UrlHelper` methods would strip out array params in the query string. ([#4778](https://github.com/craftcms/cms/issues/4778))\n- Fixed a SQL error that occurred when a `{% cache %}` tag was used on a page with a 4-byte character in the URI. ([#4780](https://github.com/craftcms/cms/issues/4780))\n- Fixed a bug where Craft could show a nondescript error when navigating away from a Control Panel page if an Ajax request was currently in progress. ([#4796](https://github.com/craftcms/cms/issues/4796))\n- Fixed an error that occurred when editing an entry with a draft that was created by a soft-deleted user. ([#4800](https://github.com/craftcms/cms/issues/4800))\n- Fixed a bug where entry revisions and drafts would be deleted when the user that created them was hard-deleted.\n- Fixed a SQL error that could occur when executing an element query that had custom `JOIN` and `WHERE` clauses if the `search` param was also set. ([#4788](https://github.com/craftcms/cms/issues/4788))\n- Fixed a bug where default field values weren\u2019t being applied to Matrix blocks that were autocreated per the Min Blocks setting. ([#4806](https://github.com/craftcms/cms/issues/4806))\n- Fixed Plugin Store dropdowns which were not working properly with Windows Edge browsers.\n- Fixed a SQL error that could occur when `:empty:` or `not :empty:` was passed to a date param on an element query when running MySQL 8. ([#4808](https://github.com/craftcms/cms/issues/4808))\n- Fixed a bug where Dropdown and Multi-select fields\u2019 Dropdown Options settings weren\u2019t autofocusing on the first input when adding a new row with the keyboard. ([#4823](https://github.com/craftcms/cms/issues/4823))\n\n## 3.2.10 - 2019-08-13\n\n### Added\n- Added `craft\\fields\\BaseRelationField::settingsTemplateVariables()`. ([#4732](https://github.com/craftcms/cms/issues/4732))\n- Added `craft\\services\\Search::deleteOrphanedIndexes()`.\n- Added `craft\\validators\\UriFormatValidator::$disallowTriggers`.\n- Added the `Craft.startsWith()` JavaScript method.\n\n### Changed\n- Improved garbage collection performance when hard-deleting hundreds of thousands of elements. ([#4735](https://github.com/craftcms/cms/issues/4735))\n- Element queries\u2019 `title` param will now accept a value of `'0'`.\n- `craft\\services\\Elements::deleteElementById()` now has a `$hardDelete` argument. ([#4747](https://github.com/craftcms/cms/pull/4747))\n- It\u2019s no longer possible to save routes or URI formats that begin with the `actionTrigger` or `cpTrigger` config settings. ([#4154](https://github.com/craftcms/cms/issues/4154))\n- Categories fields\u2019 selection modals now show the site menu. ([#4749](https://github.com/craftcms/cms/issues/4749))\n\n### Removed\n- Removed `craft\\records\\Route`.\n\n### Fixed\n- Fixed a bug where Entry fixtures wouldn\u2019t get unloaded. ([#4663](https://github.com/craftcms/cms/issues/4663))\n- Fixed a bug where entry content wouldn\u2019t get propagated to other sites if an entry was created and then saved before Craft had finished autosaving the draft. ([#4423](https://github.com/craftcms/cms/issues/4423))\n- Fixed a bug where entry forms could miss the fact that a Matrix block had been deleted. ([#4727](https://github.com/craftcms/cms/issues/4727))\n- Fixed a PHP error that could occur on environments where the Intl PHP extension was installed but the `IDNA_NONTRANSITIONAL_TO_ASCII` or `INTL_IDNA_VARIANT_UTS46` constants weren\u2019t defined. ([#4722](https://github.com/craftcms/cms/issues/4722))\n- Fixed a PHP error that could occur if a plugin was configured with settings even though it didn\u2019t support settings. ([#4706](https://github.com/craftcms/cms/issues/4706))\n- Fixed an error that occurred when a validation error occurred on an entry while it was being created or updated from a draft. ([#4733](https://github.com/craftcms/cms/issues/4733))\n- Fixed an infinite recursion bug that could occur when validating circular relations. ([#4482](https://github.com/craftcms/cms/issues/4482))\n- Fixed a bug where elements with a title of \u201c0\u201d would show their ID instead of their title in element indexes and relational fields. ([#4745](https://github.com/craftcms/cms/issues/4745))\n- Fixed a bug where Craft was redirecting to the Dashboard when attempting to export elements, if the `tokenParam` config setting was set to something besides `token`. ([#4737](https://github.com/craftcms/cms/issues/4737))\n\n## 3.2.9 - 2019-08-06\n\n### Added\n- Added the `ignorePlaceholders` element query param.\n- Added the `cp.entries.edit.meta` and `cp.entries.edit.settings` template hooks to the Edit Entry page.\n- Added `craft\\base\\ElementInterface::getSource()`.\n- Added `craft\\base\\ElementTrait::$newSiteIds`.\n- Added `craft\\models\\Site::$dateCreated` and `$dateUpdated`. ([#4703](https://github.com/craftcms/cms/issues/4703))\n\n### Changed\n- Improved the Control Panel header styling for mobile and on pages with long titles. ([#4548](https://github.com/craftcms/cms/issues/4548))\n- Element references in the Control Panel now reveal the site the element was fetched from in their tooltips, on multi-site installs. ([#4690](https://github.com/craftcms/cms/issues/4690))\n- Element editor HUDs now always show a header with the element\u2019s site name on multi-site installs, even if the element is only editable in one site. ([#4690](https://github.com/craftcms/cms/issues/4690))\n- Entry preview tokens now respect the `defaultTokenDuration` config setting, rather than always expiring after 24 hours. ([#4683](https://github.com/craftcms/cms/pull/4683))\n- Improved disabled select field styling. ([#4709](https://github.com/craftcms/cms/pull/4709))\n\n### Deprecated\n- Deprecated `craft\\behaviors\\DraftBehavior::getSource()`.\n- Deprecated `craft\\behaviors\\RevisionBehavior::getSource()`.\n\n### Fixed\n- Fixed a bug where elements listed in a Structure view could be missing their descendant toggles even if all of their descendants were disabled. ([#4685](https://github.com/craftcms/cms/issues/4685))\n- Fixed a bug where element CSV exports were limited to 50 elements if no limit was set. ([#4692](https://github.com/craftcms/cms/issues/4692))\n- Fixed a 400 error that occurred when submitting an entry form that didn\u2019t have an `entryId` param. ([#4693](https://github.com/craftcms/cms/issues/4693))\n- Fixed a bug where `craft\\base\\Element::getDescendants()` and other structure methods could return the wrong results when called on a draft. ([#4694](https://github.com/craftcms/cms/issues/4694))\n- Fixed a bug where Matrix blocks weren\u2019t getting duplicated to newly-enabled sites for elements if the field\u2019s Propagation Method setting wasn\u2019t set to \u201cSave blocks to all sites the owner element is saved in\u201d. ([#4698](https://github.com/craftcms/cms/issues/4698))\n- Fixed a bug where the Database Backup could result in a 404 error on load-balanced environments. ([#4699](https://github.com/craftcms/cms/issues/4699))\n- Fixed a bug where the \u201cCurrent\u201d entry revision link wouldn\u2019t always work. ([#4705](https://github.com/craftcms/cms/issues/4705))\n- Fixed a bug where the `craft\\services\\Search::EVENT_AFTER_SEARCH` event wasn\u2019t always firing. ([#4710](https://github.com/craftcms/cms/issues/4710))\n- Fixed a bug where `craft\\services\\Users::purgeExpiredPendingUsers()` was attempting to delete already-trashed users.\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.2.8 - 2019-07-30\n\n### Added\n- Element indexes with unsaved drafts now show a \u201cDrafts\u201d option in the status menu.\n- Added the `utils/fix-element-uids` command, which ensures all elements have unique UIDs. ([#4653](https://github.com/craftcms/cms/issues/4653))\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to create a homepage Single section if a prior entry revisions\u2019 URI had been set to `__home__`. ([#4657](https://github.com/craftcms/cms/issues/4657))\n- Fixed a bug where the user deletion confirmation dialog was including revisions and drafts when counting entries for the content summary.\n- Fixed an error that occurred when deleting a user, if another user had been chosen to inherit their content. ([#4670](https://github.com/craftcms/cms/issues/4670))\n- Fixed a bug where users could be warned about losing unsaved changes when updating an entry from a draft, while the draft was being autosaved. ([#4614](https://github.com/craftcms/cms/issues/4614))\n- Fixed a bug where Categories fields weren\u2019t always getting updated when a category they were related to got moved under another category. ([#4672](https://github.com/craftcms/cms/issues/4672))\n- Fixed an error that occurred on the Settings \u2192 Routes page, if one of the routes didn\u2019t have a URI pattern. ([#4676](https://github.com/craftcms/cms/issues/4676))\n- Fixed some styling and behavior issues on the Settings \u2192 Routes page.\n\n## 3.2.7 - 2019-07-25\n\n### Fixed\n- Fixed an error where it wasn\u2019t possible to scale SVGs using only height. ([#4643](https://github.com/craftcms/cms/pull/4643))\n- Fixed a bug where the content area of some Control Panel pages weren\u2019t getting any bottom padding. ([#4644](https://github.com/craftcms/cms/issues/4644))\n- Fixed a bug where installing a plugin immediately after installing Craft from the console could corrupt the project config if `useProjectConfigFile` was enabled. ([#3870](https://github.com/craftcms/cms/issues/3870))\n- Fixed a bug where entry forms could overlook changes made to Categories fields. ([#4648](https://github.com/craftcms/cms/issues/4648))\n- Fixed a bug where element search indexes weren\u2019t being updated right away after an element was created or updated from an element editor HUD.\n- Fixed a bug where back-end slug validation wasn\u2019t working correctly for slugs with some Unicode characters. ([#1535](https://github.com/craftcms/cms/issues/1535))\n- Fixed a bug where Craft was attempting to delete template caches even when saving a draft or revision.\n\n## 3.2.6 - 2019-07-23\n\n### Changed\n- When enabling a new site for a Single section, Craft now uses the primary site\u2019s content as the starting point for the new site\u2019s content, if the section was already enabled for it.\n- Swapped the position of the \u201cSave as a Draft\u201d and \u201cSave Entry\u201d buttons. ([#4622](https://github.com/craftcms/cms/issues/4622))\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports arrays created from `DateTime` objects. ([#4627](https://github.com/craftcms/cms/issues/4627))\n- Plugin license key inputs are no longer limited to 29 characters, to make room for long environment variable names. ([#4393](https://github.com/craftcms/cms/issues/4393))\n- Updated Imagine to 1.2.2.1.\n\n### Fixed\n- Fixed a bug where Craft could load the same JavaScript and CSS files multiple times when opening element editor HUDs. ([#4620](https://github.com/craftcms/cms/issues/4620))\n- Fixed a bug where each animated GIF frame would still be parsed when generating a thumbnail, even if the `transformGifs` setting was set to `false`. ([#4588](https://github.com/craftcms/cms/issues/4588))\n- Fixed a bug where back-end slug validation wasn\u2019t working correctly for slugs with Unicode characters. ([#4628](https://github.com/craftcms/cms/issues/4628))\n- Fixed a bug where it wasn\u2019t possible to create new entries if the section handle matched the `pageTrigger` config setting, and the `pageTrigger` config setting had a trailing slash. ([#4631](https://github.com/craftcms/cms/issues/4631))\n- Fixed a bug where the `sections.previewTargets` database column was getting created as a `varchar` instead of `text` column for new Craft installs. ([#4638](https://github.com/craftcms/cms/issues/4638))\n\n### Security\n- Fixed a bug where the `preserveExifData` config setting wasn\u2019t being respected on image upload.\n\n## 3.2.5.1 - 2019-07-19\n\n### Fixed\n- Fixed an error that occurred if a plugin license key was set to an environment variable, which was set to an invalid key. ([#4604](https://github.com/craftcms/cms/issues/4604))\n- Fixed an error that prevented image thumbnails from generating in the Control Panel when using ImageMagick. ([#4609](https://github.com/craftcms/cms/issues/4609))\n\n## 3.2.5 - 2019-07-19\n\n### Added\n- Added `craft\\services\\Elements::getPlaceholderElements()`.\n\n### Changed\n- If an invalid entry draft or revision edit URL is accessed, but the source entry does exist, Craft now redirects the browser to the source entry\u2019s edit page. ([#4574](https://github.com/craftcms/cms/issues/4574))\n- Preview requests now include the previewed entry in element queries even if the `status`, `drafts`, or `revisions` parameters are set to exclude it. ([#4581](https://github.com/craftcms/cms/issues/4581))\n- Back-end slug generation now follows the same rules as JavaScript. ([#4607](https://github.com/craftcms/cms/issues/4607))\n- Unsaved entry drafts now get assigned a new ID when they are fully saved, so they are treated as new elements. ([#4589](https://github.com/craftcms/cms/issues/4589))\n\n### Fixed\n- Fixed some bugs with the \u201cSave Entry\u201d menu options, when editing an unsaved draft. ([#4614](https://github.com/craftcms/cms/issues/4614))\n- Fixed a bug where Craft could forget which site was being edited when updating an entry from a draft. ([#4615](https://github.com/craftcms/cms/issues/4615))\n\n## 3.2.4.1 - 2019-07-17\n\n### Fixed\n- Fixed an error that occurred when attempting to share a disabled entry. ([#4596](https://github.com/craftcms/cms/issues/4596))\n- Fixed a bug where new Email and URL cells in Table fields weren\u2019t getting the correct input type. ([#4595](https://github.com/craftcms/cms/issues/4595))\n\n## 3.2.4 - 2019-07-17\n\n### Changed\n- Brought back the \u201cPreview\u201d button for the Current revision of entries, which now creates a draft before activating the entry preview. ([#4584](https://github.com/craftcms/cms/issues/4584))\n- The \u201cSave as a Draft\u201d button now creates the draft over Ajax, when it\u2019s not the primary submit button for the page.\n- When Craft isn\u2019t able to sync incoming `project.yaml` changes due to schema version conflicts, Craft now lists which packages are conflicting.. ([#4568](https://github.com/craftcms/cms/issues/4568))\n\n### Fixed\n- Fixed a JavaScript error that could occur after uploading a file directly onto an Assets field when editing the Current revision of an entry.\n- Fixed a bug where draft forms could become unresponsive if the user attempted to navigate away from the page or submit the form in the middle of an autosave. ([#4578](https://github.com/craftcms/cms/issues/4578))\n- Fixed a SQL error that could occur when passing `:empty:` or `:notempty:` to a relational field\u2019s element query param. ([#4529](https://github.com/craftcms/cms/issues/4529))\n- Fixed a bug where Number fields weren\u2019t getting set to their default values for new entries. ([#4586](https://github.com/craftcms/cms/issues/4586))\n- Fixed a bug query string parameters were getting URL-encoded when applied to generated pagination URLs.\n- Fixed a bug where Single entries had the option to be duplicated or deleted. ([#4590](https://github.com/craftcms/cms/issues/4590))\n\n## 3.2.3 - 2019-07-16\n\n### Added\n- Added `craft\\controllers\\EntriesController::actionDuplicateEntry()`.\n- Added `craft\\web\\UrlManager::setMatchedElement()`.\n\n### Changed\n- Craft no longer creates drafts automatically when editing entries. The user must click a \u201cSave as a Draft\u201d button to create one. ([#4549](https://github.com/craftcms/cms/issues/4549))\n- Entries are now immediately savable, whether or not any changes were made. ([#4535](https://github.com/craftcms/cms/issues/4535))\n- The \u201cSave Entry\u201d button now redirects the user to the Entries index page. ([#4575](https://github.com/craftcms/cms/issues/4575))\n- Brought back the \u201cSave and continue editing\u201d and \u201cSave and add another\u201d options for entries.\n- It\u2019s no longer possible to preview entries\u2019 Current revision. A draft must be created first.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to delete Matrix blocks if Min Blocks and Max Blocks were set to the same value, and an element already had more than that many blocks. ([#4562](https://github.com/craftcms/cms/issues/4562))\n- Fixed a bug where `craft\\web\\UrlManager::getMatchedElement()` could return the incorrect result on preview requests. ([#4542](https://github.com/craftcms/cms/issues/4542))\n- Fixed an error that occurred on the Settings \u2192 Email page if email settings were missing from the project config. ([#4552](https://github.com/craftcms/cms/issues/4552))\n- Fixed a bug where it wasn\u2019t possible to toggle site-specific entry statuses when editing drafts. ([#4577](https://github.com/craftcms/cms/issues/4577))\n\n## 3.2.2 - 2019-07-14\n\n### Added\n- Added `craft\\helpers\\ElementHelper::isTempSlug()`.\n- Added `craft\\helpers\\ElementHelper::tempSlug()`.\n- Added `craft\\helpers\\UrlHelper::removeParam()`.\n\n### Changed\n- Craft no longer ensures a recent revision exists before creating a draft for an element.\n- Element exports are limited to CSV files now, to avoid the GD requirement imposed by the PHPSpreadsheet library. ([#4553](https://github.com/craftcms/cms/issues/4553))\n\n### Fixed\n- Fixed a bug where multi-site element queries with the `unique` and `offset` params set weren\u2019t returning any results. ([#4560](https://github.com/craftcms/cms/issues/4560))\n- Fixed an error that could occur when creating a draft. ([#4515](https://github.com/craftcms/cms/issues/4515))\n- Fixed a bug where Craft wasn\u2019t generating a new slug for entries that were saved with a blank Slug field. ([#4518](https://github.com/craftcms/cms/issues/4518))\n- Fixed a bug where disabled select options could lose their disabled text styling in Firefox. ([#4526](https://github.com/craftcms/cms/issues/4526))\n- Fixed a bug where entry forms could miss the fact that a file had been uploaded to an Assets field. ([#4534](https://github.com/craftcms/cms/issues/4534))\n- Fixed a bug where selecting \u201cCreate a new child entry\u201d in a Structure section on a multi-site install would result in a 404 error. ([#4541](https://github.com/craftcms/cms/issues/4541))\n- Fixed a bug where it wasn\u2019t possible to set test-specific config settings. ([#4539](https://github.com/craftcms/cms/pull/4539))\n- Fixed an error that occurred when exporting elements if Limit was set to `0`. ([#4547](https://github.com/craftcms/cms/issues/4547))\n- Fixed a bug where the `{% paginate %}` tag wouldn\u2019t generate links to the first page correctly when using query string pagination. ([#4550](https://github.com/craftcms/cms/issues/4550))\n- Fixed an error that occurred when indexing assets from a console request, if no volumes were defined yet. ([#2798](https://github.com/craftcms/cms/issues/2798))\n- Fixed a bug where the \u201cDelete\u201d link could show up in the draft meta HUD for unsaved drafts. ([#4557](https://github.com/craftcms/cms/issues/4557))\n\n## 3.2.1 - 2019-07-11\n\n### Added\n- Added `craft\\console\\Request::getIsPreview()`.\n- Added `craft\\web\\Request::getIsPreview()`.\n\n### Changed\n- If a draft can\u2019t be saved, an alert icon is now shown in the Control Panel header, which can be clicked on to reveal more information.\n- Element revisions no longer store snapshot data.\n\n### Fixed\n- Fixed a bug where Feed widget items weren\u2019t getting hyperlinked.\n- Fixed a bug where the `app/migrate` controller wasn\u2019t applying new `project.yaml` changes if there were no pending migrations.\n- Fixed a SQL error that could occur when saving an entry or entry draft. ([#4508](https://github.com/craftcms/cms/issues/4508))\n- Fixed a bug where Assets fields set to restrict uploads to a single folder could have empty selector modals. ([#4522](https://github.com/craftcms/cms/issues/4522))\n- Fixed an error that could occur if a template was accessing the deprecated `locale` property of an element query, but `siteId` wasn\u2019t set to an integer. ([#4531](https://github.com/craftcms/cms/issues/4531))\n- Fixed a bug where users without the \u201cPublish live changes\u201d permission for a section weren\u2019t able to create new entries. ([#4528](https://github.com/craftcms/cms/issues/4529))\n- Fixed a PHP error that could occur when uploading files to Assets fields on the front end. ([#4382](https://github.com/craftcms/cms/issues/4382))\n- Fixed a bug where elements listed in a Structure view could show descendant toggles even if they had no descendants. ([#4504](https://github.com/craftcms/cms/issues/4504))\n- Fixed a backwards compatibility issue. ([#4523](https://github.com/craftcms/cms/issues/4523))\n\n## 3.2.0 - 2019-07-09\n\n> **Warning**\n> If you\u2019ve ever run the `project-config/rebuild` command, it\u2019s highly recommended that you run it again with Craft 3.1.34.2, before updating to Craft 3.2.\n\n> **Warning**\n> Custom login controllers must now explicitly set their `$allowAnonymous` values to include `self::ALLOW_ANONYMOUS_OFFLINE` if they wish to be available when the system is offline.\n\n> **Note**\n> If you have Super Table or Neo installed, you should update those **at the same time** as Craft, to avoid unnecessary search index jobs from being added to the queue.\n\n### Added\n- All element types now have the option to support drafts and revisions.\n- Drafts are now autocreated when content is modified, and autosaved whenever the content changes. ([#1034](https://github.com/craftcms/cms/issues/1034))\n- Drafts and revisions now store content across all sites supported by the element. ([#2669](https://github.com/craftcms/cms/issues/2669))\n- Content previewing is now draft-based, and drafts are stored as specialized elements, so it\u2019s no longer necessary to add special cases in templates for preview requests. ([#1787](https://github.com/craftcms/cms/issues/1787), [#2801](https://github.com/craftcms/cms/issues/2801))\n- Sections now have a \u201cPreview Targets\u201d setting when running Craft Pro, which can be used to configure additional locations that entries can be previewed from. ([#1489](https://github.com/craftcms/cms/issues/1489))\n- Sections now have a \u201cPropagation Method\u201d setting, enabling entries to only be propagated to other sites in the same site group, or with the same language. ([#3554](https://github.com/craftcms/cms/issues/3554))\n- Matrix fields now have a \u201cPropagation Method\u201d setting, enabling blocks to only be propagated to other sites in the same site group, or with the same language. ([#3554](https://github.com/craftcms/cms/issues/3554))\n- Single entries now have editable slugs. ([#3368](https://github.com/craftcms/cms/issues/3368))\n- Headless content previewing is now possible by forwarding request tokens off to content API requests. ([#1231](https://github.com/craftcms/cms/issues/1231))\n- Preview iframes are now created with a `src` attribute already in place, improving SPA support. ([#2120](https://github.com/craftcms/cms/issues/2120))\n- Entry \u201cShare\u201d buttons are now visible on mobile. ([#4408](https://github.com/craftcms/cms/issues/4408))\n- Added the \u201cTemp Uploads Location\u201d system setting (available from Settings \u2192 Assets \u2192 Settings), which makes it possible to choose the volume and path that temporary asset uploads should be stored. ([#4010](https://github.com/craftcms/cms/issues/4010))\n- Added the `maxRevisions` config setting. ([#926](https://github.com/craftcms/cms/issues/926))\n- Added the `purgeUnsavedDraftsDuration` config setting, which determines how long unsaved drafts should be allowed to exist before getting deleted via garbage collection.\n- Added the \u201cEdit images\u201d permission. ([#3349](https://github.com/craftcms/cms/issues/3349))\n- Added the \u201cImpersonate users\u201d permission. ([#3501](https://github.com/craftcms/cms/issues/3501))\n- Added the `drafts`, `draftId`, `draftOf`, `draftCreator`, `revisions`, `revisionId`, `revisionOf`, and `revisionCreator` element query params.\n- The `site` element query params now support passing multiple site handles, or `'*'`, to query elements across multiple sites at once. ([#2854](https://github.com/craftcms/cms/issues/2854))\n- Relational fields now have a \u201cValidate related elements\u201d setting, which ensures that the related elements pass validation before the source element can be saved with them selected. ([#4095](https://github.com/craftcms/cms/issues/4095))\n- Table fields can now have Dropdown, Email, and URL columns. ([#811](https://github.com/craftcms/cms/issues/811), [#4180](https://github.com/craftcms/cms/pull/4180))\n- Dropdown and Multi-select fields can now have optgroups. ([#4236](https://github.com/craftcms/cms/issues/4236))\n- Date/Time, Dropdown, Lightswitch, Number, and Radio Buttons fields are now listed as sort options in element indexes. ([#2818](https://github.com/craftcms/cms/issues/2818))\n- Asset, category, entry, and user indexes can now have \u201cUID\u201d columns. ([#4433](https://github.com/craftcms/cms/issues/4433))\n- Added the `unique` element query param, which can be used to prevent duplicate elements when querying elements across multiple sites.\n- Added the `preferSites` element query param, which can be used to set the preferred sites that should be used for multi-site element queries, when the `unique` param is also enabled.\n- Element index pages are now paginated for non-Structure views. ([#818](https://github.com/craftcms/cms/issues/818))\n- Element index pages now have an \u201cExport\u2026\u201d button that will export all of the elements in the current view (across all pages) or up to a custom limit, in either CSV, XLS, XLSX, or ODS format. ([#994](https://github.com/craftcms/cms/issues/994))\n- Added the `{% dd %}` Twig tag. ([#4399](https://github.com/craftcms/cms/issues/4399))\n- Added the `attr()` Twig function, which can generate a list of HTML/XML attributes. ([#4237](https://github.com/craftcms/cms/pull/4237))\n- Added the `|withoutKey` Twig filter.\n- Added the `resave/matrix-blocks` console command.\n- The `index-assets/*` commands now support a `--create-missing-assets=0` option, which prevents Craft from creating asset records when they don\u2019t exist yet, and offers an opportunity to fix the location of any asset records that are missing their associated files, when the filename matches one of the files missing an index.\n- Added the `mailer/test` command. ([#4020](https://github.com/craftcms/cms/issues/4020))\n- Added the `tests/setup` command, which generates a test suite for the current Craft project.\n- Jobs can now set progress labels, which will be shown below their description and progress bar in the queue HUD. ([#1931](https://github.com/craftcms/cms/pull/1931))\n- Added the `_layouts/element` template, which can be extended by element edit pages that wish to support drafts, revisions, and content previewing.\n- Added the `_special/sitepicker` template.\n- It\u2019s now possible for plugins and modules to define custom actions on console controllers.\n- Added a testing framework for Craft and plugins, powered by Codeception. ([#3382](https://github.com/craftcms/cms/pull/3382), [#1485](https://github.com/craftcms/cms/issues/1485), [#944](https://github.com/craftcms/cms/issues/944))\n- Added `craft\\base\\ApplicationTrait::getInstalledSchemaVersion()`.\n- Added `craft\\base\\BlockElementInterface`.\n- Added `craft\\base\\Element::EVENT_AFTER_PROPAGATE`.\n- Added `craft\\base\\Element::EVENT_REGISTER_PREVIEW_TARGETS`.\n- Added `craft\\base\\Element::previewTargets()`.\n- Added `craft\\base\\ElementInterface::afterPropagate()`.\n- Added `craft\\base\\ElementInterface::getCurrentRevision()`.\n- Added `craft\\base\\ElementInterface::getIsDraft()`.\n- Added `craft\\base\\ElementInterface::getIsRevision()`.\n- Added `craft\\base\\ElementInterface::getIsUnsavedDraft()`.\n- Added `craft\\base\\ElementInterface::getPreviewTargets()`.\n- Added `craft\\base\\ElementInterface::getSourceId()`.\n- Added `craft\\base\\ElementInterface::getSourceUid()`.\n- Added `craft\\base\\ElementInterface::getUiLabel()`, which is now used to define what an element will be called in the Control Panel. ([#4211](https://github.com/craftcms/cms/pull/4211))\n- Added `craft\\base\\ElementInterface::pluralDisplayName()`, which element type classes can use to define the plural of their display name.\n- Added `craft\\base\\ElementInterface::setRevisionCreatorId()`.\n- Added `craft\\base\\ElementInterface::setRevisionNotes()`.\n- Added `craft\\base\\ElementTrait::$dateDeleted`. ([#4493](https://github.com/craftcms/cms/issues/4493))\n- Added `craft\\base\\ElementTrait::$draftId`.\n- Added `craft\\base\\ElementTrait::$hardDelete`.\n- Added `craft\\base\\ElementTrait::$previewing`.\n- Added `craft\\base\\ElementTrait::$propagateAll`.\n- Added `craft\\base\\ElementTrait::$revisionId`.\n- Added `craft\\base\\Field::EVENT_AFTER_ELEMENT_PROPAGATE`.\n- Added `craft\\base\\Field::getSortOption()`.\n- Added `craft\\base\\FieldInterface::afterElementPropagate()`.\n- Added `craft\\base\\FieldInterface::valueType()`. ([#3894](https://github.com/craftcms/cms/issues/3894))\n- Added `craft\\base\\SortableFieldInterface`, which can be implemented by field classes that should be sortable in element indexes.\n- Added `craft\\behaviors\\DraftBehavior`.\n- Added `craft\\behaviors\\RevisionBehavior`.\n- Added `craft\\console\\CallableAction`.\n- Added `craft\\console\\Controller`.\n- Added `craft\\console\\controllers\\ResaveController::saveElements()`.\n- Added `craft\\console\\ControllerTrait`.\n- Added `craft\\console\\Request::getToken()`.\n- Added `craft\\controllers\\PreviewController`.\n- Added `craft\\errors\\MissingAssetException`.\n- Added `craft\\events\\BatchElementActionEvent`.\n- Added `craft\\events\\DefineConsoleActionsEvent`.\n- Added `craft\\events\\ElementQueryEvent`.\n- Added `craft\\events\\RegisterPreviewTargetsEvent`.\n- Added `craft\\events\\RevisionEvent`.\n- Added `craft\\helpers\\Component::validateComponentClass()`.\n- Added `craft\\helpers\\ElementHelper::isDraftOrRevision()`.\n- Added `craft\\helpers\\ElementHelper::rootElement()`.\n- Added `craft\\models\\Section::$propagationMethod`.\n- Added `craft\\queue\\jobs\\UpdateSearchIndex`.\n- Added `craft\\services\\Drafts`, accessible via `Craft::$app->drafts`.\n- Added `craft\\services\\Elements::propagateElements()` along with `EVENT_BEFORE_PROPAGATE_ELEMENTS`, `EVENT_AFTER_PROPAGATE_ELEMENTS`, `EVENT_BEFORE_PROPAGATE_ELEMENT`, and `EVENT_AFTER_PROPAGATE_ELEMENT` events. ([#4139](https://github.com/craftcms/cms/issues/4139))\n- Added `craft\\services\\Elements::resaveElements()` along with `EVENT_BEFORE_RESAVE_ELEMENTS`, `EVENT_AFTER_RESAVE_ELEMENTS`, `EVENT_BEFORE_RESAVE_ELEMENT`, and `EVENT_AFTER_RESAVE_ELEMENT` events. ([#3482](https://github.com/craftcms/cms/issues/3482))\n- Added `craft\\services\\Matrix::duplicateBlocks()`.\n- Added `craft\\services\\Matrix::getSupportedSiteIdsForField()`.\n- Added `craft\\services\\Revisions`, accessible via `Craft::$app->revisions`.\n- Added `craft\\services\\Users::canImpersonate()`.\n- Added `craft\\web\\Request::getIsLoginRequest()` and `craft\\console\\Request::getIsLoginRequest()`.\n- Added `craft\\web\\UrlManager::$checkToken`.\n- Added the `Craft.isSameHost()` JavaScript method.\n- Added the `Craft.parseUrl()` JavaScript method.\n- Added the `Craft.randomString()` JavaScript method.\n- Added the `Craft.DraftEditor` JavaScript class.\n- Added the `Craft.Preview` JavaScript class.\n\n### Changed\n- Relational fields are now capable of selecting elements from multiple sites, if they haven\u2019t been locked down to only related elements from a single site. ([#3584](https://github.com/craftcms/cms/issues/3584))\n- Element selector modals now always show source headings, and list sources in the configured order. ([#4494](https://github.com/craftcms/cms/issues/4494))\n- Reference tags can now specify the site to load the element from. ([#2956](https://github.com/craftcms/cms/issues/2956))\n- Improved the button layout of Edit Entry pages. ([#2325](https://github.com/craftcms/cms/issues/2325))\n- Improved the performance of saving elements.\n- The Control Panel now shows the sidebar on screens that are at least 1,000 pixels wide. ([#4079](https://github.com/craftcms/cms/issues/4079))\n- The `_layouts/cp` template now supports a `showHeader` variable that can be set to `false` to remove the header.\n- The `_layouts/cp` Control Panel template now supports a `footer` block, which will be output below the main content area.\n- Renamed `craft\\helpers\\ArrayHelper::filterByValue()` to `where()`.\n- Anonymous/offline/Control Panel access validation now takes place from `craft\\web\\Controller::beforeAction()` rather than `craft\\web\\Application::handleRequest()`, giving controllers a chance to do things like set CORS headers before a `ForbiddenHttpException` or `ServiceUnavailableHttpException` is thrown. ([#4008](https://github.com/craftcms/cms/issues/4008))\n- Controllers can now set `$allowAnonymous` to a combination of bitwise integers `self::ALLOW_ANONYMOUS_LIVE` and `self::ALLOW_ANONYMOUS_OFFLINE`, or an array of action ID/bitwise integer pairs, to define whether their actions should be accessible anonymously even when the system is offline.\n- Improved the error message when Project Config reaches the maximum deferred event count.\n- Craft now deletes expired template caches as part of its garbage collection routine.\n- Craft no longer warns about losing unsaved changes when leaving the page while previewing entries, if the changes were autosaved. ([#4439](https://github.com/craftcms/cms/issues/4439))\n- `fieldValues` is a now reserved field handle. ([#4453](https://github.com/craftcms/cms/issues/4453))\n- Improved the reliability of `craft\\helpers\\UrlHelper::rootRelativeUrl()` and `cpUrl()`.\n- `craft\\base\\ElementInterface::eagerLoadingMap()` and `craft\\base\\EagerLoadingFieldInterface::getEagerLoadingMap()` can now return `null` to opt out of eager loading. ([#4220](https://github.com/craftcms/cms/pull/4220))\n- `craft\\db\\ActiveRecord` no longer sets the `uid`, `dateCreated`, or `dateUpdated` values for new records if they were already explicitly set.\n- `craft\\db\\ActiveRecord` no longer updates the `dateUpdated` value for existing records if nothing else changed or if `dateUpdated` had already been explicitly changed.\n- `craft\\helpers\\UrlHelper::siteUrl()` and `url()` will now include the current request\u2019s token in the generated URL\u2019s query string, for site URLs.\n- `craft\\events\\MoveElementEvent` now extends `craft\\events\\ElementEvent`. ([#4315](https://github.com/craftcms/cms/pull/4315))\n- `craft\\queue\\BaseJob::setProgress()` now has a `$label` argument.\n- `craft\\queue\\jobs\\PropagateElements` no longer needs to be configured with a `siteId`, and no longer propagates elements to sites if they were updated in the target site more recently than the source site.\n- `craft\\queue\\QueueInterface::setProgress()` now has a `$label` argument.\n- `craft\\services\\Assets::getUserTemporaryUploadFolder()` now returns the current user\u2019s temporary upload folder by default if no user is provided.\n- `craft\\services\\Elements::deleteElement()` now has a `$hardDelete` argument.\n- `craft\\services\\Elements::deleteElement()` now has a `$hardDelete` argument. ([#3392](https://github.com/craftcms/cms/issues/3392))\n- `craft\\services\\Elements::getElementById()` now has a `$criteria` argument.\n- `craft\\services\\Elements::propagateElement()` now has a `$siteElement` argument.\n- `craft\\services\\Elements::saveElement()` now preserves existing elements\u2019 current `dateUpdated` value when propagating or auto-resaving elements.\n- `craft\\services\\Elements::saveElement()` now preserves the `uid`, `dateCreated`, and `dateUpdated` values on new elements if they were explicitly set. ([#2909](https://github.com/craftcms/cms/issues/2909))\n- `craft\\services\\Elements::setPlaceholderElement()` now throws an exception if the element that was passed in doesn\u2019t have an ID.\n- `craft\\services\\Matrix::saveField()` is no longer is responsible for duplicating blocks from other elements.\n- `craft\\web\\twig\\variables\\CraftVariable` no longer triggers the `defineComponents` event. ([#4416](https://github.com/craftcms/cms/issues/4416))\n- `craft\\web\\UrlManager::setRouteParams()` now has a `$merge` argument, which can be set to `false` to completely override the route params.\n- It\u2019s now possible to pass a `behaviors` key to the `$newAttributes` argument of `craft\\services\\Elements::duplicateElement()`, to preattach behaviors to the cloned element before it\u2019s saved.\n\n### Removed\n- Removed the Search Indexes utility. ([#3698](https://github.com/craftcms/cms/issues/3698))\n- Removed the `--batch-size` option from `resave/*` actions.\n- Removed the `craft.entryRevisions` Twig component.\n- Removed `craft\\controllers\\EntriesController::actionPreviewEntry()`.\n- Removed `craft\\controllers\\EntriesController::actionShareEntry()`.\n- Removed `craft\\controllers\\EntriesController::actionViewSharedEntry()`.\n- Removed `craft\\events\\VersionEvent`.\n- Removed `craft\\records\\Entry::getVersions()`.\n- Removed `craft\\records\\EntryDraft`.\n- Removed `craft\\records\\EntryVersion`.\n- Removed `craft\\services\\EntryRevisions::saveDraft()`.\n- Removed `craft\\services\\EntryRevisions::publishDraft()`.\n- Removed `craft\\services\\EntryRevisions::deleteDraft()`.\n- Removed `craft\\services\\EntryRevisions::saveVersion()`.\n- Removed `craft\\services\\EntryRevisions::revertEntryToVersion()`.\n- Removed the `Craft.EntryDraftEditor` JavaScript class.\n\n### Deprecated\n- Deprecated the `ownerSite` and `ownerSiteId` Matrix block query params.\n- Deprecated `craft\\controllers\\EntriesController::EVENT_PREVIEW_ENTRY`.\n- Deprecated `craft\\controllers\\LivePreviewController`.\n- Deprecated `craft\\elements\\MatrixBlock::$ownerSiteId`.\n- Deprecated `craft\\events\\DefineComponentsEvent`.\n- Deprecated `craft\\helpers\\ArrayHelper::filterByValue()`. Use `where()` instead.\n- Deprecated `craft\\models\\BaseEntryRevisionModel`.\n- Deprecated `craft\\models\\EntryDraft`.\n- Deprecated `craft\\models\\EntryVersion`.\n- Deprecated `craft\\models\\Section::$propagateEntries`. Use `$propagationMethod` instead.\n- Deprecated `craft\\services\\Assets::getCurrentUserTemporaryUploadFolder()`.\n- Deprecated `craft\\services\\EntryRevisions`.\n- Deprecated `craft\\web\\Request::getIsLivePreview()`.\n- Deprecated `craft\\web\\Request::getIsSingleActionRequest()` and `craft\\console\\Request::getIsSingleActionRequest()`.\n- Deprecated the `Craft.LivePreview` JavaScript class.\n\n### Fixed\n- Fixed a bug where `craft\\helpers\\UrlHelper` methods could add duplicate query params on generated URLs.\n- Fixed a bug where Matrix blocks weren\u2019t getting duplicated for other sites when creating a new element. ([#4449](https://github.com/craftcms/cms/issues/4449))\n\n## 3.1.34.3 - 2019-08-21\n\n### Fixed\n- Fixed a bug where the `project-config/rebuild` command wasn\u2019t discarding unused user groups or user field layouts in the project config. ([#4781](https://github.com/craftcms/cms/pull/4781))\n\n## 3.1.34.2 - 2019-07-23\n\n### Fixed\n- Fixed a bug where the `project-config/rebuild` command was discarding email and user settings.\n\n## 3.1.34.1 - 2019-07-22\n\n### Fixed\n- Fixed a bug where the `project-config/rebuild` command was ignoring entry types that didn\u2019t have a field layout. ([#4600](https://github.com/craftcms/cms/issues/4600))\n\n## 3.1.34 - 2019-07-09\n\n### Changed\n- The `project-config/rebuild` command now rebuilds the existing project config wherever possible, instead of merging database data with the existing project config.\n\n## 3.1.33 - 2019-07-02\n\n### Added\n- Added `craft\\base\\ApplicationTrait::saveInfoAfterRequest()`.\n\n### Changed\n- Craft no longer strips some punctuation symbols from slugs.\n- Improved the performance of saving project config updates. ([#4459](https://github.com/craftcms/cms/issues/4459))\n- Improved the performance of saving fields. ([#4459](https://github.com/craftcms/cms/issues/4459))\n- The `craft update` command no longer updates Craft or plugins if not specified.\n\n### Removed\n- Removed `craft\\services\\ProjectConfig::saveDataAfterRequest()`.\n- Removed `craft\\services\\ProjectConfig::preventSavingDataAfterRequest()`.\n\n### Fixed\n- Fixed a PHP error that occurred when deleting an asset transform. ([#4473](https://github.com/craftcms/cms/issues/4473))\n\n### Security\n- Fixed an XSS vulnerability.\n- Fixed a path disclosure vulnerability. ([#4468](https://github.com/craftcms/cms/issues/4468))\n- Added the `sameSiteCookieValue` config setting. ([#4462](https://github.com/craftcms/cms/issues/4462))\n\n## 3.1.32.1 - 2019-06-25\n\n### Fixed\n- Fixed a couple Windows compatibility issues.\n\n## 3.1.32 - 2019-06-25\n\n### Changed\n- Project Config now sorts arrays when all of the keys are UIDs. ([#4425](https://github.com/craftcms/cms/issues/4425))\n\n### Fixed\n- Fixed a bug where Craft might not match a domain to the proper site if it had a non-ASCII character in the host name.\n- Fixed an error that could occur when using the `|filter` Twig filter. ([#4437](https://github.com/craftcms/cms/issues/4437))\n- Fixed a bug where pagination URL could get repeated page params added to the query string if using query string-based pagination.\n\n## 3.1.31 - 2019-06-18\n\n### Added\n- It\u2019s now possible to set plugin license keys to environment variables using the `$VARIABLE_NAME` syntax. ([#4393](https://github.com/craftcms/cms/issues/4393))\n- Added `craft\\services\\Elements::mergeElements()`. ([#4404](https://github.com/craftcms/cms/pull/4404))\n\n### Changed\n- Pagination URLs now include any query string parameters set on the current request.\n- The default email template no longer sets text or background colors, so emails look better in dark mode. ([#4396](https://github.com/craftcms/cms/pull/4396))\n- Improved the error message that gets logged when Craft isn\u2019t able to finish processing project config changes, due to unresolved dependencies.\n- Craft will no longer log errors and warnings arising from `yii\\i18n\\PhpMessageSource`. ([#4109](https://github.com/craftcms/cms/issues/4109))\n- Improved the performance and reliability of user queries when the `group` param is set to a user group with a large number of users.\n- Updated Yii to 2.0.21.\n\n### Fixed\n- Fixed a bug where `Craft::dd()` wouldn\u2019t work properly if output buffering was enabled. ([#4399](https://github.com/craftcms/cms/issues/4399))\n- Fixed a bug where `Craft::alias()` wasn\u2019t working on Windows servers. ([#4405](https://github.com/craftcms/cms/issues/4405))\n- Fixed a bug where Craft wasn\u2019t parsing the `dsn` DB connection setting properly if it was supplied.\n\n### Security\n- Fixed an XSS vulnerability.\n\n## 3.1.30 - 2019-06-11\n\n### Changed\n- Improved query performance. ([yiisoft/yii2#17344](https://github.com/yiisoft/yii2/pull/17344), [yiisoft/yii2#17345](https://github.com/yiisoft/yii2/pull/17345), [yiisoft/yii2#17348](https://github.com/yiisoft/yii2/pull/17348))\n- `craft\\services\\Elements::saveElement()` now always propagates elements regardless of the `$propagate` argument value, when saving new elements. ([#4370](https://github.com/craftcms/cms/issues/4370))\n\n### Fixed\n- Fixed a bug where new elements weren\u2019t assigned a UID in time if their URI format contained a `{uid}` token. ([#4364](https://github.com/craftcms/cms/issues/4364))\n- Fixed a bug where Craft was modifying custom log target configs before executing queue jobs. ([#3766](https://github.com/craftcms/cms/issues/3766))\n- Fixed a bug where `craft\\helpers\\ChartHelper::getRunChartDataFromQuery()` assumed that the value would be integers. ([craftcms/commerce#849](https://github.com/craftcms/commerce/issues/849))\n- Fixed a bug where `craft\\services\\Security::validateData()` was returning an empty string instead of `false` when the data didn\u2019t validate. ([#4387](https://github.com/craftcms/cms/issues/4387))\n- Fixed a bug where Craft could inject unexpected JavaScript into front-end requests. ([#4390](https://github.com/craftcms/cms/issues/4390))\n\n## 3.1.29 - 2019-06-04\n\n### Added\n- Added the `restore` command, which restores a database backup.\n- Added the `Craft.escapeRegex()` JavaScript method.\n\n### Changed\n- Asset indexes now sort assets by Date Uploaded in descending order by default. ([#1153](https://github.com/craftcms/cms/issues/1153))\n- `craft\\db\\Paginator` no longer assumes that the application\u2019s database connection should be used.\n- Updated Twig to 2.11. ([#4342](https://github.com/craftcms/cms/issues/4342))\n\n### Fixed\n- Fixed a bug where the Status menu wasn\u2019t visible for the \u201cAll users\u201d source on user indexes. ([#4306](https://github.com/craftcms/cms/pull/4306))\n- Fixed a bug where pressing the <kbd>Esc</kbd> key in the setup wizard would close the modal window. ([#4307](https://github.com/craftcms/cms/issues/4307))\n- Fixed a bug where `craft\\validators\\ArrayValidator::validate()` didn\u2019t work. ([#4309](https://github.com/craftcms/cms/pull/4309))\n- Fixed an error that could occur when rendering templates with a `loop.parent.loop` reference in a nested for-loop. ([#4271](https://github.com/craftcms/cms/issues/4271))\n- Fixed a bug where publishing a Single entry\u2019s draft, or reverting a Single entry to a prior version, would overwrite its title to the section name. ([#4323](https://github.com/craftcms/cms/pull/4323))\n- Fixed a bug where Craft wasn\u2019t invalidating existing asset transforms when changing the dimensions of a named transform.\n- Fixed a bug where `craft\\services\\Fields::getFieldsByElementType()` would return duplicate results if a field was used in more than one field layout for the element type. ([#4336](https://github.com/craftcms/cms/issues/4336))\n- Fixed a bug where Craft wasn\u2019t respecting the `allowUppercaseInSlug` config setting when generating slugs in the Control Panel. ([#4330](https://github.com/craftcms/cms/issues/4330))\n- Fixed a bug where Control Panel Ajax requests weren\u2019t working if a custom `pathParam` config setting value was set. ([#4334](https://github.com/craftcms/cms/issues/4334))\n- Fixed a JavaScript error that could occur when saving a new entry, if the selected entry type didn\u2019t have a Title field. ([#4353](https://github.com/craftcms/cms/issues/4353))\n\n## 3.1.28 - 2019-05-21\n\n### Added\n- Added the \u201cCustomize element sources\u201d user permission. ([#4282](https://github.com/craftcms/cms/pull/4282))\n- Matrix sub-fields now have a \u201cUse this field\u2019s values as search keywords?\u201d setting. ([#4291](https://github.com/craftcms/cms/issues/4291))\n- Added `craft\\web\\twig\\variables\\Paginate::setBasePath()`. ([#4286](https://github.com/craftcms/cms/issues/4286))\n\n### Changed\n- Craft now requires Yii 2.0.19.\n\n### Fixed\n- Fixed a bug where slugs could get double-hyphenated. ([#4266](https://github.com/craftcms/cms/issues/4266))\n- Fixed an error that would occur when installing Craft if the `allowAdminChanges` config setting was disabled. ([#4267](https://github.com/craftcms/cms/issues/4267))\n- Fixed a bug where Matrix fields would return the wrong set of Matrix blocks on new or duplicated elements, immediately after they were saved.\n- Fixed a bug where users could not assign additional user groups to their own account if their permission to do so was granted by another user group they belonged to.\n- Fixed a bug where Number fields would attempt to save non-numeric values. ([craftcms/feed-me#527](https://github.com/craftcms/feed-me/issues/527))\n- Fixed a bug where it was possible to assign a Structure entry or category to a new parent, even if that would cause its descendants to violate the Max Levels setting. ([#4279](https://github.com/craftcms/cms/issues/4279))\n- Fixed an error that could occur when rendering a template from a console request, if the template contained any non-global `{% cache %}` tags. ([#4284](https://github.com/craftcms/cms/pull/4284))\n\n## 3.1.27 - 2019-05-14\n\n### Added\n- Added `craft\\fields\\Matrix::EVENT_SET_FIELD_BLOCK_TYPES`. ([#4252](https://github.com/craftcms/cms/issues/4252))\n\n### Changed\n- Pressing <kbd>Shift</kbd> + <kbd>Return</kbd> (or <kbd>Shift</kbd> + <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Return</kbd>) when a textual cell is focused in an editable table will now change the focus to the same cell in the previous row (after creating a new row if necessary.) ([#4259](https://github.com/craftcms/cms/issues/4259))\n- Craft no longer shows the status menu for element sources that define a status. ([#4249](https://github.com/craftcms/cms/issues/4249))\n- Element URI formats can now conditionally output an empty string, opting the element out of getting its own system URI. ([#4254](https://github.com/craftcms/cms/issues/4254))\n- Table fields now get validation errors if any column handles are entered in the format of \u201ccolX\u201d.\n- Craft no longer clear out users\u2019 verification codes after login. ([#4257](https://github.com/craftcms/cms/issues/4257))\n- The `users/upload-user-photo` and `users/delete-user-photo` actions are now available to front-end requests. ([#3932](https://github.com/craftcms/cms/issues/3932))\n\n### Fixed\n- Fixed a bug where rebuilding the project config could set an incorrect value for the user field layout.\n- Fixed a bug Craft wouldn\u2019t allow users to edit their own photos if they didn\u2019t have upload/remove asset permissions.\n- Fixed a bug where Craft wasn\u2019t removing newline characters when pasting text into some single-line Table column types.\n- Fixed a bug where project config syncing could have inconsistent results on load-balanced environments. ([#4136](https://github.com/craftcms/cms/issues/4136))\n- Fixed a bug where the Plugin Store was not able to load developer details. ([#4241](https://github.com/craftcms/cms/issues/4241))\n- Fixed a bug that could occur when Craft generated URLs with multi-byte characters in the query string.\n- Fixed a bug where you could get some character encoding issues in some environments when using PHP 7.3.\n- Fixed a bug where Craft wasn\u2019t attempting to set a unique URI on duplicated elements. ([#4253](https://github.com/craftcms/cms/issues/4253))\n- Fixed a bug where Table fields could copy cell values to other cells if a column had a handle in the format of \u201ccolX\u201d. ([#4200](https://github.com/craftcms/cms/issues/4200))\n- Fixed an error that could occur on the Login page if a custom Login Page Logo was selected. ([#4261](https://github.com/craftcms/cms/issues/4261))\n\n## 3.1.26 - 2019-05-08\n\n### Changed\n- The \u201cUpdate all\u201d button on the Updates utility is now shown even if the page contains some uninstallable updates. ([#4230](https://github.com/craftcms/cms/issues/4230))\n- Craft now stores the Default User Group\u2019s UID in the project config, in case the group\u2019s ID is different across environments.\n- `craft\\services\\Assets::EVENT_BEFORE_REPLACE_ASSET` event handlers can now change the filename of the replaced asset before it is saved.\n- Improved the performance of background jobs. ([#4219](https://github.com/craftcms/cms/pull/4219))\n- Improved the Plugin Store\u2019s screenshots with arrows for navigation and pinch-to-zoom capability for touch devices.\n\n### Fixed\n- Fixed an error that could occur when saving a Single section if one of its sites had been disabled.\n- Fixed an error that could occur when deleting a site.\n- Fixed a PHP compile error that could occur when paginating a query. ([#4208](https://github.com/craftcms/cms/pull/4208))\n- Fixed an error that could occur on the Settings \u2192 Users \u2192 Settings page if the project config was missing its `users` key. ([#4206](https://github.com/craftcms/cms/issues/4206))\n- Fixed a bug where Craft wasn\u2019t requiring email verification for new user accounts if the project config was missing its `users` key.\n- Fixed a bug where Craft wasn\u2019t eager loading elements in the same site as the source element, if that was different than the currently requested site. ([#3954](https://github.com/craftcms/cms/issues/3954))\n\n## 3.1.25 - 2019-04-30\n\n### Added\n- Added the `|ascii` Twig filter. ([#4193](https://github.com/craftcms/cms/issues/4193))\n\n### Changed\n- Craft now registers its project config event handlers before loading plugins. ([#3943](https://github.com/craftcms/cms/issues/3943))\n- The Control Panel now uses jQuery 3.4.0. ([#4183](https://github.com/craftcms/cms/issues/4183))\n- `behavior` and `behaviors` are now reserved field handles. ([#4184](https://github.com/craftcms/cms/issues/4184))\n- The Updates utility no longer shows notices for expired plugins if no updates are actually available. ([#4186](https://github.com/craftcms/cms/issues/4186))\n\n### Fixed\n- Fixed an error where rebuilding the project config would not typecast the `propagateEntries` and `enableVersioning` section settings correctly. ([#3695](https://github.com/craftcms/cms/issues/3695))\n- Fixed a bug where the Edit Draft HUD would include the current site name in the default Draft Name value for multi-site entries. ([#4171](https://github.com/craftcms/cms/issues/4171))\n- Fixed a bug where resource requests could send a 500 response if the resource didn\u2019t exist. ([#4197](https://github.com/craftcms/cms/pull/4197))\n\n## 3.1.24 - 2019-04-23\n\n### Added\n- Added `craft\\services\\Fields::getFieldIdsByLayoutId()`.\n\n### Changed\n- Craft now correctly typecasts all core boolean and integer values saved to the project config. ([#3695](https://github.com/craftcms/cms/issues/3695))\n- Craft now saves new entry versions every time an entry is saved, unless it\u2019s being propagated or resaved.\n- `users/save-user` and `users/start-elevated-session` requests now check for a `currentPassword` body param in addition to `password`, when looking for the user\u2019s current password. ([#4169](https://github.com/craftcms/cms/issues/4169))\n- `craft\\services\\Path::getStoragePath()` now has a `$create` argument.\n- Updated Twig to 2.8.\n\n### Fixed\n- Fixed an error where re-saving a site would reset its sorting order. ([#4147](https://github.com/craftcms/cms/issues/4147))\n- Fixed a SQL error that could occur when updating to Craft 3.1. ([#3663](https://github.com/craftcms/cms/issues/3663))\n- Fixed an error that occurred when an SVG with `/` characters in its `id` attributes was passed to the `svg()` Twig function. ([#4155](https://github.com/craftcms/cms/issues/4155))\n- Fixed a bug where passing `:empty:` or `:notempty:` to a Matrix field param on an element query could return incorrect results for fields that had soft-deleted blocks. ([#4161](https://github.com/craftcms/cms/issues/4161))\n- Fixed a bug where Craft wasn\u2019t returning a `1` exit code for console requests if the server was running under PHP 7. ([#4153](https://github.com/craftcms/cms/issues/4153))\n- Fixed a \u201cWorld-writable config file 'my.cnf' is ignored\u201d warning that could occur when creating a database backup. ([#4163](https://github.com/craftcms/cms/pull/4163))\n- Fixed a bug where `craft\\services\\Elements::duplicateElements()` would only ignore non-safe attributes passed to the `$newAttributes` argument.\n- Fixed a bug where `craft\\elements\\db\\ElementQuery::exists()` and `offsetExists()` were ignoring cached query results.\n\n## 3.1.23 - 2019-04-16\n\n### Added\n- The `project-config/sync` command now has a `--force` option, which forces the project config to treat all preexisting config values as new. ([#4126](https://github.com/craftcms/cms/issues/4126))\n- Added `craft\\base\\LogTargetTrait`, which can be used by custom `log` components, to gain security and privacy features provided by Craft\u2019s built-in file target. ([#4127](https://github.com/craftcms/cms/pull/4127))\n\n### Changed\n- When creating a new site, global sets are now propagated to it before other element types. ([#3446](https://github.com/craftcms/cms/issues/3446))\n- Locked Twig down to 2.7, to avoid a bug in 2.8.0. ([twigphp/Twig#2942](https://github.com/twigphp/Twig/issues/2942))\n\n### Fixed\n- Fixed an error that occurred when installing a missing plugin from the Settings \u2192 Plugins page. ([#4140](https://github.com/craftcms/cms/issues/4140))\n- Fixed PHP type errors that could occur when calling some deprecated `craft.request` methods in templates. ([#4124](https://github.com/craftcms/cms/issues/4124))\n- Fixed performance issues that could occur where uploading GIFs in the Control Panel. ([#4131](https://github.com/craftcms/cms/pull/4131))\n- Fixed a bug where it wasn\u2019t possible to create a new global set with the same name or handle as a soft-deleted one. ([#4091](https://github.com/craftcms/cms/issues/4091))\n- Fixed a bug where pending users\u2019 verification codes were getting deleted if they were impersonated by an admin. ([#4130](https://github.com/craftcms/cms/issues/4130))\n\n## 3.1.22 - 2019-04-10\n\n### Added\n- Added `craft\\base\\ElementTrait::$resaving`, which indicates whether the element is currently being resaved via a `ResaveElements` job or a `resave` command. ([#3482](https://github.com/craftcms/cms/issues/3482))\n- Added `craft\\db\\Paginator::setPageResults()`. ([#4120](https://github.com/craftcms/cms/issues/4120))\n\n### Changed\n- Changed the way Craft updates search indexes, to reduce the likelihood of a deadlock. ([#3197](https://github.com/craftcms/cms/issues/3197))\n- Improved styles and behavior of the Plugin Store.\n- The Settings \u2192 Plugins page now notes which plugins are expired, with links to renew them on [id.craftcms.com](https://id.craftcms.com).\n- Improved the styling of info HUDs that contain long text or tables. ([#4107](https://github.com/craftcms/cms/pull/4107))\n\n### Fixed\n- Fixed a PHP error that could occur during asset indexing in some cases.\n- Fixed a bug where entry drafts weren\u2019t showing previous changes to Matrix fields on the draft. ([#4105](https://github.com/craftcms/cms/issues/4105))\n- Fixed a bug where `project.yaml` changes weren\u2019t always getting picked up. ([#4028](https://github.com/craftcms/cms/issues/4028))\n- Fixed a bug where the `project-config/rebuild` command would restore soft-deleted components. ([#4100](https://github.com/craftcms/cms/issues/4100))\n- Fixed a bug where the `project-config/sync` command was not performing schema checks.\n- Fixed an error that occurred when backing up the database if the database password contained a `$` character. ([#4115](https://github.com/craftcms/cms/issues/4115))\n\n## 3.1.21.1 - 2019-04-04\n\n### Fixed\n- Fixed a bug where underscores were getting stripped from element slugs. ([#4096](https://github.com/craftcms/cms/issues/4096))\n\n## 3.1.21 - 2019-04-03\n\n### Added\n- Added the `backup` command, which creates a new database backup. ([#4075](https://github.com/craftcms/cms/issues/4075))\n- Added the `queue/retry` command, which can be passed a failed job ID, or `all` to retry all failed jobs. ([#4072](https://github.com/craftcms/cms/issues/4072))\n- Added `craft\\queue\\Queue::retryAll()`.\n- Added `craft\\services\\Sections::$autoResaveEntries`, which can be set to `false` from `config/app.php` to prevent Craft from auto-resaving entries after sections and entry types are updated. ([#3482](https://github.com/craftcms/cms/issues/3482))\n\n### Changed\n- It\u2019s now possible to double-click on asset sources to expand/collapse their subfolders. ([#4070](https://github.com/craftcms/cms/issues/4070))\n- Craft no longer auto-resaves entries after saving a section or entry type if nothing changed of any significance to entries. ([#3482](https://github.com/craftcms/cms/issues/3482))\n- Craft now formats filesizes using metric units (e.g. MB instead of MiB).\n- The updater is now capable of handling package name changes.\n- Craft now requires Yii 2.0.17.\n\n### Fixed\n- Fixed a bug where the Asset Indexes utility wasn\u2019t logging exceptions.\n- Fixed a SQL error that could occur when using the Asset Indexes utility, if any filenames contained 4+ byte characters.\n- Fixed a bug where entry queries could return duplicate results for any entries that belong to a section that has soft-deleted structures associated with it. ([#4066](https://github.com/craftcms/cms/issues/4066))\n- Fixed a bug where rebuilding project config would not work with Matrix fields with no block types. ([#4074](https://github.com/craftcms/cms/issues/4074)\n- Fixed an error that occurred when sending emails if the `testToEmailAddress` config setting was set. ([#4076](https://github.com/craftcms/cms/issues/4076))\n- Fixed a bug where it wasn\u2019t possible to pass the `--element-id` option on `resave/*` commands.\n- Fixed a bug where Matrix fields were including disabled blocks if any changes had been made to the Matrix block query params.\n- Fixed SQL errors that could occur if the table prefix had ever changed.\n\n## 3.1.20.1 - 2019-03-27\n\n### Fixed\n- Fixed an error that occurred when regenerating the project config, if there were any fields without settings. ([#4062](https://github.com/craftcms/cms/issues/4062))\n- Fixed an error that occurred when loading the `_includes/forms/date` template without passing a `value` variable. ([#4063](https://github.com/craftcms/cms/issues/4063))\n\n## 3.1.20 - 2019-03-27\n\n### Added\n- Added the `project-config/rebuild` console command.\n- Added the `verifyEmailSuccessPath` config setting.\n- Added the \u201cPrefix\u201d and \u201cSuffix\u201d settings for Number fields. ([#4055](https://github.com/craftcms/cms/issues/4055))\n- Added the \u201cMax Length\u201d setting for URL fields. ([#4019](https://github.com/craftcms/cms/issues/4019))\n- Added the `devMode` global Twig variable. ([#4038](https://github.com/craftcms/cms/issues/4038))\n- Added `craft\\config\\GeneralConfig::getVerifyEmailSuccessPath()`.\n- Added `craft\\events\\RebuildConfigEvent`.\n- Added `craft\\services\\ProjectConfig::rebuild()`.\n- Added `craft\\services\\Sections::pruneDeletedField()`.\n\n### Changed\n- Textareas within the Control Panel can now be manually vertically resized. ([#4030](https://github.com/craftcms/cms/issues/4030))\n- The Craft Support widget now includes a \u201cMore Resources\u201d section. ([#4058](https://github.com/craftcms/cms/issues/4058))\n- The `_includes/forms/text` Control Panel template now supports `step`, `min`, and `max` attributes.\n- Users without access to the Control Panel are now redirected according to the `verifyEmailSuccessPath` config setting after verifying a new email address. ([#1998](https://github.com/craftcms/cms/issues/1998))\n- The `_includes/forms/text` Control Panel template now supports passing `autocorrect: false` and `autocapitalize: false`, to disable autocorrect and auto-capitalization on iOS devices.\n- iOS autocorrect and auto-capitalization has been disabled for all core \u201cHandle\u201d and \u201cSlug\u201d fields in the Control Panel. ([#4009](https://github.com/craftcms/cms/issues/4009))\n- Number fields now format their values for element index tables. ([#4059](https://github.com/craftcms/cms/issues/4059))\n- When installing Craft using a `project.yaml`, Craft now backups the existing config to the config backup folder if there are errors. ([#4017](https://github.com/craftcms/cms/issues/4017))\n- Craft now prunes entry type layouts when deleting a field.\n- Craft no longer modifies the DSN string if set explicitly with the `dsn` database config setting.\n- Craft no longer throws an `InvalidConfigException` when the `dsn` database config setting is set and contains an unexpected parameter.\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t removing hyphens and other symbols from auto-generated asset titles. ([#4011](https://github.com/craftcms/cms/issues/4011))\n- Fixed a PHP error that occurred when calling `craft\\services\\EntryRevisions::getDraftById()` or `getVersionById()` for a draft/version that belonged to a soft-deleted entry. ([#4013](https://github.com/craftcms/cms/issues/4013))\n- Fixed a bug where Craft wasn\u2019t respecting the site selection for routes defined in Settings \u2192 Routes. ([#4021](https://github.com/craftcms/cms/issues/4021))\n- Fixed a bug where the `project-config/sync` command wasn\u2019t logging exceptions. ([#4015](https://github.com/craftcms/cms/issues/4015))\n- Fixed an error that occurred when attempting to use Live Preview with a pending user account. ([#4025](https://github.com/craftcms/cms/issues/4025))\n- Fixed an error when displaying a date input in the Control Panel if the value passed wasn\u2019t a `DateTime` object. ([#4041](https://github.com/craftcms/cms/issues/4041))\n- Fixed a PHP error that occurred when passing an array of `craft\\elements\\User` objects to `craft\\mail\\Message::setTo()`. ([#4048](https://github.com/craftcms/cms/issues/4048))\n- Fixed a bug where Craft was applying the `offset` param to both ends of the result set when paginating queries. ([#4052](https://github.com/craftcms/cms/issues/4052))\n- Fixed a PHP error that occurred if `true` or `false` was passed to the third argument of `craft\\db\\Command::upsert()`. ([#4054](https://github.com/craftcms/cms/pull/4054))\n- Fixed a bug where deleting fields via `project.yaml` could prevent other changes from being applied.\n- Fixed a bug where field UIDs could be overwritten in some cases.\n\n## 3.1.19 - 2019-03-19\n\n### Added\n- Added the `_includes/pagination` Control Panel template.\n- Added `craft\\db\\Paginator`.\n- Added `craft\\web\\twig\\variables\\Paginate::create()`.\n\n### Changed\n- The `{% paginate %}` tag now accepts any query object, not just element queries.\n- The `_includes/forms/autosuggest` template now has `data` and `methods` blocks that can be overridden by sub-templates to customize the autosuggest behavior.\n\n### Fixed\n- Fixed a bug where sidebar badge counts in the Control Panel were getting formatted with two decimals if the Intl extension wasn\u2019t loaded. ([#4002](https://github.com/craftcms/cms/issues/4002))\n- Fixed a bug where entry drafts would forget that certain field values had been cleared out, and continue using the live revision\u2019s content instead. ([#3981](https://github.com/craftcms/cms/issues/3981))\n- Fixed an error that occurred if a Table field was created with a Date or Time column and no rows in the Default Values setting. ([#4005](https://github.com/craftcms/cms/issues/4005))\n- Fixed a bug where Table fields would forget that they had been saved without any rows in the Default Values setting.\n- Fixed a SQL error that could occur when saving non-UTF-8 characters to the project config. ([#4007](https://github.com/craftcms/cms/issues/4007))\n\n## 3.1.18 - 2019-03-14\n\n### Added\n- Added `craft\\services\\Deprecator::$throwExceptions`. ([#3972](https://github.com/craftcms/cms/pull/3972))\n\n### Changed\n- `Craft::parseEnv()` will now boolean values for environment variables set to `true` or `false`. ([#3975](https://github.com/craftcms/cms/issues/3975))\n- Nested project config keys are no longer sorted alphabetically.\n- Craft now requires Twig 2.7+.\n\n### Fixed\n- Fixed a SQL error that occurred when using a token with a usage limit, if using PostgreSQL. ([#3969](https://github.com/craftcms/cms/issues/3969))\n- Fixed a bug where the Edit User page would forget user group selection changes if there was a validation error. ([#3971](https://github.com/craftcms/cms/issues/3971))\n- Fixed a bug where the updater would get an unexpected response when updating from 3.1.14 - 3.1.16 to 3.1.17+.\n- Fixed a bug where it wasn\u2019t possible to switch plugin editions when the `allowUpdates` config setting was disabled. ([#3987](https://github.com/craftcms/cms/issues/3987))\n- Fixed a bug where multiple consecutive newlines in field instructions would result in multiple `<br>` tags rather than new paragraphs.\n- Fixed a bug where Table fields weren\u2019t always remembering the sort order for their Default Values settings. ([#3947](https://github.com/craftcms/cms/issues/3947))\n- Fixed a bug where Table fields weren\u2019t always remembering the sort order for their Table Columns settings. ([#3997](https://github.com/craftcms/cms/issues/3997))\n\n## 3.1.17.2 - 2019-03-12\n\n### Changed\n- Craft now requires Twig 2.6.\n\n## 3.1.17.1 - 2019-03-08\n\n### Added\n- Added `craft\\helpers\\ArrayHelper::ensureNonAssociative()`.\n\n### Fixed\n- Fixed a bug where commercial plugin editions weren\u2019t showing up in the Plugin Store.\n- Fixed a bug where installing a plugin from the Plugin Store would not respect the selected edition.\n- Fixed a bug where plugins with free and commercial editions weren\u2019t getting license key inputs on the Setting \u2192 Plugins page.\n- Fixed a bug where the Setting \u2192 Plugins page wasn\u2019t linking plugins\u2019 edition badge to their page in the Plugin Store for plugins with free and commercial editions, if the free edition was currently active.\n\n## 3.1.17 - 2019-03-08\n\n### Changed\n- When installing Craft using a `project.yaml`, Craft now processes all sites before installing any plugins. ([craftcms/commerce#752](https://github.com/craftcms/commerce/issues/752))\n- The Plugin Store now shows \u201cReport an issue\u201d links on plugin screens.\n- The Plugin Store now includes a \u201cPackage Name\u201d section on plugin screens. ([#2757](https://github.com/craftcms/cms/issues/2757))\n- The Plugin Store now shows discounted upgrade prices for plugins when a lower edition is already licensed.\n- Craft now requires Yii 2.0.16.1.\n\n### Fixed\n- Fixed a bug where the `positionedBefore` element query param was not including direct ancestors in the results.\n- Fixed a bug where HTML in plugin-supplied field instructions was getting encoded. ([#3928](https://github.com/craftcms/cms/issues/3928))\n- Fixed a bug where Craft would prompt for a user\u2019s current password when registering a new user, even if they weren\u2019t assigning any groups or permissions to that user\n- Fixed a bug where asset indexing could yield inconsistent results in some cases. ([#3450](https://github.com/craftcms/cms/issues/3450))\n- Fixed a bug where the Plugin Store was showing info icons in the feature matrix of multi-edition plugins, even for features that didn\u2019t have an extended description.\n- Fixed a bug where entries weren\u2019t getting new versions when edited from element editor HUDs. ([#3959](https://github.com/craftcms/cms/issues/3959))\n\n## 3.1.16 - 2019-03-05\n\n### Added\n- The Plugin Store now shows Repository links on plugin screens.\n- Added the `create()` Twig function. ([#3921](https://github.com/craftcms/cms/pull/3921))\n- Added the `--type` option to the `resave/entries` command. ([#3939](https://github.com/craftcms/cms/issues/3939))\n- Added `craft\\helers\\Assets::getAllowedFileKinds()`.\n\n### Changed\n- Line breaks in field instructions now get converted to `<br>` tags. ([#3928](https://github.com/craftcms/cms/issues/3928))\n- Assets field settings no longer list file kinds that aren\u2019t allowed to be uploaded, per the `allowedFileExtensions` and `extraAllowedFileExtensions` config settings. ([#3917](https://github.com/craftcms/cms/issues/3917))\n- The `{% exit %}` tag now throws a more specific exception depending on the status code passed to it (e.g. `yii\\web\\NotFoundHttpException` for 404s). ([#3915](https://github.com/craftcms/cms/issues/3915))\n- `craft\\helpers\\MigrationHelper::dropAllIndexesOnTable()` is no longer deprecated.\n- The `--id` option on `resave/*` console commands is now named `--element-id`. ([#3940](https://github.com/craftcms/cms/issues/3940))\n- The `_includes/forms/autosuggest.html` template now supports passing `disabled: true`. ([#3925](https://github.com/craftcms/cms/issues/3925))\n\n### Fixed\n- Fixed a bug where Control Panel content areas weren\u2019t getting their bottom padding applied in Firefox. ([#3874](https://github.com/craftcms/cms/issues/3874))\n- Fixed a PHP error that occurred on the front end if two routes defined in Settings \u2192 Routes had the same URI pattern. ([#3922](https://github.com/craftcms/cms/issues/3922))\n- Fixed a bug where Craft wasn\u2019t always preselecting the correct tab on Control Panel pages if the tab name contained non-ASCII characters. ([#3923](https://github.com/craftcms/cms/issues/3923))\n- Fixed a bug where the `--uid` option on `resave/*` console commands wasn\u2019t working. ([#3941](https://github.com/craftcms/cms/issues/3941))\n- Fixed a SQL error that could occur when running `resave/*` console commands.\n- Fixed a PHP error that occurred when calling the deprecated `getError()` method on a model that had no errors. ([#3934](https://github.com/craftcms/cms/issues/3934))\n- Fixed a bug where Craft wasn\u2019t sanitizing new asset subfolder names. ([#3689](https://github.com/craftcms/cms/issues/3689))\n- Fixed a bug where Table fields weren\u2019t remembering the sort order for their Default Values settings. ([#3947](https://github.com/craftcms/cms/issues/3947))\n\n## 3.1.15 - 2019-02-26\n\n### Added\n- Added the `resave/assets`, `resave/categories`, `resave/entries`, `resave/tags`, and `resave/users` console commands.\n\n### Changed\n- Craft now sends system messages authored for the same root language as the requested language, if an exact language match can\u2019t be found. ([#3888](https://github.com/craftcms/cms/issues/3888))\n- Element source definitions can now include a `badgeCount` key.\n- Login requests no longer enforce CSRF validation if someone is already logged in.\n- Craft now throws an `InvalidConfigException` when updating the project config if any unexpected data types are encountered.\n- The `testToEmailAddress` config setting can now be set to `false`. ([#3910](https://github.com/craftcms/cms/pull/3910))\n\n### Fixed\n- Fixed a bug where the System Messages utility wouldn\u2019t update message previews after editing a message for the primary site\u2019s language, if the user had a different preferred language selected.\n- Fixed a bug where structures weren\u2019t getting deleted and unassigned from their sections properly after converting a Structure section to a Channel or Single. ([#3895](https://github.com/craftcms/cms/issues/3895))\n- Really fixed a bug where Craft could update the `dateModified` value in the project config even when nothing had changed. ([#3792](https://github.com/craftcms/cms/issues/3792))\n- Fixed a bug where the Settings \u2192 Routes page wasn\u2019t listing routes in the user-defined order. ([#3892](https://github.com/craftcms/cms/issues/3892))\n- Fixed an error that occurred when viewing trashed entries, if the \u201cEntry Type\u201d column was shown and one of the trashed entries\u2019 entry types had been deleted. ([#3899](https://github.com/craftcms/cms/issues/3899))\n\n## 3.1.14 - 2019-02-21\n\n### Added\n- Added `craft\\helpers\\ProjectConfig::cleanupConfig()`.\n- Added `craft\\web\\Request::$maxPageNum`, which determines the maximum page number Craft should accept (100,000 by default). ([#3880](https://github.com/craftcms/cms/issues/3880))\n\n### Deprecated\n- Deprecated `craft\\mutex\\FileMutex`.\n\n### Fixed\n- Fixed a bug where Craft could update the `dateModified` value in the project config even when nothing had changed. ([#3792](https://github.com/craftcms/cms/issues/3792))\n- Fixed a SQL error that occurred when running the \u201cLocalizing relations\u201d task if using PostgreSQL. ([#3877](https://github.com/craftcms/cms/issues/3877))\n- Fixed a bug where file locking wasn\u2019t working on Windows. ([#3879](https://github.com/craftcms/cms/issues/3879))\n\n### Security\n- Fixed a bug where sensitive environment variable values weren\u2019t getting redacted correctly.\n\n## 3.1.13 - 2019-02-20\n\n### Added\n- Added `craft\\helpers\\StringHelper::replaceMb4()`.\n- Added `craft\\services\\ProjectConfig::defer()`.\n\n### Changed\n- The `users/login` and `users/logout` actions now include a `csrfTokenValue` key in JSON responses. ([#3858](https://github.com/craftcms/cms/issues/3858))\n- Craft no longer deletes search indexes when soft-deleting an element, until the element gets hard-deleted. ([#3863](https://github.com/craftcms/cms/issues/3863))\n- Updated Yii to 2.0.16.\n\n### Fixed\n- Fixed a bug where Craft could auto-place the `{{ beginBody() }}` and `{{ endBody() }}` tags in the wrong places.\n- Fixed a bug where Craft wasn\u2019t storing custom volume sort orders. ([#3764](https://github.com/craftcms/cms/issues/3764))\n- Fixed a SQL error that would occur when uploading a file with emojis in its name, if using MySQL. ([#3852](https://github.com/craftcms/cms/issues/3852))\n- Fixed a bug where Assets fields weren\u2019t respecting their View Mode setting when files were drag-uploaded to them. ([#3578](https://github.com/craftcms/cms/issues/3578))\n- Fixed a bug where asset queries\u2019 `kind` param wasn\u2019t working for custom file kinds defined by the `extraFileKinds` config setting, for file extensions that were already associated with another file kind. ([#3869](https://github.com/craftcms/cms/issues/3869))\n- Fixed a bug where `craft\\helpers\\FileHelper::sanitizeFilename()` could return inconsistent results.\n- Fixed an error that could occur when syncing `project.yaml` if it introduced a new Super Table field with a nested Matrix field.\n\n## 3.1.12 - 2019-02-15\n\n### Fixed\n- Fixed a bug where the `relatedTo` element query param could include results for elements that were related via soft-deleted Matrix blocks. ([#3846](https://github.com/craftcms/cms/issues/3846))\n- Fixed a bug where some search queries were not returning results when they should, if using MySQL.\n- Fixed an error that could occur when syncing `project.yaml` changes if the `allowAdminChanges` config setting was disabled. ([#3823](https://github.com/craftcms/cms/issues/3823))\n- Fixed an `InvalidConfigException` that was thrown if a user\u2019s photo was soft-deleted. ([#3849](https://github.com/craftcms/cms/issues/3849))\n\n## 3.1.11 - 2019-02-14\n\n### Added\n- Added `craft\\helpers\\UrlHelper::rootRelativeUrl()`.\n\n### Fixed\n- Fixed a bug where the Plugin Store wouldn\u2019t load if the `baseCpUrl` config setting was set to a URL with a different scheme than Craft believed the request had.\n- Fixed a validation error that would occur on non-required Checkboxes and Multi-select fields if no options were selected. ([#3844](https://github.com/craftcms/cms/issues/3844))\n- Fixed a validation error that would occur on Dropdown and Radio Buttons fields if the selected option\u2019s value was `0`. ([#3842](https://github.com/craftcms/cms/issues/3842))\n- Fixed a bug where the Value column for Checkboxes, Dropdown, Multi-select, and Radio Buttons fields\u2019 Options settings weren\u2019t auto-populating if the Option Label column was set to a number.\n- Fixed an error on the Settings \u2192 Users page if `users.photoVolumeUid` was not defined in the project config. ([#3303](https://github.com/craftcms/cms/issues/3303))\n\n## 3.1.10 - 2019-02-13\n\n### Changed\n- `craft\\helpers\\FileHelper::writeToFile()` now invalidates the OPcache for the file. ([#3838](https://github.com/craftcms/cms/pull/3838))\n- The `serve` command now uses `@webroot` as the default `docroot` option value. ([#3770](https://github.com/craftcms/cms/pull/3770))\n\n### Fixed\n- Fixed a bug where the `users/save-user` action wasn\u2019t deleting user photos properly.\n- Fixed a bug where changes to Matrix block type fields\u2019 settings weren\u2019t always saving. ([#3832](https://github.com/craftcms/cms/issues/3832))\n- Fixed a bug where non-searchable fields were still getting search keywords stored when using the Search Indexes utility. ([#3837](https://github.com/craftcms/cms/issues/3837))\n\n## 3.1.9.1 - 2019-02-12\n\n### Fixed\n- Fixed a bug where `Craft::alias()` wasn\u2019t beginning the response string with an `@` character if no `@` was passed into `Craft::setAlias()` to begin with.\n- Fixed an error that could occur if there were any HTML entities in the project config.\n\n## 3.1.9 - 2019-02-12\n\n### Added\n- Added the `disabledPlugins` config setting. ([craftcms/webhooks#4](https://github.com/craftcms/webhooks/issues/4))\n- Added the `$language` argument to `craft\\helpers\\StringHelper::toAscii()`.\n- Added `craft\\validators\\SlugValidator::$language`.\n- Added `craft\\web\\twig\\variables\\Cp::getAsciiCharMap()`.\n\n### Changed\n- The operating system name & version are now shown in the System Report utility. ([#3784](https://github.com/craftcms/cms/issues/3784))\n- Craft\u2019s installer no longer applies the current `project.yaml` file if the installed schema version doesn\u2019t match the one in the file. ([#3783](https://github.com/craftcms/cms/issues/3783))\n- Control Panel settings no longer warn about using the `@web` alias, if it was defined by the `aliases` config setting. ([#3798](https://github.com/craftcms/cms/pull/3798))\n- The `clear-caches` console command now clears CP resource files if the `@webroot` alias was defined by the `aliases` config setting. ([#3787](https://github.com/craftcms/cms/issues/3787))\n- `craft\\models\\VolumeFolder::getVolume()` now throws an `InvalidConfigException` if its `$volumeId` property is set to an invalid volume ID, rather than returning `null`.\n- Craft now checks if all files in project config mapping are valid and regenerates the map if they are not.\n- Craft now auto-generates slugs using an ASCII char map based on the language of the current entry/category, rather than the logged-in user. ([#3820](https://github.com/craftcms/cms/issues/3820))\n\n### Fixed\n- Fixed a SQL error that could occur when deleting an asset. ([#3786](https://github.com/craftcms/cms/issues/3786))\n- Fixed an error that occurred when customizing element indexes if the `allowAdminChanges` config setting was disabled. ([#3788](https://github.com/craftcms/cms/issues/3788))\n- Fixed a bug where Checkboxes, Dropdown, Multi-select, and Radio Buttons fields wouldn\u2019t pass validation if the selected option value was `true` or `false`.\n- Fixed an error that occurred on the Settings \u2192 Plugins page, if there were any plugins in the database that weren\u2019t Composer-installed.\n- Fixed an error that could occur if an Assets field was configured to upload to a deleted volume. ([#3799](https://github.com/craftcms/cms/issues/3799))\n- Fixed a bug where sections\u2019 Default Status settings weren\u2019t always being respected. ([#3791](https://github.com/craftcms/cms/issues/3791))\n- Fixed a bug where only users with the \u201cEdit users\u201d user permission were allowed to upload a new user photo. ([#3735](https://github.com/craftcms/cms/issues/3735))\n- Fixed a bug where renaming a Matrix block type\u2019s handle would result in new content columns being created in the database, and existing Matrix blocks losing their content. ([#3809](https://github.com/craftcms/cms/issues/3809))\n- Fixed a SQL error that could occur when updating to Craft 3.1 if any system messages contained emoji characters.\n- Fixed an error that could occur when working with elements, if a site had been created earlier in the same request. ([#3824](https://github.com/craftcms/cms/issues/3824))\n\n## 3.1.8 - 2019-02-05\n\n### Changed\n- Craft now automatically logs users in after resetting their password, if the `autoLoginAfterAccountActivation` config setting is enabled. ([#1025](https://github.com/craftcms/cms/issues/1025))\n\n### Fixed\n- Fixed a bug where pressing the <kbd>Return</kbd> key on editable tables with a static number of rows would add a new row. ([#3765](https://github.com/craftcms/cms/issues/3765))\n- Fixed a bug where pressing the <kbd>Return</kbd> key on editable tables would select the next row\u2019s cell even if the cell was disabled.\n- Fixed a bug where pressing the <kbd>Return</kbd> key on an editable table wouldn\u2019t move the focus to the next row\u2019s sell if it had an `<input>` instead of a `<textarea>`.\n- Fixed an error that could occur in the Control Panel if any environment variable values began with an `@` character. ([#3769](https://github.com/craftcms/cms/issues/3769))\n- Fixed a bug where `craft\\helpers\\DateTimeHelper::toDateTime()` was mistaking year-only values for Unix timestamps. ([#3772](https://github.com/craftcms/cms/issues/3772))\n- Fixed an error that occurred when a non-admin user attempted to edit a system message, or when the `allowAdminChanges` config setting was disabled. ([#3775](https://github.com/craftcms/cms/issues/3775))\n- Fixed a bug where it was hard to see error notifications on pages with a licensing alert. ([#3776](https://github.com/craftcms/cms/issues/3776))\n- Fixed a JavaScript error that occurred when adding a new row to a custom editable table that contained a `time` column, if no rows existed on page load. ([#3780](https://github.com/craftcms/cms/issues/3780))\n\n## 3.1.7 - 2019-01-31\n\n### Added\n- Added all the things that came in [Craft 3.0.40](https://github.com/craftcms/cms/blob/master/CHANGELOG-v3.md#3040---2019-01-31).\n- Added `craft\\helpers\\FileHelper::canTrustMimeType()`.\n- Added `craft\\web\\UploadedFile::getMimeType()`.\n\n### Changed\n- The \u201cPort\u201d SMTP mail transport setting can now be set to an environment variable. ([#3740](https://github.com/craftcms/cms/issues/3740))\n- `craft\\web\\Controller::requireAdmin()` now has a `$requireAdminChanges` argument, which dictates whether the `allowAdminChanges` config setting must also be enabled (`true` by default).\n- The `project-config/sync` console command now creates a `project.yaml` file, if it\u2019s missing. ([#3736](https://github.com/craftcms/cms/issues/3736))\n- Querying for active users no longer excludes locked users.\n- `craft\\helpers\\FileHelper::getMimeType()` now returns `application/x-yaml` for `.yaml` and `.yml` files.\n- Updated Craft UI to 0.2.0.\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if a plugin or module was calling `craft\\records\\User::find()`.\n- Fixed a bug where cross-domain Live Preview requests could fail due to CORS restrictions.\n- Fixed a 403 error that would occur when an admin attempted to log in as another user on an environment where the `allowAdminChanges` config setting was disabled. ([#3749](https://github.com/craftcms/cms/issues/3749))\n- Fixed a bug where asset index toolbar items would be misaligned when searching in a volume or folder with subfolders.\n- Fixed a bug where asset indexes could show multiple view mode toggles if a different volume or subfolder was selected while at least one asset was checked. ([#3702](https://github.com/craftcms/cms/issues/3702))\n- Fixed a bug where Plugin Store screenshots were not showing properly. ([#3709](https://github.com/craftcms/cms/issues/3709))\n- Fixed a bug where zoomed Plugin Store screenshots would not close when hitting the browser\u2019s Back button. ([#3754](https://github.com/craftcms/cms/issues/3754))\n- Fixed a bug where the Plugin Store was not working properly when Dev Mode was enabled.\n\n### Security\n- User accounts are now locked after multiple failed password attempts in current-password modals, per the `maxInvalidLogins` config setting.\n- Users are no longer signed out of active sessions when their account becomes locked.\n- Database backup/restore exception messages now redact the database password when using PostgreSQL.\n\n## 3.1.6.1 - 2019-01-29\n\n### Fixed\n- Fixed an error that occurred when creating a Table field with a Date column. ([#3748](https://github.com/craftcms/cms/issues/3748))\n\n## 3.1.6 - 2019-01-29\n\n### Added\n- It\u2019s now possible to update disabled plugins.\n\n### Changed\n- `craft\\web\\Controller::requireAdmin()` now sends a 403 (Forbidden) response if the `allowAdminChanges` config setting has been set to `false`. ([#3728](https://github.com/craftcms/cms/issues/3728))\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `date` key set to the `YYYY-MM-DD` format, in addition to the current locale\u2019s short date format.\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `time` key set to the `HH:MM` format, in addition to the current locale\u2019s short time format.\n- `craft\\helpers\\DateTimeHelper::toDateTime()` now supports passing an array with a `datetime` key, which will be handled the same way strings passed to the method are handled (except that the `datetime` key can be paired with a `timezone` key).\n\n### Fixed\n- Fixed an error that occurred when using the `json_decode` filter. ([#3722](https://github.com/craftcms/cms/pull/3722))\n- Fixed a bug a bug where plugin screenshots in the Plugin Store were not rendering correctly. ([#3709](https://github.com/craftcms/cms/issues/3709))\n- Fixed an error where the `index-assets/one` and `index-assets/all` console commands were creating `.` folders in each volume.\n- Fixed a bug where the Settings \u2192 Plugins page was showing extra \u201cMissing\u201d rows for any unlicensed plugins that were Composer-installed but not Craft-installed. ([#3726](https://github.com/craftcms/cms/issues/3726))\n- Fixed an error that could occur when viewing trashed elements.\n- Fixed a bug where many system message translations were missing line breaks. ([#3737](https://github.com/craftcms/cms/issues/3737))\n- Fixed a bug where unparsed markdown code was present in the Control Panel error message displayed when the system was offline. ([#3746](https://github.com/craftcms/cms/issues/3746))\n\n## 3.1.5 - 2019-01-25\n\n### Changed\n- Control Panel settings that can be set to environment variables now show a tip about that if the value is not already set to an environment variable or alias.\n- Control Panel form fields can now be configured with a `tip` property, which will be displayed below the field.\n- Control Panel templates can now pass `suggestEnvVars: true` and `suggestAliases: true` to autosuggest fields, rather that supplying the `suggestions` array.\n\n### Fixed\n- Fixed a bug where the \u201cDuplicate\u201d action wasn\u2019t available on the Entries index page for non-admin users. ([#3705](https://github.com/craftcms/cms/issues/3705))\n- Fixed a bug where it wasn\u2019t possible to rename an asset\u2019s filename from the Assets index page. ([#3707](https://github.com/craftcms/cms/issues/3707))\n- Fixed an error that occurred when saving a user that had a first or last name set.\n- Fixed a bug where it wasn\u2019t possible to apply project config changes. ([#3713](https://github.com/craftcms/cms/issues/3713))\n- Fixed a bug where the Password field on SMTP and Gmail mail transport settings could be set to an encoded and encrypted password. ([#3699](https://github.com/craftcms/cms/issues/3699))\n- Fixed a bug where it was possible to remove the Primary Site status from the primary site, without offering a new primary site. ([#3720](https://github.com/craftcms/cms/issues/3720))\n- Fixed an error that could occur if PHP\u2019s `memory_limit` was set to a higher size (in bytes) than `PHP_INT_MAX`. ([#3717](https://github.com/craftcms/cms/issues/3717))\n\n### Security\n- Control Panel settings that can be set to an alias now show a warning if the current value begins with the `@web` alias.\n\n## 3.1.4 - 2019-01-24\n\n### Added\n- Added all the things that came in [Craft 3.0.38](https://github.com/craftcms/cms/blob/master/CHANGELOG-v3.md#3038---2019-01-24).\n- The System Name setting can now be set to an environment variable. ([#3529](https://github.com/craftcms/cms/issues/3529))\n- Added the `index-assets/one` console command, which can now be used to index a single subfolder.\n- Added `craft\\base\\ApplicationTrait::getSystemName()`.\n\n### Changed\n- Craft now ensures that installed schema versions match the schema versions in `project.yaml` before syncing project config changes.\n- The `project-config/sync` console command now bails if there are pending Craft or plugin migrations.\n\n### Fixed\n- Fixed a bug where `site` translations were falling back to English if the translated message was identical to the source message. ([#3692](https://github.com/craftcms/cms/issues/3692))\n- Fixed a bug where syncing Matrix field changes to the project config would result in new changes to the project config. ([#3695](https://github.com/craftcms/cms/issues/3695))\n- Fixed an error that occurred when indexing assets in an empty volume.\n- Fixed a bug where soft-deleted assets would show up as missing after indexing.\n- Fixed a JavaScript error that could occur on the Settings \u2192 Plugins page.\n- Fixed a bug where `Craft::parseEnv()` was throwing an `InvalidConfigException` if the given string began with `@` but was not an alias. ([#3700](https://github.com/craftcms/cms/issues/3700))\n\n### Security\n- URLs are no longer allowed in users\u2019 first or last names.\n\n## 3.1.3 - 2019-01-21\n\n### Added\n- Added the `|json_decode` Twig filter. ([#3678](https://github.com/craftcms/cms/pull/3678))\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if a plugin or module was calling any soft-deletable records\u2019 `find()` methods.\n- Fixed an error that occurred when updating from Craft 2 to Craft 3.1 if there were any RichText fields. ([#3677](https://github.com/craftcms/cms/issues/3677))\n- Fixed a bug where it was possible to create duplicate tags by searching for and selecting the same tag name twice in the same Tags field. ([#3676](https://github.com/craftcms/cms/issues/3676))\n- Fixed a bug where system messages were getting sent with the message keys (e.g. \u201cforgot_password_subject\u201d and \u201cforgot_password_body\u201d) if Craft didn\u2019t provide a default message translation for the site language, and the message hadn\u2019t been translated for the user\u2019s preferred language. ([#3673](https://github.com/craftcms/cms/issues/3673))\n- Fixed a bug where `craft\\web\\Request::getIsLivePreview()` was returning `false` on Live Preview requests when called from an `yii\\base\\Controller::EVENT_BEFORE_ACTION` event handler. ([#3680](https://github.com/craftcms/cms/issues/3680))\n\n## 3.1.2.2 - 2019-01-19\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if a plugin or module was calling any `craft\\services\\Sections` methods.\n\n## 3.1.2.1 - 2019-01-19\n\n### Fixed\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Matrix sub-fields that had their type set to a non-existing class. ([#3662](https://github.com/craftcms/cms/issues/3662))\n- Fixed a bug where the project config could be in an unexpected state if a `project.yaml` file existed already when initially updating to Craft 3.1.\n\n## 3.1.2 - 2019-01-18\n\n### Added\n- Added the `index-assets <volume>` and `index-assets/all` console commands. ([#3595](https://github.com/craftcms/cms/pull/3595))\n- Added `craft\\base\\FieldTrait::$oldSettings`.\n- Added `craft\\helpers\\Install`.\n- Added `craft\\services\\Fields::prepFieldForSave()`.\n- Added `craft\\services\\Path::getProjectConfigFilePath()`.\n- Added `craft\\services\\ProjectConfig::$muteEvents`.\n\n### Changed\n- The installer now checks `project.yaml` when determining the default site name, handle, base URL, and language values. ([#3661](https://github.com/craftcms/cms/issues/3661))\n- The Base URL field in the web-based installer now autouggests environment variable names and aliases.\n- Craft now creates a `.gitignore` file in the `storage/config-backups/` folder, preventing any other files within it from getting tracked by Git.\n- Craft no longer prevents changes in `project.yaml` from being synced if a plugins\u2019 schema version in `project.yaml` doesn\u2019t match up with its installed schema version, if one of them is blank.\n\n### Deprecated\n- Deprecated `craft\\services\\Fields::$ignoreProjectConfigChanges`.\n- Deprecated `craft\\services\\Matrix::$ignoreProjectConfigChanges`.\n\n### Fixed\n- Fixed a PHP notice that occurred when updating to Craft 3.1 if there were any plugins installed without settings.\n- Fixed a SQL error that occurred when updating to Craft 3.1 if a plugin or module was calling any `craft\\services\\Fields` methods. ([#3663](https://github.com/craftcms/cms/issues/3663))\n- Fixed a bug where element indexes would forget their source settings after updating to Craft 3.1. ([#3659](https://github.com/craftcms/cms/issues/3659))\n- Fixed a bug where commercial plugins weren\u2019t installable from the Plugin Store.\n- Fixed a bug where Matrix block type fields\u2019 `beforeSave()` methods weren\u2019t getting called.\n- Fixed a bug where Matrix fields could forget their content table name if they were created with a non-global context.\n- Fixed a bug where links to the Plugin Store from Settings \u2192 Plugins were 404ing. ([#3664](https://github.com/craftcms/cms/issues/3664))\n- Fixed a bug where soft-deleted sections and entry types were still showing up in the Control Panel. ([#3648](https://github.com/craftcms/cms/issues/3648))\n- Fixed a bug where an update to Craft 3.1 would fail with a database error in some scenarios.\n- Fixed a bug where Plugin Store\u2019s Try buttons would appear as disabled when they should be enabled. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Fixed an error that occurred when updating to Craft 3.1 if there were any relational fields that were missing some expected settings. ([#3641](https://github.com/craftcms/cms/issues/3641))\n\n### Security\n- Fixed two XSS vulnerabilities.\n\n## 3.1.1 - 2019-01-16\n\n### Added\n- Added support for the `CRAFT_LOG_PHP_ERRORS` PHP constant. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Added `craft\\web\\User::generateToken()`.\n\n### Changed\n- System error message templates no longer parse exception messages as Markdown.\n\n### Fixed\n- Fixed a bug where `craft\\services\\Volumes::getVolumeByHandle()` wasn\u2019t working. ([#3633](https://github.com/craftcms/cms/pull/3633))\n- Fixed a bug where the `clear-caches/cp-resources` command could clear out the wrong directory if the `resourceBasePath` config setting began with `@webroot`. ([#3637](https://github.com/craftcms/cms/issues/3637))\n- Fixed a bug where eager loading Matrix blocks would come up empty. ([#3644](https://github.com/craftcms/cms/issues/3644))\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Matrix blocks without any sub-fields. ([#3635](https://github.com/craftcms/cms/pull/3635))\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Matrix block types left over from a Matrix field that had been converted to something else.\n- Fixed an error that occurred when updating to Craft 3.1 if there were any Assets fields that were missing some expected field settings. ([#3641](https://github.com/craftcms/cms/issues/3641))\n- Fixed an error that occurred when updating to Craft 3.1 if anything was calling `craft\\services\\Fields::getLayoutById()` or `getLayoutByType()` before the update was applied.\n- Fixed an error that could occur when logging deprecation errors on PostgreSQL. ([#3638](https://github.com/craftcms/cms/issues/3638))\n- Fixed a bug where users would get logged out while updating to Craft 3.1, causing a \u201cUser is not permitted to perform this action\u201d error.\n- Fixed a bug where \u201cJavaScript must be enabled\u201d and \u201cCookies must be enabled\u201d messages weren\u2019t getting positioned correctly. ([#3639](https://github.com/craftcms/cms/issues/3639))\n- Fixed a \u201cVariable \"message\" does not exist.\u201d error that could occur in the Control Panel.\n- Fixed a bug where free plugins weren\u2019t installable from the Plugin Store. ([#3642](https://github.com/craftcms/cms/issues/3642))\n\n### Security\n- The Request panel in the Debug Toolbar now redacts any sensitive information. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Fixed two XSS vulnerabilities.\n\n## 3.1.0 - 2019-01-15\n\n> **Warning**\n> This is a more complex update than usual, and failed update attempts are not uncommon. Please ensure you have a recent database backup, and we recommend you test the update on a local/staging environment before updating your production server.\n\n### Added\n- Added the Project Config, a portable and centralized configuration for system settings. ([#1429](https://github.com/craftcms/cms/issues/1429))\n- Category groups, elements, entry types, field layouts, global sets, sections, sites, site groups, structures, tag groups, and volumes are now soft-deleted. ([#867](https://github.com/craftcms/cms/issues/867))\n- Entries, categories, and users can now be restored within the Control Panel by selecting \u201cTrashed\u201d from the status menu on element index pages, and clicking the \u201cRestore\u201d button.\n- Added the System Messages utility for editing system messages, replacing the Settings \u2192 Email \u2192 System Messages page. ([#3421](https://github.com/craftcms/cms/issues/3421))\n- Some Site settings (Base URL), volume settings (Base URL and File System Path), and email settings (System Email Address, Sender Name, HTML Email Template, Username, Password, and Host Name) can now be set to environment variables using a `$VARIABLE_NAME` syntax. ([#3219](https://github.com/craftcms/cms/issues/3219))\n- The installer now checks whether a `project.yaml` file exists and applies any changes in it. ([#3291](https://github.com/craftcms/cms/issues/3291))\n- Control Panel settings that support environment variables now autosuggest environment variable names (and aliases when applicable) while typing.\n- Control Panel settings that define a template path now autosuggest existing template files.\n- Added cross-domain support for Live Preview. ([#1521](https://github.com/craftcms/cms/issues/1521))\n- Plugins can now have multiple editions.\n- Custom fields can now opt out of being included in elements\u2019 search keywords. ([#2600](https://github.com/craftcms/cms/issues/2600))\n- Added the `allowAdminChanges` config setting.\n- Added the `softDeleteDuration` config setting.\n- Added the `storeUserIps` config setting. ([#3311](https://github.com/craftcms/cms/issues/3311))\n- Added the `useProjectConfigFile` config setting.\n- Added the `gc` console command, which can be used to run garbage collection tasks.\n- Added the `project-config/sync` console command. ([#3510](https://github.com/craftcms/cms/issues/3510))\n- Added the `trashed` element query param, which can be used to query for elements that have been soft-deleted.\n- Added the `expression()` Twig function, for creating new `yii\\db\\Expression` objects in templates. ([#3289](https://github.com/craftcms/cms/pull/3289))\n- Added the `parseEnv()` Twig function.\n- Added the `plugin()` Twig function.\n- Added the `_includes/forms/autosuggest.html` include template for the Control Panel.\n- Added `Craft::parseEnv()`.\n- Added `craft\\base\\ApplicationTrait::getIsLive()`.\n- Added `craft\\base\\Element::EVENT_AFTER_RESTORE`.\n- Added `craft\\base\\Element::EVENT_BEFORE_RESTORE`.\n- Added `craft\\base\\Element::EVENT_DEFINE_EAGER_LOADING_MAP`.\n- Added `craft\\base\\ElementInterface::afterRestore()`.\n- Added `craft\\base\\ElementInterface::beforeRestore()`.\n- Added `craft\\base\\Field::EVENT_AFTER_ELEMENT_RESTORE`.\n- Added `craft\\base\\Field::EVENT_BEFORE_ELEMENT_RESTORE`.\n- Added `craft\\base\\FieldInterface::afterElementRestore()`.\n- Added `craft\\base\\FieldInterface::beforeElementRestore()`.\n- Added `craft\\base\\Model::EVENT_DEFINE_RULES`.\n- Added `craft\\base\\Plugin::editions()`.\n- Added `craft\\base\\Plugin::is()`.\n- Added `craft\\base\\SavableComponentInterface::beforeApplyDelete()`.\n- Added `craft\\behaviors\\EnvAttributeParserBehavior`.\n- Added `craft\\controllers\\LivePreviewController`.\n- Added `craft\\db\\ActiveRecord::prepareForDb()`.\n- Added `craft\\db\\Command::restore()`.\n- Added `craft\\db\\Command::softDelete()`.\n- Added `craft\\db\\Migration::restore()`.\n- Added `craft\\db\\Migration::softDelete()`.\n- Added `craft\\db\\SoftDeleteTrait`, which can be used by Active Record classes that wish to support soft deletes.\n- Added `craft\\db\\Table`.\n- Added `craft\\elements\\actions\\Restore`, which can be included in elements\u2019 `defineActions()` methods to opt into element restoration.\n- Added `craft\\events\\ConfigEvent`.\n- Added `craft\\events\\DeleteElementEvent`, which provides a `$hardDelete` property that can be set to `true` to force an element to be immediately hard-deleted. ([#3403](https://github.com/craftcms/cms/pull/3403))\n- Added `craft\\helpers\\App::editionHandle()`.\n- Added `craft\\helpers\\App::editionIdByHandle()`.\n- Added `craft\\helpers\\App::mailSettings()`.\n- Added `craft\\helpers\\ArrayHelper::firstWhere()`.\n- Added `craft\\helpers\\Db::idByUid()`.\n- Added `craft\\helpers\\Db::idsByUids()`.\n- Added `craft\\helpers\\Db::uidById()`.\n- Added `craft\\helpers\\Db::uidsByIds()`.\n- Added `craft\\helpers\\ProjectConfig`.\n- Added `craft\\helpers\\StringHelper::toWords()`.\n- Added `craft\\models\\FieldLayout::createFromConfig()`.\n- Added `craft\\models\\FieldLayout::getConfig()`.\n- Added `craft\\models\\Section::setEntryTypes()`.\n- Added `craft\\models\\Site::getBaseUrl()`.\n- Added `craft\\services\\AssetTransforms::getTransformByUid()`.\n- Added `craft\\services\\AssetTransforms::EVENT_BEFORE_APPLY_TRANSFORM_DELETE`.\n- Added `craft\\services\\Categories::getGroupByUid()`.\n- Added `craft\\services\\Categories::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Elements::restoreElement()`.\n- Added `craft\\services\\Elements::EVENT_AFTER_RESTORE_ELEMENT`.\n- Added `craft\\services\\Elements::EVENT_BEFORE_RESTORE_ELEMENT`.\n- Added `craft\\services\\Fields::applyFieldDelete()`.\n- Added `craft\\services\\Fields::applyFieldSave()`.\n- Added `craft\\services\\Fields::createFieldConfig()`.\n- Added `craft\\services\\Fields::deleteFieldInternal()`.\n- Added `craft\\services\\Fields::restoreLayoutById()`.\n- Added `craft\\services\\Fields::saveFieldInternal()`.\n- Added `craft\\services\\Fields::EVENT_BEFORE_APPLY_FIELD_DELETE`.\n- Added `craft\\services\\Fields::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Gc` for handling garbage collection tasks.\n- Added `craft\\services\\Path::getConfigBackupPath()`.\n- Added `craft\\services\\ProjectConfig`.\n- Added `craft\\services\\Routes::deleteRouteByUid()`\n- Added `craft\\services\\Sections::getSectionByUid()`.\n- Added `craft\\services\\Sections::EVENT_BEFORE_APPLY_ENTRY_TYPE_DELETE`.\n- Added `craft\\services\\Sections::EVENT_BEFORE_APPLY_SECTION_DELETE`.\n- Added `craft\\services\\Sites::restoreSiteById()`.\n- Added `craft\\services\\Sites::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Sites::EVENT_BEFORE_APPLY_SITE_DELETE`.\n- Added `craft\\services\\Tags::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\UserGroups::EVENT_BEFORE_APPLY_GROUP_DELETE`.\n- Added `craft\\services\\Volumes::EVENT_BEFORE_APPLY_VOLUME_DELETE`.\n- Added `craft\\validators\\TemplateValidator`.\n- Added `craft\\web\\Controller::requireCpRequest()`.\n- Added `craft\\web\\Controller::requireSiteRequest()`.\n- Added `craft\\web\\twig\\variables\\Cp::EVENT_REGISTER_CP_SETTINGS`. ([#3314](https://github.com/craftcms/cms/issues/3314))\n- Added `craft\\web\\twig\\variables\\Cp::getEnvSuggestions()`.\n- Added `craft\\web\\twig\\variables\\Cp::getTemplateSuggestions()`.\n- Added the ActiveRecord Soft Delete Extension for Yii2.\n- Added the Symfony Yaml Component.\n- The bundled Vue asset bundle now includes Vue-autosuggest.\n\n### Changed\n- The `defaultWeekStartDay` config setting is now set to `1` (Monday) by default, to conform with the ISO 8601 standard.\n- Renamed the `isSystemOn` config setting to `isSystemLive`.\n- The `app/migrate` web action now applies pending `project.yaml` changes, if the `useProjectConfigFile` config setting is enabled.\n- The `svg()` function now strips `<title>`, `<desc>`, and comments from the SVG document as part of its sanitization process.\n- The `svg()` function now supports a `class` argument, which will add a class name to the root `<svg>` node. ([#3174](https://github.com/craftcms/cms/issues/3174))\n- The `{% redirect %}` tag now supports `with notice` and `with error` params for setting flash messages. ([#3625](https://github.com/craftcms/cms/pull/3625))\n- `info` buttons can now also have a `warning` class.\n- User permission definitions can now include `info` and/or `warning` keys.\n- The old \u201cAdministrate users\u201d permission has been renamed to \u201cModerate users\u201d.\n- The old \u201cChange users\u2019 emails\u201d permission has been renamed to \u201cAdministrate users\u201d, and now comes with the ability to activate user accounts and reset their passwords. ([#942](https://github.com/craftcms/cms/issues/942))\n- All users now have the ability to delete their own user accounts. ([#3013](https://github.com/craftcms/cms/issues/3013))\n- System user permissions now reference things by their UIDs rather than IDs (e.g. `editEntries:<UID>` rather than `editEntries:<ID>`).\n- Animated GIF thumbnails are no longer animated. ([#3110](https://github.com/craftcms/cms/issues/3110))\n- Craft Tokens can now be sent either as a query string param (named after the `tokenParam` config setting) or an `X-Craft-Token` header.\n- Element types that support Live Preview must now hash the `previewAction` value for `Craft.LivePreview`.\n- Live Preview now loads each new preview into its own `<iframe>` element. ([#3366](https://github.com/craftcms/cms/issues/3366))\n- Assets\u2019 default titles now only capitalize the first word extracted from the filename, rather than all the words. ([#2339](https://github.com/craftcms/cms/issues/2339))\n- All console commands besides `setup/*` and `install/craft` now output a warning if Craft isn\u2019t installed yet. ([#3620](https://github.com/craftcms/cms/issues/3620))\n- All classes that extend `craft\\base\\Model` now have `EVENT_INIT` and `EVENT_DEFINE_BEHAVIORS` events; not just classes that extend `craft\\base\\Component`.\n- `craft\\db\\mysql\\Schema::findIndexes()` and `craft\\db\\pgsql\\Schema::findIndexes()` now return arrays with `columns` and `unique` keys.\n- `craft\\helpers\\ArrayHelper::filterByValue()` now defaults its `$value` argument to `true`.\n- `craft\\helpers\\MigrationHelper::doesIndexExist()` no longer has a `$foreignKey` argument, and now has an optional `$db` argument.\n- `craft\\mail\\Mailer::send()` now swallows any exceptions that are thrown when attempting to render the email HTML body, and sends the email as plain text only. ([#3443](https://github.com/craftcms/cms/issues/3443))\n- `craft\\mail\\Mailer::send()` now fires an `afterSend` event with `yii\\mail\\MailEvent::$isSuccessful` set to `false` if any exceptions were thrown when sending the email, and returns `false`. ([#3443](https://github.com/craftcms/cms/issues/3443))\n- `craft\\services\\Routes::saveRoute()` now expects site and route UIDs instead of IDs.\n- `craft\\services\\Routes::updateRouteOrder()` now expects route UIDs instead of IDs.\n- The `craft\\helpers\\Assets::EVENT_SET_FILENAME` event is now fired after sanitizing the filename.\n\n### Removed\n- Removed `craft\\elements\\User::authData()`.\n- Removed `craft\\fields\\Matrix::getOldContentTable()`.\n- Removed `craft\\services\\Routes::deleteRouteById()`\n\n### Deprecated\n- Deprecated `craft\\base\\ApplicationTrait::getIsSystemOn()`. `getIsLive()` should be used instead.\n- Deprecated `craft\\helpers\\MigrationHelper::dropAllIndexesOnTable()`.\n- Deprecated `craft\\helpers\\MigrationHelper::dropAllUniqueIndexesOnTable()`.\n- Deprecated `craft\\helpers\\MigrationHelper::dropIndex()`.\n- Deprecated `craft\\helpers\\MigrationHelper::restoreForeignKey()`.\n- Deprecated `craft\\helpers\\MigrationHelper::restoreIndex()`.\n- Deprecated `craft\\models\\Info::getEdition()`. `Craft::$app->getEdition()` should be used instead.\n- Deprecated `craft\\models\\Info::getName()`. `Craft::$app->projectConfig->get('system.name')` should be used instead.\n- Deprecated `craft\\models\\Info::getOn()`. `Craft::$app->getIsLive()` should be used instead.\n- Deprecated `craft\\models\\Info::getTimezone()`. `Craft::$app->getTimeZone()` should be used instead.\n- Deprecated `craft\\services\\Routes::getDbRoutes()`. `craft\\services\\Routes::getProjectConfigRoutes()` should be used instead.\n- Deprecated `craft\\services\\SystemSettings`. `craft\\services\\ProjectConfig` should be used instead.\n- Deprecated `craft\\validators\\UrlValidator::$allowAlias`. `craft\\behaviors\\EnvAttributeParserBehavior` should be used instead.\n\n### Fixed\n- Fixed a bug where the Dashboard could rapidly switch between two column sizes at certain browser sizes. ([#2438](https://github.com/craftcms/cms/issues/2438))\n- Fixed a bug where ordered and unordered lists in field instructions didn\u2019t have numbers or bullets.\n- Fixed a bug where switching an entry\u2019s type could initially show the wrong field layout tab. ([#3600](https://github.com/craftcms/cms/issues/3600))\n- Fixed an error that occurred when updating to Craft 3 if there were any Rich Text fields without any stored settings.\n- Fixed a bug where Craft wasn\u2019t saving Dashboard widget sizes properly on PostgreSQL. ([#3609](https://github.com/craftcms/cms/issues/3609))\n- Fixed a PHP error that could occur if the primary site didn\u2019t have a base URL. ([#3624](https://github.com/craftcms/cms/issues/3624))\n- Fixed a bug where `craft\\helpers\\MigrationHelper::dropIndexIfExists()` wasn\u2019t working if the index had an unexpected name.\n- Fixed an error that could occur if a plugin attempted to register the same Twig extension twice in the same request.\n\n### Security\n- The web and CLI installers no longer suggest `@web` for the site URL, and now attempt to save the entered site URL as a `DEFAULT_SITE_URL` environment variable in `.env`. ([#3559](https://github.com/craftcms/cms/issues/3559))\n- Craft now destroys all other sessions associated with a user account when a user changes their password.\n- It\u2019s no longer possible to spoof Live Preview requests.\n\n## 3.0.41.1 - 2019-03-12\n\n### Changed\n- Craft now requires Twig 2.6.\n\n## 3.0.41 - 2019-02-22\n\n### Changed\n- System error message templates no longer parse exception messages as Markdown.\n\n### Security\n- Database backup/restore exception messages now redact the database password when using PostgreSQL.\n- URLs are no longer allowed in users\u2019 first or last names.\n- The Request panel in the Debug Toolbar now redacts any sensitive information. ([#3619](https://github.com/craftcms/cms/issues/3619))\n- Fixed XSS vulnerabilities.\n\n## 3.0.40.1 - 2019-02-21\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t always aware of plugin licensing issues. ([#3876](https://github.com/craftcms/cms/issues/3876))\n\n## 3.0.40 - 2019-01-31\n\n### Added\n- Added `craft\\helpers\\App::testIniSet()`.\n\n### Changed\n- Craft now warns if `ini_set()` is disabled and [memory_limit](https://php.net/manual/en/ini.core.php#ini.memory-limit) is less than `256M` or [max_execution_time](https://php.net/manual/en/info.configuration.php#ini.max-execution-time) is less than `120` before performing Composer operations.\n- `craft\\helpers\\App::maxPowerCaptain()` now attempts to set the `memory_limit` to `1536M` rather than `-1`.\n\n## 3.0.39 - 2019-01-29\n\n### Changed\n- It\u2019s now possible to update disabled plugins.\n\n### Fixed\n- Fixed an error that could occur if PHP\u2019s `memory_limit` was set to a higher size (in bytes) than `PHP_INT_MAX`. ([#3717](https://github.com/craftcms/cms/issues/3717))\n\n## 3.0.38 - 2019-01-24\n\n### Added\n- Added the `update` command, which can be used to [update Craft from the terminal](https://docs.craftcms.com/v3/updating.html#updating-from-the-terminal).\n- Craft now warns if PHP is running in Safe Mode with a [max_execution_time](https://php.net/manual/en/info.configuration.php#ini.max-execution-time) of less than 120 seconds, before performing Composer operations.\n- Craft now stores backups of `composer.json` and `composer.lock` files in `storage/composer-backups/` before running Composer operations.\n- Added `craft\\db\\Connection::getBackupFilePath()`.\n- Added `craft\\helpers\\App::phpConfigValueInBytes()`.\n- Added `craft\\helpers\\Console::isColorEnabled()`.\n- Added `craft\\helpers\\Console::outputCommand()`.\n- Added `craft\\helpers\\Console::outputWarning()`.\n- Added `craft\\helpers\\FileHelper::cycle()`.\n- Added `craft\\services\\Composer::$maxBackups`.\n- Added `craft\\services\\Path::getComposerBackupsPath()`.\n\n### Changed\n- The `migrate/all` console command now supports a `--no-content` argument that can be passed to ignore pending content migrations.\n- Craft now attempts to disable PHP\u2019s memory and time limits before running Composer operations.\n- Craft no longer respects the `phpMaxMemoryLimit` config setting if PHP\u2019s `memory_limit` setting is already set to `-1` (no limit).\n- Craft now respects Composer\u2019s [classmap-authoritative](https://getcomposer.org/doc/06-config.md#classmap-authoritative) config setting.\n- Craft now links to the [Troubleshooting Failed Updates](https://craftcms.com/knowledge-base/failed-updates) guide when an update fails.\n- `craft\\services\\Composer::install()` can now behave like the `composer install` command, if `$requirements` is `null`.\n- `craft\\services\\Composer::install()` now has a `$whitelist` argument, which can be set to an array of packages to whitelist, or `false` to disable the whitelist.\n\n## 3.0.37 - 2019-01-08\n\n### Added\n- Routes defined in the Control Panel can now have a `uid` token, and URL rules defined in `config/routes.php` can now have a `{uid}` token. ([#3583](https://github.com/craftcms/cms/pull/3583))\n- Added the `extraFileKinds` config setting. ([#1584](https://github.com/craftcms/cms/issues/1584))\n- Added the `clear-caches` console command. ([#3588](https://github.com/craftcms/cms/pull/3588))\n- Added `craft\\feeds\\Feeds::getFeed()`.\n- Added `craft\\helpers\\StringHelper::UUID_PATTERN`.\n\n### Changed\n- Pressing the <kbd>Return</kbd> key (or <kbd>Ctrl</kbd>/<kbd>Command</kbd> + <kbd>Return</kbd>) when a textual cell is focused in an editable table will now change the focus to the same cell in the next row (after creating a new row if necessary.) ([#3576](https://github.com/craftcms/cms/issues/3576))\n- The Password input in the web-based Craft setup wizard now has a \u201cShow\u201d button like other password inputs.\n- The Feed widget now sets the items\u2019 text direction based on the feed\u2019s language.\n- Matrix blocks that contain validation errors now have red titles and alert icons, to help them stand out when collapsed. ([#3599](https://github.com/craftcms/cms/issues/3599))\n\n### Fixed\n- Fixed a bug where the \u201cEdit\u201d button on asset editor HUDs didn\u2019t launch the Image Editor if the asset was being edited on another element type\u2019s index page. ([#3575](https://github.com/craftcms/cms/issues/3575))\n- Fixed an exception that would be thrown when saving a user from a front-end form with a non-empty `email` or `newPassword` param, if the `password` param was missing or empty. ([#3585](https://github.com/craftcms/cms/issues/3585))\n- Fixed a bug where global set, Matrix block, tag, and user queries weren\u2019t respecting `fixedOrder` params.\n- Fixed a bug where `craft\\helpers\\MigrationHelper::renameColumn()` was only restoring the last foreign key for each table that had multiple foreign keys referencing the table with the renamed column.\n- Fixed a bug where Date/Time fields could output the wrong date in Live Preview requests. ([#3594](https://github.com/craftcms/cms/issues/3594))\n- Fixed a few RTL language styling issues.\n- Fixed a bug where drap-and-drop uploading would not work for custom asset selector inputs. ([#3590](https://github.com/craftcms/cms/pull/3590))\n- Fixed a bug where Number fields weren\u2019t enforcing thein Min Value and Max Value settings if set to 0. ([#3598](https://github.com/craftcms/cms/issues/3598))\n- Fixed a SQL error that occurred when uploading assets with filenames that contained emoji characters, if using MySQL. ([#3601](https://github.com/craftcms/cms/issues/3601))\n\n### Security\n- Fixed a directory traversal vulnerability.\n- Fixed a remote code execution vulnerability.\n\n## 3.0.36 - 2018-12-18\n\n### Added\n- Added the `{{ actionInput() }}` global Twig function. ([#3566](https://github.com/craftcms/cms/issues/3566))\n\n### Changed\n- Suspended users are no longer shown when viewing pending or locked users. ([#3556](https://github.com/craftcms/cms/issues/3556))\n- The Control Panel\u2019s Composer installer now prevents scripts defined in `composer.json` from running. ([#3574](https://github.com/craftcms/cms/issues/3574))\n\n### Fixed\n- Fixed a bug where elements that belonged to more than one structure would be returned twice in element queries.\n\n### Security\n- Fixed a self-XSS vulnerability in the Recent Entries widget.\n- Fixed a self-XSS vulnerability in the Feed widget.\n\n## 3.0.35 - 2018-12-11\n\n### Added\n- Added `craft\\models\\Section::getHasMultiSiteEntries()`.\n\n### Changed\n- Field types that extend `craft\\fields\\BaseRelationField` now pass their `$sortable` property value to the `BaseElementSelectInput` JavaScript class by default. ([#3542](https://github.com/craftcms/cms/pull/3542))\n\n### Fixed\n- Fixed a bug where the \u201cDisabled for Site\u201d entry status option was visible for sections where site propagation was disabled. ([#3519](https://github.com/craftcms/cms/issues/3519))\n- Fixed a bug where saving an entry that was disabled for a site would retain its site status even if site propagation had been disabled for the section.\n- Fixed a SQL error that occurred when saving a field layout with 4-byte characters (like emojis) in a tab name. ([#3532](https://github.com/craftcms/cms/issues/3532))\n- Fixed a bug where autogenerated Post Date values could be a few hours off when saving new entries with validation errors. ([#3528](https://github.com/craftcms/cms/issues/3528))\n- Fixed a bug where plugins\u2019 minimum version requirements could be enforced even if a development version of a plugin had been installed previously.\n\n## 3.0.34 - 2018-12-04\n\n### Fixed\n- Fixed a bug where new Matrix blocks wouldn\u2019t remember that they were supposed to be collapsed if \u201cSave and continue editing\u201d was clicked. ([#3499](https://github.com/craftcms/cms/issues/3499))\n- Fixed an error that occurred on the System Report utility if any non-bootstrapped modules were configured with an array or callable rather than a string. ([#3507](https://github.com/craftcms/cms/issues/3507))\n- Fixed an error that occurred on pages with date or time inputs, if the user\u2019s preferred language was set to Arabic. ([#3509](https://github.com/craftcms/cms/issues/3509))\n- Fixed a bug where new entries within sections where site propagation was disabled would show both \u201cEnabled Globally\u201d and \u201cEnabled for [Site Name]\u201d settings. ([#3519](https://github.com/craftcms/cms/issues/3519))\n- Fixed a bug where Craft wasn\u2019t reducing the size of elements\u2019 slugs if the resulting URI was over 255 characters. ([#3514](https://github.com/craftcms/cms/issues/3514))\n\n## 3.0.33 - 2018-11-27\n\n### Changed\n- Table fields with a fixed number of rows no longer show Delete buttons or the \u201cAdd a row\u201d button. ([#3488](https://github.com/craftcms/cms/issues/3488))\n- Table fields that are fixed to a single row no longer show the Reorder button. ([#3488](https://github.com/craftcms/cms/issues/3488))\n- Setting `components.security.sensitiveKeywords` in `config/app.php` will now append keywords to the default array `craft\\services\\Security::$sensitiveKeywords` array, rather than completely overriding it.\n- When performing an action that requires an elevated session while impersonating another user, admin must now enter their own password instead of the impersonated user\u2019s. ([#3487](https://github.com/craftcms/cms/issues/3487))\n- The System Report utility now lists any custom modules that are installed. ([#3490](https://github.com/craftcms/cms/issues/3490))\n- Control Panel charts now give preference to `ar-SA` for Arabic locales, `de-DE` for German locales, `en-US` for English locales, `es-ES` for Spanish locales, or `fr-FR` for French locales, if data for the exact application locale doesn\u2019t exist. ([#3492](https://github.com/craftcms/cms/pull/3492))\n- \u201cCreate a new child entry\u201d and \u201cCreate a new child category\u201d element actions now open an edit page for the same site that was selected on the index page. ([#3496](https://github.com/craftcms/cms/issues/3496))\n- The default `allowedFileExtensions` config setting value now includes `webp`.\n- The Craft Support widget now sends `composer.json` and `composer.lock` files when contacting Craft Support.\n- It\u2019s now possible to create element select inputs that include a site selection menu by passing `showSiteMenu: true` when including the `_includes/forms/elementSelect.html` Control Panel include template. ([#3494](https://github.com/craftcms/cms/pull/3494))\n\n### Fixed\n- Fixed a bug where a Matrix fields\u2019 block types and content table could be deleted even if something set `$isValid` to `false` on the `beforeDelete` event.\n- Fixed a bug where a global sets\u2019 field layout could be deleted even if something set `$isValid` to `false` on the `beforeDelete` event.\n- Fixed a bug where after impersonating another user, the Login page would show the impersonated user\u2019s username rather than the admin\u2019s.\n- Fixed a bug where `craft\\services\\Sections::getAllSections()` could return stale results if a new section had been added recently. ([#3484](https://github.com/craftcms/cms/issues/3484))\n- Fixed a bug where \u201cView entry\u201d and \u201cView category\u201d element actions weren\u2019t available when viewing a specific section or category group.\n- Fixed a bug where Craft would attempt to index image transforms.\n- Fixed a bug where the Asset Indexes utility could report that asset files were missing even though they weren\u2019t. ([#3450](https://github.com/craftcms/cms/issues/3450))\n\n### Security\n- Updated jQuery File Upload to 9.28.0.\n\n## 3.0.32 - 2018-11-20\n\n### Added\n- The `seq()` Twig function now has a `next` argument, which can be set to `false` to have it return the current number in the sequence without incrementing it. ([#3466](https://github.com/craftcms/cms/issues/3466))\n- Added `craft\\db\\MigrationManager::truncateHistory()`.\n- Added `craft\\helpers\\Sequence::current()`.\n\n### Changed\n- Edit Entry pages now show the entry\u2019s site in the revision menu label so long as the section is enabled for multiple sites, even if \u201cPropagate entries across all enabled sites?\u201d isn\u2019t checked. ([#3471](https://github.com/craftcms/cms/issues/3471))\n- Exact-match search terms (using `::`) now disable `subLeft` and `subRight` attributes by default, regardless of the `defaultSearchTermOptions` config setting says. ([#3474](https://github.com/craftcms/cms/issues/3474))\n\n### Deprecated\n- Deprecated `craft\\validators\\StringValidator::$trim`. Yii\u2019s `'trim'` validator should be used instead.\n\n### Fixed\n- Fixed an error that occurred when querying for Matrix blocks if both the `with` and `indexBy` parameters were set.\n- Fixed an error that occurred when running the `migrate/fresh` console command. ([#3472](https://github.com/craftcms/cms/issues/3472))\n\n## 3.0.31 - 2018-11-13\n\n### Added\n- Added the `seq()` Twig function, for outputting sequential numbers.\n- Added `craft\\helpers\\Sequence`.\n\n### Changed\n- Control Panel templates can now customize `#main-form` HTML attributes by overriding the `mainFormAttributes` block. ([#1665](https://github.com/craftcms/cms/issues/1665))\n- The default PostgreSQL backup command no longer includes database owner, privilege or ACL information in the backup.\n- Craft now attempts to reset OPcache after installing/uninstalling things with Composer. ([#3460](https://github.com/craftcms/cms/issues/3460))\n- Gmail and SMTP mail transport types now trim whitespace off of their Username, Password, and Host Name settings. ([#3459](https://github.com/craftcms/cms/issues/3459))\n\n### Fixed\n- Fixed an error that could occur when duplicating an element with a Matrix field with \u201cManage blocks on a per-site basis\u201d disabled.\n- Fixed a bug where Matrix blocks wouldn\u2019t retain their content translations when an entry was duplicated from the Edit Entry page.\n- Fixed a bug where system message modals could have the wrong language selected by default. ([#3440](https://github.com/craftcms/cms/issues/3440))\n- Fixed a bug where an Internal Server Error would occur if a `users/login` request was missing the `loginName` or `password` parameters. ([#3458](https://github.com/craftcms/cms/issues/3458))\n- Fixed a bug where `craft\\validators\\StringValidator` was trimming whitespace off of strings _after_ performing string length validation.\n- Fixed an infinite recursion bug that could occur if `config/general.php` had any deprecated config settings, and the database connection settings were invalid.\n- Fixed an error that occurred when saving a new entry or category, if its URI format referenced the `level` attribute. ([#3465](https://github.com/craftcms/cms/issues/3465))\n\n## 3.0.30.2 - 2018-11-08\n\n### Fixed\n- Fixed an error that could occur on servers running PHP 7.0.32. ([#3453](https://github.com/craftcms/cms/issues/3453))\n\n## 3.0.30.1 - 2018-11-07\n\n### Fixed\n- Fixed an error that occurred when saving an element with a new Matrix block, if the Matrix field was set to manage blocks on a per-site basis. ([#3445](https://github.com/craftcms/cms/issues/3445))\n\n## 3.0.30 - 2018-11-06\n\n### Added\n- Added \u201cDuplicate\u201d and \u201cDuplicate (with children)\u201d actions to the Entries and Categories index pages. ([#1291](https://github.com/craftcms/cms/issues/1291))\n- Added `craft\\base\\ElementAction::$elementType`, which element action classes can use to reference their associated element type.\n- Added `craft\\elements\\actions\\DeepDuplicate`.\n- Added `craft\\elements\\actions\\Duplicate`.\n- Added `craft\\elements\\actions\\SetStatus::$allowDisabledForSite`, which can be used by localizable element types to enable a \u201cDisabled for Site\u201d status option.\n\n### Changed\n- Entries\u2019 \u201cEnabled\u201d setting is now labeled \u201cEnabled Globally\u201d on multi-site installs. ([#2899](https://github.com/craftcms/cms/issues/2899))\n- Entries\u2019 \u201cEnabled for site\u201d setting now includes the site name in its label, and only shows up if the \u201cEnabled Globally\u201d setting is checked. ([#2899](https://github.com/craftcms/cms/issues/2899))\n- The Set Status action on the Entries index page now includes a \u201cDisabled for Site\u201d option. ([#2899](https://github.com/craftcms/cms/issues/2899))\n- Edit Category pages now have `edit-category` and `site--<SiteHandle>` classes on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n- Edit Entry pages now have `edit-entry` and `site--<SiteHandle>` classes on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n- Edit Global Set pages now have `edit-global-set` and `site--<SiteHandle>` classes on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n- Edit User pages now have an `edit-user` class on the `<body>`. ([#3439](https://github.com/craftcms/cms/issues/3439))\n\n### Fixed\n- Fixed a bug where the Edit User page could forget which permissions were selected when saving a user with validation errors, if the Username, First Name, and Last name fields were all blank. ([#3412](https://github.com/craftcms/cms/issues/3412))\n- Fixed a bug where the Edit User Group page could forget which permissions were selected when saving a user group with validation errors, if the Name field was blank.\n- Fixed a bug where the `{% paginate %}` tag wasn\u2019t factoring the `offset` element query param into its total page calculation. ([#3420](https://github.com/craftcms/cms/issues/3420))\n\n### Security\n- Fixed a bug where sensitive info could be displayed in the Craft log files if there was a problem connecting to the email server.\n\n## 3.0.29 - 2018-10-30\n\n### Added\n- Email and URL fields now have \u201cPlaceholder Text\u201d settings. ([#3397](https://github.com/craftcms/cms/issues/3397))\n\n### Changed\n- The default HTML Purifier configuration now allows `download` attributes in `<a>` tags. ([craftcms/redactor#86](https://github.com/craftcms/redactor/issues/86))\n\n### Fixed\n- Fixed a bug where the `ContentBehaviour` and `ElementQueryBehavior` classes could be missing some field properties. ([#3400](https://github.com/craftcms/cms/issues/3400))\n- Fixed a bug where some fields within Matrix fields could lose their values after enabling the \u201cManage blocks on a per-site basis\u201d setting. ([verbb/super-table#203](https://github.com/verbb/super-table/issues/203))\n- Fixed a bug where HTML Purifier wasn\u2019t being initialized with HTML 5 element support.\n- Fixed a bug where it was possible to save Assets fields with the \u201cRestrict allowed file types?\u201d setting enabled, but no specific file types selected. ([#3410](https://github.com/craftcms/cms/issues/3410))\n\n## 3.0.28 - 2018-10-23\n\n### Added\n- Structure sections now have the ability to disable entry propagation, like Channel sections. ([#2386](https://github.com/craftcms/cms/issues/2386))\n\n### Changed\n- `craft\\base\\Field::supportedTranslationMethods()` now defaults to only returning `none` if the field type doesn\u2019t have a content column. ([#3385](https://github.com/craftcms/cms/issues/3385))\n- Craft.EntryTypeSwitcher now fires a `beforeTypeChange` event before swapping the Edit Entry form tabs. ([#3375](https://github.com/craftcms/cms/pull/3375))\n- Craft.MatrixInput now fires an `afterInit` event after initialization. ([#3375](https://github.com/craftcms/cms/pull/3375))\n- Craft.MatrixInput now fires an `blockAdded` event after adding a new block. ([#3375](https://github.com/craftcms/cms/pull/3375))\n- System messages sent from front-end requests are now sent using the current site\u2019s language. ([#3388](https://github.com/craftcms/cms/issues/3388))\n\n### Fixed\n- Fixed an error that could occur when acquiring a lock for a file path, if the `mutex` component was swapped out with `yii\\mutex\\MysqlMutex`.\n\n## 3.0.27.1 - 2018-10-12\n\n### Fixed\n- Fixed an error that occurred when deleting an entry from the Edit Entry page. ([#3372](https://github.com/craftcms/cms/issues/3372))\n- Fixed an error that could occur when changing a Channel section to Structure. ([#3373](https://github.com/craftcms/cms/issues/3373))\n- Fixed an error that occurred when saving Matrix content from console requests.\n\n## 3.0.27 - 2018-10-11\n\n### Added\n- Added `craft\\helpers\\MigrationHelper::findForeignKey()`.\n- Added the `cp.globals.edit` and `cp.globals.edit.content` template hooks to the Edit Global Set page. ([#3356](https://github.com/craftcms/cms/pull/3356))\n\n### Changed\n- It\u2019s now possible to load a Create Entry page with a specific user preselected in the Author field, using a new `authorId` query string param. ([#3326](https://github.com/craftcms/cms/pull/3326))\n- Matrix fields that are set to manage blocks on a per-site basis will now duplicate Matrix blocks across all of the owner element\u2019s supported sites when the element is first created. ([#3082](https://github.com/craftcms/cms/issues/3082))\n- Disabled Matrix blocks are no longer visible when sharing an entry draft or version. ([#3338](https://github.com/craftcms/cms/issues/3338))\n- Control Panel tabs that have errors now have alert icons.\n- The Debug Toolbar is no longer shown in Live Preview iframes.\n- The Plugin Store now requires browsers with ES6 support.\n- Updated jQuery Touch Events to 2.0.0.\n- Updated Garnish to 0.1.29.\n\n### Fixed\n- Fixed a bug where enabling the \u201cPropagate entries across all enabled sites?\u201d setting for an existing Channel section (or converting the section to a Structure) wouldn\u2019t update entries that had been created for the non-primary site.\n- Fixed a bug where Craft wasn\u2019t detecting and retrying queue jobs that had timed out.\n- Fixed a bug where `Craft::$app->locale` could return the wrong locale during Live Preview requests. ([#3336](https://github.com/craftcms/cms/issues/3336))\n- Fixed a SQL error that could occur when upgrading to Craft 3, if a foreign key had an unexpected name.\n- Fixed a bug where page titles in the Control Panel could be blank when showing validation errors for things that were missing their name or title. ([#3344](https://github.com/craftcms/cms/issues/3344))\n- Fixed an error that could occur if a component\u2019s settings were stored as `null`. ([#3342](https://github.com/craftcms/cms/pull/3342))\n- Fixed a bug where details panes weren\u2019t visible on browser windows sized between 999 and 1,223 pixels wide.\n- Fixed an error that occurred if a Quick Post widget contained a Matrix field that had Min Blocks set and only had one block type.\n- Fixed a bug where disabled Matrix blocks were getting validated as live. ([#3354](https://github.com/craftcms/cms/issues/3354))\n- Fixed a bug where the `EVENT_AFTER_ACTIVATE_USER` event wasn\u2019t getting triggered on user registration when email verification isn\u2019t required. ([craftcms/commerce-digital-products#18](https://github.com/craftcms/commerce-digital-products/issues/18))\n- Added garbage collection for offline storage of remote assets. ([#3335](https://github.com/craftcms/cms/pull/3335))\n- Fixed a bug where Twig could end up in a strange state if an error occurred when preparing to render an object template. ([#3364](https://github.com/craftcms/cms/issues/3364))\n\n### Security\n- The `svg()` Twig function no longer sanitizes SVGs or namespaces their IDs or class names by default when a file path (or alias) was passed in. ([#3337](https://github.com/craftcms/cms/issues/3337))\n\n## 3.0.26.1 - 2018-09-29\n\n### Changed\n- Changed the `yiisoft/yii2-queue` version requirement to `2.1.0`. ([#3332](https://github.com/craftcms/cms/issues/3332))\n\n## 3.0.26 - 2018-09-29\n\n### Changed\n- `ancestors`, `descendants`, `nextSibling`, `parent`, and `prevSibling` are now reserved field handles.\n- The `svg()` Twig function namespaces class names in addition to IDs now.\n- Changed the `yiisoft/yii2-queue` version requirement to `2.0.1`. ([#3332](https://github.com/craftcms/cms/issues/3332))\n\n### Fixed\n- Fixed a validation error that could occur when saving an entry as a new entry if the URI format didn\u2019t contain a `{slug}` tag. ([#3320](https://github.com/craftcms/cms/issues/3320))\n- Fixed a SQL error that could occur if a deprecation error occurred when attempting to upgrade a Craft 2 project. ([#3324](https://github.com/craftcms/cms/issues/3324))\n\n## 3.0.25 - 2018-09-18\n\n### Added\n- Added `craft\\log\\FileTarget::$includeUserIp` which determines whether users\u2019 IP addresses should be included in the logs (`false` by default). ([#3310](https://github.com/craftcms/cms/pull/3310))\n\n### Fixed\n- Fixed an error that could occur when installing or updating something within the Control Panel if `composer.json` required the `roave/security-advisories` package.\n- Fixed a SQL error that could occur when searching elements on PostgreSQL installs.\n- Fixed a bug where Craft would ignore the last segment of template paths that ended in `/0`. ([#3304](https://github.com/craftcms/cms/issues/3304))\n- Fixed a Twig Template Loading Error that would occur when testing email settings, if a custom email template was used and an error occurred when rendering it. ([#3309](https://github.com/craftcms/cms/issues/3309))\n\n## 3.0.24 - 2018-09-11\n\n### Added\n- Added the `extraAppLocales` config setting.\n\n### Changed\n- The `defaultCpLanguage` config setting no longer needs to be a language that Craft is translated into, as long as it is a valid locale ID.\n- Resave Elements jobs that are queued up after saving an entry type now include the section name in the job description. ([#3290](https://github.com/craftcms/cms/issues/3290))\n- Updated Garnish to 0.1.28.\n\n### Fixed\n- Fixed a SQL error that could occur when an element query\u2019s `orderBy` parameter was set to `dateCreated` or `dateUpdated`.\n- Fixed an error that could occur when updating to v3.0.23+ if multiple Matrix fields existed with the same handle, but they had no content tables, somehow.\n- Fixed a bug where links in activation and forgot-password emails weren\u2019t hyperlinked, leaving it up to the mail client to hopefully be smart about it. ([#3288](https://github.com/craftcms/cms/issues/3288))\n\n## 3.0.23.1 - 2018-09-04\n\n### Fixed\n- Fixed a bug where Matrix fields would get new content tables each time they were saved.\n\n## 3.0.23 - 2018-09-04\n\n### Changed\n- Browser-based form validation is now disabled for page forms. ([#3247](https://github.com/craftcms/cms/issues/3247))\n- `craft\\base\\Model::hasErrors()` now supports passing an attribute name with a `.*` suffix, which will return whether any errors exist for the given attribute or any nested model attributes.\n- Added `json` to the default `allowedFileExtensions` config setting value. ([#3254](https://github.com/craftcms/cms/issues/3254))\n- Exception call stacks now collapse internal Twig methods by default.\n- Twig exception call stacks now show all of the steps leading up to the error.\n- Live Preview now reloads the preview pane automatically after an asset is saved from the Image Editor. ([#3265](https://github.com/craftcms/cms/issues/3265))\n\n### Deprecated\n- Deprecated `craft\\services\\Matrix::getContentTableName()`. `craft\\fields\\Matrix::$contentTable` should be used instead.\n\n### Removed\n- Removed `craft\\services\\Matrix::getParentMatrixField()`.\n\n### Fixed\n- Fixed a bug where element selection modals could be initialized without a default source selected, if some of the sources were hidden for not being available on the currently-selected site. ([#3227](https://github.com/craftcms/cms/issues/3227))\n- Fixed a bug where edit pages for categories, entries, global sets, and users weren\u2019t revealing which tab(s) had errors on it, if the errors occurred within a Matrix field. ([#3248](https://github.com/craftcms/cms/issues/3248))\n- Fixed a SQL error that occurred when saving a Matrix field with new sub-fields on PostgreSQL. ([#3252](https://github.com/craftcms/cms/issues/3252))\n- Fixed a bug where custom user fields weren\u2019t showing up on the My Account page when running Craft Solo edition. ([#3228](https://github.com/craftcms/cms/issues/3228))\n- Fixed a bug where multiple Matrix fields could share the same content table. ([#3249]())\n- Fixed a \u201ccache is corrupted\u201d Twig error that could occur when editing or saving an element if it had an Assets field with an unresolvable subfolder path template. ([#3257](https://github.com/craftcms/cms/issues/3257))\n- Fixed a bug where the Dev Mode indicator strip wasn\u2019t visible on Chrome/Windows when using a scaled display. ([#3259](https://github.com/craftcms/cms/issues/3259))\n- Fixed a SQL error that could occur when validating an attribute using `craft\\validators\\UniqueValidator`, if the target record\u2019s `find()` method joined in another table.\n\n## 3.0.22 - 2018-08-28\n\n### Changed\n- The \u201cDeleting stale template caches\u201d job now ensures all expired template caches have been deleted before it begins processing the caches.\n- Text inputs\u2019 `autocomplete` attributes now get set to `off` by default, and they will only not be added if explicitly set to `null`.\n- Improved the error response when Composer is unable to perform an update due to a dependency conflict.\n- Email fields in the Control Panel now have `type=\"email\"`.\n- `craft\\helpers\\Db::parseParam()` now has a `$caseInnensitive` argument, which can be set to `true` to force case-insensitive conditions on PostgreSQL installs.\n- `craft\\validators\\UniqueValidator` now has a `$caseInsensitive` property, which can be set to `true` to cause the unique validation to be case-insensitive on PostgreSQL installs.\n- The CLI setup wizard now detects common database connection errors that occur with MAMP, and automatically retests with adjusted settings.\n- The CLI setup wizard now detects common database authentication errors, and lets the user retry the username and password settings, skipping the others.\n- Updated Garnish to 0.1.27.\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t reverting `composer.json` to its original state if something went wrong when running a Composer update.\n- Fixed a bug where string casing functions in `craft\\helpers\\StringHelper` were adding extra hyphens to strings that came in as `Upper-Kebab-Case`.\n- Fixed a bug where unique validation for element URIs, usernames, and user email address was not case-insensitive on PostgreSQL installs.\n- Fixed a bug where element queries\u2019 `uri` params, and user queries\u2019 `firstName`, `lastName`, `username`, and `email` params, were not case-insensitive on PostgreSQL installs.\n- Fixed a bug where the CLI setup wizard was allowing empty database names.\n- Fixed a bug where it wasn\u2019t possible to clear template caches if template caching was disabled by the `enableTemplateCaching` config setting. ([#3229](https://github.com/craftcms/cms/issues/3229))\n- Fixed a bug where element index toolbars weren\u2019t staying fixed to the top of the content area when scrolling down the page. ([#3233](https://github.com/craftcms/cms/issues/3233))\n- Fixed an error that could occur when updating Craft if the system was reliant on the SSL certificate provided by the`composer/ca-bundle` package.\n\n## 3.0.21 - 2018-08-21\n\n### Added\n- Most element query parameters can now be set to `['not', 'X', 'Y']`, as a shortcut for `['and', 'not X', 'not Y']`.\n\n### Changed\n- The \u201cNew Password\u201d input on the My Account page now has a \u201cShow\u201d button, like other password inputs in the Control Panel.\n- Plugin settings pages now redirect to the Settings index page after save. ([#3216](https://github.com/craftcms/cms/issues/3216))\n- It\u2019s now possible to set [autofill detail tokens](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill-detail-tokens) on the `autocomplete` variable when including the `_includes/forms/text.html` template (e.g. `'name'`).\n- Username and password inputs now have the correct `autocomplete` values, increasing the likelihood that tools like 1Password will handle the form correctly. ([#3207](https://github.com/craftcms/cms/issues/3207))\n\n### Fixed\n- Fixed a SQL error that occurred when saving a user if a `craft\\elements\\User::EVENT_BEFORE_SAVE` event listener was setting `$event->isValid = false`. ([#3206](https://github.com/craftcms/cms/issues/3206))\n- Fixed a bug where password inputs\u2019 jQuery data was getting erased when the \u201cShow\u201d button was clicked.\n- Fixed an error that could occur when upgrading to Craft 3. ([#3208](https://github.com/craftcms/cms/pull/3208))\n- Fixed a bug where non-image assets\u2019 file extension icons could bleed out of the preview area within asset editor HUDs. ([#3209](https://github.com/craftcms/cms/issues/3209))\n- Fixed a bug where Craft wasn\u2019t saving a new entry version when reverting an entry to a previous version. ([#3210](https://github.com/craftcms/cms/issues/3210))\n- Fixed an error that could occur when a Matrix block was saved by a queue job. ([#3217](https://github.com/craftcms/cms/pull/3217))\n\n### Security\n- External links in the Control Panel now set `rel=\"noopener\"`. ([#3201](https://github.com/craftcms/cms/issues/3201))\n\n## 3.0.20 - 2018-08-14\n\n### Added\n- Added `craft\\services\\Fields::refreshFields()`.\n\n### Fixed\n- Fixed a bug where `DateTime` model attributes were getting converted to ISO-8601 date strings for `craft\\web\\View::renderObjectTemplate()`. ([#3185](https://github.com/craftcms/cms/issues/3185))\n- Fixed a bug where timepicker menus had a higher z-index than session expiration modal shades. ([#3186](https://github.com/craftcms/cms/issues/3186))\n- Fixed a bug where users could not log in after upgrading to Craft 3, if there was a custom field named `owner`.\n- Fixed a bug where it was not possible to set non-integer values on asset queries\u2019 `width`, `height`, or `size` params. ([#3195](https://github.com/craftcms/cms/issues/3195))\n- Fixed a bug where all Asset folders were being initiated at once, resulting in performance issues.\n\n## 3.0.19 - 2018-08-07\n\n### Added\n- Added the `craft.query()` template function, for creating new database queries.\n- Added `craft\\services\\Structures::$mutexTimeout`. ([#3148](https://github.com/craftcms/cms/issues/3148))\n- Added `craft\\services\\Api::getComposerWhitelist()`.\n\n### Removed\n- Removed `craft\\services\\Api::getOptimizedComposerRequirements()`.\n\n### Fixed\n- Craft\u2019s console commands now return the correct exit codes. ([#3175](https://github.com/craftcms/cms/issues/3175))\n- Fixed the appearance of checkboxes in IE11 on element index pages. ([#3177](https://github.com/craftcms/cms/issues/3177))\n- Fixed a bug where `composer.json` could end up with a bunch of extra dependencies in the `require` object after a failed update or plugin installation.\n- Fixed an error that could occur when viewing an entry revision, if it had a Matrix field and one of the sub-fields within the Matrix field had been deleted. ([#3183](https://github.com/craftcms/cms/issues/3183))\n- Fixed a bug where thumbnails weren\u2019t loading in relational fields when viewing an entry version.\n\n## 3.0.18 - 2018-07-31\n\n### Added\n- Added `craft\\helpers\\App::assetManagerConfig()`.\n- Added `craft\\helpers\\App::cacheConfig()`.\n- Added `craft\\helpers\\App::dbConfig()`.\n- Added `craft\\helpers\\App::mailerConfig()`.\n- Added `craft\\helpers\\App::mutexConfig()`.\n- Added `craft\\helpers\\App::logConfig()`.\n- Added `craft\\helpers\\App::sessionConfig()`.\n- Added `craft\\helpers\\App::userConfig()`.\n- Added `craft\\helpers\\App::viewConfig()`.\n- Added `craft\\helpers\\App::webRequestConfig()`.\n- Added `craft\\validators\\StringValidator::$trim`, which will cause leading/trailing whitespace to be stripped from model attributes.\n\n### Changed\n- User verification and password-reset emails now link them back to the same site they were on when the email was sent, if it was sent from a front-end request. ([#3029](https://github.com/craftcms/cms/issues/3029))\n- Dynamic app component configs are now defined by methods on `craft\\helpers\\App`, making it easier to modify them from `config/app.php`. ([#3152](https://github.com/craftcms/cms/issues/3152))\n- Structure operations now ensure that no other operations are being performed on the same structure, reducing the risk of corrupting the structure. ([#3148](https://github.com/craftcms/cms/issues/3148))\n- The `{% js %}` tag now supports the following position params: `at POS_HEAD`, `at POS_BEGIN`, `at POS_END`, `on POS_READY`, and `on POS_LOAD` (e.g. `{% js at POS_END %}`).\n- Craft once again checks for `X-Forwarded-For` headers when determining the user\u2019s IP. ([#3036](https://github.com/craftcms/cms/issues/3036))\n- Leading/trailing whitespace characters are now stripped from element titles on save. ([#3020](https://github.com/craftcms/cms/issues/3020))\n- Updated svg-sanitizer to 0.9.\n\n### Deprecated\n- Deprecated `craft\\db\\Connection::createFromConfig()`. `craft\\helpers\\App::dbConfig()` should be used instead.\n- Deprecated `craft\\helpers\\MailerHelper::createMailer()`. `craft\\helpers\\App::mailerConfig()` should be used instead.\n\n### Fixed\n- Fixed a bug where collapsing structure elements would only hide up to 50 of their descendants.\n- Fixed a bug where Date/Time fields could lose their value if they were used in an entry type\u2019s Title Format, and the entry\u2019s site\u2019s language was different than the user\u2019s preferred language. ([#3151](https://github.com/craftcms/cms/issues/3151))\n- Fixed a bug where Dropdown fields could show an incorrect selected value in limited circumstances.\n- Fixed a bug where Dropdown fields on an element index view could show an incorrect selected value in limited circumstances.\n\n## 3.0.17.1 - 2018-07-24\n\n### Fixed\n- Really fixed a PHP error that could occur if the PHP\u2019s `set_time_limit()` was added to the php.ini `disable_functions` list.\n\n## 3.0.17 - 2018-07-24\n\n### Added\n- The Control Panel is now translated for Norwegian Nynorsk. ([#3135](https://github.com/craftcms/cms/pull/3135))\n- Added `craft\\elements\\db\\ElementQuery::anyStatus()`, which can be called when the default `status` and `enabledForSite` filters aren\u2019t desired. ([#3117](https://github.com/craftcms/cms/issues/3117))\n\n### Changed\n- The `addTrailingSlashesToUrls` config setting no longer applies to URLs that end with a segment that has a dot (`.`). ([#3123](https://github.com/craftcms/cms/issues/3123))\n- Craft now redirects install requests back to the Dashboard if it\u2019s already installed. ([#3143](https://github.com/craftcms/cms/issues/3143))\n\n### Fixed\n- Fixed a bug where the Settings \u2192 Email \u2192 System Messages page would show messages in the current application language rather than the primary site\u2019s language.\n- Fixed a bug where system message modals on the Settings \u2192 Email \u2192 System Messages page would initially show messages in the current application language rather than the primary site\u2019s language, even if the application language wasn\u2019t in use by any sites. ([#3115](https://github.com/craftcms/cms/issues/3115))\n- Fixed an error that could occur if `craft\\web\\View::registerAssetFlashes()` was called on a console request. ([#3124](https://github.com/craftcms/cms/issues/3124))\n- Fixed a PHP error that could occur if the PHP\u2019s `set_time_limit()` was added to the php.ini `disable_functions` list.\n- Fixed a bug where expanding a disabled element within a structure index view in the Control Panel wouldn\u2019t reveal any descendants. ([#3126](https://github.com/craftcms/cms/issues/3126))\n- Fixed a bug thumbnails weren\u2019t loading for element index rows that were revealed after expanding a parent element.\n- Fixed an error that occurred if an element\u2019s `getRoute()` method returned a string. ([#3128](https://github.com/craftcms/cms/issues/3128))\n- Fixed a bug where the `|without` filter wasn\u2019t working if an object was passed in. ([#3137](https://github.com/craftcms/cms/issues/3137))\n- Fixed a bug where users\u2019 Language preference would default to Deutsch if the current application language wasn\u2019t one of the available language options. ([#3142](https://github.com/craftcms/cms/issues/3142))\n\n## 3.0.16.1 - 2018-07-18\n\n### Fixed\n- Fixed a bug where the `orderBy` element query param wasn\u2019t being respected when used in conjunction with a `with` param to eager-load elements in a specific order. ([#3109](https://github.com/craftcms/cms/issues/3109))\n- Fixed a bug where underscores were getting removed from slugs. ([#3111](https://github.com/craftcms/cms/issues/3111))\n\n## 3.0.16 - 2018-07-17\n\n### Added\n- The progress bar on the Asset Indexes utility now shows how many files have been indexed, and how many there are in total. ([#2934](https://github.com/craftcms/cms/issues/2934))\n- Added `craft\\base\\PluginInterface::beforeSaveSettings()`.\n- Added `craft\\base\\PluginInterface::afterSaveSettings()`.\n- Added `craft\\base\\Plugin::EVENT_AFTER_SAVE_SETTINGS`.\n- Added `craft\\base\\Plugin::EVENT_BEFORE_SAVE_SETTINGS`.\n\n### Changed\n- Craft no longer relies on ImageMagick or GD to define the image formats that should be considered manipulatable. ([#2408](https://github.com/craftcms/cms/issues/2408))\n- Removed the `showBetaUpdates` config setting as it\u2019s no longer being used.\n- When uploading a file to an Assets field, Craft will automatically sort the file list to show the latest uploads first. ([#2812](https://github.com/craftcms/cms/issues/2812))\n- `dateCreated`, `dateUpdated`, `postDate`, `expiryDate`, `after`, and `before` element query params can new be set to `DateTime` objects.\n- Matrix fields now auto-focus the first text input within newly-created Matrix blocks. ([#3104](https://github.com/craftcms/cms/issues/3104))\n- Updated Twig to 2.5.0.\n- Updated Garnish to 0.1.26.\n- Updated Selectize to 0.12.6.\n\n### Fixed\n- Fixed an error that could occur when sending emails to international domains if the Intl extension wasn\u2019t enabled.\n- Fixed an exception that was thrown if the `securityKey` config setting was changed and Craft was set to use either the SMTP or Gmail mailer transport type. ([#3083](https://github.com/craftcms/cms/issues/3083))\n- Fixed a bug where Asset view was not being refreshed in some cases after using Image Editor. ([#3035](https://github.com/craftcms/cms/issues/3035))\n- Fixed a bug where Craft wouldn\u2019t warn before leaving an edit page with unsaved changes, if Live Preview was active. ([#3092](https://github.com/craftcms/cms/issues/3092))\n- Fixed a bug where entries, categories, and global sets\u2019 `getCpEditUrl()` methods could omit the site handle on multi-site installs. ([#3089](https://github.com/craftcms/cms/issues/3089))\n- Fixed a JavaScript error that occurred when closing Live Preview. ([#3098](https://github.com/craftcms/cms/issues/3098))\n- Fixed a bug where Dashboard widgets could be spaced incorrectly if there was only one grid column. ([#3100](https://github.com/craftcms/cms/issues/3100))\n- Fixed a bug where modal windows with Field Layout Designers could cause the browser to crash. ([#3096](https://github.com/craftcms/cms/pull/3096))\n- Fixed a bug where `craft\\services\\Fields::getAllGroups()` and `getGroupById()` could return incorrect results. ([#3102](https://github.com/craftcms/cms/issues/3102))\n\n## 3.0.15 - 2018-07-09\n\n### Changed\n- It\u2019s now possible to fetch only non-admin users by setting `craft\\elements\\db\\UserQuery::$admin` to `false`.\n- `Craft.EntryTypeSwitcher` now triggers a `typeChange` event after switching the entry type. ([#3067](https://github.com/craftcms/cms/pull/3067))\n- Reduced the left and right padding in the Control Panel for screens less than 768 pixels wide. ([#3073](https://github.com/craftcms/cms/issues/3073))\n- Removed the `useXSendFile` config setting as it\u2019s no longer being used.\n- `craft\\helpers\\StringHelper::toKebabCase()`, `toCamelCase()`, `toPascalCase()`, and `toSnakeCase()` now treat camelCase\u2019d and PascalCale\u2019d strings as multiple words. ([#3090](https://github.com/craftcms/cms/issues/3090))\n\n### Fixed\n- Fixed a bug where `craft\\i18n\\I18N::getPrimarySiteLocale()` and `getPrimarySiteLocaleId()` were returning locale info for the _first_ site, rather than the primary one. ([#3063](https://github.com/craftcms/cms/issues/3063))\n- Fixed a bug where element index pages were loading all elements in the view, rather than waiting for the user to scroll to the bottom of the page before loading the next batch. ([#3068](https://github.com/craftcms/cms/issues/3068))\n- Fixed a bug where sites listed in the Control Panel weren\u2019t always in the correct sort order. ([#3065](https://github.com/craftcms/cms/issues/3065))\n- Fixed an error that occurred when users attempted to create new entries within entry selector modals, for a section they didn\u2019t have permission to publish peer entries in. ([#3069](https://github.com/craftcms/cms/issues/3069))\n- Fixed a bug where the \u201cSave as a new asset\u201d button label wasn\u2019t getting translated in the Image Editor. ([#3070](https://github.com/craftcms/cms/pull/3070))\n- Fixed a bug where it wasn\u2019t possible to set the filename of assets when uploading them as data strings. ([#2973](https://github.com/craftcms/cms/issues/2973))\n- Fixed a bug where the Field Type menu\u2019s options within new Matrix block type settings weren\u2019t getting sorted alphabetically. ([#3072](https://github.com/craftcms/cms/issues/3072))\n- Fixed an exception that was thrown when testing email settings if the Template setting was invalid. ([#3074](https://github.com/craftcms/cms/issues/3074))\n- Fixed a bug where Dropdown fields\u2019 bottom margin could jump up a bit when an empty option was selected. ([#3075](https://github.com/craftcms/cms/issues/3075))\n- Fixed a bug where main content containers in the Control Panel could become too wide in Firefox. ([#3071](https://github.com/craftcms/cms/issues/3071))\n\n## 3.0.14 - 2018-07-03\n\n### Changed\n- `craft\\events\\SiteEvent` now has a `$oldPrimarySiteId` property, which will be set to the previous primary site ID (which may stil be the current site ID, if it didn\u2019t just change).\n- `craft\\helpers\\Search::normalizeKeywords()` now has a `$language` argument, which can be set if the character mappings should be pulled from a different language than the current app language.\n- `craft\\services\\Sites::getEditableSiteIds()` and `getEditableSites()` now return the same things as `getAllSiteIds()` and `getAllSites()` when there\u2019s only one site. ([#3049](https://github.com/craftcms/cms/issues/3049))\n\n### Fixed\n- Fixed a bug where user verification links could get mangled when emails were parsed as Markdown, if the verification code contained two or more underscores.\n- Fixed a bug where Craft was misinterpreting `X-Forwarded-For` headers as the user\u2019s IP instead of the server\u2019s IP. ([#3036](https://github.com/craftcms/cms/issues/3036))\n- Fixed a bug where Craft wasn\u2019t auto-scrolling the content container when dragging items near a window edge. ([#3048](https://github.com/craftcms/cms/issues/3048))\n- Fixed a PHP error that occurred when loading a Debug Toolbar panel on a page that contained serialized Checkboxes or Multi-Select field data. ([#3034](https://github.com/craftcms/cms/issues/3034))\n- Fixed a bug where elements\u2019 normalized search keywords weren\u2019t always using the correct language-specific character mappings. ([#3046](https://github.com/craftcms/cms/issues/3046))\n- Fixed a bug where the `<html lang>` attribute was hard-set to `en-US` rather than the current application language. ([#3053](https://github.com/craftcms/cms/pull/3053))\n- Fixed a PHP error that occurred when entering an invalid number into a Number field that was set to have decimal digits. ([#3059](https://github.com/craftcms/cms/issues/3059))\n\n### Security\n- Craft no longer shows the installer when it can\u2019t establish a database connection if Dev Mode isn\u2019t enabled.\n\n## 3.0.13.2 - 2018-06-27\n\n### Fixed\n- Fixed an error that occurred when deleting users from the Users index page.\n\n## 3.0.13.1 - 2018-06-26\n\n### Fixed\n- Fixed a bug where Delete User modals weren\u2019t showing the total number of entries that will be transferred/deleted.\n\n## 3.0.13 - 2018-06-26\n\n### Added\n- Craft now includes a summary of the content that will be transferred/deleted in Delete User modals. ([#875](https://github.com/craftcms/cms/issues/875))\n- `|date`, `|time`, and `|datetime` filters now support a `locale` argument, for specifying which locale\u2019s formatter should be doing the date/time formatting. ([#3006](https://github.com/craftcms/cms/issues/3006))\n- Added `craft\\base\\ApplicationTrait::getIsInitialized()`.\n- Added `craft\\base\\ClonefixTrait`.\n- Added `craft\\controllers\\AssetsController::actionThumb()`.\n- Added `craft\\controllers\\UsersController::actionUserContentSummary()`.\n- Added `craft\\controllers\\UsersController::EVENT_DEFINE_CONTENT_SUMMARY`.\n- Added `craft\\helpers\\App::backtrace()`.\n- Added `craft\\queue\\jobs\\PropagateElements`.\n- Added `craft\\services\\Elements::propagateElement()`.\n\n### Changed\n- Editable tables now submit an empty string when they have no rows.\n- Reduced the overhead when adding a new site by only resaving existing assets, categories, global sets, and tags once for the newly-created site, rather than for all sites.\n- Web-based queue workers now call `craft\\helpers\\App::maxPowerCaptain()` before running the queue. ([#3011](https://github.com/craftcms/cms/issues/3011))\n- The PHP Info utility no longer displays the original values for settings and only the current environment value. ([#2990](https://github.com/craftcms/cms/issues/2990))\n- Loosened up most of Craft\u2019s Composer dependency constraints.\n- Craft no longer publishes asset thumbnails to the `cpresources/` folder.\n- `attributes`, `error`, `errors`, and `scenario` are now reserved field handles. ([#3032](https://github.com/craftcms/cms/issues/3032))\n- Improved the look of Control Panel tabs.\n- `craft\\web\\UrlManager::createUrl()`, `createAbsoluteUrl()`, and `getMatchedElement()` now log warnings if they\u2019re called before Craft has been fully initialized. ([#3028](https://github.com/craftcms/cms/issues/3028))\n\n### Deprecated\n- Deprecated `craft\\controllers\\AssetsController::actionGenerateThumb()`.\n\n### Fixed\n- Fixed a bug where sidebar meta info on Edit User pages was bleeding over the edge of the page\u2019s content area.\n- Fixed a bug where Table fields wouldn\u2019t remember if they had no rows in their Default Values setting. ([#2979](https://github.com/craftcms/cms/issues/2979))\n- Fixed a bug where passing `timezone=false` to the `|date`, `|time`, and `|datetime` filters would not preserve the given date\u2019s time zone.\n- Fixed a bug where AM/PM strings in formatted dates weren\u2019t respecting the casing specified by the `A`/`a` character in the date format. ([#3007](https://github.com/craftcms/cms/issues/3007))\n- Fixed a bug you could get an invalid license warning in cases where web API calls returned a 500 response code.\n- Fixed a bug where cloning models and queries would lose any associated behaviors. ([#2857](https://github.com/craftcms/cms/issues/2857))\n- Fixed a bug where custom field params were getting forgotten when calling `getNext()` and `getPrev()`, if an element query object was passed in. ([#3019](https://github.com/craftcms/cms/issues/3019))\n- Fixed a bug where datepickers were getting scrollbars.\n- Fixed a bug where volumes\u2019 field layouts weren\u2019t getting deleted when volumes were deleted. ([#3022](https://github.com/craftcms/cms/pull/3022))\n- Fixed a bug where deleting a section or an entry type wouldn\u2019t delete any associated entries that didn\u2019t exist in the primary site. ([#3023](https://github.com/craftcms/cms/issues/3023))\n- Fixed a bug where the `svg()` Twig function could convert `id` attributes within the SVG contents to invalid IDs. ([#3025](https://github.com/craftcms/cms/issues/3025))\n- Fixed a bug where asset thumbnails wouldn\u2019t load reliably in the Control Panel on load-balanced environments. ([#3026](https://github.com/craftcms/cms/issues/3026))\n- Fixed a PHP error that could occur when validating Assets fields if a file was uploaded but no longer exists at the temp location. ([#3033](https://github.com/craftcms/cms/pull/3033))\n\n## 3.0.12 - 2018-06-18\n\n### Added\n- Added a `leaves` element query param that limits the selected elements to just the leaves in the structure (elements without children).\n- Added `craft\\helpers\\Db::deleteIfExists()`.\n- Added `craft\\services\\Categories::deleteGroup()`. ([#3000](https://github.com/craftcms/cms/pull/3000))\n- Added `craft\\services\\Tags::deleteTagGroup()`. ([#3000](https://github.com/craftcms/cms/pull/3000))\n- Added `craft\\services\\UserGroups::deleteGroup()`. ([#3000](https://github.com/craftcms/cms/pull/3000))\n\n### Changed\n- Improved Control Panel styling. ([#2883](https://github.com/craftcms/cms/issues/2883))\n\n### Removed\n- Removed `craft\\services\\Fields::updateFieldVersionAfterRequest()`.\n\n### Fixed\n- Fixed a caching bug where the Fields service could still think a field existed after it had been deleted. ([#2985](https://github.com/craftcms/cms/issues/2985))\n- Fixed a bug where Craft would not invalidate the dynamically-generated `craft\\behaviors\\ContentBehavior` and `craft\\behaviors\\ElementQueryBehavior` after saving/deleting a custom field, if the request didn\u2019t end normally. ([#2999](https://github.com/craftcms/cms/issues/2999))\n- Fixed a PHP error that could occur when saving entries with a URI format that contained certain Twig filters. ([#2995](https://github.com/craftcms/cms/issues/2995))\n- Fixed a bug where `{shorthand}` variables in templates rendered by `craft\\web\\View::renderObjectTemplate()` could end up referencing global variables, if the variable wasn\u2019t a property of the object. ([#3002](https://github.com/craftcms/cms/issues/3002))\n- Fixed a bug where the Find and Replace utility wasn\u2019t updating element titles. ([#2996](https://github.com/craftcms/cms/issues/2996))\n- Fixed some wonky behavior if one of the custom user profile tabs was called \u201cAccount\u201d. ([#2998](https://github.com/craftcms/cms/issues/2998))\n- Fixed a bug where dragging a folder on the Assets index page could have unexpected results. ([#2873](https://github.com/craftcms/cms/issues/2873))\n- Reduced the likelihood of SQL deadlock errors when saving elements. ([#3003](https://github.com/craftcms/cms/issues/3003))\n\n## 3.0.11 - 2018-06-12\n\n### Changed\n- Sort options defined by element types\u2019 `sortOptions()` / `defineSortOptions()` methods can now be specified as sub-arrays with `label`, `orderBy`, and `attribute` keys.\n- Entries and categories can now be sorted by their slugs.\n- The \u201cCache remote images?\u201d option in the Asset Indexes utility is now enabled by default. ([#2977](https://github.com/craftcms/cms/issues/2977))\n\n### Fixed\n- Fixed a bug where it was not possible to order search results by search score, if the element type didn\u2019t specify any sort options.\n- Fixed a bug where clicking on \u201cDate Created\u201d and \u201cDate Updated\u201d column headers on element indexes wouldn\u2019t update the sort order. ([#2975](https://github.com/craftcms/cms/issues/2975))\n- Fixed a bug where Edit Entry pages were listing more than the 10 most recent versions. ([#2976](https://github.com/craftcms/cms/issues/2976))\n- Fixed a SQL error that occurred when upgrading from Craft 2 to 3 via the terminal. ([#1347](https://github.com/craftcms/cms/issues/1347))\n- Fixed the alignment of expand/collapse toggles in asset index sidebars. ([#2981](https://github.com/craftcms/cms/issues/2981))\n\n## 3.0.10.3 - 2018-06-07\n\n### Fixed\n- Fixed a bug where the \u201cNew Entry\u201d menu on the Entries index page would not contain any options on single-site installs, running MySQL. ([#2961](https://github.com/craftcms/cms/issues/2961))\n- Fixed a bug where the `siteName` config setting wasn\u2019t working as expected when set to an array. ([#2968](https://github.com/craftcms/cms/issues/2968))\n\n## 3.0.10.2 - 2018-06-07\n\n### Changed\n- Improved the output of `craft\\helpers\\DateTimeHelper::humanDurationFromInterval()`.\n- Updated Garnish to 0.1.24.\n\n### Fixed\n- Fixed JavaScript errors that could occur in the Control Panel on pages with Ajax requests. ([#2966](https://github.com/craftcms/cms/issues/2966))\n- Fixed a bug where the \u201cNew Entry\u201d menu on the Entries index page would not contain any options on single-site installs. ([#2961](https://github.com/craftcms/cms/issues/2961))\n- Fixed a bug where JavaScript files registered with `craft\\web\\View::registerJsFile()` would be ignored if the `depends` option was set. ([#2965](https://github.com/craftcms/cms/issues/2965))\n\n## 3.0.10.1 - 2018-06-06\n\n### Fixed\n- Fixed a bug where Craft wasn\u2019t converting empty strings to `null` when saving data to non-textual columns.\n- Fixed a bug where Craft would show a Database Connection Error on Install requests, if it couldn\u2019t connect to the database.\n- Fixed a bug where Craft wasn\u2019t keeping track of element queries that were executed within `{% cache %}` tags. ([#2959](https://github.com/craftcms/cms/issues/2959))\n\n## 3.0.10 - 2018-06-05\n\n### Added\n- Added support for a `CRAFT_LICENSE_KEY` PHP constant, which can be set to the project\u2019s license key, taking precedence over the `license.key` file.\n- Added `craft\\helpers\\Stringy::getLangSpecificCharsArray()`.\n- Added `craft\\web\\View::setRegisteredAssetBundles()`.\n- Added `craft\\web\\View::setRegisteredJsFiles()`.\n\n### Changed\n- Generated site URLs now always include full host info, even if the base site URL is root/protocol-relative. ([#2919](https://github.com/craftcms/cms/issues/2919))\n- Variables passed into `craft\\web\\View::renderObjectTemplate()` can now be referenced using the shorthand syntax (e.g. `{foo}`).\n- `craft\\helpers\\StringHelper::asciiCharMap()` now has `$flat` and `$language` arguments.\n- Craft no longer saves new versions of entries when absolutely nothing changed about them in the save request. ([#2923](https://github.com/craftcms/cms/issues/2923))\n- Craft no longer enforces plugins\u2019 `minVersionRequired` settings if the currently-installed version begins with `dev-`.\n- Improved the performance of element queries when a lot of values were passed into a param, such as `id`, by using `IN()` and `NOT IN()` conditions when possible. ([#2937](https://github.com/craftcms/cms/pull/2937))\n- The Asset Indexes utility no longer skips files with leading underscores. ([#2943](https://github.com/craftcms/cms/issues/2943))\n- Updated Garnish to 0.1.23.\n\n### Deprecated\n- Deprecated the `customAsciiCharMappings` config setting. (Any corrections to ASCII char mappings should be submitted to [Stringy](https://github.com/danielstjules/Stringy).)\n\n### Fixed\n- Fixed a PHP error that could occur when `craft\\fields\\Number::normalizeValue()` was called without passing an `$element` argument. ([#2913](https://github.com/craftcms/cms/issues/2913))\n- Fixed a bug where it was not possible to fetch Matrix blocks with the `relatedTo` param if a specific custom field was specified.\n- Fixed a bug where `craft\\helpers\\UrlHelper::url()` and `siteUrl()` were not respecting the `$scheme` argument for site URLs.\n- Fixed a bug where `{id}` tags within element URI formats weren\u2019t getting parsed correctly on first save. ([#2922](https://github.com/craftcms/cms/issues/2922))\n- Fixed a bug where `craft\\helpers\\MigrationHelper::dropAllForeignKeysToTable()` wasn\u2019t working correctly. ([#2897](https://github.com/craftcms/cms/issues/2897))\n- Fixed a \u201cCraft is not defined\u201d JavaScript error that could occur on the Forgot Password page in the Control Panel and Dev Toolbar requests.\n- Fixed a bug where rotating the screen on iOS would change how the page was zoomed.\n- Fixed a bug where `craft\\helpers\\StringHelper::toAscii()` and the `Craft.asciiString()` JS method weren\u2019t using language-specific character replacements, or any custom replacements defined by the `customAsciiCharMappings` config setting.\n- Fixed a bug where the number `0` would not save in a Plain Text field.\n- Fixed a bug where Craft could pick the wrong current site if the primary site had a root-relative or protocol-relative URL, and another site didn\u2019t, but was otherwise an equal match.\n- Fixed a bug where Control Panel Ajax requests could cause some asset bundles and JavaScript files to be double-registered in the browser.\n- Fixed a bug where the \u201cNew entry\u201d menu on the Entries index page was including sections that weren\u2019t available in the selected site, and they weren\u2019t linking to Edit Entry pages for the selected site. ([#2925](https://github.com/craftcms/cms/issues/2925))\n- Fixed a bug where the `|date`, `|time`, and `|datetime` filters weren\u2019t respecting their `$timezone` arguments. ([#2926](https://github.com/craftcms/cms/issues/2926))\n- Fixed a bug where element queries weren\u2019t respecting the `asArray` param when calling `one()`. ([#2940](https://github.com/craftcms/cms/issues/2940))\n- Fixed a bug where the Asset Indexes utility wouldn\u2019t work as expected if all of a volume\u2019s assets had been deleted from the file system. ([#2955](https://github.com/craftcms/cms/issues/2955))\n- Fixed a SQL error that could occur when a `{% cache %}` tag had no body. ([#2953](https://github.com/craftcms/cms/issues/2953))\n\n## 3.0.9 - 2018-05-22\n\n### Added\n- Added a default plugin icon to plugins without an icon in the Plugin Store.\n- Added `craft\\helpers\\ArrayHelper::without()` and `withoutValue()`.\n- Added `craft\\base\\FieldInterface::modifyElementIndexQuery()`.\n- Added `craft\\elements\\db\\ElementQueryInterface::andWith()`.\n\n### Changed\n- Fixed a bug where Craft was checking the file system when determining if an asset was a GIF, when it should have just been checking the file extension.\n- `craft\\base\\Plugin` now sets the default `$controllerNamespace` value to the plugin class\u2019 namespace + `\\controllers` or `\\console\\controllers`, depending on whether it\u2019s a web or console request.\n- Improved the contrast of success and error notices in the Control Panel to meet WCAG AA requirements. ([#2885](https://github.com/craftcms/cms/issues/2885))\n- `fieldValue` is now a protected field handle. ([#2893](https://github.com/craftcms/cms/issues/2893))\n- Craft will no longer discard any preloaded elements when setting the `with` param on an element query, fixing a bug where disabled Matrix blocks could show up in Live Preview if any nested fields were getting eager-loaded. ([#1576](https://github.com/craftcms/cms/issues/1576))\n- Improved memory usage when using the `{% cache %}` tag. ([#2903](https://github.com/craftcms/cms/issues/2903))\n\n### Fixed\n- Fixed a bug where the Plugin Store was listing featured plugins (e.g. \u201cRecently Added\u201d) in alphabetical order rather than the API-defined order. ([pixelandtonic/craftnet#83](https://github.com/pixelandtonic/craftnet/issues/83))\n- Fixed a SQL error that occurred when programmatically saving a field layout, if the field\u2019s `required` property wasn\u2019t set.\n- Fixed a JavaScript error that could occur when multiple Assets fields were present on the same page.\n- Fixed an error that could occur when running the `setup` command on some environments.\n- Fixed a PHP error that could occur when calling `craft\\elements\\db\\ElementQuery::addOrderBy()` if `$columns` normalized to an empty array. ([#2896](https://github.com/craftcms/cms/issues/2896))\n- Fixed a bug where it wasn\u2019t possible to access custom field values on Matrix blocks via `matrixblock` reference tags.\n- Fixed a bug where relational fields with only disabled elements selected would get empty table cells on element indexes. ([#2910](https://github.com/craftcms/cms/issues/2910))\n\n## 3.0.8 - 2018-05-15\n\n### Added\n- Number fields now have a \u201cDefault Value\u201d setting. ([#927](https://github.com/craftcms/cms/issues/927))\n- Added the `preserveCmykColorspace` config setting, which can be set to `true` to prevent images\u2019 color spaces from getting converted to sRGB on environments running ImageMagick.\n\n### Changed\n- Error text is now orange instead of red. ([#2885](https://github.com/craftcms/cms/issues/2885))\n- Detail panes now have a lighter, more saturated background color.\n\n### Fixed\n- Fixed a bug where Craft\u2019s default MySQL backup command would not respect the `unixSocket` database config setting. ([#2794](https://github.com/craftcms/cms/issues/2794))\n- Fixed a bug where some SVG files were not recognized as SVG files.\n- Fixed a bug where Table fields could add the wrong number of default rows if the Min Rows setting was set, and the Default Values setting had something other than one row. ([#2864](https://github.com/craftcms/cms/issues/2864))\n- Fixed an error that could occur when parsing asset reference tags. ([craftcms/redactor#47](https://github.com/craftcms/redactor/issues/47))\n- Fixed a bug where \u201cTry\u201d and \u201cBuy\u201d buttons in the Plugin Store were visible when the `allowUpdates` config setting was disabled. ([#2781](https://github.com/craftcms/cms/issues/2781))\n- Fixed a bug where Number fields would forget their Min/Max Value settings if they were set to 0.\n- Fixed a bug where entry versions could be displayed in the wrong order if multiple versions had the same creation date. ([#2889](https://github.com/craftcms/cms/issues/2889))\n- Fixed an error that occurred when installing Craft on a domain with an active user session.\n- Fixed a bug where email verification links weren\u2019t working for publicly-registered users if the registration form contained a Password field and the default user group granted permission to access the Control Panel.\n\n### Security\n- Login errors for locked users now factor in whether the `preventUserEnumeration` config setting is enabled.\n\n## 3.0.7 - 2018-05-10\n\n### Added\n- Added the `transformGifs` config setting, which can be set to `false` to prevent GIFs from getting transformed or cleansed. ([#2845](https://github.com/craftcms/cms/issues/2845))\n- Added `craft\\helpers\\FileHelper::isGif()`.\n\n### Changed\n- Craft no longer logs warnings about missing translation files when Dev Mode isn\u2019t enabled. ([#1531](https://github.com/craftcms/cms/issues/1531))\n- Added `craft\\services\\Deprecator::$logTarget`. ([#2870](https://github.com/craftcms/cms/issues/2870))\n- `craft\\services\\Deprecator::log()` no longer returns anything.\n\n### Fixed\n- Fixed a bug where it wasn\u2019t possible to upload new assets to Assets fields using base64-encoded strings. ([#2855](https://github.com/craftcms/cms/issues/2855))\n- Fixed a bug where Assets fields would ignore all submitted asset IDs if any new assets were uploaded as well.\n- Fixed a bug where SVG files that were using single quotes instead of double quotes would not be recognized as SVGs.\n- Fixed a bug where translated versions of the \u201cIt looks like someone is currently performing a system update.\u201d message contained an HTML-encoded `<br/>` tag.\n- Fixed a bug where changing an entry\u2019s type could skip adding the new entry type\u2019s tabs, if the previous entry type didn\u2019t have any tabs. ([#2859](https://github.com/craftcms/cms/issues/2859))\n- Fixed warnings about missing SVG files that were logged by Control Panel requests.\n- Fixed a bug where the `|date` filter would ignore date formatting characters that don\u2019t have ICU counterparts. ([#2867](https://github.com/craftcms/cms/issues/2867))\n- Fixed a bug where the global `currentUser` Twig variable could be set to `null` and global sets and could be missing some custom field values when a user was logged-in, if a plugin was loading Twig during or immediately after plugin instantiation. ([#2866](https://github.com/craftcms/cms/issues/2866))\n\n## 3.0.6 - 2018-05-08\n\n### Added\n- Error messages about missing plugin-supplied field and volume types now show an Install button when possible.\n- Added `craft\\base\\MissingComponentTrait::getPlaceholderHtml()`.\n- Added `craft\\db\\Migration::EVENT_AFTER_UP` and `EVENT_AFTER_DOWN` events.\n- Added `craft\\elements\\Asset::getContents()`.\n\n### Changed\n- Edit User pages will now warn editors when leaving the page with unsaved changes. ([#2832](https://github.com/craftcms/cms/issues/2832))\n- Modules are once again loaded before plugins, so they have a chance to register Twig initialization events before a plugin initializes Twig. ([#2831](https://github.com/craftcms/cms/issues/2831))\n- `craft\\helpers\\FileHelper::isSvg()` now returns `true` for files with an `image/svg` MIME type (missing the `+xml`). ([#2837](https://github.com/craftcms/cms/pull/2837))\n- The `svg()` Twig function now accepts assets to be passed directly into it. ([#2838](https://github.com/craftcms/cms/pull/2838))\n- The \u201cSave and add another\u201d save menu option on Edit Entry and Edit Categories pages now maintain the currently-selected site. ([#2844](https://github.com/craftcms/cms/issues/2844))\n- PHP date patterns that are *only* a month name or week day name character will now format the date using the stand-alone month/week day name value. (For example, `'F'` will format a date as \u201cMaggio\u201d instead of \u201cmaggio\u201d.)\n- Servers without the Intl extension will now use location-agnostic locale data as a fallback if locale data for the specific locale isn\u2019t available.\n- The `|date` Twig filter always goes through `craft\\i18n\\Formatter::asDate()` now, unless formatting a `DateInterval` object.\n- The Settings \u2192 Plugins page now shows \u201cBuy now\u201d buttons for any commercial plugins that don\u2019t have a license key yet.\n\n### Deprecated\n- Deprecated `craft\\helpers\\DateTimeHelper::translateDate()`. `craft\\i18n\\Formatter::asDate()` should be used instead.\n\n### Removed\n- Removed the `translate` argument from the `|date`, `|time`, and `|datetime` Twig filters; the resulting formatted dates will always be translated now. (Use `myDate.format()` to avoid translations.)\n\n### Fixed\n- Fixed an error that could occur in the Plugin Store.\n- Fixed a bug where `myDate|date('F')` was returning the short \u201cMay\u201d translation rather than the full-length one. ([#2848](https://github.com/craftcms/cms/issues/2848))\n\n## 3.0.5 - 2018-05-01\n\n### Changed\n- Fields\u2019 translation icons now reveal the chosen Translation Method in their tooltip. ([#2808](https://github.com/craftcms/cms/issues/2808))\n- Improved the error messages displayed when an Assets field has an invalid Upload Location setting. ([#2803](https://github.com/craftcms/cms/issues/2803))\n- Craft now logs errors that occur when saving and replacing assets. ([#2814](https://github.com/craftcms/cms/issues/2814))\n- Single sections\u2019 entry types\u2019 handles are now updated to match their section\u2019s handle whenever the section is saved. ([#2824](https://github.com/craftcms/cms/issues/2824))\n- The Control Panel background color was lightened up a bit.\n\n### Fixed\n- Fixed an error that would occur on servers without the Phar PHP extension enabled.\n- Fixed an error that could occur if a Matrix block was deleted by a queue job. ([#2813](https://github.com/craftcms/cms/issues/2813))\n- Fixed a bug where Twig could be configured to output times in UTC rather than the system timezone, if a bootstrapped module was loading Twig. ([#2761](https://github.com/craftcms/cms/issues/2761))\n- Fixed a SQL error that could occur when upgrading from Craft 2 to Craft 3 with an active user session.\n- Fixed various SQL errors that could occur when upgrading from Craft 2 to Craft 3, if there were any lingering Craft 3 database tables from a previous upgrade attempt.\n- Fixed a bug where the Clear Caches tool was deleting the `.gitignore` file inside `web/cpresources/`. ([#2823](https://github.com/craftcms/cms/issues/2823))\n- Fixed the vertical positioning of checkboxes in the Control Panel. ([#2825](https://github.com/craftcms/cms/issues/2825))\n- Fixed a JavaScript error that could occur if an element type\u2019s class name contained `\\u`. ([#2826](https://github.com/craftcms/cms/issues/2826))\n\n## 3.0.4 - 2018-04-24\n\n### Added\n- Added the `craft.globalSets()` template function. ([#2790](https://github.com/craftcms/cms/issues/2790))\n- Added the `hasDescendants` element query param. ([#2786](https://github.com/craftcms/cms/issues/2786))\n- Added `craft\\elements\\User::$hasDashboard`.\n\n### Changed\n- Sections and category groups now ignore posted Template settings for sites that don\u2019t have URI Formats.\n- Control Panel resources are once again eager-published. ([#2763](https://github.com/craftcms/cms/issues/2763))\n- `entries/save-entries` and `categories/save-category` actions now include the `slug` for responses that accept JSON. ([#2792](https://github.com/craftcms/cms/issues/2792))\n- Most `craft\\services\\Path` methods now have a `$create` argument, which can be set to `false` to prevent the directory from being created if it doesn\u2019t exist yet.\n- Craft no longer creates directories when it just needed to clear it. ([#2771](https://github.com/craftcms/cms/issues/2771))\n- `craft\\services\\Config::setDotEnvVar()` now sets the environment variable for the current request, in addition to updating the `.env` file.\n- Removed `craft\\controllers\\AssetsController::actionDownloadTempAsset()`.\n- User now must be logged in to use the Asset Preview File functionality.\n\n### Fixed\n- Fixed a bug where users would regain all default Dashboard widgets if all widgets were removed. ([#2769](https://github.com/craftcms/cms/issues/2769))\n- Fixed a bug where you would get a \u201cnot a valid language\u201d error message when creating a new site using certain languages.\n- Fixed a bug where database connection settings that were set by the `setup` command weren\u2019t always taking effect in time for the CLI installer. ([#2774](https://github.com/craftcms/cms/issues/2774))\n- Fixed a bug where empty Plain Text fields were getting empty string values rather than `null`.\n- Fixed a bug where elements within relational fields could have two thumbnails. ([#2785](https://github.com/craftcms/cms/issues/2785))\n- Fixed a bug where it was not possible to pass a `--table-prefix` argument to the `setup/db-creds` command. ([#2791](https://github.com/craftcms/cms/pull/2791))\n- Fixed an error that occurred for users without permission to perform updates, if available update info wasn\u2019t cached.\n- Fixed an error that occurred when `craft\\elements\\Asset::sources()` was called in a console request. ([#2798](https://github.com/craftcms/cms/issues/2798))\n- Fixed JavaScript errors that could occur on the front end after deleting Matrix blocks. ([#2799](https://github.com/craftcms/cms/pull/2799))\n\n## 3.0.3.1 - 2018-04-18\n\n### Fixed\n- Fixed an error that occurred when editing an entry if any of the entry\u2019s revisions were created with an entry type that no longer exists.\n- Fixed an error that could occur when saving an asset. ([#2764](https://github.com/craftcms/cms/issues/2764))\n- Fixed a bug where Craft assumed an asset was missing if there was an error when indexing it. ([#2763](https://github.com/craftcms/cms/issues/2763))\n\n## 3.0.3 - 2018-04-17\n\n### Added\n- Added `craft\\elements\\Entry::updateTitle()`.\n- Added `Yii::alias()`.\n\n### Changed\n- New sites\u2019 Base URLs now default to `@web/`.\n- Textual custom fields now ensure that they don\u2019t contain 4+ byte characters. ([#2725](https://github.com/craftcms/cms/issues/2725))\n- It is no longer expected that all of the `defaultSearchTermOptions` config setting options will be set if any of the default option values need to be overridden. ([#2737](https://github.com/craftcms/cms/issues/2737))\n- Control Panel panes now have at least 48 pixels of bottom padding. ([#2744](https://github.com/craftcms/cms/issues/2744))\n- Craft now intercepts 404-ing resource requests, and publishes the resources on the fly.\n- The Clear Caches utility now has a \u201cControl Panel resources\u201d option.\n- The Clear Caches utility now sorts the cache options alphabetically.\n- When enabling new sites for a section, the new sites\u2019 content is now based on the primary site\u2019s content, if the section was and still is enabled for the primary site. ([#2748](https://github.com/craftcms/cms/issues/2748))\n- Improved the responsiveness of element indexes.\n- `Craft.BaseElementIndexView` now has a `loadMoreElementsAction` setting. ([#2762](https://github.com/craftcms/cms/pull/2762))\n\n### Fixed\n- Fixed a bug where the Clear Caches utility was not deleting template caches. ([#2720](https://github.com/craftcms/cms/issues/2720))\n- Fixed a bug where the Plugin Store was not displaying payment errors on checkout.\n- Fixed a bug where Control Panel-defined routes that contained special regular expression characters weren\u2019t working. ([#2721](https://github.com/craftcms/cms/issues/2721))\n- Fixed a bug where it was not possible to save system messages in some cases.\n- Fixed a bug where static translations within dynamic entry title formats were getting translated using the current site\u2019s language, rather than the entry\u2019s language. ([#2722](https://github.com/craftcms/cms/issues/2722))\n- Fixed a bug where deprecation errors for some date formatting methods were not escaping backslashes.\n- Fixed a bug where plugins\u2019 \u201cLast update\u201d timestamps in the Plugin Store weren\u2019t getting formatted correctly in Safari. ([#2733](https://github.com/craftcms/cms/issues/2733))\n- Fixed references to a nonexistent `Craft.eot` file in the Control Panel CSS. ([#2740](https://github.com/craftcms/cms/issues/2740))\n- Fixed a bug where the default PostgreSQL database restore command wasn\u2019t setting the `PGPASSWORD` environment variable. ([#2741](https://github.com/craftcms/cms/pull/2741))\n- Fixed an error that could occur if the system time zone was not supported by the ICU library, on environments with the Intl extension loaded.\n- Fixed a bug where several administrative fields had translatable icons. ([#2742](https://github.com/craftcms/cms/issues/2742))\n- Fixed a bug where `craft\\controllers\\PluginStoreController::actionSavePluginLicenseKeys()` was trying to set a plugin license key for plugins which were not installed.\n\n### Security\n- Fixed a bug assets were not getting cleansed on upload. ([#2709](https://github.com/craftcms/cms/issues/2709))\n\n## 3.0.2 - 2018-04-10\n\n### Added\n- Added the `EVENT_BEFORE_DELETE_CACHES` and `EVENT_AFTER_DELETE_CACHES` events to `craft\\services\\TemplateCaches`.\n- Added `craft\\events\\DeleteTemplateCachesEvent`.\n\n### Changed\n- Craft now deletes all compiled templates whenever Craft or a plugin is updated. ([#2686](https://github.com/craftcms/cms/issues/2686))\n- The Plugin Store now displays commercial plugins\u2019 renewal prices. ([#2690](https://github.com/craftcms/cms/issues/2690))\n- The Plugin Store no longer shows the \u201cUpgrade Craft CMS\u201d link if Craft is already running (and licensed to run) the Pro edition. ([#2713](https://github.com/craftcms/cms/issues/2713))\n- Matrix fields now set `$propagating` to `true` when saving Matrix blocks, if the owner element is propagating.\n- `craft\\helpers\\ArrayHelper::toArray()` no longer throws a deprecation error when a string without commas is passed to it. ([#2711](https://github.com/craftcms/cms/issues/2711))\n- Editable tables now support an `html` column type, which will output cell values directly without encoding HTML entities. ([#2716](https://github.com/craftcms/cms/pull/2716))\n- `Craft.EditableTable` instances are now accessible via `.data('editable-table')` on their `<table>` element. ([#2694](https://github.com/craftcms/cms/issues/2694))\n- Updated Composer to 1.6.3. ([#2707](https://github.com/craftcms/cms/issues/2707))\n- Updated Garnish to 0.1.22. ([#2689](https://github.com/craftcms/cms/issues/2689))\n\n### Fixed\n- Fixed an error that could occur in the Control Panel if any plugins with licensing issues were installed. ([#2691](https://github.com/craftcms/cms/pull/2691))\n- Fixed a bug on the Plugin Store\u2019s Payment screen where the \u201cUse a new credit card\u201d radio option would not get selected automatically even if it was the only one available.\n- Fixed a bug where `craft\\web\\assets\\vue\\VueAsset` didn\u2019t respect the `useCompressedJs` config setting.\n- Fixed an error that occurred when saving a Single entry over Ajax. ([#2687](https://github.com/craftcms/cms/issues/2687))\n- Fixed an error that could occur when disabling a site on a Single section. ([#2695](https://github.com/craftcms/cms/issues/2695))\n- Fixed an error that could occur on requests without a content type on the response. ([#2704](https://github.com/craftcms/cms/issues/2704))\n- Fixed a bug where the `includeSubfolders` asset query param wasn\u2019t including results in the parent folder. ([#2706](https://github.com/craftcms/cms/issues/2706))\n- Fixed an error that could occur when querying for users eager-loaded with their photos, if any of the resulting users didn\u2019t have a photo. ([#2708](https://github.com/craftcms/cms/issues/2708))\n- Fixed a bug where relational fields within Matrix fields wouldn\u2019t save relations to elements that didn\u2019t exist on all of the sites the owner element existed on. ([#2683](https://github.com/craftcms/cms/issues/2683))\n- Fixed a bug where relational fields were ignoring disabled related elements in various functions, including required field validation and value serialization.\n- Fixed an error that would occur if a new custom field was created and added to an element\u2019s field layout, and its value was accessed, all in the same request. ([#2705](https://github.com/craftcms/cms/issues/2705))\n- Fixed a bug where the `id` param was ignored when used on an eager-loaded elements\u2019 criteria. ([#2717](https://github.com/craftcms/cms/issues/2717))\n- Fixed a bug where the default restore command for MySQL wouldn\u2019t actually restore the database. ([#2714](https://github.com/craftcms/cms/issues/2714))\n\n## 3.0.1 - 2018-04-04\n\n### Deprecated\n- Brought back and deprecated the `Craft::Personal` and `Craft::Client` constants.\n\n### Fixed\n- Fixed a bug where elements\u2019 `getNext()` and `getPrev()` methods were modifying the element query passed into them. ([#2160](https://github.com/craftcms/cms/issues/2160))\n- Fixed a bug where Table fields could be pre-populated with one too many rows. ([#2680](https://github.com/craftcms/cms/pull/2680))\n\n### Security\n- Craft no longer sends exception messages to error templates, unless the exception is an instance of `yii\\base\\UserException`.\n\n## 3.0.0.2 - 2018-04-04\n\n### Fixed\n- Fixed a bug where Craft Pro installs were getting identified as Craft Solo in the Control Panel.\n\n## 3.0.0 - 2018-04-04\n\n### Added\n- The codebase has been completely rewritten and refactored to improve performance, maintainability, and extensibility.\n- Craft can now be [installed](https://docs.craftcms.com/v3/installation.html) via Composer in addition to a zip file. ([#895](https://github.com/craftcms/cms/issues/895))\n- Craft\u2019s setup wizard is now available as a CLI tool in addition to the web-based one.\n- [Plugins](https://docs.craftcms.com/v3/plugin-intro.html) are now loaded as Composer dependencies, and implemented as extensions of [Yii modules](http://www.yiiframework.com/doc-2.0/guide-structure-modules.html).\n- Added [multi-site](https://docs.craftcms.com/v3/sites.html) support.\n- Added the Plugin Store, where plugins can be discovered, trialled, and purchased. ([#808](https://github.com/craftcms/cms/issues/808))\n- Plugins can now be updated and removed from within the Control Panel.\n- Asset sources are now called \u201cvolumes\u201d, and plugins can supply their own volume types.\n- Added the Image Editor, which can be used to rotate, crop, and flip images, as well as set focal points on them.\n- Added asset previews, which can be triggered via a \u201cPreview file\u201d action on the Assets index, or with a <kbd>Shift</kbd> + <kbd>Spacebar</kbd> keyboard shortcut throughout the Control Panel.\n- Asset editor HUDs now show image previews. ([#837](https://github.com/craftcms/cms/issues/837))\n- Added the \u201cUtilities\u201d section to the Control Panel, replacing the Tools area of the Settings page.\n- Added the Debug Toolbar, powered by the [Debug Extension for Yii 2](http://www.yiiframework.com/doc-2.0/guide-tool-debugger.html).\n- Added support for [Content Migrations](https://docs.craftcms.com/v3/content-migrations.html).\n- Added support for PostgreSQL.\n\n### Changed\n- The Control Panel has been redesigned for better usability, readability and responsiveness.\n- Renamed all \u201cURL Format\u201d things to \u201cURI Format\u201d, in the Control Panel UI and in the code.\n- Added the \u201cPropagate entries across all enabled sites?\u201d section setting. If disabled, entries will only be associated with the site they were created on. ([#2330](https://github.com/craftcms/cms/issues/2330))\n- Structure sections and category groups no longer have Nested URL Format settings. (It\u2019s still possible to achieve the same result with a single URI Format setting.)\n- When an entry type is updated, Craft now re-saves all entries of that type.\n- When a category is deleted, its nested categories are no longer deleted with it.\n- Craft no longer re-saves *all* localizable elements after a new site is created; entries and Matrix blocks are skipped, and plugins that supply custom element types must now re-save their elements manually as well.\n- The \u201cNew entry\u201d and \u201cNew category\u201d buttons on Entries and Categories index pages now load the Edit page for the currently-selected site. ([#2236](https://github.com/craftcms/cms/issues/2236))\n- Elements now validate that custom field values will fit within their database columns, for fields with textual or numeric column types.\n- User photos are now assets. ([#933](https://github.com/craftcms/cms/issues/933))\n- Assets now have a \u201cLink\u201d table attribute option.\n- Volumes\u2019 \u201cBase URL\u201d settings can now begin with `@web`, which is an alias for the root URL that Craft is running from.\n- Local volumes\u2019 \u201cFile System Path\u201d settings can now begin with `@webroot`, which is an alias for the path to the directory that `index.php` lives in.\n- Global Sets\u2019 field layouts can now have custom tabs.\n- Color inputs can now be left blank.\n- Color values within Table fields are now represented by `craft\\fields\\data\\ColorData` objects.\n- Element titles now get a validation error if they contain any 4+ byte characters (like emoji), on servers running MySQL. ([#2513](https://github.com/craftcms/cms/issues/2513))\n- Lightswitch fields that don\u2019t have a value yet will now be assigned the default field value, even for existing elements. ([#2404](https://github.com/craftcms/cms/issues/2404))\n- The system installer now sets the initial admin account\u2019s preferred language to the site language selected in the installation wizard. ([#2480](https://github.com/craftcms/cms/issues/2480))\n- Table fields now have \u201cMin Rows\u201d, \u201cMax Rows\u201d, and \u201cAdd Row Label\u201d settings. ([#2372](https://github.com/craftcms/cms/issues/2372))\n- Table fields now have \u201cDate\u201d, \u201cTime\u201d, \u201cLightswitch\u201d, and \u201cColor\u201d column type options.\n- Color fields now return a `craft\\fields\\data\\ColorData` object, with `hex`, `rgb`, `red`, `green`, `blue`, `r`, `g`, `b`, and `luma` properties.\n- Matrix fields now have \u201cManage blocks on a per-site basis\u201d, \u201cMin Blocks\u201d, and \u201cMax Blocks\u201d settings.\n- Matrix fields with only one block type, and equal values for the Min Blocks and Max Blocks settings, now hide the UI for adding and deleting blocks.\n- Matrix fields with only one block type will now auto-create the minimum number of blocks required by the field, per the Min Blocks setting, for new elements. ([#850](https://github.com/craftcms/cms/issues/850))\n- The `migrate/up` console command will now update the appropriate schema version in the database after successfully completing all migrations. ([#1907](https://github.com/craftcms/cms/issues/1907))\n- Users can now set their preferred language to any supported application language. ([#847](https://github.com/craftcms/cms/issues/847))\n- Users are no longer logged out when verifying a new email address on their own account. ([#1421](https://github.com/craftcms/cms/issues/1421))\n- Users no longer get an exception or error message if they click on an invalid/expired email verification link and are already logged in. Instead they\u2019ll be redirected to wherever they would normally be taken immediately after logging in. ([#1422](https://github.com/craftcms/cms/issues/1422))\n- If anything prevents a user from being deleted, any changes that were made in preparation for deleting the user are now rolled back.\n- Added `webp` as a web-safe image format.\n- Craft now checks if the current installation can manipulate an image instead of checking against a predefined list. ([#1648](https://github.com/craftcms/cms/issues/1648), [#1545](https://github.com/craftcms/cms/issues/1545))\n- The `getCsrfInput()` global function has been renamed to `csrfInput()`. (getCsrfInput() still works but produces a deprecation error.)\n- The `{% cache %}` tag no longer includes the query string when storing the cache URL.\n- Added the `|timestamp` Twig filter, for formatting a date as a user-friendly timestamp.\n- Added the `|datetime` Twig filter, for formatting a date with a localized date+time format.\n- Added the `|time` Twig filter, for formatting a date with a localized time format.\n- Added the `|multisort` Twig filter, which duplicates an array and sorts it with [`craft\\helpers\\ArrayHelper::multisort()`](http://www.yiiframework.com/doc-2.0/yii-helpers-basearrayhelper.html#multisort()-detail).\n- Added the `|atom` and `|rss` Twig filters, for formatting dates in Atom and RSS date formats, respectively.\n- Added the `|column` Twig filter, for capturing the key/property values of a series of arrays/objects.\n- Added the `|index` Twig filter, for indexing an array of arrays/objects by one of their keys/values.\n- Added the `|filterByValue` Twig filter.\n- Added the `|duration` Twig filter, which converts a `DateInterval` object into a human-readable duration.\n- The `t` filter now always defaults to translating the given string using the `site` category unless it is otherwise specified (e.g. `myString|t('pluginhandle')`).\n- The `|date` filter can be passed `'short'`, `'medium'`, `'long'`, and `'full'`, which will format the date with a localized date format.\n- It is now possibly to customize the SQL of [element queries](https://docs.craftcms.com/v3/element-queries.html), and there are more choices on how the data should be returned.\n- Element queries are no longer limited to 100 results by default.\n- The \u201cFailed\u201d message in the queue HUD in the Control Panel now shows the full error message as alt text. ([#855](https://github.com/craftcms/cms/issues/855))\n- Added the `convertFilenamesToAscii` config setting.\n- Added the `preserveExifData` config setting, `false` by default and requires Imagick. ([#2034](https://github.com/craftcms/cms/issues/2034))\n- Added the `aliases` config setting, providing an easy way to define custom [aliases](http://www.yiiframework.com/doc-2.0/guide-concept-aliases.html).\n- Removed support for automatically determining the values for the `omitScriptNameInUrls` and `usePathInfo` config settings.\n- It\u2019s now possible to override Craft\u2019s application config via `config/app.php`.\n- It\u2019s now possible to override volume settings via `config/volumes.php`.\n- It\u2019s now possible to override all plugins\u2019 settings via `config/<plugin-handle>.php`.\n- Renamed the `runTasksAutomatically` config setting to `runQueueAutomatically`.\n- The `translationDebugOutput` config setting will now wrap strings with `@` characters if the category is `app`, `$` if the category is `site`, and `%` for anything else.\n- All user-defined strings in the Control Panel (e.g. section names) are now translated using the `site` category, to prevent translation conflicts with Craft\u2019s own Control Panel translations.\n- Routes can now be stored on a per-site basis, rather than per-locale.\n- Web requests are now logged to `storage/logs/web.log`.\n- Web requests that result in 404 errors are now logged to `storage/logs/web-404s.log`.\n- Console requests are now logged to `storage/logs/console.log`.\n- Queue requests are now logged to `storage/logs/queue.log`.\n- Craft 3 now requires PHP 7.0.0 or later.\n- Craft 3 now requires MySQL 5.5+ or PostgreSQL 9.5+.\n- Craft now takes advantage of the [PHP Intl extension](https://php.net/manual/en/book.intl.php) when available.\n- Craft now uses Stringy for better string processing support.\n- Craft now uses Flysystem for better asset volume support.\n- Craft now uses Swiftmailer for better email sending support.\n- Craft now uses the [Yii 2 Queue Extension](https://github.com/yiisoft/yii2-queue) for managing background tasks.\n- Craft now uses the Zend Feed library for better RSS and Atom processing support.\n- Updated Yii to 2.0.15.1.\n- Updated Twig to 2.4.\n- Updated Guzzle to 6.3.\n\n### Deprecated\n- Many things have been deprecated. See [Changes in Craft 3](https://docs.craftcms.com/v3/changes-in-craft-3.html) for a complete list.\n\n### Fixed\n- Fixed a bug where a PHP session would be started on every template rendering request whether it was needed or not. ([#1765](https://github.com/craftcms/cms/issues/1765))\n\n### Security\n- Craft uses OpenSSL for encryption rather than mcrypt, which is far more secure and well-maintained.\n", "!function(){var t;t=jQuery,Craft.QuickPostWidget=Garnish.Base.extend({params:null,initFields:null,formHtml:null,$widget:null,$form:null,$spinner:null,$errorList:null,loading:!1,init:function(i,r,e,n){this.params=r,this.initFields=e,this.formHtml=n,this.$widget=t(\"#widget\"+i),this.initForm(this.$widget.find(\"form:first\"))},initForm:function(t){this.$form=t,this.$spinner=this.$form.find(\".spinner\"),this.initFields();var i=this.$form.find(\"> .buttons > .btngroup > .menubtn\"),r=i.data(\"menubtn\").menu.$container.find(\"> ul > li > a\");i.menubtn(),this.addListener(this.$form,\"submit\",\"handleFormSubmit\"),this.addListener(r,\"click\",\"saveAndContinueEditing\")},handleFormSubmit:function(t){t.preventDefault(),this.save(this.onSave.bind(this))},saveAndContinueEditing:function(){this.save(this.gotoEntry.bind(this))},save:function(i){var r=this;if(!this.loading){this.loading=!0,this.$spinner.removeClass(\"hidden\");var e=Garnish.getPostData(this.$form),n=t.extend({enabled:1},e,this.params);Craft.postActionRequest(\"entries/save-entry\",n,(function(e,n){if(r.loading=!1,r.$spinner.addClass(\"hidden\"),r.$errorList&&r.$errorList.children().remove(),\"success\"===n)if(e.success)Craft.cp.displayNotice(Craft.t(\"app\",\"Entry saved.\")),i(e);else if(Craft.cp.displayError(Craft.t(\"app\",\"Couldn\u2019t save entry.\")),e.errors)for(var s in r.$errorList||(r.$errorList=t('<ul class=\"errors\"/>').insertAfter(r.$form)),e.errors)if(e.errors.hasOwnProperty(s))for(var a=0;a<e.errors[s].length;a++){var o=e.errors[s][a];t(\"<li/>\",{text:o}).appendTo(r.$errorList)}}))}},onSave:function(i){var r=t(this.formHtml);if(this.$form.replaceWith(r),Craft.initUiElements(r),this.initForm(r),void 0!==Craft.RecentEntriesWidget)for(var e=0;e<Craft.RecentEntriesWidget.instances.length;e++){var n=Craft.RecentEntriesWidget.instances[e];n.params.sectionId&&n.params.sectionId!=this.params.sectionId||n.addEntry({url:i.cpEditUrl,title:i.title,dateCreated:i.dateCreated,username:i.authorUsername})}},gotoEntry:function(t){Craft.redirectTo(t.cpEditUrl)}})}();\n//# sourceMappingURL=QuickPostWidget.js.map", "{\"version\":3,\"file\":\"QuickPostWidget.js\",\"mappings\":\"YAAA,IAAWA,EAAAA,EA2IRC,OAxIDC,MAAMC,gBAAkBC,QAAQC,KAAKC,OAAO,CAC1CC,OAAQ,KACRC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAU,KACVC,WAAY,KACZC,SAAS,EAETC,KAAM,SAAUC,EAAUT,EAAQC,EAAYC,GAC5CQ,KAAKV,OAASA,EACdU,KAAKT,WAAaA,EAClBS,KAAKR,SAAWA,EAChBQ,KAAKP,QAAUV,EAAE,UAAYgB,GAE7BC,KAAKC,SAASD,KAAKP,QAAQS,KAAK,gBAGlCD,SAAU,SAAUP,GAClBM,KAAKN,MAAQA,EACbM,KAAKL,SAAWK,KAAKN,MAAMQ,KAAK,YAEhCF,KAAKT,aAEL,IAAIY,EAAWH,KAAKN,MAAMQ,KAAK,qCAC7BE,EAA6BD,EAC1BE,KAAK,WACLC,KAAKC,WAAWL,KAAK,iBAE1BC,EAASK,UAETR,KAAKS,YAAYT,KAAKN,MAAO,SAAU,oBACvCM,KAAKS,YACHL,EACA,QACA,2BAIJM,iBAAkB,SAAUC,GAC1BA,EAAMC,iBAENZ,KAAKa,KAAKb,KAAKc,OAAOC,KAAKf,QAG7BgB,uBAAwB,WACtBhB,KAAKa,KAAKb,KAAKiB,UAAUF,KAAKf,QAGhCa,KAAM,SAAUK,GAAU,WACxB,IAAIlB,KAAKH,QAAT,CAIAG,KAAKH,SAAU,EACfG,KAAKL,SAASwB,YAAY,UAE1B,IAAIC,EAAWjC,QAAQkC,YAAYrB,KAAKN,OACtCW,EAAOtB,EAAEM,OAAO,CAACiC,QAAS,GAAIF,EAAUpB,KAAKV,QAE/CL,MAAMsC,kBACJ,qBACAlB,GACA,SAACmB,EAAUC,GAQT,GAPA,EAAK5B,SAAU,EACf,EAAKF,SAAS+B,SAAS,UAEnB,EAAK9B,YACP,EAAKA,WAAW+B,WAAWC,SAGV,YAAfH,EACF,GAAID,EAASK,QACX5C,MAAM6C,GAAGC,cAAc9C,MAAM+C,EAAE,MAAO,iBACtCd,EAASM,QAIT,GAFAvC,MAAM6C,GAAGG,aAAahD,MAAM+C,EAAE,MAAO,yBAEjCR,EAASU,OAOX,IAAK,IAAIC,KANJ,EAAKvC,aACR,EAAKA,WAAab,EAAE,wBAAwBqD,YAC1C,EAAK1C,QAIa8B,EAASU,OAC7B,GAAKV,EAASU,OAAOG,eAAeF,GAIpC,IAAK,IAAIG,EAAI,EAAGA,EAAId,EAASU,OAAOC,GAAWI,OAAQD,IAAK,CAC1D,IAAIE,EAAQhB,EAASU,OAAOC,GAAWG,GACvCvD,EAAE,QAAS,CACT0D,KAAMD,IACLE,SAAS,EAAK9C,kBAUjCkB,OAAQ,SAAUU,GAEhB,IAAImB,EAAW5D,EAAEiB,KAAKR,UAMtB,GALAQ,KAAKN,MAAMkD,YAAYD,GACvB1D,MAAM4D,eAAeF,GACrB3C,KAAKC,SAAS0C,QAG2B,IAA9B1D,MAAM6D,oBACf,IAAK,IAAIR,EAAI,EAAGA,EAAIrD,MAAM6D,oBAAoBC,UAAUR,OAAQD,IAAK,CACnE,IAAIU,EAAS/D,MAAM6D,oBAAoBC,UAAUT,GAE9CU,EAAO1D,OAAO2D,WACfD,EAAO1D,OAAO2D,WAAajD,KAAKV,OAAO2D,WAEvCD,EAAOE,SAAS,CACdC,IAAK3B,EAAS4B,UACdC,MAAO7B,EAAS6B,MAChBC,YAAa9B,EAAS8B,YACtBC,SAAU/B,EAASgC,mBAO7BvC,UAAW,SAAUO,GAEnBvC,MAAMwE,WAAWjC,EAAS4B,c\",\"sources\":[\"webpack:///./QuickPostWidget.js\"],\"sourcesContent\":[\"(function ($) {\\n  /** global: Craft */\\n  /** global: Garnish */\\n  Craft.QuickPostWidget = Garnish.Base.extend({\\n    params: null,\\n    initFields: null,\\n    formHtml: null,\\n    $widget: null,\\n    $form: null,\\n    $spinner: null,\\n    $errorList: null,\\n    loading: false,\\n\\n    init: function (widgetId, params, initFields, formHtml) {\\n      this.params = params;\\n      this.initFields = initFields;\\n      this.formHtml = formHtml;\\n      this.$widget = $('#widget' + widgetId);\\n\\n      this.initForm(this.$widget.find('form:first'));\\n    },\\n\\n    initForm: function ($form) {\\n      this.$form = $form;\\n      this.$spinner = this.$form.find('.spinner');\\n\\n      this.initFields();\\n\\n      var $menuBtn = this.$form.find('> .buttons > .btngroup > .menubtn'),\\n        $saveAndContinueEditingBtn = $menuBtn\\n          .data('menubtn')\\n          .menu.$container.find('> ul > li > a');\\n\\n      $menuBtn.menubtn();\\n\\n      this.addListener(this.$form, 'submit', 'handleFormSubmit');\\n      this.addListener(\\n        $saveAndContinueEditingBtn,\\n        'click',\\n        'saveAndContinueEditing'\\n      );\\n    },\\n\\n    handleFormSubmit: function (event) {\\n      event.preventDefault();\\n\\n      this.save(this.onSave.bind(this));\\n    },\\n\\n    saveAndContinueEditing: function () {\\n      this.save(this.gotoEntry.bind(this));\\n    },\\n\\n    save: function (callback) {\\n      if (this.loading) {\\n        return;\\n      }\\n\\n      this.loading = true;\\n      this.$spinner.removeClass('hidden');\\n\\n      var formData = Garnish.getPostData(this.$form),\\n        data = $.extend({enabled: 1}, formData, this.params);\\n\\n      Craft.postActionRequest(\\n        'entries/save-entry',\\n        data,\\n        (response, textStatus) => {\\n          this.loading = false;\\n          this.$spinner.addClass('hidden');\\n\\n          if (this.$errorList) {\\n            this.$errorList.children().remove();\\n          }\\n\\n          if (textStatus === 'success') {\\n            if (response.success) {\\n              Craft.cp.displayNotice(Craft.t('app', 'Entry saved.'));\\n              callback(response);\\n            } else {\\n              Craft.cp.displayError(Craft.t('app', 'Couldn\u2019t save entry.'));\\n\\n              if (response.errors) {\\n                if (!this.$errorList) {\\n                  this.$errorList = $('<ul class=\\\"errors\\\"/>').insertAfter(\\n                    this.$form\\n                  );\\n                }\\n\\n                for (var attribute in response.errors) {\\n                  if (!response.errors.hasOwnProperty(attribute)) {\\n                    continue;\\n                  }\\n\\n                  for (var i = 0; i < response.errors[attribute].length; i++) {\\n                    var error = response.errors[attribute][i];\\n                    $('<li/>', {\\n                      text: error,\\n                    }).appendTo(this.$errorList);\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      );\\n    },\\n\\n    onSave: function (response) {\\n      // Reset the widget\\n      var $newForm = $(this.formHtml);\\n      this.$form.replaceWith($newForm);\\n      Craft.initUiElements($newForm);\\n      this.initForm($newForm);\\n\\n      // Are there any Recent Entries widgets to notify?\\n      if (typeof Craft.RecentEntriesWidget !== 'undefined') {\\n        for (var i = 0; i < Craft.RecentEntriesWidget.instances.length; i++) {\\n          var widget = Craft.RecentEntriesWidget.instances[i];\\n          if (\\n            !widget.params.sectionId ||\\n            widget.params.sectionId == this.params.sectionId\\n          ) {\\n            widget.addEntry({\\n              url: response.cpEditUrl,\\n              title: response.title,\\n              dateCreated: response.dateCreated,\\n              username: response.authorUsername,\\n            });\\n          }\\n        }\\n      }\\n    },\\n\\n    gotoEntry: function (response) {\\n      // Redirect to the entry's edit URL\\n      Craft.redirectTo(response.cpEditUrl);\\n    },\\n  });\\n})(jQuery);\\n\"],\"names\":[\"$\",\"jQuery\",\"Craft\",\"QuickPostWidget\",\"Garnish\",\"Base\",\"extend\",\"params\",\"initFields\",\"formHtml\",\"$widget\",\"$form\",\"$spinner\",\"$errorList\",\"loading\",\"init\",\"widgetId\",\"this\",\"initForm\",\"find\",\"$menuBtn\",\"$saveAndContinueEditingBtn\",\"data\",\"menu\",\"$container\",\"menubtn\",\"addListener\",\"handleFormSubmit\",\"event\",\"preventDefault\",\"save\",\"onSave\",\"bind\",\"saveAndContinueEditing\",\"gotoEntry\",\"callback\",\"removeClass\",\"formData\",\"getPostData\",\"enabled\",\"postActionRequest\",\"response\",\"textStatus\",\"addClass\",\"children\",\"remove\",\"success\",\"cp\",\"displayNotice\",\"t\",\"displayError\",\"errors\",\"attribute\",\"insertAfter\",\"hasOwnProperty\",\"i\",\"length\",\"error\",\"text\",\"appendTo\",\"$newForm\",\"replaceWith\",\"initUiElements\",\"RecentEntriesWidget\",\"instances\",\"widget\",\"sectionId\",\"addEntry\",\"url\",\"cpEditUrl\",\"title\",\"dateCreated\",\"username\",\"authorUsername\",\"redirectTo\"],\"sourceRoot\":\"\"}", "(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  Craft.QuickPostWidget = Garnish.Base.extend({\n    params: null,\n    initFields: null,\n    formHtml: null,\n    $widget: null,\n    $form: null,\n    $spinner: null,\n    $errorList: null,\n    loading: false,\n\n    init: function (widgetId, params, initFields, formHtml) {\n      this.params = params;\n      this.initFields = initFields;\n      this.formHtml = formHtml;\n      this.$widget = $('#widget' + widgetId);\n\n      this.initForm(this.$widget.find('form:first'));\n    },\n\n    initForm: function ($form) {\n      this.$form = $form;\n      this.$spinner = this.$form.find('.spinner');\n\n      this.initFields();\n\n      var $menuBtn = this.$form.find('> .buttons > .btngroup > .menubtn'),\n        $saveAndContinueEditingBtn = $menuBtn\n          .data('menubtn')\n          .menu.$container.find('> ul > li > a');\n\n      $menuBtn.menubtn();\n\n      this.addListener(this.$form, 'submit', 'handleFormSubmit');\n      this.addListener(\n        $saveAndContinueEditingBtn,\n        'click',\n        'saveAndContinueEditing'\n      );\n    },\n\n    handleFormSubmit: function (event) {\n      event.preventDefault();\n\n      this.save(this.onSave.bind(this));\n    },\n\n    saveAndContinueEditing: function () {\n      this.save(this.gotoEntry.bind(this));\n    },\n\n    save: function (callback) {\n      if (this.loading) {\n        return;\n      }\n\n      this.loading = true;\n      this.$spinner.removeClass('hidden');\n\n      var formData = Garnish.getPostData(this.$form),\n        data = $.extend({enabled: 1}, formData, this.params);\n\n      Craft.postActionRequest(\n        'entries/save-entry',\n        data,\n        (response, textStatus) => {\n          this.loading = false;\n          this.$spinner.addClass('hidden');\n\n          if (this.$errorList) {\n            this.$errorList.children().remove();\n          }\n\n          if (textStatus === 'success') {\n            if (response.success) {\n              Craft.cp.displayNotice(Craft.t('app', 'Entry saved.'));\n              callback(response);\n            } else {\n              Craft.cp.displayError(Craft.t('app', 'Couldn\u2019t save entry.'));\n\n              if (response.errors) {\n                if (!this.$errorList) {\n                  this.$errorList = $('<ul class=\"errors\"/>').insertAfter(\n                    this.$form\n                  );\n                }\n\n                for (var attribute in response.errors) {\n                  if (!response.errors.hasOwnProperty(attribute)) {\n                    continue;\n                  }\n\n                  for (var i = 0; i < response.errors[attribute].length; i++) {\n                    var error = response.errors[attribute][i];\n                    $('<li/>', {\n                      text: error,\n                    }).appendTo(this.$errorList);\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    },\n\n    onSave: function (response) {\n      // Reset the widget\n      var $newForm = $(this.formHtml);\n      this.$form.replaceWith($newForm);\n      Craft.initUiElements($newForm);\n      this.initForm($newForm);\n\n      // Are there any Recent Entries widgets to notify?\n      if (typeof Craft.RecentEntriesWidget !== 'undefined') {\n        for (var i = 0; i < Craft.RecentEntriesWidget.instances.length; i++) {\n          var widget = Craft.RecentEntriesWidget.instances[i];\n          if (\n            !widget.params.sectionId ||\n            widget.params.sectionId == this.params.sectionId\n          ) {\n            widget.addEntry({\n              url: response.cpEditUrl,\n              title: response.title,\n              dateCreated: response.dateCreated,\n              username: response.authorUsername,\n            });\n          }\n        }\n      }\n    },\n\n    gotoEntry: function (response) {\n      // Redirect to the entry's edit URL\n      Craft.redirectTo(response.cpEditUrl);\n    },\n  });\n})(jQuery);\n"], "filenames": ["CHANGELOG.md", "src/web/assets/quickpost/dist/QuickPostWidget.js", "src/web/assets/quickpost/dist/QuickPostWidget.js.map", "src/web/assets/quickpost/src/QuickPostWidget.js"], "buggy_code_start_loc": [13, 1, 1, 97], "buggy_code_end_loc": [13, 2, 2, 98], "fixing_code_start_loc": [14, 1, 1, 97], "fixing_code_end_loc": [15, 2, 2, 100], "type": "CWE-79", "message": "Craft is a CMS for creating custom digital experiences on the web.The platform does not filter input and encode output in Quick Post validation error message, which can deliver an XSS payload. Old CVE fixed the XSS in label HTML but didn\u2019t fix it when clicking save. This issue was patched in version 4.4.6.", "other": {"cve": {"id": "CVE-2023-33194", "sourceIdentifier": "security-advisories@github.com", "published": "2023-05-26T21:15:20.890", "lastModified": "2023-06-02T18:43:36.960", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Craft is a CMS for creating custom digital experiences on the web.The platform does not filter input and encode output in Quick Post validation error message, which can deliver an XSS payload. Old CVE fixed the XSS in label HTML but didn\u2019t fix it when clicking save. This issue was patched in version 4.4.6."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "HIGH", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.7, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:N/A:L", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 3.7, "baseSeverity": "LOW"}, "exploitabilityScore": 1.2, "impactScore": 2.5}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-80"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:craftcms:craft_cms:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.0.0", "versionEndExcluding": "3.8.6", "matchCriteriaId": "7AFF5C13-E1E0-461B-BD72-CF35DAC6325C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:craftcms:craft_cms:*:*:*:*:*:*:*:*", "versionStartIncluding": "4.0.1", "versionEndExcluding": "4.4.6", "matchCriteriaId": "79995027-0F4D-4586-9F49-D6A56D701E45"}, {"vulnerable": true, "criteria": "cpe:2.3:a:craftercms:craftercms:4.0.0:-:*:*:*:*:*:*", "matchCriteriaId": "533BCAA2-8264-4394-8C2C-0F50E24060D3"}, {"vulnerable": true, "criteria": "cpe:2.3:a:craftercms:craftercms:4.0.0:rc1:*:*:*:*:*:*", "matchCriteriaId": "06BBD5BE-B2CD-466A-82E5-A20D4F48F09C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:craftercms:craftercms:4.0.0:rc2:*:*:*:*:*:*", "matchCriteriaId": "4DE692C6-F31D-4EF6-879E-18E9F1701163"}, {"vulnerable": true, "criteria": "cpe:2.3:a:craftercms:craftercms:4.0.0:rc3:*:*:*:*:*:*", "matchCriteriaId": "0E057291-3824-48A3-9FB8-EC7060A124E8"}]}]}], "references": [{"url": "https://github.com/craftcms/cms/commit/9d0cd0bda7c8a830a3373f8c0f06943e519ac888", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/craftcms/cms/releases/tag/4.4.6", "source": "security-advisories@github.com", "tags": ["Release Notes"]}, {"url": "https://github.com/craftcms/cms/security/advisories/GHSA-3wxg-w96j-8hq9", "source": "security-advisories@github.com", "tags": ["Exploit"]}]}, "github_commit_url": "https://github.com/craftcms/cms/commit/9d0cd0bda7c8a830a3373f8c0f06943e519ac888"}}