{"buggy_code": ["<?php\ninclude_once \"../../config.inc.php\";\ninclude_once($CONFIG[\"inc\"][\"connect\"]);\ninclude_once($CONFIG[\"inc\"][\"function\"]);\n\n$option = $_GET[\"option\"];\n$table_name = strtoupper($option);\n\nsession_start();\nif ($_SESSION[\"login\"]!=\"true\" && $table_name!=\"REGISTER\") {\n  echo \"Fuck You!!!!!\";\n  exit;\n}\n\n$m_id = $_SESSION[\"id\"];\n\nif ($table_name==\"REGISTER\") {\n  $username = clean($_POST[\"user\"]);\n  $password = md5($_POST[\"pass\"]);\n  $repass = md5($_POST[\"repass\"]);\n  $name = clean($_POST[\"name\"]);\n  $email = clean($_POST[\"email\"]);\n  $all_score = 0;\n  $image = $_FILES[\"image\"];\n  $profile = getFileType($image[\"name\"]);\n\n  $result[\"status\"] = \"failed\";\n  if (strlen($username)<=4 || strlen($_POST[\"pass\"])<=4) {\n    $result[\"data\"] = \"Username and Password should be longer than 4 character\";\n  }\n  else if ($password!=$repass) {\n    $result[\"data\"] = \"Re-Password or Password is Wrong\";\n  }\n  else if (email($email)) {\n    $result[\"data\"] = \"Email Wrong Format\";\n  }\n  else if (!in_array($profile, $CONFIG[\"upload\"][\"type\"])) {\n    $result[\"data\"] = \"Dont Correct data type of image\";\n  } else {\n    $sql = \"insert into MEMBER values (member_seq.nextval, '$username', '$password', '$name', '$email', $all_score, '$profile')\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    if ($r) {\n      $stid = oci_parse($db_conn, \"SELECT * FROM member where username='$username'\");\n      oci_execute($stid);\n      $row = oci_fetch_assoc($stid);\n      $id = $row['ID'];\n\n      $target_dir = $CONFIG[\"path\"][\"root\"].\"/\".$CONFIG[\"image\"][\"member\"];\n      $im = $target_dir.$id.\".\".$profile;\n      if (!move_uploaded_file($image[\"tmp_name\"], $im)) {\n        $result[\"data\"] = \"Image Error\";\n      } else {\n        $result[\"status\"] = \"success\";\n        $result[\"data\"] = \"\";\n      }\n    } else {\n      $result[\"data\"] = \"Can't Register\";\n    }\n  }\n}\nelse if ($table_name==\"PHOTO\") {\n  $caotion = clean($_POST[\"caption\"]);\n  $owner = $m_id;\n  $loc_id = $_POST[\"loc_id\"];\n  $timing_id = $_POST[\"timing_id\"];\n  $pos_id = $_POST[\"pos_id\"];\n\n  $sql = \"insert into PHOTO values (member_seq.nextval, '$caption', $owner, $loc_id, $timing_id, $pos_id, systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n\n  if ($r) {\n    $sql = \"select b.* from BADGE b, BADGE_COLLECT c where c.MEMBER_ID=$m_id and c.BADGE_ID!=b.ID\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    $nb = oci_fetch_all($stid, $badge, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n    $sql = \"select p.LOC_ID, p.TIMING_ID, p.POS_ID, t.M_ID, w.THING_ID from PHOTO p, TAG t, PHOTO_WITH w where p.OWNER_ID=$m_id and t.P_ID=p.ID w.PHOTO_ID=p.ID\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    oci_fetch_all($stid, $photo, null, null, OCI_FETCHSTATEMENT_BY_COLUMN);\n\n    foreach($badge as $row) {\n      $id = $row[\"ID\"];\n      $sql = \"select THING_ID from BADGE_THING where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $thing, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select MEMBER_ID from BADGE_MEMBER where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $member, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select TIMING_ID from BADGE_TIMING where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $timing, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select POSTURE_ID from BADGE_POSTURE where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $posture, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select LOCATION_ID from BADGE_LOCATION where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $location, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      if (array_intersect($thing, $photo[\"THING_ID\"]) == $thing and\n          array_intersect($member, $photo[\"M_ID\"]) == $member and\n          array_intersect($timing, $photo[\"TIMING_ID\"]) == $timing and\n          array_intersect($posture, $photo[\"POS_ID\"]) == $posture and\n          array_intersect($location, $photo[\"LOC_ID\"]) == $location) {\n\n        $result[\"data\"].push_back($row);\n        $sql = \"insert into BADGE_COLLECT values ($id, $m_id)\";\n        $stid = oci_parse($db_conn, $sql);\n        $r = oci_execute($stid);\n      }\n    }\n    $result[\"status\"] = \"success\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\nelse if ($table_name==\"COMMENT\") {\n  $msg = $_POST[\"msg\"];\n  $p_id = $_POST[\"p_id\"];\n\n  $sql = \"insert into COMMENT_PHOTO values (comment_photo_seq.nextval, $m_id, $p_id, '$msg', systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n  if ($r) {\n    $result[\"status\"] = \"success\";\n    $result[\"data\"] = \"\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\nelse if ($table_name==\"LIKE\") {\n  $p_id = $_POST[\"p_id\"];\n  $sql = \"insert into LIKE_PHOTO values ($m_id, $p_id, systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n  if ($r) {\n    $result[\"status\"] = \"success\";\n    $result[\"data\"] = \"\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\nelse if ($table_name==\"MESSAGE\") {\n  $to = $_POST[\"to\"];\n  $msg = $_POST[\"msg\"];\n  $sql = \"insert into MESSAGE values (message.nextval, $m_id, $to, msg, systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n  if ($r) {\n    $sql = \"update MEMBER set IS_UNREAD='t' where ID=$to\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    $result[\"status\"] = \"success\";\n    $result[\"data\"] = \"\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\n\necho json_encode($result);\n\n?>\n"], "fixing_code": ["<?php\ninclude_once \"../../config.inc.php\";\ninclude_once($CONFIG[\"inc\"][\"connect\"]);\ninclude_once($CONFIG[\"inc\"][\"function\"]);\n\n$option = $_GET[\"option\"];\n$table_name = strtoupper($option);\n\nsession_start();\nif ($_SESSION[\"login\"]!=\"true\" && $table_name!=\"REGISTER\") {\n  echo \"Fuck You!!!!!\";\n  exit;\n}\n\n$m_id = $_SESSION[\"id\"];\n\nif ($table_name==\"REGISTER\") {\n  $username = clean($_POST[\"user\"]);\n  $password = md5($_POST[\"pass\"]);\n  $repass = md5($_POST[\"repass\"]);\n  $name = clean($_POST[\"name\"]);\n  $email = clean($_POST[\"email\"]);\n  $all_score = 0;\n  $image = $_FILES[\"image\"];\n  $profile = getFileType($image[\"name\"]);\n\n  $result[\"status\"] = \"failed\";\n  if (strlen($username)<=4 || strlen($_POST[\"pass\"])<=4) {\n    $result[\"data\"] = \"Username and Password should be longer than 4 character\";\n  }\n  else if ($password!=$repass) {\n    $result[\"data\"] = \"Re-Password or Password is Wrong\";\n  }\n  else if (email($email)) {\n    $result[\"data\"] = \"Email Wrong Format\";\n  }\n  else if (!in_array($profile, $CONFIG[\"upload\"][\"type\"])) {\n    $result[\"data\"] = \"Dont Correct data type of image\";\n  } else {\n    $sql = \"insert into MEMBER values (member_seq.nextval, '$username', '$password', '$name', '$email', $all_score, '$profile')\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    if ($r) {\n      $stid = oci_parse($db_conn, \"SELECT * FROM member where username='$username'\");\n      oci_execute($stid);\n      $row = oci_fetch_assoc($stid);\n      $id = $row['ID'];\n\n      $target_dir = $CONFIG[\"path\"][\"root\"].\"/\".$CONFIG[\"image\"][\"member\"];\n      $im = $target_dir.$id.\".\".$profile;\n      if (!move_uploaded_file($image[\"tmp_name\"], $im)) {\n        $result[\"data\"] = \"Image Error\";\n      } else {\n        $result[\"status\"] = \"success\";\n        $result[\"data\"] = \"\";\n      }\n    } else {\n      $result[\"data\"] = \"Can't Register\";\n    }\n  }\n}\nelse if ($table_name==\"PHOTO\") {\n  $caotion = clean($_POST[\"caption\"]);\n  $owner = intval($m_id);\n  $loc_id = intval($_POST[\"loc_id\"]);\n  $timing_id = intval($_POST[\"timing_id\"]);\n  $pos_id = intval($_POST[\"pos_id\"]);\n\n  $sql = \"insert into PHOTO values (member_seq.nextval, '$caption', $owner, $loc_id, $timing_id, $pos_id, systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n\n  if ($r) {\n    $sql = \"select b.* from BADGE b, BADGE_COLLECT c where c.MEMBER_ID=$m_id and c.BADGE_ID!=b.ID\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    $nb = oci_fetch_all($stid, $badge, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n    $sql = \"select p.LOC_ID, p.TIMING_ID, p.POS_ID, t.M_ID, w.THING_ID from PHOTO p, TAG t, PHOTO_WITH w where p.OWNER_ID=$m_id and t.P_ID=p.ID w.PHOTO_ID=p.ID\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    oci_fetch_all($stid, $photo, null, null, OCI_FETCHSTATEMENT_BY_COLUMN);\n\n    foreach($badge as $row) {\n      $id = $row[\"ID\"];\n      $sql = \"select THING_ID from BADGE_THING where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $thing, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select MEMBER_ID from BADGE_MEMBER where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $member, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select TIMING_ID from BADGE_TIMING where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $timing, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select POSTURE_ID from BADGE_POSTURE where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $posture, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      $sql = \"select LOCATION_ID from BADGE_LOCATION where BADGE_ID=$id\";\n      $stid = oci_parse($db_conn, $sql);\n      $r = oci_execute($stid);\n      $nb = oci_fetch_all($stid, $location, null, null, OCI_FETCHSTATEMENT_BY_ROW);\n\n      if (array_intersect($thing, $photo[\"THING_ID\"]) == $thing and\n          array_intersect($member, $photo[\"M_ID\"]) == $member and\n          array_intersect($timing, $photo[\"TIMING_ID\"]) == $timing and\n          array_intersect($posture, $photo[\"POS_ID\"]) == $posture and\n          array_intersect($location, $photo[\"LOC_ID\"]) == $location) {\n\n        $result[\"data\"].push_back($row);\n        $sql = \"insert into BADGE_COLLECT values ($id, $m_id)\";\n        $stid = oci_parse($db_conn, $sql);\n        $r = oci_execute($stid);\n      }\n    }\n    $result[\"status\"] = \"success\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\nelse if ($table_name==\"COMMENT\") {\n  $msg = clean($_POST[\"msg\"]);\n  $p_id = intval($_POST[\"p_id\"]);\n\n  $sql = \"insert into COMMENT_PHOTO values (comment_photo_seq.nextval, $m_id, $p_id, '$msg', systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n  if ($r) {\n    $result[\"status\"] = \"success\";\n    $result[\"data\"] = \"\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\nelse if ($table_name==\"LIKE\") {\n  $p_id = intval($_POST[\"p_id\"]);\n  $sql = \"insert into LIKE_PHOTO values ($m_id, $p_id, systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n  if ($r) {\n    $result[\"status\"] = \"success\";\n    $result[\"data\"] = \"\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\nelse if ($table_name==\"MESSAGE\") {\n  $to = intval($_POST[\"to\"]);\n  $msg = clean($_POST[\"msg\"]);\n  $sql = \"insert into MESSAGE values (message.nextval, $m_id, $to, msg, systimestamp)\";\n  $stid = oci_parse($db_conn, $sql);\n  $r = oci_execute($stid);\n  if ($r) {\n    $sql = \"update MEMBER set IS_UNREAD='t' where ID=$to\";\n    $stid = oci_parse($db_conn, $sql);\n    $r = oci_execute($stid);\n    $result[\"status\"] = \"success\";\n    $result[\"data\"] = \"\";\n  } else {\n    $e = oci_error($stid);\n    $result[\"status\"] = \"failed\";\n    $result[\"data\"] = $e[\"message\"];\n  }\n}\n\necho json_encode($result);\n\n?>\n"], "filenames": ["module/frontend/add.php"], "buggy_code_start_loc": [64], "buggy_code_end_loc": [163], "fixing_code_start_loc": [64], "fixing_code_end_loc": [163], "type": "CWE-89", "message": "A vulnerability was found in porpeeranut go-with-me. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file module/frontend/add.php. The manipulation leads to sql injection. The name of the patch is b92451e4f9e85e26cf493c95ea0a69e354c35df9. It is recommended to apply a patch to fix this issue. The identifier VDB-217177 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2014-125032", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-02T08:15:09.827", "lastModified": "2023-01-09T17:11:56.250", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in porpeeranut go-with-me. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file module/frontend/add.php. The manipulation leads to sql injection. The name of the patch is b92451e4f9e85e26cf493c95ea0a69e354c35df9. It is recommended to apply a patch to fix this issue. The identifier VDB-217177 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:go-with-me_project:go-with-me:*:*:*:*:*:*:*:*", "versionEndExcluding": "2014-12-08", "matchCriteriaId": "79C5B023-1CBD-4855-B012-81A2A43CB16B"}]}]}], "references": [{"url": "https://github.com/porpeeranut/go-with-me/commit/b92451e4f9e85e26cf493c95ea0a69e354c35df9", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217177", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.217177", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/porpeeranut/go-with-me/commit/b92451e4f9e85e26cf493c95ea0a69e354c35df9"}}