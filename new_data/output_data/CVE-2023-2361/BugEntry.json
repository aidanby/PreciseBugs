{"buggy_code": ["# Link Editable\n\n## General \n\nThe link editable is used for dynamic link creation in documents.\n\n## Configuration\n\nYou can pass every valid attribute an `<a>`-tag can have ([w3.org - Link](https://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element)), \nsuch as: `class`, `target`, `id`, `style`, `accesskey`, `name`, `title`, `data-*`, `aria-*` and additionally the following: \n\n| Name     | Type     | Description                                                             |\n|----------|----------|-------------------------------------------------------------------------|\n| `reload` | boolean  | Set to true to reload the page in editmode after changing the state.    |\n| `textPrefix` | string  | Add an icon or something else before Text    |\n| `textSuffix` | string  | Add an icon or something else after Text    |\n| `noText` | boolean  | If you need only the `<a>` tag without text (or only with an textSuffix/TextPrefix)    |\n| `required` | boolean/string  | (default: false) set to true to make link and text required for publish, set to \"linkonly\" to make only the link required for publish    |\n\n## Methods\n\n| Name              | Return      | Description                          |\n|-------------------|-------------|--------------------------------------|\n| `getHref()`       | string      | Get the path of this link            |\n| `getText()`       | string      | Get the text of the link             |\n| `getTarget()`     | string      | Get the target of the link           |\n| `getParameters()` | string      | Get the query params of the link     |\n| `getAnchor()`     | string      | Get the anchor text of the link      |\n| `getTitle()`      | string      | Get the title of the link            |\n| `getRel()`        | string      | Get the rel text of the link         |\n| `getTabindex()`   | string      | Get the tabindex of the link         |\n| `getClass()`      | string      | Get the class of the link            |\n| `getAccessKey()`  | string      | Get the access key of the link       |\n| `isEmpty()`       | string      | Whether the editable is empty or not |\n\n## Examples\n\n### Basic Usage\n\n```twig\n<p>\n    {{ \"Visit our\" | trans }}\n    {{ pimcore_link('blogLink') }}\n</p>\n```\n\nYou could see the backend preview in the picture, below.\n\n![Link editable - adminitration panel](../../img/editables_link_backend_preview.png)\n\nAnd the frontend:\n\n![Link editable - frontend](../../img/editables_link_frontend_preview.png)\n\n\n\n### Use Link in the Block Editable\n\nLet's see how to make a list of links with [Block](./06_Block.md).\n\n```twig\n<h3>{{ \"Useful links\" | trans }}</h3>\n<ul>\n    {% for i in pimcore_block('linkblock').iterator %}\n        <li>{{ pimcore_link('myLink', {'class': \"special-link-class\"}) }}</li>\n    {% endfor %}\n</ul>\n```\n\nThe above example renders a list of links: \n![The links list in the backend](../../img/editables_link_inside_block.png)\n\n### Link Generators\n\nPlease also see the section about [Link Generators](../../05_Objects/01_Object_Classes/05_Class_Settings/30_Link_Generator.md)\n\n\n\n\n\n", "# Upgrade Notes\n\n## 10.5.21\n- [Assets] The Asset `Import from Server` feature is now only available for admins. It will be removed in Pimcore 11\n\n## 10.5.13\n- [Web2Print] Print document twig expressions are now executed in a sandbox with restrictive security policies (just like Sending mails and Dataobject Text Layouts introduced in 10.5.9).\n\n\n## 10.5.10\n- [DataObject] Deprecated: Loading non-Concrete objects with the Concrete class will not be possible in Pimcore 11.\n\n## 10.5.9\n- [Twig] Sending mails and Dataobject Text Layouts, which allow rendering user controlled twig templates are now executed in a sandbox with restrictive security policies for tags, filters, functions.\n         Please use following configuration to allow more in template rendering:\n  ```yaml\n  pimcore:\n        templating_engine:\n            twig:\n              sandbox_security_policy:\n                tags: ['if']\n                filters: ['upper']\n                functions: ['include', 'path', 'range']\n  ```\n\n## 10.5.8\n- [Nginx] Static pages nginx config has been updated to fix the issue for home static page generation. please adapt the following configuration:\n```nginx\nmap $args $static_page_root {\n    default                                 /var/tmp/pages;\n    \"~*(^|&)pimcore_editmode=true(&|$)\"     /var/nonexistent;\n    \"~*(^|&)pimcore_preview=true(&|$)\"      /var/nonexistent;\n    \"~*(^|&)pimcore_version=[^&]+(&|$)\"     /var/nonexistent;\n}\n\nmap $uri $static_page_uri {\n    default                                 $uri;\n    \"/\"                                     /%home;\n}\n\n.....\n\nlocation / {\n    error_page 404 /meta/404;\n\n    try_files $static_page_root$static_page_uri.html $uri /index.php$is_args$args;\n}\n```\n\n## 10.5.0\n- [Class Definitions] Resolving classes or services will no longer catch exceptions in Pimcore 11. Remove invalid references from class definitions.\n- [Sessions] Changed default value for `symfony.session.cookie_secure` to `auto`\n- [Listings] `JsonListing` class is deprecated. Please use `CallableFilterListingInterface`, `FilterListingTrait` and `CallableOrderListingInterface`, `OrderListingTrait` instead.\n  For examples please see existing classes, e.g. `Pimcore\\Model\\Document\\DocType\\Listing`.\n\n- [Security] It is recommended to use new [Authenticator based system](https://pimcore.com/docs/pimcore/current/Development_Documentation/Development_Tools_and_Details/Security_Authentication/Authenticator_Based_Security.html) for authentication/authorization.\n  To use new authenticator, add following symfony config in `security.yaml`:\n    ```yaml\n    security:\n        enable_authenticator_manager: true\n    ```\n  `[Authentication] PreAuthenticatedAdminSessionListener` has been deprecated and will be removed in Pimcore 11.\n- [Elements] Calling the methods `getById` and `getByPath` on `Asset`,`Document`,`DataObject` with second boolean parameter `$force` and `Element\\Service::getElementById` with third boolean  parameter `$force` is deprecated and will throw exception in Pimcore 11. Instead pass the parameter as associative array with `$force` value.\n  e.g. Before \n   ```php\n    Asset::getById($id, true);\n    Document::getById($id, true);\n    DataObject::getById($id, true);\n  \n    Asset::getByPath($path, true);\n    Document::getByPath($path, true);\n    DataObject::getByPath($path, true);\n  \n    Element\\Service::getElementById::getElementById($type, $id, $true);\n   ```\n    After\n   ```php\n    Asset::getById($id, ['force' => true]);\n    Document::getById($id, ['force' => true]);\n    DataObject::getById($id, ['force' => true]);\n  \n    Asset::getByPath($path, ['force' => true]);\n    Document::getByPath($path, ['force' => true]);\n    DataObject::getByPath($path, ['force' => true]);\n  \n    Element\\Service::getElementById($type, $id, ['force' => true]);\n   ```\n- [Navigation Builder] Calling the method `Pimcore\\Navigation\\Builder::getNavigation()` using extra arguments is deprecated and will be removed in Pimcore 11. Instead of using the extra arguments, it is recommended to call the method using the params array. eg: Currently, the `getNavigation()` method can be called by passing the config params `activeDocument`, `navigationRootDocument`, `htmlMenuIdPrefix`, `pageCallback`, `cache`, `maxDepth`, `cacheLifetime` and `markActiveTrail` as the arguments i.e `getNavigation($activeDocument, $navigationRootDocument, $htmlMenuIdPrefix, $pageCallback, $cache, $maxDepth, $cacheLifetime, $markActiveTrail)`. According to the new implementation you should call the method like `getNavigation($params)` where `$params` should be an associative array with the keys `active`, `root`, `htmlMenuPrefix`, `pageCallback`, `cache`, `maxDepth`, `cacheLifetime` and `markActiveTrail`.\n  \n- [Runtime Cache] The trait `\\Pimcore\\Cache\\RuntimeCacheTrait` has been deprecated because of its ambiguous naming and usage of persisted cache along with the runtime object cache.\n  It is recommended to use `\\Pimcore\\Cache\\RuntimeCache` instead of this trait. For persisted cache, please use `\\Pimcore\\Cache` instead.\n- [Sitemap] Pimcore is now also supporting Presta/Sitemap `^3.2` (which supports Symfony 6 and uses max level of PHPStan).\n  Please note, if the routing import config is in use, it is recommended to correct the config path (by removing `/Resources`) to follow the [new folder tree structure](https://github.com/prestaconcept/PrestaSitemapBundle/releases/tag/v3.0.0),\n  eg. \"@PrestaSitemapBundle/~~Resources/~~config/routing.yaml\", to ensure a smoother upgrade to upcoming major release.\n- [Backend search] `key` and `index` columns have been added to the search index. Run `./bin/console pimcore:search-backend-reindex` to reindex.\n- [Cache] Pimcore use DoctrineDbalAdapter instead of PdoAdapter by default now.\n- Removed `ocramius/package-versions` dependency. If you rely on it, please add it to your own `composer.json`.\n- [Permissions] Added an extra check about [system permission](https://pimcore.com/docs/pimcore/current/Development_Documentation/Administration_of_Pimcore/Users_and_Roles.html#page_System-Permissions) in element `isAllowed()` method, please make sure your custom implementations are not affected by this change. \n  Listing, grid, tree view are not severely affected as the main permission is checked on a Kernel event level that prevents the page to be shown and prevents any process that iterate isAllowed() calls. \n  The only cases could be affected are those where the workspace are set but master permissions are disallowed, before this change, it could lead to (not intended) false positive.\n- [Security/User] `UsernameNotFoundException` (deprecated since Symfony 5.3) occurences have been replaced with `UserNotFoundException`.\n- [Deprecated] Generate type declarations option in class definition is deprecated, because type declarations will always be added with Pimcore 11\n- [Application Logger] File Objects are now stored in the flysystem. Due some incompatibilities of checking files by modification date (cloud storages) and for performance issues (scan folders/file), the cleanup task now do not run in time range from [midnight and 4 a.m.](https://github.com/pimcore/pimcore/pull/7164) anymore, but it deletes the file matching the column in the database as soon as the database entries are archived.\n- [Session] Implementing Session Configurator with tag `pimcore.session.configurator` to register session bags, is deprecated and will be removed in Pimcore 11.\n  Implement an [EventListener](https://github.com/pimcore/pimcore/blob/10.5/bundles/EcommerceFrameworkBundle/EventListener/SessionBagListener.php) to register a session bag before the session is started.\n- [Ecommerce][PricingManager] Token condition is deprecated and will be removed in Pimcore 11.\n- Parameter `pimcore.admin.session.attribute_bags` is deprecated and will be removed in Pimcore 11.\n- [JS Events/Disabled] The plugin broker for fire events has been disabled. \nThe plugins are still supported, but they are deprecated and will be removed in Pimcore 11   \nPlease use [event listener](../../20_Extending_Pimcore/13_Bundle_Developers_Guide/06_Event_Listener_UI.md) instead of plugins for JS events.\n- Extension Manager - Registering or managing bundles/areabricks through `Tools -> Bundles & Bricks` or manually through `var/config/extensions.php` is deprecated and will not work on Pimcore 11.\n  Please use `config/bundles.php` to register/manage bundles instead.\n- [Web2Print] Wkhtmltopdf Processor has been deprecated and will be removed in Pimcore 11. Please use HeadlessChrome or PDFreactor instead.\n- [Config] `Pimcore\\Config\\Config` has been deprecated and will be removed in Pimcore 11.\n- The recommended nginx config for static pages has been updated (the old one still works!) from\n  ```nginx\n  server {\n      ...\n\n      location @staticpage{\n          try_files /var/tmp/pages$uri.html $uri /index.php$is_args$args;\n      }\n\n      location / {\n          error_page 404 /meta/404;\n          error_page 418 = @staticpage;\n          if ($args ~* ^(?!pimcore_editmode=true|pimcore_preview|pimcore_version)(.*)$){\n              return 418;\n          }\n          try_files $uri /index.php$is_args$args;\n      }\n\n      ...\n  }\n  ```\n  to\n  ```nginx\n  map $args $static_page_root {\n      default                                 /var/tmp/pages;\n      \"~*(^|&)pimcore_editmode=true(&|$)\"     /var/nonexistent;\n      \"~*(^|&)pimcore_preview=true(&|$)\"      /var/nonexistent;\n      \"~*(^|&)pimcore_version=[^&]+(&|$)\"     /var/nonexistent;\n  }\n\n  server {\n      ... \n\n      location / {\n          error_page 404 /meta/404;\n          try_files $static_page_root$uri.html $uri /index.php$is_args$args;\n      }\n\n      ...\n  }\n  ```\n- [Elements] Deprecated setting the parent id to 1 (root node), when an element with a non-existing parent id gets created.\n- [Custom Layouts] Deprecated Class `ClassLayoutDefinitionManager` and constant `PIMCORE_CUSTOMLAYOUT_DIRECTORY`.\n- [Workflows] Deprecated classes Pimcore\\Model\\Workflow, Pimcore\\Model\\Workflow\\Dao, Pimcore\\Model\\Workflow\\Listing\\Dao and Pimcore\\Model\\Workflow\\Listing. \nPlease check the documentation on how to work with workflows: [Workflow Management](../../07_Workflow_Management/README.md).\n- [Maintenance] Deprecated passing `--force` option to maintenance command.\n- [Exception] `MissingDependencyException` has been deprecated and will be removed in Pimcore 11.\n\n## 10.4.2\n- When maintenance mode is active, all commands are prevented from starting (not just commands inheriting from `AbstractCommand`).\n  Until now, some commands (e.g. `messenger:consume`) could be executed even if the system was in maintenance mode.\n  To circumvent, use `--ignore-maintenance-mode` option, which is available to all commands.\n\n## 10.4.0\n- **Important**: The folder structure for storing thumbnails changed, please run `bin/console pimcore:migrate:thumbnails-folder-structure` after the update to copy existing thumbnails to new folder structure. If you're dealing with a huge amount of thumbnails you should consider that this change might increase the load on your system as well as page-loading times during the migration command is executed, as non-existing thumbnails are then generated on demand. \n- [Image Optimizer] Optimize Image messages are now routed to different queue\n  instead of `pimcore_core`. If you want to handle image optimize messages, then it is required to add specific option `pimcore_image_optimize` to the command `bin/console messenger:consume pimcore_core pimcore_maintenance pimcore_image_optimize`. Also run command `bin/console messenger:consume pimcore_core` before the upgrade, so that ImageOptimize messages on the queue gets consumed.\n- **Important**: [Object bricks] A call to the object brick\u00b4s getter method no longer returns object bricks marked for deletion. \n  To restore the original behavior pass \"true\" to the getter method\u00b4s `$includeDeletedBricks` argument. \n- [Image Optimizer] Image Optimizer services (e.g. PngCrushOptimizer, JpegoptimOptimizer etc.) are deprecated and will be\n  removed in Pimcore 11. Use Pimcore\\Image\\Optimizer\\SpatieImageOptimizer service instead.\n  Currently, the existing optimizers are disabled. If you still want to use them, please re-enable them by tagging the services accordingly (in your `services.yaml`):\n```yaml\n    Pimcore\\Image\\Optimizer\\CjpegOptimizer:\n        tags:\n            - { name: pimcore.image.optimizer }\n\n    Pimcore\\Image\\Optimizer\\JpegoptimOptimizer:\n        tags:\n            - { name: pimcore.image.optimizer }\n\n    Pimcore\\Image\\Optimizer\\PngCrushOptimizer:\n        tags:\n            - { name: pimcore.image.optimizer }\n```\n\n- [Elements] Fixed the behavior of `setId()` method, so not to cast null Id to 0 as explained below:\n```php\n$object = new \\Pimcore\\Model\\DataObject();\n$object->setId(null);\n\n//before:\n$oldId = $object->getId(); //returns 0\n\n//after:\n$newId = $object->getId(); //returns null\n```\n- [Asset] Deprectaed the `marshal()/unmarshal()` methods for metadata, use `normalize()/denormalize()` methods instead.\n\n## 10.3.0\n- **Important**: [Symfony Messenger] Pimcore Core & Maintenance messages are now routed to different queues instead of default. It is\n  required to run command `bin/console messenger:consume pimcore_core pimcore_maintenance` before the upgrade, so that\n  the messages on default queue gets consumed.\n- **Important**: In preparation of upgrade to Symfony 6, return types must be added to methods which are extended from Symfony. In Pimcore, following changes are applied:\n    - Return type added to safe methods, which are `final` & marked as `internal`.\n    - Return type hints are added as comments on the methods which are extendable and phpdocs are updated. These return types will be introduced in Pimcore 11. You must add return types, if you're extending any of these Pimcore classes. Please check changes [here](https://github.com/pimcore/pimcore/pull/10846/files)\n- [Documents] Introduced additional interfaces for editable methods `getDataEditmode()`, `rewriteIds()` & `load()`. Existing `method_exists` calls are deprecated and will be removed in Pimcore 11.\n- [Data objects] Default values now get saved to versions -> Restoring a version also restores the default values (before those fields were null after restoring)\n- Method `create()` from `Pimcore\\Model\\DataObject\\Classificationstore\\CollectionGroupRelation` and `Pimcore\\Model\\DataObject\\Classificationstore\\KeyGroupRelation` no longer saves the new object, but just returns the instance. Related changes can be found here: https://github.com/pimcore/pimcore/pull/11326/files \n- Method `Kernel::getRootDir()` is deprecated, use `Kernel::getProjectDir()` instead. For more details, please check [10923](https://github.com/pimcore/pimcore/pull/10923).\n\n## 10.2.0\n- [Maintenance] Maintenance tasks are now handled with Symfony Messenger. The `pimcore:maintenance` command will add the maintenance messages to the bus and runs them afterwards immediately from the queue. However it's recommended to setup independent workers that process the queues, by running `bin/console messenger:consume pimcore_core pimcore_maintenance` (using e.g. Supervisor) and adding `--async` option to the `pimcore:maintenance` command that stops the maintenance command to process the queue directly. Details about setting it up for production environments, please check [Symfony Messenger Component docs](https://symfony.com/doc/current/messenger.html#deploying-to-production).\n- [Maintenance] Image Optimizer maintenance task moved to Messages which are consumed by Symfony Messenger. If you want to disable the image optimization, please add config to avoid dispatching the messages on messenger bus:\n```yaml\npimcore:\n    assets:\n        image:\n            thumbnails:\n                image_optimizers:\n                    enabled: false\n```\n- [Configs] The default storage for configurations is now `yaml` files in the `var/config` directory and are loaded as Symfony Config. The old `php` config-files continue to work, however, changes on existing configurations as well as new configurations are written to `yaml`.  \n**Important notice**: writing configs to `yaml` is only supported if the kernel is in debug mode, because changes of the config need a rebuild of the container configuration.  \nIf you require to change the config on production environments we recommend to change the storage to `settings-store` as described [here](../../21_Deployment/03_Configuration_Environments.md). \n- [Asset] Pimcore now automatically supports AVIF image format for thumbnails using `auto` format (only `Imagick`). To disable AVIF please [follow this instructions](../../04_Assets/03_Working_with_Thumbnails/01_Image_Thumbnails.md).  \n- [DataObject API] There is change in behavior when validating the inherited dataobjects & variants. As before, the inherited object gets saved with invalid attribute value, if the parent object has a valid value for the same attribute. Now, the API will throw validation exception, if the inherited object has an invalid value. please see https://github.com/pimcore/pimcore/pull/10529 \n\n## 10.1.0\n- [Core] Additional interfaces for data-types introduced. Existing `method_exists` calls are deprecated and will\n  be removed in Pimcore 11.\n- [InstallBundle] Installer preconfiguration path changed from `app/config/installer.yml` to `config/installer.yaml`.\n- [Core] composer.json: `symfony/symfony` package requirement has been replaced by `symfony/*` individual bundles. **Note for Bundles**: if you are using `symfony/symfony` dependency, it will now conflict with package `pimcore/pimcore`. Please move your bundle requirements to Symfony individual component packages.\n- [[Ecommerce][TrackingManager] event name in method `trackCheckoutComplete()` changed from `checkout` to `purchase` for `GoogleTagManager` implementation](https://github.com/pimcore/pimcore/pull/9366/files).\n- [Glossary] `pimcoreglossary()` tag has been deprecated in favor of `pimcore_glossary` Twig filter and will be removed in Pimcore 11.\n- Bumped `google/apiclient` to 2.10 version - Use proper namespaces for API references.\n- Bumped `endroid/qr-code` to version 4.\n- The `\\Pimcore\\Routing\\Dynamic\\DocumentRouteHandler::addDirectRouteDocumentType()` method is deprecated, use `pimcore.routing.direct_route_document_types` config instead.\n- [[Ecommerce][TrackingManager] event name in method `trackCheckoutComplete()` changed from `checkout` to `purchase` for `GoogleTagManager` implementation](https://github.com/pimcore/pimcore/pull/9366/files)\n- [Password encoding] Pimcore Password Encoder factory has been deprecated in favor of new Password Hasher factory, to align with Symfony authentication system. The default factory is used as default and to switch to new Password hasher factory, please enable through config `factory_type` as follows:\n```yaml\npimcore:\n    security:\n        factory_type: password_hasher\n\n        # the password hasher factory as defined in services.yml\n        password_hasher_factories:\n            App\\Model\\DataObject\\User: website_demo.security.password_hasher_factory\n```\nand use new service handler:\n```yaml\nservices:\n    website_demo.security.password_hasher_factory:\n        class: Pimcore\\Security\\Hasher\\Factory\\UserAwarePasswordHasherFactory\n        arguments:\n            - Pimcore\\Security\\Hasher\\PasswordFieldHasher\n            - ['password']\n```\n- [Session] Default setting for `framework.session.cookie_samesite` changed to `strict`. \n  For more information about the possible impact on your project, please have a look at the [docs of set-cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite). \n  If you prefer to stay on the old session cookie behavior, please add the following to your project configuration: \n```yaml\nframework:\n    session:\n        cookie_samesite: 'lax'\n```  \n\n## 10.0.0\n\n### System Requirements\n     - PHP >= 8.0\n     - Apache >= 2.4\n\n### Database\n    - MariaDB >= 10.3\n    - MySQL >= 8.0\n    - Percona Server (supported versions see MySQL)\n### Changes\n- Bumped `symfony/symfony` to \"^5.2.0\". Pimcore X will only support Symfony 5.\n- ExtJS bumped to version 7.\n- Bumped:\n    - `guzzlehttp/guzzle` to \"^7.2\"\n    - `sensio/framework-extra-bundle` to \"^6.1\"\n    - `twig/twig` to \"^3.0\"\n    - `egulias/email-validator` to \"^3.0.0\"\n    - `onnov/detect-encoding` to \"^2.0\"\n    - `mjaschen/phpgeo` to \"^3.0\"\n    - `matomo/device-detector` to \"^4.0\"\n    - `ext-imagick` to \"^3.4.0\" (suggest)\n    - `lcobucci/jwt` to \"^4.0\"\n\n- `Pimcore\\Model\\DataObject\\ClassDefinition\\Data::isEqual()` has been removed. For custom data types, implement `\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\EqualComparisonInterface` instead.\n- `Pimcore\\Model\\Document\\Editable`(former. `Tags`) properties visibility changed from `protected` to `private`.\n- [Templating]\n    - PHP templating engine (including templating helpers & vars) has been removed to support Symfony 5. Use Twig or Php Templating Engine Bundle(enterprise) instead.\n    - Removed ViewModel.\n    - Removed Auto view rendering.\n    - Removed Placeholder support. Use Twig Parameters instead.\n\n- `Pimcore\\Model\\Tool\\Tracking\\Event` has been removed.\n- `Pimcore\\Tool\\Archive` has been removed.\n- The object query table will now consider the fallback language. If you want to keep the old behavior set `pimcore.objects.ignore_localized_query_fallback` in your configuration.\n- Removed QR Codes.\n- Remove Linfo Integration.\n- [Ecommerce][IndexService] Removed FactFinder integration.\n- Removed `Pimcore\\Model\\Tool\\Lock`.\n- Removed HybridAuth integration.\n- Removed `Pimcore\\Model\\Document\\Tag\\*` classes. Use `Pimcore\\Model\\Document\\Editable\\*` classes instead.\n- Removed `pimcore_tag_` css classes, use `pimcore_editable_` css instead.\n- Removed REST Webservice API.\n- Removed Legacy [Service aliases](https://github.com/pimcore/pimcore/pull/7281/files).\n- [Document] Removed support for edit.php on Area-Bricks. Use new feature: Editable Dialog Box instead.\n- [Glossary] Removed support for `Acronym`. Use `Abbr` instead.\n- [Element] Added `setProperties()` and `setProperty()` methods to `Pimcore\\Model\\Element\\ElementInterface`.\n- [Element] `setProperty()` method param `$inheritable` defaults to false. Adding a new property will create a non-inheritable property for documents.\n- [Document] Removed Editable Naming Strategy Support.\n- Removed Cookie Policy Info Bar Integration.\n- Removed `\\Pimcore\\Browser` class. Use `\\Browser` instead.\n- Method signature `PageSnippet::setEditable(string $name, Editable $data)` has been changed to `PageSnippet::setEditable(Editable $editable)`.\n- Removed Tag & Snippet Management.\n- Removed `Pimcore\\Controller\\EventedControllerInterface`. Use `Pimcore\\Controller\\KernelControllerEventInterface` and `Pimcore\\Controller\\KernelResponseEventInterface` instead.\n- Doctrine dependencies bumped to latest major version:\n    - \"doctrine/common\": \"^3.0.0\"\n    - \"doctrine/inflector\": \"^2.0.0\"\n- Removed service `pimcore.implementation_loader.document.tag`. Use `Pimcore\\Model\\Document\\Editable\\Loader\\EditableLoader` instead.\n- Removed Pimcore Bundles generator and command `pimcore:generate:bundle`.\n- `Pimcore\\Controller\\Controller` abstract class now extends `Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController` instead of `Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller`.\n- `Pimcore\\Translation\\Translator::transChoice()` & `Pimcore\\Bundle\\AdminBundle\\Translation\\AdminUserTranslator::transChoice()` methods have been removed. Use `trans()` method with `%count%` parameter.\n- Removed `pimcore.documents.create_redirect_when_moved` config. Please remove from System.yml.\n- Removed `pimcore.workflows.initial_place` config. Use `pimcore.workflows.initial_markings` instead.\n- `WebDebugToolbarListenerPass` has been removed and `WebDebugToolbarListener` has been marked as final & internal.\n- Bumped `sabre/dav` to ^4.1.1\n- Removed `Pimcore\\Model\\Element\\Reference\\Placeholder` class.\n- Removed `pimcore.routing.defaults`. Use `pimcore.documents.default_controller` instead.\n- Removed `\\Pimcore\\Tool::getRoutingDefaults()`, `PageSnippet::$module|$action|get/setAction()|get/setModule()`, `DocType::$module|$action|get/setAction()|get/setModule()`, `Staticroute::$module|$action|get/setAction()|get/setModule()`.\n- Removed `\\Pimcore\\Tool::getValidCacheKey/()`, use `preg_replace('/[^a-zA-Z0-9]/', '_', $key)` instead.\n- Removed `\\Pimcore\\Tool::isValidPath/()`, use `\\Pimcore\\Model\\Element\\Service::isValidPath()` instead.\n- Deprecated `\\Pimcore\\Model\\Element\\Service::getSaveCopyName()`, use `getSafeCopyName()` instead.\n- Deprecated methods `getObject()` and `setObject()` on the classes `\\Pimcore\\Model\\Document\\Link` and `\\Pimcore\\Model\\DataObject\\Data\\Link`, use `getElement()` and `setElement()` instead.\n- Using dynamic modules, controllers and actions in static routes (e.g. `%controller`) does not work anymore.\n- Removed `\\Pimcore\\Controller\\Config\\ConfigNormalizer`.\n- Removed `pimcore_action()` Twig extension. Use Twig `render()` instead.\n- Removed `\\Pimcore\\Console\\Log\\Formatter\\ConsoleColorFormatter`\n- Removed `\\Pimcore\\Console\\CliTrait`, use `php_sapi_name() === 'cli'` instead.\n- Removed `\\Pimcore\\Console\\Dumper`, use Symfony's `VarDumper` instead.\n- Removed `\\Pimcore\\Google\\Webmastertools`, use `\\Pimcore\\Config::getReportConfig()->get('webmastertools'')` instead.\n- Removed `\\Pimcore\\Helper\\JsonFormatter`, use `json_encode($data, JSON_PRETTY_PRINT)` instead.\n- Removed `\\Pimcore\\Log\\Handler\\Mail`, there's no replacement for this internal class.\n- Removed `\\Pimcore\\File::isIncludeable()` method, there's no replacement.\n- Removed `\\Pimcore\\DataObject\\GridColumnConfig\\AbstractConfigElement` just implement `\\Pimcore\\DataObject\\GridColumnConfig\\ConfigElementInterface` instead.\n- [Documents] Renderlet Editable: removed `action` & `bundle` config. Specify controller reference, e.g. `App\\Controller\\FooController::myAction`\n- Bumped `codeception/codeception` to \"^4.1.12\".\n- Pimcore Bundle Migrations: Extending the functionality of `DoctrineMigrationsBundle` is not any longer possible the way we did it in the past. Therefore we're switching to standard Doctrine migrations, this means also that migration sets are not supported anymore and that the available migrations have to be configured manually or by using flex.\n    ```yaml\n      doctrine_migrations:\n          migrations_paths:\n              'Pimcore\\Bundle\\DataHubBundle\\Migrations': '@PimcoreDataHubBundle/Migrations'\n              'CustomerManagementFrameworkBundle\\Migrations': '@PimcoreCustomerManagementFrameworkBundle/Migrations'\n    ```\n  However, we've extended the doctrine commands to accept an optional `--prefix` option, which let's you filter configured migration classes. This is in a way an adequate replacement for the `-s` (sets) option.\n\n  `./bin/console doctrine:migrations:list --prefix=Pimcore\\\\Bundle\\\\CoreBundle`\n\n- [Ecommerce] Added `setItems($items)` method `CartInterface`, `getRule()` to `ModificatedPriceInterface` & `getId()` method to `ProductInterface`.\n- [Data Objects] Relation Data-Types: throws exception if object without an ID was assigned. e.g.\n    ```php\n    $newObject = new MyDataObject();\n    $existingObject->setMyRelations([$newObject]);\n    $existingObject->save(); //validation error\n    ```\n- [Data Objects] ManyToMany Relation Types: throws exception if multiple assignments passed without enabling Multiple assignments on class definition.\n- [Data Objects] ReverseManyToManyObjectRelation - now supports reverse relations from ManyToOneRelation field and has been renamed to ReverseObjectRelation with BC layer.\n- [Data Object] Table Data-Type always return an array.\n- [Data Object] `Model::getById()` & `Model::getByPath()` do not catch exceptions anymore.\n- Added methods `getArgument($key)`, `setArgument($key, $value)`, `getArguments()`, `setArguments(array $args = [])`, `hasArgument($key)` to `Pimcore\\Model\\Element\\ElementInterface\\ElementEventInterface`.\n- [Ecommerce] Changed name of interfaces from I* to *Interface .e.g. `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\ICheckoutable` => `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\CheckoutableInterface`\n- Removed `cache/tag-interop`dependency.\n- [Cache] `Pimcore\\Cache` is directly based on Symfony/Cache. If you have custom cache pool configured under `pimcore.cache.pools` then change it to Symfony Config `framework.cache.pools`. [Read more](https://pimcore.com/docs/pimcore/master/Development_Documentation/Development_Tools_and_Details/Cache/index.html#page_Configuring-the-cache)\n- Methods `checkCsrfToken()`, `getCsrfToken()`, `regenerateCsrfToken()` methdos have been removed from `Pimcore\\Bundle\\AdminBundle\\EventListener\\CsrfProtectionListener`. Use `Pimcore\\Bundle\\AdminBundle\\Security\\CsrfProtectionHandler` instead.\n- Bumped `phpunit/phpunit` & `codeception/phpunit-wrapper` to \"^9\"\n- Replaced `html2text/html2text` with `soundasleep/html2text`. Removed methods from `Pimcore\\Mail`: `determineHtml2TextIsInstalled()`, `setHtml2TextOptions($options = [])`, `getHtml2TextBinaryEnabled()`, `enableHtml2textBinary()`, `getHtml2textInstalled()`.\n- Replaced `doctrine/common` with `doctrine/persistence`.\n- [Asset] Image thumbnails: Using getHtml() will return `<picture>` tag instead of `<img>` tag.\n- [Asset] Config option `pimcore.assets.image.thumbnails.webp_auto_support` was removed, since the browser detection is not needed anymore using the `<picture>` tags for thumbnails. \n- [Ecommerce] Marked `AbstractOrder` & `AbstractOrderItem` classes as abstract.\n    Changes on `AbstractOrder` class:\n    - Added: `getCartHash()`, `getComment()`, `setComment()`\n    - Removed: `getDeliveryEMail()`, `setDeliveryEMail()`, `getCartModificationTimestamp()`\n- [Data Objects] Data-Types: Removed getPhpdocType() BC layer\n- [Ecommerce][FilterService] Added method `getFilterValues()` to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\FilterService\\FilterType\\AbstractFilterType`\n- [Data Objects] OwnerAwareFieldInterface: added methods `_setOwner($owner)`, `_setOwnerFieldname(?string $fieldname)`, `_setOwnerLanguage(?string $language)`, `_getOwner()`, `_getOwnerFieldname()`, _getOwnerLanguage() and removed method `setOwner($owner, string $fieldname, $language = null)`.\n- [Translations] Remove `pimcore.translations.case_insensitive` support.\n- [Core] Folder structure updated to support Symfony Flex. Changes as per [Symfony Docs](https://symfony.com/doc/5.2/setup/flex.html)\n- [Translations] `Pimcore\\Model\\Translation\\AbstractTranslation`, `Pimcore\\Model\\Translation\\Admin` and `Pimcore\\Model\\Translation\\Website` with corresponding listing classes have been removed. Use new class `Pimcore\\Model\\Translation` with domain support (`Translation::DOMAIN_DEFAULT` or `Translation::DOMAIN_ADMIN`).\n- Replaced `scheb/two-factor-bundle` with `scheb/2fa-bundle`, `scheb/2fa-google-authenticator` & `scheb/2fa-qr-code`.\n- Removed Laminas Packages.\n- Removed Zend Compatibility Query Builder.\n- [Ecommerce] Payment Providers: Removed `WirecardSeamless`, `Qpay`, `Paypal` integration and moved to a separate bundle:\n    - `Datatrans` => https://github.com/pimcore/payment-provider-datatrans\n    - `Heidelpay` => https://github.com/pimcore/payment-provider-unzer\n    - `Hobex` => https://github.com/pimcore/payment-provider-hobex\n    - `Klarna` => https://github.com/pimcore/payment-provider-klarna\n    - `Mpay24Seamless` => https://github.com/pimcore/payment-provider-mpay24-seamless\n    - `OGone` => https://github.com/pimcore/payment-provider-ogone\n    - `PayPalSmartPaymentButton` => https://github.com/pimcore/payment-provider-paypal-smart-payment-button\n    - `PayU` => https://github.com/pimcore/payment-provider-payu\n\n- [Core] Security configurations not merged anymore from custom bundles.\n- `twig/extensions` dependency has been removed.\n- Removed legacy transliterator (changes related to `\\Pimcore\\Tool\\Transliteration::_transliterationProcess`).\n- Config: Invalid pimcore configurations will result in compile error:\n    ```yaml\n      pimcore:\n         xyz:\n            xyz:\n    ```\n- [Data Objects] Removed `getFromCsvImport()` method from data-types.\n- Replaced `Ramsey/Uuid` with `Symfony/Uuid`.\n- Matomo Integration has been removed.\n- `Pimcore\\Tool\\Console::exec()` method has been removed. Use Symfony\\Component\\Process\\Process instead.\n- `\\Pimcore\\Tool\\Console::getOptions()` method has been removed.\n- `\\Pimcore\\Tool\\Console::getOptionString()` method has been removed.\n- `\\Pimcore\\Tool\\Console::checkCliExecution()` method has been removed.\n- `Pimcore\\Twig\\Extension\\Templating\\Navigation::buildNavigation()` method has been removed.\n- `Pimcore\\Tool\\Mime` class has been removed. Use `Symfony\\Component\\Mime\\MimeTypes` instead.\n- [Documents] Areabricks: location changed from `Areas` to `areas` with BC layer.\n- [Documents] Areablocks: Adding a brick to areablocks will not trigger reload by default anymore and should be configured per Brick.\n- SQIP support has been removed.\n- `Thumbnail::getHtml()` doesn't accept direct pass of HTML attributes such as `class` or `title` anymore, use `imageAttributes` or `pictureAttributes` instead.\n- Removed methods `getForcePictureTag()` and `setForcePictureTag()` from `\\Pimcore\\Model\\Asset\\Image\\Thumbnail\\Config`\n- `\\Pimcore\\Model\\Document\\Editable\\Block\\AbstractBlockItem::getElement()` has been removed, use `getEditable()` instead.\n- `\\Pimcore\\Model\\DataObject\\Service::removeObjectFromSession()` has been removed, use `removeElementFromSession()` instead.\n- `\\Pimcore\\Model\\DataObject\\Service::getObjectFromSession()` has been removed, use `getElementFromSession()` instead.\n- `\\Pimcore\\Model\\Asset\\Image\\Thumbnail\\Config::setColorspace()` has been removed\n- `\\Pimcore\\Model\\Asset\\Image\\Thumbnail\\Config::getColorspace()` has been removed\n- `\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\DataInterface` has been removed\n- `\\Pimcore\\Model\\Asset\\Listing::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Model\\Document\\Listing::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Model\\DataObject\\Listing::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Google\\Cse::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Helper\\RobotsTxt` has been removed\n- `\\Pimcore\\Tool\\Frontend::getSiteKey()` method has been removed.\n- `\\Pimcore\\Model\\User::getUsername()` has been removed, use `User::getName()` instead.\n- `\\Pimcore\\Cache\\Runtime::get('pimcore_editmode')` isn't supported anymore, use `EditmodeResolver` service instead.\n- [Documents] `Editable::factory()` was removed, use `EditableLoader` service instead.\n- [Data Objects] Removed CSV import feature. Use https://github.com/pimcore/data-importer or https://github.com/w-vision/DataDefinitions instead.\n- [DataObjects] marked `Pimcore\\DataObject\\GridColumnConfig\\Operator` operator classes as final and internal\n- [DataObjects] Calculator classes of Calculated Values must implement the `Pimcore\\Model\\DataObject\\ClassDefinition\\CalculatorClassInterface` now.\n- [DataObjects] PHP Class `Pimcore\\Model\\DataObject\\Data\\Geopoint` has been replaced with `GeoCoordinates`. Changed the signature of `__construct`.\n- Added `Pimcore\\Bundle\\EcommerceFrameworkBundle\\FilterService\\FilterType\\AbstractFilterType::getFilterValues()` with the same signature as `getFilterFrontend()`. To upgrade, rename `getFilterFrontend()` to `getFilterValues()` and remove the rendering stuff to just return the data array.\n\n    Before:\n    ```php\n    public function getFilterFrontend(AbstractFilterDefinitionType $filterDefinition, ProductListInterface $productList, $currentFilter)\n    {\n        // ...\n        return $this->render($this->getTemplate($filterDefinition), [\n            //...\n        ]);\n    }\n    ```\n    After:\n    ```php\n    public function getFilterValues(AbstractFilterDefinitionType $filterDefinition, ProductListInterface $productList, array $currentFilter): array\n    {\n        // ...\n        return [\n            //...\n        ];\n    }\n    ```\n- Added Validation for Geo datatypes\n    - for Geopolyline and Geopolygon invalid data doesn't get serialized 1:1 anymore\n    - for Geobounds and Geopoint invalid data doesn't get dropped silently anymore\n- Calling `$imageAsset->getThumbnail('non-existing-thumbnail-definition)` with a non-existing thumbnail definition will now throw an exception. Same goes for video assets and video image thumbnails.\n- Removed grid column operator `ObjectBrickGetter` since it is obsolete\n- Grid operator `AnyGetter` available only for admin users from now on\n- [Ecommerce] Added `getAttributeConfig` method to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ConfigInterface` interface\n- [Ecommerce] Added `getClientConfig` method to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ElasticSearchConfigInterface`\n- [Ecommerce] Added abstract method `setSuccessorOrder` to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\AbstractOrder`\n- [Ecommerce] Indexing doesn't catch any exceptions that occur during preprocessing of attributes in BatchProcessing workers (e.g. elasticsearch).\n  You can change that behavior with event listeners.\n- [Ecommerce] Added abstract method `setCartHash` to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\AbstractOrder`\n- [Ecommerce] Added `getFieldNameMapped` to ` Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ElasticSearchConfigInterface`\n- [Ecommerce] Added `getReverseMappedFieldName` to ` Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ElasticSearchConfigInterface`\n- [Ecommerce] Changed tenant config type hint to `FindologicConfigInterface` in `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\ProductList\\DefaultFindologic::__construct`\n- [Ecommerce] Changed price fields `totalNetPrice` and `totalPrice` of `OnlineShopOrderItem` to decimal.\n- [Ecommerce] Removed deprecated configuration options `enabled`, `pricing_manager_id` and `pricing_manager_options` for pricing_manager.\n  Use tenant specific options.\n- [Ecommerce] Removed deprecated functions `get/setCurrentTenant` and `get/setCurrentSubTenant`\n  of `EnvironmentInterface`\n- [Ecommerce] Removed deprecated service alias for `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IEnvironment`\n- [Ecommerce] Removed deprecated functions `getGeneralSearchColumns`, `createOrUpdateTable`, `getIndexColumns` and `getIndexColumnsByFilterGroup`\n  of `IndexService`\n- [Ecommerce] Removed deprecated function `getPaginatorAdapter` from\n  `ProductList\\MySql`, `ProductList\\DefaultFindologic`, `ProductList\\ElasticSearch\\AbstractElasticSearch`, `Token\\Listing` and `AbstractOrderList`\n- [Ecommerce] Removed deprecated functions `getCalculatedPrice` and `getCalculatedPriceInfo` from `AbstractSetProduct`\n- [Ecommerce] Removed deprecated protected function `getAvailableFilterValues` from `Order\\Listing`\n- [Ecommerce] Activated `generateTypeDeclarations` for all generated data object classes and field collections. For migration\n  activate `generateTypeDeclarations` to all Ecommerce Framework data object classes and update your source code accordingly.\n- [Ecommerce] Made methods abstract instead of throwing `UnsupportedException` where easily possible for model classes (`AbstractProduct`, `AbstractSetProduct`, `AbstractOfferToolProduct`, `AbstractOfferItem`, `AbstractOffer`).\n- [Ecommerce] Added type declarations to Ecommerce Framework product interfaces (`ProductInterface`, `IndexableInterface`, `CheckoutableInterface`).\n- [Ecommerce] Removed Elasticsearch 5 and 6 support\n- [Ecommerce] `getItemAmount` and `getItemCount` of `Carts` now require string parameter (instead of boolean). Use one of\n`CartInterface::COUNT_MAIN_ITEMS_ONLY`, `CartInterface::COUNT_MAIN_AND_SUB_ITEMS`, `CartInterface::COUNT_MAIN_OR_SUB_ITEMS`.\n- [Ecommerce] Removed legacy CheckoutManager architecture, migrate your project to V7 if not already\n  - `CancelPaymentOrRecreateOrderStrategy` is now default strategy for handling active payments\n  - Removed method `isCartReadOnly` from cart and `cart_readonly_mode` configuration option as readonly mode\n    does not exist anymore.\n  - Removed deprecated method `initPayment` from `PaymentInterface`\n- [Ecommerce] Removed deprecated `ecommerce:indexservice:process-queue` command,\n  use `ecommerce:indexservice:process-preparation-queue` or `ecommerce:indexservice:process-update-queue` instead\n- [Ecommerce] Removed deprecated `mapping` option in index attributes configuration (never worked properly anyway)\n- [Ecommerce] Removed deprecated `IndexUpdater` tool\n- [Ecommerce] Removed legacy BatchProcessing worker mode, product centric batch processing is now standard\n  - Removed abstract class `AbstractBatchProcessingWorker`, use `ProductCentricBatchProcessing` instead\n  - Removed methods from interface `BatchProcessingWorkerInterface` and its implementations:\n     - `BatchProcessingWorkerInterface::processPreparationQueue`\n     - `BatchProcessingWorkerInterface::processUpdateIndexQueue`\n  - Added methods to interface `BatchProcessingWorkerInterface`\n    - `BatchProcessingWorkerInterface::prepareDataForIndex`\n    - `BatchProcessingWorkerInterface::resetPreparationQueue`\n    - `BatchProcessingWorkerInterface::resetIndexingQueue`\n  - Removed constants\n     - `ProductCentricBatchProcessingWorker::WORKER_MODE_LEGACY`\n     - `ProductCentricBatchProcessingWorker::WORKER_MODE_PRODUCT_CENTRIC`\n  - Removed configuration node `worker_mode` in `index_service` configuration\n- [Ecommerce] Moved method `getIdColumnType` from `MysqlConfigInterface` to `ConfigInterface`. Since it was and still is\n  implemented in `AbstractConfig` this should not have any consequences.\n- [Ecommerce] Timestamp of CartItems is now in mirco seconds (existing data will be migrated).\n- [Ecommerce][PricingManager] Added two new interfaces `ProductActionInterface` and `CartActionInterface`. All actions\n  need to implement either of it - otherwise they will not be considered anymore in price calculation.\n- [Web2Print]\n   - Removed `PdfReactor8`, use `PdfReactor` instead.\n   - Removed PDFreactor version selection in web2print settings, since most current PDFreactor client lib\n     should be backwards compatible to older versions.\n- [Email & Newsletter] Swiftmailer has been replaced with Symfony Mailer. `\\Pimcore\\Mail` class now extends from `Symfony\\Component\\Mime\\Email` and new mailer service `Pimcore\\Mail\\Mailer` has been introduced, which decorates `Symfony\\Component\\Mailer\\Mailer`, for sending mails.\n\n    Email method and transport setting has been removed from System settings. Cleanup Swiftmailer config and setup mailer transports \"main\" & \"newsletter\" in config.yaml:\n    ```yaml\n    framework:\n        mailer:\n            transports:\n                main: smtp://user:pass@smtp.example.com:port\n                pimcore_newsletter: smtp://user:pass@smtp.example.com:port\n    ```\n    please see [Symfony Transport Setup](https://symfony.com/doc/5.2/mailer.html#transport-setup) for more information.\n\n    API changes:\n\n    Before:\n    ```php\n        $mail = new \\Pimcore\\Mail($subject = null, $body = null, $contentType = null, $charset = null);\n        $mail->setBodyText(\"This is just plain text\");\n        $mail->setBodyHtml(\"<b>some</b> rich text: {{ myParam }}\");\n        ...\n    ```\n    After:\n    ```php\n        $mail= new \\Pimcore\\Mail($headers = null, $body = null, $contentType = null);\n        $mail->text(\"This is just plain text\");\n        $mail->html(\"<b>some</b> rich text: {{ myParam }}\");\n        ...\n    ```\n\n    Before:\n    ```php\n      $mail->setFrom($emailAddress, $name);\n      $mail->setTo($emailAddress, $name);\n      ...\n    ```\n\n    After:\n    ```php\n      $mail->from(new \\Symfony\\Component\\Mime\\Address($emailAddress, $name));\n      $mail->to(new \\Symfony\\Component\\Mime\\Address($emailAddress, $name));\n      ...\n    ```\n- [Email & Newsletter] `\\Pimcore\\Mail::setEnableLayoutOnRendering/getEnableLayoutOnRendering()` methods have been removed, with Twig they are just not necessary anymore.\n- [Email & Newsletter] `\\Pimcore\\Mail::isValidEmailAddress()` method has been removed, use `EmailValidator` instead.\n- [Security] BruteforceProtectionHandler & BruteforceProtectionListener has been made final and marked as internal.\n- [JWTCookieSaveHandler] `Pimcore\\Targeting\\Storage\\Cookie\\JWT\\Decoder` has been removed in favor of `Lcobucci\\JWT\\Encoding\\JoseDecoder`.\n- `simple_html_dom` library has been removed. Use `Symfony\\Component\\DomCrawler\\Crawler` instead.\n- Removed deprecated Twig extension `pimcore_action()`.\n- Removed method `getFlag()` from `Pimcore\\Config`.\n- Removed `Pimcore\\Report` class.\n- [Versioning] Default behavior has been changed to following:\n    - Empty values for `steps` & `days` => unlimited versions.\n    - Value 0 for `steps` or `days` => no version will be saved at all & existing will be cleaned up.\n\n  please update your system settings as per the requirements.\n- Removed deprecated `marshal()` and `unmarshal()` methods from object data-types.\n- `DynamicTextLabelInterface::renderLayoutText()` must handle nullable object param.\n- [AdminBundle] Marked classes and controllers as @internal/final - please see all changes here: https://github.com/pimcore/pimcore/pull/8453/files & https://github.com/pimcore/pimcore/pull/8988/files\n", "<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace Pimcore\\Security;\n\n/**\n * @internal\n */\nclass SecurityHelper\n{\n    public static function convertHtmlSpecialChars(?string $text): ?string\n    {\n        if(is_string($text)) {\n            return htmlspecialchars($text, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8', false);\n        }\n\n        return null;\n    }\n\n    public static function convertHtmlSpecialCharsArrayKeys(array &$array, array $keys): void\n    {\n        foreach ($keys as $key) {\n            if (array_key_exists($key, $array)) {\n                $array[$key] = self::convertHtmlSpecialChars($array[$key]);\n            }\n        }\n    }\n}\n", "<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace Pimcore\\Model\\Document\\Editable;\n\nuse Pimcore\\Logger;\nuse Pimcore\\Model;\nuse Pimcore\\Model\\Asset;\nuse Pimcore\\Model\\Document;\n\n/**\n * @method \\Pimcore\\Model\\Document\\Editable\\Dao getDao()\n */\nclass Link extends Model\\Document\\Editable implements IdRewriterInterface, EditmodeDataInterface\n{\n    /**\n     * Contains the data for the link\n     *\n     * @internal\n     *\n     * @var array|null\n     */\n    protected $data;\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getType()\n    {\n        return 'link';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getData()\n    {\n        // update path if internal link\n        $this->updatePathFromInternal(true);\n\n        return $this->data;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDataEditmode() /** : mixed */\n    {\n        // update path if internal link\n        $this->updatePathFromInternal(true, true);\n\n        return $this->data;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getEditmodeElementClasses($options = []): array\n    {\n        // we don't want the class attribute being applied to the editable container element (<div>, only to the <a> tag inside\n        // the default behavior of the parent method is to include the \"class\" attribute\n        $classes = [\n            'pimcore_editable',\n            'pimcore_editable_' . $this->getType(),\n        ];\n\n        return $classes;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function frontend()\n    {\n        $url = $this->getHref();\n\n        if (strlen($url) > 0) {\n            if (!is_array($this->config)) {\n                $this->config = [];\n            }\n\n            $prefix = '';\n            $suffix = '';\n            $noText = false;\n\n            if (array_key_exists('textPrefix', $this->config)) {\n                $prefix = $this->config['textPrefix'];\n                unset($this->config['textPrefix']);\n            }\n\n            if (array_key_exists('textSuffix', $this->config)) {\n                $suffix = $this->config['textSuffix'];\n                unset($this->config['textSuffix']);\n            }\n\n            if (isset($this->config['noText']) && $this->config['noText'] == true) {\n                $noText = true;\n                unset($this->config['noText']);\n            }\n\n            // add attributes to link\n            $allowedAttributes = [\n                'charset',\n                'coords',\n                'hreflang',\n                'name',\n                'rel',\n                'rev',\n                'shape',\n                'target',\n                'accesskey',\n                'class',\n                'dir',\n                'draggable',\n                'dropzone',\n                'contextmenu',\n                'id',\n                'lang',\n                'style',\n                'tabindex',\n                'title',\n                'media',\n                'download',\n                'ping',\n                'type',\n                'referrerpolicy',\n                'xml:lang',\n                'onblur',\n                'onclick',\n                'ondblclick',\n                'onfocus',\n                'onmousedown',\n                'onmousemove',\n                'onmouseout',\n                'onmouseover',\n                'onmouseup',\n                'onkeydown',\n                'onkeypress',\n                'onkeyup',\n            ];\n            $defaultAttributes = [];\n\n            if (!is_array($this->data)) {\n                $this->data = [];\n            }\n\n            $availableAttribs = array_merge($defaultAttributes, $this->data, $this->config);\n\n            // add attributes to link\n            $attribs = [];\n            foreach ($availableAttribs as $key => $value) {\n                if ((is_string($value) || is_numeric($value))\n                    && (strpos($key, 'data-') === 0 ||\n                        strpos($key, 'aria-') === 0 ||\n                        in_array($key, $allowedAttributes))) {\n                    if (!empty($this->data[$key]) && !empty($this->config[$key])) {\n                        $attribs[] = $key.'=\"'. $this->data[$key] .' '. $this->config[$key] .'\"';\n                    } elseif (!empty($value)) {\n                        $attribs[] = $key.'=\"'.$value.'\"';\n                    }\n                }\n            }\n\n            $attribs = array_unique($attribs);\n\n            if (array_key_exists('attributes', $this->data) && !empty($this->data['attributes'])) {\n                $attribs[] = $this->data['attributes'];\n            }\n\n            return '<a href=\"'.$url.'\" '.implode(' ', $attribs).'>' . $prefix . ($noText ? '' : htmlspecialchars($this->data['text'])) . $suffix . '</a>';\n        }\n\n        return '';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function checkValidity()\n    {\n        $sane = true;\n        if (is_array($this->data) && isset($this->data['internal']) && $this->data['internal']) {\n            if ($this->data['internalType'] == 'document') {\n                $doc = Document::getById($this->data['internalId']);\n                if (!$doc) {\n                    $sane = false;\n                    Logger::notice(\n                        'Detected insane relation, removing reference to non existent document with id ['.$this->getDocumentId(\n                        ).']'\n                    );\n                    $this->data = null;\n                }\n            } elseif ($this->data['internalType'] == 'asset') {\n                $asset = Asset::getById($this->data['internalId']);\n                if (!$asset) {\n                    $sane = false;\n                    Logger::notice(\n                        'Detected insane relation, removing reference to non existent asset with id ['.$this->getDocumentId(\n                        ).']'\n                    );\n                    $this->data = null;\n                }\n            } elseif ($this->data['internalType'] == 'object') {\n                $object = Model\\DataObject\\Concrete::getById($this->data['internalId']);\n                if (!$object) {\n                    $sane = false;\n                    Logger::notice(\n                        'Detected insane relation, removing reference to non existent object with id ['.$this->getDocumentId(\n                        ).']'\n                    );\n                    $this->data = null;\n                }\n            }\n        }\n\n        return $sane;\n    }\n\n    /**\n     * @return string\n     */\n    public function getHref()\n    {\n        $this->updatePathFromInternal();\n\n        $url = $this->data['path'] ?? '';\n\n        if (strlen($this->data['parameters'] ?? '') > 0) {\n            $url .= (strpos($url, '?') !== false ? '&' : '?') . str_replace('?', '', $this->getParameters());\n        }\n\n        if (strlen($this->data['anchor'] ?? '') > 0) {\n            $anchor = $this->getAnchor();\n            $anchor = str_replace('\"', urlencode('\"'), $anchor);\n            $url .= '#' . str_replace('#', '', $anchor);\n        }\n\n        return $url;\n    }\n\n    /**\n     * @param bool $realPath\n     * @param bool $editmode\n     */\n    private function updatePathFromInternal($realPath = false, $editmode = false)\n    {\n        $method = 'getFullPath';\n        if ($realPath) {\n            $method = 'getRealFullPath';\n        }\n\n        if (isset($this->data['internal']) && $this->data['internal']) {\n            if ($this->data['internalType'] == 'document') {\n                if ($doc = Document::getById($this->data['internalId'])) {\n                    if ($editmode || (!Document::doHideUnpublished() || $doc->isPublished())) {\n                        $this->data['path'] = $doc->$method();\n                    } else {\n                        $this->data['path'] = '';\n                    }\n                }\n            } elseif ($this->data['internalType'] == 'asset') {\n                if ($asset = Asset::getById($this->data['internalId'])) {\n                    $this->data['path'] = $asset->$method();\n                }\n            } elseif ($this->data['internalType'] == 'object') {\n                if ($object = Model\\DataObject::getById($this->data['internalId'])) {\n                    if ($editmode) {\n                        $this->data['path'] = $object->getFullPath();\n                    } else {\n                        if ($object instanceof Model\\DataObject\\Concrete) {\n                            if ($linkGenerator = $object->getClass()->getLinkGenerator()) {\n                                if ($realPath) {\n                                    $this->data['path'] = $object->getFullPath();\n                                } else {\n                                    $this->data['path'] = $linkGenerator->generate(\n                                        $object,\n                                        [\n                                            'document' => $this->getDocument(),\n                                            'context' => $this,\n                                        ]\n                                    );\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        // sanitize attributes\n        if (isset($this->data['attributes'])) {\n            $this->data['attributes'] = htmlspecialchars($this->data['attributes'], HTML_ENTITIES);\n        }\n\n        // deletes unnecessary attribute, which was set by mistake in earlier versions, see also\n        // https://github.com/pimcore/pimcore/issues/7394\n        if (isset($this->data['type'])) {\n            unset($this->data['type']);\n        }\n    }\n\n    /**\n     * @return string\n     */\n    public function getText()\n    {\n        return $this->data['text'] ?? '';\n    }\n\n    /**\n     * @param string $text\n     */\n    public function setText($text)\n    {\n        $this->data['text'] = $text;\n    }\n\n    /**\n     * @return string\n     */\n    public function getTarget()\n    {\n        return $this->data['target'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getParameters()\n    {\n        return $this->data['parameters'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getAnchor()\n    {\n        return $this->data['anchor'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getTitle()\n    {\n        return $this->data['title'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getRel()\n    {\n        return $this->data['rel'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getTabindex()\n    {\n        return $this->data['tabindex'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getAccesskey()\n    {\n        return $this->data['accesskey'] ?? '';\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getClass()\n    {\n        return $this->data['class'] ?? '';\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getAttributes()\n    {\n        return $this->data['attributes'] ?? '';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setDataFromResource($data)\n    {\n        $this->data = \\Pimcore\\Tool\\Serialize::unserialize($data);\n        if (!is_array($this->data)) {\n            $this->data = [];\n        }\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setDataFromEditmode($data)\n    {\n        if (!is_array($data)) {\n            $data = [];\n        }\n\n        $path = $data['path'] ?? null;\n\n        if (!empty($path)) {\n            $target = null;\n\n            if ($data['linktype'] == 'internal' && $data['internalType']) {\n                $target = Model\\Element\\Service::getElementByPath($data['internalType'], $path);\n                if ($target) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                }\n            }\n\n            if (!$target) {\n                if ($target = Document::getByPath($path)) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                    $data['internalType'] = 'document';\n                } elseif ($target = Asset::getByPath($path)) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                    $data['internalType'] = 'asset';\n                } elseif ($target = Model\\DataObject\\Concrete::getByPath($path)) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                    $data['internalType'] = 'object';\n                } else {\n                    $data['internal'] = false;\n                    $data['internalId'] = null;\n                    $data['internalType'] = null;\n                    $data['linktype'] = 'direct';\n                }\n\n                if ($target) {\n                    $data['linktype'] = 'internal';\n                }\n            }\n        }\n\n        $this->data = $data;\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function isEmpty()\n    {\n        return strlen($this->getHref()) < 1;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function resolveDependencies()\n    {\n        $dependencies = [];\n        $isInternal = $this->data['internal'] ?? false;\n\n        if (is_array($this->data) && $isInternal) {\n            if ((int)$this->data['internalId'] > 0) {\n                if ($this->data['internalType'] == 'document') {\n                    if ($doc = Document::getById($this->data['internalId'])) {\n                        $key = 'document_'.$doc->getId();\n\n                        $dependencies[$key] = [\n                            'id' => $doc->getId(),\n                            'type' => 'document',\n                        ];\n                    }\n                } elseif ($this->data['internalType'] == 'asset') {\n                    if ($asset = Asset::getById($this->data['internalId'])) {\n                        $key = 'asset_'.$asset->getId();\n\n                        $dependencies[$key] = [\n                            'id' => $asset->getId(),\n                            'type' => 'asset',\n                        ];\n                    }\n                }\n            }\n        }\n\n        return $dependencies;\n    }\n\n    /**\n     * { @inheritdoc }\n     */\n    public function rewriteIds($idMapping) /** : void */\n    {\n        if (isset($this->data['internal']) && $this->data['internal']) {\n            $type = $this->data['internalType'];\n            $id = (int)$this->data['internalId'];\n\n            if (array_key_exists($type, $idMapping)) {\n                if (array_key_exists($id, $idMapping[$type])) {\n                    $this->data['internalId'] = $idMapping[$type][$id];\n                    $this->getHref();\n                }\n            }\n        }\n    }\n}\n"], "fixing_code": ["# Link Editable\n\n## General \n\nThe link editable is used for dynamic link creation in documents.\n\n## Configuration\n\nYou can pass nearly every valid attribute an `<a>`-tag can have ([w3.org - Link](https://www.w3.org/TR/html52/textlevel-semantics.html#the-a-element)), \nsuch as: `class`, `target`, `id`, `style`, `accesskey`, `name`, `title`, `data-*`, `aria-*` and additionally the following: \n\n| Name     | Type     | Description                                                             |\n|----------|----------|-------------------------------------------------------------------------|\n| `reload` | boolean  | Set to true to reload the page in editmode after changing the state.    |\n| `textPrefix` | string  | Add an icon or something else before Text    |\n| `textSuffix` | string  | Add an icon or something else after Text    |\n| `noText` | boolean  | If you need only the `<a>` tag without text (or only with an textSuffix/TextPrefix)    |\n| `required` | boolean/string  | (default: false) set to true to make link and text required for publish, set to \"linkonly\" to make only the link required for publish    |\n\n> For security reasons we created an [allow list](https://github.com/pimcore/pimcore/blob/9bf18aca55e5303661c68835c950412a428cf616/models/Document/Editable/Link.php#L115-L141) to filter harmfull html attributes. For example all `on*` attributes will be filtered out!\n\n## Methods\n\n| Name              | Return      | Description                          |\n|-------------------|-------------|--------------------------------------|\n| `getHref()`       | string      | Get the path of this link            |\n| `getText()`       | string      | Get the text of the link             |\n| `getTarget()`     | string      | Get the target of the link           |\n| `getParameters()` | string      | Get the query params of the link     |\n| `getAnchor()`     | string      | Get the anchor text of the link      |\n| `getTitle()`      | string      | Get the title of the link            |\n| `getRel()`        | string      | Get the rel text of the link         |\n| `getTabindex()`   | string      | Get the tabindex of the link         |\n| `getClass()`      | string      | Get the class of the link            |\n| `getAccessKey()`  | string      | Get the access key of the link       |\n| `isEmpty()`       | string      | Whether the editable is empty or not |\n\n## Examples\n\n### Basic Usage\n\n```twig\n<p>\n    {{ \"Visit our\" | trans }}\n    {{ pimcore_link('blogLink') }}\n</p>\n```\n\nYou could see the backend preview in the picture, below.\n\n![Link editable - adminitration panel](../../img/editables_link_backend_preview.png)\n\nAnd the frontend:\n\n![Link editable - frontend](../../img/editables_link_frontend_preview.png)\n\n\n\n### Use Link in the Block Editable\n\nLet's see how to make a list of links with [Block](./06_Block.md).\n\n```twig\n<h3>{{ \"Useful links\" | trans }}</h3>\n<ul>\n    {% for i in pimcore_block('linkblock').iterator %}\n        <li>{{ pimcore_link('myLink', {'class': \"special-link-class\"}) }}</li>\n    {% endfor %}\n</ul>\n```\n\nThe above example renders a list of links: \n![The links list in the backend](../../img/editables_link_inside_block.png)\n\n### Link Generators\n\nPlease also see the section about [Link Generators](../../05_Objects/01_Object_Classes/05_Class_Settings/30_Link_Generator.md)\n\n\n\n\n\n", "# Upgrade Notes\n\n## 10.5.21\n- [Assets] The Asset `Import from Server` feature is now only available for admins. It will be removed in Pimcore 11\n- [Editable] Removed all `on*` attributes from the `$allowedAttributes` list due to security reasons. These attributes are not allowed anymore in the \"attributes\" field.\n\n## 10.5.13\n- [Web2Print] Print document twig expressions are now executed in a sandbox with restrictive security policies (just like Sending mails and Dataobject Text Layouts introduced in 10.5.9).\n\n\n## 10.5.10\n- [DataObject] Deprecated: Loading non-Concrete objects with the Concrete class will not be possible in Pimcore 11.\n\n## 10.5.9\n- [Twig] Sending mails and Dataobject Text Layouts, which allow rendering user controlled twig templates are now executed in a sandbox with restrictive security policies for tags, filters, functions.\n         Please use following configuration to allow more in template rendering:\n  ```yaml\n  pimcore:\n        templating_engine:\n            twig:\n              sandbox_security_policy:\n                tags: ['if']\n                filters: ['upper']\n                functions: ['include', 'path', 'range']\n  ```\n\n## 10.5.8\n- [Nginx] Static pages nginx config has been updated to fix the issue for home static page generation. please adapt the following configuration:\n```nginx\nmap $args $static_page_root {\n    default                                 /var/tmp/pages;\n    \"~*(^|&)pimcore_editmode=true(&|$)\"     /var/nonexistent;\n    \"~*(^|&)pimcore_preview=true(&|$)\"      /var/nonexistent;\n    \"~*(^|&)pimcore_version=[^&]+(&|$)\"     /var/nonexistent;\n}\n\nmap $uri $static_page_uri {\n    default                                 $uri;\n    \"/\"                                     /%home;\n}\n\n.....\n\nlocation / {\n    error_page 404 /meta/404;\n\n    try_files $static_page_root$static_page_uri.html $uri /index.php$is_args$args;\n}\n```\n\n## 10.5.0\n- [Class Definitions] Resolving classes or services will no longer catch exceptions in Pimcore 11. Remove invalid references from class definitions.\n- [Sessions] Changed default value for `symfony.session.cookie_secure` to `auto`\n- [Listings] `JsonListing` class is deprecated. Please use `CallableFilterListingInterface`, `FilterListingTrait` and `CallableOrderListingInterface`, `OrderListingTrait` instead.\n  For examples please see existing classes, e.g. `Pimcore\\Model\\Document\\DocType\\Listing`.\n\n- [Security] It is recommended to use new [Authenticator based system](https://pimcore.com/docs/pimcore/current/Development_Documentation/Development_Tools_and_Details/Security_Authentication/Authenticator_Based_Security.html) for authentication/authorization.\n  To use new authenticator, add following symfony config in `security.yaml`:\n    ```yaml\n    security:\n        enable_authenticator_manager: true\n    ```\n  `[Authentication] PreAuthenticatedAdminSessionListener` has been deprecated and will be removed in Pimcore 11.\n- [Elements] Calling the methods `getById` and `getByPath` on `Asset`,`Document`,`DataObject` with second boolean parameter `$force` and `Element\\Service::getElementById` with third boolean  parameter `$force` is deprecated and will throw exception in Pimcore 11. Instead pass the parameter as associative array with `$force` value.\n  e.g. Before \n   ```php\n    Asset::getById($id, true);\n    Document::getById($id, true);\n    DataObject::getById($id, true);\n  \n    Asset::getByPath($path, true);\n    Document::getByPath($path, true);\n    DataObject::getByPath($path, true);\n  \n    Element\\Service::getElementById::getElementById($type, $id, $true);\n   ```\n    After\n   ```php\n    Asset::getById($id, ['force' => true]);\n    Document::getById($id, ['force' => true]);\n    DataObject::getById($id, ['force' => true]);\n  \n    Asset::getByPath($path, ['force' => true]);\n    Document::getByPath($path, ['force' => true]);\n    DataObject::getByPath($path, ['force' => true]);\n  \n    Element\\Service::getElementById($type, $id, ['force' => true]);\n   ```\n- [Navigation Builder] Calling the method `Pimcore\\Navigation\\Builder::getNavigation()` using extra arguments is deprecated and will be removed in Pimcore 11. Instead of using the extra arguments, it is recommended to call the method using the params array. eg: Currently, the `getNavigation()` method can be called by passing the config params `activeDocument`, `navigationRootDocument`, `htmlMenuIdPrefix`, `pageCallback`, `cache`, `maxDepth`, `cacheLifetime` and `markActiveTrail` as the arguments i.e `getNavigation($activeDocument, $navigationRootDocument, $htmlMenuIdPrefix, $pageCallback, $cache, $maxDepth, $cacheLifetime, $markActiveTrail)`. According to the new implementation you should call the method like `getNavigation($params)` where `$params` should be an associative array with the keys `active`, `root`, `htmlMenuPrefix`, `pageCallback`, `cache`, `maxDepth`, `cacheLifetime` and `markActiveTrail`.\n  \n- [Runtime Cache] The trait `\\Pimcore\\Cache\\RuntimeCacheTrait` has been deprecated because of its ambiguous naming and usage of persisted cache along with the runtime object cache.\n  It is recommended to use `\\Pimcore\\Cache\\RuntimeCache` instead of this trait. For persisted cache, please use `\\Pimcore\\Cache` instead.\n- [Sitemap] Pimcore is now also supporting Presta/Sitemap `^3.2` (which supports Symfony 6 and uses max level of PHPStan).\n  Please note, if the routing import config is in use, it is recommended to correct the config path (by removing `/Resources`) to follow the [new folder tree structure](https://github.com/prestaconcept/PrestaSitemapBundle/releases/tag/v3.0.0),\n  eg. \"@PrestaSitemapBundle/~~Resources/~~config/routing.yaml\", to ensure a smoother upgrade to upcoming major release.\n- [Backend search] `key` and `index` columns have been added to the search index. Run `./bin/console pimcore:search-backend-reindex` to reindex.\n- [Cache] Pimcore use DoctrineDbalAdapter instead of PdoAdapter by default now.\n- Removed `ocramius/package-versions` dependency. If you rely on it, please add it to your own `composer.json`.\n- [Permissions] Added an extra check about [system permission](https://pimcore.com/docs/pimcore/current/Development_Documentation/Administration_of_Pimcore/Users_and_Roles.html#page_System-Permissions) in element `isAllowed()` method, please make sure your custom implementations are not affected by this change. \n  Listing, grid, tree view are not severely affected as the main permission is checked on a Kernel event level that prevents the page to be shown and prevents any process that iterate isAllowed() calls. \n  The only cases could be affected are those where the workspace are set but master permissions are disallowed, before this change, it could lead to (not intended) false positive.\n- [Security/User] `UsernameNotFoundException` (deprecated since Symfony 5.3) occurences have been replaced with `UserNotFoundException`.\n- [Deprecated] Generate type declarations option in class definition is deprecated, because type declarations will always be added with Pimcore 11\n- [Application Logger] File Objects are now stored in the flysystem. Due some incompatibilities of checking files by modification date (cloud storages) and for performance issues (scan folders/file), the cleanup task now do not run in time range from [midnight and 4 a.m.](https://github.com/pimcore/pimcore/pull/7164) anymore, but it deletes the file matching the column in the database as soon as the database entries are archived.\n- [Session] Implementing Session Configurator with tag `pimcore.session.configurator` to register session bags, is deprecated and will be removed in Pimcore 11.\n  Implement an [EventListener](https://github.com/pimcore/pimcore/blob/10.5/bundles/EcommerceFrameworkBundle/EventListener/SessionBagListener.php) to register a session bag before the session is started.\n- [Ecommerce][PricingManager] Token condition is deprecated and will be removed in Pimcore 11.\n- Parameter `pimcore.admin.session.attribute_bags` is deprecated and will be removed in Pimcore 11.\n- [JS Events/Disabled] The plugin broker for fire events has been disabled. \nThe plugins are still supported, but they are deprecated and will be removed in Pimcore 11   \nPlease use [event listener](../../20_Extending_Pimcore/13_Bundle_Developers_Guide/06_Event_Listener_UI.md) instead of plugins for JS events.\n- Extension Manager - Registering or managing bundles/areabricks through `Tools -> Bundles & Bricks` or manually through `var/config/extensions.php` is deprecated and will not work on Pimcore 11.\n  Please use `config/bundles.php` to register/manage bundles instead.\n- [Web2Print] Wkhtmltopdf Processor has been deprecated and will be removed in Pimcore 11. Please use HeadlessChrome or PDFreactor instead.\n- [Config] `Pimcore\\Config\\Config` has been deprecated and will be removed in Pimcore 11.\n- The recommended nginx config for static pages has been updated (the old one still works!) from\n  ```nginx\n  server {\n      ...\n\n      location @staticpage{\n          try_files /var/tmp/pages$uri.html $uri /index.php$is_args$args;\n      }\n\n      location / {\n          error_page 404 /meta/404;\n          error_page 418 = @staticpage;\n          if ($args ~* ^(?!pimcore_editmode=true|pimcore_preview|pimcore_version)(.*)$){\n              return 418;\n          }\n          try_files $uri /index.php$is_args$args;\n      }\n\n      ...\n  }\n  ```\n  to\n  ```nginx\n  map $args $static_page_root {\n      default                                 /var/tmp/pages;\n      \"~*(^|&)pimcore_editmode=true(&|$)\"     /var/nonexistent;\n      \"~*(^|&)pimcore_preview=true(&|$)\"      /var/nonexistent;\n      \"~*(^|&)pimcore_version=[^&]+(&|$)\"     /var/nonexistent;\n  }\n\n  server {\n      ... \n\n      location / {\n          error_page 404 /meta/404;\n          try_files $static_page_root$uri.html $uri /index.php$is_args$args;\n      }\n\n      ...\n  }\n  ```\n- [Elements] Deprecated setting the parent id to 1 (root node), when an element with a non-existing parent id gets created.\n- [Custom Layouts] Deprecated Class `ClassLayoutDefinitionManager` and constant `PIMCORE_CUSTOMLAYOUT_DIRECTORY`.\n- [Workflows] Deprecated classes Pimcore\\Model\\Workflow, Pimcore\\Model\\Workflow\\Dao, Pimcore\\Model\\Workflow\\Listing\\Dao and Pimcore\\Model\\Workflow\\Listing. \nPlease check the documentation on how to work with workflows: [Workflow Management](../../07_Workflow_Management/README.md).\n- [Maintenance] Deprecated passing `--force` option to maintenance command.\n- [Exception] `MissingDependencyException` has been deprecated and will be removed in Pimcore 11.\n\n## 10.4.2\n- When maintenance mode is active, all commands are prevented from starting (not just commands inheriting from `AbstractCommand`).\n  Until now, some commands (e.g. `messenger:consume`) could be executed even if the system was in maintenance mode.\n  To circumvent, use `--ignore-maintenance-mode` option, which is available to all commands.\n\n## 10.4.0\n- **Important**: The folder structure for storing thumbnails changed, please run `bin/console pimcore:migrate:thumbnails-folder-structure` after the update to copy existing thumbnails to new folder structure. If you're dealing with a huge amount of thumbnails you should consider that this change might increase the load on your system as well as page-loading times during the migration command is executed, as non-existing thumbnails are then generated on demand. \n- [Image Optimizer] Optimize Image messages are now routed to different queue\n  instead of `pimcore_core`. If you want to handle image optimize messages, then it is required to add specific option `pimcore_image_optimize` to the command `bin/console messenger:consume pimcore_core pimcore_maintenance pimcore_image_optimize`. Also run command `bin/console messenger:consume pimcore_core` before the upgrade, so that ImageOptimize messages on the queue gets consumed.\n- **Important**: [Object bricks] A call to the object brick\u00b4s getter method no longer returns object bricks marked for deletion. \n  To restore the original behavior pass \"true\" to the getter method\u00b4s `$includeDeletedBricks` argument. \n- [Image Optimizer] Image Optimizer services (e.g. PngCrushOptimizer, JpegoptimOptimizer etc.) are deprecated and will be\n  removed in Pimcore 11. Use Pimcore\\Image\\Optimizer\\SpatieImageOptimizer service instead.\n  Currently, the existing optimizers are disabled. If you still want to use them, please re-enable them by tagging the services accordingly (in your `services.yaml`):\n```yaml\n    Pimcore\\Image\\Optimizer\\CjpegOptimizer:\n        tags:\n            - { name: pimcore.image.optimizer }\n\n    Pimcore\\Image\\Optimizer\\JpegoptimOptimizer:\n        tags:\n            - { name: pimcore.image.optimizer }\n\n    Pimcore\\Image\\Optimizer\\PngCrushOptimizer:\n        tags:\n            - { name: pimcore.image.optimizer }\n```\n\n- [Elements] Fixed the behavior of `setId()` method, so not to cast null Id to 0 as explained below:\n```php\n$object = new \\Pimcore\\Model\\DataObject();\n$object->setId(null);\n\n//before:\n$oldId = $object->getId(); //returns 0\n\n//after:\n$newId = $object->getId(); //returns null\n```\n- [Asset] Deprectaed the `marshal()/unmarshal()` methods for metadata, use `normalize()/denormalize()` methods instead.\n\n## 10.3.0\n- **Important**: [Symfony Messenger] Pimcore Core & Maintenance messages are now routed to different queues instead of default. It is\n  required to run command `bin/console messenger:consume pimcore_core pimcore_maintenance` before the upgrade, so that\n  the messages on default queue gets consumed.\n- **Important**: In preparation of upgrade to Symfony 6, return types must be added to methods which are extended from Symfony. In Pimcore, following changes are applied:\n    - Return type added to safe methods, which are `final` & marked as `internal`.\n    - Return type hints are added as comments on the methods which are extendable and phpdocs are updated. These return types will be introduced in Pimcore 11. You must add return types, if you're extending any of these Pimcore classes. Please check changes [here](https://github.com/pimcore/pimcore/pull/10846/files)\n- [Documents] Introduced additional interfaces for editable methods `getDataEditmode()`, `rewriteIds()` & `load()`. Existing `method_exists` calls are deprecated and will be removed in Pimcore 11.\n- [Data objects] Default values now get saved to versions -> Restoring a version also restores the default values (before those fields were null after restoring)\n- Method `create()` from `Pimcore\\Model\\DataObject\\Classificationstore\\CollectionGroupRelation` and `Pimcore\\Model\\DataObject\\Classificationstore\\KeyGroupRelation` no longer saves the new object, but just returns the instance. Related changes can be found here: https://github.com/pimcore/pimcore/pull/11326/files \n- Method `Kernel::getRootDir()` is deprecated, use `Kernel::getProjectDir()` instead. For more details, please check [10923](https://github.com/pimcore/pimcore/pull/10923).\n\n## 10.2.0\n- [Maintenance] Maintenance tasks are now handled with Symfony Messenger. The `pimcore:maintenance` command will add the maintenance messages to the bus and runs them afterwards immediately from the queue. However it's recommended to setup independent workers that process the queues, by running `bin/console messenger:consume pimcore_core pimcore_maintenance` (using e.g. Supervisor) and adding `--async` option to the `pimcore:maintenance` command that stops the maintenance command to process the queue directly. Details about setting it up for production environments, please check [Symfony Messenger Component docs](https://symfony.com/doc/current/messenger.html#deploying-to-production).\n- [Maintenance] Image Optimizer maintenance task moved to Messages which are consumed by Symfony Messenger. If you want to disable the image optimization, please add config to avoid dispatching the messages on messenger bus:\n```yaml\npimcore:\n    assets:\n        image:\n            thumbnails:\n                image_optimizers:\n                    enabled: false\n```\n- [Configs] The default storage for configurations is now `yaml` files in the `var/config` directory and are loaded as Symfony Config. The old `php` config-files continue to work, however, changes on existing configurations as well as new configurations are written to `yaml`.  \n**Important notice**: writing configs to `yaml` is only supported if the kernel is in debug mode, because changes of the config need a rebuild of the container configuration.  \nIf you require to change the config on production environments we recommend to change the storage to `settings-store` as described [here](../../21_Deployment/03_Configuration_Environments.md). \n- [Asset] Pimcore now automatically supports AVIF image format for thumbnails using `auto` format (only `Imagick`). To disable AVIF please [follow this instructions](../../04_Assets/03_Working_with_Thumbnails/01_Image_Thumbnails.md).  \n- [DataObject API] There is change in behavior when validating the inherited dataobjects & variants. As before, the inherited object gets saved with invalid attribute value, if the parent object has a valid value for the same attribute. Now, the API will throw validation exception, if the inherited object has an invalid value. please see https://github.com/pimcore/pimcore/pull/10529 \n\n## 10.1.0\n- [Core] Additional interfaces for data-types introduced. Existing `method_exists` calls are deprecated and will\n  be removed in Pimcore 11.\n- [InstallBundle] Installer preconfiguration path changed from `app/config/installer.yml` to `config/installer.yaml`.\n- [Core] composer.json: `symfony/symfony` package requirement has been replaced by `symfony/*` individual bundles. **Note for Bundles**: if you are using `symfony/symfony` dependency, it will now conflict with package `pimcore/pimcore`. Please move your bundle requirements to Symfony individual component packages.\n- [[Ecommerce][TrackingManager] event name in method `trackCheckoutComplete()` changed from `checkout` to `purchase` for `GoogleTagManager` implementation](https://github.com/pimcore/pimcore/pull/9366/files).\n- [Glossary] `pimcoreglossary()` tag has been deprecated in favor of `pimcore_glossary` Twig filter and will be removed in Pimcore 11.\n- Bumped `google/apiclient` to 2.10 version - Use proper namespaces for API references.\n- Bumped `endroid/qr-code` to version 4.\n- The `\\Pimcore\\Routing\\Dynamic\\DocumentRouteHandler::addDirectRouteDocumentType()` method is deprecated, use `pimcore.routing.direct_route_document_types` config instead.\n- [[Ecommerce][TrackingManager] event name in method `trackCheckoutComplete()` changed from `checkout` to `purchase` for `GoogleTagManager` implementation](https://github.com/pimcore/pimcore/pull/9366/files)\n- [Password encoding] Pimcore Password Encoder factory has been deprecated in favor of new Password Hasher factory, to align with Symfony authentication system. The default factory is used as default and to switch to new Password hasher factory, please enable through config `factory_type` as follows:\n```yaml\npimcore:\n    security:\n        factory_type: password_hasher\n\n        # the password hasher factory as defined in services.yml\n        password_hasher_factories:\n            App\\Model\\DataObject\\User: website_demo.security.password_hasher_factory\n```\nand use new service handler:\n```yaml\nservices:\n    website_demo.security.password_hasher_factory:\n        class: Pimcore\\Security\\Hasher\\Factory\\UserAwarePasswordHasherFactory\n        arguments:\n            - Pimcore\\Security\\Hasher\\PasswordFieldHasher\n            - ['password']\n```\n- [Session] Default setting for `framework.session.cookie_samesite` changed to `strict`. \n  For more information about the possible impact on your project, please have a look at the [docs of set-cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite). \n  If you prefer to stay on the old session cookie behavior, please add the following to your project configuration: \n```yaml\nframework:\n    session:\n        cookie_samesite: 'lax'\n```  \n\n## 10.0.0\n\n### System Requirements\n     - PHP >= 8.0\n     - Apache >= 2.4\n\n### Database\n    - MariaDB >= 10.3\n    - MySQL >= 8.0\n    - Percona Server (supported versions see MySQL)\n### Changes\n- Bumped `symfony/symfony` to \"^5.2.0\". Pimcore X will only support Symfony 5.\n- ExtJS bumped to version 7.\n- Bumped:\n    - `guzzlehttp/guzzle` to \"^7.2\"\n    - `sensio/framework-extra-bundle` to \"^6.1\"\n    - `twig/twig` to \"^3.0\"\n    - `egulias/email-validator` to \"^3.0.0\"\n    - `onnov/detect-encoding` to \"^2.0\"\n    - `mjaschen/phpgeo` to \"^3.0\"\n    - `matomo/device-detector` to \"^4.0\"\n    - `ext-imagick` to \"^3.4.0\" (suggest)\n    - `lcobucci/jwt` to \"^4.0\"\n\n- `Pimcore\\Model\\DataObject\\ClassDefinition\\Data::isEqual()` has been removed. For custom data types, implement `\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\EqualComparisonInterface` instead.\n- `Pimcore\\Model\\Document\\Editable`(former. `Tags`) properties visibility changed from `protected` to `private`.\n- [Templating]\n    - PHP templating engine (including templating helpers & vars) has been removed to support Symfony 5. Use Twig or Php Templating Engine Bundle(enterprise) instead.\n    - Removed ViewModel.\n    - Removed Auto view rendering.\n    - Removed Placeholder support. Use Twig Parameters instead.\n\n- `Pimcore\\Model\\Tool\\Tracking\\Event` has been removed.\n- `Pimcore\\Tool\\Archive` has been removed.\n- The object query table will now consider the fallback language. If you want to keep the old behavior set `pimcore.objects.ignore_localized_query_fallback` in your configuration.\n- Removed QR Codes.\n- Remove Linfo Integration.\n- [Ecommerce][IndexService] Removed FactFinder integration.\n- Removed `Pimcore\\Model\\Tool\\Lock`.\n- Removed HybridAuth integration.\n- Removed `Pimcore\\Model\\Document\\Tag\\*` classes. Use `Pimcore\\Model\\Document\\Editable\\*` classes instead.\n- Removed `pimcore_tag_` css classes, use `pimcore_editable_` css instead.\n- Removed REST Webservice API.\n- Removed Legacy [Service aliases](https://github.com/pimcore/pimcore/pull/7281/files).\n- [Document] Removed support for edit.php on Area-Bricks. Use new feature: Editable Dialog Box instead.\n- [Glossary] Removed support for `Acronym`. Use `Abbr` instead.\n- [Element] Added `setProperties()` and `setProperty()` methods to `Pimcore\\Model\\Element\\ElementInterface`.\n- [Element] `setProperty()` method param `$inheritable` defaults to false. Adding a new property will create a non-inheritable property for documents.\n- [Document] Removed Editable Naming Strategy Support.\n- Removed Cookie Policy Info Bar Integration.\n- Removed `\\Pimcore\\Browser` class. Use `\\Browser` instead.\n- Method signature `PageSnippet::setEditable(string $name, Editable $data)` has been changed to `PageSnippet::setEditable(Editable $editable)`.\n- Removed Tag & Snippet Management.\n- Removed `Pimcore\\Controller\\EventedControllerInterface`. Use `Pimcore\\Controller\\KernelControllerEventInterface` and `Pimcore\\Controller\\KernelResponseEventInterface` instead.\n- Doctrine dependencies bumped to latest major version:\n    - \"doctrine/common\": \"^3.0.0\"\n    - \"doctrine/inflector\": \"^2.0.0\"\n- Removed service `pimcore.implementation_loader.document.tag`. Use `Pimcore\\Model\\Document\\Editable\\Loader\\EditableLoader` instead.\n- Removed Pimcore Bundles generator and command `pimcore:generate:bundle`.\n- `Pimcore\\Controller\\Controller` abstract class now extends `Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController` instead of `Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller`.\n- `Pimcore\\Translation\\Translator::transChoice()` & `Pimcore\\Bundle\\AdminBundle\\Translation\\AdminUserTranslator::transChoice()` methods have been removed. Use `trans()` method with `%count%` parameter.\n- Removed `pimcore.documents.create_redirect_when_moved` config. Please remove from System.yml.\n- Removed `pimcore.workflows.initial_place` config. Use `pimcore.workflows.initial_markings` instead.\n- `WebDebugToolbarListenerPass` has been removed and `WebDebugToolbarListener` has been marked as final & internal.\n- Bumped `sabre/dav` to ^4.1.1\n- Removed `Pimcore\\Model\\Element\\Reference\\Placeholder` class.\n- Removed `pimcore.routing.defaults`. Use `pimcore.documents.default_controller` instead.\n- Removed `\\Pimcore\\Tool::getRoutingDefaults()`, `PageSnippet::$module|$action|get/setAction()|get/setModule()`, `DocType::$module|$action|get/setAction()|get/setModule()`, `Staticroute::$module|$action|get/setAction()|get/setModule()`.\n- Removed `\\Pimcore\\Tool::getValidCacheKey/()`, use `preg_replace('/[^a-zA-Z0-9]/', '_', $key)` instead.\n- Removed `\\Pimcore\\Tool::isValidPath/()`, use `\\Pimcore\\Model\\Element\\Service::isValidPath()` instead.\n- Deprecated `\\Pimcore\\Model\\Element\\Service::getSaveCopyName()`, use `getSafeCopyName()` instead.\n- Deprecated methods `getObject()` and `setObject()` on the classes `\\Pimcore\\Model\\Document\\Link` and `\\Pimcore\\Model\\DataObject\\Data\\Link`, use `getElement()` and `setElement()` instead.\n- Using dynamic modules, controllers and actions in static routes (e.g. `%controller`) does not work anymore.\n- Removed `\\Pimcore\\Controller\\Config\\ConfigNormalizer`.\n- Removed `pimcore_action()` Twig extension. Use Twig `render()` instead.\n- Removed `\\Pimcore\\Console\\Log\\Formatter\\ConsoleColorFormatter`\n- Removed `\\Pimcore\\Console\\CliTrait`, use `php_sapi_name() === 'cli'` instead.\n- Removed `\\Pimcore\\Console\\Dumper`, use Symfony's `VarDumper` instead.\n- Removed `\\Pimcore\\Google\\Webmastertools`, use `\\Pimcore\\Config::getReportConfig()->get('webmastertools'')` instead.\n- Removed `\\Pimcore\\Helper\\JsonFormatter`, use `json_encode($data, JSON_PRETTY_PRINT)` instead.\n- Removed `\\Pimcore\\Log\\Handler\\Mail`, there's no replacement for this internal class.\n- Removed `\\Pimcore\\File::isIncludeable()` method, there's no replacement.\n- Removed `\\Pimcore\\DataObject\\GridColumnConfig\\AbstractConfigElement` just implement `\\Pimcore\\DataObject\\GridColumnConfig\\ConfigElementInterface` instead.\n- [Documents] Renderlet Editable: removed `action` & `bundle` config. Specify controller reference, e.g. `App\\Controller\\FooController::myAction`\n- Bumped `codeception/codeception` to \"^4.1.12\".\n- Pimcore Bundle Migrations: Extending the functionality of `DoctrineMigrationsBundle` is not any longer possible the way we did it in the past. Therefore we're switching to standard Doctrine migrations, this means also that migration sets are not supported anymore and that the available migrations have to be configured manually or by using flex.\n    ```yaml\n      doctrine_migrations:\n          migrations_paths:\n              'Pimcore\\Bundle\\DataHubBundle\\Migrations': '@PimcoreDataHubBundle/Migrations'\n              'CustomerManagementFrameworkBundle\\Migrations': '@PimcoreCustomerManagementFrameworkBundle/Migrations'\n    ```\n  However, we've extended the doctrine commands to accept an optional `--prefix` option, which let's you filter configured migration classes. This is in a way an adequate replacement for the `-s` (sets) option.\n\n  `./bin/console doctrine:migrations:list --prefix=Pimcore\\\\Bundle\\\\CoreBundle`\n\n- [Ecommerce] Added `setItems($items)` method `CartInterface`, `getRule()` to `ModificatedPriceInterface` & `getId()` method to `ProductInterface`.\n- [Data Objects] Relation Data-Types: throws exception if object without an ID was assigned. e.g.\n    ```php\n    $newObject = new MyDataObject();\n    $existingObject->setMyRelations([$newObject]);\n    $existingObject->save(); //validation error\n    ```\n- [Data Objects] ManyToMany Relation Types: throws exception if multiple assignments passed without enabling Multiple assignments on class definition.\n- [Data Objects] ReverseManyToManyObjectRelation - now supports reverse relations from ManyToOneRelation field and has been renamed to ReverseObjectRelation with BC layer.\n- [Data Object] Table Data-Type always return an array.\n- [Data Object] `Model::getById()` & `Model::getByPath()` do not catch exceptions anymore.\n- Added methods `getArgument($key)`, `setArgument($key, $value)`, `getArguments()`, `setArguments(array $args = [])`, `hasArgument($key)` to `Pimcore\\Model\\Element\\ElementInterface\\ElementEventInterface`.\n- [Ecommerce] Changed name of interfaces from I* to *Interface .e.g. `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\ICheckoutable` => `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\CheckoutableInterface`\n- Removed `cache/tag-interop`dependency.\n- [Cache] `Pimcore\\Cache` is directly based on Symfony/Cache. If you have custom cache pool configured under `pimcore.cache.pools` then change it to Symfony Config `framework.cache.pools`. [Read more](https://pimcore.com/docs/pimcore/master/Development_Documentation/Development_Tools_and_Details/Cache/index.html#page_Configuring-the-cache)\n- Methods `checkCsrfToken()`, `getCsrfToken()`, `regenerateCsrfToken()` methdos have been removed from `Pimcore\\Bundle\\AdminBundle\\EventListener\\CsrfProtectionListener`. Use `Pimcore\\Bundle\\AdminBundle\\Security\\CsrfProtectionHandler` instead.\n- Bumped `phpunit/phpunit` & `codeception/phpunit-wrapper` to \"^9\"\n- Replaced `html2text/html2text` with `soundasleep/html2text`. Removed methods from `Pimcore\\Mail`: `determineHtml2TextIsInstalled()`, `setHtml2TextOptions($options = [])`, `getHtml2TextBinaryEnabled()`, `enableHtml2textBinary()`, `getHtml2textInstalled()`.\n- Replaced `doctrine/common` with `doctrine/persistence`.\n- [Asset] Image thumbnails: Using getHtml() will return `<picture>` tag instead of `<img>` tag.\n- [Asset] Config option `pimcore.assets.image.thumbnails.webp_auto_support` was removed, since the browser detection is not needed anymore using the `<picture>` tags for thumbnails. \n- [Ecommerce] Marked `AbstractOrder` & `AbstractOrderItem` classes as abstract.\n    Changes on `AbstractOrder` class:\n    - Added: `getCartHash()`, `getComment()`, `setComment()`\n    - Removed: `getDeliveryEMail()`, `setDeliveryEMail()`, `getCartModificationTimestamp()`\n- [Data Objects] Data-Types: Removed getPhpdocType() BC layer\n- [Ecommerce][FilterService] Added method `getFilterValues()` to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\FilterService\\FilterType\\AbstractFilterType`\n- [Data Objects] OwnerAwareFieldInterface: added methods `_setOwner($owner)`, `_setOwnerFieldname(?string $fieldname)`, `_setOwnerLanguage(?string $language)`, `_getOwner()`, `_getOwnerFieldname()`, _getOwnerLanguage() and removed method `setOwner($owner, string $fieldname, $language = null)`.\n- [Translations] Remove `pimcore.translations.case_insensitive` support.\n- [Core] Folder structure updated to support Symfony Flex. Changes as per [Symfony Docs](https://symfony.com/doc/5.2/setup/flex.html)\n- [Translations] `Pimcore\\Model\\Translation\\AbstractTranslation`, `Pimcore\\Model\\Translation\\Admin` and `Pimcore\\Model\\Translation\\Website` with corresponding listing classes have been removed. Use new class `Pimcore\\Model\\Translation` with domain support (`Translation::DOMAIN_DEFAULT` or `Translation::DOMAIN_ADMIN`).\n- Replaced `scheb/two-factor-bundle` with `scheb/2fa-bundle`, `scheb/2fa-google-authenticator` & `scheb/2fa-qr-code`.\n- Removed Laminas Packages.\n- Removed Zend Compatibility Query Builder.\n- [Ecommerce] Payment Providers: Removed `WirecardSeamless`, `Qpay`, `Paypal` integration and moved to a separate bundle:\n    - `Datatrans` => https://github.com/pimcore/payment-provider-datatrans\n    - `Heidelpay` => https://github.com/pimcore/payment-provider-unzer\n    - `Hobex` => https://github.com/pimcore/payment-provider-hobex\n    - `Klarna` => https://github.com/pimcore/payment-provider-klarna\n    - `Mpay24Seamless` => https://github.com/pimcore/payment-provider-mpay24-seamless\n    - `OGone` => https://github.com/pimcore/payment-provider-ogone\n    - `PayPalSmartPaymentButton` => https://github.com/pimcore/payment-provider-paypal-smart-payment-button\n    - `PayU` => https://github.com/pimcore/payment-provider-payu\n\n- [Core] Security configurations not merged anymore from custom bundles.\n- `twig/extensions` dependency has been removed.\n- Removed legacy transliterator (changes related to `\\Pimcore\\Tool\\Transliteration::_transliterationProcess`).\n- Config: Invalid pimcore configurations will result in compile error:\n    ```yaml\n      pimcore:\n         xyz:\n            xyz:\n    ```\n- [Data Objects] Removed `getFromCsvImport()` method from data-types.\n- Replaced `Ramsey/Uuid` with `Symfony/Uuid`.\n- Matomo Integration has been removed.\n- `Pimcore\\Tool\\Console::exec()` method has been removed. Use Symfony\\Component\\Process\\Process instead.\n- `\\Pimcore\\Tool\\Console::getOptions()` method has been removed.\n- `\\Pimcore\\Tool\\Console::getOptionString()` method has been removed.\n- `\\Pimcore\\Tool\\Console::checkCliExecution()` method has been removed.\n- `Pimcore\\Twig\\Extension\\Templating\\Navigation::buildNavigation()` method has been removed.\n- `Pimcore\\Tool\\Mime` class has been removed. Use `Symfony\\Component\\Mime\\MimeTypes` instead.\n- [Documents] Areabricks: location changed from `Areas` to `areas` with BC layer.\n- [Documents] Areablocks: Adding a brick to areablocks will not trigger reload by default anymore and should be configured per Brick.\n- SQIP support has been removed.\n- `Thumbnail::getHtml()` doesn't accept direct pass of HTML attributes such as `class` or `title` anymore, use `imageAttributes` or `pictureAttributes` instead.\n- Removed methods `getForcePictureTag()` and `setForcePictureTag()` from `\\Pimcore\\Model\\Asset\\Image\\Thumbnail\\Config`\n- `\\Pimcore\\Model\\Document\\Editable\\Block\\AbstractBlockItem::getElement()` has been removed, use `getEditable()` instead.\n- `\\Pimcore\\Model\\DataObject\\Service::removeObjectFromSession()` has been removed, use `removeElementFromSession()` instead.\n- `\\Pimcore\\Model\\DataObject\\Service::getObjectFromSession()` has been removed, use `getElementFromSession()` instead.\n- `\\Pimcore\\Model\\Asset\\Image\\Thumbnail\\Config::setColorspace()` has been removed\n- `\\Pimcore\\Model\\Asset\\Image\\Thumbnail\\Config::getColorspace()` has been removed\n- `\\Pimcore\\Model\\DataObject\\ClassDefinition\\Data\\DataInterface` has been removed\n- `\\Pimcore\\Model\\Asset\\Listing::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Model\\Document\\Listing::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Model\\DataObject\\Listing::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Google\\Cse::getPaginatorAdapter` has been removed, use `knplabs/knp-paginator-bundle` instead.\n- `\\Pimcore\\Helper\\RobotsTxt` has been removed\n- `\\Pimcore\\Tool\\Frontend::getSiteKey()` method has been removed.\n- `\\Pimcore\\Model\\User::getUsername()` has been removed, use `User::getName()` instead.\n- `\\Pimcore\\Cache\\Runtime::get('pimcore_editmode')` isn't supported anymore, use `EditmodeResolver` service instead.\n- [Documents] `Editable::factory()` was removed, use `EditableLoader` service instead.\n- [Data Objects] Removed CSV import feature. Use https://github.com/pimcore/data-importer or https://github.com/w-vision/DataDefinitions instead.\n- [DataObjects] marked `Pimcore\\DataObject\\GridColumnConfig\\Operator` operator classes as final and internal\n- [DataObjects] Calculator classes of Calculated Values must implement the `Pimcore\\Model\\DataObject\\ClassDefinition\\CalculatorClassInterface` now.\n- [DataObjects] PHP Class `Pimcore\\Model\\DataObject\\Data\\Geopoint` has been replaced with `GeoCoordinates`. Changed the signature of `__construct`.\n- Added `Pimcore\\Bundle\\EcommerceFrameworkBundle\\FilterService\\FilterType\\AbstractFilterType::getFilterValues()` with the same signature as `getFilterFrontend()`. To upgrade, rename `getFilterFrontend()` to `getFilterValues()` and remove the rendering stuff to just return the data array.\n\n    Before:\n    ```php\n    public function getFilterFrontend(AbstractFilterDefinitionType $filterDefinition, ProductListInterface $productList, $currentFilter)\n    {\n        // ...\n        return $this->render($this->getTemplate($filterDefinition), [\n            //...\n        ]);\n    }\n    ```\n    After:\n    ```php\n    public function getFilterValues(AbstractFilterDefinitionType $filterDefinition, ProductListInterface $productList, array $currentFilter): array\n    {\n        // ...\n        return [\n            //...\n        ];\n    }\n    ```\n- Added Validation for Geo datatypes\n    - for Geopolyline and Geopolygon invalid data doesn't get serialized 1:1 anymore\n    - for Geobounds and Geopoint invalid data doesn't get dropped silently anymore\n- Calling `$imageAsset->getThumbnail('non-existing-thumbnail-definition)` with a non-existing thumbnail definition will now throw an exception. Same goes for video assets and video image thumbnails.\n- Removed grid column operator `ObjectBrickGetter` since it is obsolete\n- Grid operator `AnyGetter` available only for admin users from now on\n- [Ecommerce] Added `getAttributeConfig` method to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ConfigInterface` interface\n- [Ecommerce] Added `getClientConfig` method to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ElasticSearchConfigInterface`\n- [Ecommerce] Added abstract method `setSuccessorOrder` to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\AbstractOrder`\n- [Ecommerce] Indexing doesn't catch any exceptions that occur during preprocessing of attributes in BatchProcessing workers (e.g. elasticsearch).\n  You can change that behavior with event listeners.\n- [Ecommerce] Added abstract method `setCartHash` to `Pimcore\\Bundle\\EcommerceFrameworkBundle\\Model\\AbstractOrder`\n- [Ecommerce] Added `getFieldNameMapped` to ` Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ElasticSearchConfigInterface`\n- [Ecommerce] Added `getReverseMappedFieldName` to ` Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\Config\\ElasticSearchConfigInterface`\n- [Ecommerce] Changed tenant config type hint to `FindologicConfigInterface` in `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IndexService\\ProductList\\DefaultFindologic::__construct`\n- [Ecommerce] Changed price fields `totalNetPrice` and `totalPrice` of `OnlineShopOrderItem` to decimal.\n- [Ecommerce] Removed deprecated configuration options `enabled`, `pricing_manager_id` and `pricing_manager_options` for pricing_manager.\n  Use tenant specific options.\n- [Ecommerce] Removed deprecated functions `get/setCurrentTenant` and `get/setCurrentSubTenant`\n  of `EnvironmentInterface`\n- [Ecommerce] Removed deprecated service alias for `Pimcore\\Bundle\\EcommerceFrameworkBundle\\IEnvironment`\n- [Ecommerce] Removed deprecated functions `getGeneralSearchColumns`, `createOrUpdateTable`, `getIndexColumns` and `getIndexColumnsByFilterGroup`\n  of `IndexService`\n- [Ecommerce] Removed deprecated function `getPaginatorAdapter` from\n  `ProductList\\MySql`, `ProductList\\DefaultFindologic`, `ProductList\\ElasticSearch\\AbstractElasticSearch`, `Token\\Listing` and `AbstractOrderList`\n- [Ecommerce] Removed deprecated functions `getCalculatedPrice` and `getCalculatedPriceInfo` from `AbstractSetProduct`\n- [Ecommerce] Removed deprecated protected function `getAvailableFilterValues` from `Order\\Listing`\n- [Ecommerce] Activated `generateTypeDeclarations` for all generated data object classes and field collections. For migration\n  activate `generateTypeDeclarations` to all Ecommerce Framework data object classes and update your source code accordingly.\n- [Ecommerce] Made methods abstract instead of throwing `UnsupportedException` where easily possible for model classes (`AbstractProduct`, `AbstractSetProduct`, `AbstractOfferToolProduct`, `AbstractOfferItem`, `AbstractOffer`).\n- [Ecommerce] Added type declarations to Ecommerce Framework product interfaces (`ProductInterface`, `IndexableInterface`, `CheckoutableInterface`).\n- [Ecommerce] Removed Elasticsearch 5 and 6 support\n- [Ecommerce] `getItemAmount` and `getItemCount` of `Carts` now require string parameter (instead of boolean). Use one of\n`CartInterface::COUNT_MAIN_ITEMS_ONLY`, `CartInterface::COUNT_MAIN_AND_SUB_ITEMS`, `CartInterface::COUNT_MAIN_OR_SUB_ITEMS`.\n- [Ecommerce] Removed legacy CheckoutManager architecture, migrate your project to V7 if not already\n  - `CancelPaymentOrRecreateOrderStrategy` is now default strategy for handling active payments\n  - Removed method `isCartReadOnly` from cart and `cart_readonly_mode` configuration option as readonly mode\n    does not exist anymore.\n  - Removed deprecated method `initPayment` from `PaymentInterface`\n- [Ecommerce] Removed deprecated `ecommerce:indexservice:process-queue` command,\n  use `ecommerce:indexservice:process-preparation-queue` or `ecommerce:indexservice:process-update-queue` instead\n- [Ecommerce] Removed deprecated `mapping` option in index attributes configuration (never worked properly anyway)\n- [Ecommerce] Removed deprecated `IndexUpdater` tool\n- [Ecommerce] Removed legacy BatchProcessing worker mode, product centric batch processing is now standard\n  - Removed abstract class `AbstractBatchProcessingWorker`, use `ProductCentricBatchProcessing` instead\n  - Removed methods from interface `BatchProcessingWorkerInterface` and its implementations:\n     - `BatchProcessingWorkerInterface::processPreparationQueue`\n     - `BatchProcessingWorkerInterface::processUpdateIndexQueue`\n  - Added methods to interface `BatchProcessingWorkerInterface`\n    - `BatchProcessingWorkerInterface::prepareDataForIndex`\n    - `BatchProcessingWorkerInterface::resetPreparationQueue`\n    - `BatchProcessingWorkerInterface::resetIndexingQueue`\n  - Removed constants\n     - `ProductCentricBatchProcessingWorker::WORKER_MODE_LEGACY`\n     - `ProductCentricBatchProcessingWorker::WORKER_MODE_PRODUCT_CENTRIC`\n  - Removed configuration node `worker_mode` in `index_service` configuration\n- [Ecommerce] Moved method `getIdColumnType` from `MysqlConfigInterface` to `ConfigInterface`. Since it was and still is\n  implemented in `AbstractConfig` this should not have any consequences.\n- [Ecommerce] Timestamp of CartItems is now in mirco seconds (existing data will be migrated).\n- [Ecommerce][PricingManager] Added two new interfaces `ProductActionInterface` and `CartActionInterface`. All actions\n  need to implement either of it - otherwise they will not be considered anymore in price calculation.\n- [Web2Print]\n   - Removed `PdfReactor8`, use `PdfReactor` instead.\n   - Removed PDFreactor version selection in web2print settings, since most current PDFreactor client lib\n     should be backwards compatible to older versions.\n- [Email & Newsletter] Swiftmailer has been replaced with Symfony Mailer. `\\Pimcore\\Mail` class now extends from `Symfony\\Component\\Mime\\Email` and new mailer service `Pimcore\\Mail\\Mailer` has been introduced, which decorates `Symfony\\Component\\Mailer\\Mailer`, for sending mails.\n\n    Email method and transport setting has been removed from System settings. Cleanup Swiftmailer config and setup mailer transports \"main\" & \"newsletter\" in config.yaml:\n    ```yaml\n    framework:\n        mailer:\n            transports:\n                main: smtp://user:pass@smtp.example.com:port\n                pimcore_newsletter: smtp://user:pass@smtp.example.com:port\n    ```\n    please see [Symfony Transport Setup](https://symfony.com/doc/5.2/mailer.html#transport-setup) for more information.\n\n    API changes:\n\n    Before:\n    ```php\n        $mail = new \\Pimcore\\Mail($subject = null, $body = null, $contentType = null, $charset = null);\n        $mail->setBodyText(\"This is just plain text\");\n        $mail->setBodyHtml(\"<b>some</b> rich text: {{ myParam }}\");\n        ...\n    ```\n    After:\n    ```php\n        $mail= new \\Pimcore\\Mail($headers = null, $body = null, $contentType = null);\n        $mail->text(\"This is just plain text\");\n        $mail->html(\"<b>some</b> rich text: {{ myParam }}\");\n        ...\n    ```\n\n    Before:\n    ```php\n      $mail->setFrom($emailAddress, $name);\n      $mail->setTo($emailAddress, $name);\n      ...\n    ```\n\n    After:\n    ```php\n      $mail->from(new \\Symfony\\Component\\Mime\\Address($emailAddress, $name));\n      $mail->to(new \\Symfony\\Component\\Mime\\Address($emailAddress, $name));\n      ...\n    ```\n- [Email & Newsletter] `\\Pimcore\\Mail::setEnableLayoutOnRendering/getEnableLayoutOnRendering()` methods have been removed, with Twig they are just not necessary anymore.\n- [Email & Newsletter] `\\Pimcore\\Mail::isValidEmailAddress()` method has been removed, use `EmailValidator` instead.\n- [Security] BruteforceProtectionHandler & BruteforceProtectionListener has been made final and marked as internal.\n- [JWTCookieSaveHandler] `Pimcore\\Targeting\\Storage\\Cookie\\JWT\\Decoder` has been removed in favor of `Lcobucci\\JWT\\Encoding\\JoseDecoder`.\n- `simple_html_dom` library has been removed. Use `Symfony\\Component\\DomCrawler\\Crawler` instead.\n- Removed deprecated Twig extension `pimcore_action()`.\n- Removed method `getFlag()` from `Pimcore\\Config`.\n- Removed `Pimcore\\Report` class.\n- [Versioning] Default behavior has been changed to following:\n    - Empty values for `steps` & `days` => unlimited versions.\n    - Value 0 for `steps` or `days` => no version will be saved at all & existing will be cleaned up.\n\n  please update your system settings as per the requirements.\n- Removed deprecated `marshal()` and `unmarshal()` methods from object data-types.\n- `DynamicTextLabelInterface::renderLayoutText()` must handle nullable object param.\n- [AdminBundle] Marked classes and controllers as @internal/final - please see all changes here: https://github.com/pimcore/pimcore/pull/8453/files & https://github.com/pimcore/pimcore/pull/8988/files\n", "<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace Pimcore\\Security;\n\n/**\n * @internal\n */\nclass SecurityHelper\n{\n    public static function convertHtmlSpecialChars(?string $text): ?string\n    {\n        if(is_string($text)) {\n            return htmlspecialchars($text, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8', false);\n        }\n\n        return null;\n    }\n\n    public static function convertHtmlSpecialCharsArrayKeys(array &$array, array $keys): void\n    {\n        foreach ($keys as $key) {\n            if (array_key_exists($key, $array)) {\n                $array[$key] = self::convertHtmlSpecialChars($array[$key]);\n            }\n        }\n    }\n\n    public static function sanitizeHtmlAttributes(?string $text): ?string\n    {\n        if(is_string($text)) {\n            return preg_replace('/[\\/\"\\'\\\\\\]/', '', $text);\n        }\n\n        return null;\n    }\n}\n", "<?php\n\n/**\n * Pimcore\n *\n * This source file is available under two different licenses:\n * - GNU General Public License version 3 (GPLv3)\n * - Pimcore Commercial License (PCL)\n * Full copyright and license information is available in\n * LICENSE.md which is distributed with this source code.\n *\n *  @copyright  Copyright (c) Pimcore GmbH (http://www.pimcore.org)\n *  @license    http://www.pimcore.org/license     GPLv3 and PCL\n */\n\nnamespace Pimcore\\Model\\Document\\Editable;\n\nuse Pimcore\\Logger;\nuse Pimcore\\Model;\nuse Pimcore\\Model\\Asset;\nuse Pimcore\\Model\\Document;\nuse Pimcore\\Security\\SecurityHelper;\n\n/**\n * @method \\Pimcore\\Model\\Document\\Editable\\Dao getDao()\n */\nclass Link extends Model\\Document\\Editable implements IdRewriterInterface, EditmodeDataInterface\n{\n    /**\n     * Contains the data for the link\n     *\n     * @internal\n     *\n     * @var array|null\n     */\n    protected $data;\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getType()\n    {\n        return 'link';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getData()\n    {\n        // update path if internal link\n        $this->updatePathFromInternal(true);\n\n        return $this->data;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getDataEditmode() /** : mixed */\n    {\n        // update path if internal link\n        $this->updatePathFromInternal(true, true);\n\n        return $this->data;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    protected function getEditmodeElementClasses($options = []): array\n    {\n        // we don't want the class attribute being applied to the editable container element (<div>, only to the <a> tag inside\n        // the default behavior of the parent method is to include the \"class\" attribute\n        $classes = [\n            'pimcore_editable',\n            'pimcore_editable_' . $this->getType(),\n        ];\n\n        return $classes;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function frontend()\n    {\n        $url = $this->getHref();\n\n        if (strlen($url) > 0) {\n            if (!is_array($this->config)) {\n                $this->config = [];\n            }\n\n            $prefix = '';\n            $suffix = '';\n            $noText = false;\n\n            if (array_key_exists('textPrefix', $this->config)) {\n                $prefix = $this->config['textPrefix'];\n                unset($this->config['textPrefix']);\n            }\n\n            if (array_key_exists('textSuffix', $this->config)) {\n                $suffix = $this->config['textSuffix'];\n                unset($this->config['textSuffix']);\n            }\n\n            if (isset($this->config['noText']) && $this->config['noText'] == true) {\n                $noText = true;\n                unset($this->config['noText']);\n            }\n\n            // add attributes to link\n            $allowedAttributes = [\n                'charset',\n                'coords',\n                'hreflang',\n                'name',\n                'rel',\n                'rev',\n                'shape',\n                'target',\n                'accesskey',\n                'class',\n                'dir',\n                'draggable',\n                'dropzone',\n                'contextmenu',\n                'id',\n                'lang',\n                'style',\n                'tabindex',\n                'title',\n                'media',\n                'download',\n                'ping',\n                'type',\n                'referrerpolicy',\n                'xml:lang'\n            ];\n            $defaultAttributes = [];\n\n            if (!is_array($this->data)) {\n                $this->data = [];\n            }\n\n            $availableAttribs = array_merge($defaultAttributes, $this->data, $this->config);\n\n            // add attributes to link\n            $attribs = [];\n            foreach ($availableAttribs as $key => $value) {\n                if ((is_string($value) || is_numeric($value))\n                    && (strpos($key, 'data-') === 0 ||\n                        strpos($key, 'aria-') === 0 ||\n                        in_array($key, $allowedAttributes))) {\n                    if (!empty($this->data[$key]) && !empty($this->config[$key])) {\n                        $attribs[] = $key.'=\"'. SecurityHelper::sanitizeHtmlAttributes($this->data[$key]) .' '. SecurityHelper::sanitizeHtmlAttributes($this->config[$key]) .'\"';\n                    } elseif (!empty($value)) {\n                        $attribs[] = $key.'=\"'.SecurityHelper::sanitizeHtmlAttributes($value).'\"';\n                    }\n                }\n            }\n\n            $attribs = array_unique($attribs);\n\n            if (array_key_exists('attributes', $this->data) && !empty($this->data['attributes'])) {\n                $attribs[] = $this->data['attributes'];\n            }\n\n            return '<a href=\"'.$url.'\" '.implode(' ', $attribs).'>' . $prefix . ($noText ? '' : htmlspecialchars($this->data['text'])) . $suffix . '</a>';\n        }\n\n        return '';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function checkValidity()\n    {\n        $sane = true;\n        if (is_array($this->data) && isset($this->data['internal']) && $this->data['internal']) {\n            if ($this->data['internalType'] == 'document') {\n                $doc = Document::getById($this->data['internalId']);\n                if (!$doc) {\n                    $sane = false;\n                    Logger::notice(\n                        'Detected insane relation, removing reference to non existent document with id ['.$this->getDocumentId(\n                        ).']'\n                    );\n                    $this->data = null;\n                }\n            } elseif ($this->data['internalType'] == 'asset') {\n                $asset = Asset::getById($this->data['internalId']);\n                if (!$asset) {\n                    $sane = false;\n                    Logger::notice(\n                        'Detected insane relation, removing reference to non existent asset with id ['.$this->getDocumentId(\n                        ).']'\n                    );\n                    $this->data = null;\n                }\n            } elseif ($this->data['internalType'] == 'object') {\n                $object = Model\\DataObject\\Concrete::getById($this->data['internalId']);\n                if (!$object) {\n                    $sane = false;\n                    Logger::notice(\n                        'Detected insane relation, removing reference to non existent object with id ['.$this->getDocumentId(\n                        ).']'\n                    );\n                    $this->data = null;\n                }\n            }\n        }\n\n        return $sane;\n    }\n\n    /**\n     * @return string\n     */\n    public function getHref()\n    {\n        $this->updatePathFromInternal();\n\n        $url = $this->data['path'] ?? '';\n\n        if (strlen($this->data['parameters'] ?? '') > 0) {\n            $url .= (strpos($url, '?') !== false ? '&' : '?') . str_replace('?', '', $this->getParameters());\n        }\n\n        if (strlen($this->data['anchor'] ?? '') > 0) {\n            $anchor = str_replace('\"', urlencode('\"'), $this->getAnchor());\n            $url .= '#' . str_replace('#', '', $anchor);\n        }\n\n        return $url;\n    }\n\n    /**\n     * @param bool $realPath\n     * @param bool $editmode\n     */\n    private function updatePathFromInternal($realPath = false, $editmode = false)\n    {\n        $method = 'getFullPath';\n        if ($realPath) {\n            $method = 'getRealFullPath';\n        }\n\n        if (isset($this->data['internal']) && $this->data['internal']) {\n            if ($this->data['internalType'] == 'document') {\n                if ($doc = Document::getById($this->data['internalId'])) {\n                    if ($editmode || (!Document::doHideUnpublished() || $doc->isPublished())) {\n                        $this->data['path'] = $doc->$method();\n                    } else {\n                        $this->data['path'] = '';\n                    }\n                }\n            } elseif ($this->data['internalType'] == 'asset') {\n                if ($asset = Asset::getById($this->data['internalId'])) {\n                    $this->data['path'] = $asset->$method();\n                }\n            } elseif ($this->data['internalType'] == 'object') {\n                if ($object = Model\\DataObject::getById($this->data['internalId'])) {\n                    if ($editmode) {\n                        $this->data['path'] = $object->getFullPath();\n                    } else {\n                        if ($object instanceof Model\\DataObject\\Concrete) {\n                            if ($linkGenerator = $object->getClass()->getLinkGenerator()) {\n                                if ($realPath) {\n                                    $this->data['path'] = $object->getFullPath();\n                                } else {\n                                    $this->data['path'] = $linkGenerator->generate(\n                                        $object,\n                                        [\n                                            'document' => $this->getDocument(),\n                                            'context' => $this,\n                                        ]\n                                    );\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if($editmode) {\n            unset($this->data['attributes']);\n        }\n\n        // sanitize attributes\n        if (isset($this->data['attributes'])) {\n            $this->data['attributes'] = htmlspecialchars($this->data['attributes'], HTML_ENTITIES);\n        }\n\n        // deletes unnecessary attribute, which was set by mistake in earlier versions, see also\n        // https://github.com/pimcore/pimcore/issues/7394\n        if (isset($this->data['type'])) {\n            unset($this->data['type']);\n        }\n    }\n\n    /**\n     * @return string\n     */\n    public function getText()\n    {\n        return $this->data['text'] ?? '';\n    }\n\n    /**\n     * @param string $text\n     */\n    public function setText($text)\n    {\n        $this->data['text'] = $text;\n    }\n\n    /**\n     * @return string\n     */\n    public function getTarget()\n    {\n        return $this->data['target'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getParameters()\n    {\n        return SecurityHelper::sanitizeHtmlAttributes($this->data['parameters']) ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getAnchor()\n    {\n        return SecurityHelper::sanitizeHtmlAttributes($this->data['anchor']) ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getTitle()\n    {\n        return $this->data['title'] ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getRel()\n    {\n        return SecurityHelper::sanitizeHtmlAttributes($this->data['rel']) ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getTabindex()\n    {\n        return SecurityHelper::sanitizeHtmlAttributes($this->data['tabindex']) ?? '';\n    }\n\n    /**\n     * @return string\n     */\n    public function getAccesskey()\n    {\n        return SecurityHelper::sanitizeHtmlAttributes($this->data['accesskey']) ?? '';\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getClass()\n    {\n        return SecurityHelper::sanitizeHtmlAttributes($this->data['class']) ?? '';\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getAttributes()\n    {\n        return $this->data['attributes'] ?? '';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setDataFromResource($data)\n    {\n        $this->data = \\Pimcore\\Tool\\Serialize::unserialize($data);\n        if (!is_array($this->data)) {\n            $this->data = [];\n        }\n\n        //sanitize fields\n        $fieldsToExclude = ['path'];\n        foreach($this->data as $key => $value) {\n            if(!in_array($key, $fieldsToExclude)) {\n                $this->data[$key] = SecurityHelper::sanitizeHtmlAttributes($value);\n            }\n        }\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setDataFromEditmode($data)\n    {\n        if (!is_array($data)) {\n            $data = [];\n        }\n\n        $path = $data['path'] ?? null;\n\n        if (!empty($path)) {\n            $target = null;\n\n            if ($data['linktype'] == 'internal' && $data['internalType']) {\n                $target = Model\\Element\\Service::getElementByPath($data['internalType'], $path);\n                if ($target) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                }\n            }\n\n            if (!$target) {\n                if ($target = Document::getByPath($path)) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                    $data['internalType'] = 'document';\n                } elseif ($target = Asset::getByPath($path)) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                    $data['internalType'] = 'asset';\n                } elseif ($target = Model\\DataObject\\Concrete::getByPath($path)) {\n                    $data['internal'] = true;\n                    $data['internalId'] = $target->getId();\n                    $data['internalType'] = 'object';\n                } else {\n                    $data['internal'] = false;\n                    $data['internalId'] = null;\n                    $data['internalType'] = null;\n                    $data['linktype'] = 'direct';\n                }\n\n                if ($target) {\n                    $data['linktype'] = 'internal';\n                }\n            }\n        }\n\n        $this->data = $data;\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function isEmpty()\n    {\n        return strlen($this->getHref()) < 1;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function resolveDependencies()\n    {\n        $dependencies = [];\n        $isInternal = $this->data['internal'] ?? false;\n\n        if (is_array($this->data) && $isInternal) {\n            if ((int)$this->data['internalId'] > 0) {\n                if ($this->data['internalType'] == 'document') {\n                    if ($doc = Document::getById($this->data['internalId'])) {\n                        $key = 'document_'.$doc->getId();\n\n                        $dependencies[$key] = [\n                            'id' => $doc->getId(),\n                            'type' => 'document',\n                        ];\n                    }\n                } elseif ($this->data['internalType'] == 'asset') {\n                    if ($asset = Asset::getById($this->data['internalId'])) {\n                        $key = 'asset_'.$asset->getId();\n\n                        $dependencies[$key] = [\n                            'id' => $asset->getId(),\n                            'type' => 'asset',\n                        ];\n                    }\n                }\n            }\n        }\n\n        return $dependencies;\n    }\n\n    /**\n     * { @inheritdoc }\n     */\n    public function rewriteIds($idMapping) /** : void */\n    {\n        if (isset($this->data['internal']) && $this->data['internal']) {\n            $type = $this->data['internalType'];\n            $id = (int)$this->data['internalId'];\n\n            if (array_key_exists($type, $idMapping)) {\n                if (array_key_exists($id, $idMapping[$type])) {\n                    $this->data['internalId'] = $idMapping[$type][$id];\n                    $this->getHref();\n                }\n            }\n        }\n    }\n}\n"], "filenames": ["doc/Development_Documentation/03_Documents/01_Editables/18_Link.md", "doc/Development_Documentation/23_Installation_and_Upgrade/09_Upgrade_Notes/README.md", "lib/Security/SecurityHelper.php", "models/Document/Editable/Link.php"], "buggy_code_start_loc": [9, 4, 39, 21], "buggy_code_end_loc": [18, 4, 39, 409], "fixing_code_start_loc": [9, 5, 40, 22], "fixing_code_end_loc": [21, 6, 49, 410], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Stored in GitHub repository pimcore/pimcore prior to 10.5.21.", "other": {"cve": {"id": "CVE-2023-2361", "sourceIdentifier": "security@huntr.dev", "published": "2023-04-28T08:15:09.340", "lastModified": "2023-05-04T18:53:57.203", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Stored in GitHub repository pimcore/pimcore prior to 10.5.21."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:pimcore:pimcore:*:*:*:*:*:*:*:*", "versionEndExcluding": "10.5.21", "matchCriteriaId": "72C537D6-67BA-4562-B853-F99E6C14315C"}]}]}], "references": [{"url": "https://github.com/pimcore/pimcore/commit/6970649f5d3790a1db9ef4324bece0d4cb95366a", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/24d91b83-c3df-48f5-a713-9def733f2de7", "source": "security@huntr.dev", "tags": ["Exploit", "Patch"]}]}, "github_commit_url": "https://github.com/pimcore/pimcore/commit/6970649f5d3790a1db9ef4324bece0d4cb95366a"}}