{"buggy_code": ["  ### Yup -- having this method focus solely on\n  ###        returning a collection of People\n  ###        allows you to reuse its output for\n  ###        different purposes (such as passing\n  ###        it to the #list method you defined)\n\tdef search_first_name\n\t\tprint \"First name: \"\n\t\tfirst_name = gets.chomp \n\t\tpeople = Person.where(\"first_name LIKE '%#{first_name}%'\")\n\t\treturn people\n\tend\n\n\tdef search_last_name\n\t\tprint \"Last name: \"\n\t\tlast_name = gets.chomp \n\t\tpeople = Person.where(\"last_name LIKE '%#{last_name}%'\")\n\t\treturn people\n\tend\n\n  ### TODO: Have this method return a collection\n  ###       of People so that its output can be\n  ###       passed to the #list method.\n\tdef search_email\n\t\tprint \"\\nEmail: \"\n\t\temail = gets.chomp \n\t\temails = Email.where(\"email LIKE '%#{email}%'\")\n\t\tif emails.empty?\n\t\t\tputs \"\\nNo entries found\\n\\n\"\n\t\telse\n\t\t\tputs \"\\n#{emails.count} emails found\u2026\\n\\n\"\n\t\t\temails.each do |email|\n\t\t\t\tputs \"#{email.person.first_name} #{email.person.last_name}: #{email.email}\"\n\t\t\tend\n\t\tend\n\tend\n\n\tdef list(people)\n\t\tif people.empty?\n\t\t\tputs \"\\nNo entries found\\n\\n\"\n\t\telse\n\t\t\tpeople.each do |entry|\n\t\t\t\tputs \"#{entry.first_name} #{entry.last_name}\"\n\t\t\t\tputs \"Phone numbers:\"\n\t\t\t\tentry.phones.each do |phone|\n\t\t\t\t\tputs \"#{phone.label}: #{phone.phone}\"\n\t\t\t\tend\n\t\t\t\tputs \"Emails:\"\n\t\t\t\tentry.emails.each do |email|\n\t\t\t\t\tputs \"#{email.label}: #{email.email}\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\ndef search\n\n\tmenu = 0\n\tputs \"\\n\"\n\tputs \"-+-+-+-Search-+-+-+-\"\n\tputs \"1 - \u2026by first name\"\n\tputs \"2 - \u2026by last name\"\n\tputs \"3 - \u2026by email\"\n\tputs \"4 - Return to main menu\"\n\tprint \"\\n? \"\n\tmenu = gets.chomp\n\n\tbegin \n\t\tselect  = Integer(menu)\n\t\tif select == 1\n\t\t\tresult = search_first_name\n\t\t\tlist(result)\n\t\telsif select == 2\n\t\t\tresult = search_last_name\n\t\t\tlist(result)\n\t\telsif select == 3\n      ### TODO: Modify the search_email method so that\n      ###       it returns a collection of People.  That\n      ###       way, you could pass the result to the\n      ###       #list method.\n\t\t\tresult = search_email\n\t\telsif select == 4\n\t\t\tputs \"\\nReturning to main menu\u2026\\n\\n\"\n\t\telse\n\t\t\tputs \"\\nStop wasting time!\\n\\n\"\n\n      ### TODO: This will return to the main menu.\n      ###       How would you change the code so\n      ###       that it remains on the current menu?\n\t\tend\n\trescue ArgumentError\n\t\tputs \"\\nStop wasting time, use a number!\\n\\n\"\n\n    ### TODO: This will return to the main menu.\n    ###       How would you change the code so\n    ###       that it remains on the current menu?\n\tend\n\nend"], "fixing_code": ["  ### Yup -- having this method focus solely on\n  ###        returning a collection of People\n  ###        allows you to reuse its output for\n  ###        different purposes (such as passing\n  ###        it to the #list method you defined)\n\tdef search_first_name\n\t\tprint \"First name: \"\n\t\tfirst_name = gets.chomp \n\t\tpeople = Person.where(\"first_name LIKE '%#{first_name}%'\")\n\t\treturn people\n\tend\n\n\tdef search_last_name\n\t\tprint \"Last name: \"\n\t\tlast_name = gets.chomp \n\n    ### FYI: This is vulnerable to SQL injection.\n    ###      Consider using the following form of\n    ###      the #where clause instead:\n    ###\n    ###        Person.where(\"last_name LIKE ?\", \"%#{last_name}%\")\n    ###\n    ###      This will ensure that the data is\n    ###      properly escaped.  (BTW: I suspect the\n    ###      reason that this didn't work the other\n    ###      day was because you used 'single quotes'\n    ###      instead of \"double quotes\")\n    ###\n\t\tpeople = Person.where(\"last_name LIKE '%#{last_name}%'\")\n\t\treturn people\n\tend\n\n  ### TODO: Have this method return a collection\n  ###       of People so that its output can be\n  ###       passed to the #list method.\n\tdef search_email\n\t\tprint \"\\nEmail: \"\n\t\temail = gets.chomp \n\t\temails = Email.where(\"email LIKE '%#{email}%'\")\n\t\tif emails.empty?\n\t\t\tputs \"\\nNo entries found\\n\\n\"\n\t\telse\n\t\t\tputs \"\\n#{emails.count} emails found\u2026\\n\\n\"\n\t\t\temails.each do |email|\n\t\t\t\tputs \"#{email.person.first_name} #{email.person.last_name}: #{email.email}\"\n\t\t\tend\n\t\tend\n\tend\n\n\tdef list(people)\n\t\tif people.empty?\n\t\t\tputs \"\\nNo entries found\\n\\n\"\n\t\telse\n\t\t\tpeople.each do |entry|\n\t\t\t\tputs \"#{entry.first_name} #{entry.last_name}\"\n\t\t\t\tputs \"Phone numbers:\"\n\t\t\t\tentry.phones.each do |phone|\n\t\t\t\t\tputs \"#{phone.label}: #{phone.phone}\"\n\t\t\t\tend\n\t\t\t\tputs \"Emails:\"\n\t\t\t\tentry.emails.each do |email|\n\t\t\t\t\tputs \"#{email.label}: #{email.email}\"\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\ndef search\n\n\tmenu = 0\n\tputs \"\\n\"\n\tputs \"-+-+-+-Search-+-+-+-\"\n\tputs \"1 - \u2026by first name\"\n\tputs \"2 - \u2026by last name\"\n\tputs \"3 - \u2026by email\"\n\tputs \"4 - Return to main menu\"\n\tprint \"\\n? \"\n\tmenu = gets.chomp\n\n\tbegin \n\t\tselect  = Integer(menu)\n\t\tif select == 1\n\t\t\tresult = search_first_name\n\t\t\tlist(result)\n\t\telsif select == 2\n\t\t\tresult = search_last_name\n\t\t\tlist(result)\n\t\telsif select == 3\n      ### TODO: Modify the search_email method so that\n      ###       it returns a collection of People.  That\n      ###       way, you could pass the result to the\n      ###       #list method.\n\t\t\tresult = search_email\n\t\telsif select == 4\n\t\t\tputs \"\\nReturning to main menu\u2026\\n\\n\"\n\t\telse\n\t\t\tputs \"\\nStop wasting time!\\n\\n\"\n\n      ### TODO: This will return to the main menu.\n      ###       How would you change the code so\n      ###       that it remains on the current menu?\n\t\tend\n\trescue ArgumentError\n\t\tputs \"\\nStop wasting time, use a number!\\n\\n\"\n\n    ### TODO: This will return to the main menu.\n    ###       How would you change the code so\n    ###       that it remains on the current menu?\n\tend\n\nend"], "filenames": ["search.rb"], "buggy_code_start_loc": [15], "buggy_code_end_loc": [15], "fixing_code_start_loc": [16], "fixing_code_end_loc": [29], "type": "CWE-89", "message": "A vulnerability was found in LearnMeSomeCodes project3 and classified as critical. This issue affects the function search_first_name of the file search.rb. The manipulation leads to sql injection. The name of the patch is d3efa17ae9f6b2fc25a6bbcf165cefed17c7035e. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217607. NOTE: Maintainer is aware of this issue as remarked in the source code.", "other": {"cve": {"id": "CVE-2014-125058", "sourceIdentifier": "cna@vuldb.com", "published": "2023-01-07T11:15:08.787", "lastModified": "2023-01-12T16:44:31.060", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in LearnMeSomeCodes project3 and classified as critical. This issue affects the function search_first_name of the file search.rb. The manipulation leads to sql injection. The name of the patch is d3efa17ae9f6b2fc25a6bbcf165cefed17c7035e. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217607. NOTE: Maintainer is aware of this issue as remarked in the source code."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 5.2}, "baseSeverity": "MEDIUM", "exploitabilityScore": 5.1, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-89"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:address_book_project:address_book:*:*:*:*:*:*:*:*", "versionEndExcluding": "2014-11-22", "matchCriteriaId": "51E3B000-D18B-4FFE-843A-803EF67627A8"}]}]}], "references": [{"url": "https://github.com/LearnMeSomeCodes/project3/commit/d3efa17ae9f6b2fc25a6bbcf165cefed17c7035e", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.217607", "source": "cna@vuldb.com", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://vuldb.com/?id.217607", "source": "cna@vuldb.com", "tags": ["Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/LearnMeSomeCodes/project3/commit/d3efa17ae9f6b2fc25a6bbcf165cefed17c7035e"}}