{"buggy_code": ["# -*- coding: iso-8859-1 -*-\n\"\"\"\n    MoinMoin - feed some FCKeditor dialogues\n\n    @copyright: 2005-2006 Bastian Blank, Florian Festi, Thomas Waldmann\n    @license: GNU GPL, see COPYING for details.\n\"\"\"\n\nfrom MoinMoin import config, wikiutil\nfrom MoinMoin.action.AttachFile import _get_files\nfrom MoinMoin.Page import Page\nimport re\n\n##############################################################################\n### Macro dialog\n##############################################################################\n\ndef macro_dialog(request):\n    help = get_macro_help(request)\n    request.write(\n        '''<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n <head>\n  <title>Insert Macro</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"noindex,nofollow\" name=\"robots\">\n  <script src=\"%s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script language=\"javascript\">\n\nvar oEditor = window.parent.InnerDialogLoaded() ;\nvar FCKLang = oEditor.FCKLang ;\nvar FCKMacros = oEditor.FCKMacros ;\n\nwindow.onload = function ()\n{\n // First of all, translate the dialog box texts\n oEditor.FCKLanguageManager.TranslatePage( document ) ;\n\n OnChange( \"BR\" );\n\n // Show the \"Ok\" button.\n window.parent.SetOkButton( true ) ;\n}\n\nfunction Ok()\n{\n if ( document.getElementById('txtName').value.length == 0 )\n {\n  alert( FCKLang.MacroErrNoName ) ;\n  return false ;\n }\n\n FCKMacros.Add( txtName.value ) ;\n return true ;\n}\n\nfunction OnChange( sMacro )\n{\n  // sMacro = GetE(\"txtName\").value;\n  oHelp = GetE(\"help\");\n  for (var i=0; i<oHelp.childNodes.length; i++)\n  {\n    var oDiv = oHelp.childNodes[i];\n    if (oDiv.nodeType==1)\n    {\n      // oDiv.style.display = (GetAttribute(oDiv, \"id\", \"\")==sMacro) ? '' : 'none';\n      if (GetAttribute(oDiv, \"id\", \"\") == sMacro)\n      {\n          oDiv.style.display = '' ;\n          // alert(\"enabled div id \" + sMacro) ;\n      }\n      else\n      {\n          oDiv.style.display = 'none' ;\n      }\n    }\n  }\n}\n\n  </script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n  <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n   <tr>\n    <td>\n     <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n      <tr>\n       <td valign=\"top\">\n       <span fckLang=\"MacroDlgName\">Macro Name</span><br>\n       <select id=\"txtName\" size=\"10\" onchange=\"OnChange(this.value);\">\n''' % request.cfg.url_prefix_static)\n\n    macros = []\n    for macro in macro_list(request):\n        if macro == \"BR\":\n            selected = ' selected=\"selected\"'\n        else:\n            selected = ''\n        if macro in help:\n            macros.append('<option value=\"%s\"%s>%s</option>' %\n                          (help[macro].group('prototype'), selected, macro))\n        else:\n            macros.append('<option value=\"%s\"%s>%s</option>' %\n                          (macro, selected, macro))\n\n    request.write('\\n'.join(macros))\n    request.write('''\n       </select>\n     </td>\n     <td id=\"help\">''')\n\n    helptexts = []\n    for macro in macro_list(request):\n        if macro in help:\n            match = help[macro]\n            prototype = match.group('prototype')\n            helptext = match.group('help')\n        else:\n            prototype = macro\n            helptext = \"\"\n        helptexts.append(\n            '''<div id=\"%s\" style=\"DISPLAY: none\">\n               <b>&lt;&lt;%s&gt;&gt;</b>\n               <br/>\n               <textarea style=\"color:#000000\" cols=\"37\" rows=\"10\" disabled=\"disabled\">%s</textarea>\n               </div>'''\n            % (prototype, prototype, helptext))\n\n    request.write(''.join(helptexts))\n    request.write('''\n     </td>\n    </tr>\n   </table>\n  </td>\n </tr>\n</table>\n</body>\n</html>\n''')\n\ndef macro_list(request):\n    from MoinMoin import macro\n    macros = macro.getNames(request.cfg)\n    macros.sort()\n    return macros\n\ndef get_macro_help(request):\n    \"\"\" Read help texts from SystemPage('HelpOnMacros')\"\"\"\n    helppage = wikiutil.getLocalizedPage(request, \"HelpOnMacros\")\n    content = helppage.get_raw_body()\n    macro_re = re.compile(\n        r\"\\|\\|(<.*?>)?\\{\\{\\{\" +\n        r\"<<(?P<prototype>(?P<macro>\\w*).*)>>\" +\n        r\"\\}\\}\\}\\s*\\|\\|\" +\n        r\"[^|]*\\|\\|[^|]*\\|\\|<[^>]*>\" +\n        r\"\\s*(?P<help>.*?)\\s*\\|\\|\\s*(?P<example>.*?)\\s*(<<[^>]*>>)*\\s*\\|\\|$\", re.U|re.M)\n    help = {}\n    for match in macro_re.finditer(content):\n        help[match.group('macro')] = match\n    return help\n\n##############################################################################\n### Link dialog\n##############################################################################\n\ndef page_list(request):\n    from MoinMoin import search\n    name = request.values.get(\"pagename\", \"\")\n    if name:\n        searchresult = search.searchPages(request, 't:\"%s\"' % name)\n        pages = [p.page_name for p in searchresult.hits]\n    else:\n        pages = [name]\n    request.write(\n        '''<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n <head>\n  <title>Insert Page Link</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"noindex,nofollow\" name=\"robots\">\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n  <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n   <tr>\n    <td>\n     <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n      <tr>\n       <td>\n       <span fckLang=\"PageDlgName\">Page name</span><br>\n       <select id=\"txtName\" size=\"1\">\n       %s\n       </select>\n     </td>\n    </tr>\n   </table>\n  </td>\n </tr>\n</table>\n</body>\n</html>\n''' % \"\".join([\"<option>%s</option>\\n\" % wikiutil.escape(p) for p in pages]))\n\ndef link_dialog(request):\n    # list of wiki pages\n    name = request.values.get(\"pagename\", \"\")\n    if name:\n        from MoinMoin import search\n        # XXX error handling!\n        searchresult = search.searchPages(request, 't:\"%s\"' % name)\n\n        pages = [p.page_name for p in searchresult.hits]\n        pages.sort()\n        pages[0:0] = [name]\n        page_list = '''\n         <tr>\n          <td colspan=2>\n           <select id=\"sctPagename\" size=\"1\" onchange=\"OnChangePagename(this.value);\">\n           %s\n           </select>\n          <td>\n         </tr>\n''' % \"\\n\".join(['<option value=\"%s\">%s</option>' % (wikiutil.escape(page), wikiutil.escape(page))\n                 for page in pages])\n    else:\n        page_list = \"\"\n\n    # list of interwiki names\n    interwiki_list = wikiutil.load_wikimap(request)\n    interwiki = interwiki_list.keys()\n    interwiki.sort()\n    iwpreferred = request.cfg.interwiki_preferred[:]\n    if not iwpreferred or iwpreferred and iwpreferred[-1] is not None:\n        resultlist = iwpreferred\n        for iw in interwiki:\n            if not iw in iwpreferred:\n                resultlist.append(iw)\n    else:\n        resultlist = iwpreferred[:-1]\n    interwiki = \"\\n\".join(\n        ['<option value=\"%s\">%s</option>' % (wikiutil.escape(key), wikiutil.escape(key))\n         for key in resultlist])\n\n    # wiki url\n    url_prefix_static = request.cfg.url_prefix_static\n    scriptname = request.script_root + '/'\n    action = scriptname\n    basepage = wikiutil.escape(request.page.page_name)\n    request.write(u'''\n<!--\n * FCKeditor - The text editor for internet\n * Copyright (C) 2003-2004 Frederico Caldeira Knabben\n *\n * Licensed under the terms of the GNU Lesser General Public License:\n *   http://www.opensource.org/licenses/lgpl-license.php\n *\n * For further information visit:\n *   http://www.fckeditor.net/\n *\n * File Name: fck_link.html\n *  Link dialog window.\n *\n * Version:  2.0 FC (Preview)\n * Modified: 2005-02-18 23:55:22\n *\n * File Authors:\n *   Frederico Caldeira Knabben (fredck@fckeditor.net)\n-->\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n<meta name=\"robots\" content=\"index,nofollow\">\n<html>\n <head>\n  <title>Link Properties</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"robots\" content=\"noindex,nofollow\" />\n  <script src=\"%(url_prefix_static)s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinlink/fck_link.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinurllib.js\" type=\"text/javascript\"></script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n  <div id=\"divInfo\" style=\"DISPLAY: none\">\n   <span fckLang=\"DlgLnkType\">Link Type</span><br />\n   <select id=\"cmbLinkType\" onchange=\"SetLinkType(this.value);\">\n    <option value=\"wiki\" selected=\"selected\">WikiPage</option>\n    <option value=\"interwiki\">Interwiki</option>\n    <option value=\"url\" fckLang=\"DlgLnkTypeURL\">URL</option>\n   </select>\n   <br />\n   <br />\n   <div id=\"divLinkTypeWiki\">\n    <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td>\n       <form action=%(action)s method=\"GET\">\n       <input type=\"hidden\" name=\"action\" value=\"fckdialog\">\n       <input type=\"hidden\" name=\"dialog\" value=\"link\">\n       <input type=\"hidden\" id=\"basepage\" name=\"basepage\" value=\"%(basepage)s\">\n       <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n        <tr>\n         <td>\n          <span fckLang=\"PageDlgName\">Page Name</span><br>\n          <input id=\"txtPagename\" name=\"pagename\" size=\"30\" value=\"%(name)s\">\n         </td>\n         <td valign=\"bottom\">\n           <input id=btnSearchpage type=\"submit\" value=\"Search\">\n         </td>\n        </tr>\n        %(page_list)s\n       </table>\n       </form>\n      </td>\n     </tr>\n    </table>\n   </div>\n   <div id=\"divLinkTypeInterwiki\">\n    <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td>\n       <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n        <tr>\n         <td>\n          <span fckLang=\"WikiDlgName\">Wiki:PageName</span><br>\n          <select id=\"sctInterwiki\" size=\"1\">\n          %(interwiki)s\n          </select>:\n          <input id=\"txtInterwikipagename\"></input>\n         </td>\n        </tr>\n       </table>\n      </td>\n     </tr>\n    </table>\n   </div>\n   <div id=\"divLinkTypeUrl\">\n    <table cellspacing=\"0\" cellpadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td nowrap=\"nowrap\">\n       <span fckLang=\"DlgLnkProto\">Protocol</span><br />\n       <select id=\"cmbLinkProtocol\">\n        <option value=\"http://\" selected=\"selected\">http://</option>\n        <option value=\"https://\">https://</option>\n        <option value=\"ftp://\">ftp://</option>\n        <option value=\"file://\">file://</option>\n        <option value=\"news://\">news://</option>\n        <option value=\"mailto:\">mailto:</option>\n        <option value=\"\" fckLang=\"DlgLnkProtoOther\">&lt;other&gt;</option>\n       </select>\n      </td>\n      <td nowrap=\"nowrap\">&nbsp;</td>\n      <td nowrap=\"nowrap\" width=\"100%%\">\n       <span fckLang=\"DlgLnkURL\">URL</span><br />\n       <input id=\"txtUrl\" style=\"WIDTH: 100%%\" type=\"text\" onkeyup=\"OnUrlChange();\" onchange=\"OnUrlChange();\" />\n      </td>\n     </tr>\n    </table>\n    <br />\n   </div>\n  </div>\n </body>\n</html>\n''' % locals())\n\n\ndef attachment_dialog(request):\n    \"\"\" Attachment dialog for GUI editor. \"\"\"\n    \"\"\" Features: This dialog can... \"\"\"\n    \"\"\" - list attachments in a drop down list \"\"\"\n    \"\"\" - list attachments also for a different page than the current one \"\"\"\n    \"\"\" - create new attachment \"\"\"\n    _ = request.getText\n    url_prefix_static = request.cfg.url_prefix_static\n\n    # wiki url\n    action = request.script_root + \"/\"\n\n    # The following code lines implement the feature \"list attachments for a different page\".\n    # Meaning of the variables:\n    # - requestedPagename : Name of the page where attachments shall be listed from.\n    # - attachmentsPagename : Name of the page where the attachments where retrieved from.\n    # - destinationPagename : Name of the page where attachment will be placed on.\n\n    requestedPagename = wikiutil.escape(request.values.get(\"requestedPagename\", \"\"), quote=True)\n    destinationPagename = wikiutil.escape(request.values.get(\"destinationPagename\", request.page.page_name), quote=True)\n\n    attachmentsPagename = requestedPagename or wikiutil.escape(request.page.page_name)\n    attachments = _get_files(request, attachmentsPagename)\n    attachments.sort()\n    attachmentList = '''\n        <select id=\"sctAttachments\" size=\"10\" style=\"width:100%%;visibility:hidden;\" onchange=\"OnAttachmentListChange();\">\n        %s\n        </select>\n''' % \"\\n\".join(['<option value=\"%s\">%s</option>' % (wikiutil.escape(attachment, quote=True), wikiutil.escape(attachment, quote=True))\n                 for attachment in attachments])\n\n    # Translation of dialog texts.\n    langAttachmentLocation = _(\"Attachment location\")\n    langPagename = _(\"Page name\")\n    langAttachmentname = _(\"Attachment name\")\n    langListAttachmentsButton = _(\"Refresh attachment list\")\n    langAttachmentList = _(\"List of attachments\")\n\n    if len(attachmentsPagename) > 50:\n        shortenedPagename = \"%s ... %s\" % (attachmentsPagename[0:25], attachmentsPagename[-25:])\n    else:\n        shortenedPagename = attachmentsPagename\n    langAvailableAttachments = \"%s: %s\" % (_(\"Available attachments for page\"), shortenedPagename)\n\n    request.write('''\n<!--\n * FCKeditor - The text editor for internet\n * Copyright (C) 2003-2004 Frederico Caldeira Knabben\n *\n * Licensed under the terms of the GNU Lesser General Public License:\n *   http://www.opensource.org/licenses/lgpl-license.php\n *\n * For further information visit:\n *   http://www.fckeditor.net/\n *\n * File Name: fck_attachment.html\n *  Attachment dialog window.\n *\n * Version:  2.0 FC (Preview)\n * Modified: 2005-02-18 23:55:22\n *\n * File Authors:\n *   Frederico Caldeira Knabben (fredck@fckeditor.net)\n-->\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n<meta name=\"robots\" content=\"index,nofollow\">\n<html>\n <head>\n  <title>Attachment Properties</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"robots\" content=\"noindex,nofollow\" />\n  <script src=\"%(url_prefix_static)s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinattachment/fck_attachment.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinurllib.js\" type=\"text/javascript\"></script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n    <form id=\"DlgAttachmentForm\" name=\"DlgAttachmentForm\" action=%(action)s method=\"GET\">\n    <input type=\"hidden\" name=\"action\" value=\"fckdialog\">\n    <input type=\"hidden\" name=\"dialog\" value=\"attachment\">\n    <input type=\"hidden\" id=\"requestedPagename\" name=\"requestedPagename\" value=\"%(requestedPagename)s\">\n    <input type=\"hidden\" id=\"attachmentsPagename\" name=\"attachmentsPagename\" value=\"%(attachmentsPagename)s\">\n    <input type=\"hidden\" id=\"destinationPagename\" name=\"destinationPagename\" value=\"%(destinationPagename)s\">\n\n    <div id=\"divInfo\" style=\"valign=top;\">\n    <div id=\"divLinkTypeAttachment\">\n    <fieldset>\n    <legend>%(langAttachmentLocation)s</legend>\n    <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n        <tr>\n            <td valign=\"bottom\" style=\"width:90%%\" style=\"padding-bottom:10px\">\n                <span>%(langPagename)s</span><br>\n            </td>\n        </tr>\n        <tr>\n            <td valign=\"bottom\" style=\"width:100%%\" style=\"padding-bottom:10px;padding-right:10px;\">\n                <input id=\"txtPagename\" type=\"text\" onkeyup=\"OnPagenameChange();\" onchange=\"OnPagenameChange();\" style=\"width:98%%\">\n            </td>\n        </tr>\n        <tr>\n            <td valign=\"bottom\" style=\"width:90%%\" style=\"padding-bottom:10px;\">\n                <span>%(langAttachmentname)s</span><br>\n            </td>\n        </tr>\n        <tr valign=\"bottom\">\n            <td valign=\"bottom\" style=\"width:100%%\" style=\"padding-bottom:10px;padding-right:10px;\">\n                <input id=\"txtAttachmentname\" type=\"text\" onkeyup=\"OnAttachmentnameChange();\" onchange=\"OnPagenameChange();\" style=\"width:98%%\"><br>\n            </td>\n        </tr>\n    </table>\n    </fieldset>\n    <fieldset>\n    <legend>%(langAvailableAttachments)s</legend>\n    <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n        <tr>\n            <td valign=\"bottom\" style=\"width:100%%\" style=\"padding-bottom:10px\">\n                <input id=\"btnListAttachments\" type=\"submit\" value=\"%(langListAttachmentsButton)s\">\n            </td>\n        </tr>\n        <tr>\n            <td valign=\"top\" style=\"padding-top:10px\">\n                <label for=\"sctAttachments\">%(langAttachmentList)s</label><br>\n                %(attachmentList)s\n            </td>\n        </tr>\n    </table>\n    </fieldset>\n   </div>\n  </div>\n   </form>\n </body>\n</html>\n''' % locals())\n\n\n##############################################################################\n### Image dialog\n##############################################################################\n\ndef image_dialog(request):\n    url_prefix_static = request.cfg.url_prefix_static\n    request.write('''\n<!--\n * FCKeditor - The text editor for internet\n * Copyright (C) 2003-2004 Frederico Caldeira Knabben\n *\n * Licensed under the terms of the GNU Lesser General Public License:\n *   http://www.opensource.org/licenses/lgpl-license.php\n *\n * For further information visit:\n *   http://www.fckeditor.net/\n *\n * File Authors:\n *   Frederico Caldeira Knabben (fredck@fckeditor.net)\n *   Florian Festi\n-->\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n <head>\n  <title>Link Properties</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"robots\" content=\"noindex,nofollow\" />\n  <script src=\"%(url_prefix_static)s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinimage/fck_image.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinurllib.js\" type=\"text/javascript\"></script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n    <table cellspacing=\"0\" cellpadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td nowrap=\"nowrap\">\n       <span fckLang=\"DlgLnkProto\">Protocol</span><br />\n       <select id=\"cmbLinkProtocol\" onchange=\"OnProtocolChange();\">\n        <option value=\"attachment:\" selected=\"selected\">attachment:</option>\n        <option value=\"http://\">http://</option>\n        <option value=\"https://\">https://</option>\n        <!-- crashes often: <option value=\"drawing:\">drawing:</option> -->\n        <option value=\"\" fckLang=\"DlgLnkProtoOther\">&lt;other&gt;</option>\n       </select>\n      </td>\n      <td nowrap=\"nowrap\">&nbsp;</td>\n      <td nowrap=\"nowrap\" width=\"100%%\">\n       <span fckLang=\"DlgLnkURL\">URL or File Name (attachment:)</span><br />\n       <input id=\"txtUrl\" style=\"WIDTH: 100%%\" type=\"text\" onkeyup=\"OnUrlChange();\" onchange=\"OnUrlChange();\" />\n      </td>\n     </tr>\n     <tr>\n      <td colspan=2>\n       <div id=\"divChkLink\">\n        <input id=\"chkLink\" type=\"checkbox\"> Link to\n       </div>\n      </td>\n    </table>\n </body>\n</html>\n''' % locals())\n\n\n#############################################################################\n### Main\n#############################################################################\n\ndef execute(pagename, request):\n    dialog = request.values.get(\"dialog\", \"\")\n\n    if dialog == \"macro\":\n        macro_dialog(request)\n    elif dialog == \"macrolist\":\n        macro_list(request)\n    elif dialog == \"pagelist\":\n        page_list(request)\n    elif dialog == \"link\":\n        link_dialog(request)\n    elif dialog == \"attachment\":\n        attachment_dialog(request)\n    elif dialog == 'image':\n        image_dialog(request)\n    else:\n        from MoinMoin.Page import Page\n        request.theme.add_msg(\"Dialog unknown!\", \"error\")\n        Page(request, pagename).send_page()\n\n", "MoinMoin Version History\n========================\n\nPlease note: Starting from the MoinMoin version you used previously, you\nshould read all more recent entries (or at least everything marked with HINT).\n\nThis release has known bugs (see MoinMoin:MoinMoinBugs), but we think it is\nalready better than the previous stable release. Our release policy is not\ntrying to make a \"perfect release\" (as that release might NEVER get released),\nbut to make progress and don't delay releases too much.\n\n\nVersion 1.9.10 aka \"the end of spam release\" (not released yet)\n\n  SECURITY HINT: make sure you have allow_xslt = False (or just do not use\n  allow_xslt at all in your wiki configs, False is the internal default).\n  Allowing XSLT/4suite is very dangerous, see HelpOnConfiguration wiki page.\n\n  HINT: Python 2.7 is required! See docs/REQUIREMENTS for details.\n\n  HINT: please read the changelog below carefully before upgrading to 1.9.10.\n        This release has some fundamental changes you (and your wiki users)\n        should be aware of beforehands.\n\n  Fixes:\n  * fix wrong digestmod of hmac.new calls (incorporate 1.9.9 patch)\n  * fix broken table attribute processing (wikiutil.escape)\n  * fix AttributeError in multifile action\n  * read text attachments using universal newlines (including \\r line seps)\n  * anywikidraw / twikidraw: check write permissions early\n  * fix exec_cmd for windows: preexec_fn is UNIX only\n\n  New features:\n  * added a convenient way to create a user account via the superuser's\n    \"Settings\" -> \"Switch User\" form:\n\n    just type in the new user's name there, switch to the account and\n    fill out the email address. You do not need to set a password, the\n    account will not be usable until the users claims it via the \"forgot\n    my password\" functionality on the login page (and sets a password).\n\n  * you now can also type in an existing user's name there to switch to the\n    account, instead of selecting it (convenient if you have many users).\n\n  * newaccount action by default only available for superusers.\n\n    This is to avoid spam bots creating huge amounts of crap accounts on\n    internet connected wikis.\n\n    This is done via a new cfg.actions_superuser = ['newaccount', ] default.\n\n    If you prefer to have newaccount action available for every visitor (not\n    advisable for internet connected wikis), use this in your wiki config:\n\n    actions_superuser = FarmConfig.actions_superuser[:]\n    actions_superuser.remove('newaccount')\n\n    For internet connected wikis, a safer way is to let potential new users\n    ask for an account. Everyone in the superuser list can easily create a new\n    account (wiki username and email address needed). If you run a public\n    MoinMoin wiki on the internet, document the way to get an account on\n    your front page.\n\n  * support tel: urls\n\n  Other changes:\n  * safer internal default ACL: Known and All now only have read permissions.\n\n    This is to avoid that you accidentally give r/w permissions to the world\n    when running a wiki on the internet.\n\n    Considering there are lots of spam bots out there, that can create a ton\n    of spam pages in little time, we advise you to keep the safer default for\n    internet connected wikis and only allow specific users / groups read/write\n    access.\n\n    See also the updated sample configs / the HelpOnAccessControlLists help\n    page.\n  * disable the gui editor / enforce the text editor by default\n\n    fckeditor 2.6.11 as we bundle it (latest available version, but years\n    old) might have security issues meanwhile as it is not maintained any\n    more.\n\n    also, there ever have been major issues with MoinMoin's integration of\n    that \"gui editor\" (as our documentation pointed out since long).\n\n    if you want to give wiki users the choice to choose the gui editor\n    nevertheless, you can re-enable it in your wiki config:\n\n    editor_force = False\n    editor_ui = 'freechoice'\n  * change log_reverse_dns_lookups default to False.\n  * update / upgrade bundled software:\n    * upgrade werkzeug to 0.14.1\n    * upgrade passlib to 1.7.1\n    * upgrade parsedatetime to 2.4\n  * moved MoinMoin 1.9.x development to GitHub:\n    https://github.com/moinwiki/moin-1.9/\n  * update mailing list address and download URL in pypi metadata\n  * enabled Travis CI to run the unit tests for PRs / branches\n  * fixed some stuff found by PyCharm Code Inspection\n  * make build reproducible\n\n\nVersion 1.9.9 aka \"The undead MoinMoin Halloween Release\" 2016-10-31\n\n  Fixes:\n  * security: fix XSS in AttachFile view (multifile related) CVE-2016-7148\n  * security: fix XSS in GUI editor's attachment dialogue CVE-2016-7146\n  * security: fix XSS in GUI editor's link dialogue CVE-2016-9119\n  * catch IOError for zipfile errors (sometimes triggered by zipfile.is_zipfile\n    false positives, see http://bugs.python.org/issue28494 ).\n\n  Other changes:\n  * update moin.spec, setup.py: py27 only\n\n\nVersion 1.9.9rc1:\n\n  Fixes:\n  * add meta \"viewport\" for small device viewports\n  * add meta X-UA-Compatible IE=Edge, make IE happy on intranets\n\n  New features:\n  * AttachFile multifile operation: support copying multiple files to another page\n  * cfg.xmlrpc_overwrite_user is a new setting to control whether the xmlrpc\n    code overwrites an already authenticated user before processing a request.\n    True (default): behaviour as in 1.9.8 and before\n    False: use this if you want to use GivenAuth (e.g. http basic auth) for\n           xmlrpc requests.\n\n  Other changes:\n  * upgraded bundled 3rd party code:\n    * werkzeug 0.11.11\n    * passlib 1.6.5\n    * pygments 2.1.3\n    * parsedatetime 2.1\n    * FCKEditor 2.6.11\n  * removed some bundled stuff we needed due to stdlib issues in older Pythons:\n    * MoinMoin.support.difflib\n    * MoinMoin.support.tarfile\n    * MoinMoin.support.HeaderFixed (-> email.header)\n  * SubProcess: reimplement exec_cmd, remove our stdlib hacks\n  * remove own usage of python_compatibility module which we needed to support\n    older Pythons. the module is still there, in case some 3rd party moin\n    extensions used it.\n\n\nVersion 1.9.8:\n  New features:\n  * cfg.recovery_token_lifetime to determine how long the password recovery\n    token will be valid, default is 12 [h]. Check this setting to be adequate\n    before doing (global) password resets, so your users have enough time to\n    react before the toke times out!\n  * cfg.log_events_format can be used to configure the format of the records\n    written to <data_dir>/event-log:\n    0 = dot not create event-log entries (saves disk space, disk I/O)\n    1 = standard (like in moin <= 1.9.7) [default]\n    2 = extended (add infos about username, wikiname, url)\n  * add a tool to output the contents of the event-log to CSV:\n    moin export eventlog --file=output.csv\n    Output encoding is utf-8, columns are in this order:\n    time, event, username, ip, wikiname, pagename, url, referrer, ua\n    time: UNIX timestamp (float)\n  * reimplement cfg.log_timing - if True, emits INFO level log output like:\n    \"timing: <REMOTE_ADDR> <URL> <REFERRER> <TIME> <SLOWNESS-INDICATOR>\"\n    TIME is in seconds, the slowness indicator is \".\" for sub-second requests\n    or N times \"!\" for requests taking N seconds (so you easily can grep for\n    slow stuff).\n  * add \"abuse\" logging. this will log every attempt to login (successful ones\n    as well as unsuccessful ones). abuse logging is configured via the logging\n    configuration, see example in wiki/config/logging/abuse.\n    Currently, abuse logging is implemented for:\n    * authentication system\n      * \"moin\" auth\n      * \"given\" auth\n      * setuid (when superuser switches to another user)\n    * new user creation\n    * some security/ACL violations (xmlrpc and perhaps others not implemented)\n  * surge protection for authentication (currently only for MoinAuth):\n    a) surge protect by IP\n       This covers the case someone is trying to authenticate way too\n       often - we don't look at the username here, just at the remote IP\n       address. If surge protection kicks in for some specific IP, that IP\n       won't be able to try to authenticate any more until surge_lockout_time\n       is over.\n       Note: be careful with users behind proxies or NAT routers - these are\n             common and legitimate cases with (potentially lots of)\n             authentication requests coming from same IP.\n             if it is a trusted proxy, you can configure moin so it sees the\n             real remote IP address (not just the proxy's address).\n    b) surge protect by name\n       This covers the case someone is trying to authenticate for a\n       specific user name way too often (e.g. when someone tries to attack the\n       wiki admin's account). We don't look at the IP here, just at the user\n       name. If surge protection kicks in for some specific user name, that user\n       name will not be able to try to authenticate any more until\n       surge_lockout_time is over.\n       Note: this even covers widely distributed attacks against a user, but\n             you should only enable this if you are aware that the \"real\" user\n             also won't be able to authenticate while surge protection is active\n             (at least not using the account for that specific username).\n             Thus, there is some denial-of-service danger with this if the\n             attacker can guess or find your valid user names (which isn't too\n             difficult if your wiki is publicly readable).\n             This is bad, but technically hard to avoid.\n    Configuration (allowing 10 authentication attempts per hour):\n        surge_action_limits = {\n            # ...\n            'auth-ip': (10, 3600),  # same remote ip (any name)\n            'auth-name': (10, 3600),  # same name (any remote ip)\n         }\n  * backlinks performance tuning: the pagename in the theme has historically\n    been used to trigger a \"linkto:ThisPage\" search. While this is a nice\n    feature for human users of the wiki (esp. on category pages), it has one\n    big issue: as it is a normal link, stupid crawlers (ignoring \"nofollow\")\n    follow it and cause a lot of unneccessary load.\n\n    What moin shows in that \"backlinks\" place can now be configured in your\n    wiki config:\n\n    # always render the backlink as in moin < 1.9.8 (bad bots causing high load!):\n    backlink_method = lambda cfg, req: 'backlink'\n\n    # always render a simple link to same page, as in moin 2.0:\n    backlink_method = lambda cfg, req: 'pagelink'\n\n    # logged-in users get the backlink, anon users/bots get a pagelink (default):\n    backlink_method = lambda cfg, req: 'backlink' if req.user.valid else 'pagelink'\n\n    # logged-in users get the backlink, anon users/bots get simple text:\n    backlink_method = lambda cfg, req: 'backlink' if req.user.valid else 'text'\n  * AbandonedPages macro: check user agent to reduce load caused by bots\n  * RSS feed: check for bots and rather give them empty results than waste a\n    lot of time with them\n  * ldap_auth: support placeholders for basedn also, e.g. you could use:\n    base_dn='uid=%(username)s,ou=people,dc=company,dc=com'\n  * move or delete multiple attachments (see checkboxes and buttons on the\n    AttachFile view). Be careful: in the same way as you could delete a single\n    attachment with one click, you can now delete all attachments of a page\n    with one click (we don't ask for a 2nd confirmation, so think first).\n  * mailimport: use relative attachment link markup instead of absolute links,\n    enables some page renaming operations without needing to edit the markup.\n  * better caching and lookup optimizations for userprofile data:\n    * name, email, jid, openids -> userid lookups\n    * page subscriptions for notifications (as a consequence, determination of\n      subscribers when a page is saved is much faster now, esp. for wikis with\n      many users) - see also MoinMoinBugs/GetSubscribersSlow\n  * Notification template strings are now configurable via cfg.mail_notify_...\n    * page_text (this puts together the pieces for the mail body, used for all\n      changed / deleted / renamed page mail notifications)\n    * page_changed_subject, page_changed_intro\n    * page_deleted_subject, page_deleted_intro\n    * page_renamed_subject, page_renamed_intro\n    * att_added_subject, att_added_intro\n    * att_removed_subject, att_removed_intro\n    * user_created_subject, user_created_intro\n    * Best is to read HelpOnConfiguration and look at MoinMoin.config.multiconfig\n      to see the help text and the defaults.\n    * The defaults are chosen to be the same as the old hardcoded values, so the\n      translations keep working.\n    * If you overwrite the strings in your configuration moin will still try to\n      translate your strings, but it will only find translations if you add them\n      to the gettext catalogs, too.\n    * Examples:\n\n      a) notification mail body: you don't want the rendered diff, you don't\n         want to link to the diff, but to the full page view on your wiki.\n\n      # original (default) value\n      mail_notify_page_text = '%(intro)s%(difflink)s\\n\\n%(comment)s%(diff)s'\n      # put this in your wiki config\n      mail_notify_page_text = '%(intro)s%(pagelink)s\\n\\n%(comment)s'\n\n      b) notification mail subject:\n      # original (default) value\n      mail_notify_page_changed_subject = '[%(sitename)s] %(trivial)sUpdate of \"%(pagename)s\" by %(username)s'\n\n      c) notification mail intro:\n      # original (default) value\n      mail_notify_page_changed_intro = \\\n          (\"Dear Wiki user,\\n\\n\"\n           'You have subscribed to a wiki page or wiki category on \"%(sitename)s\" for change notification.\\n\\n'\n           'The \"%(pagename)s\" page has been changed by %(editor)s:\\n')\n\n      Note: if you change \"*_page_changed_*\", you likely also want to change\n      \"*_page_deleted_*\" and \"*_page_renamed_*\", maybe even \"*_att_added_*\"\n      and \"*_att_removed_*\".\n\n  Fixes:\n  * security fix: XSS in useragents stats\n  * do not create empty pagedirs (with empty edit-log). To clean up all the\n    trash pagedirs, use moin ... maint cleanpage.\n  * page rename/delete, attachment add/remove email notifications work now\n    (somehow we had an event for this, but no code handling it)\n  * AttachFile do=get and do=view: send 404 status if file does not exist\n  * link rel=\"Alternate\" links: rather use page.url than request.href, so\n    url_prefix_action gets used for the (print and raw) action URLs\n  * fixed wrong detection of UI language from accept-language header for not\n    logged-in users if the language identifier there was (partially) uppercase.\n  * fix Python 2.7.4/5 compatibility issue with rss_rc action using handler._out\n  * fix \"moin import wikipage\" timestamp confusion\n  * use 302 http status for #redirect as some clients cache 301 redirects, but\n    the #redirect might get changed or removed later (so it should not be\n    cached and we also can't really say it is permanent)\n  * fix crash when macro names contain non-ascii chars\n  * CopyPage action: fix NameError exception when TextCha was answered wrong\n  * docbook formatter: fix image URL generation, avoid script name duplication\n  * fix caching scope of name2id/openid2id caches (was: \"wiki\", now:\n    \"userdir\"). this is relevant for shared user_dir configurations.\n  * moin maint cleancache: cleans up openid2id cache now also\n  * \"userdir\" caching scope used for userid lookup caches (the previously used\n    name2id cache with \"wiki\" caching scope could have outdated data if you\n    share the user_dir between multiple wikis)\n  * catch \"filename too long\" exception if some crap URL refers to a too long\n    pagename that the filesystem can not represent. It is treated like a not\n    existing page then, so you don't get a traceback in your log file.\n\n  Other changes:\n  * rss_rc action (RSS feed) is now much faster / much less resource consuming\n    when requested for a specific single page. As we have a link to this in\n    every page's html output, this likely also lightens the load caused by bots\n    and search engine crawlers.\n  * tuned editlog.news() - only open/read log if there is new stuff in it after\n    last read position\n  * improve python2.5 compatibility (with_statement)\n  * add bingbot to ua_spiders\n  * upgraded bundled werkzeug to 0.8.3\n  * upgraded bundled passlib to 1.6.2\n  * upgraded bundled pygments to 1.6\n\n\nVersion 1.9.7:\n  New features:\n  * passlib support - enhanced password hash security. Special thanks go to\n    the Python Software Foundation (PSF) for sponsoring development of this!\n\n    Docs for passlib: http://packages.python.org/passlib/\n\n    If cfg.passlib_support is True (default), we try to import passlib and set\n    it up using the configuration given in cfg.passlib_crypt_context (default\n    is to use sha512_crypt with default configuration from passlib).\n\n    The passlib docs recommend 3 hashing schemes that have good security, but\n    some of them have additional requirements:\n    sha512_crypt needs passlib >= 1.3.0, no other requirements.\n    pbkdf2_sha512 needs passlib >= 1.4.0, no other requirements.\n    bcrypt has additional binary/compiled package requirements, please refer to\n    the passlib docs.\n\n    cfg.password_scheme should be '{PASSLIB}' (default) to tell that passlib is\n    wanted for new password hash creation and also for upgrading existing\n    password hashes.\n\n    For the moin code as distributed in our download release archive, passlib\n    support should just work, as we have passlib 1.6.1 bundled with MoinMoin\n    as MoinMoin/support/passlib. If you use some other moin package, please\n    first check if you have moin AND passlib installed (and also find out the\n    passlib version you have installed).\n\n    If you do NOT want to (not recommended!) or can't use (still using python\n    2.4?) passlib, you can disable it your wiki config:\n\n        passlib_support = False  # do not import passlib\n        password_scheme = '{SSHA}'  # use best builtin hash (like moin < 1.9.7)\n\n    Please note that after you have used moin with passlib support and have user\n    profiles with passlib hashes, you can't just switch off passlib support,\n    because if you did, moin would not be able to log in users with passlib\n    password hashes. Password recovery would still work, though.\n\n    password_scheme always gives the password scheme that is wanted for new or\n    recomputed password hashes. The code is able to upgrade and downgrade hashes\n    at login time and also when setting / resetting passwords for one or all\n    users (via the wiki web interface or via moin account resetpw script\n    command).\n\n    So, if you want that everybody uses strong, passlib-created hashes,\n    resetting the passwords for all users is strongly recommended:\n    First have passlib support switched on (it is on by default), use\n    password_scheme = '{PASSLIB}' (also default), then reset all passwords.\n\n    Same procedure can be used to go back to weaker builtin hashes (not\n    recommended): First switch off passlib support, use password_scheme =\n    '{SSHA}', then reset all passwords.\n\n    Wiki farm admins sharing the same user_dir between multiple wikis must use\n    consistent password hashing / passlib configuration settings for all wikis\n    sharing the same user_dir. Using the builtin defaults or doing the\n    configuration in farmconfig.py is recommended.\n\n    Admins are advised to read the passlib docs (especially when experiencing\n    too slow logins or when running old passlib versions which may not have\n    appropriate defaults for nowadays):\n    http://packages.python.org/passlib/new_app_quickstart.html#choosing-a-hash\n    http://packages.python.org/passlib/password_hash_api.html#choosing-the-right-rounds-value\n\n  * Password mass reset/invalidation support, see docs/resetpw/.\n    This is useful to make sure everybody sets a new password and moin computes\n    the password hash using the current configuration.\n\n  * Customizable default password checker:\n    Moin's default password checker used and still uses min_length=6 (minimum pw\n    length) and min_different=4 (minimum count of different chars in the password).\n    If you feel that you need to require better passwords from your users, you\n    can customize it now like that in your wiki config:\n\n    password_checker = lambda cfg, request, name, pw: multiconfig._default_password_checker(cfg, request, name, pw, min_length=10, min_different=7)\n\n  * Removing/disabling inactive users (moin ... account inactive)\n    Many wikis have a lot of inactive users, that never ever made a single edit.\n    See help of the command for more details, be careful.\n  * SystemAdmin user browser: show disabled user accounts at the bottom of\n    the list\n  * At startup, announce moin version and code path in log output (makes\n    support and debugging easier).\n  * AttachList: introduced search_term parameter (optional) for listing\n    attachments filtered by a regular expression on their name.\n  * sign release archive using GnuPG with the key of tw@waldmann-edv.de\n    ID 31A6CB60 (main key ID FAF7B393)\n\n  Fixes:\n  * logging: if the logging config file can't be read, give a helpful error msg\n  * logging: use info loglevel (not warning) for telling about using the builtin\n    default logging config\n  * moin script commands: warn if someone gave ... to the moin script, avoids a\n    strange and unhelpful 'empty module name' error message\n  * reorder html input fields in recoverpass form, to help browsers remember\n    the user name and password (not erroneously the recovery token and password)\n  * don't try to send password recovery email to user if email address in\n    user profile is empty\n  * cache action: fix 304 http status\n  * rst parser: fix safe_import for level param in __import__ call of docutils 0.10\n  * moin maint cleancache: also kill the i18n cache 'meta' pickle file\n  * sendmail: catch unicode errors when E-Mail addr has non-ascii chars\n  * redirect last visited: if last visited page is on same wiki, use a local\n    redirect, do not compute via interwiki map (fixes https: usage)\n\n\nVersion 1.9.6:\n\n  Fixes:\n  * fix remote code execution vulnerability in twikidraw/anywikidraw action\n  * fix path traversal vulnerability in AttachFile action\n  * fix XSS issue, escape page name in rss link\n  * escape user- or admin-defined css url\n  * make taintfilename more secure\n  * use a constant time str comparison function to prevent timing attacks\n  * Attachment handler: catch all Zip-related errors\n\n\nVersion 1.9.5:\n\n  Fixes:\n   * Security fix: fix virtual group bug in ACL evaluation.\n   * Avoid crash if #refresh processing instruction is used without arguments.\n   * Fix issue with non-ASCII textchas.\n   * Xapian indexing: remove copy.copy() that crashed on Windows/IIS/isapi-wsgi\n     after page save.\n   * Fix dictionary file reading crash under Windows.\n   * Work around crash of AdvancedSearch macro rendering caused by non-ascii\n     mimetypes.types_map entries.\n   * Added migration script for moin 1.8.9.\n   * rss_rc: Fix diffs added in RSS with diffs=1 (now they correspond to item\n     listed in feed and not just last page diffs). Links generated with ddiffs=1\n     also fixed.\n   * rss_rc: fix double escaping issue.\n   * rss_rc: respect show_names configuration option.\n   * rss_rc: proper support of rename, revert, page creation.\n   * modern/modernized theme: fix padding/width for editor preview\n   * group/pagelinks formatters: avoid to create unnecessary output, redirect\n     output of send_page call with the groups formatter, it must not be written\n     to the output stream\n   * rst parser: fix include and macro directives\n   * wikisync: fix unicode pagename sending for python 2.7 httplib\n\n  New features:\n   * add a comment_required config option (default: False) to require a\n     non-empty comment when saving a page\n   * when a save error happens, show the editor again and highlight the error\n   * rss_rc: several new options added: lines parameter gives ability to set\n     maximum size of diffs showed in RSS. show_att parameter gives ability\n     to show information aboout attachment-related items in RSS. page parameter\n     gives ability to specify set of pages for which changes RSS feed should be\n     generated. Configuration of defaults and limits can now be done via wiki\n     configuration mechanism.\n   * As soon as it is now possible to provide RSS for page change history,\n     appropriate alternate link is now added for every page (controlled by\n     rss_show_page_history_link configuration parameter).\n   * Search: \"no_highlight:\" search query option provided for suppressing\n     highlighting search results.\n   * Search macros: new options for FullSearch, FullSearchCached and PageList\n     available:\n     * highlight_titles option controls highlighting of matches in search\n       results provided by these macros. Default value is set in\n       search_macro_highlight_titles configuration option)\n     * highlight_pages option controls adding of highlight URL parameter to\n       page links (so search term is highlighted when user goes to one of\n       these pages via provided link) in search results. Default value is set\n       in search_macro_highlight_pages configuration option.\n     Usage of these options is disabled (via search_macro_parse_args\n     configuration option) by default due to behavioural changes introduced\n     in macro parameter parsing mechanism to support them. Related to\n     http://moinmo.in/FeatureRequests/FullSearchResultsWithoutHighlight .\n\n  Other changes:\n   * Remove 4suite dependency for docbook formatter, use minidom (included in\n     Python).\n   * Upgraded FCKeditor to 2.6.8.\n\n\nVersion 1.9.4:\n\n  HINT: Python >= 2.5 is maybe required! See docs/REQUIREMENTS for details.\n\n  Fixes:\n   * Fix XSS / remove javascript URL support in rst parser (CVE-2011-1058).\n   * werkzeug: Removed a dummy import. Fixes Python 2.7 compatibility.\n   * Fix linux-to-windows edit-log migration/upgrade issue (wrong line endings)\n   * logfile: strip \\n lineends from line data (\\n is part of the file\n     structure, not of the data)\n   * Fix for MoinMoinBugs/SinglePageSlideShowAndParserMarkup.\n   * Simplify auto scroll initialization; fix bug in IE init discovered when\n     using IE7 on pages with wide tables.\n   * Fix timestamp in edit lock message to show the time when edit-locking ends.\n   * Updated wikiserverconfig.py from internal defaults, sync the one in\n     toplevel dir and the one in wiki/server/ - fixes hostname setting.\n   * SubProcess: make sure files are closed at the end (experimental change).\n   * text plain formatter: fix bullet_list, see number_list.\n   * Add some image mimetypes to MIMETYPES_MORE to fix windows issues.\n   * Include page name in password reset URL.\n   * Fix moin export dump to generate relative URLs.\n   * Fix MonthCalendar mouseover for pages with ampersand in page name.\n   * ldap_login: assign server early, it is used in exception handler.\n   * OpenID server preferences: fix traceback related to request method.\n   * Work around page.mtime_usecs() returning 0 for pages without edit-log.\n   * revert action: catch and display all SaveErrors when revert failed.\n   * Fixed bug in groups formatter which caused the last list item to be not in the group.\n   * Avoid strange exception in zipfile.py for pre-1980 timestamps.\n   * TableOfContents: fix for other markups than default wiki markup, e.g. rst\n   * script.account.homepage: added wiki format to homepage_default_text\n   * Enable webkit based browsers (try chrome/safari/konqueror now) for GUI\n     editing (after fixing selection FCKeditor plugin for chrome).\n   * Parsers: avoid crash when Parser.format() call gets inhibit_p kw arg.\n   * advancedsearch: fix problem with non-ascii chars breaking up words for OR\n     and NOT terms\n   * fix globaledit script to keep comments on Homepage...Template pages\n\n  New features:\n   * Added print mode to action.SlideShow, see\n     FeatureRequests/PrintableSinglePageSlideshows.\n   * xmlrpc: new methods xmlrpc_getProcessingInstruction(Version)\n   * Add support for other password hashes (all of them will get auto-upgraded\n     to SSHA when user logs in):\n     * {DES} (Unix crypt(3))\n     * {MD5} (MD5-based crypt())\n     * {APR1} (Apache .htpasswd). \n   * Experimental queued indexing support to work around memory leak - use it like this:\n     # put all pages into indexer queue:\n     python MoinMoin/script/moin.py index build --mode=makequeue\n     # take <count> pages out of the indexer queue and index them,\n     # you need to repeat the following line respective to the total amount of pages\n     # in your wiki (doing more indexer calls does no harm, doing less means an\n     # incomplete index):\n     python MoinMoin/script/moin.py index build --mode=buildnewindexqueued --count=500\n     python MoinMoin/script/moin.py index build --mode=buildnewindexqueued --count=500\n     python MoinMoin/script/moin.py index build --mode=buildnewindexqueued --count=500\n     # ...\n     # switch to new index:\n     python MoinMoin/script/moin.py index build --mode=usenewindex \n\n  Other changes:\n   * Raise exceptions as recommended in PEP 8.\n   * Updated i18n / underlay pages.\n   * Updated interwiki map.\n   * Use logging.traceback to get more information if a indexing filter crashes.\n   * u200b is not considered a space any more in unicode 4.0.1.\n   * Improve textcha security, use some crypto and timing to make cheating\n     harder - use cfg.textchas_expiry_time = 600 (default, seconds) to set the\n     time a textcha is valid.\n   * Upgraded bundled werkzeug to 0.8.1, pygments to 1.4, flup to repo tip.\n\n\nVersion 1.9.3:\n  Fixes:\n  * Fix XSS in Despam action (CVE-2010-0828).\n  * Fix XSS issues (see MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg):\n    * by escaping template name in messages\n    * by fixing other places that had similar issues\n  * Make moin compatible to werkzeug 0.5 .. 0.6.2 (1.9.2 had issues\n    with xmlrpc when used with werkzeug 0.6.x).\n  * MoinMoin.util.filesys: disable usage of dircache, deprecate dc* functions,\n    because the dircache stdlib module can't work correctly for fast updates of\n    directories.\n  * rss_rc and sisterpages actions: fix Content-Type header (mimetype)\n  * Fix associating OpenID identity with user, wasn't adapted to werkzeug yet.\n  * openidrp auth: fix undefined _ (gettext)\n  * Fix auth.cas and userprefs.oidserv request object usage.\n  * highlight parser: fixed MoinMoinBugs/LineNumberSpansForProcessInstructionsMissed\n  * Pygments syntax highlighting: add missing code files\n  * Notifications: use same email subject format for every notification\n  * Fix docbook formatter crashing, see MoinMoinPatch/IncludeMacroWithDocBookFormatter\n  * Fix regex content search for xapian search.\n  * Get rid of the empty line at the end of code highlights.\n  * GUI editor: compute editor height like the text editor does.\n  * Added help texts for: standalone server and moin migration.\n  * script.maint.cleancache: clean also i18n cache files\n  * Improved formatter.text_plain, see FeatureRequests/TextPlainFormatterRewrite\n    (fixes many issues of this formatter).\n  * text_html_text_moin_wiki: fixed index error for width=\"\", see also:\n    MoinMoinBugs/GUI_convertor_list_index_out_of_range\n  * xmlrpc: disable editor backup for putPage, renamePage and revertPage\n    because if pages get uploaded by xmlrpc then the draft cache file can\n    rapidly increase in size, causing high memory usage because it needs to\n    get loaded into memory for updating/processing.\n  * Emit Content-Type header (with charset) for SlideShow action and many other\n    actions that just call send_title().\n  * ActionBase: better compatibility to moin 1.8, use request.values by\n    default, optionally use request.form data only\n\n  New features:\n  * RenamePage action: added ability to create redirect pages when renaming\n    (turned off by default, see show_rename_redirect config option).\n  * formatter/text_html: Added line number links to code blocks.\n  * diff action:\n    * Fixed whitespace in generated (html) diff view table so white-space: pre\n      can be used (and whitespace in diffs preserved).\n    * Added links to first/last revision.\n  * MoinMoin.widget.browser: introduced feature for sorting tables, see:\n    http://moinmo.in/FeatureRequests/SortableTables\n  * SystemAdmin user and attachment browsers: sorting feature used there now\n  * Scrolling the text editor to the double clicked line.\n  * Enable double-click-editing by default.\n  * WikiConfigHelp macro: make heading and description display optional,\n    heading level as a parameter (default 2)\n  * If edit ticket check fails, send the editor with the current content.\n  * moin import wikipage - use this script to import local files as a wiki page\n\n  Other changes:\n  * upgraded pygments from 1.2.2 to 1.3.1\n  * upgraded FCKeditor from 2.6.4.1 to 2.6.6\n  * added configuration snippet for ldap authentication against 2 servers\n  * improved script help output\n\nVersion 1.9.2:\n  Fixes:\n  * Fixed CVE-2010-0668: major security issues were discovered in misc. parts\n    of moin.\n    HINT: if you have removed superuser configuration to workaround the issue\n    (following our security advisory), you may re-add it after installing this\n    moin release. If you don't need superuser capabilities often, it might be\n    wise to not have superusers configured all the time, though.\n  * Fixed CVE-2010-0669: potential security issue due to incomplete user profile\n    input sanitizing.\n  * Improved package security: cfg.packagepages_actions_excluded excludes\n    unsafe or otherwise questionable package actions by default now.\n  * wiki parser: fixed transclusion of (e.g. video) attachments from other\n    pages.\n  * Fixed edit locking for non-logged in editors and cfg.log_remote_addr=False.\n  * mailimport: fix missing wikiutil import for normalize_pagename\n  * SubProcess: fix \"timeout\" AttributeError\n  * \"standalone\" wikiserver.py: fixed calling non-existing os.getuid on win32\n  * HTTPAuth deprecation warning moved from class level to __init__\n  * Fixed MoinMoinBugs/1.9DiffActionThrowsException.\n  * Fixed misc. session related problems, avoid unneccessary session file\n    updates.\n  * Fix/improve rename-related problems on Win32 (depending on Windows version).\n  * Fixed spider / user agent detection.\n  * Make sure to use language_default when language_ignore_browser is set.\n  * diff action: fix for case when user can't revert page.\n  * Fix trail size (was off by one).\n  * Updated bundled flup middleware (upstream repo checkout), avoids\n    socket.fromfd AttributeError on win32 if cgi is forced, gives helpful\n    exception msg.\n  * wikiutil: Fixed required_arg handling (no exception when trying to raise\n    exception that choice is wrong).\n  * Do not use MoinMoin.support.* to import 3rd party code, give dist packages\n    a chance.\n  * wikiutil.clean_input: avoid crash if it gets str type\n  * request: fixed for werkzeug 0.6 and 0.5.1 compatibility. Please note that\n    we didn't do much testing with 0.6 yet. So, if you use 0.6, please do some\n    testing and provide feedback to us.\n  * AttachFile._build_filelist: verifies readonly flag for unzip file link\n  * attachUrl: fix wrongly generated tickets (e.g. for AttachList macro)\n  * http headers: fix duplicated http headers (e.g. content-type)\n\n  New features:\n  * info action: added pagination ability to revision history viewer.\n    Use cfg.history_paging = True [default] / False to enable/disable it.\n  * ldap_login auth: add report_invalid_credentials param to control wrong\n    credentials error message (this is typically used when using multiple\n    ldap authenticators).\n  * Add RenderAsDocbook to actions_excluded if we have no python-xml.\n  * Upgraded pygments to 1.2.2 (some fixes, some new lexers).\n  * Text editor: if edit_rows==0 (user profile or config), we dynamically size\n    the text editor height. This avoids double sliders for the editor page\n    in most cases.\n\n  Other changes:\n  * New docs/REQUIREMENTS.\n  * Added a less magic cgi/fcgi driver (moin.fcgi), added fixer middleware\n    for apache2/win32 to it.\n\n\nVersion 1.9.1:\n  Bug fixes:\n  * Fixed CVE-2010-0667: sys.argv security issue.\n  * Fixed FileSessionService - use session_dir from CURRENT request.cfg (it\n    mixed up session_dirs in farm setups).\n    HINT: if you added the hotfix to your wikiconfig, please remove it now.\n  * Fixed creation of lots of session files (if anon session were enabled and\n    user agent did not support cookies).\n  * Fixed session file storage for a non-ascii base path.\n  * Fixed session cookie confusion for nested URL paths (like path=/ and\n    path=/mywiki - for more info, see also \"New features\").\n  * Handle cookie_lifetime / anonymous_session_lifetime upgrade issue\n    gracefully: emit errors/warnings to log, use old settings to create\n    cfg.cookie_lifetime as expected by moin 1.9.\n  * flup based frontends: fixed SCGI and AJP (didn't work).\n  * farmconfig example: remove wrong comment, add sample http/https entry.\n  * Fixed password reset url (email content needs full URL).\n  * Page: fixed adding of page contents (only data added now, without metadata) -\n    fixes MoinMoinBugs/DeprecatedPageInclusionErrornousPageInstructionsProcessing\n  * xmlrpc:\n    * Process attachname in get/putAttachment similarly.\n    * revertPage: convert pagename to internal representation.\n    * Fixed auth calls used by jabberbot (needs more work).\n  * Added missing config.umask support code (setting was not used), fixed\n    config.umask usage for page packages.\n  * Fixed browser language detection.\n  * Fixed language pack generation/installation for pt-br, zh, zh-tw.\n  * Fixed caching of formatted msgs, see MoinMoinBugs/1.9EditPageHelpLinksBroken.\n  * Fixed usage of i18n.wikiLanguages() on class level (moved to method), failed\n    when tools import the module (e.g. pydoc -k foo).\n  * highlight parser:\n    * fixed caching issue for \"toggle line numbers\" link.\n    * added missing support for console/bash session\n  * Fixed precedence of parsers: more special parsers now have precedence\n    before moin falls back to using the HighlightParser (syntax highlighting).\n  * Added extensions to the rst, moin and creole parser (example.rst, example.moin and\n    example.creole attachments are rendered now when viewed).\n  * Fixed MoinMoinBugs/LineNumberSpansForProcessInstructionsMissed for\n    moin_wiki, highlight and plain parser.\n  * Fixed MoinMoinBugs/LineNumberAnchorsInPreformattedText for highlight and\n    plain parser.\n  * Fixed MoinMoinBugs/TableOfContentsBrokenForIncludedPages.\n  * Exception raised on calling add_msg() after send_title(), which leads to \n    Internal Server Error on calling several actions (diff, preview) for \n    deprecated pages, is replaced with warning and call stack information in \n    the log.\n  * AttachFile.move_file: send events (so e.g. xapian index update happens)\n  * SubProcess: fixed win32-specific parts, fixed imports (fixes calling of\n    external xapian index filters)\n  * Fixed auth methods that use redirects (like OpenID).\n  * OpenID client:\n    * Add setting cfg.openidrp_allowed_op, default is [].\n    * Fixed logging in with openid and associating with an existing account.\n    * openidrp_sreg extension: handle UnknownTimeZoneError gracefully\n  * OpenID server:\n    * Fixed TypeError.\n    * Fixed processing POSTed form data AND URL args.\n\n  New features:\n  * diff: Added displaying of information about revisions (editor, size, \n    timestamp, comment), added revision navigation.\n  * text editor: added @TIMESTAMP@ variable for adding a raw time stamp\n  * xmlrpc: added renamePage and deleteAttachment methods.\n  * Accept \"rel\" attribute for links (moin wiki parser).\n  * Generate session cookie names to fix cookie path confusion and enable port-\n    based wiki farming.\n\n    HINT: New setting cfg.cookie_name:\n\n    None (default): use MOIN_SESSION_<PORT>_<PATH> as session cookie name. This\n                    should work out-of-the-box for most setups.\n\n    'siteidmagic': use MOIN_SESSION_<SITEID>, which is unique within a wiki farm\n                   created by a single farmconfig (currently, cfg.siteid is just\n                   the name of the wiki configuration module).\n\n    'other_value': use MOIN_SESSION_other_value - this gives YOU control. Just\n                   use same value to share the session between wikis and use a\n                   different value, if you want a separate session.\n\n    HINT: Please do not use cfg.cookie_path any more - it usually should not be\n    needed any more, as we now always put path=/ into the cookie except if you\n    explicitly configure something else (only do that if you know exactly what\n    you're doing and if the default does not work for you).\n\n    HINT: see also the HelpOnSessions page which shows some typical configs.\n  * Store expiry into sessions, use moin maint cleansessions script to clean up.\n    HINT: use moin ... maint cleansessions --all once after upgrading.\n    HINT: you may want to add a cron job calling moin ... maint cleansessions\n          to regularly cleanup expired sessions (it won't remove not expired\n          sessions).\n\n  Other changes:\n  * Added rtsp, rtp, rtcp protocols to url_schemas.\n  * Added more info about index building to xapian wikiconfig snippet.\n  * Updated the wikicreole parser to version 1.1.\n\n\nVersion 1.9.0:\n  Note: This is a reduced CHANGES, ommitting details from rc/beta test and\n        also less interesting minor changes and fixes. It shows changes\n        relative to 1.8.6 release.\n        If you want to see full detail, read it there:\n        http://hg.moinmo.in/moin/1.9/file/b290d938be63/docs/CHANGES\n\n  New features: ==============================================================\n  * HINT: MoinMoin requires Python 2.4 now. If you only have Python 2.3 and\n    you don't want to upgrade it, please use MoinMoin 1.8.x.\n  * HINT: MoinMoin is now a WSGI application.\n    Please read the new install docs about how to use it, see:\n    http://master19.moinmo.in/InstallDocs\n    You also have a local copy of that page as docs/INSTALL.html.\n  * HINT: due to big changes in the request processing and the request\n    object (related to the WSGI refactoring), many 3rd party plugins might\n    need code updates to work with moin 1.9.\n  * HINT: We now offer different sized sets of system/help pages and the default\n    underlay just contains a single page: LanguageSetup. You need to be\n    superuser, visit that page and then install the language packs you like\n    (minimum is the essential set for English).\n  * HINT: LanguageSetup is the default page_front_page, you need to change that\n    after installing language packs (see above).\n\n  * New modular group and dict data access, you can use group and dict \n    backend modules to access group and dict data stored anywhere you like.\n    Currently we provide these backends:\n      * WikiGroups and WikiDicts backends get data from wikipages. They work\n        similar to old wikidicts code (but with less caching issues :).\n      * ConfigGroups and ConfigDicts backends get data from a dictionary\n        defined in the wiki config.\n      * CompositeGroups and CompositeDicts compose several backends, so data\n        may be retrieved from several sources. For example, groups may be\n        defined in the wiki config and on wiki pages.\n    * Using cfg.groups and cfg.dicts, you can define the backend to use to\n      access group and dict information (default: WikiGroups / WikiDicts\n      backend).\n      See the wiki/config/more_samples/ directory (groups_wikiconfig_snippet\n      and dicts_wikiconfig_snippet).\n    * See also the new HelpOnDictionaries and HelpOnGroups pages.\n\n  * Improved Xapian indexing / search:\n    * Moin's Xapian based search code was refactored:\n      * It is now based on the xappy library (see MoinMoin.support.xappy).\n      * Minimum Xapian requirement is 1.0.6 now.\n      * Outdated and unmaintained xapwrap lib was removed.\n      * regex search with Xapian enabled also is based on the xapian index now\n    * Safe 2-stage xapian index rebuilding:\n      moin index build --mode=buildnewindex  # slow, concurrent\n      <stop wiki>\n      moin index build --mode=usenewindex  # fast\n      <start wiki>\n    * Added wikiconfig snippet for xapian search.\n\n  * Improved drawing support:\n    * TWikiDraw:\n      * Support code was refactored/moved to the twikidraw action.\n      * Use drawing:example.tdraw to invoke it (drawing:example also still\n        works for backwards compatibility)\n      * Drawings are now stored as a single attachment foo.tdraw.\n        We added a migration script that converts your existing drawings.\n    * AnyWikiDraw:\n      * Java applet added, source code see contrib/.\n      * Support code for it is in anywikidraw action.\n      * Use drawing:example.adraw to invoke it.\n      * Drawings are stored in a similar way as foo.adraw.\n    * cfg.extensions_mapping added for mapping of attachment file extensions\n      to actions (currently used for anywikidraw/twikidraw action)\n\n  * Themes / static files related:\n    * Added modernized_cms theme (hides most wiki widgets from modernized if the\n      user is not logged in).\n    * Static file serving built-in (moved wiki/htdocs to MoinMoin/web/static/htdocs).\n      MoinMoin.web.static has a static file serving wrapper that uses the files\n      from htdocs subdirectory by default (docs=True).\n      You can also give another path or switch off creation of that static wrapper.\n      See the docstring of the static package for details.\n    * Theme packages: do_copythemefile now copies theme files to\n      MoinMoin/web/static/htdocs.\n\n  * Syntax highlighting is based on the pygments library now, it does this for\n    LOTS of stuff (programming languages, config files, ...) - use it like this:\n    {{{#!highlight xxx\n    ...\n    }}}\n    xxx is any of the markups pygments supports (see HelpOnParsers).\n    Note: we still have some (deprecated) small wrappers around pygments,\n    so the old syntax #!python/pascal/cplusplus/... still works.\n\n  * Authentication improvements:\n    * HTTP auth related (see also HelpOnAuthentication):\n      * HTTPAuthMoin: http basic auth done by moin\n      * HINT: auth.http.HTTPAuth is now auth.GivenAuth\n        This was badly named from the beginning as for most servers, it just\n        looked at REMOTE_USER environment variable and relied on the server\n        doing the authentication (could be http basic auth or any other auth).\n    * LDAP/AD auth: new name_callback param to create a custom wiki username (not\n      the ldap login username)\n    * OpenID auth:\n      * Support for Simple Registration (SREG) extension.\n        Basic profile fields can be copied from OpenID provider when logging in.\n      * Support for Teams extension.\n      * Ability to accept logins from specific OpenID providers.\n        Login form changes based on configuration for better usability:\n        * 0 providers: normal text input box for OpenID URL\n        * 1 provider: hidden field, automatic form submission with JavaScript\n        * 2+ providers: select field, uses directed identity\n\n  * Sessions / cookies:\n    * HINT: cfg.cookie_lifetime is now a tuple (anon, loggedin), giving the\n      lifetime of the cookie in hours, accepting floats, for anon sessions and\n      logged-in sessions. Default is (0, 12). 0 means not to use a session\n      cookie (== not to establish a session) and makes only sense for anon users.\n    * cfg.cookie_httponly is new and defaults to False. Please note that if you\n      set it to True, TWikiDraw and similar stuff won't be able to use the session\n      cookie. Thus, if your wiki page doesn't allow writing for everybody, saving\n      a drawing will fail, because there is no session (== no logged in user) for\n      the TWikiDraw applet's saving POSTs.\n\n  * Macros:\n    * WikiConfigHelp: added section keyword for selecting a subset of the\n      description, e.g. <<WikiConfigHelp(section=\"xapian\")>>\n    * HighlighterList: show Pygments syntax highlighters (see HelpOnParsers)\n\n  * Actions:\n    * SlideShow action added (please use the \"modernized\" theme [default])\n    * raw action mimetype support: ...?action=raw&mimetype=text/css\n    * PackagePages: create package file on-the-fly in memory and send it to the\n      client (do NOT create package.zip attachment)\n\n  * Improved logging / debugging / developer support:\n    * Main exception handler: include request url in log output.\n    * Environment variable MOIN_DEBUGGER=off/web/external (default is \"off\").\n    * Handle wikiserverconfig(_local) in the same way as wikiconfig(_local).\n\n  * GUI editor: improved attachment dialog\n\n  * \"moin ... account homepage\" script to create user homepages.\n\n\n  Removed features: ==========================================================\n  * Removed cfg.traceback_* settings (use logging configuration)\n  * Removed old session code and settings:\n    * Removed cfg.session_handler and session_id_handler (use cfg.session_service)\n    * Removed cfg.anonymous_session_lifetime (use cfg.cookie_lifetime)\n\n\n  Bug fixes: =================================================================\n  * Xapian indexing:\n    * Rely on xapian's locking (remove moin's additional and sometimes broken\n      locking, that blocked index-rebuilds or updates sometimes).\n    * Removed indexer threading.\n    * Fixed (reimplemented) indexer queue.\n    * Less disruptive xapian index rebuild.\n  * AdvancedSearch: example didn't work, fixed\n\n  * With the groups/dicts code rewrite, we fixed the caching problems that the\n    old code (< 1.9) sometimes had.\n\n  * Actions:\n    * Abort RenamePage if renaming of main page fails (do not try to rename\n      subpages).\n    * AttachFile do=view: quote filename and pagename params for EmbedObject\n      macro call\n    * unsubscribe action: add msg types so icons get displayed\n\n  * Parsers:\n    * fixed MoinMoinBugs/LineNumbersWorkingBuggyWithHighlightParser\n\n  * GUI editor: roundtripping works now for .pdf/doc/... attachment transclusion\n\n  * AttachFile: added remove_attachment() and FileRemovedEvent (mail and xapian\n    support, no jabber support yet).\n\n  * Fix makeForbidden403() calls - is makeForbidden(403, ...) now.\n  * sendmail: add more debug logging, check for empty recipients list\n  * Fix MoinMoinBugs/MissingPageShouldn'tOfferToCreatePageForReadonlyUsers\n  * Fix MoinMoinBugs/1.6XmlRpcPutPagePagenameEscape\n  * Bug with \"language:en\" was fixed for the Moin search. Now language:\n    behaves like described on HelpOnSearching.\n  * Fixed MoinMoinBugs/DeprecatedIsNotRespected (search ranking, WantedPages).\n  * OpenID: always return error messages with CancelLogin if OpenID process fails.\n  * suid: simplify and fix, bigger selection box\n\n  * patch werkzeug 0.5.1 to catch OverFlowError and ValueError so it doesn't\n    crash when receiving invalid If-modified-since header from client.\n\n\n  Other changes: =============================================================\n  * 'modernized' theme:\n    * use it by default (1.8 used 'modern')\n    * move title_with_separators() from Modernized theme to ThemeBase\n    * add a span with \"pagepath\" class to title_with_separators\n  * add the sidebar() method from Mandarin and Gugiel themes to ThemeBase\n  * updated flup to 1.0.2+ ( http://hg.saddi.com/flup-server/rev/6ea1ffac1bcb )\n  * updated pygments to 1.1.1+ ( http://dev.pocoo.org/hg/pygments-main/rev/948f8885af16 )\n  * updated parsedatetime to 0.8.7\n  * increase surge protection limits for AttachFile to avoid trouble with image galleries\n  * HINT: simplify wikiserver configuration by using same names as werkzeug's\n    run_simple() call.\n  * Removed moin account check's --lastsaved option, it is default now\n    (checking last use with trail file did not work in 1.9 anyway).\n  * ImageLink page has been killed (ImageLink macro is gone since 1.6.1).\n  * Allowed disabling of timezone and language user prefs if they are\n    part of the user's login fields (i.e. OpenID SREG).\n  * Added option to disable local registration links and direct user\n    to registration page at an OpenID provider instead.\n\n  Developer notes: ===========================================================\n  * groups and dicts API changes:\n    * request.groups and request.dicts provide access to groups and dicts.\n    * MoinMoin.wikidicts is gone, please use MoinMoin.datastruct.\n    * LazyGroup and LazyGroupsBackend base classes for implementing backends\n      which potentially deal with huge amounts of data (like a LDAP directory).\n      Use MoinMoin/datastruct/backends/config_lazy_groups.py as a draft for\n      new backends.\n    * See http://moinmo.in/Groups2009 for more details.\n  * i18n: new approach for defining sets of system/help pages (see i18n.strings).\n    CheckTranslation, page packager, wikiutil.isSystemPage() use those sets.\n  * killed deprecated macro.form attribute (didn't work as expected anyway due\n    to WSGI refactoring) - please use macro.request.{args,form,values}\n\n\nVersion 1.8.8:\n  Fixes:\n    * Fixed XSS issues (see MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg).\n    * Fixed XSS in Despam action (CVE-2010-0828).\n    * wikiutil.clean_input: avoid crash if it gets str type\n    * Add RenderAsDocbook to actions_excluded if we have no python-xml\n    * AttachFile._build_filelist: verifies readonly flag for unzip file link\n    * attachUrl: fix wrongly generated tickets (e.g. for AttachList macro)\n    * MoinMoin.util.filesys.dc* (dircache can't work reliably):\n      * disable usage of dircache, deprecate dc* functions\n      * remove all calls to filesys.dc* (dclistdir, dcdisable)\n    * Fixed crash, see MoinMoinPatch/IncludeMacroWithDocBookFormatter\n    * Avoid hardly recoverable crashes if #format specification is invalid\n\n  New features:\n    * auth.ldap_login: add report_invalid_credentials param to control wrong\n      credentials error message (typically used when using multiple ldap\n      authenticators)\n\n\nVersion 1.8.7:\n  Fixes:\n  * Fixed major security issues in miscellaneous parts of moin.\n    HINT: if you have removed superuser configuration to workaround the issue\n    (following our security advisory), you may re-add it after installing this\n    moin release. If you don't need superuser capabilities often, it might be\n    wise to not have superusers configured all the time, though.\n  * Improved package security: cfg.packagepages_actions_excluded excludes\n    unsafe or otherwise questionable package actions by default now.\n  * wiki parser: fixed transclusion of (e.g. video) attachments from other\n    pages.\n  * Fixed edit locking for non-logged in editors and cfg.log_remote_addr=False.\n  * xmlrpc:\n    * Process attachname in get/putAttachment similarly.\n    * revertPage: convert pagename to internal representation.\n  * Fixed config.umask usage for page packages.\n  * Fixed usage of i18n.wikiLanguages() on class level (moved to method),\n    failed when tools import the module (e.g. pydoc -k foo).\n  * SubProcess: fixed win32-specific parts, fixed imports (fixes calling of\n    external xapian index filters)\n\n\nVersion 1.8.6:\n  Bug fixes:\n  * Xapian indexing / indexing filters:\n    * fix deadlocks with well- and misbehaving external filters\n    * work around indexing run crashing when encountering encoding problems\n      with non-ascii filenames\n    * OpenOffice/OpenDocument filters: catch UnicodeDecodeErrors (happens\n      with password protected files)\n  * i18n: check if languages is not initialized yet, don't crash\n  * http_redirect: use 301 redirect for some cases\n  * do not use httponly session cookies, makes trouble with twikidraw and ACLs\n  * GetText2 macro: fix for named placeholder\n  * Fix SHA -> SSHA password hash upgrade for old user profiles.\n  * abort RenamePage if renaming of main page fails (do not try to rename\n    subpages)\n\n  New features:\n  * search: improve search result ordering\n  * add MS Powerpoint indexing filter (needs catppt from catdoc package)\n  * migration scripts: make finding damaged edit-log entries easier\n  * SubscribeUser action: support username regexes and unsubscribing.\n    Usage (enter this into the input form field you get after invoking\n    SubscribeUser action from the \"More Actions\" menu:\n    [+|-][re:]username[,username,...] \n\n    +username: subscribes user <username> (+ is optional/default)\n    -username: unsubscribes user <username>\n    +re:username_re: subscribes users who match <username_re> regex.\n    -re:username_re: unsubscribes users who match <username_re> regex.\n\n\nVersion 1.8.5:\n  Bug fixes:\n    * Attachment links: fix processing of attributes (e.g. 'target', 'title')\n    * Upgrade FCKeditor from 2.6.4 to 2.6.4.1.\n    * PDF embedding: fix html, works better with PDF browser plugins now.\n    * Fix typo in rightsidebar CSS.\n    * Action revert: avoids reverting to a deleted current revision.\n    * Action diff: enable prev/next button only in the range of given revisions.\n    * Add a Auto-Submitted: auto-generated header to generated mails.\n    * Include comment in email notifies.\n    * mailimport: fix endless looping while trying to import a forwarded mail.\n    * fuid: keep same fake_mtime for intervals of max_staleness duration.\n    * Fixes a bug with empty list items in the GUI editor.\n    * Improve filesys.rename compatibility code (win32).\n    * Fix locking for CacheEntry.\n    * Xapian indexing: catch exception when a bad zip file is encountered.\n    * openidrp / botbouncer: fix param count for CancelLogin().\n\n  New features:\n    * Added CAS authentication.\n    * Added httponly cookie support and use it for session cookie.\n\n  Other changes:\n    * HTTP auth: added debug logging.\n    * Minor LDAP auth improvements.\n    * Data browser widget:\n      * Add (h)column<idx> css class to make it styleable.\n      * Include only necessary autofilter options.\n    * moin maint cleancache purges now drafts, too.\n    * Add gopher and apt protocols to url_schemas.\n    * Add .csv, .flv, .swf to MIMETYPES_MORE.\n\n\nVersion 1.8.4:\n  Bug fixes:\n    * ACL security: fix bug in hierarchical ACL processing, more restrictive\n      sub page ACLs did not work if the current user name did not give a match\n      within the sub page ACL (instead, the less restrictive parent page ACL\n      was used).\n      Non-hierarchical ACL processing (the default) is NOT affected.\n    * Creole parser: fix spaces in multiline elements.\n    * Use msie.css only for Internet Explorer older than version 8, fixes\n      e.g. the double rendering of link icons.\n    * http auth: do auth_type comparisons case-insensitively (spec-compliant)\n\n  New features:\n    * EmbedObject macro: changed default width value for PDF files to 100%\n                         (use a recent Adobe Reader to make this work).\n    * CopyPage action: added a TextCha for it\n\n  Other changes:    \n    * Creole parser: Add second license: BSD\n\n\nVersion 1.8.3:\n  Bug fixes:\n    * AttachFile XSS fixes: move escaping to error_msg / upload_form\n    * AttachFile move: add more escaping (maybe not XSS exploitable though)\n    * email attachments import with xapian indexing enabled: fix AttributeError\n    * fix wrong links in attachment notifications\n    * AttachFile do=view: quote filename and pagename params for EmbedObject\n      macro call\n    * AttachFile: fix exception when someone just clicks on upload, without\n      giving a file\n    * ldap_login: use None as default value for ssl certs/keys (using '' for\n      the pathes lets it fail with Connect Error)\n    * release edit lock if someone saves an unchanged page\n    * fix sendmail.encodeAddress (do not [QP] encode blanks, do not un-\n      necessarily use [QP] encoding for pure ascii mail addresses)\n    * Fixed docs bug: see HINT about secrets configuration at version 1.8.0\n      (1.8.0 Other changes).\n    * backup action: add 'self' dummy argument for backup_exclude function\n    * login action: fix formatting of error messages\n    * unsubscribe action: add msg types so icons get displayed\n    * fix quoting for pagehits stats (info action) - was not working for pagenames with blanks\n    * macro.TableOfContents: bug fix for MoinMoinBugs/TableOfContentsIgnoresSectionNumbersPragma\n\n  New features:\n    * added modernized_cms theme\n    * use url_prefix_fckeditor if you don't want to use the builtin FCKeditor\n      of moin, but a separate one at some specific url\n    * action.Load: added textcha feature\n    * add mumble protocol (nice and good quality F/OSS VOIP conference chat sw)\n    * ldap auth: new name_callback param to create a custom wiki username (not\n      the ldap login username).\n\n  Other changes:\n    * add compatibility code for set to xapwrap.index (fix py 2.6 warnings)\n    * wikiutil: MIMETYPES_MORE extended for .md5 as text/plain\n\n\nVersion 1.8.2:\n  Bug fixes:\n    * Fix AttachFile and antispam XSS issues.\n    * Modernized, modern and rightsidebar themes: make nonexistent or\n      badinterwiki links gray also when they are already visited.\n    * Fix anchor parsing for interwiki links and #redirect processing\n      instruction.\n    * user.apply_recovery_token: key must be of type string (for Python 2.6).\n    * Fix MoinMoinBugs/GuiEditorBreaksIndentedTable.\n    * Fix autofilter javascript breakage caused by including a databrowser\n      widget.\n    * Use per-wiki i18n cache (fixes wrong links to other farm wikis).\n    * Made cfg.interwikiname and cfg.user_homewiki unicode objects (str only\n      worked for ascii names).\n    * Xapian search: fixed historysearch.\n    * Xapian search indexing:\n      * Fix index updating for trivial changes.\n      * With history search enabled and in update mode, do not try to re-index\n        old page revisions again.\n      * With history search enabled, index page attachments only once.\n      * Fix last modified time of xapian index (shown on SystemInfo page).\n    * Make logging handlers defined in logging.handlers work (e.g.\n      class=handlers.RotatingFileHandler)\n    * Jabber notifications:\n      * Use an RFC compliant message type.\n      * Fix user creation notifications.\n    * OpenID: Compatibility fix for python-openid 2.x.x (also works with\n      1.x.x), fixes crash when trying to associate moin user to OpenID.\n    * Have a wikiserverconfig.py in wiki/server/ so setup.py copies it.\n    * Fixed inconsistent handling of fragments / anchor IDs:\n      * Fixed creole and wiki parser, other parsers might need similar fixes.\n      * IDs with blanks, non-ASCII chars etc. are now sanitized in the same way\n        for links as well as for link targets, so the user editing a page won't\n        have to bother with it.\n        E.g. [[#123 foo bar]] will link to:\n        * <<Anchor(123 foo bar)>> (moin) or {{#123 foo bar}} (creole)\n        * headline = 123 foo bar = (moin / creole)\n        Simple rule: if the link and the target are consistent, it should work.\n      * The creole wiki parser created non-human-readable sha1 heading IDs\n        before 1.8.2, now it creates same (sometimes readable) heading IDs as\n        the moin wiki parser.\n      * TitleIndex/WordIndex now also use IDs sanitized in that way internally.\n      HINT: if you manually worked around the inconsistencies/bugs before, you\n            likely have to remove those workarounds now. Same thing if you used\n            creole's sha1 heading IDs or IDs on TitleIndex/WordIndex.\n\n  Other changes:\n    * Updated FCKeditor to 2.6.4 (== many bug fixes in the GUI editor).\n    * Enhanced privacy by a new setting: cfg.log_remote_addr (default: True),\n      it controls whether moin logs the remote's IP/hostname to edit-log and\n      event-log. Use log_remote_addr = False to enhance privacy.\n    * Streamline attachment_drawing formatter behaviour.\n    * Search results: only redirect to a single search result for titlesearch\n      (fuzzy goto functionality), but not for fulltext search results.\n\n\n\nVersion 1.8.1:\n  Bug fixes:\n    * Workaround win32 locking problems (caused by spurious access denied\n      exceptions on that platform).\n    * Fix unicode errors that happened when password checker failed a password\n    * WikiConfig/WikiConfigHelp: fixed wrong language table headings\n    * Themes: make the margins around trail line work properly\n    * \"modernized\" theme:\n      * make broken links gray\n      * add new right/center/left/justify css classes\n      * don't force Arial\n    * Standalone server: be more specific when catching socket exceptions,\n      treat socket errors in http header emission in the same way.\n    * GUI editor:\n      * Fix heading levels when inserting new headings.\n      * Fix headers already sent exception when using e.g. edit LOCKing.\n    * Xapian indexing: fixed missing import for execfilter (only happened on\n      non-posix platforms like win32)\n\n  * New features:\n    * Themes:\n     * Make the TOC shrinkwrap, add white background to navigation macro.\n       The table of contents looked bad spanning the whole width of the page.\n       It's made to shrinkwrap now, so it will only get as wide, as the longest\n       heading. We use display:inline-table, so this won't work in MS IE6,\n       which still displays it the old way.\n       Navigation macro now has a white background, to make it more readable\n       when it's floating over a pre block or TOC.\n     * Make the numbers in lists in table of contents right-aligned.\n     * Refactored and extended theme.html_stylesheets() to make alternate\n       stylesheets possible. Stylesheet definitions now can either be:\n       2-tuples: (media, href)  # backwards compatibility\n       or:\n       3-tuples: (media, href, title)  # new, for defining alternate stylesheets\n       This works within themes as well as in the wiki config.\n       See also: http://www.w3.org/Style/Examples/007/alternatives.html\n\n\nVersion 1.8.0:\n  Note: This is a reduced CHANGES, ommitting details from rc/beta test and\n        also less interesting minor changes and fixes. It shows changes\n        relative to 1.7.2 release.\n        If you want to see full detail, read it there:\n        http://hg.moinmo.in/moin/1.8/file/6130eab15936/docs/CHANGES\n\n  New Features: ==============================================================\n    * HINT: New \"modernized\" theme - if you use \"modern\" [default], try:\n      theme_default = 'modernized'\n      If you find problems with \"modernized\", please report them because we\n      want to use it as default theme in future.\n    * GUI Editor:\n      * upgraded to use FCKEditor version 2.6.3\n      * user can insert and modify various types of MoinMoin links\n    * New plugin_dirs setting to allow multiple plugin pathes (additional to\n      the automatically configured plugin_dir [default: data_dir/plugin]).\n    * @EMAIL@ expands to a MailTo macro call with the obfuscated email address\n      of the current user.\n    * New macros \"WikiConfig\" and \"WikiConfigHelp\".\n    * Per-parser quickhelp, 'quickhelp' class variable of parser class.\n    * Secure session cookies for https (see cfg.cookie_secure).\n    * Added left/center/right/justify css classes to builtin themes.\n      Use them like:\n      {{{#!wiki justify\n      this content is justified....\n      }}}\n\n  Removed Features: ==========================================================\n    * HINT: url_prefix setting (use url_prefix_static or just use the default)\n    * traceback_log_dir setting (we just use logging.exception)\n    * editor_quickhelp setting (replaced by per-parser quickhelp)\n    * Restoring backups with the backup action and related settings (while\n      creating backups is no big issue and should work OK, restoring them\n      had fundamental issues related to overwriting or not-overwriting of\n      existing files - thus we removed the \"restore\" part of the action and\n      recommend that you just contact the wiki server admin in case of trouble,\n      give him your wiki backup file and let him carefully restore it.)\n    * Removed unmaintained DesktopEdition (moin 1.5.x style) and phpwiki\n      migration scripts from contrib/ directory.\n\n  Bug Fixes: =================================================================\n    * GUI Editor - fixed lots of bugs.\n    * Fixing https detection for servers using HTTPS=1 and also for WSGI\n      servers not using HTTPS/SSL_ environment, but just wsgi.url_scheme.\n    * Search results: link to 'view' rendering of found attachments.\n    * Standalone server: fix serverClass and interface argument processing,\n      announce used serverClass in log output.\n    * mointwisted: fixed Twisted start script.\n    * Logging:\n      * Use logging framework for messages emitted by warnings module (e.g.\n        DeprecationWarning), silence some specific warnings.\n      * Removed superfluous linefeeds in timing log output.\n    * Bug fix for language not installed (MoinMoinBugs/WikiLanguageNotDefined).\n    * Fixed editbar hidden comment link cosmetics for sidebar themes (hide the\n      complete list element).\n    * MoinMoinBugs/DoubleScriptNameInSitemap (fixing urls given by sitemap\n      action, if the wiki does not run in the root url of the site)\n    * Fixed backup action configuration (broke on win32).\n    * Fixed MoinMoinBugs/PackagesAddRevision.\n    * SyncPages: add workaround for callers calling log_status with encoded\n      bytestrings.\n    * Fixed dbw_hide_buttons javascript.\n    * HINT: Jabber bot can now be configured to use an authentication realm\n      which is different from the server's hostname; the xmpp_node\n      configuration parameter can now contain a full JID and the xmpp_resource\n      parameter is no longer supported.\n\n  Other Changes: =============================================================\n    * HINT: new configuration for misc. secrets, please use either:\n          secrets = \"MySecretLooongString!\" # one secret for everything\n      or:\n          secrets = {\n              'xmlrpc/ProcessMail': 'yourmailsecret', # for mailimport\n              'xmlrpc/RemoteScript': 'yourremotescriptsecret',\n              'action/cache': 'yourcachesecret', # unguessable cache keys\n              'wikiutil/tickets': 'yourticketsecret', # edit tickets\n              'jabberbot': 'yourjabberbotsecret', # jabberbot communication\n          }\n      Secret strings must be at least 10 chars long.\n      Note: mail_import_secret setting is gone, use\n            secrets[\"xmlrpc/ProcessMail\"] instead of it.\n      Note: jabberbot secret setting is gone, use\n            secrets[\"jabberbot\"] instead of it.\n    * HINT: user_autocreate setting was removed from wiki configuration and\n      replaced by a autocreate=<boolean> parameter of the auth objects that\n      support user profile auto creation.\n    * moin import irclog: use irssi parser to format logs, mapped .irc\n      extension to text/plain mimetype.\n    * HINT: backup action: backup_exclude (default: \"do not exclude anything\")\n      is now a function f(filename) that tells whether a file should be\n      excluded from backup.\n      You can get the old regex exclusion functionality by using:\n      backup_exclude = re.compile(your_regex).search\n      Be careful with your regex, you might need to use re.escape() to escape\n      characters that have a special meaning in regexes (e.g.: \\.[] etc.).\n      If in doubt, maybe just leave backup_exclude at the default and don't\n      exclude anything.\n    * Speed up javascript comments processing on IE by getElementsByClassName()\n    * Added sk (slovak) i18n, updated i18n.\n\n\n1.7.3:\n  New features:\n    * Secure session cookies for https, see cfg.cookie_secure.\n    * Add left/center/right/justify classes to builtin themes.\n\n  Fixes:\n    * Python 2.3 compatibility fixes.\n    * Fixed https detection for servers using HTTPS=1 and also for wsgi servers\n      not using HTTPS/SSL_ environment, but just wsgi.url_scheme.\n    * GUI editor:\n      * Fix crash when editing a page with non-ASCII pagename and inserting a link\n      * Fix \"headers already sent exception\" with edit LOCKs.\n    * i18n.__init__: Bug fix for wiki language not installed.\n    * Fixed URLs given by sitemap action, if the wiki does not run at / URL.\n    * Search results: link to 'view' rendering of found attachments\n    * Logging:    \n      * Removed superfluous linefeed in timing log output.\n      * Use logging framework for messages emitted by warnings module (e.g.\n        DeprecationWarning), silence some specific warnings.\n    * Fix dbw_hide_buttons javascript.\n    * Standalone server:\n      * fix serverClass argument processing\n      * fix --interface=\"\" argument processing\n    * mointwisted:\n      * added missing pidFile parameter\n      * better use Config.name for pidFile to avoid conflicts and keep same\n        behaviour as in the past\n    * Jabber bot can now be configured to use an authentication realm which\n      is different from the server's hostname\n\n\nVersion 1.7.2:\n  Fixes:\n    * Fix leakage of edit-log file handles (leaked 1 file handle / request!).\n    * Fix for MoinMoinBugs/SystemAdminMailAccountData (using POST and forms)\n    * Wiki parser: avoid IndexError for empty #! line\n    * MonthCalendar macro: fix parameter parsing / url generation\n    * Xapian indexing filters (MoinMoin/filter/ or data/plugin/filter/):\n      Some indexing filter scripts (e.g. for MS Word documents or PDF files)\n      failed on windows because of the single-quote quoting we used (that\n      works on Linux and other Posix systems). The fix introduces platform-\n      dependant automatic quoting, using double-quotes on win32 and single-\n      quotes on posix.\n      HINT: if you use own filter plugins based on execfilter, you have to\n      update them as the filename quoting (was '%s') is now done automatically\n      and must not be part of the command string any more (now just use %s).\n      See MoinMoin/filter/ for some up-to-date code (esp. the PDF filter).\n    * Prevent CategoryTemplate being listed as a category (it is a Template,\n      but matched also the category regex) - added to sample wikiconfig.\n    * LDAP auth: fix processing of TLS options\n    * UpdateGroup xmlrpc server side: fix wrong arg count error\n    * UpdateGroup client: use multicall / auth_token, refactor code so that\n      updateGroup function is reusable.\n    * Improve Python 2.3 compatibility, add notes where 2.4 is required.\n\n\nVersion 1.7.1:\n  New features:\n    * New 'cache' action (see developer notes).\n\n  Fixes:\n    * Security fix: XSS fix for advanced search form\n    * Avoid creation of new pagedirs with empty edit-log files by just\n      accessing a non-existant page. If you used 1.7 before, you likely have\n      quite some trash pagedirs now and you can clean them up by using:\n      moin --config-dir=... --wiki-url=... maint cleanpage\n      This will output some shell script (please review it before running!)\n      that can be used to move trash pages into some trash/ directory and also\n      moves deleted pages into some deleted/ directory. Maybe keep a copy of\n      those directories for a while just for the case.\n    * Server specific fixes:\n      * standalone (wikiserver.py): fix --pidfile and --group option, fix\n        operation without a wikiserverconfig.py (use builtin defaults).\n      * mod_python: work around mod_python 3.3.1 problems with file uploads.\n        Note: if you are still using mod_python, we strongly recommend you\n\t      try out mod_wsgi (in daemon mode) - it has less bugs, better\n\t      security, better separation, WSGI is a Python standard, and moin\n\t      developers also use WSGI. See HelpOnInstalling/ApacheWithModWSGI.\n    * revert action: fixed for deleted pages.\n    * Search:\n      * Xapian indexing: Removed crappy \"hostname\" tokenization.\n        Fixes MoinMoinBugs/1.7 XapianNotWorkingWithLeadingNumbersInTitle.\n        Also tokenize CamelCase parts of non-wikiwords.\n      * Make query parser reject more invalid input.\n      * If query parsing raises a BracketError, at least tell what the problem\n        is (and not just raise empty  ValueError).\n      * Category search: ignore traling whitespace after ----\n    * Argument parser:\n      * Fixed sort() usage in UnitArgument to be Python 2.3 compatible.\n      * Fixed MoinMoinBugs/TypeErrorInWikiutils.\n    * Macros:\n      * TableOfContents: skip outer-most <ol> levels when page isn't using\n        the biggest headings\n      * MonthCalendar: fix MoinMoinBugs/MonthCalendarBreaksOnApostrophe\n    * xslt parser: fix MoinMoinBugs/DoNotConvertUnicodeToUTF8ForXsltParser\n    * OpenID RP: make it compatible to python-openid 2.2.x\n    * PackagePages.collectpackage: removed encoding from file name of zipfile\n    * Surge protection: exclude localnet no matter whether user is known or not.\n    * Notifications: fix MoinMoinBugs/DuplicateNewUserNotification\n    * Script moin account create/disable/resetpw: checks for already existing\n      user now.\n\n  Other changes:\n    * Prevent CategoryTemplate being listed as a category (it is a Template)\n      by changing the default page_category_regex.\n\n  Developer notes:\n    * New MoinMoin.action.cache - can be used to cache expensively rendered\n      output, e.g. generated images). Once put into the cache, moin can emit\n      a http response for that content very fast and very efficient (including\n      \"304 not changed\" handling.\n    * New file-like API in MoinMoin.caching (good for dealing with medium\n      to large files without consuming lots of memory).\n    * wikiutil.importPlugin supports getting the whole plugin module object\n      by giving function=None.\n\n\nVersion 1.7.0:\n  Note: This is a reduced CHANGES, ommitting details from rc/beta test and\n        also less interesting minor changes and fixes. It shows changes\n        relative to 1.6.3 release.\n        If you want to see full detail, read it there:\n        http://hg.moinmo.in/moin/1.7/file/76265568e8d3/docs/CHANGES\n\n  New Features: ==============================================================\n    * HINT: we added generic UPDATE instructions as docs/UPDATE.html.\n\n    * HINT: Standalone server usage changed:\n      * Standalone server can now be started via the \"moin\" script command,\n        optionally backgrounding itself.\n        See: moin server standalone --help\n      * In the toplevel dir, we have renamed moin.py to wikiserver.py (it was\n        often confused with the moin scripting command).\n        Now you have:\n        * wikiserver.py - to start the standalone server\n        * wikiserverconfig.py - to configure the standalone server\n        * wikiserverlogging.conf - to configure logging for it (default config\n          is ok for all day use, but can easily be modified for debugging)\n        * wikiconfig.py - to configure the wiki engine\n      * Removed old moin daemonizing script (replaced by moin server standalone\n        --start/stop)\n      * We now provide the \"moin\" script command also for people not using\n        setup.py, see wiki/server/moin.\n\n    * Logging\n      * New powerful and flexible logging, please see wiki/config/logging/ -\n        HINT: you have to upgrade your server adaptor script (e.g. moin.cgi)\n        and load a logging configuration that fits your needs from there, or\n        alternatively you can also set MOINLOGGINGCONF environment variable\n        to point at your logging config file.\n        If you use some of our sample logging configs, make sure you have a\n        look INTO them to fix e.g. the path of the logfile it will use.\n      * Moin now logs the path from where it loaded its configuration(s).\n\n    * Authentication / Sessions:\n      * HINT: New authentication plugin system, see HelpOnAuthentication. If\n        you do not use the builtin default for 'auth' list, you likely have to\n        change your configuration. See wiki/config/snippets/ for some samples.\n      * HINT: New session handling system (no moin_session any more, now done\n        internally and automatically), see HelpOnSessions for details.\n      * Added OpenID client and server support.\n        See: HelpOnAuthentication and HelpOnOpenIDProvider.\n      * cfg.trusted_auth_methods is a list of auth methods that put an\n        authenticated user into the \"Trusted\" ACL group.\n\n    * User profiles / password recovery / notification:\n      * New newacount action for creating new user accounts/profiles. If you\n        don't want users creating new accounts on their own, you can add this\n        action to actions_excluded list.\n      * New recoverpass action for password recovery:\n        If you forgot your password, recoverpass sends you an email with a\n        password recovery token (NOT the encrypted password) that is valid\n        for 12 hours.\n      * New moin account resetpw script for resetting a user's password by\n        the wiki admin.\n      * New preferences plugin system, see MoinMoin/userprefs/__init__.py.\n      * New notification system with an optional jabber notification bot, see\n        HelpOnNotification. HINT: wiki users have to check their notification\n        settings, esp. if they want to receive trivial update notifications.\n\n    * The diff action now has navigation buttons for prev/next change and also\n      a revert button to revert to the revision shown below the diff display.\n    * ThemeBase: support Universal Edit Button, see there for details:\n      http://universaleditbutton.org/\n    * ?action=info&max_count=42 - show the last 42 history entries of the page.\n      max_count has a default of default_count and a upper limit of\n      limit_max_count - you can configure both in your wiki config:\n      cfg.history_count = (100, 200) # (default_count, limit_max_count) default\n    * The CSV parser can sniff the delimiter from the first CSV line so other\n      delimeters than \";\" can be used.\n    * Admonition support. Added styling for tip, note, important, warning \n      and caution in the modern theme. For more info see HelpOnAdmonitions.\n    * DocBook-formatter:\n      * supports HTML entities like &rarr; and &#9731;\n      * supports the FootNote macro\n      * supports bulletless lists\n      * support for admonitions\n      * will export the wiki page's edit history as the generated article's\n        revision history. Doesn't add history of included pages.\n      * supports for the MoinMoin comment element, though only inline comments\n        are likely to be valid since the DocBook remark is an inline element.\n    * New Hits macro: shows the total hits for the page it is used on.\n\n  Removed Features: ==========================================================\n    * HINT: Removed attachments direct serving (cfg.attachments - this was\n            deprecated since long!). Use AttachFile action to serve attachments.\n    * Duplicated file attachment upload code was removed from Load action (just\n      use AttachFile action to deal with attachments).\n    * Removed 'test' action. If you like to run unit tests, use py.test.\n    * Removed Login macro.\n\n  Bug Fixes: =================================================================\n    * Better handling of ImportErrors (farmconfig, macros, wikiserverconfig).\n    * Fix failure of detection of on-disk cache updates.\n    * Fix traceback in filesys.py on Mac OS X when \"import Carbon\" fails.\n\n    * AttachFile action / file up- and download / zip support:\n      * WSGI: use wsgi.file_wrapper (or a builtin simple wrapper). Fixes memory\n        consumption for sending of large file attachments.\n      * FastCGI: flush often. Fixes memory consumption for sending of large\n        file attachments.\n      * Use the open temporary file for receiving file attachment uploads\n        (fixes big memory consumption for large file uploads).\n      * Catch runtime errors raised by zipfile stdlib modules when trying to\n        process a defective zip.\n      * When unzipping member files, decode their filenames from utf-8 and\n        replace invalid chars.\n      * Make error msg less confusing when trying to overwrite a file attachment\n        without having 'delete' rights.\n\n    * HINT: page_*_regex processing had to be changed to fix category search.\n      If you don't use the builtin (english) defaults, you will have to change\n      your configuration:\n        old (default): page_category_regex = u'^Category[A-Z]'\n        new (default): page_category_regex = ur'(?P<all>Category(?P<key>\\S+))'\n      As you see, the old regex did work for detecting whether a pagename is\n      a category, but it could not be used to search for a category tag in the\n      page text. The new regex can be used for both and identifies the complete\n      category tag (match in group 'all', e.g. \"CategoryFoo\") as well as the\n      category key (match in group 'key', e.g. \"Foo\") by using named regex\n      groups. \\S+ means the category key can be anything non-blank.\n      If you like to simultaneously support multiple languages, use something\n      like this: ur'(?P<all>(Kategorie|Category)(?P<key>\\S+))'\n      HINT: after changing your configuration, please rebuild the cache:\n        * stop moin\n        * moin ... maint cleancache\n        * start moin\n      If you don't do this, your groups / dicts will stop working (and also\n      your ACLs that use those groups). You better do a test whether it works.\n\n    * Xapian search / indexing / stemming:\n      * Use text/<format> as mimetype for pages.\n      * Index also major and minor for mimetypes, so it will find 'text' or\n        'plain' as well as 'text/plain'\n      * Fix searching for negative terms.\n      * Improve result list ordering.\n      * Index filters: redirect stderr to logging system.\n      * Remove crappy num regex from WikiAnalyzer, improve tokenization.\n      * Fix AttributeError that happened when trying to access an attribute only\n        used with xapian search (but regex search is not done by xapian)\n      * Fix IndexErrors happening when pages are renamed/nuked after the index\n        was built.\n      * Fixed indexing of WikiWords (index \"WikiWords\", \"Wiki\" and \"Words\").\n      * Fix crash if default language is un-stemmable.\n      * xapian_stemming: removed some strange code (fixes search\n        title:lowercaseword with xapian_stemming enabled)\n      * Fixed category indexing (index CategoryFoo correctly as CategoryFoo, not\n        Foo - for all languages, see page_*_regex change above).\n    * Builtin search: support mimetype: search for pages for the builtin search\n      engine (using text/<format>).\n\n    * Parser fixes:\n      * Wiki: fix subscript parsing (was broken for cases like 'a,,1,2,,').\n      * Docbook: fixed detection of WikiWords.\n      * All: Add ssh protocol to url_schemas for ssh:... URLs.\n\n    * XMLRPC:\n      * Fix xmlrpc request.read() call to use content-length, if available,\n        fixes hangs with wsgiref server.\n      * Wiki xmlrpc getPageInfoVersion() fixed:\n        * works correctly now for old page versions (was unsupported)\n        * works correctly now for current page version (reported wrong\n          data when a page had attachment uploads after the last page\n          edit)\n        * returns a Fault if it did not find a edit-log entry\n\n  Other Changes: =============================================================\n    * Using better ACLs and comments on system/help pages now, just taking\n      away 'write' permission, but using default ACLs for everything else.\n    * HINT: If you want to use xapian based indexed search, you need to have\n      Xapian >= 1.0.0 (and you can remove PyStemmer in case you have installed\n      it just for moin - we now use the stemmer built into Xapian as it\n      supports utf-8 since 1.0.0).\n    * Changed default value of cfg.search_results_per_page to 25.\n    * Surge Protection: If a user is authenticated by a trusted authentication\n      (see also cfg.auth_methods_trusted) then he/she won't trigger surge\n      protection, but moin will just log a INFO level log msg with the user's\n      name so you can find the culprit in case he/she is overusing ressources.\n    * HINT: Added MyPages and CopyPage to actions_excluded because MyPages\n      doesn't work without special SecurityPolicy anyway and CopyPage has\n      questionable behaviour.\n    * Load action now just creates a new revision of the target page, the\n      target pagename defaults to the current page name and can be edited.\n      If the target pagename is empty, moin tries to derive the target pagename\n      from the uploaded file's name.\n      Load tries to decode the file contents first using utf-8 coding and, if\n      that fails, it forces decoding using iso-8859-1 coding (and replacing\n      invalid characters).\n    * HINT: cfg.show_login is gone, see code in theme/__init__.py, this may\n      affect many themes!\n    * HINT: a new userprefs/ plugin directory will be created by the usual\n      \"moin migration data\" command.\n    * DocBook-formatter:\n      * generates a valid DOCTYPE\n      * table support has been improved\n      * handling of definitions and glossaries is more robust\n      * supports program language and line numbering in code areas\n    * HINT: ldap_login behaves a bit different now:\n      In previous moin versions, ldap_login tended to either successfully\n      authenticate a user or to completely cancel the whole login process in\n      any other case (including ldap server down or exceptions happening).\n      This made subsequent auth list entries rather pointless.\n      Now it behaves like this:\n        * user not found in LDAP -> give subsequent auth list entries a\n          chance to authenticate the user (same happens if it finds multiple\n          LDAP entries when searching - it logs an additional warning then).\n        * user found, but wrong password -> cancel login\n        * ldap server not reachable or other exceptions -> give subsequent\n          auth list entries a chance\n      So please make sure that you really trust every auth list entry you have\n      configured when upgrading or it might maybe change behaviour in a\n      unexpected or unwanted way.\n    * ldap_login now supports failover: if it can't contact your LDAP server\n      (e.g. because it is down or unreachable), it will just continue and\n      try to authenticate with other authenticators (if there are any in\n      cfg.auth list). So if you have some mirroring LDAP backup server, just\n      put another authenticator querying it there:\n          ldap_auth1 = LDAPAuth(server_uri='ldap://mainserver', ...)\n          ldap_auth2 = LDAPAuth(server_uri='ldap://backupserver', ...)\n          auth = [ldap_auth1, ldap_auth2, ]\n\n  Developer notes: ===========================================================\n    * Page.last_edit() is DEPRECATED, please use Page.edit_info().\n    * Page._last_edited() is GONE (was broken anyway), please use\n      Page.editlog_entry().\n    * New request.send_file() call, making it possible to use server-specific\n      optimizations.\n    * getText's (aka _()) 'formatted' keyword param (default: True in 1.6 and\n      early 1.7) was renamed/changed: it is now called 'wiki' and defaults to\n      False. Example calls:\n      _('This will NOT get parsed/formatted by MoinMoin!')\n      _('This will be parsed/formatted by MoinMoin!', wiki=True)\n      _('This will be used as a left side of percent operator. %s',\n        wiki=True, percent=True)\n    * Page.url 'relative' keyword param (default: True in 1.6 and early 1.7)\n      was changed to default False).\n    * The themedict no longer contains 'page_user_prefs' and 'user_prefs',\n      this may affect custom themes.\n    * The rst-parser's admonition class names are no longer prepended with\n      \"admonition_\". Instead the class names are now for example \"note\"\n      and not \"admonition_note\".\n\n\nVersion 1.6.3:\n  Fixes:\n    * Security fix: a check in the user form processing was not working as\n      expected, leading to a major ACL and superuser priviledge escalation\n      problem. If you use ACL entries other than \"Known:\" or \"All:\" and/or\n      a non-empty superuser list, you need to urgently install this upgrade.\n    * Security fix: if acl_hierarchic=True was used (False is the default),\n      ACL processing was wrong for some cases, see\n      MoinMoinBugs/AclHierarchicPageAclSupercededByAclRightsAfter\n    * For {{transclusion_targets}} we checked the protocol to be http(s),\n      this check was removed (because file: and ftp: should work also) and\n      it's not moin's problem if the user uses silly protocols that can't\n      work for that purpose.\n    * Fixed TableOfContents macro for included pages.\n    * server_fastcgi: added Config.port = None. If you want to use some port\n      (not a fd), you can set it now in your Config, e.g. port = 8888.\n    * category: search matches categories even if there are comment lines\n      between the horizontal rule and the real categories, e.g.:\n      ... some page text ...\n      ----\n      ## optionally some comments, e.g. about possible categories:\n      ## CategoryJustACommentNotFound\n      CategoryTheRealAndOnly\n\n      Note: there might be multiple comment lines, but all real categories\n            must be on a single line either directly below the ---- or\n            directly below some comment lines.\n  \n  Other changes:\n    * Added 'notes' to config.url_schemas, so you can use notes://notessrv/...\n      to invoke your Lotus Notes client.\n    * After creating a new user profile via UserPreferences, you are logged\n      in with that user (no need to immediately enter the same name/password\n      again for logging in).\n\n\nVersion 1.6.2:\n  Fixes:\n    * Security fix: check the ACL of the included page for the rst parser's\n      include directive.\n    * Potential security/DOS fix: we removed cracklib / python-crack support\n      in password_checker as it is not thread-safe and caused segmentation\n      faults (leading to server error 500 because the moin process died).\n    * Fix moin_session code for auth methods other than moin_login (e.g. http).\n      If you have worked around this using moin_anon_session, you can remove\n      this workaround now (except if you want anon sessions for other reasons).\n    * Fix moin_session code to delete invalid session cookies and also create\n      a new session cookie if it got a valid user_obj at the same time.\n    * Fix xmlrpc applyAuthToken: give good error msg for empty token.\n    * Fixed category search, use category:CategoryFoo as search term.\n    * xapian_stemming = False (changed default) to workaround some problems\n      in the code enabled by it. Fixes the problems when searching for\n      lowercase or numeric titles or word fragments with the builtin search.\n    * Fix trail for anon users without a session, do not show a single page.\n    * Fix MoinMoinBugs/WikiSyncComplainsAboutTooOldMoin.\n    * Wiki parser: fixed strange insertion of unwanted paragraphs.\n    * Wiki parser: fix interwiki linking:\n      Free interwiki links did not change since 1.5 (they still require to match\n      [A-Z][A-Za-z]+ for the wikiname part, i.e. a ASCII word beginning with an\n      uppercase letter).\n      Bracketed interwiki links now behave similar to how they worked in 1.5:\n      Moin just splits off the part left of the colon - no matter how it looks\n      like. It then tries to find that in the interwiki map. If it is found,\n      a interwiki link gets rendered. If it is not found, moin will render a\n      link to a local wiki page (that has a colon in the pagename). It will\n      also render a local wiki page link if there is no colon at all, of course.\n      Examples:\n      [[lowercasewikiname:somepage]] does an interwiki link (if in the map).\n      [[ABC:n]] does a local link to page ABC:n (if ABC is NOT in the map).\n    * Wiki parser: fix interwiki linking for the case that there are query args\n      in the interwiki map entry and you give additional query args via link\n      markup (uses correct query arg separator now), e.g.:\n      [[Google:searchterm|search this|&foo=bar]]\n    * Creole parser: fixed bug that prevents images inside links.\n    * Python parser: catch indentation error.\n    * PageEditor: fixed copyPage for write restricted pages.\n    * GUI editor: fixed javascript error with too complex word_rule regex,\n      see MoinMoinBugs/GuiEditorSyntaxError.\n    * Fixed FCKeditor dialog boxes for FireFox3.\n    * NewPage macro/newpage action: fixed for non-ascii template pagenames.\n    * FootNote macro: Fix MoinMoinBugs/FootNoteNumbering.\n    * EmbedObject macro: bug fix for image mimetype\n    * WSGI:\n      * fix TWikiDraw saving a drawing by also evaluating the query args.\n      * work around unpythonic WSGI 1.0 read() API, fixing broken xmlrpc\n        putPage with mod_wsgi\n    * Fix highlighting (see MoinMoinBugs/SearchForPagesWithComments).\n    * Fix logfile code for EACCESS errors.\n    * Removed the \"logging initialized\" log messages because it was issued once\n      per request for CGI.\n\n  Other changes:\n    * Show \"Comments\" toggling link in edit bar only if the page really\n      contains comments.\n    * Made default configuration of surge protection a bit more forgiving,\n      especially for edit action which is currently also used for previews.\n    * Updated i18n, system/help pages, added Macedonian system text translation.\n    * Improved moin xmlrpc write command's builtin docs and auto-append\n      ?action=xmlrpc2 to the target wiki url given.\n\n\nVersion 1.6.1:\n  New features:\n    * Improved params for [[target|label|params]]:\n      Added accesskey link tag attribute, e.g.: [[target|label|accesskey=1]].\n      Additionally to specifying link tag attributes (like class=foo), you can\n      now also specify &key=value for getting that into the query string of\n      the link URL.\n      The \"&\" character is important, don't forget it or it won't get into the\n      query string!\n      E.g. for an attachment, you can use:\n      [[attachment:foo.pdf|Direct download of foo.pdf|&do=get]]\n      E.g. for linking to some specific diff, you can use:\n      [[SomePage|see that diff|&action=diff,&rev1=23,&rev2=42]]\n      See also the updated HelpOnLinking page!\n    * AdvancedSearch: make multipe categories/languages/mimetype selections possible\n    * Added a configuration directive to only do one bind to the LDAP server.\n      This is useful if you bind as the user the first time.\n      ldap_bindonce = False # default\n\n  Fixes:\n    * Fix XSS issue in login action.\n    * Fix wrong pagename when creating new pages on Mac OS X - that was a big\n      showstopper for moin 1.6.0 on Mac OS X.\n    * Fixed 1.6 migration script:\n      Make sorting python 2.3 compatible.\n      Just skip corrupted event log lines.\n      Fix link conversion by using data.pre160 as data_dir.\n      Fix bad /InterWiki pagenames when encountering interwiki links with bad\n      wiki names.\n      Improve ImageLink conversion by using its argument parser code.\n      Added STONEAGE_IMAGELINK (default: False) switch to wiki markup converter,\n      toggle it if you had a very old ImageLink macro in production and the\n      converter output has target and image interchanged.\n      Fixed UnicodeDecodeError for wrongly encoded attachment filenames.\n    * Wiki parser:\n      Fix parsing of link/transclusion description and params.\n      Fix relative attachment targets.\n      Fix supported URL schemes (some got lost since 1.5.8).\n      Showing an upload link for non-existing non-text/non-image transclusions\n      now (like e.g. *.pdf).\n    * RST parser: fix attachment: and drawing: processing\n    * Fix quickhelp when editing RST markup pages.\n    * Fix Despam action: editor grouping was broken, increase time interval\n      to 30 days.\n    * Fix AdvancedSearch domain:system search crashing.\n    * Only switch off xapian search if we didn't use it because of missing index.\n    * Fix saving twikidraw drawings by removing 'java' from spider regex.\n    * Fix classic theme's unsubscribe icon's action link.\n    * Fix AttachFile action: don't show unzip for packages, only show install\n      for superuser.\n    * Fix \"su user\" troubles on UserPreferences.\n    * Removed unit tests from ?action=test (due to changes in our test\n      environment, using py.test now, this was broken).\n    * Duplicated the top directories' moin.py to wiki/server/moin.py so it gets\n      installed by setup.py.\n    * Fix MoinMoinBugs/1.6.0LanguageIgnoreBrowserConfigurationError\n    * Fix MoinMoinBugs/MoveAttachmentNotWorkingWithModPython\n    * Fix MoinMoinBugs/1.6.0SupplementationAndAccessRights\n    * Fix MoinMoinBugs/RenamingUserAllowsOldUsernameToLogin\n    * Fix MoinMoinBugs/GuiEditorExcelPasteExpatErrorUnboundPrefix\n\n  Other changes:\n    * I18n texts, system and help pages updated, please update your underlay\n      directory (see wiki/underlay/...).\n    * Improved \"moin\" script help, invoke it with \"moin ... package command --help\".\n    * Added some .ext -> mimetype mappings missing on some systems (like Mac OS X).\n    * Removed ImageLink macro, as this can be easily done with moin wiki link\n      syntax now - see HelpOnMacros/ImageLink (the 1.6 migration scripts convert\n      all ImageLink calls to moin wiki link syntax).\n    * Updated EmbedObject macro.\n\n\nVersion 1.6.0:\n * This is a reduced CHANGES, ommitting details from rc/beta test and also\n   less interesting minor changes and fixes. If you want to see full detail,\n   read it there: http://hg.moinmo.in/moin/1.6/file/640f21787334/docs/CHANGES\n\n   It took MoinMoin development a lot of work and time to implement all the new\n   and fixed stuff, so please, before asking for support:\n   * take the time to read all the stuff below\n   * read the new help pages (copy them from wiki/underlay/ directory)\n\n * HINT: If you are upgrading from a older moin version and want to keep your\n   existing data directory, it is essential that you read and follow\n   README.migration because the wiki markup and user profiles changed significantly.\n   See also more HINTs below...\n\n  New features: ==============================================================\n\n  User interface: ------------------------------------------------------------\n    * Removed \"underscore in URL\" == \"blank in pagename magic\" - it made more\n      trouble than it was worth. If you still want to have a _ in URL, just\n      put a _ into pagename.\n    * Discussion pages, see FeatureRequests/DiscussionAndOrCommentPages.\n    * cfg.password_checker (default: use some simple builtin checks for too\n      easy passwords and, if available, python-crack).\n      Use password_checker = None to disable password checking.\n    * We now have a drafts functionality (no */MoinEditorBackup pages any\n      more):\n      * If you edit a page and cancel the edit, use preview or save, a draft\n        copy gets saved for you to a internal cache area (data/cache/drafts/).\n      * If it is a save what you did and it succeeds, the draft copy gets\n        killed right afterwards.\n      * If you accidentally used cancel or your browser or machine crashes\n        after you used preview, then just visit that page again and edit it.\n        the editor will notify you that there is a draft of this page and you\n        will see a \"Load draft\" button. Click on it to load the draft into the\n        editor and save the page.\n      * The draft storage is per user and per page, but only one draft per page.\n    * cfg.quicklinks_default and cfg.subscribed_pages_default can be used to\n      preload new user profiles with configurable values.\n    * attachment links for non-existing attachments look different now:\n      the note about the non-existing attachment moved to the link title,\n      the link is shown with nonexistent class (grey).\n    * attachment embeddings for non-existing attachments show a grey clip\n    * The list of InterWiki sites is editable in the wiki (page InterWikiMap),\n      it is getting reloaded every minute.\n    * We support some new languages and also have new underlay pages, thanks\n      to all translators and people helping with the docs!\n\n  Actions: -------------------------------------------------------------------\n    * Synchronisation of wikis using the SyncPages action.\n    * Xapian (see http://xapian.org/) based indexed search code.\n      To use this:\n      * Install xapian-core and xapian-bindings on your machine.\n        We used 0.9.4, but newer code should hopefully work, too.\n      * cfg.xapian_search = True\n      * Execute this to build the index:\n        $ moin ... index build   # indexes pages and attachments\n        $ moin ... index build --files=files.lst  # same plus a list of files\n        You should run those commands as the same user you use for your wiki,\n        usually this is the webserver userid, e.g.:\n        $ sudo -u www-data moin --config=... --wiki-url=wiki.example.org/ \\\n               index build --files=files.lst\n    * New searches:\n        - LanguageSearch: language:de\n        - CategorySearch: category:Homepage\n        - MimetypeSearch: mimetype:image/png (for attachments/files)\n        - DomainSearch: domain:underlay or domain:standard\n        - History Search: available in advanced ui\n      Note: Some currently only available when Xapian is used.\n    * New config options and their defaults:\n        xapian_search        False  enables xapian-powered search\n        xapian_index_dir     None   directory for xapian indices\n                                    (can be shared for wiki farms)\n        xapian_stemming      True   toggles usage of stemmer, fallback\n                                    to False if no stemmer installed\n        search_results_per_page 10  determines how many hits should be\n                                    shown on a fullsearch action\n        xapian_index_history False  indexes all revisions of pages to\n                                    allow searching in their history\n    * Speeded up linkto search by avoiding read locks on the pagelinks file.\n\n    * The action menu now calls the actions for the revision of the page you\n      are currently viewing. If you are viewing the current page revision, you\n      get the same behaviour as in moin 1.5, but if you are viewing an old\n      page revision, action \"raw\" will now show you the raw text of this OLD\n      revision (not of the current revision as moin 1.5 did it).\n      Note that not every action does evaluate the rev=XX parameter it gets.\n      Also please note that the edit, info, ... links in the editbar do NOT\n      use the rev parameter, but operate on the latest page revision (as\n      they did in moin 1.5).\n    * Info action lost the links for \"raw\", \"print\" and \"revert\" actions,\n      because you can now just view an old revision and select those actions\n      from the menu there.\n    \n    * ?action=sitemap emits a google sitemap (XML), listing all your wiki pages\n      and the wiki root URL.\n      Page                      Priority / Frequency / Last modification\n      --------------------------------------------------------------------\n      /                         1.0 / hourly / <now>\n      cfg.page_front_page       1.0 / hourly / page last edit\n      TitleIndex,RecentChanges  0.9 / hourly / <now>\n      content pages             0.5 / daily / page last edit\n      system/help pages         0.1 / yearly / page last edit\n\n    * Action DeletePage and RenamePage can now be used for subpages of a page, too.\n    * Added Action CopyPage so you can use now an existing page or page hierarchy\n      as template for a new page, see FeatureRequests/CloneOrCopyPages.\n    * \"Package Pages\" action supports attachments now.\n    * Added SisterPages support:\n      * action=sisterpages will generate a list of url pagename lines for all\n        pages in your moin wiki.\n      * action=pollsistersites will poll all sister sites listed in\n        cfg.sistersites = [(wikiname, fetchURL), ...]\n        The fetch URL for the sistersites depends on the wiki engine, e.g.:\n        # moin based wiki:\n        ('MoinExample', 'http://moin.example.org/?action=sisterpages')\n        # oddmuse based wiki:\n        ('EmacsWiki', 'http://www.emacswiki.org/cgi-bin/test?action=sisterpages')\n        # JspWiki based wiki:\n        ('JspWiki', 'http://www.jspwiki.org/SisterSites.jsp')\n      * If the current page exists on some sister wiki, a link to it will be\n        added to the navibar.\n      You can use sister wikis for adding another dimension to your wiki UI: use\n      it for simple multi language support, or for comments, or anything else\n      \"related\" you need.\n      TODO: add sistersites_force with sister sites we link to even if they do not\n            have the page yet (will work only for moin as we don't know\n            pagename>url transformation of other wikis)\n    * showtags action that lists all tags related to a page.\n    * action=view does use mimetypes of EmbedObject too and text files will be shown\n      by using their colorized parsers\n\n  Macros: --------------------------------------------------------------------\n    * RecentChanges:\n      * If a change has happened after your bookmark, the updated/new/renamed\n        icon links to the bookmark diff.\n      * If a page does not exist any more (because it was deleted or renamed),\n        we link the deleted icon to the diff showing what was deleted (for the\n        delete action). For the rename action, we just show the deleted icon.\n    * Conflict icon in RecentChanges is shown if a edit conflict is detected.\n    * Enhanced SystemAdmin's user browser, so a SuperUser can enable/disable\n      users from there.\n    * Included EmbedObject macro for embedding different major mimetypes:\n      application, audio, image, video, chemical, x-world. \n      You are able to change the defaults of allowed mimetypes in the config\n      var mimetypes_embed. The config var mimetypes_xss_protect is used to deny\n      mimetypes. The order of both variables is Allow, Deny (mimetypes_embed,\n      mimetypes_xss_protect).\n    * Added support for @SELF to the NewPage macro.\n    * GetText2 macro that allows to translate messages that contain data.\n    * Make the FootNote macro filter duplicates and display a list of numbers\n      instead of a list of identical footnotes. Thanks to Johannes Berg for the\n      patch.\n\n  Parsers: -------------------------------------------------------------------\n    * Moin Wiki parser: Changed markup for links, images and macros, see these\n      wiki pages: HelpOnLinking, HelpOnMacros\n    * New wiki markup for /* inline comments */ - they get rendered as a span\n      with class=\"comment\", see next item:\n    * There is a new item in the edit bar: \"Comments\". If you click it, the\n      visibility of all class \"comment\" tags will be toggled. There is a user\n      preferences item \"show_comments\" to set if the default view shows them or not.\n    * The wiki parser can be used with css classes now:\n      {{{#!wiki comment\n      This will render output within a div with class \"comment\".\n      You can use any wiki markup as usual.\n      }}}\n      You can also combine multiple css classes like this:\n      {{{#!wiki red/dotted/comment\n      This will render a red background, dotted border comment section.\n      }}}\n      The same thing will work for any other css classes you have.\n      If the css classes contain the word \"comment\", they will trigger some\n      special feature, see next item:\n    * Wiki nested parser/pre sections work now, using this syntax:\n      a) just use more curly braces if you have 3 closing in your content:\n         {{{{\n         }}} <- does not terminate the section!\n         }}}}\n      b) use {{{ + some magic string:\n         {{{somemagicstring\n         }}} <- does not terminate the section!\n         somemagicstring}}}\n      c) {{{whatever#!python\n         # py code\n         whatever}}}\n      Pitfall: stuff like below does not work as it did in 1.5:\n         {{{aaa\n         bbb}}}\n      Solution:\n         {{{\n         aaa\n         bbb\n         }}}\n    * Added support for ircs: URLs (secure IRC).\n    * New text/creole parser that allows you to use WikiCreole 1.0 markup,\n      use #format creole.\n    * HTML parser (called \"html\") that allows you to use HTML on the page.\n      Thanks to the trac team for the nice code.\n    * Added the diff parser from ParserMarket, thanks to Emilio Lopes, Fabien\n      Ninoles and Juergen Hermann.\n\n  XMLRPC: --------------------------------------------------------------------\n    * actions_excluded now defaults to ['xmlrpc'] - this kind of disables the\n      built-in wiki xmlrpc server code (not completely: it will just answer\n      with a Fault instance for any request). If you want to use xmlrpc v1 or\n      v2, you have to remove 'xmlrpc' from the actions_excluded list (for\n      example if you want to use wikisync, mailimport or any other feature\n      using xmlrpc). If you enable xmlrpc, it will be possible that someone\n      changes your wiki content by using xmlrpc (it will of course honour ACLs).\n    * New XMLRPC methods (see doc strings for details):\n      * getMoinVersion\n      * system.multicall -- multicall support\n      * Authentication System: getAuthToken/appyAuthToken\n      * getDiff -- method to get binary diffs\n      * mergeDiff -- method to local changes remotely\n      * interwikiName -- method to get the IWID and the interwiki moniker\n      * getAllPagesEx -- method to get the pagelist in a special way (revnos,\n        no system pages etc.)\n      * getAuthToken -- make and authentication token by supplying username/password\n      * applyAuthToken -- set request.user for following xmlrpc calls (within the\n                          same multicall)\n      * getUserProfile -- method to get user profile data for request.user\n    * Added XMLRPC methods for attachment handling. Thanks to Matthew Gilbert.\n    * XMLRPC putPage method adjusted to new AuthToken, config vars \n      xmlrpc_putpage_enabled and xmlrpc_putpage_trusted_only removed.\n\n  Scripts / Commandline interface: -------------------------------------------\n    * moin export dump now better conforms to the theme guidelines.\n    * Added a --dump-user option to the moin export dump command.\n      Thanks to Oliver O'Halloran.\n\n  Security / Auth / AntiSpam / etc.: -----------------------------------------\n    * Hierarchical ACLs are now supported, i.e. pages inheriting permissions\n      from higher-level pages. See HelpOnAccessControlLists.\n    * If you have \"#acl\" (without the quotes) on a page, this means now:\n      \"this page has own (empty) ACLs, so do not use acl_rights_default here\"\n      Please note that this is COMPLETELY DIFFERENT from having no ACL line at\n      all on the page (acl_rights_default is used in that case).\n    * Antispam master url is now configurable via cfg.antispam_master_url.\n      The default is to fetch the antispam patterns from MoinMaster wiki.\n    * Antispam now checks the edit comments against BadContent also.\n    * TextCHAs (text-form CAPTCHAs).\n      Due to increasingly annoying wiki spammers, we added the option to use\n      TextCHAs (for page save (not for preview!), for attachment upload, for\n      user creation (not for profile save)).\n      This function is disabled by default. If you run a wiki that is editable\n      by anonymous or non-approved users from the internet (i.e. All: or Known:\n      in ACL terms), you should enable it in your wiki config by:\n      textchas = { # DO NOT USE EXACTLY THESE QUESTIONS!!!\n          'en': {\n              u'H2O is ...': u'water', # bad: too common\n              u'2 apples and three bananas makes how many fruits?': ur'(five|5)', # good\n              u'2 apples and three pigs makes how many fruits?': ur'(two|2)', # good\n              u'2+3': ur'5', # bad: computable\n              u'\n          },\n          'de': { # for german users\n              u'H2O ist ...': u'wasser',\n          },\n      }\n      This means that english users will get some random question from the 'en'\n      set, german users will get some from the 'de' set. If there is no 'de'\n      set configured, moin will fallback to language_default and then to 'en',\n      so make sure that you at least have a 'en' set configured (or whatever\n      you have set as language_default).\n      You need to use unicode for the questions and answers (see that u\"...\").\n      For the answer, you need to give a regular expression:\n      * In the easiest case, this is just some word or sentence (first en\n        example). It will be matched in a case-insensitive way.\n      * For more complex stuff, you can use the power of regular expressions,\n        e.g. if multiple answers are correct (second en example). Any answer\n        matching the regular expression will be considered as correct, any\n        non-matching answer will be considered as incorrect.\n\n      Tipps for making it hard to break for the spammers and easy for the users:\n      * Use site-specific (not too common) questions.\n      * Don't use too hard questions (annoys legitimate users).\n      * Don't use computable questions.\n      * Don't reuse textchas from other sites.\n\n      textchas_disabled_group = None # (default)\n      Set this to some group name and noone in this group will get textchas.\n      E.g.: textchas_disabled_group = u'NoTextChasGroup'\n\n    * The login page gives now the possibility to recover a lost password, thanks to \n      Oliver Siemoneit. This is especially useful for wikis where access to user \n      preferences is restricted by acl.\n    * Session handling for logged-in users and (not by default due to expiry\n      problems) anonymous users.\n    * Updated the ldap_login code from 1.5 branch, supports TLS now.\n      See MoinMoin/config/multiconfig.py for supported configuration options\n      and their defaults (and please just change what you need to change,\n      in your wikiconfig).\n    * Interwiki auth: You need to define cfg.trusted_wikis and\n       cfg.user_autocreate to use it. Logging in works by entering:\n      Name: RemoteWikiName RemoteUserName\n      Password: remotepass\n      Then moin contacts RemoteWikiName after looking it up in the interwiki\n      map and tries to authenticate there using RemoteUserName and remotepass.\n      If it succeeds, the remote wiki will return the remote user profile items\n      and your local moin will autocreate an account with these values.\n\n  Server / Network / Logging: ------------------------------------------------\n    * The standalone server script moved to the toplevel directory. This makes\n      it possible to directly start moin.py without additional configuration\n      to run a MoinMoin DesktopEdition like wiki setup.\n      Be careful: DesktopEdition uses relaxed security settings only suitable\n      for personal and local use.\n    * Added TLS/SSL support to the standalone server. Thanks to Matthew Gilbert.\n      To use TLS/SSL support you must also install the TLSLite library\n      (http://trevp.net/tlslite/). Version 0.3.8 was used for development and\n      testing.\n\n    * cfg.log_reverse_dns_lookups [default: True] - you can set this to False\n      if rev. dns lookups are broken in your network (leading to long delays\n      on page saves). With False, edit-log will only contain IP, not hostname.\n    * Added support for \"304 not modified\" response header for AttachFile get\n      and rss_rc actions - faster, less traffic, less load.\n\n    * Added logging framework, using stdlib's \"logging\" module. Just do\n      import logging ; logging.debug(\"your text\"). Depending on configuration\n      in the server Config class, your stuff will be written to screen (stderr),\n      to a moin logfile, to apache's error.log, etc.:\n      logPath = None # 'moin.log'\n      loglevel_file = None # logging.DEBUG/INFO/WARNING/ERROR/CRITICAL\n      loglevel_stderr = None # logging.DEBUG/INFO/WARNING/ERROR/CRITICAL\n      NOTE: this is NOT in wikiconfig, but e.g. in moin.cgi or moin.py or ...\n\n    * Added some experimental and disabled code, that uses x-forwarded-for\n      header (if present) to get the right \"outside\" IP before a request\n      enters our chain of trusted (reverse) proxies.\n      This code has the problem that we can't configure it in wikiconfig, so\n      if you want to use it / test it, you have to edit the moin code:\n      MoinMoin/request/__init__.py - edit proxies_trusted (near the top).\n      We will try to make this easier to configure, but there was no time left\n      before 1.6.0 release for doing bigger code refactorings needed for that.\n\n  Mail: ----------------------------------------------------------------------\n    * You can send email to the wiki now (requires xmlrpc), see:\n      FeatureRequests/WikiEmailIntegration, HelpOnConfiguration/EmailSupport\n\n    * Mail notifications contain a link to the diff action so the user\n      can see the coloured difference more easily. Thanks to Tobias Polzin.\n\n  Other changes: =============================================================\n    * HINT: please copy a new version of your server script from the wiki/server/\n      directory and edit it to match your setup.\n    * HINT: instead of \"from MoinMoin.multiconfig import DefaultConfig\" you\n      need to use \"from MoinMoin.config.multiconfig import DefaultConfig\" now.\n      You need to change this in your wikiconfig.py or farmconfig.py file.\n      See MoinMoin/multiconfig.py for an alternative way if you can't do that.\n    * HINT: you need to change some imports (if you have them in your config):\n      Old: from MoinMoin.util.antispam import SecurityPolicy\n      New: from MoinMoin.security.antispam import SecurityPolicy\n      Old: from MoinMoin.util.autoadmin import SecurityPolicy\n      New: from MoinMoin.security.autoadmin import SecurityPolicy\n    * HINT: you need to change your auth stuff, the new way is:\n      from MoinMoin.auth import moin_login, moin_session\n      from MoinMoin.auth.http import http\n      auth = [http, moin_login, moin_session]\n      Do it in a similar way for other auth methods.\n    * HINT: you need to change your url_prefix setting in 2 ways:\n      1. The setting is now called url_prefix_static (to make it more clear\n         that we mean the static stuff, not the wiki script url).\n      2. The strongly recommended (and default) value of it is '/moin_static160'\n         for moin version 1.6.0 (and will be ...161 for moin 1.6.1). It is\n         possible and recommended to use a very long cache lifetime for static\n         stuff now (Expires: access plus 1 year), because we require to change\n         the URL of static stuff when the static stuff changes (e.g. on a\n         version upgrade of moin) to avoid problems with stale cache content.\n         Your moin will be faster with lower load and traffic because of this.\n         For standalone server, we use 1 year expiry for static stuff now.\n         For Apache, Lighttpd and other \"external\" servers, you have to care\n         for configuring them to use a long expiry and change url_prefix_static\n         related configuration on upgrade.\n      HINT: if you run standalone or Twisted server, the easiest way to get a\n            working configuration (with server configuration matching wiki\n            configuration) is to NOT set url_prefix_static at all. Moin will\n            use matching configuration defaults in this case.\n    * url_prefix_action ['action'] was introduced for lowering load and traffic\n      caused by searchengine crawlers. Up to now, crawlers where causing a high\n      load in internet moin wikis because they tried to get about everything,\n      including all actions linked from the user interface.\n      Known crawlers only get 403 for most actions, but nevertheless they first\n      tried. There was no means keeping them away from actions due to the rather\n      braindead robots.txt standard. You can only disallow pathes there, but\n      moin's actions were querystring based, not path based (this would need\n      regex support in robots.txt, but there is no such thing).\n      This changed now. Moin is able to generate action URLs you can handle in\n      robots.txt, like /action/info/PageName?action=info. So if you don't want\n      bots triggering actions, just disallow /action/ there. Keep in mind that\n      attachments are handled by /action/AttachFile, so if you want attached\n      files and pictures indexed by search engine, don't disallow\n      /action/AttachFile/ in your robots.txt. In order to use this feature,\n      set url_prefix_action in your wikiconfig to e.g. \"action\".\n    * We use (again) the same browser compatibility check as FCKeditor uses\n      internally, too. So if GUI editor invocation is broken due to browser\n      compatibility issues or a wrong browser version check, please file a bug\n      at FCKeditor development or browser development.\n    * HINT: We removed Lupy based indexed search code. If you were brave enough\n      to use cfg.lupy_search, you maybe want to try cfg.xapian_search instead.\n\n  Developer notes: ===========================================================\n    * We moved the IE hacks to theme/css/msie.css that gets included after all\n      other css files (but before the user css file) using a conditional\n      comment with \"if IE\", so it gets only loaded for MSIE (no matter which\n      version). The file has some standard css inside (evaluated on all MSIE\n      versions) and some * html hacks that only IE < 7 will read.\n      HINT: if you use custom themes, you want to update them in the same way.\n    * autofilters for databrowser widget. Thanks to Johannes Berg for the patch.\n    * changed formatter.attachment_link call (it is now more flexible,\n      because you can render the stuff between link start and link end yourself)\n    * Page.url() does not escape any more. You have to use wikiutil.escape()\n      yourself if you want to write the URL to HTML and it contains e.g. &.\n    * The testing wikiconfig moved to tests/wikiconfig.py, the testing wiki\n      is now created in tests/wiki/...\n    * HINT: Killed \"processors\" (finally), formatter method changed to:\n      formatter.parser(parsername, lines)\n    * Refactored some actions to use ActionBase base class.\n    * Moved \"test\" action from wikiaction to MoinMoin/action/\n      (and use ActionBase).\n    * Moved MoinMoin/config.py to MoinMoin/config/__init__.py.\n    * Moved MoinMoin/multiconfig.py to MoinMoin/config/multiconfig.py.\n    * Moved \"SystemInfo\" macro from wikimacro to MoinMoin/macro/.\n    * Moved wikiaction.py stuff to MoinMoin/action/__init__.py.\n    * Moved wikimacro.py stuff to MoinMoin/macro/__init__.py.\n    * Moved wikirpc.py stuff to MoinMoin/xmlrpc/__init__.py.\n    * Moved wikitest.py stuff to action/test.py (only used from there).\n    * Moved formatter/base.py to formatter/__init__.py (FormatterBase).\n    * Moved util/ParserBase.py to parser/ParserBase.py.\n    * Moved / splitted request.py into MoinMoin/request/*.\n      Most stuff will be broken, please help fixing it (usually some imports\n      will be missing and the adaptor script will need a change maybe):\n      Tested successfully: CGI, CLI, STANDALONE, FCGI, TWISTED\n    * Moved security.py to security/__init__.py.\n    * Moved wikiacl.py to security/__init__.py.\n    * Moved logfile/logfile.py to logfile/__init__.py.\n    * Moved mailimport.py to mail/mailimport.py.\n    * Moved util/mail.py to mail/sendmail.py.\n    * Moved auth.py to auth/__init__.py.\n      Moved util/sessionParser.py to auth/_PHPsessionParser.py.\n      teared auth code into single modules under auth/* - moin_session handling\n      and the builting moin_login method are in auth/__init__.py.\n    * Added wikiutil.MimeType class (works internally with sanitized mime\n      types because the official ones suck).\n    * Renamed parsers to module names representing sane mimetypes, e.g.:\n      parser.wiki -> parser.text_moin_wiki\n    * Added thread_monitor debugging aid. It can be activated using:\n      from MoinMoin.util import thread_monitor; thread_monitor.activate_hook()\n      and then triggered by requesting URL ...?action=thread_monitor - please\n      be aware that monitoring threads has a big performance impact on its own,\n      so you only want to temporarily enable this for debugging.\n      By default, it dumps its output to the data_dir as tm_<timestamp>.log,\n      you can change this at bottom of action/thread_monitor.py if you want to\n      see output in your browser.\n    * Introduced scope parameter to CacheEntry() - if you specify 'farm', it\n      will cache into a common directory for all wikis in the same farm, if you\n      specify 'wiki', it will use a cache directory per wiki and if you specify\n      'item', it will use a cache directory per item (== per page).\n      Creating a CacheEntry without explicit scope is DEPRECATED.\n    * Smileys moved from MoinMoin.config to MoinMoin.theme.\n    * Removed all _ magic in URLs and filenames.\n    * request.action now has the action requested, default: 'show'.\n    * Cleaned up duplicated http_headers code and DEPRECATED this function\n      call (it was sometimes confused with setHttpHeaders call) - it will\n      vanish with moin 1.7, so please fix your custom plugins!\n      The replacement is:\n          request.emit_http_headers(more_headers=[])\n      This call pre-processes the headers list (encoding from unicode, making\n      sure that there is exactly ONE content-type header, etc.) and then\n      calls a server specific helper _emit_http_headers to emit it.\n      Tested successfully: CGI, STANDALONE, FCGI, TWISTED\n    * setResponseCode request method DEPRECATED (it only worked for Twisted\n      anyway), just use emit_http_headers and include a Status: XXX header.\n      Method will vanish with moin 1.7.\n    * cfg.url_prefix is DEPRECATED, please use cfg.url_prefix_static.\n    * d['title_link'] is not supported any more. You can easily make that link\n      on your own in your theme, see example in MoinMoin/theme/__init__.py,\n      function \"title\".\n    * There is a new Page method called Page.get_raw_body_str that returns\n      the encoded page body. This is useful if you just deal with byte data\n      (e.g. while generating binary diffs).\n    * The TagStore/PickleTagStore system is used to store the syncronisation tags.\n    * XMLRPC functions may return Fault instances from now on\n    * Moin got multicall support, including a module that makes it usable on the\n      client-side without requiring Python 2.4\n    * Added no_magic to text_html formatter to disable tag autoclosing.\n    * MOIN_DEBUG can be set in the environment to let MoinMoin ignore exceptions\n      that would lead to a traceback in the browser. Thanks to Raphael Bossek.\n    * There is a new MoinMoin.Page.ItemCache class now with automatic cache\n      invalidation based on global edit-log. We currently use it to cache page\n      acls, speedup Page.get_rev and reading the page local edit-log.\n    * Added wikiutil.renderText parse and format raw wiki markup with all page elements.\n    * The user file format has changed, old files will be read correctly but\n      will silently be upgraded to the new format so old versions will not\n      read the new files correctly (this only affects 'subscribed_pages' and\n      'quicklinks' which will be lost when downgrading.)\n\n\nVersion 1.5.8:\n  New features:\n    * Added timing.log to help performance debugging. Use cfg.log_timing = True\n      to update <data_dir>/timing.log (default is False, meaning no logging).\n\n      Example log entries:\n\n\n      Timestamp       PID   Timing Flag action     URL\n      -----------------------------------------------------------------------------\n      20070512 184401 22690 vvv         None       moinmoin.wikiwikiweb.de/RssFeeds\n      20070512 184401 22690 0.267s    - show       moinmoin.wikiwikiweb.de/RssFeeds\n\n      Timestamp: YYYYMMDD HHMMSS (UTC)\n      PID: the process ID of the moin process\n      Timing: when action starts, it will be \"vvv\"\n              when it ends, it logs the total time it needed for execution\n      Flag (some are only logged at end of action):\n      +   Page exists\n      -   Page does not exist\n      B   user agent was recognized as bot / spider\n      !x! Action took rather long (the higher the x, the longer it took - this\n          makes it easy to grep for problematic stuff).\n      Action: action name (None is when no action was specified, moin assumes\n              \"show\" for that case)\n      URL: the requested URL\n\n      For more information about tuning your moin setup, see:\n      http://moinmoin.wikiwikiweb.de/PerformanceTuning\n    * Added support for ircs, webcal, xmpp, ed2k and rootz protocols - we\n      moved all protocols to config.url_schemas, so this is not empty any more.\n      It is possible to use these protocols now on wiki pages and in the\n      navi_bar. We just generate the URLs, it is up to your browser what it\n      does when clicking on those links.\n    * cfg.traceback_show (default: 1) can be used to disable showing tracebacks.\n      cfg.traceback_log_dir (default: None) can be used to set a directory\n      that is used to dump traceback files to. Your users will get a notice to\n      which (random) file in that directory the traceback was been written.\n      NOTE: while you can feel free to set traceback_show = 0 and\n      traceback_log_dir = None, we will also feel free to reject bug reports\n      when you (or your site's users) don't give us enough information (like a\n      traceback file) to debug the problem. If you set traceback_show = 0,\n      we recommend pointing traceback_log_dir to a directory with reasonable\n      free space and putting a page onto your wiki that describes who has to\n      get contacted (usually the wiki server admin) in case a traceback happens.\n      The admin can then locate the traceback file and submit it to moin\n      development, if the bug is not already known (see MoinMoin:MoinMoinBugs).\n      Of course we will also need all the other details of a bug report, not\n      only the traceback file.\n\n  Other changes:\n    * Updated spider agents list.\n    * Reduce bot/spider cpu usage for SystemInfo, OrphanedPages, WantedPages,\n      PageHits, PageSize, WordIndex macros (we just return nothing for bots).\n\n  Bugfixes:\n    * XSS fixes, see http://secunia.com/advisories/24138/ (item 1 and 2).\n    * ACL security fixes:\n      * MonthCalendar respects ACLs of day pages now.\n      * Check the ACL for the rst markup include directive.\n    * Fixed cleaning of edit comments (control chars in there could damage\n      edit-log).\n    * Fixed in-process caching of antispam patterns (didn't update the cache\n      for multi-process, persistent servers).\n    * Correct encoding/decoding for surge-log data, fixes leftover\n      surge-logXXXXXXX.tmp files in data/cache/surgeprotect.\n    * Fixed mode of cache files (mkstemp creates them with 0600 mode).\n    * Symbolic entities with numbers (like &sup2;) did not work, fixed.\n    * We open data/error.log earlier now and we also use it for FastCGI.\n    * Fixed unicode cfg.page_group_regex.\n    * Fixed moin.spec to use english date format.\n    * GUI converter: fixed conversion of relative wiki links.\n    * Fixed NewPage macro button label to not be formatted as wiki text.\n\nVersion 1.5.7:\n  New features:\n    * added url_prefix_local which is used for stuff that must be loaded from\n      same site as the wiki engine (e.g. FCKeditor GUI editor applet), while\n      url_prefix can be a remote server serving the static files (css/img).\n      If not set (or set to None), url_prefix_local will default to the value\n      of url_prefix.\n    * We save some CPU and disk I/O by having EditTemplates and LikePages macro\n      (both used on MissingPage) check whether the requesting entity was\n      identified as a spider (e.g. search engine bot) and do nothing in that\n      case. Normal users won't see any difference.\n    * For AttachFile, you can now choose to overwrite existing files of same\n      name (nice for updating files).\n\n  Bugfixes:\n    * XSS Fixes:\n      * fixed unescaped page info display.\n      * fixed unescaped page name display in AttachFile, RenamePage and\n        LocalSiteMap actions\n    * WantedPages listed existing pages that are not readable for the user,\n      but are linked from pages that ARE readable for the user (so this is NOT\n      a privacy/security issue). We now don't list those pages any more as it\n      is pointless/confusing, the user can't read or edit there anyway.\n    * MoinMoin:MoinMoinBugs/TableOfContentsUsesNonExistingIncludeLinks\n    * MoinMoin:MoinMoinBugs/ActionsExcludedTriggerError\n    * GUI editor/converter:\n      * ignore <col>/<colgroup>/<meta> elements\n      * support <a> within blockquote\n    * Remove generated=... attribute from pagelink html output (this attr is\n      for internal use only). w3c validator is now happier again.\n    * Fixed css class \"userpref\" (not: \"userprefs\") of the Login form.\n    * Fixed the version number check in the xslt parser for 4suite >= 1.0.\n    * We reset the umask to the wanted value every request. This should fix\n      wrong file modes when used with Twisted (twistd uses a hardcoded 0077\n      umask in daemonize()).\n    * Avoid trouble when saving pages with antispam function when MoinMaster\n      wiki is having troubles (catch xmlrpc Fault).\n\n  Other changes:\n    * Standalone server does not do reverse DNS lookups any more (this is a\n      standard feature of BaseHTTPServer stdlib module, but we override this\n      now and just print the IP).\n    * We moved the IE hacks to theme/css/msie.css that gets included after all\n      other css files (but before the user css file) using a conditional\n      comment with \"if IE\", so it gets only loaded for MSIE (no matter which\n      version). The file has some standard css inside (evaluated on all MSIE\n      versions) and some * html hacks that only IE < 7 will read.\n      HINT: if you use custom themes, you want to update them in the same way.\n    * Improved ldap auth:\n      * cfg.ldap_name_attribute was removed because of new cfg.ldap_filter.\n        If you had ldap_name_attribute = 'sAMAccountName' before, just use\n        ldap_filter = '(sAMAccountName=%(username)s)' now.\n      * New cfg.ldap_filter used for the ldap filter string used in the ldap\n        search instead of the rather limited, partly hardcoded filter we used\n        before. This is much more flexible:\n        ldap_filter = '(sAMAccountName=%(username)s)'\n        You can also do more complex filtering expressions like:\n        '(&(cn=%(username)s)(memberOf=CN=WikiUsers,OU=Groups,DC=example,DC=org))'\n      * Added some processing to filter out result entries with dn == None.\n      * We set REFERRALS option to 0 before initializing the ldap server\n        connection (this seems to be needed for Active Directory servers).\n      * We support self-signed ssl certs for ldaps - completely untested.\n      * New cfg.ldap_surname_attribute (usually 'sn'), was hardcoded before.\n      * New cfg.ldap_givenname_attribute (usually 'givenName'), hardcoded before.\n      * New cfg.ldap_aliasname_attribute (usually 'displayName') - if this\n        attribute is not there or empty (in the results of the ldap lookup for\n        the user), we just make up the aliasname from surname and givenname\n        attribute.\n      * We only request the attributes we need from ldap (was: all attrs).\n      * We deny user login (and break out of auth chain) for the following cases:\n        * if a user is not found by ldap lookup\n        * if we find more than one matching entry\n        * if the password is empty or incorrect\n        * if some exception happens\n      * Please note that there is an updated ldap sample config in directory\n        wiki/config/more_samples/.\n      * Added experimental LDAP SSL/TLS support (untested, please help testing),\n        see also the sample config.\n    * Work around a IE7 rendering problem with long pages getting more and\n      more narrow. We just applied the same \"fix\" as we used for IE6, using\n      \"display: none\" for span.anchor for IE browsers.\n    * RSS feed related:\n      * We used to emit a <link> tag for the action=rss_rc RSS feed on any\n        page. This was changed, we now emit that link only on RecentChanges and\n        the current user's language translation of RecentChanges.\n        This was changed because Google Toolbar requests the RSS feed linked\n        by such a link tag every time it sees one. Thus, if you used the wiki\n        normally, it requested the RSS feed every few seconds and caused\n        problems due to surge protection kicking in because of that.\n      * HINT for custom theme users: if your theme code calls\n        rsslink(), then you need to change that to rsslink(d) for 1.5.7+.\n\n\nVersion 1.5.6:\n  A general security notice:\n      Check your Python version, there was a buffer overflow issue in Python\n      recently! Details: http://moinmoin.wikiwikiweb.de/PythonUnicodeEscapeBug\n\n  Bugfixes:\n    * Fix AttributeError traceback with Standalone server (if_modified_since)\n    * Fix AttachFile \"304 not modified\" and redirect status code for Twisted\n    * http auth: we now decode username and password to unicode (using\n      config.charset == utf-8). Same for SSL client cert auth and CN.\n    * Avoid infinite recursion in Page.parsePageLinks.\n    * Fixed standalone server failing to shutdown if interface == \"\".\n    * Now MoinMoin does not think anymore that every page links to various user\n      homepages.\n    * Made the irssi parser more tolerant (Thanks to \"TheAnarcat\").\n    * Now multiple formatters can be used per request, the send_page code was\n      not reentrant to this regard. Fixes \"empty\" search results.\n    * Fixed problem with \"=\" in ImageLink macro links.\n    * Not a moin bug, but a silly stdlib os.tempnam function made trouble to\n      some people because it lets you override the path given in the code\n      by setting the environment variable TMP(DIR). We now use a different\n      function to avoid renaming trouble when TMP(DIR) points to a different\n      file system.\n    * Fixed antispam update on every save (Thanks to \"TheAnarcat\").\n    * GUI converter: don't throw away rowclass for tables.\n    * GUI editor formatter: allow height for table cells.\n    * GUI editor formatter: comment texts are output using the formatter now. \n\n  New features:\n    * Mail notifications contain a link to the diff action so the user\n      can see the coloured difference more easily. Thanks to Tobias Polzin.\n    * FeatureRequests/MoveAttachments - you can move attachments from one\n      page to another (and also rename the attachment at the same time).\n      Thanks to Reimar Bauer.\n    * Added support for linking to attachment: and inline: URLs with ImageLink.\n    * Added UNIX socket support for FastCGI, just set the port to some (socket)\n      filename. Details see: MoinMoin:FeatureRequests/FastCgiUnixSocket\n    * [[Attachlist(pagename,mimetype)]] lists attachments of pagename (default:\n      current page) with optional mimetype restriction (default: all).\n      Thanks to Reimar Bauer.\n\n  Other changes:\n    * Minor performance improvements (might be noticeable if you have many\n      custom navi_bar entries and high server load).\n    * Avoid usage of no-cache because it breaks attachment download on IE6.\n      This is a IE bug, not a moin bug.\n    * Added XHTML to the unsafe list.\n    * Changed the rst parser to be compatible to the new docutils interface\n      for directives.\n    * Updated EmbedObject macro.\n\n\nVersion 1.5.5a:\n  Bugfixes:\n    * fixed ticket creation to only use constant values\n\nVersion 1.5.5:\n  HINT: read docs/README.migration.\n  HINT: there was NO change in the underlay/ pages since 1.5.4.\n  HINT: If you experience problems with the reStructured Text (rst) parser,\n        please downgrade docutils to \"0.4\" because there were major interface\n        breaking API refactorings on the docutils trunk.\n\n  Bugfixes:\n    * GUI editor fixes:\n      * Fixed MoinMoinBugs/GuiEditorModifiesInterwikiPreferred.\n      * Fixed MoinMoinBugs/TableAlignmentProbsWithGUI.\n    * Not a moin bug, but it severely annoyed IE users and also was less\n      comfortable for users of other browser: since about 1.5.4, we served\n      attachments with Content-Disposition: attachment - so that the user has\n      to save them to disk. This was to fix a possible XSS attack using attached\n      HTML files with Javascript inside for stealing your moin cookie or doing\n      other nasty things. We improved this by using different behaviour depending\n      on the potential danger the attached file has when served inline:\n      mimetypes_xss_protect = ['text/html', 'application/x-shockwave-flash', ]\n      This is the default value. If you know more dangerous stuff, please just\n      add the mimetypes there to protect your users and file a bug report\n      telling us what we missed.\n    * Fixed MoinMoinBugs/ReStructuredTextRelativeLinksBroken, thanks to Stefan\n      Merten.\n    * Make tickets used for some actions more safe.\n\n  New features:\n    * edit_ticketing [True] - we protect page save by a ticket (same stuff we\n      already use for DeletePage and RenamePage action).\n      NOTE: If you don't use your browser for editing, but some tool like\n            \"editmoin\" or \"MoinMoin plugin for jEdit\", you'll need an update\n            of them supporting the ticket.\n            Alternatively, you can use edit_ticketing = False setting - this\n            is not recommended for internet wikis as it will make spamming them\n            easier.\n    * If we detect some spammer, we kick him out by triggering surge protection\n      (if surge protection is not disabled).\n\nVersion 1.5.5rc1:\n  Bugfixes:\n    * Fixed MoinMoinBugs/XmlRpcBrokenForFastCgi - thanks to Johannes Berg.\n    * Fixed gui editor converter confusing of `` and {{{}}} markup.\n    * Fixed emission of HTTP headers (esp. Vary: Cache-Control:).\n    * Fixed a bad crash that happens (on ANY page!) when you put a *Dict\n      page's name as a member into a *Group page.\n    * Fix MyPages action title to use an unformatted string.\n    * Fix double quoted-printable encoding in generated emails (note: this is\n      not a moin bug - this just works around bugs in python stdlib).\n    * Fix mode of drawing files (use config.umask).\n    * Fix trouble with /?action= urls by dropping getPageNameFromQueryString\n      code. \n    * Fixed sre unpickle issues seen on some machines by avoiding to pickle\n      the regex.\n    * Fix Clock code, add more timers.\n    * Worked around FastCGI problem on Lighttpd: empty lines in the error log.\n    * Fix (add) locking for caching's .remove() call, small fixes to lock code.\n    * Print error message when --target-dir=path is missing from moin export\n      dump command.\n\n  New features:\n    * Added support for \"304 not modified\" response header for AttachFile get\n      and rss_rc actions - faster, less traffic, less load.\n    * Limit rss with full diffs to 5 items.\n    * Allow surge_action_limits = None to disable surge protection.\n    * moin.fcg improved - if you use FastCGI, you must use the new file:\n      * can self-terminate after some number of requests (default: -1, this\n        means \"unlimited lifetime\")\n      * the count of created threads is limited now (default: 5), you can use\n        1 to use non-threaded operation.\n      * configurable socket.listen() backlog (default: 5)\n    * Added indonesian i18n (id).\n    * Some measures against spammers trying to brute force their spam into moin.\n    * EmbedObject macro: added mov, mpg and midi support\n    * moin ... export dump --target-dir=PATH --page=PAGENAME_REGEX\n      You must specify --target-dir (where dump will write the html files to)\n      and you may specify --page and either a page name or a regex used to\n      match all pages you want to export. Default is to export all pages.\n\n  Other changes:\n    * Tuning:\n      * more efficient locking code on POSIX platforms, we do much less I/O\n        for locking now\n      * removed most chmod calls in favour of a single os.umask call\n    * Improved Python 2.5 compatibility. Note: if you think that MoinMoin\n      is using too much RAM, you might want to look at Python 2.5 because\n      of its improved memory management.\n    * Throw away SAVE comments longer than 200 chars (you can't enter those by\n      the user interface, so only spammer using automatic POSTs do them).\n    * Updated spider user agent list.\n    * BadContent and LocalBadContent now get noindex,nofollow robots header,\n      same as POSTs.\n    * Standalone opens it logfile unbuffered from now on, thanks to\n      Carsten Grohmann.\n    * Avoid trouble when request.write() data contains None, just skip it -\n      thanks to Juergen Hermann.\n    * Instead of showing a ConfigurationError, moin now emits \"404 Not found\"\n      http headers and a hint about what could be wrong. This won't fill up\n      your logs just because of typos and spiders still trying old URLs.\n\n \nVersion 1.5.4:\n    HINT: read docs/README.migration.\nVersion 1.5.4-current:\n    * increased maxlength of some input fields from 80 to 200\n\nVersion 1.5.current:\n  Developer notes:\n    * We switched to Mercurial SCM, see here for more infos:\n      http://moinmoin.wikiwikiweb.de/MoinDev/MercurialGuide\n\n  Bugfixes:\n    * fix MonthCalendar macro for non-ASCII pagenames (thanks to Jonas Smedegaard)\n    * remove 'search' and 'google' from bot user agent list and add some more\n      specific terms\n    * Fix the forgotten password email login URL and also properly encode the\n      email body. Thanks to Robin Dunn for the patch.\n    * Applied a patch by Matthew Gilbert for increased compatiblity with\n      latest docutils.\n\n\nVersion 1.5.3:\n  New Features:\n    * Added CSS classes for TableOfContents macro.\n\n  Bug Fixes:\n    * GUI editor / GUI editor converter:\n      * Fixed missing GUI editor link in edit bar.\n      * Fixed table/row/cell style spaces.\n      * Changed <p> generation for macros.\n      * Fixed handling of subpages.\n      * Fixed processing of complex list elements (thanks to Craig Markwardt).\n      * Fixed processing of html \\n (thanks to Craig Markwardt).\n      * Fixed joining of comment lines with text below them.\n      * Fixed table height attribute crash.\n    * Fixed sslclientcert auth.\n    * Added some missing files to i18n processing, translatable strings more\n      complete now.\n    * Change <p> generation from self-closing (<p />) to auto-closing (only\n      emit <p>, let browser find place for </p>).\n    * Fix eating of newline before tables.\n    * Fixed incorrect login hint for not logged-in users trying a disallowed\n      action.\n    * Fixed nasty missing or double </a> formatter bug (mostly happening when\n      user has enabled questionmarks for nonexisting pages).\n\n  Other Changes:\n    * We catch and ignore html to wiki conversion errors in case of hitting\n      the cancel button, so you can get out of the error screen.\n\nVersion 1.5.3-rc2:\n  New Features:\n    * Modified SystemInfo macro to give human readable units and disk usage\n    * cfg.editor_quickhelp makes the quick help below the editor configurable\n      (at least as far as the default_markup is concerned). If set to None,\n      it doesn't display any quickhelp. Thanks to Seth Falcon for the patch.\n\n  Bugfixes:\n    * Fixed double class attribute for nonexistent links\n    * Fixed double </a> with qm_noexist option\n    * Fixed table xxx=\"yyy\" style attribute parsing\n    * If not (editor_force and editor_default == 'text') then display GUI mode\n      switch button (this is only a partial fix, but enough to deny the GUI\n      mode to your users completely)\n    * Fixed XSS issue which could lead to cookie theft etc.\n    * Fixed definition list \"same level\" indenting.\n    * Fixed pagename in log for PackagePages action.\n    * Made <p> self-closing and line-anchors more well-behaved, thanks to\n      Martin Wilck for the patch. I didn't apply the <ol> patch, because this\n      is no real problem, just a problem of a bad standard.\n    * Fixed gui editor *bgcolor crash.\n    * Support/Fix tableclass attr with gui editor.\n\n  Other changes:\n    * Moved back UserPreferences action link from menu to top of page (renaming\n      it to \"Preferences\"), added \"Cancel\" button to make it possible to return\n      to the previous page without saving preferences.\n    * Removed formatter.url \"attrs\" keyword arg that took premade html, we use\n      separate kw args per attribute now.\n    * Moved broken tests to MoinMoin/_tests/broken (= disabling them).\n      All \"active\" tests run ok now.\n      If you want to compare, I included the output of this test run:\n      $ make test >tests/make_test.out\n\n \nVersion 1.5.3-rc1:\n\n  New features:\n    * HINT: please read README.migration\n    * Login and Logout are actions now, therefore you stay on the page where\n      you were before.\n    * UserPreferences is also an action now and moved from top border (in\n      modern theme) to the \"more actions\" dropdown menu. You also stay on the\n      same page.\n    * There is also a [[Login]] macro now. You can put it on any page you want\n      and if the user is not logged in, it renders the login form. If the user\n      is logged in, it doesn't render anything.\n    * We check cfg.superuser to be a list of user names (as documented) and\n      deny superuser access if it is not. This avoids security issues by\n      wrong configuration.\n    * auth methods changed:\n      HINT: if you wrote own auth methods, please change them as you see in\n            MoinMoin/auth.py and test them again before relying on them.\n      * now get a user_obj kw argument that is either a user object returned\n        from a previous auth method or None (if no user has been made up yet).\n        The auth method should either return a user object (if it has\n        determined one) or what it got as user_obj (being \"passive\") or None\n        (if it wants to \"veto\" some user even if a previous method already has\n        made up some user object).\n      * return value of continue_flag is now True in most cases (except if\n        it wants to \"veto\" and abort).\n      * moin_cookie auth method now logs out a user by deleting the cookie and\n        setting user_obj.valid = 0. This makes it possible to still get the\n        user's name in subsequent auth method calls within the same request.\n      * added ldap_login and smb_mount auth methods, see MoinMoin/auth.py and\n        wiki/config/more_samples/ldap_smb_farmconfig.py\n    * MonthCalendar now takes an additional argument for specifying a template\n      to use to directly invoke the page editor when clicking on non-existing\n      day pages.\n    * Added ImageLink macro. Thanks to Jeff Kunce, Marcin Zalewski, Reimar\n      Bauer and Chong-Dae Park for working on it.\n    * Lupy stuff (still experimental, partly broken and disabled by default):\n      * Attachment search using lupy (lupy_search = 1 in your config)\n        Title search will also search attachment filenames.\n        Full text search will also search attachment contents.\n      * Indexing filter plugins, see MoinMoin:FiltersForIndexing\n        Some filters depend on external converters that might not be available\n        for any platform (see Depends: line in filter plugin).\n        Feel free to contribute more filter plugins, especially if you wrote\n        some nice platform independant filter in Python for some popular file\n        format! Filters implemented so far (depending on):\n        MS Word, RTF, MS Excel (antiword, catdoc)\n        PDF (pdftotext)\n        OpenOffice.org XML based data formats (-)\n        XML, HTML (-)\n        text/* (-)\n        JPEG's EXIF data (-)\n        Binary generic (-)\n      * As you might know, Lupy is \"retired\" (that means it isn't developped\n        by its authors any more). We are currently evaluating Xapian as new\n        indexing search engine in moin.\n        If we succeed, we will replace Lupy stuff by some Xapian interface\n        code in moin.\n        But: the filters will likely stay, as we also need them with Xapian.\n    \n    * A new MoinMoin script interface was introduced:\n      \n      Syntax: moin [options] <cmdmodule> <cmdname> [options]\n      \n      For example:\n      moin --config-dir=/my/cfgdir --wiki-url=wiki.example.org/ \\\n           export dump --page=WikiSandBox\n      \n      This will call the \"moin\" script, which will use the --config-dir and\n      --wiki-url options to initialize, then it will go to MoinMoin.script\n      module, import the export.dump module from there and run it, providing\n      the additional --page value to it.\n\n      The old scripts that have not been migrated to this new interface can\n      still be found in MoinMoin/script/old/ - including the old migration\n      scripts.\n    * moin ... account create --name=JoeDoe --email=joe@doe.org\n    * moin ... account disable --name=JoeDoe\n    * moin ... acount check     <-- this is what usercheck script was before\n    * moin ... maint cleancache <-- this is what cachecleaner script was\n    * moin ... maint cleanpage  <-- this is what pagescleaner script was\n\n  Bugfixes:\n    * cookie_lifetime didn't work comfortable for low values. The cookie was\n      created once on login and never updated afterwards. So you got logged\n      out cookie_lifetime hours later, no matter whether you were active at\n      that time or not. This has been changed, we update the cookie expiry now\n      on every request, so it will expire cookie_lifetime after your last\n      request (not after login).\n    * Fixed logout problems when using cfg.cookie_path.\n    * Fixed cookie_path for root url wikis.\n    * Lupy search now behaves a bit less funky. Still no guarantees...\n    * We lowered the twisted server timeout to 2 minutes now (was: 10) because\n      it just used up too many files (open TCP connections until it timeouts)\n      on our farm.\n    * The algorithm used for processing the farmconfig.wikis list was changed\n      to work for big farms (>= 50 wikis), too. This works around the python\n      \"re\" module limitation of having a maximum of 100 named groups in a RE.\n    * Fixed a TypeError which occurred for formatters that dislike None values.\n      (cf. http://moinmoin.wikiwikiweb.de/MoinMoinBugs/PythonErrorEditingFrontPage)\n    * Fixed GUI editor converter error for https:... image URLs.\n    * ThemeBase (use by modern/rightsidebar): removed duplicate AttachFile from\n      actions menu (we already have it in editbar).\n    * Speedup group/dicts scanning for persistent servers.\n    * Implemented HEAD requests for standalone server, this should fix some of\n      the strange effects happening when using \"Save as\" on attachments.\n    * Not a moin bug, but rather a workaround for non-standard non-ASCII DNS\n      hostnames: we just use the IP instead of crashing now.\n    * Spurious cyclic usage error in i18n fixed.\n    * Fixed antispam for python 2.5a xmlrpclib.\n    * I18n for linenumber toggle in listings.\n    * All action menu entries are translatable now.\n\n  Other:\n    * Added css classes for the rst admonitions. Thanks to TiagoMacambira!\n\nVersion 1.5.2:\n\n  New features:\n    * Added FullSearchCached macro which is statically cached.\n      Use it if you do not depend on fresh search results but prefer raw speed.\n    * Added surge protection, see HelpOnConfiguration/SurgeProtection.\n    * Allow hex and symbolic entities.\n    * If there is a user with empty password, we just generate a random one\n      when he requests it getting sent by mail. Thanks to Reimar Bauer.\n    * The superuser now can switch to another user using UserPreferences -\n      nice to help your users when they forgot their password or need other\n      help. You need to logout/relogin to use your own userid afterwards.\n      This function only works correctly if you use moin_cookie authentication.\n      Thanks to Reimar Bauer.\n    * Add new markup for bulletless lists: just use a \".\" instead of \"*\".\n\n  Other changes:\n    * Added \"voyager\" to bot useragent list.\n    * Added locking for caching subsystem.\n    * Deron Meranda's formatter API cleanup.\n    * Added div and span to formatter API.\n    * Removed old unfinished form and export code.\n    * updated i18n\n\n  Fixes:\n   * Fixed table attribute parsing.\n   * Fixed cookie handling wrt properties adherance.\n   * The new \".\" list markup makes it possible to have a bulletless list with\n     elements on the same level. Before this change and only using indentation\n     with blanks, that would get merged into a single paragraph.\n   * It is possible now to have multiple paragraphs in the same list element,\n     just leave an empty line in between the paragraphs.\n   * Fixed GAP processing for ordered lists.\n   * Fix text_gedit formatter's invalid list nesting.\n   * Fixed hr crash in blockquote (but needs more work).\n   * Fixed FootNote's formatter usage.\n   * Fixed rst's headline levels.\n   * Fixed MoinMoinBugs/WikiParserThinksItIsInsidePreWhenItIsNot\n   * Fixed MoinMoinBugs/ListItemGeneratedOutsideList\n   * Fixed that macros were followed by a wrong <p>.\n   * Added <blockquote> to the block elements in the text_html formatter,\n     so it does not close it erratically when you close a inner <p>.\n   * GUI editor converter now also accept http: urls without // (relative or\n     same server urls).\n   * Fixed the DocBook parser in cases where the pagename was non-ascii.\n   * Fixed MoinMoinBugs/ProcessInlineDontSupportUlElement\n\n\nVersion 1.5.1:\n\n  Fixes:\n    * Fixed rst parser docutils version check\n    * Repaired attachment unzipping feature.\n    * Fixed the AddRevision command of the PackageInstaller.\n    * improved the migration scripts (used to migrate pre-1.3 wikis to 1.3+):\n      * do not crash on empty lines in event log\n      * fix edit log format for very old moin data (like 0.11)\n      * workaround for an ugly win32 operating system bug leading to wiki text\n        file mtime not matching edit logs timestamp values if there was some\n        timezone change since last edit (e.g. a daylight saving tz switch),\n        but differing 3600s.\n        This affected pre-1.3 moin wiki servers running on win32 OS only.\n        We now try to correct those inconsistencies in mig05 by fuzzy matching.\n    * fixed bracketed link scheme icon (css class)\n    * we included a modified copy of Python 2.4.2's copy.py as some previous\n      python versions seem to have problems (2.3.x, x < 5 and also 2.4[.0]),\n      see: http://moinmoin.wikiwikiweb.de/MoinMoinBugs/DeepCopyError\n      Our own copy.py was slightly modified to run on 2.3.x and 2.4.x.\n    * Fixed the problem of not being able to change the date/time format back\n      to \"Default\" (UserPreferences).\n    * We generate the GUI editor footer now the same way as the text editor\n      footer.\n    * Include a CSS workaround for yet another IE bug, see:\n      MoinMoinBugs:InternetExplorerPeekABooBugInRightSideBar\n    * classic theme: added GUI editor link\n    * classic theme: added pagename header to editor screen\n    * the \"mail enabled\" check now also checks whether mail_from is set\n\n  Other changes:\n    * Updated FCKeditor to current CVS (2006-01-08 == 2.2+)\n    * Split up show_hosts into show_hosts and show_names\n    * attachment:file%20with%20spaces.txt in attachment list\n    * added support for file:// in GUI editor link dialogue, see also:\n      MoinMoin:FileLinks\n    * cfg.mail_smarthost now supports \"server:port\" syntax, the default port\n      is 25, of course.\n    * removed unused kwargs showpage/editable/form from wikiutil.send_footer\n    * updated i18n (translation texts, additional languages)\n    * removed interwiki:pagename from print view's top of page, added it to\n      the \"lasted edited\" line at bottom right.\n\n\nVersion 1.5.0:\n  HINT: 1.5.0 uses the same data/pages format as 1.3.x. The only thing you want\n        to check is whether the 1.5.x version you are upgrading to has NEW mig\n        scripts compared to the version you are running now (e.g. in 1.3.5 we\n        added some scripts that fixed some small problems).\n        See the MoinMoin/scripts/migration/ directory.\n        You must run every mig script in sequence and only ONCE ever.\n  Fixes:\n    * Fix <x=y> table attributes parsing. Thanks to Reimar Bauer.\n    * Fixed a few bugs in the reStructured text parser. Note that you\n      need to install docutils 0.3.10 or newer (snapshot from December 2005\n      or newer) to make reStructuring parsing work:\n     * Case preservation for anonymous links\n     * MoinMoin links get the appropriate CSS class\n     * Images do not get special CSS markup anymore\n     Thanks to Matthew Gilbert.\n    * Fixed a bug in the WSGI code which led to incorrect exception handling.\n    * Removed all nationality flags. They used to be used for indicating some\n      specific language (NOT nationality) and this was simply wrong and a bad\n      idea.\n    * Fixed some header rendering issues (CSS).\n    * SystemAdmin macro now checks against cfg.superuser list.\n\n  Other changes:\n    * Added turkish i18n. To be considered as alpha as it got in last minute.\n\n\nVersion 1.5.0rc1:\n  This is the first release candidate of MoinMoin 1.5.0.\n  \n  Fixes:\n    * fixed broken logs when a DeletePage (maybe also RenamePage) comment\n      contained CR/LF characters (could happen when using copy&paste)\n    * fixed GUI editor MoinEditorBackup page containing HTML instead of wiki\n      markup\n    * fixed invalid HTML in FootNotes\n    * fixed HTML source in EditorBackup after canceling GUI editor\n    * Footnotes of included pages are not shown at the bottom of the including page.\n    * Bug in Dict handling that often breaks first entry\n\nVersion 1.5.0beta6:\n  Authentication:\n    * Added SSO module for PHP based apps. Currently supported: eGroupware 1.2.\n      No need to login in two systems anymore - MoinMoin will read the PHP session\n      files.\n\n  Fixes:\n    * Improved rendering of bullet lists and external links in Restructured text.\n      Thanks to Matthew Gilbert.\n    * Fixed modern theme rendering, including some fixes and workarounds for\n      broken MS IE.\n    * When checking for email uniqueness, do not compare with disabled user\n      profiles.\n    * Fix sending of HTTP headers for Despam action.\n    * Add some margin left and right of the link icons.\n\n  Other changes:\n    * Made it easier for auth methods needing a user interface (like ldap or\n      mysql stuff). Unlike http auth, they usually need some \"login form\".\n      We made UserPreferences login form values (name, password, login, logout)\n      available as kw args of the auth method, so it is easy and obvious now.\n    * Make login and logout show at the same place. Is only shown when\n      show_login is True (default).\n    * Disabled login using &uid=12345.67.8910 method. Please use name/password.\n    * Made builtin moin_cookie authentication more modular: the cookie is now\n      touched by MoinMoin.auth.moin_cookie only, with one minor discomfort:\n      When creating a user, you are not automatically logged in any more.\n    * We now use the packager for additional help and system pages in all other\n      languages except English. The packages are attached to SystemPagesSetup\n      page and can be installed from there after getting \"superuser\" powers.\n      The \"extra\" package contains a collection of orphan pages not listed on\n      some SystemPagesIn<Language>Group page.\n\n\nVersion 1.5.0beta5:\n  Fixes:\n    * Fixed a minor user interface bug: it showed RenamePage and DeletePage\n      actions in the menu if you only had write rights and then complained\n      when you really tried when you had no delete rights additionally.\n    * We don't remove RenamePage and DeletePage from menu any more if user is\n      unknown. This stuff is only driven by ACLs now.\n    * Some fixes to Despam action.\n    * Fixed moin_dump (broken by some recent theme init change).\n    * Fixed a few tests by moving the theme init from moin_dump to RequestCLI.\n    * removed old_onload reference from infobox.js\n    * Fixed MoinMoin logo for IE.\n    * search: fixed whitespace handling in linkto: search terms\n    * Increased stability of the tests system by outputting results to sys.stdout\n      instead of request. Note that this changes the semantics for e.g. mod_py or\n      mod_fcgi.\n    * Fixed packaging system in the case of AddRevision that does not alter the page.\n    * Fixed a few bugs in the XML formatters (dom_xml, text_xml, xml_docbook).\n    * Fixed link icons. We now just use a.xxx.before where xxx is the link scheme,\n      e.g. a.http.before. See theme's common.css.\n    * Hopefully fixed some issue with non-ASCII attachment filenames.\n    * Workaround for Opera 8.5 making silly \"No addition\" categories.\n    * Do not show GUI editor for non-wiki format pages, because we only have a\n      converter from html to wiki right now.\n    * Fix the modern CSS issues for editbar, when it shifted content far right.\n      Also removed the absolute height value that never was right.\n    * Fix mod_python adaptor bugs failing to handle Location correctly.\n      See: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=339543\n\n  Other changes:\n    * Added irc:// to the builtin supported link schemas. You can remove it\n      from config.url_schemas in case you have patched it in there.\n    * Added cfg.user_autocreate (default: False). Use True to enable user\n      profile autocreation, e.g. when you use http authentication, so your\n      externally authenticated users don't need to create their moin profile\n      manually. The auth method (see cfg.auth list) must check this setting\n      if it supports auto creation.\n    * Added user_autocreate support for auth.http and auth.sslclientcert.\n    * Added \".\" and \"@\" to allowed characters in usernames. This is needed\n      e.g. when using mod_pubcookie for authentication. mod_pubcookie returns\n      userids like \"geek@ANDREW.CMU.EDU\" (e.g. the Kerberos domain is part of\n      the id). Thanks to Brian E. Gallew for his patch, which we used for\n      inspiration for user autocreation changes.\n    * Changed auth method to return a tuple (user_obj, continue_flag), see\n      comments in auth.py.\n    * auth methods now create user objects with kw args auth_method and\n      auth_attribs, so that moin knows later how the user was authenticated\n      and which user object attributes were determined by the auth method.\n    * Added MoinMoin/scripts/import/IrcLogImporter.py to import supybot's\n      IRC logs into a moin wiki. We use MonthCalendar compatible page names,\n      so you can use the calendar for showing / navigating the logs.\n    * Removed packager binary from FCKeditor (fixing a Debian policy problem).\n    * Worked around .png transparency bugs of IE with the new logo. We ship\n      two logos: moinmoin.png without an alpha channel (IE compatible) and\n      moinmoin_alpha.png which has an alpha channel and looks better on\n      browsers with full .png support.\n    * Allow a .zip file to have a directory in it if it is the only one.\n\nVersion 1.5.0beta4:\n  Fixes:\n    * use <span class=\"anchor\"> instead of <a> for line-xxx anchors, this\n      fixes some rendering problems on IE\n    * Fixed the ReStructured text parser when it was used with non-HTML\n      formatters. Increased compatiblity with new docutils code.\n      (Thanks to Matt Gilbert.)\n  Other changes:\n    * cfg.stylesheets = [] (default). You can use this on wiki or farm level\n      to emit stylesheets after the theme css and before the user prefs css.\n      The list entries must be ('screen', '/where/ever/is/my.css') style.\n    * Added sample code for auth using an external cookie made by some other\n      program. See contrib/auth_externalcookie/*. You need to edit it to\n      fit whatever cookie you want to use.\n\nVersion 1.5.0beta3:\n  Fixes:\n    * fixed editor preview throwing away page content for new pages\n    * require POST for userform save and create* action\n    * use request.normalizePagename() while collecting pagelinks\n    * do not offer gui editor for safari\n  Other changes:\n    * tell user if account is disabled\n    * added support for linking to .ico and .bmp\n    * attachment methods for the text_xml and xml_docbook formatters\n    * new favicon\n    * updated i18n (fixed nl, did nobody notice this?) and underlay\n    * changed show_interwiki default to 0\n\nVersion 1.5.0beta2:\n  Fixes:\n    * fix wrong _ in title links (MoinMoinBugs/AddSpaceWikiNameAtHead)\n    * fix gui editor (converter) crash on save\n    * MoinMoinBugs/PageHitsFails\n    * MoinMoinBugs/PackagePagesFailsBecauseAllowedActionsMissing\n    * Avoid destroying existing page content if editor is called with\n      template parameter for an existing page.\n    * fix countdown javascript for browser status line in editor\n    * added page title display for editor\n    * added header div for classic theme\n\n  Authentication and related:\n    * Added a WhoAmI.py wiki xmlrpc plugin to check whether auth works\n      correctly for xmlrpc. There is a counterpart script WhoAmI.py that\n      uses http auth when calling the xmlrpc plugin, so you can use it to\n      check http auth.\n\nVersion 1.5.0beta1:\n    * Requirements changed to require Python >= 2.3. We recommend that\n      you use the latest Python release you can get. The reason we\n      dropped 2.2.2 support is because no developer or tester uses this\n      old version any more, so incompatibilities crept in the code\n      without anybody noticing. Using some recent Python usually is no\n      real problem, see there for some hints in case you still run an\n      old python: http://moinmoin.wikiwikiweb.de/NewPythonOnOldLinux\n      The hint also does apply to other POSIX style operating systems,\n      not only Linux.\n    * We recommend you use MoinMoin/scripts/cachecleaner.py to clean the\n      wiki's cache (see comments at top of the script).\n      The cache will automatically be rebuilt (some operations may take\n      some time when first being used, e.g. linkto: search, so be patient!).\n\n  Config Changes:\n     * there is a file CHANGES.config with just the recently changed stuff\n       from multiconfig.py\n     * new defaults:\n       * page_front_page old: u\"FrontPage\" new: u\"HelpOnLanguages\"\n         please just read the help page in case you see it :)\n       * bang_meta old: 0 new: 1\n       * show_section_numbers old: 1 new: 0\n       * some regexes that used to be [a-z]Uxxxx$ are now [a-z0-9]Uxxxx$\n       * navi_bar has no page_front_page as first element any more\n     * removed settings and code [new behaviour]:\n       * acl_enabled [1]\n       * allow_extended_names [1]\n       * allow_numeric_entities [1]\n       * backtick_meta [1]\n       * allow_subpages [1]\n     * new settings:\n      * cfg.mail_sendmail = \"/usr/sbin/sendmail -t -i\" can be used if sending\n        via SMTP doesn't work on your server. Default is None and that means\n        using SMTP.\n      * language_default replaces the old default_lang setting (just renamed).\n      * language_ignore_browser = True can be used to let moin ignore the\n        user's browser settings (e.g. if you run a local-language only wiki\n        and your users use misconfigured or buggy browsers often). Default is\n        False. Don't forget to set language_default when using this.\n \n    * Wiki Editor changes / new WYSIWYG editor\n     * fully imported the javascript based LGPLed FCKeditor (many thanks\n      to Fred CK for his great work). See http://fckeditor.net/ for details.\n     * config for FCKeditor is at wiki/htdocs/applets/moinfckeditor.js\n     * added cfg.interwiki_preferred (default = []) to set a list of wikis to\n       show at the top of the wiki selection list when inserting an\n       interwiki link (just use the same wiki name as in interwiki\n       map). If the last list item is None, then the preferred wikis\n       will not be followed by the entries of the interwiki map.\n    * moved save/preview/... buttons to the top so that they can be\n      easily reached\n    * reduced edit_rows default to 20 lines\n    * Added support for edit by doubleclick in the diff view\n\n    * Improved wiki farm support\n     * make user files sharable between several wikis in a farm\n      * allow/use interwiki subscriptions\n      * use interwiki links in page trail\n      * save bookmark per wiki name\n     * cfg.cookie_domain can be used to set a cookie valid for a complete\n       domain (default: None == only for this host). If you use '.domain.tld',\n       the cookie will be valid for all hosts *.domain.tld - good for host\n       based wiki farms.\n     * cfg.cookie_path can be used to set a cookie valid for a wiki farm under\n       some base path (default: None == only for this wiki's path). If you use\n       '/wikifarm',  the cookie will be valid for all wikis\n       server.tld/wikifarm/* - good for path based wiki farms.\n     * Interwiki user homepage (if you have MANY users)\n       Generated links for usernames are interwiki now, use cfg.user_homewiki\n       (default: 'Self') to specify in which wiki the user home pages are\n       located. Note: when pointing this to another wiki, the /MoinEditorBackup\n       functionality will be disabled.\n       @SIG@ also uses interwiki when needed.\n\n    * Authentication, ACLs and related\n     * Modular authentication: cfg.auth is a list of functions that return a\n       valid user or None, use it like this:\n           from MoinMoin.auth import http, moin_cookie\n           auth = [http, moin_cookie]\n     * cfg.auth_http_enabled was removed, please use cfg.auth instead.\n     * http auth now supports \"Negotiate\" scheme, too\n     * Added sslclientcert auth method (Apache: untested, Twisted: not\n       implemented, IIS: no idea). See MoinMoin/auth.py for details.\n       Submit a patch if you have improvements.\n     * cfg.superuser is a list of unicode usernames. It is used by some\n       critical operations like despam action or PackageInstaller.\n     * removed allowed_actions, we now use actions_excluded only and it\n       defaults to [], that means, no action is excluded, everything is\n       allowed (limited by ACLs). In case of RenamePage and DeletePage,\n       this shouldn't be a problem as both can be reverted. In case you\n       did not allow attachments, you now have to use:\n       actions_excluded = ['AttachFile']\n     * special users (All, Known, Trusted) in Groups are now supported\n     * MoinMoin.security.autoadmin SecurityPolicy added\n       When using this security policy, a user will get admin rights on his\n       homepage (where pagename == username) and its sub pages. This is needed\n       for the MyPages action, but can also get used for manual ACL changes.\n       It can also be used for Project page auto admin functionality, see the\n       comments in the script for details.\n       Further it can automatically create the user's group pages when the\n       user saves his homepage.\n     * there is a UpdateGroup xmlrpc call, see MoinMoin/xmlrpc/UpdateGroup.py -\n       you can use this to update your *Group pages e.g. when generating them\n       from an external group database.\n\n    * UserPreferences changes\n     * Alias name: is used for display purposes, when \"name\" is cryptic. It is\n       shown e.g. in the title attribute of userid links (displayed when\n       moving the mouse over it).\n     * \"Publish my email (not my wiki homepage) in author info\" - use this\n       if you don't have a wiki homepage, but if you want to be contactable\n       by email. When you edit a page, your email address will be published\n       as mailto: link on RecentChanges, at bottom of page (last editor) and\n       in page info. If the wiki runs publically on the internet, be careful\n       using this or your email address might be collected by spammers.\n     * Preferred Editor: whether you want to use the text editor (as in\n       previous moin versions), the gui editor (new!) or both (you will get\n       2 edit links in that case).\n     * a user can add/remove the current page to/from his quicklinks with an\n       appropriate action now\n     * if cfg.user_email_unique = False, we don't require user's email\n       addresses to be unique\n     * removed show_fancy_links user preferences setting to simplify code and\n       caching. Displaying those icons is now done by CSS styles (see\n       common.css). Maybe needs fixing for non-standard themes and RTL langs.\n\n    * Markup\n     * added strikethrough markup: --(striked through text here)--\n     * @ME@ expands to just the plain username (no markup added) on save\n    \n    * User homepages\n     * when a user accesses his own non-existing homepage (pagename ==\n       username), the wiki will present the MissingHomePage system page\n       content, explaining what a user homepage is good for and offer\n       one-click editing it with content loaded from HomepageTemplate\n     * creation of homepage subpages is assisted by the MyPages action, which\n       offers rw, ro page creation (and a related group) or creation of private\n       pages. If you are not in the user_homewiki, you will get redirected\n       there first.\n\n  Other changes/new features:\n    * Added PackageInstaller and unzipping support (see wiki page\n      HelpOnActions/AttachFile for further details).  PackageInstaller requires\n      the user to be in cfg.superuser list.\n     * Added an PackagePages action to simplify the package creation.\n    * Added location breadcrumbs - when you are on some subpage, the page\n      title parts link to the corresponding parent pages, the last part does\n      the usual reverse linking.\n    * added WSGI server support, thanks to Anakim Border, see:\n      wiki/server/moinwsgi.py (moin as WSGI app, uses the flup WSGI server,\n                               see http://www.saddi.com/software/flup/)\n      MoinMoin/server/wsgi.py (adaptor code)\n    * added a \"Despam\" action to make de-spamming a wiki easy (mass revert\n      bad changes done by a single author or bot). You need to be in\n      cfg.superuser to use it.\n    * Better diffs with links to anchors to the changed places\n    * Enhanced table support in the DocBook formatter.\n    * Added 'moin' daemon script, that let you run moin standalone\n      server as daemon and control the server with simple command line\n      intreface: moin start | stop | restart | kill\n    * Add 'restart' option to mointwisted script\n    * Add properties option to standalone server config. Allow\n      overriding any request property like in other server types.\n    * Add support for running behind proxy out of the box with out\n      manual url mapping.\n      See HelpOnConfiguration/IntegratingWithApache\n    * added a WikiBackup action, configure it similar to this:\n      data_dir = \"/path/to/data\"\n      backup_include = [data_dir, ] # you can add other dirs here\n      backup_users = [\"BackupUserName\", ] # only TRUSTED users!\n      You usually don't need to change the default backup_exclude setting.\n      The default backup_include list is EMPTY and so will be your\n      backup in case you don't configure it correctly.\n      If you put your data_dir there, the backup will contain private\n      user data like email addresses and encrypted passwords.\n    * Added a SubscribeUser action which allows the administrator to subscribe users to the\n      current page.\n    * Added thread count to SystemInfo macro.\n    * Added Petr's newest patch against the DocBook code. It allows you to use macros (esp. the include macro) in DocBook pages in order to build larger documents.\n    * Added a RenderAsDocbook action which redirects to the DocBook formatter.\n    * Added searching for wiki-local words lists under <data_dir>/dict/.\n      They are used additionally to the global lists in MoinMoin/dict/.\n    * moin_dump now also dumps attachments referenced from the page.\n      It doesn't dump stuff that is just attached, but not referenced!\n    * On RecentChanges we now force the comment to be breakable, this improves\n      rendering of over-long words or on narrow browser windows - especially\n      for themes with limited content width like rightsidebar.\n    * We now have the \"new\" icon on RecentChanges clickable, just links to the\n      page.\n    * Print view now shows \"interwikiname: pagename\" (for show_interwiki = 1).\n\n  International support:    \n    * mail_from can be now a unicode name-address \n      e.g u'J\u00fcrgen wiki <noreply@jhwiki.org>'\n\n  Theme changes:\n    * logo_string is now should be really only the logo (img).\n      If you included your wiki's name in logo_string you maybe want to remove\n      it now as it is shown as part of the location display now anyway (if\n      you set show_interwiki = 1).\n    * You maybe want to remove page_front_page from your navi_bar - we link to\n      that page now from the logo and (new, if you set show_interwiki = 1) from\n      the interwiki name displayed in location display, so you maybe don't need\n      it in navi_bar, too.\n    * If you have a custom theme, you should / may:\n     * sync modern/css/screen.css #pagelocation #pagetrail stuff to your\n       screen.css or pagelocation display (title()) will look strange (like a\n       list).\n     * remove \"#title h1 ...\" CSS (or any other CSS assuming h1 is a page\n       title and not just a first level heading), it is not used any more.\n     * we now render = heading = as <h1> (was <h2> before 1.5),\n       == heading == as <h2> (was <h3>), etc.\n     * maybe move both title() and trail() to header area, like the builtin\n       themes do it.\n     * there is a new interwiki() base theme method that optionally (if\n       show_interwiki = 1) shows the interwiki name of this wiki and links to\n       page_front_page. The css for it is #interwiki.\n\n  Developer notes:    \n    * Plugin API was improved. When plugin module is missing,\n      wikiutil.PluginMissingError is raised. When trying to import a\n      missing name from a plugin module, wikiutil.PluginMissingError is\n      raised. You must update any code that use wikiutil.importPlugin.\n      Errors in your plugin should raise now correct tracebacks. See\n      http://moinmoin.wikiwikiweb.de/ErrorHandlingInPlugins\n    * pysupport.importName was changed, it does not check for any\n      errors when trying to import a name from a module. The calling\n      code should check for ImportError or AttributeError. Previous\n      code used to hide all errors behind None.\n    * Its easier now to customize the editbar by overriding\n      editbarItems() in your theme, and returning a list of items to\n      display in the editbar. To change a single editbar link, override\n      one of the xxxLink methods in your theme.\n\n  Internal Changes:\n    * request.formatter (html) is available for actions now\n    * theme API's d['page_home_page'] is gone (sorry) and replaced by\n      d['home_page'] which is either None or tuple (wikiname,pagename).\n      It is better to use the base classes function for username/prefs anyway.\n    * introduced cfg.hacks for internal use by development, see comment in\n      multiconfig.py and file HACKS.\n    * added IE7 (v0.9) from Dean Edwards (see http://dean.edwards.name/IE7/) -\n      that should fix quite some IE bugs and annoyances (on Win32).\n      * for enabling IE7, use cfg.hacks = { 'ie7': True }\n    * reducewiki now also copies all attachments (we use that to make underlay\n      directory from moinmaster wiki's data_dir)\n\n  Fixes:  \n    * Fixed a typo in xslt.py which led to a traceback instead of an\n      error message in case of disabled XSLT support.\n    * Fixed crash in twisted server if twisted.internet.ssl is not\n      available.\n    * Fixed wrong decoding of query string, enable wiki/?page_name urls\n      with non ascii page names.\n    * Fixed wrong display of non ascii attachments names in\n      RecentChanges and page revision history.\n    * Fixed a crash when trying to run standalone server on non posix os.\n    * Fixed highlight of misspelled words in Check Spelling action.\n    * Fixed case insensitivity problems on darwin (Mac OS X). See\n      MoinMoinBugs/MacHfsPlusCaseInsensitive\n    * Added RecentChanges (only the english one) to the pages getting\n      html_head_index headers\n    * text_html cache files written with this code will invalidate themselves\n      if they detect to be older than the wikiconfig. Note: you should remove\n      all old text_html cache files once after upgrading, they will then be\n      rebuilt automatically with the new code.\n    * Fixed MoinMoinBugs/12_to_13_mig10_Walk\n    * Fixed the word_rule: a word like AAAbbAbb isn't teared into two parts\n      any more (was: AA<link>AbbAbb</link>)\n    * Fixed false positive InterWiki markup for languages like Finnish.\n      InterWiki links are only rendered if the left side has an appropriate\n      entry in the interwiki map, otherwise it is rendered as simple text.\n    * Fixed unicode error when uploding non-ascii file name using mod\n      python.\n    * Fixed error handling of wikirpc requests, should give more\n      correct errors and prevent no error output and blocking the\n      client in some cases.\n    * Fixed the \"lost password\" mail processing. If a user entered some email\n      address unknown to the system, he was not notified of this, but just got\n      a useless mail with no account data in it. Now the system directly tells\n      the user that he entered an unknown email address.\n    * Fixed SystemInfo, it now also lists parsers in data/plugin/parser dir.\n    * Fix error handling on failure, improved error display\n    * Fix error handling when importing plugins or importing modules\n      dynamically. The fix is not backward compatible with older plugins.\n    * Fix chart action, returns a page with error message when chart\n      can not be created.\n    * Fixed formatter usage in the ShowSmileys macro.\n    * Fixed updating pagelinks cache for [:page:text] or [wiki:Self:page text],\n      fixes display of LocalSiteMap and rendering of such links.\n    * Hopefully fixed urllib problems (esp. with py 2.4.2, but also before) by\n      using our own urllib wrapper that handles encoding/decoding to/from\n      unicode, see wikiutil.py. Also made a similar fix for making and parsing\n      query strings.\n    * Fixed MonthCalendar tooltips when containing special chars like quotes.\n    * Added html escaping for diff text for RSS feed with diff=1.\n    * The distance between page content beginning and the first = heading =\n      was much too much. Fixed.\n    \nVersion 1.4:\n\n    We used that version number for an internal and early development version\n    for what will be called moin 2.0 at some time in the future.\n    There will never be a 1.4.x release.\n\n\nVersion 1.3.5 (2005-08-04, Revision moin--main--1.3--patch-883)\n\nFixes:\n    * small CSS fix for rightsidebar theme\n    * applied some Debian patches (thanks to Jonas!):\n      * de i18n spelling fixes\n      * AttachFile fix, we strip CR in .draw files now\n      * when loading spellcheck dictionaries, we want utf-8, but we make\n        a 2nd try with iso-8859-1 encoding.\n\nNew Features:\n\n    * enabled using https with the Twisted server:\n      You need to use port 443, have PyOpenSSL (+ ssl libs it depends on)\n      installed and have some site key and certificate PEM files configured in\n      your twistedmoin.py file:\n      sslcert = ('/whereever/cert/sitekey.pem', '/whereever/cert/sitecert.pem')\n\n\nVersion 1.3.5rc1 (2005-07-31, Revision moin--main--1.3--patch-865)\n\nFixes:\n\n    * Fixed security bug when acl of deleted page was ignored. See:\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/ACLIgnoredAfterDelete\n    * AttachFile did not display the original filename plus there\n      was a confusion in input field labelling ('Rename to').\n    * Fixed shortcut link non-existent page detection.\n    * Fixed non-working bookmark function on python 2.2.x.\n    * Fixed wikirpc getPageInfo call on python 2.2.x.\n    * Fixed the failing import of plugins from the data/plugin/\n      directories if run in zipimport environments.\n    * Fixed traceback which occurred on negated searches.\n    * Fixed crash when trying to render error message on twisted, fast\n      cgi and modpy.\n    * Fixed error message with modpy, used to show wrong errors below\n      the real message.\n    * Fixed search and goto text fields for better compatibility with\n      dark themes and better control through css.\n    * Show an edit link if MissingPage is missing and a warning in the\n      server log.\n    * Fixed missing footer in the editor.\n    * Fixed indented (invalid) headings with broken links in table of\n      contents.\n    * Fixed crash when file name is too long, show standard error message.\n    * Save trail file in a safe way, should be enough for normal use.\n    * Fixed remember_last_visit user preferences option when show_trail\n      is not selected.\n    * Fixed the tests for Standalone, Twisted, FastCGI and Mod_Python.\n      Run with ?action=test from any page.\n    * Fixed rare bug when wrong search type was performed when pasting\n      search term in Safari.\n    * Fixed crash for custom formatters and dom_xml (which occurred if\n      smileys were in the page).\n    * Editor opens on double click in pages with single quote in the\n      name, like \"Ben's Wiki\".\n    * '/.' in page names are not replaced any more by '/(2e)'\n    * Fixed the long delays while saving pages using RequestCLI.\n    * Fixed variable expanding for users with non WikiName.\n    * Fixed MonthCalendar's calculation of \"today\" to use the user's\n      time zone setting.\n    * Fixed moin_dump script, use same configuration options as other\n      scripts.\n    * Fixed url_mappings to work in proxied setups and sent mails\n      again. Also fixed for image links. Thanks to JohannesBerg.\n    * Fixed page shown after saving a drawing (esp. when saved from a\n      sub page). Fixed help link for drawings.\n    * Fixed mig10 script to run on Python < 2.3.\n    * The twisted server defaulted to a socket timeout of 12 hours!\n      We reduced that to a more sane 10 minutes, that should still be more\n      than enough. This fixed the \"too many open files\" problem we\n      encountered quite often recently. Thanks to Helmut Grohne!\n\nOther Changes:\n\n    * Added {hu} flag.\n    * Added cz, pt and pt-br i18n.\n    * We send a 404 http status code for nonexisting wiki pages now,\n      maybe this will repell some search engines from requesting gone\n      pages again and again. The wiki user still sees the MissingPage\n      wiki stuff, so a user usually won't notice this change.\n    * Return 500 error code on failure and exceptions.\n    * Added some more bot / leech tool user agent strings.\n    * Prevent page floating elements from floating out of the page over\n      the footer, in modern, rightsidebar and classic themes.\n    * Encode URLs in a safer way\n    * We allow usernames with ' character in them now (like Tim O'Brian).\n    * Added support for the new security flags in docutils 0.3.9.\n    * @MAILTO@ expands now to safer [[MailTo()]] macro.\n    * Clarified and i18ned lost password mails.\n    * Added 'TitleIndex' and 'SiteNavigation' (+ translation) to the\n      list of pages that use html_head_index (so that robots\n      \"index,follow\").  Please make sure to have either FindPage,\n      TitleIndex or SiteNavigation in your navi_bar or in your\n      page_front_page content if you want search engines to find all\n      your pages.\n    * Make it possible to send account data when being logged in (for\n      future reference or whatever purpose).\n    * Speed up when running with persistent servers, the wiki config\n      does only get loaded once and misc. stuff is being cached between\n      requests now.\n    * The unit tests are disabled when using multi threading, because\n      the wiki configuration is shared between diffrent threads.\n    * The main code path (using standalone server) of MoinMoin runs on\n      PyPy now.\n    * Formatters do automatically transform HTML to plain text if they are\n      called with raw HTML code.\n    * Using larger socket backlog on Standalone and FastCGI servers\n      should be more reliable on high load.\n    * We now strip leading path from attachments uploaded by IE (this is\n      a bug in IE, not in MoinMoin). Better use a sane browser, like Firefox.\n    * added \"teleport\" to the user agent blacklist\n\nNew Features:\n\n    * Integrated Lupy indexer for better search performance. It is disabled\n      by default as of 1.3.5 as it still has known issues.\n      See multiconfig.py if you want to test it.\n    * Integrated MonthCalendar 2.1, with some new features:\n      * a mouseover bubble that shows first level headlines of the linked\n        day page\n      * all calendars with same pagename move when using cal navigation,\n        thanks to Oliver Graf\n      * included AnnualMonthlyCalendar patch of Jonathan Dietrich\n        (use [[MonthCalendar(Yearly,,,+1,,6,1)]] syntax for birthdays and\n        other annually repeating stuff)\n      Make sure you remove old MonthCalendar.* from data/plugin/macro so that\n      moin will use the new code in MoinMoin/macro/MonthCalendar.py.\n      Maybe also clear the text_html cache.\n    * Added the new XSLT parser and the DocBook parser. This should increase\n      the 4suite compatiblity. See HelpOnXmlPages for details.\n      It now should run on 4suite 1.0a4 and 1.0b1. Thanks to Henry Ho!\n    * Added the DocBook formatter. This will let you generate DocBook markup\n      by writing simple wiki pages. It needs PyXML.\n    * It is now possible to customize parts of the UserPreferences page in\n      your wikiconfig (changing defaults, disabling fields, removing fields):\n      * Use user_checkbox_* for the checkboxes.\n      * Use user_form_* for other fields.\n      * See MoinMoin/multiconfig.py for the built-in defaults.\n    * New standalone server classes: ThreadPoolServer using pool of\n      threads, ThreadingServer with thread limit and ForkingServer.\n    * New standalone server configuration options: serverClass,\n      threadLimit, requestQueueSize.\n    * Use \"PythonOption Location\" in mod_python setup to solve script_name\n      problems.\n\nDeveloper notes:\n    \n    * Theme can now override maxPagenameLength() method to control page\n      name shortening.\n    * A search Match now provides access to the full re match via\n      the re_match attribute (use to access groups of the match)\n    * Underlay is not managed by arch any more. The tree contains an\n      underlay tarball, and you should untar after you update from main.\n    * \"make update-underlay\" will untar underlay\n    * \"make merge\" will star-merge main into your tree\n    * \"make test\" will now create and run in a fresh testwiki instace\n    * \"make clean\" options added\n    * _tests module does not have a global request any more. To refer to\n      the current request in a test, use self.request.\n    * _tests.TestConfig class require a request in the constructor.\n    * \"python tests/runtests.py test_module\" will run only test_module\n    * request.cfg stays between requests (for persistent servers).\n\n\nVersion 1.3.4 (2005-03-13, Revision moin--main--1.3--patch-666)\n\nFixes:\n\n    * Fixed ACL check in LikePages macro that caused links to unreadable \n      pages to show.\n    * Fixed ACL check in newpage action.\n    * Fixed a security problem when admin policy defined in a custom\n      SecurityPolicy class was ignored.\n    * Fixed ACL check in action=show so that a user who may not read a page\n      also can't find out WHEN the protected page was updated.\n    * Workaround on Windows 95, 98, ME in order to clear the dircache.\n      This fixes some bugs related to an outdated page list and newly created\n      pages that did not appear immediately.\n    * Fixed decoding issues of page names on Windows, finally.\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/BrokenUmlautsInLinksIn131\n    * Fixed traceback on IIS.\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/request%2epy_broken_on_IIS\n    * Fixed wikirpc for standalone server.\n    * Other fixes (encoding and str/unicode data type related) to wikirpc\n      server, fixing some non-ascii issues hopefully.\n    * Fixed broken query strings for Standalone installations.\n    * Fixed backlinks - the result did not always show all links, often it \n      showed too many irrelevant matches (MoinMoinBugs/BacklinksAreBroken).\n    * Fixed the acceptance of the show_hosts setting. Now you should be able\n      to hide any IP or host name from being published by MoinMoin by enabling\n      this option.\n    * Fixed wrong line endings on email messages.\n    * Fixed MoinMoinBugs/StandaloneUnquotesTooMuch.\n    * Fixed crash when trail file is missing.\n    * Fixed a traceback when searching for single ( or ).\n    * Added mig10 script to fix crashes with uncoverted edit-locks and file\n      attachments. Just use it as you did with mig1..mig9 before.\n    * Added mig11 script to add __init__.py files to data/plugin (and below).\n    * added some fixes for the xslt parser (thanks to fanbanlo), it might be\n      still broken, but someone with deeper knowledge about xslt should fix it.\n    * Replaced image link with W3C's \"html 4.01 compliance\" icon by a simple\n      text link to avoid https: or config trouble.\n    * Catch OverflowError backtrace when illegal date strings (e.g. <1970 or\n      >2038) are fed to moinmoin's time routines. It will just output current\n      date / time in those cases.\n    * UserPreferences now also set a date_fmt preference and Date macro\n      honours it. You may have to reset your UserPreferences value for that.\n    * Fixed free parent and subpage links in interwiki notation.\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/FreeParentLinksAreBroken\n    * Fixed a traceback for invalid ReST markup.\n    * Fixed UnicodeError in SystemAdmin's Attachment Browser.\n\nOther Changes:\n\n    * Optimized the IRC parser.\n    * Support for zipimport of the MoinMoin package. This allows you to use\n      py2exe and similar programs.\n    * Show the editor's name in the mail subject.\n    * Added the pragmas description and keywords. They will add <meta> headers\n      if used.\n    * Added MoinMoin/scripts/xmlrpc-tools/putPageTest.py example script, useful\n      as a starting point for importing data using wiki xmlrpc.\n    * Optimised display on Opera browser.\n\nNew features:\n\n    * The search modifier \"linkto:\" was introduced. You can use it to search\n      for links.\n    * The NewPage macro now can take a PageTemplate parameter, see HelpOnMacros.\n    * New config settings (so you don't need to edit wikirpc.py any more):\n      xmlrpc_putpage_enabled = 0 (if 1, enables writing to arbitrary page names)\n      xmlrpc_putpage_trusted_only = 1 (if 0, doesn't require users to be\n       authenticated by http auth - DANGEROUS, DO NOT SET TO 0!!!)\n    * Added support for Digest and NTLM authentication with CGI (e.g. if you\n      use those Apache modules)\n    * The datetime string accepted by Date and DateTime macros was extended to\n      accept a timezone specification, so now +/-HHMM is also valid, e.g.:\n      2005-03-06T15:15:57Z (UTC, same as +0000)\n      2005-03-06T15:15:57+0000 (UTC)\n      2005-03-06T16:15:57+0100 (same time given as local time for time zone\n                                with offset +0100, that is CET, e.g. Germany)\n      2005-03-06T10:15:57-0500 (same time given as local time for time zone\n                                with offset -0500, EST, US Eastern Std. Time)\n      The values given as macro argument will be transformed to UTC internally\n      and then adapted again according to viewing user's UserPreferences, so\n      the user will see the same moment in time but shown in his local time\n      zone's time (at least if he set his UserPreferences correctly and didn't\n      forget changing them twice a year for DST and non-DST).\n    * Readded (now optional) editlink footer to Include macro. Add\n      ',editlink' to call to enable this.\n    * star \"smileys\" e.g. {*}{*}{*}{o}{o}\n\n\nVersion 1.3.3 (2005-01-24, Revision moin--main--1.3--patch-595)\n\nFixes:\n\n    * fixed ACL security problem in search\n    * fix for IIS with CGI allowing page names that contain chars\n      that are not in the system code page\n    * fixed MoinEditorBackup revisions to start with 1 now\n    * improved page locking ('current' file)\n    * Unittests (normally shown at end of action=test output) are currently\n      disabled for everything except CGI, because they only work reliably with\n      CGI, giving wrong results for other request methods.\n\n\nVersion 1.3.2 (2005-01-23, Revision moin--main--1.3--patch-587)\n\nFixes:\n\n    * ACL bugfix for deleted pages with ACL protection.\n    * ACL bugfix for \"Default\" acl.\n    * Fixed updating of groups and dicts\n    * Python 2.2.x related fixes (worked on 2.3+)\n      * Fixed traceback in RecentChanges.\n      * Fixed traceback with links browser.\n    * Fixed 0 revision display in 'Show changes'.\n    * Fixed traceback in Antispam which occurred when it could not connect\n      to MoinMaster. Log the errors to stderr or error.log.\n    * Fixed bug in Page init (no date, use rev). Fixes problem with\n      #deprecated PI.\n    * Fixed empty lists in empty search results.\n    * Cosmetic fix for modern theme (when viewed with Internet Explorer).\n    * Fixed migration 9 script, do not drop newline, do not drop error.log, \n      note about missing error.log.\n    * Fixed repair_language.py script, keep ending newline on revisions.\n    * Show headings and macro content in correct direction when mixing content \n      in several directions in the same page and using caching.\n    * Fixed bug in standalone re farmconfig.\n    * Fixed DOS condition in antispam code.\n    * Use smaller margin in print mode to get better results with \n      Mozilla/Firefox.\n    * Fixed some user input escaping issues.\n    * Fixed a problem when one wiki plugin override other wikis plugins in \n      same farm.\n    * Fixed some broken tests.\n    * Fixed recursive include in pstats.\n    * Fixed bug in standalone - HTTP result code was 200 even when the access\n      was forbidden.\n    * Fixed traceback when trying to login with non-ascii password.\n    * Fixed traceback when xml is not available, reported on Python 2.2.?\n    * Fixed slideshow to show slides in sorted order again.\n    * Fixed serving multiple wikis on same IP/different ports with twisted and\n      farmconfig.\n    * It is possible to run with data_underlay_dir = None for special\n      application, but be aware that the wiki won't be usable unless you have\n      at least some of the system pages from underlay/ available.\n    * Files with Unicode characters in their filename are possible now.\n    * Bugfix for broken [:page#anchor:text] links.\n    * Workaround an instability of the gdchart module leading to\n      stalled servers etc.\n    * Fixed some event-log decoding issues that affect charts rendering.\n\nOther changes:\n\n    * Major speed improvement over 1.3.1. Many times faster title search,\n      creating new page, opening page editor and any operation that list pages.\n      See http://moinmoin.wikiwikiweb.de/MoinBenchmarks\n    * Improved README.migration.\n    * Cleaner design for login/register interface, login is always the default\n      button when the user click Enter.\n    * If there are problems found in the configuration, log the error\n      and display helpful error messages in the browser.\n    * More forgiving unicode configuration policy, you must use the u'string' \n      format only for unicode values.\n    * Added profiling to CGI.\n    * The content of farmconfig.py is similar to wikiconfig.py now.\n    * Unexpected errors while loading cache files are logged.\n    * i18n for icon ALT tags.\n    * Include request initialization code in the profile in standalone server.\n    * When creating new theme, style sheets are inherited correctly, no need\n      to override style sheets just to get them working.\n    * Many times faster plugin system. Typical pages are about 35% faster, \n      pages with many plugins can be many times faster. \n    * Spiders are allowed to fetch attachments.\n    * Old user files containing password hash encoded in pre 1.3 charset\n      are auto repaired on first login.\n    * data_dir defaults to './data', underlay_data_dir to './underlay' now.\n      It is a good idea to replace those by absolute pathes in wikiconfig.py.\n    * Renamed \"Refresh\" to \"Delete Cache\" - it was misused by users. The action \n      was also moved into the action menu in the modern and rightsidebar themes.\n    * Added a workaround for TableOfContents missing some links by making it\n      uncacheable via a \"time\" dependency.\n    * Removed interwiki icon and title attribute for wiki:Self:... links.\n    * Unittests (normally shown at end of action=test output) are currently\n      disabled because they worked unreliably, giving wrong results sometimes.\n\nNew features:\n\n    * Create new pages easily using configurable interface and page templates \n      with the new NewPage macro.\n    * ReStructuredText (rst) support is built-in now. See HelpOnParsers.\n    * New experimental feature in mointwisted.py - each interface may \n      specify a port: '12.34.56.78:80'. Without a port, the port option\n      is used.\n\nAPI changes:\n\n    * For a complete list of changes, see MoinMoin:ApiChanges.\n    * wikiutil.importPlugin's first argument is now a wiki config instance \n      (request.cfg) and there is no path keyword.\n    * Wiki plugins always override MoinMoin plugins. wikiutil.importPlugin\n      implements this override.\n    * util.pysupport.importName does not accept path - you should call \n      it with correct module name, e.g 'wikiconfig.plugin.parser.wiki' for \n      wiki plugins, or 'MoinMoin.parser.wiki'. \n    * wikiutil.extensionPlugin was renamed to wikiPlugins and it gets config \n      instance instead of path.\n    * New function wikiutil.importWikiPlugin used to import wiki plugins \n      using a cache in a thread safe way.\n    * New config option config.use_threads is used to activate thread \n      safe code.\n    * New keyword arguments for getPageList, enable 10X faster operation\n      for common cases by controlling page filtering.\n    * New up to 100X times faster getPageCount\n\n\nVersion 1.3.1 (2004-12-13, Revision moin--main--1.3--patch-434)\n\nFixes:\n\n    * Fixed \"Error Cyclic usage\" crash when user had Italian (it), Korean\n      (ko), Serbian (sr) or Vietnamese (vi) as user interface language.\n    * Fall back to en (instead of crashing) when user uses a language moin\n      does not support / does not support any more (like pt,sv,fi,sr).\n    * In 1.3.0, people accidentally put iso-8859-1 chars into wiki configs,\n      but those where expected to be pure utf-8 and thus it crashed.\n      Fixed by using unicode strings (varname = u'whatever'), a matching\n      encoding setting (see top of script comment) and, when decoding strings,\n      using decode to ASCII with replace mode (this replaces non-ASCII chars,\n      but at least it won't crash - and you get a warning to better use\n      Unicode strings).\n    * Fixed long time broken table formatting. ||<style=\"see css spec\" a||b||\n      Now even generates valid HTML! The old markup for align, valign, width,\n      bgcolor still works, but synthesizes style attribute data.\n    * SystemAdmin macro shows attachments of ALL pages now.\n    * Users without write acl rights will be able to see attachments again and\n      also have AttachFile action in menu.\n    * Fixed wrong match count in search results, find all matches in page \n      titles, show all matches in contents in some rare cases.\n    * Run about 200% faster with long running processes (standalone, Twisted), \n      about 20% faster with cgi, by better internal data handling in wikidicts.\n    * On SF, the dict files use utf-8 encoding now. We included them also in\n      distribution, see contrib/dict/.\n    * Fixed permissions to shared template stuff.\n    * Speeded up search, fixed wrong match counts.\n    * Speeded up internal data handling (wikidicts).\n    * Fixed rare unicode error after deleting a page (reported only on SuSE\n      Linux 9.0 / Python 2.3.0).\n    * Fixed file permissions of files in the data dir.  \n    * Fixed some cosmetic problems in migration scripts and use sys.path.insert\n      to get latest moin code when executing them.\n\nOther Changes:\n\n    * Improved docs, system and help pages.\n    * Updated translation files.\n\nKnown Bugs:\n\n    * Internet Explorer renders our HTML/CSS in a suboptimal way.\n      (MoinMoin:MoinMoinBugs/InternetExplorer)\n      Workaround: use a non-broken browser like FireFox / Mozilla.\n      Fixed in MoinMoin 1.3.2.\n    * Passwords using non-ascii do not work.\n      (MoinMoin:MoinMoinBugs/NonAsciiPasswordsBroken)\n    * The TOC macro is broken partly.\n      (MoinMoinBugs/TableOfContentsBrokenForIncludedPages,\n       MoinMoinBugs/TableOfContentsLacksLinks)\n    * See also: http://moinmoin.wikiwikiweb.de/MoinMoinBugs\n      \n\nVersion 1.3.0 (2004-12-06, Revision moin--main--1.3--patch-400)\n\n    As you see from the length of the 1.3 changes below, 1.3 is a major(!)\n    upgrade. We could have also named it \"2.0\", but we decided against.\n    So take the time for reading the informations thoroughly and do the\n    migration exactly as we tell you - this is no 5 minutes upgrade!\n\n    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    !!! We heavily changed configuration, data encoding, dir layout:    !!!\n    !!!  * the default encoding changed to utf-8.                       !!!\n    !!!  * also, we changed the escaping for special chars to %XX%YY in !!!\n    !!!    URL and (xxyy) in file system.                               !!!\n    !!!  * layout of data dir changed completely                        !!!\n    !!! If you upgrade an existing wiki, you must run the migration     !!!\n    !!! scripts or you will get data corruption or other problems.      !!!\n    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n    HINT: Upgrading your wiki - critical information\n\n      If you are NOT starting from scratch, you MUST convert your existing\n      data - see README.migration for details.\n\n      If you use ##language: xx comments on your OWN pages, you should also run\n      repair_language script. Not needed for help/system pages as we already\n      have done that for you.\n\n      MoinMoin uses Unicode internally now (UCS-2 with 16 bits or UCS-4 with\n      32 bits, depending on your Python installation). The encoding used\n      for page files and html output is set by config.charset.\n\n      Moin 1.3 uses utf-8 encoding only, there is NO SUPPORT for using a\n      charset different from utf-8 with 1.3. If you try, you are on your own.\n\n    Directory layout\n\n      Directory layout was heavily changed. Each page now is a directory,\n      containing page revisions, attachments, cache files and edit-log.\n      \n      You can delete a page or move a page from one wiki to another\n      easily. Look at the wiki/data directory to see.\n      \n      Example:\n        old: data/text/FrontPage\n        new: data/pages/FrontPage/revisions/00000042\n             data/pages/FrontPage/current (contains: 00000042)\n        old: data/backup/FrontPage.xxxxxxxx\n        new: data/pages/FrontPage/revisions/00000023\n\n      For cleaning up cache files, use MoinMoin/scripts/cachecleaner.py \n      (see comments in script).\n\n   Python / Libs\n      \n      * For using RSS, you need to have PyXML installed:\n        Python 2.4*   -> PyXML 0.8.4 (cvs version)\n        Python 2.3.x  -> PyXML 0.8.3\n        Python 2.2.2+ -> ???\n        This will also make \"Live Bookmarks\" of Mozilla Firefox working.\n        New: if you don't have PyXML installed, the RSS icon on RecentChanges\n        will not be displayed any more. Python with no PyXML installed\n        generates invalid RSS XML.\n\n   Page names handling\n\n      * Handling of special characters in file names changed from _xx format\n        to (xx...) format.\n      * In URLs, moin now uses %xx%yy quoting, (because this is supported by \n        browsers), and sub pages use \"/\" instead of the ugly \"_2f\".\n      * Underscore character \"_\" is used now as a space character \" \" both \n        in file names and URLs. \" \" and \"_\" will be handled equivalent at most\n        places in the future (represented as \"_\", rendered as \" \").\n      * To prevent wiki abuse and user typing errors, page names are normalized \n        in URLs, query strings, the \"go\" box and when renaming pages. This \n        include leading, trailing and multiple slashes and white space. Certain \n        invisible unicode characters are removed from page names.\n      * Group page names are restricted even more, any non unicode alpha-numeric\n        character is removed. This is done to enable changing acl syntax in \n        the future. The restriction might be loosen on future versions.\n      * You can edit config.page_invalid_chars_regex to control which characters\n        are allowed in page names (Changing it is not supported).\n      * When you enter page name, it is normalized and you are redirected to\n        the normalized page, or if nothing left (e.g '/////'), to FrontPage.\n      * When renaming a page to a name that can be normalized to an empty string,\n        the new page name will be \"EmptyName\" and the user will not get an\n        error message.\n       \n   Underlay directory\n\n     * Pages (especially system and help pages) are now located in an underlay\n       directory (data_underlay_dir). You will see the pages there if they are\n       NOT covered (overlayed) by a page in the normal pages directory\n       (as set using data_dir).\n       MAKE SURE THAT data_underlay_dir IS CORRECT OR YOU WILL SEE MANY EMPTY\n       PAGES ONLY IN A NEW WIKI.\n     * If you edit a page that is shown from underlay directory, it will be\n       copied to the normal page directory on save (copy-on-write).\n     * You can use one copy of the underlay directory shared by many\n       wiki instances. Each wiki will then have only your local, self-made\n       wiki pages in its data directory, and only system and help pages in the\n       single, shared underlay directory - this simplifies upgrades a lot.\n     * It is recommended to keep your underlay system and help pages immutable\n       using acl, so you can upgrade your wiki easily. The default help and\n       system pages already have those ACLs (using MoinPagesEditorGroup).\n     * Do not forget to remove your old help and system pages after migrating\n       your wiki. We don't provide a script for that as that would be\n       dangerous for edited pages. Just use some file manager (e.g. mc) to\n       clean the data/pages/ directory. As soon as you have removed the\n       system pages there, you will see the new pages in the underlay dir.\n       See the EditedSystemPages page for a list of pages that exist in both\n       data and underlay directory (use this page as admin!).\n\n       When updating from 1.2 or lower to 1.3 or higher, you will want to\n       clean out the copies of the system pages in your {{{wiki/data}}}\n       directory. All of these pages will now reside in the underlay\n       directory. If you have system pages from 1.2 or lower in your\n       wiki/data/ directory, they will overshadow the more up-to-date\n       documentation. This can be done using the following manual procedure:\n       1. You have just converted from 1.2 or lower to post-1.3.\n       2. Go to your wiki's EditedSystemPages.\n       3. Find all the pages that are MoinMoin system or help pages. You will\n          know if it is one of those pages because it is not your page.\n       4. Check if it is okay to delete by either:\n          1. Using the this page \"info\" link and check the Revision History to\n             see if it is greater than 1. If so, there are modifications, so do\n             not delete the page and evaluate the modifications to see if they\n             are necessary.\n          2. Using your file browser (Windows Explorer, etc) to go to your\n             wiki/data/<<systemPage>>/revisions/ directory and to see if there\n             are no modifications. If there are, do not delete the page and\n             evaluate the modifications to see if they are necessary.\n       5. Delete that wiki/data/<<systemPage>> using your file browser.\n\n    Multiple languages\n\n      * New file name quoting method allow 50% longer page names in languages\n        that use more than one byte per character, like Hebrew, Korean etc.\n      * Configuration file uses 'utf-8' encoding now. Certain values that are\n        marked with [Unicode] can use any character in your language. Examples \n        are page names in navi_bar, page types regular expressions and site name.\n      * For configuration examples adopted to your language, check ConfigMarket \n        in the MoinMoin wiki.\n      * The system and help pages that come with moin are now in utf-8.\n      * MissingPage system page localized, should display in your language.\n      * We did many i18n (translation) updates.\n      * CSS file use utf-8 encoding. User css is also expected to be utf-8.\n        This is relevant only if you use non-ASCII values in the CSS file.\n      * config.upperletters and config.lowerletters were removed.\n        We now use a pre-made ucs-2 spanning set and you usually don't have to\n        change it. See MoinMoin/util/chartypes.py if you're interested.\n      * ACL works with any user name or group name in any language, even names \n        with spaces.\n      * Now you can use any charset in config.charset. Note: only utf-8 is \n        a supported configuration!\n      * Improved url handling, now creating pages directly from the browser \n        url box with non-ascii names works in most cases, even when \n        config.charset is not utf-8.\n      * When using non-utf-8 config.charset, characters in URLs that does\n        fit in the charsets are replaced with \"?\" (instead of crashing).\n      * All themes and most macros and actions are Right to Left friendly.\n        Full RTL support planned for 1.3 release.\n      * If page language is specified with #language processing instruction\n        the page is displayed in the correct direction. Pages without\n        language are displayed using the wiki default_lang.\n\n    Multiple configurations\n\n      * You can run multiple wikis from the same wiki directory or server. \n        For example, you can run one Twisted server that serve multiple wikis, \n        instead of running multiple servers. Samples of the new configuration\n        are supplied in wiki/config/*.\n      * You can't just use your old moin_config.py file. It is now called\n        wikiconfig.py and the config variables now have to be in a class\n        \"Config\" and that class must inherit from\n        MoinMoin.multiconfig.DefaultConfig - see the provided wikiconfig.py\n        sample for details.\n        This is very useful, e.g. you could derive a GermanConfig from\n        DefaultConfig. After that, you can derive configs for wikiA and wikiB\n        from that GermanConfig.\n      * farmconfig.py contains a mapping attribute called \"wikis\" with pairs of\n        wikiconfig module name and regular expression. The regular expression\n        is matched against the URL of the request and the first matching entry\n        determines the config module to be imported by MoinMoin.\n      * If you use farmconfig.py's \"wikis\" mapping, then any wiki has a private\n        config module, named after the wiki - e.g. wiki named moinmoin would\n        use moinmoin.py.\n      * If you only have a single wiki, you do not need farmconfig.py. just make \n        a wikiconfig.py and it will be used no matter what URL is requested. \n      * There is one common global \"config\" that holds sitewide settings (like\n        umask or charset) - you do not need to change settings there.\n        This file is located in the MoinMoin code: MoinMoin/config.py.\n      \n    General configuration\n\n      * SecurityPolicy now uses \"write\" instead of \"edit\" (so it is may.write\n        now). This is to get it in sync with ACLs.\n      * SecurityPolicy now automatically can use everything in acl_rights_valid.\n      * There is a new config option \"config_check_enabled\". It will warn about\n        any unknown variable name (probably typo) to stderr or error.log. \n        If something doesn't work at all and changing the config does no \n        difference, switch it on and look at the error message. \n      * The sample config file comes with config_check_enabled = 1. If you \n        introduce additional variables yourself, you definitely want to switch \n        that check off or it will fill your log.\n      * If you define \"page_front_page\" variable, this name will show in the \n        navigation bar now, instead of the default \"FrontPage\".\n\n    New search engine\n\n     * Full text and title search do support multiple search terms now - \n       see HelpOnSearching for details.\n     * Regular expressions are still supported but have to be turned on per\n       search term. Search terms in macros using regular expressions will have\n       to be fixed.\n     * The URL interface of the search engine has also changed. Links that \n       point directly to search actions may be broken.\n\n    User names\n\n      * User names can not use group names, even if ACLs are not enabled.\n        This will prevent error later, if you start to use acl in the future\n        (acl is going to be mandatory in 1.5).\n      * User names are not restricted any more to only CamelCase. \n      * To prevent imposing as other users, leading, trailing and multiple \n        whitespace in user names is not allowed. Only Unicode alpha numeric \n        characters are allowed, with optional one space character between \n        words.\n      * When a user name with a group name or \"bad\" name is trying to \n        access the wiki, he is redirected to the UserPreferences page and \n        asked to create a new account.\n      * When trying to login or create a new account with a bad name, \n        correct error message is displayed in all cases.   \n\n    CGI\n\n      * You can not use your old moin.cgi file, as we removed cgimain.py \n        (was deprecated since 1.2). Copy the new file from the server dir.     \n\n    Moin servers - Twisted and standalone\n\n      * Configuration self checking on startup. Will raise an error in case\n        of bad configuration or non-accessible directories.\n      * Both use shorter and identical configuration options.\n      * Server scripts contain detailed comments and examples.\n      * Configuration defaults changed to fit most users.\n      * There is memory profiler option for debugging, switched off by default.\n      * If you perform a standard install, server scripts should run out\n        of the box or with minimal change.\n\n    Twisted server\n\n      * All code moved into the new server package, the server script\n        contains only configuration options.\n      * Listen to more than one interface with \"interfaces\" list.\n      * Code updated to new Twisted API.\n      * Use mointwisted script to start and stop the server, using \n        \"mointwisted start\" and \"mointwisted stop\".\n      * The Twisted server runs as daemon by default.\n      * All moin Twisted files are called now mointwisted instead of \n        moin_twisted.\n      * Fixed getting username from Twisted request (http auth)\n\n    Standalone server\n\n      * Configuration moved from moin_config.py to moin.py.\n      * If run as root, you can set both user and group for the server.\n      * Can use logfile instead of logging to stderr.\n      * Fixed missing unquoting of query string (caused problems in rare cases).\n\n    mod_python server\n\n     * moin_modpy server files renamed to moinmodpy.\n\n    Wiki Markup\n\n     * '''strong''', ''em'' and __underline__ have now paragraph scope. You can\n       set these attributes on words level. For multiple paragraphs, wrap each \n       with needed markup.\n     * If you leave unclosed ''', '' and __  markup, its is closed when the \n       paragraph ends.\n\n    User interface\n\n     * Due to many changes in CSS files, the wiki may look \"broken\" until\n       your reload once or twice, or empty your browser cache.\n     * The \"Send mail notification\" checkbox is replaced by \"Trivial change\"\n       checkbox. The default behavior did not change - regular edit is not\n       a trivial change, and mail will be sent to subscribes. If you check\n       trivial change, mail will be sent only to users who selected to \n       get trivial changes in their user preferences.\n     * New theme \"modern\" has been added, and used as default theme. \n     * classic and rightsidebar improved.\n     * viewonly theme removed, as any theme can be use now as viewonly\n       by using #acl All:read in the wikiconfig.\n     * All themes use new navibar, displaying both wiki links, user links\n       and the current page.\n     * navibar and pagetrail use now shortened page names, so very long\n       names does not break the interface visually.\n     * All themes have improved search interface at the top of the window.\n     * Only avaiable actions are displayed, so most situations when a user\n       try to do something he can't do are prevented.\n     * When creating a new page, no action is available until the page \n       is created. You can't attach files to non-existing page any more.\n     * Non registered users get a \"login\" link. Registered uses get\n       \"username\" link to their home page, and \"user preferences\" link.\n     * Messages more clear using bold type, designed by css.\n     * Few useless messages removed (but there are many more)\n     * Default wiki logo uses the wiki name instead of the MoinMoin troll \n       logo.\n\n    Other fixes and changes\n    \n     * Most generated html code is valid \"html 4 strict\". There are still\n       some problems that still have to be fixed, mainly macros, table\n       attributes, and inline markup crossing (<a><b></a></b>).\n     * WantedPages can include and exclude system pages, which makes it \n       much more useful.\n     * Fixed a bug in TitleIndex where not all system pages are excluded.    \n     * RenamePage action now renames everything, including backups, page\n       history, attachments. It does not change toplevel editlog, though.\n       After you rename a page, you are redirected to the new page.\n     * Syntax colorization supports more languages (Java, C++, Pascal)\n     * Inline: display of attachments was extended. A Parser now knows which\n       extensions it can handle.\n     * TableOfContents and Include macros now cooperate a bit better. There\n       are still problems with multiple Includes of the same page.\n     * Excluded actions at bottom of page are not displayed any more.   \n     * Editor: removed the columns size setting, just using 100% of browser\n       window width (it didn't work because of that anyway). Also removed that\n       \"reduce editor size\" link at top of editor as you would lose your\n       changes when using it.\n     * Removed the option to choose text smileys instead of images, this made\n       more trouble than it was worth. The text version is still given in ALT\n       attribute.\n     * Moved stuff from contribution/ to MacroMarket page on MoinMoin wiki\n     * Some nasty people try to use a running moin as a proxy (at least they\n       did on moinmaster.wikiwikiweb.de:8000, maybe due to the magic port\n       number). We changed the code to check for that and just return 403\n       in that case. Moin can not be used as a proxy anyway.\n     * moin.cgi?test was removed in favor of a new buildin test\n       action. It works for all deployments, just use ?action=test.\n     * Sending mail does use tls if server supports it.\n\n    3rd party developer notes\n\n     * Themes should be now sub class of MoinMoin.theme.ThemeBase. Sub\n       classes will get automatically all new improved user interface\n       elements for free.\n     * Theme authors should update their theme for 1.3. Some keys removed\n       from them dict. See ThemeBase class in MoinMoin/theme/__init__.py. \n     * Actions writers should call request.setContentLangauge with the \n       correct language used by the action. This enable themes and other\n       code to use correct direction.\n     * The Formatter interface was changed. Formatters and parsers using \n       the formatter interface have to be adjusted.\n     * started deprecation of Processors: they are still recognized, but\n       implementors should start to rewrite their Processors as Parsers.\n       A processor with the same name as a parser in a pre #! section is\n       currently preferred. This will change in the next release.\n\n    Deprecation notes\n\n     * Processors are deprecated, see section above.\n\n     * Using the cookie (or the login url with ID) only and not setting (or\n       setting and not remembering) your email/password in UserPreferences\n       is DEPRECATED. Those quite unsecure methods will likely be dropped\n       in next moin version.\n\n     * Operating with acl_enabled = 0 is also DEPRECATED. Due to some other\n       improvements planned, we will have to operate with ACLs enabled ONLY\n       in a future moin version, so this setting will likely be dropped.\n       So clean up your user accounts (see moin_usercheck.py) and switch ACLs\n       on NOW.\n       There are no drawbacks, so you will like it. Having ACLs enabled\n       doesn't mean you really have to USE them on wiki pages...\n\n     * allow_extended_names = 0 is deprecated (default was/is 1).\n       Future versions will be able to use extended names (aka free links) in\n       any case and the config setting will be removed.\n\n     * allow_subpages = 0 is deprecated (default was/is 1).\n       Future versions will be able to use subpages in any case and the config\n       setting will be removed.\n\n     * attachments = {...} - we would like to remove that setting because of\n       several reasons:\n       * when not being extremely careful, this can easily lead to security\n         problems (like when uploading a .php exploit and then executing it\n         by accessing it directly via web server)\n       * makes code more complicated - code that we want to change completely\n         in next version\n       If you need that feature, speak up now and tell us your reasons WHY you\n       need it.\n\n\nVersion 1.2.4 (2004-10-23, Revision 1.187)\n\nThis will probably be the last 1.2.x release as we are soon doing release\ncandidates for 1.3 release (with big internal changes) and are expecting\nrelease 1.3 in december 2004.\n\nFixes:\n    * fixed \"None\" pagename bug in fullsearch/titlesearch\n    * fixed projection CSS usage\n    * the compiled page is removed when a page is deleted, so no ghost page\n      appears after deletion\n    * fixed AbandonedPages day-break problem\n    * fixed [[GetVal(WikiDict,key)]]\n    * the msg box is now outside content div on PageEditor, too\n    * privacy fix for email notifications: you don't see other email addresses\n      in To: any more. mail_from is now also used for To: header field, but\n      we don't really send email to that address.\n    * privacy fix for /MoinEditorBackup pages that were made on previews of\n      pages that were not saved in the end\n    * fix double content div on PageEditor preview\n\nOther changes:\n    * workaround for broken Microsoft Internet Explorer, the page editor now\n      stops expanding to the right (e.g. with rightsidebar theme).\n      Nevertheless it is a very good idea to use a non-broken and more secure\n      browser like Mozilla, Firefox or Opera!\n\n    * from MoinMoin.security.antispam import SecurityPolicy in your\n      moin_config.py will protect your wiki from at least the known spammers.\n      See MoinMoin:AntiSpamGlobalSolution for details.\n\n    * xmlrpc plugin for usage logging, currently used for antispam accesses\n\n    * (re-)added configurable meta tags:\n        * html_head_queries = '''<meta name=\"robots\" content=\"noindex,nofollow\">\\n'''\n        * html_head_posts   = '''<meta name=\"robots\" content=\"noindex,nofollow\">\\n'''\n        * html_head_index   = '''<meta name=\"robots\" content=\"index,follow\">\\n'''\n        * html_head_normal  = '''<meta name=\"robots\" content=\"index,nofollow\">\\n'''\n\n    * i18n updates/fixes\n\n    * New UserPreferences switch:\n      you may subscribe to trivial changes (when you want to be notified about ALL\n      changes to pages, even if the author deselected to send notifications).\n\n    * New AttachList and AttachInfo macros - thanks to Nigel Metheringham and\n      Jacob Cohen.\n\nVersion 1.2.3 (2004-07-21, Revision 1.186)\n\nFixes:\n    * fixed NameError \"UnpicklingError\" in user.py\n    * fixed version number in moin.spec\n    * reverts done by bots or leechers\n      There was a bad, old bug that triggered if you did not use ACLs. In that\n      case, moin used some simple (but wrong and incomplete) function to\n      determine what a user (or bot) may do or may not do. The function is now\n      fixed to allow only read and write to anon users, and only delete and\n      revert to known users additionally - and disallow everything else.\n    * avoid creation of unneccessary pages/* directories\n    * removed double content divs in general info and history info pages\n    * fixed wiki xmlrpc getPageHTML\n    * fixed rightsidebar logout URL, also fixed top banner to link to FrontPage\n    * use config.page_front_page and .page_title_index for robots meta tag\n      (whether it uses index,follow or index,nofollow), not hardcoded english\n      page names\n    * ACL security fix for PageEditor, thanks to Dr. Pleger for reporting\n    * default options for new users are same as for anon users\n\nVersion 1.2.2 (2004-06-06, Revision 1.185)\n\nFixes:\n    * python related:\n     * own copy of difflib removed\n       Until moin 1.2.1 we had our own copy of python 2.2.3's difflib coming\n       with moin. This was to work around some problems with broken older 2.2\n       python installations. We removed this now because if you have py 2.3,\n       there is even a better difflib coming with python (and that fixes an\n       extremely slow diff calculation happening in some rare cases).\n       So the good news is that when you run python 2.3, you don't need to do\n       anything and it will run great. If you run python 2.2.3, it will mostly\n       work good and you also don't need to do anything. The bad news is that\n       if you run an old and broken 2.2 installation (2.2.1, maybe 2.2.2) you\n       will have to fix it on your own (just copy difflib.py from python 2.2.3\n       over to your python 2.2.x installation).\n       But better upgrade to python 2.3 (for debian woody, there's a backport),\n       as 2.3 generally runs better and faster than 2.2.\n     * scripts changed to use #!/usr/bin/env python (not /usr/bin/python2.2)\n\n    * user accounts and ACLs:\n     * we now require the user to specify a password for a new account (you\n       were not able to login without a password anyway)\n     * it is not allowed any more to create user accounts with user names\n       matching config.page_group_regex - please check manually that you do\n       not already have such users existing (like a user named \"AdminGroup\"):\n       cd data/user ; grep name=.*Group *  # there should be no output!\n     * subscription email sending now honours ACLs correctly\n\n    * markup / rendering / user interface fixes:\n     * fixed merging multiple lines indented by the same amount of blanks\n     * ## comments don't break tables in two parts\n     * added a \"remove bookmark\" link to RecentChanges\n     * fixed action=titleindex (added \\n after each entry)\n\n    * RSS fixes:\n     * non-ASCII characters should work now\n     * RSS feed (Recentchanges?action=rss_rc) gives UTC timestamps now\n     * removed attribute breaking RSS feed on RecentChanges\n\n    * better email generation:\n     * if you use python >=2.2.2, we add a Message-ID header to emails\n     * if you use python 2.2.1, there is no email.Header. Instead of crashing\n       (like previous moin 1.2.x releases), we just use the subject \"as is\" in\n       that case. If it is not ASCII, this is not standards compliant.\n     * If you have >=2.2.2 it will use email.Header to make standards compliant\n       subject lines.\n     * use config.mail_from as sender address when sending \"lost my password\"\n       emails\n\n    * file attachments:\n     * fixed for standalone server\n     * attachment URLs (when handled by moin) don't include server name\n     * fixed some wrong &amp;amp; in html src\n    \n    * better themeability:\n     * some entries in dict \"d\" where only present in header theme calls, some\n       only in footer theme calls. Now almost all is present in both calls.\n     * added some missing \"content\" divs so sidebar themes look better\n\n    * fixed some crashes producing backtraces:\n     * no IOError when diffing against deleted page\n     * no backtrace in xml footnote generation\n     * no SystemInfo crash when no editlog exists in new wikis\n     * xmlrpc.getRecentChanges fixed\n\n    * MoinMoin.util.filesys.rename is now a wrapper around os.rename that\n      fixes os.rename on broken win32 api semantics\n\nOther Changes:\n    * saving traffic and load by improved robot meta tag generation:\n     * \"noindex,nofollow\" on queries and POSTs\n     * \"index,follow\" on FrontPage and TitleIndex (give robots a chance ;))\n     * \"index,nofollow\" on all other pages (hopefully saving lots of senseless\n       requests for page?action=...) \n     * removed config.html_head_queries (was used for same stuff)\n    * added russian i18n (utf-8)\n    * misc. other translation updates / fixes\n    * added rightsidebar theme\n    * TitleIndex now folds case, so \"APage\" and \"anotherPage\" are both under\n      letter \"A\".\n    * added macro/PageHits.py - it calculates the hits each page gets since\n      beginning of logging\n\n\n    * Full text and title search do now support multiple search terms - \n      see HelpOnSearching for details\n \n    * The Formatter interface was changed. Formatter and parser using \n      the formatter interface have to be adjusted.\n\nVersion 1.2.1 (2004-03-08, Revision 1.184)\n\nFixes:\n    * minimum requirement to run moin 1.2/1.2.1 is python 2.2.2\n     * not: 2.2(.0), as this does not have True/False\n     * not: 2.2.1, as this does not have email.Header. You maybe can work\n       around that one by:\n      * getting the python 2.2.x (x>=2) /usr/lib/python2.2/email directory\n      * putting it into directory 'x' (whereever you like)\n      * doing a sys.path[0:0] = ['x'] in moin.cgi [or other appropriate place]\n      No guarantee, this is untested.\n    * Twisted: the http headers missed the charset data, fixed\n    * mod_python: fixes for mod_python 2.7\n    * wiki/data/plugin/__init__.py added - fixes not working plugin modules\n    * plugin processors work now, too\n    * fixed displaying non-existent translations of SiteNavigation in footer\n    * fixed zh-tw iso name (wrong zh_tw -> correct zh-tw)\n    * fixed reversed diffs in RecentChanges RSS\n    * fixed \"last change\" info in footer (wasn't updated)\n    * fixed event.log missing pagename (and other) information\n    * fixed horizontal line thickness >1\n    * fixed setup.py running from CVS workdir\n    * fixed crash when doing action=info on first revision of a page\n    * fixed hostname truncation in footer\n    * minor css fixes\n    * fixed clear msg links (they missed quoting, leading to strange page\n      names when you click on some of them)\n    * fixed python colorizer processor\n    * fixed quoting of stats cache filenames\n    * catched \"bad marshal data\" error when switching python versions\n\nOther changes:\n    * updated danish (da) i18n\n    * updated japanese (ja) i18n\n    * added serbian (sr) i18n\n    * added chinese (zh) i18n\n    * added a simple \"viewonly\" theme based on classic theme - you can use\n      this as default theme, so anonymous users won't get the usual wiki stuff,\n      but a far simpler (and less powerful) user interface.\n      It also displays the navibar at the left side.\n    * added moin.spec for building RPMs\n    * included MoinMoin/i18n/* into distribution archive (nice for translators)\n    * included some stuff under MoinMoin/scripts - xmlrpc-tools and account\n      checking stuff. removed some version control clutter from the dist\n      archive, too.\n\n    * code colorization was refactored and some new languages (Java, C++,\n      Pascal) where added.\n    * inline: display of attachments was extended. A Parser now knows which\n      extensions it can handle.\n\nVersion 1.2 (2004-02-20, Revision 1.183)\n\nNew features:\n    * MoinMoin now requires Python >=2.2.2., we recommend to use Python >=2.3.2\n      (with 2.3.x, MoinMoin runs about 20-30% faster).\n    * by refactoring request processing, we made it possible to run moin under\n      persistent environments:\n        * twisted-web (http://twistedmatrix.com)\n        * httpdmain.py (use moin.py for starting this mini server)\n        * mod_python\n        * FastCGI\n      Of course, CGI is still possible.\n    * wiki pages will be compiled to bytecode now (by default), so no need for\n      slow parsing/formatting on every view (\"WASP\", see caching_formats)\n    * when using a persistent environment (like twisted) and WASP, you get up\n      to 20x speed - compared to CGI and moin 1.1\n    * added support for diffs between arbitrary revisions.\n    * removed requirement of the external diff utility\n    * config.auth_http_enabled (defaults to 0) - use this to enable moin\n      getting your authenticated user name from apache (http basic auth,\n      htpasswd) - if you enable this, your basic auth username has to be the\n      same as your wiki username.\n      Should work with CGI, FCGI and maybe even with mod_python.\n      Does not change behaviour of moin under twisted or standalone server.\n    * config.tz_offset = 0.0 sets a default timezone offset (in hours\n      from UTC)\n    * config.cookie_lifetime (int, in hours, default 12) sets the lifetime of\n      the MOIN_ID cookie:\n        == 0  --> cookie will live forever (no matter what user has configured!)\n        > 0   --> cookie will live for n hours (or forever when \"remember_me\")\n        < 0   --> cookie will live for -n hours (forced, ignore \"remember_me\"!)\n    * added themeing and some themes (if you improve the existing themes or\n      make nice new ones, please contribute your stuff!). The default theme is\n      set by config.theme_default (and defaults to 'classic').\n    * now supporting plugin directory for parsers, processors, themes, xmlrpc.\n    * action=info now defaults to showing page revision history again\n    * all actions accessing the logfile (as RecentChanges or history) are now\n      much faster\n    * #refresh processing instruction, config.refresh\n        * config.refresh = (minimum_delay, target_allowed)\n            * minimum delay is the minimum waiting time (in seconds) allowed\n            * target_allowed is either 'internal' or 'external', depending on\n              whether you want to allow only internal redirects or also\n              external ones. For internal redirects, just use the Wiki pagename,\n              for external, use http://... url.\n        * #refresh 3                    == refresh this page every 3 seconds\n        * #refresh 5 FrontPage          == internal redirect to FrontPage in 5s\n        * #refresh 5 http://google.com/ == redirect to google in 5s\n      Use very carefully! Allowing a low minimum_delay and putting a #refresh\n      on RecentChanges might slow down your wiki significantly, when some\n      people just let their browser refresh and refresh again. Also, it does\n      cause quite some traffic long-term. So better do not use this without\n      good reason! Default is None (switched off).\n    * hide most UserPreferences options before user has logged in, less\n      confusing for new users\n    * \"config.page_dict_regex\" defines what pages are dictionary definitions\n      Currently dictionaries are used for UserHomePage/MyDict where you can\n      define key:: value pairs that get processed like @DATE@ expansion when\n      saving a page. The 2 \"@\" will be added to your keys automatically.\n      Please do not use @xxx@ strings on the right side (value), results may\n      vary if you do.\n      You can also access wiki dictionaries by using the internal macro\n      [[GetVal(page,key)]]\" - that will go to page \"page\" and return the\n      value (right side) corresponding to \"key\".\n      Implementation note: groups are a subset of the dictionary functionality.\n    * standalone server should work now (see server/moin.py), so you don't\n      need to setup apache or twisted for a local personal wiki, you only need\n      python and moin for that now, no additional stuff any more!\n    * if you run your wiki with charset = \"utf-8\" (the default is still\n      iso8859-1), you might want to have a look at contributions/utf8-pages/\n      to see if there are already translated system pages for your language.\n\nFixes:\n    * new importPlugin routine (the old one didn't work correctly)\n    * removed 0xA0 characters breaking utf-8\n    * system page recognition now uses wiki groups (see AllSystemPagesGroup),\n      fixing the long-time broken system page exclusion on TitleIndex.\n    * mostly HTML 4.01 Strict compliant HTML\n    * design is done by CSS now, HTML is semantic markup only \n    * removed target attribute from links, also [^NewWindow] markup - this\n      is a HTML 3.2 feature and not valid in HTML 4.01\n    * updated TWikiDrawPlugin to 20021003 version, with further modifications\n      including source. It can draw imagemaps now and saves PNG. On display a\n      GIF will be searched if no PNG is found. We recommend changing all GIFs\n      to indexed PNGs cause this fallback might disappear in later versions.\n\n      Sample code using bash and ImageMagick (be sure you know what you do):\n      for draw in `find /path/to/wiki/data -name \\*.draw`; do\n        file=`dirname $draw`/`basename $draw .draw`\n        if [ -e \"${file}.gif\" ]; then\n          echo \"Converting ${file}.gif to ${file}.png\"\n          convert \"${file}.gif\" \"${file}.png\"\n        fi\n      done\n\n    * fixed email headers and encoding\n    * Changed moin-usercheck to adhere to scripting standards; no\n      proprietary config changes needed any more (added --config);\n      --wikinames is now part of the usage message.\n    * config.umask now defaults to 0770 - if you give world r/w access, ACLs\n      could be rather pointless...\n\nRemoved config variables:\n    * external_diff (not needed any more, we have internal diff now)\n    * shared_metadb (wasn't implemented for long - we will re-add it, when it is)\n    * title1/2 (please use page_header1/2)\n    * page_icons_up\n\nChanged config variables:\n    * changed_time_fmt (removed some html and brackets around time from default)\n    * html_head (default is empty string now)\n    * page_footer1/2 (default is empty string now)\n    * page_icons (is now a list of icon names, not html any more)\n    * umask (default is 0770 now, not world r/w any more == more secure)\n\nNew config variables (see MoinMaster:HelpOnConfiguration):\n    * cookie_lifetime\n    * mail_login\n    * page_credits\n    * page_dict_regex\n    * page_group_regex\n    * page_header1/2\n    * page_iconbar \n    * page_icons_table\n    * page_license_enabled\n    * page_license_page\n    * theme_default\n    * theme_force\n    * tz_offset \n\nOther:\n    * lots of internal code refactoring and optimization\n    * began moving src code documentation to epydoc, see \"make epydoc\"\n    * the URL for the RecentChanges RSS feed changed. It now only works with\n      ...?action=rss_rc.\n\nKnown problems:\n    * theme support is neither complete (although covering most important\n      stuff) nor perfect - work on that will continue...\n    * we removed some html from system messages (the boxes at top of page you\n      get after some actions), so it currently looks less nice than before.\n    * html is not completely validating and it is not xhtml - this will be\n      fixed as soon as we have the infrastructure for that (other parser, DOM)\n    * problems with rtl (right-to-left) languages, will be fixed in 1.3\n    * if you change moin_config or switch themes, moin will still use already\n      cached page content. For the config this can be fixed by touching\n      MoinMoin/version.py (or simply deleting everything in\n      data/cache/Page.py). If you get more annoyed by this than pleased by\n      caching speedup, you can also switch off caching (see docs on\n      caching_formats).\n\nThemeing and HTML/CSS cleanup:\n    * Browsers with completely broken CSS support (like e.g. Netscape 4.x) are\n      no longer supported. If you still need to support them, do not upgrade to\n      moin 1.2. If you still use these browsers, we recommend that you upgrade\n      your browser first (Mozilla 1.5 has nice and standards compliant HTML and\n      CSS support and is available as Free Software for Windows, Linux and Mac).\n    * If you changed any html in code or by config you will have to check if it\n      still works. For the usual stuff, look into `MoinMoin/theme/classic.py`\n      and `classic/css/screen.css`. For config defaults of the html fragments,\n      read `MoinMoin/config.py`. If you want to modify a theme, don't simply\n      change classic, but copy or subclass it under a new theme name.\n    * because of the new theme support the layout of the `htdocs` directory\n      changed:\n      * Instead of using icons under `img/` and css under `css/`, there will\n        be an additional `themename/` directory in between, e.g. `classic/img/`\n        and `classic/css/`. If you added own icons, you may have to copy them\n        to the themes directory.\n      * The filename of the CSS file has changed to the media type, so the\n        normal one used for screen output has changed name from `moinmoin.css`\n        to `screen.css`. There also were quite some changes and enhancements to\n        the CSS files, so better use the new ones.\n    * config.css_url was removed\n\nPlugins:\n  * we use a new plugin loader that requires a correct `__init__.py` file in\n    the plugin directories. See the directory `wiki/data/plugin/` in the\n    distribution archive and just copy it over to your wiki's plugin directory.\n\n\nVersion 1.1 (2003-11-29, Revision 1.178)\n\nVersion 1.1 requires Python 2.0 or higher, we recommend to use Python 2.2\n(version 2.2.2 if that is available on your host) or even better >= 2.3.2\n(with 2.3.x, MoinMoin runs about 20-30% faster).\n\nNew features:\n  Configuration:\n    * config.default_lang lets you set a default language for users not\n      having specified language in their browser or UserPreferences\n    * \"config.page_category_regex\" defines what pages are categories\n    * replaced `config.page_template_ending` by a more flexible setting\n      named `config.page_template_regex`\n    * the same with config.page_form_regex (was: page_form_ending)\n    * \"config.page_group_regex\" defines what pages are group definitions\n      Currently groups are used for \"user groups\" (see ACLs) and \"page\n      groups\" (see AllSystemPagesGroup).\n    * robot exclusion from all pages except the standard view action,\n      via the config.ua_spiders regex (reduces server load)\n    * \"maxdepth\" argument for the TableOfContents macro\n    * config.title1, config.title2, config.page_footer1,\n      config.page_footer2 can now be callables and will be called with\n      the \"request\" object as a single argument (note that you should\n      accept any keyword arguments in order to be compatible to future\n      changes)\n    * \"config.html_pagetitle\" allows you to set a specific HTML page\n      title (if not set, it defaults to \"config.sitename\")\n    * navi_bar / quicklinks can now contain free-form links, i.e.\n      entries of the form \"[url linktext]\" just like in wiki pages\n    * if a quick link starts with '^', it opens in a new window; help\n      now opens in a new window also\n    * `config.smileys` for user-defined smileys (default: `{}`) - a dict\n      with the markup as the key and a tuple of width, height, border, image\n      name as the value).\n    * `config.hosts_deny` to forbid access based on IP address\n    * `config.mail_login` can be set to username and password separated by\n      a space, e.g. \"username userpass\", if you need to use SMTP AUTH\n    * `config.edit_locking` can be set to None (old behaviour, no\n      locking), 'warn <timeout mins>' (warn about concurrent edits, but\n      do not enforce anything), or 'lock <timeout mins>' (strict locking)\n    * optionally showing a license text on editor page, use:\n      config.page_license_enabled = 1\n      Optionally use these to customize what is shown there:\n      config.page_license_text = \"... your text ...\"\n      config.page_license_page = \"MyLicensePage\"\n      See the default values in MoinMoin/config.py for details and\n      override them in moin_config.py, if needed.\n    * `config.shared_intermap` can be a list of filenames (instead of a\n      single string)\n    * If you have added your own `SecurityPolicy`, the class interface for\n      that has changed (see `security.py`).\n\n  Authenticaton / Authorization:\n    * added ACL support, written by Gustavo Niemeyer of Conectiva and\n      Thomas Waldmann. See HelpOnAccessControlLists for more infos.\n      You should use MoinMoin/scripts/moin_usercheck.py before activating\n      ACLs or some users with bad or duplicate accounts might get into\n      trouble.\n    * A user account can be disabled using moin_usercheck.py or\n      UserPreferences page. Disabling, but keeping it is good for edit\n      history.\n    * changed security default: deletion only available to known users\n    * support for Basic authentication (Apache style: AUTH_TYPE=\"Basic\",\n      REMOTE_USER=\"WikiUserName\"). If authentication is there, user\n      will be in ACL class \"Trusted\".\n    * support for username / password login\n      The username / password login will ONLY work, if you define a\n      password. With an empty password, username / password login is not\n      allowed due to security reasons. Passwords are stored encrypted\n      (format similar to Apache SHA) and can also be entered in the\n      UserPreferences form in this format. When requesting login\n      information by email, the password is also sent in this encrypted\n      format (use copy&paste to fill it in the form).\n      ...?action=userform?uid=<userid> is still possible, so if you have\n      bookmarks, they will still work). The input field for the ID was\n      dropped.\n      NOTE: using the userid for login purposes is DEPRECATED and might\n            be removed for better security soon.\n    * after logging in, you will get a cookie valid until midnight.\n      The next day, the cookie will expire and you will have to login\n      again. If you don't want this, you can check the \"remember me\n      forever\" option in UserPreferences.\n    * if the page file is read-only, you get a message (i.e. you can now\n      protect pages against changes if you're the wiki admin).\n      Note: you can do that easier using ACLs.\n\n  Markup / Macros / Actions:\n    * RandomQuote macro (and even parses Wiki markup now)\n    * `[[Navigation]]` macro for slides and subpage navigation\n    * [[ShowSmileys]] displays ALL smileys, including user-defined ones\n    * the Include macro has new parameters (from, to, sort, items) and\n      is able to include more than one page (via a regex pattern)\n    * `MailTo` macro for adding spam-safe email links to a page\n    * if a fancy link starts with '^' (i.e. if it has the form\n      \"[^http:... ...]\"), it's opened in a new window\n     * because of that, the NewWindow macro was removed from contrib\n    * \"#pragma section-numbers 2\" only displays section numbers for\n      headings of level 2 and up (similarly for 3 to 6)\n    * ../SubPageOfParent links\n\n  User interface:\n    * new fancy diffs\n    * Page creation shows LikePages that already exist\n    * editor shows the current size of the page\n    * editor returns to including page when editing an included page\n    * Visual indication we're on the editor page (new CSS style)\n    * selection to add categories to a page in the editor (use preview\n      button to add more than one category)\n    * if user has a homepage, a backup of save/preview text is saved as\n      a subpage UsersHomePage/MoinEditorBackup\n    * added \"revert\" link to PageInfo view (which makes DeletePage more\n      safe in public wikis, since you can easily revive deleted pages\n      via revert)\n    * Selection for logged in users (i.e. no bots) to extend the listing\n      of recent changes beyond the default limits\n    * Activated display of context for backlinks search\n    * Subscriber list shown on page info\n    * LikePages shows similar pages (using difflib.get_close_matches)\n    * last edit action is stored into \"last-edited\" file, and\n      displayed in the page footer\n    * reciprocal footnote linking (definition refers back to reference)\n    * \"Ex-/Include system pages\" link for title index\n      Note: system/help pages algorithm is still mostly broken.\n    * list items set apart by empty lines are now also set apart\n      visually (by adding the CSS class \"gap\" to <li>)\n    * \"save\" check for security.Permissions\n    * Added Spanish, Croatian and Danish system texts\n    * Added flag icons for the languages supported in \"i18n\"\n    * updated help and system pages, more translations, see also\n      AllSystemPagesGroup\n    * there was quite some work done on wiki xmlrpc v1 and v2 - it\n      basically works now.\n\n  Tools and other changes:\n    * moin-dump: New option \"--page\"\n    * there are some scripts MoinMoin/scripts/* using wiki xmlrpc for\n      backup and wiki page copying applications\n    * Updated the XSLT parser to work with 4Suite 1.0a1\n    * more infos in cgi tracebacks\n    * UPDATE.html is a HTML version of MoinMaster:HelpOnUpdating\n\nUnfinished or experimental features:\n    * user defined forms\n    * XML export of all data in the wiki\n    * RST parser (you need to install docutils to use this)\n    * SystemAdmin macro\n\nPrivacy fixes:\n    * do not use / display user's email address in public places\n\nSECURITY FIXES:\n    * Removed two cross-site scripting vulnerabilities reported by \"office\"\n\nBugfixes:\n    * Bugfix for PageList when no arguments are given\n    * Disallow full-text searches with too short search terms\n    * [ 566094 ] TitleIndex now supports grouping by Hangul Syllables\n     * fix for multibyte first char in TitleIndex\n    * Footnotes were not HTML escaped\n    * Numbered code displays are now in a table so that you can cut the\n      code w/o the numbers\n    * Bugfix for wrong mail notifications\n    * Create unique anchors for repeated titles\n    * [ 522246 ] Transparently recode localized messages\n    * [ 685003 ] Using \"preview\" button when editing can lose data\n    * use gmtime() for time handling\n    * fixed negative gmtime() arguments\n    * [[Include]] accepts relative page names\n    * fixed ||NotInterWiki:||...||\n\n-----------------------------------------------------------------------------\nVersion 1.0 (2002-05-10, Revision 1.159)\n\nTHIS IS THE LAST RELEASE WITH PYTHON 1.5.2 SUPPORT! If severe bugs\nshould occur, a maintenance release will fix them.\n\nSome optional features (like statistics) already require Python 2.0.\n\nNew features:\n    * security fix: \"allow_xslt\" has to be set to 1 in order to enable\n      XSLT processing; note that this defaults to 0 because XSLT is able\n      to insert arbitrary HTML into a wiki\n    * \"action=content\" for transclusion into static web pages; emits the\n      pure page content, without any <html>, <head>, or <body> tags\n    * \"?action=links&mimetype=text/plain\" works like MeatBall:LinkDatabase\n    * \"Preferred language\" and \"Quick links\" user settings\n    * Added \"processor\" concept, processors work on the data in \"code\n      displays\" and are called by a bangpath in the first line of data\n    * Processors: Colorize, CSV (see HelpOnProcessors)\n    * New icons: \"{OK}\", \"(./)\", \"{X}\", \"{i}\", \"{1}\", \"{2}\" and \"{}\"\n      (see HelpOnSmileys)\n    * FullSearch now displays context information for search hits\n    * DeletePage offers a textentry field for an optional comment\n    * Email notifications are sent in the user's language, if known from\n      the preferences\n    * @PAGE@ is substituted by the name of the current page (useful\n      for template pages)\n\nUnfinished features:\n    * user defined forms\n    * XML export of all data in the wiki\n    * RST parser (you need to install docutils to use this)\n    * XMLRPC interface\n\nBugfixes:\n    * Syntax warning with Python 2.2 fixed\n    * Macro-generated pagelinks are no longer added to the list of links\n    * error codes returned by \"diff\" are reported\n    * fix for attachments on pages with non-USASCII names\n    * correct handling of spaces in attachment filenames and URLs\n\n-----------------------------------------------------------------------------\nVersion 0.11 (2002-03-11, Revision 1.151)\n\nMost important new features: file attachments, definition list markup\n(glossaries), change notification via email, variable substitution when\nsaving pages, edit preview, and improved documentation.\n\nNote that the RSS features require a recent PyXML (CVS or 0.7) due to\nbugs in the namespace handling of xml.sax.saxutils in earlier versions.\nThis is (hopefully) automatically detected on every installation.\n\nStatistical features are NOT designed to work with Python 1.5.2 and\nrequire Python 2.0 or higher. Overall, MoinMoin 0.11 is not explicitely\ntested for 1.5.2 compatibility.\n\nNew features:\n    * XML formatting now (most often) produces well-formed, and, depending\n      on proper layout of the wiki page, valid StyleBook XML\n    * Headers are now automatically numbered, unless you set the config\n      item 'show_section_numbers' to 0\n    * \"#pragma section-numbers off\" (or \"0\") switches that off explicitely,\n      and \"on\" or \"1\" enables numbering \n    * Added a \"contributions\" directory for 3rd party extensions\n    * AttachFile action, contributed by Ken Sugino; note that you have\n      to enable this action because of the possibility of DoS attacks\n      (malicious uploads), by adding this to your moin_config:\n            allowed_actions = ['AttachFile']\n    * \"attachment:\" URL scheme allows access to attachments, to get files\n       from other pages use \"attachment:WikiName/filename.ext\".\n    * New macros: Date(unixtimestamp) and DateTime(unixtimestamp) to\n      display a timestamp according to system/user settings\n    * Variable substitution when a page is saved, note that saving\n      template pages does NOT expand variables. Supported are:\n        @DATE@      Current date in the system's format\n        @TIME@      Current date and time in the user's format\n        @USERNAME@  Just the user's name (or his domain/IP)\n        @USER@      Signature \"-- loginname\"\n        @SIG@       Dated Signature \"-- loginname date time\"\n        @MAILTO@    A fancy mailto: link with the user's data  \n    * Copied some new emoticons from PikiePikie\n        || {{{ :-? }}} || :-? || tongue.gif ||\n        || {{{ :\\  }}} || :\\  || ohwell.gif ||\n        || {{{ >:> }}} || >:> || devil.gif  ||\n        || {{{ %)  }}} || %)  || eyes.gif   ||\n        || {{{ @)  }}} || @)  || eek.gif    ||\n        || {{{ |)  }}} || |)  || tired.gif  ||\n        || {{{ ;)) }}} || ;)) || lol.gif    ||\n    * AbandonedPages macro\n    * Added definition list markup: {{{<whitespace>term:: definition}}}\n    * Added email notification features contributed by Daniel Sa\ufffd    * SystemInfo: show \"Entries in edit log\"\n    * Added \"RSS\" icon to RecentChanges macro and code to generate a\n      RecentChanges RSS channel, see\n          http://www.usemod.com/cgi-bin/mb.pl?UnifiedRecentChanges\n      for details\n    * Added config.sitename and config.interwikiname parameter\n    * Better WikiFarm support:\n      * <datadir>/plugin/macro and <datadir>/plugin/action can be used\n        to store macros and actions local to a specific wiki instance\n      * config.shared_intermap can contain a pathname to a shared\n        \"intermap.txt\" file (i.e. one stored outside the datadir)\n    * added `backtick` shortcut for {{{inline literal}}} (has to be\n      enabled by \"backtick_meta=1\" in the config file); note that ``\n      is then a shorter replacement for '''''' escaping\n    * added inline search fields (at the bottom of each page)\n    * Added preview to the editor, including spell checking\n    * New languages: Chinese (Changzhe Han) and Portuguese (Jorge\n      Godoy), updated French (Lucas Bruand), added Korean (Hye-Shik\n      Chang) and Italian (Lele Gaifax)\n    * New SystemAdmin macro\n    * `[[Anchor(anchorname)]]` macro to insert anchors into a page,\n      and [#anchorname Anchor Links].\n    * User option to open editor view via a double-click\n    * Added commentary field to editor, recent changes and page info\n    * Page trails (user option)\n    * UserPreferences: checkboxes for double-click edit, page trail,\n      fancy links, emoticons, jump to last page visited, and some\n      other yes/no options\n    * \"config.nonexist_qm\" is now the default for a user setting\n    * `[[GetText(text)]]` macro loads I18N texts (mainly intended\n      for use on Help pages)\n    * table attributes via \"||<attrlist> ... ||\", more details on\n      http://purl.net/wiki/moin/HelpOnTables\n    * PythonFaq interwiki tag and support for $PAGE placeholder\n    * event logging, as the basis for future statistics\n    * \"moin-dump\" command line tool to create a static copy of\n      the wiki content\n    * \"config.external_diff\" allows to set an exact path to the\n      command, or change the name to for example \"gdiff\" if GNU\n      diff is not a native command in your UNIX flavour\n    * `[[PageSize]]` macro\n    * the interwiki name \"Self\" now always points to the own wiki\n    * config.title1 and config.title2 are inserted into the output\n      right before and after the system title html code (title1\n      is right after the <body> tag and normally undefined, title2\n      defaults to the \"<hr>\" above the page contents)\n    * Additional link on diff pages to ignore whitespace changes\n    * Subpages (config.allow_subpages, config.page_icons_up)\n    * super^script^, sub,,script,, and __underline__ markup\n    * `[[FootNote]]` macro\n    * many other new config options, see HelpOnConfiguration for\n      a complete list\n    * [[StatsChart(type)]] shows statistical charts (currently\n      defined types: hitcounts, pagesize, useragents)\n    * 'inline:' scheme works like 'attachment:', but tries to\n      inline the content of the attachment into the page;\n      currently knows about \"*.py\" sources and colorizes them\n    * support for Java applet \"TWikiDrawPlugin\" via\n      drawing:<drawingname> URL scheme (you need to activate\n      the AttachFile action if you want drawings)\n    * numeric entities (&#nnnnn;) are now optionally NOT escaped,\n      which allows you to insert more characters into a Latin-1\n      page, especially the Euro symbol\n    * navi_bar is now a list of page names which should be linked\n      on every page\n    * test.cgi is now rolled into moin.cgi, and can be called\n      by adding \"?test\" to the wiki base URL. Also, as a security\n      feature, the server's environment is only shown for requests\n      local to the web server.\n\nUnfinished features:\n    * user defined forms\n    * XML export of all data in the wiki\n\nDocumentation:\n    * extended the online help (\"Help*\" pages)\n    * German help pages (thanks to Thomas Waldmann)\n\nBugfixes:\n    * #425857: python Parser bug on the second call\n    * #424917: Caching control\n    * #465499: Two HTTPS problems\n    * #491155: FrontPage hardcoded\n    * Handling of inbound UTF-8 encoded URIs (only with Python >= 2.0)\n    * Fix for subtle changes in \"re\" of Python 2.2\n    * User-provided URLs are now never URL-escaped, which allows appending\n      #anchors and using %20 for spaces in InterWiki links\n\n-----------------------------------------------------------------------------\nVersion 0.10 (2001-10-28, Revision 1.134)\n\nThis version is still Python 1.5.2 compatible, but it's not extensively\ntested for that version and some parts of the system might not work\nthere, especially seldom used macros and actions. Bug reports welcome!\n\nNew features:\n    * \"#deprecated\" processing instruction\n    * config entry \"SecurityPolicy\" to allow for customized permissions\n      (see \"security.py\" for more)\n    * added distutils support\n    * though not extensively tested, the standalone server now does POST\n      requests, i.e. you can save pages; there are still problems with\n      persistent global variables! It only works for Python >= 2.0.\n    * \"bang_meta\" config variable and \"!NotWikiWord\" markup\n    * \"url_mappings\" config variable to dynamically change URL prefixes\n      (especially useful in intranets, when whole trees of externally\n      hosted documents move around)\n    * setting \"mail_smarthost\" and \"mail_from\" activates mailing\n      features (sending login data on the UserPreferences page)\n    * very useful for intranet developer wikis, a means to view pydoc\n      documentation, formatted via a XSLT stylesheet, for details see\n      http://purl.net/wiki/python/TeudViewer?module=MoinMoin.macro.TeudView\n      or MoinMoin/macro/TeudView.py\n    * \"LocalSiteMap\" action by Steve Howell <showell@zipcon.com>\n    * Added FOLDOC to intermap.txt\n\nBugfixes:\n    * Full config defaults, import MoinMoin now works w/o moin_config.py\n    * Better control over permissions with config.umask\n    * Bugfix for a UNIX time billenium bug (affecting RecentChanges\n      sorting and page diffs)\n    * data paths with directory names containing dots caused problems\n\n-----------------------------------------------------------------------------\nVersion 0.9 (2001-05-07)\n\nNew features:\n    * XML page input (pages that start with \"<?xml\") and XSLT formatting\n    * Page caching, for now limited to XSLT processing (where it's\n      absolutely needed); new code & API to add the \"RefreshCache\" link\n    * Selection of common date/time formats in UserPreferences\n    * New action \"titleindex\" to support wiki introspection (MetaWiki);\n      see the new links below the index bar in \"TitleIndex\"\n    * UserPreferences: editable CSS URL for personal styles\n    * PageInfo: the editor's name or IP is shown for each change\n    * WantedPages: a new macro that lists links to non-existent pages\n    * OrphanedPages: a new macro that lists pages no other page links to\n    * Extensions to the FullSearch macro (see HelpOnMacros)\n    * Python syntax highlighting\n    * \"DeletePage\" action (has to be activated, see MoinMoinFaq)\n    * \"Remove trailing whitespace from each line\" option in the editor\n    * I18N (currently German and Swedish)\n    * Config option \"url_schemas\" to extend the supported URL types\n    * Improved tracebacks by using Ka-Ping's \"cgitb\"\n\nBugfixes:\n    * The editor now sends a \"no-cache\" HTTP header\n    * \"PageList\" results are now sorted\n    * New config parameter \"html_head_queries\": send additional header\n      for all pages EXCEPT the \"normal\" view; main usage is to have\n      only the normal pages indexed by a spider, not the edit, print,\n      etc. views (which cause multiple hits on the same information)\n    * Store the modification time of the page file in the editlog, not\n      the current time when the log entry is created\n\n-----------------------------------------------------------------------------\nVersion 0.8 (2001-01-23)\n\nNew features:\n    * Page templates (create a new page using a template page, by Richard)\n    * Pluggable actions (by Richard)\n    * Added \"diff since bookmark\"\n    * Only \"normal\" URLs (outside of brackets) are converted to inline images\n    * Show number of backups in SystemInfo macro\n    * Show info on installed extension macros and actions\n    * New macro: [[BR]] for line breaks\n    * New action \"LikePages\" (again, Richard)\n    * Highlighting of search results, and of bad words when spellchecking\n    * Support for \"file:\" URLS\n    * \"SpellCheck\" action (Richard, me, and Christian)\n    * [[Include]] macro (you guessed it, Richard)\n\nBugfixes:\n    * Update bookmark with load time, not click time\n    * Changed CSS styles to better suit Netscape's broken handling of CSS\n\n-----------------------------------------------------------------------------\nVersion 0.7 (2000-12-06)\n\nNew features:\n    * RecentChanges bookmarking\n\nBugfixes:\n    * SECURITY FIX\n    * Non-greedy extended WikiNames\n\n-----------------------------------------------------------------------------\nVersion 0.6 (2000-12-04)\n\nNew features:\n    * [[UserPreferences]] macro and associated functions\n    * [[TableOfContents]] macro\n    * Mechanism for external macros (user extensions)\n    * Numbered list types and start offsets\n\nBugfixes:\n    * Search dialogs did not work on the FrontPage\n    * Add newline to text if last line has none (better diffs)\n\n-----------------------------------------------------------------------------\nVersion 0.5 (2000-11-17)\n\nNew features:\n    * Major refactoring: code is now broken up into modules within the\n      \"MoinMoin\" package\n    * Diagnosis of installation via a \"test.cgi\" script\n    * Smileys\n    * \"#format\" processing instruction\n    * \"##comment\"\n    * [[RandomPage]] and [[RandomPage(number)]] macro\n    * configurable footer (\"page_footer1\" and \"page_footer2\")\n    * \"#redirect\" processing instruction\n\nBugfixes:\n    * Bugfix for broken CGI environment of IIS/4.0\n    * URLs and InterWiki links are now less greedy (punctuation at the end\n      is excluded, and \"<\" ends them, too)\n\n-----------------------------------------------------------------------------\nVersion 0.4 (2000-11-01)\n\nNew features:\n    * Table markup \"||a||b||c||\"\n    * Headlines \"= H1 =\", \"== H2 ==\", and so on up to H5\n    * [[PageCount]] macro\n    * Added [[Icon(image)]] macro and macro arguments\n    * [[PageList(title-regex)]] macro\n    * New help system (set of help pages describing all features)\n\nBugfixes:\n    * Create complete URL for \"Clear message\" link\n    * Inline code spans needed cgi.escape\n    * Better fix for Python 1.6 \"re\" problems\n    * Fix for uppercase extensions in inline images (\"foo.JPG\")\n    * Fixed colspan in RecentChanges\n    * HR size is now limited to 8\n    * \"}\" ends an URL pattern (fixes URLs right at the end of code displays)\n\n-----------------------------------------------------------------------------\nVersion 0.3 (2000-10-25)\n\nNew features:\n    * Check for inline images with InterWiki links (Spam:eggs.gif)\n    * New config variable \"allow_extended_names\", which enables markup for\n      wiki names containing ANY character like this: [\"any chars\"] \n    * New config variable \"html_head\"\n    * New macro [[SystemInfo]]\n    * Added inline code (\"{{{\" and \"}}}\" on the same line)\n    * Support for new config variable \"max_macro_size\"\n\nBugfixes:\n    * Don't treat sequences with a double colon (CPP::Namespace) as an\n      InterWiki link\n    * The local part of InterWiki links is now correctly URL-escaped\n    * Quickfix for a bug in 1.6's regular expressions\n    * Fixed \"SpamSpamSpam\" bug (multiple entries in word list)\n    * Anchor names get quoted in WordIndex and TitleIndex\n    * Filtering of filenames in page_list() corrected\n    * Escape &, <, > when sending the editor\n    * Final(?) fix for japanese wiki names\n\n-----------------------------------------------------------------------------\nVersion 0.2 (2000-08-26)\n\nNew features:\n    * When saving, a datestamp saved in the form and that of the file are\n      compared now; so, accidently saving over changes of other people is\n      not possible anymore (saving still needs file locking though, for\n      race conditions)\n    * if the directory \"backup\" exists in the data dir, pages are saved\n      there before a new version is written to disk\n    * Removed the \"Reset\" button from EditPage\n    * Added \"Reduce editor size\" link\n    * Added Latin-1 WikiNames (J\u00fcrgenHermann ;)\n    * Speeded up RecentChanges by looking up hostnames ONCE while saving\n    * Show at most 14 (distinct) days in RecentChanges\n    * Added icons for common functions, at the top of the page\n    * Added a printing preview (no icons, etc.)\n    * Added bracketed (external) URLs\n    * Added support for quoted URLs (\"http://...\")\n    * Added styles for :visited links to CSS\n    * Embed image if an URL ends in .gif/.jpg/.png\n    * No markup detection in code sections\n    * Grey background for code sections\n    * Added handling for numbered lists\n    * the edit textarea now grows in width with the browser window\n      (thanks to Sebastian Dau\ufffdfor that idea)\n    * Added page info (revision history) and viewing of old revisions\n    * Added page diff, and diff links on page info\n    * Added InterWiki support (use \"wiki:WikiServer/theirlocalname\"; the list\n      of WikiServers is read from \"data/intermap.txt\")\n    * Added \"normal\" InterWiki links\n    * Added \"action=raw\" to send the raw wiki markup as text/plain (e.g. for\n      backup purposes via wget) \n\nBugfixes:\n    * Removed an exception when saving empty pages\n    * Fixed bold nested into emphasis ('''''Bold''' Italic'')\n\n-----------------------------------------------------------------------------\nVersion 0.1 (2000-07-29)\n\nImprovements over PikiPiki 1.62:\n    * Moved configuration to \"moin_config.py\"\n    * Added \"edit_rows\" setting\n    * Added navigation bar\n    * Improved HTML formatting\n    * Added timing comment (page created in xx secs)\n    * ISO date and time formats by default\n    * Formatted RecentChanges with HTML tables\n    * Uppercase letters for the index pages\n    * Added PythonPowered logo\n\nBugfixes:\n    * Javadoc comments now get formatted properly in {{{ }}} sections\n    * Remove \\r from submitted pages (so we get PORTABLE wiki files)\n    * chmod(0666) eases manual changes to the data dir\n\n-----------------------------------------------------------------------------\n"], "fixing_code": ["# -*- coding: iso-8859-1 -*-\n\"\"\"\n    MoinMoin - feed some FCKeditor dialogues\n\n    @copyright: 2005-2006 Bastian Blank, Florian Festi, Thomas Waldmann\n    @license: GNU GPL, see COPYING for details.\n\"\"\"\n\nfrom MoinMoin import config, wikiutil\nfrom MoinMoin.action.AttachFile import _get_files\nfrom MoinMoin.Page import Page\nimport re\n\n##############################################################################\n### Macro dialog\n##############################################################################\n\ndef macro_dialog(request):\n    help = get_macro_help(request)\n    request.write(\n        '''<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n <head>\n  <title>Insert Macro</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"noindex,nofollow\" name=\"robots\">\n  <script src=\"%s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script language=\"javascript\">\n\nvar oEditor = window.parent.InnerDialogLoaded() ;\nvar FCKLang = oEditor.FCKLang ;\nvar FCKMacros = oEditor.FCKMacros ;\n\nwindow.onload = function ()\n{\n // First of all, translate the dialog box texts\n oEditor.FCKLanguageManager.TranslatePage( document ) ;\n\n OnChange( \"BR\" );\n\n // Show the \"Ok\" button.\n window.parent.SetOkButton( true ) ;\n}\n\nfunction Ok()\n{\n if ( document.getElementById('txtName').value.length == 0 )\n {\n  alert( FCKLang.MacroErrNoName ) ;\n  return false ;\n }\n\n FCKMacros.Add( txtName.value ) ;\n return true ;\n}\n\nfunction OnChange( sMacro )\n{\n  // sMacro = GetE(\"txtName\").value;\n  oHelp = GetE(\"help\");\n  for (var i=0; i<oHelp.childNodes.length; i++)\n  {\n    var oDiv = oHelp.childNodes[i];\n    if (oDiv.nodeType==1)\n    {\n      // oDiv.style.display = (GetAttribute(oDiv, \"id\", \"\")==sMacro) ? '' : 'none';\n      if (GetAttribute(oDiv, \"id\", \"\") == sMacro)\n      {\n          oDiv.style.display = '' ;\n          // alert(\"enabled div id \" + sMacro) ;\n      }\n      else\n      {\n          oDiv.style.display = 'none' ;\n      }\n    }\n  }\n}\n\n  </script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n  <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n   <tr>\n    <td>\n     <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n      <tr>\n       <td valign=\"top\">\n       <span fckLang=\"MacroDlgName\">Macro Name</span><br>\n       <select id=\"txtName\" size=\"10\" onchange=\"OnChange(this.value);\">\n''' % request.cfg.url_prefix_static)\n\n    macros = []\n    for macro in macro_list(request):\n        if macro == \"BR\":\n            selected = ' selected=\"selected\"'\n        else:\n            selected = ''\n        if macro in help:\n            macros.append('<option value=\"%s\"%s>%s</option>' %\n                          (help[macro].group('prototype'), selected, macro))\n        else:\n            macros.append('<option value=\"%s\"%s>%s</option>' %\n                          (macro, selected, macro))\n\n    request.write('\\n'.join(macros))\n    request.write('''\n       </select>\n     </td>\n     <td id=\"help\">''')\n\n    helptexts = []\n    for macro in macro_list(request):\n        if macro in help:\n            match = help[macro]\n            prototype = match.group('prototype')\n            helptext = match.group('help')\n        else:\n            prototype = macro\n            helptext = \"\"\n        helptexts.append(\n            '''<div id=\"%s\" style=\"DISPLAY: none\">\n               <b>&lt;&lt;%s&gt;&gt;</b>\n               <br/>\n               <textarea style=\"color:#000000\" cols=\"37\" rows=\"10\" disabled=\"disabled\">%s</textarea>\n               </div>'''\n            % (prototype, prototype, helptext))\n\n    request.write(''.join(helptexts))\n    request.write('''\n     </td>\n    </tr>\n   </table>\n  </td>\n </tr>\n</table>\n</body>\n</html>\n''')\n\ndef macro_list(request):\n    from MoinMoin import macro\n    macros = macro.getNames(request.cfg)\n    macros.sort()\n    return macros\n\ndef get_macro_help(request):\n    \"\"\" Read help texts from SystemPage('HelpOnMacros')\"\"\"\n    helppage = wikiutil.getLocalizedPage(request, \"HelpOnMacros\")\n    content = helppage.get_raw_body()\n    macro_re = re.compile(\n        r\"\\|\\|(<.*?>)?\\{\\{\\{\" +\n        r\"<<(?P<prototype>(?P<macro>\\w*).*)>>\" +\n        r\"\\}\\}\\}\\s*\\|\\|\" +\n        r\"[^|]*\\|\\|[^|]*\\|\\|<[^>]*>\" +\n        r\"\\s*(?P<help>.*?)\\s*\\|\\|\\s*(?P<example>.*?)\\s*(<<[^>]*>>)*\\s*\\|\\|$\", re.U|re.M)\n    help = {}\n    for match in macro_re.finditer(content):\n        help[match.group('macro')] = match\n    return help\n\n##############################################################################\n### Link dialog\n##############################################################################\n\ndef page_list(request):\n    from MoinMoin import search\n    name = request.values.get(\"pagename\", \"\")\n    if name:\n        searchresult = search.searchPages(request, 't:\"%s\"' % name)\n        pages = [p.page_name for p in searchresult.hits]\n    else:\n        pages = [name]\n    request.write(\n        '''<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n <head>\n  <title>Insert Page Link</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <meta content=\"noindex,nofollow\" name=\"robots\">\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n  <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n   <tr>\n    <td>\n     <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n      <tr>\n       <td>\n       <span fckLang=\"PageDlgName\">Page name</span><br>\n       <select id=\"txtName\" size=\"1\">\n       %s\n       </select>\n     </td>\n    </tr>\n   </table>\n  </td>\n </tr>\n</table>\n</body>\n</html>\n''' % \"\".join([\"<option>%s</option>\\n\" % wikiutil.escape(p) for p in pages]))\n\ndef link_dialog(request):\n    # list of wiki pages\n    name = request.values.get(\"pagename\", \"\")\n    name_escaped = wikiutil.escape(name)\n    if name:\n        from MoinMoin import search\n        # XXX error handling!\n        searchresult = search.searchPages(request, 't:\"%s\"' % name)\n\n        pages = [p.page_name for p in searchresult.hits]\n        pages.sort()\n        pages[0:0] = [name]\n        page_list = '''\n         <tr>\n          <td colspan=2>\n           <select id=\"sctPagename\" size=\"1\" onchange=\"OnChangePagename(this.value);\">\n           %s\n           </select>\n          <td>\n         </tr>\n''' % \"\\n\".join(['<option value=\"%s\">%s</option>' % (wikiutil.escape(page), wikiutil.escape(page))\n                 for page in pages])\n    else:\n        page_list = \"\"\n\n    # list of interwiki names\n    interwiki_list = wikiutil.load_wikimap(request)\n    interwiki = interwiki_list.keys()\n    interwiki.sort()\n    iwpreferred = request.cfg.interwiki_preferred[:]\n    if not iwpreferred or iwpreferred and iwpreferred[-1] is not None:\n        resultlist = iwpreferred\n        for iw in interwiki:\n            if not iw in iwpreferred:\n                resultlist.append(iw)\n    else:\n        resultlist = iwpreferred[:-1]\n    interwiki = \"\\n\".join(\n        ['<option value=\"%s\">%s</option>' % (wikiutil.escape(key), wikiutil.escape(key))\n         for key in resultlist])\n\n    # wiki url\n    url_prefix_static = request.cfg.url_prefix_static\n    scriptname = request.script_root + '/'\n    action = scriptname\n    basepage = wikiutil.escape(request.page.page_name)\n    request.write(u'''\n<!--\n * FCKeditor - The text editor for internet\n * Copyright (C) 2003-2004 Frederico Caldeira Knabben\n *\n * Licensed under the terms of the GNU Lesser General Public License:\n *   http://www.opensource.org/licenses/lgpl-license.php\n *\n * For further information visit:\n *   http://www.fckeditor.net/\n *\n * File Name: fck_link.html\n *  Link dialog window.\n *\n * Version:  2.0 FC (Preview)\n * Modified: 2005-02-18 23:55:22\n *\n * File Authors:\n *   Frederico Caldeira Knabben (fredck@fckeditor.net)\n-->\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n<meta name=\"robots\" content=\"index,nofollow\">\n<html>\n <head>\n  <title>Link Properties</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"robots\" content=\"noindex,nofollow\" />\n  <script src=\"%(url_prefix_static)s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinlink/fck_link.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinurllib.js\" type=\"text/javascript\"></script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n  <div id=\"divInfo\" style=\"DISPLAY: none\">\n   <span fckLang=\"DlgLnkType\">Link Type</span><br />\n   <select id=\"cmbLinkType\" onchange=\"SetLinkType(this.value);\">\n    <option value=\"wiki\" selected=\"selected\">WikiPage</option>\n    <option value=\"interwiki\">Interwiki</option>\n    <option value=\"url\" fckLang=\"DlgLnkTypeURL\">URL</option>\n   </select>\n   <br />\n   <br />\n   <div id=\"divLinkTypeWiki\">\n    <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td>\n       <form action=%(action)s method=\"GET\">\n       <input type=\"hidden\" name=\"action\" value=\"fckdialog\">\n       <input type=\"hidden\" name=\"dialog\" value=\"link\">\n       <input type=\"hidden\" id=\"basepage\" name=\"basepage\" value=\"%(basepage)s\">\n       <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n        <tr>\n         <td>\n          <span fckLang=\"PageDlgName\">Page Name</span><br>\n          <input id=\"txtPagename\" name=\"pagename\" size=\"30\" value=\"%(name_escaped)s\">\n         </td>\n         <td valign=\"bottom\">\n           <input id=btnSearchpage type=\"submit\" value=\"Search\">\n         </td>\n        </tr>\n        %(page_list)s\n       </table>\n       </form>\n      </td>\n     </tr>\n    </table>\n   </div>\n   <div id=\"divLinkTypeInterwiki\">\n    <table height=\"100%%\" cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td>\n       <table cellSpacing=\"0\" cellPadding=\"0\" align=\"center\" border=\"0\">\n        <tr>\n         <td>\n          <span fckLang=\"WikiDlgName\">Wiki:PageName</span><br>\n          <select id=\"sctInterwiki\" size=\"1\">\n          %(interwiki)s\n          </select>:\n          <input id=\"txtInterwikipagename\"></input>\n         </td>\n        </tr>\n       </table>\n      </td>\n     </tr>\n    </table>\n   </div>\n   <div id=\"divLinkTypeUrl\">\n    <table cellspacing=\"0\" cellpadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td nowrap=\"nowrap\">\n       <span fckLang=\"DlgLnkProto\">Protocol</span><br />\n       <select id=\"cmbLinkProtocol\">\n        <option value=\"http://\" selected=\"selected\">http://</option>\n        <option value=\"https://\">https://</option>\n        <option value=\"ftp://\">ftp://</option>\n        <option value=\"file://\">file://</option>\n        <option value=\"news://\">news://</option>\n        <option value=\"mailto:\">mailto:</option>\n        <option value=\"\" fckLang=\"DlgLnkProtoOther\">&lt;other&gt;</option>\n       </select>\n      </td>\n      <td nowrap=\"nowrap\">&nbsp;</td>\n      <td nowrap=\"nowrap\" width=\"100%%\">\n       <span fckLang=\"DlgLnkURL\">URL</span><br />\n       <input id=\"txtUrl\" style=\"WIDTH: 100%%\" type=\"text\" onkeyup=\"OnUrlChange();\" onchange=\"OnUrlChange();\" />\n      </td>\n     </tr>\n    </table>\n    <br />\n   </div>\n  </div>\n </body>\n</html>\n''' % locals())\n\n\ndef attachment_dialog(request):\n    \"\"\" Attachment dialog for GUI editor. \"\"\"\n    \"\"\" Features: This dialog can... \"\"\"\n    \"\"\" - list attachments in a drop down list \"\"\"\n    \"\"\" - list attachments also for a different page than the current one \"\"\"\n    \"\"\" - create new attachment \"\"\"\n    _ = request.getText\n    url_prefix_static = request.cfg.url_prefix_static\n\n    # wiki url\n    action = request.script_root + \"/\"\n\n    # The following code lines implement the feature \"list attachments for a different page\".\n    # Meaning of the variables:\n    # - requestedPagename : Name of the page where attachments shall be listed from.\n    # - attachmentsPagename : Name of the page where the attachments where retrieved from.\n    # - destinationPagename : Name of the page where attachment will be placed on.\n\n    requestedPagename = wikiutil.escape(request.values.get(\"requestedPagename\", \"\"), quote=True)\n    destinationPagename = wikiutil.escape(request.values.get(\"destinationPagename\", request.page.page_name), quote=True)\n\n    attachmentsPagename = requestedPagename or wikiutil.escape(request.page.page_name)\n    attachments = _get_files(request, attachmentsPagename)\n    attachments.sort()\n    attachmentList = '''\n        <select id=\"sctAttachments\" size=\"10\" style=\"width:100%%;visibility:hidden;\" onchange=\"OnAttachmentListChange();\">\n        %s\n        </select>\n''' % \"\\n\".join(['<option value=\"%s\">%s</option>' % (wikiutil.escape(attachment, quote=True), wikiutil.escape(attachment, quote=True))\n                 for attachment in attachments])\n\n    # Translation of dialog texts.\n    langAttachmentLocation = _(\"Attachment location\")\n    langPagename = _(\"Page name\")\n    langAttachmentname = _(\"Attachment name\")\n    langListAttachmentsButton = _(\"Refresh attachment list\")\n    langAttachmentList = _(\"List of attachments\")\n\n    if len(attachmentsPagename) > 50:\n        shortenedPagename = \"%s ... %s\" % (attachmentsPagename[0:25], attachmentsPagename[-25:])\n    else:\n        shortenedPagename = attachmentsPagename\n    langAvailableAttachments = \"%s: %s\" % (_(\"Available attachments for page\"), shortenedPagename)\n\n    request.write('''\n<!--\n * FCKeditor - The text editor for internet\n * Copyright (C) 2003-2004 Frederico Caldeira Knabben\n *\n * Licensed under the terms of the GNU Lesser General Public License:\n *   http://www.opensource.org/licenses/lgpl-license.php\n *\n * For further information visit:\n *   http://www.fckeditor.net/\n *\n * File Name: fck_attachment.html\n *  Attachment dialog window.\n *\n * Version:  2.0 FC (Preview)\n * Modified: 2005-02-18 23:55:22\n *\n * File Authors:\n *   Frederico Caldeira Knabben (fredck@fckeditor.net)\n-->\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n<meta name=\"robots\" content=\"index,nofollow\">\n<html>\n <head>\n  <title>Attachment Properties</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"robots\" content=\"noindex,nofollow\" />\n  <script src=\"%(url_prefix_static)s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinattachment/fck_attachment.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinurllib.js\" type=\"text/javascript\"></script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n    <form id=\"DlgAttachmentForm\" name=\"DlgAttachmentForm\" action=%(action)s method=\"GET\">\n    <input type=\"hidden\" name=\"action\" value=\"fckdialog\">\n    <input type=\"hidden\" name=\"dialog\" value=\"attachment\">\n    <input type=\"hidden\" id=\"requestedPagename\" name=\"requestedPagename\" value=\"%(requestedPagename)s\">\n    <input type=\"hidden\" id=\"attachmentsPagename\" name=\"attachmentsPagename\" value=\"%(attachmentsPagename)s\">\n    <input type=\"hidden\" id=\"destinationPagename\" name=\"destinationPagename\" value=\"%(destinationPagename)s\">\n\n    <div id=\"divInfo\" style=\"valign=top;\">\n    <div id=\"divLinkTypeAttachment\">\n    <fieldset>\n    <legend>%(langAttachmentLocation)s</legend>\n    <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n        <tr>\n            <td valign=\"bottom\" style=\"width:90%%\" style=\"padding-bottom:10px\">\n                <span>%(langPagename)s</span><br>\n            </td>\n        </tr>\n        <tr>\n            <td valign=\"bottom\" style=\"width:100%%\" style=\"padding-bottom:10px;padding-right:10px;\">\n                <input id=\"txtPagename\" type=\"text\" onkeyup=\"OnPagenameChange();\" onchange=\"OnPagenameChange();\" style=\"width:98%%\">\n            </td>\n        </tr>\n        <tr>\n            <td valign=\"bottom\" style=\"width:90%%\" style=\"padding-bottom:10px;\">\n                <span>%(langAttachmentname)s</span><br>\n            </td>\n        </tr>\n        <tr valign=\"bottom\">\n            <td valign=\"bottom\" style=\"width:100%%\" style=\"padding-bottom:10px;padding-right:10px;\">\n                <input id=\"txtAttachmentname\" type=\"text\" onkeyup=\"OnAttachmentnameChange();\" onchange=\"OnPagenameChange();\" style=\"width:98%%\"><br>\n            </td>\n        </tr>\n    </table>\n    </fieldset>\n    <fieldset>\n    <legend>%(langAvailableAttachments)s</legend>\n    <table cellSpacing=\"0\" cellPadding=\"0\" width=\"100%%\" border=\"0\">\n        <tr>\n            <td valign=\"bottom\" style=\"width:100%%\" style=\"padding-bottom:10px\">\n                <input id=\"btnListAttachments\" type=\"submit\" value=\"%(langListAttachmentsButton)s\">\n            </td>\n        </tr>\n        <tr>\n            <td valign=\"top\" style=\"padding-top:10px\">\n                <label for=\"sctAttachments\">%(langAttachmentList)s</label><br>\n                %(attachmentList)s\n            </td>\n        </tr>\n    </table>\n    </fieldset>\n   </div>\n  </div>\n   </form>\n </body>\n</html>\n''' % locals())\n\n\n##############################################################################\n### Image dialog\n##############################################################################\n\ndef image_dialog(request):\n    url_prefix_static = request.cfg.url_prefix_static\n    request.write('''\n<!--\n * FCKeditor - The text editor for internet\n * Copyright (C) 2003-2004 Frederico Caldeira Knabben\n *\n * Licensed under the terms of the GNU Lesser General Public License:\n *   http://www.opensource.org/licenses/lgpl-license.php\n *\n * For further information visit:\n *   http://www.fckeditor.net/\n *\n * File Authors:\n *   Frederico Caldeira Knabben (fredck@fckeditor.net)\n *   Florian Festi\n-->\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\">\n<html>\n <head>\n  <title>Link Properties</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n  <meta name=\"robots\" content=\"noindex,nofollow\" />\n  <script src=\"%(url_prefix_static)s/applets/FCKeditor/editor/dialog/common/fck_dialog_common.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinimage/fck_image.js\" type=\"text/javascript\"></script>\n  <script src=\"%(url_prefix_static)s/applets/moinFCKplugins/moinurllib.js\" type=\"text/javascript\"></script>\n </head>\n <body scroll=\"no\" style=\"OVERFLOW: hidden\">\n    <table cellspacing=\"0\" cellpadding=\"0\" width=\"100%%\" border=\"0\">\n     <tr>\n      <td nowrap=\"nowrap\">\n       <span fckLang=\"DlgLnkProto\">Protocol</span><br />\n       <select id=\"cmbLinkProtocol\" onchange=\"OnProtocolChange();\">\n        <option value=\"attachment:\" selected=\"selected\">attachment:</option>\n        <option value=\"http://\">http://</option>\n        <option value=\"https://\">https://</option>\n        <!-- crashes often: <option value=\"drawing:\">drawing:</option> -->\n        <option value=\"\" fckLang=\"DlgLnkProtoOther\">&lt;other&gt;</option>\n       </select>\n      </td>\n      <td nowrap=\"nowrap\">&nbsp;</td>\n      <td nowrap=\"nowrap\" width=\"100%%\">\n       <span fckLang=\"DlgLnkURL\">URL or File Name (attachment:)</span><br />\n       <input id=\"txtUrl\" style=\"WIDTH: 100%%\" type=\"text\" onkeyup=\"OnUrlChange();\" onchange=\"OnUrlChange();\" />\n      </td>\n     </tr>\n     <tr>\n      <td colspan=2>\n       <div id=\"divChkLink\">\n        <input id=\"chkLink\" type=\"checkbox\"> Link to\n       </div>\n      </td>\n    </table>\n </body>\n</html>\n''' % locals())\n\n\n#############################################################################\n### Main\n#############################################################################\n\ndef execute(pagename, request):\n    dialog = request.values.get(\"dialog\", \"\")\n\n    if dialog == \"macro\":\n        macro_dialog(request)\n    elif dialog == \"macrolist\":\n        macro_list(request)\n    elif dialog == \"pagelist\":\n        page_list(request)\n    elif dialog == \"link\":\n        link_dialog(request)\n    elif dialog == \"attachment\":\n        attachment_dialog(request)\n    elif dialog == 'image':\n        image_dialog(request)\n    else:\n        from MoinMoin.Page import Page\n        request.theme.add_msg(\"Dialog unknown!\", \"error\")\n        Page(request, pagename).send_page()\n\n", "MoinMoin Version History\n========================\n\nPlease note: Starting from the MoinMoin version you used previously, you\nshould read all more recent entries (or at least everything marked with HINT).\n\nThis release has known bugs (see MoinMoin:MoinMoinBugs), but we think it is\nalready better than the previous stable release. Our release policy is not\ntrying to make a \"perfect release\" (as that release might NEVER get released),\nbut to make progress and don't delay releases too much.\n\n\nVersion 1.9.10 aka \"the end of spam release\" (not released yet)\n\n  SECURITY HINT: make sure you have allow_xslt = False (or just do not use\n  allow_xslt at all in your wiki configs, False is the internal default).\n  Allowing XSLT/4suite is very dangerous, see HelpOnConfiguration wiki page.\n\n  HINT: Python 2.7 is required! See docs/REQUIREMENTS for details.\n\n  HINT: please read the changelog below carefully before upgrading to 1.9.10.\n        This release has some fundamental changes you (and your wiki users)\n        should be aware of beforehands.\n\n  Fixes:\n  * security fix for CVE-2017-5934, XSS in GUI editor related code\n  * fix wrong digestmod of hmac.new calls (incorporate 1.9.9 patch)\n  * fix broken table attribute processing (wikiutil.escape)\n  * fix AttributeError in multifile action\n  * read text attachments using universal newlines (including \\r line seps)\n  * anywikidraw / twikidraw: check write permissions early\n  * fix exec_cmd for windows: preexec_fn is UNIX only\n\n  New features:\n  * added a convenient way to create a user account via the superuser's\n    \"Settings\" -> \"Switch User\" form:\n\n    just type in the new user's name there, switch to the account and\n    fill out the email address. You do not need to set a password, the\n    account will not be usable until the users claims it via the \"forgot\n    my password\" functionality on the login page (and sets a password).\n\n  * you now can also type in an existing user's name there to switch to the\n    account, instead of selecting it (convenient if you have many users).\n\n  * newaccount action by default only available for superusers.\n\n    This is to avoid spam bots creating huge amounts of crap accounts on\n    internet connected wikis.\n\n    This is done via a new cfg.actions_superuser = ['newaccount', ] default.\n\n    If you prefer to have newaccount action available for every visitor (not\n    advisable for internet connected wikis), use this in your wiki config:\n\n    actions_superuser = FarmConfig.actions_superuser[:]\n    actions_superuser.remove('newaccount')\n\n    For internet connected wikis, a safer way is to let potential new users\n    ask for an account. Everyone in the superuser list can easily create a new\n    account (wiki username and email address needed). If you run a public\n    MoinMoin wiki on the internet, document the way to get an account on\n    your front page.\n\n  * support tel: urls\n\n  Other changes:\n  * safer internal default ACL: Known and All now only have read permissions.\n\n    This is to avoid that you accidentally give r/w permissions to the world\n    when running a wiki on the internet.\n\n    Considering there are lots of spam bots out there, that can create a ton\n    of spam pages in little time, we advise you to keep the safer default for\n    internet connected wikis and only allow specific users / groups read/write\n    access.\n\n    See also the updated sample configs / the HelpOnAccessControlLists help\n    page.\n  * disable the gui editor / enforce the text editor by default\n\n    fckeditor 2.6.11 as we bundle it (latest available version, but years\n    old) might have security issues meanwhile as it is not maintained any\n    more.\n\n    also, there ever have been major issues with MoinMoin's integration of\n    that \"gui editor\" (as our documentation pointed out since long).\n\n    if you want to give wiki users the choice to choose the gui editor\n    nevertheless, you can re-enable it in your wiki config:\n\n    editor_force = False\n    editor_ui = 'freechoice'\n  * change log_reverse_dns_lookups default to False.\n  * update / upgrade bundled software:\n    * upgrade werkzeug to 0.14.1\n    * upgrade passlib to 1.7.1\n    * upgrade parsedatetime to 2.4\n  * moved MoinMoin 1.9.x development to GitHub:\n    https://github.com/moinwiki/moin-1.9/\n  * update mailing list address and download URL in pypi metadata\n  * enabled Travis CI to run the unit tests for PRs / branches\n  * fixed some stuff found by PyCharm Code Inspection\n  * make build reproducible\n\n\nVersion 1.9.9 aka \"The undead MoinMoin Halloween Release\" 2016-10-31\n\n  Fixes:\n  * security: fix XSS in AttachFile view (multifile related) CVE-2016-7148\n  * security: fix XSS in GUI editor's attachment dialogue CVE-2016-7146\n  * security: fix XSS in GUI editor's link dialogue CVE-2016-9119\n  * catch IOError for zipfile errors (sometimes triggered by zipfile.is_zipfile\n    false positives, see http://bugs.python.org/issue28494 ).\n\n  Other changes:\n  * update moin.spec, setup.py: py27 only\n\n\nVersion 1.9.9rc1:\n\n  Fixes:\n  * add meta \"viewport\" for small device viewports\n  * add meta X-UA-Compatible IE=Edge, make IE happy on intranets\n\n  New features:\n  * AttachFile multifile operation: support copying multiple files to another page\n  * cfg.xmlrpc_overwrite_user is a new setting to control whether the xmlrpc\n    code overwrites an already authenticated user before processing a request.\n    True (default): behaviour as in 1.9.8 and before\n    False: use this if you want to use GivenAuth (e.g. http basic auth) for\n           xmlrpc requests.\n\n  Other changes:\n  * upgraded bundled 3rd party code:\n    * werkzeug 0.11.11\n    * passlib 1.6.5\n    * pygments 2.1.3\n    * parsedatetime 2.1\n    * FCKEditor 2.6.11\n  * removed some bundled stuff we needed due to stdlib issues in older Pythons:\n    * MoinMoin.support.difflib\n    * MoinMoin.support.tarfile\n    * MoinMoin.support.HeaderFixed (-> email.header)\n  * SubProcess: reimplement exec_cmd, remove our stdlib hacks\n  * remove own usage of python_compatibility module which we needed to support\n    older Pythons. the module is still there, in case some 3rd party moin\n    extensions used it.\n\n\nVersion 1.9.8:\n  New features:\n  * cfg.recovery_token_lifetime to determine how long the password recovery\n    token will be valid, default is 12 [h]. Check this setting to be adequate\n    before doing (global) password resets, so your users have enough time to\n    react before the toke times out!\n  * cfg.log_events_format can be used to configure the format of the records\n    written to <data_dir>/event-log:\n    0 = dot not create event-log entries (saves disk space, disk I/O)\n    1 = standard (like in moin <= 1.9.7) [default]\n    2 = extended (add infos about username, wikiname, url)\n  * add a tool to output the contents of the event-log to CSV:\n    moin export eventlog --file=output.csv\n    Output encoding is utf-8, columns are in this order:\n    time, event, username, ip, wikiname, pagename, url, referrer, ua\n    time: UNIX timestamp (float)\n  * reimplement cfg.log_timing - if True, emits INFO level log output like:\n    \"timing: <REMOTE_ADDR> <URL> <REFERRER> <TIME> <SLOWNESS-INDICATOR>\"\n    TIME is in seconds, the slowness indicator is \".\" for sub-second requests\n    or N times \"!\" for requests taking N seconds (so you easily can grep for\n    slow stuff).\n  * add \"abuse\" logging. this will log every attempt to login (successful ones\n    as well as unsuccessful ones). abuse logging is configured via the logging\n    configuration, see example in wiki/config/logging/abuse.\n    Currently, abuse logging is implemented for:\n    * authentication system\n      * \"moin\" auth\n      * \"given\" auth\n      * setuid (when superuser switches to another user)\n    * new user creation\n    * some security/ACL violations (xmlrpc and perhaps others not implemented)\n  * surge protection for authentication (currently only for MoinAuth):\n    a) surge protect by IP\n       This covers the case someone is trying to authenticate way too\n       often - we don't look at the username here, just at the remote IP\n       address. If surge protection kicks in for some specific IP, that IP\n       won't be able to try to authenticate any more until surge_lockout_time\n       is over.\n       Note: be careful with users behind proxies or NAT routers - these are\n             common and legitimate cases with (potentially lots of)\n             authentication requests coming from same IP.\n             if it is a trusted proxy, you can configure moin so it sees the\n             real remote IP address (not just the proxy's address).\n    b) surge protect by name\n       This covers the case someone is trying to authenticate for a\n       specific user name way too often (e.g. when someone tries to attack the\n       wiki admin's account). We don't look at the IP here, just at the user\n       name. If surge protection kicks in for some specific user name, that user\n       name will not be able to try to authenticate any more until\n       surge_lockout_time is over.\n       Note: this even covers widely distributed attacks against a user, but\n             you should only enable this if you are aware that the \"real\" user\n             also won't be able to authenticate while surge protection is active\n             (at least not using the account for that specific username).\n             Thus, there is some denial-of-service danger with this if the\n             attacker can guess or find your valid user names (which isn't too\n             difficult if your wiki is publicly readable).\n             This is bad, but technically hard to avoid.\n    Configuration (allowing 10 authentication attempts per hour):\n        surge_action_limits = {\n            # ...\n            'auth-ip': (10, 3600),  # same remote ip (any name)\n            'auth-name': (10, 3600),  # same name (any remote ip)\n         }\n  * backlinks performance tuning: the pagename in the theme has historically\n    been used to trigger a \"linkto:ThisPage\" search. While this is a nice\n    feature for human users of the wiki (esp. on category pages), it has one\n    big issue: as it is a normal link, stupid crawlers (ignoring \"nofollow\")\n    follow it and cause a lot of unneccessary load.\n\n    What moin shows in that \"backlinks\" place can now be configured in your\n    wiki config:\n\n    # always render the backlink as in moin < 1.9.8 (bad bots causing high load!):\n    backlink_method = lambda cfg, req: 'backlink'\n\n    # always render a simple link to same page, as in moin 2.0:\n    backlink_method = lambda cfg, req: 'pagelink'\n\n    # logged-in users get the backlink, anon users/bots get a pagelink (default):\n    backlink_method = lambda cfg, req: 'backlink' if req.user.valid else 'pagelink'\n\n    # logged-in users get the backlink, anon users/bots get simple text:\n    backlink_method = lambda cfg, req: 'backlink' if req.user.valid else 'text'\n  * AbandonedPages macro: check user agent to reduce load caused by bots\n  * RSS feed: check for bots and rather give them empty results than waste a\n    lot of time with them\n  * ldap_auth: support placeholders for basedn also, e.g. you could use:\n    base_dn='uid=%(username)s,ou=people,dc=company,dc=com'\n  * move or delete multiple attachments (see checkboxes and buttons on the\n    AttachFile view). Be careful: in the same way as you could delete a single\n    attachment with one click, you can now delete all attachments of a page\n    with one click (we don't ask for a 2nd confirmation, so think first).\n  * mailimport: use relative attachment link markup instead of absolute links,\n    enables some page renaming operations without needing to edit the markup.\n  * better caching and lookup optimizations for userprofile data:\n    * name, email, jid, openids -> userid lookups\n    * page subscriptions for notifications (as a consequence, determination of\n      subscribers when a page is saved is much faster now, esp. for wikis with\n      many users) - see also MoinMoinBugs/GetSubscribersSlow\n  * Notification template strings are now configurable via cfg.mail_notify_...\n    * page_text (this puts together the pieces for the mail body, used for all\n      changed / deleted / renamed page mail notifications)\n    * page_changed_subject, page_changed_intro\n    * page_deleted_subject, page_deleted_intro\n    * page_renamed_subject, page_renamed_intro\n    * att_added_subject, att_added_intro\n    * att_removed_subject, att_removed_intro\n    * user_created_subject, user_created_intro\n    * Best is to read HelpOnConfiguration and look at MoinMoin.config.multiconfig\n      to see the help text and the defaults.\n    * The defaults are chosen to be the same as the old hardcoded values, so the\n      translations keep working.\n    * If you overwrite the strings in your configuration moin will still try to\n      translate your strings, but it will only find translations if you add them\n      to the gettext catalogs, too.\n    * Examples:\n\n      a) notification mail body: you don't want the rendered diff, you don't\n         want to link to the diff, but to the full page view on your wiki.\n\n      # original (default) value\n      mail_notify_page_text = '%(intro)s%(difflink)s\\n\\n%(comment)s%(diff)s'\n      # put this in your wiki config\n      mail_notify_page_text = '%(intro)s%(pagelink)s\\n\\n%(comment)s'\n\n      b) notification mail subject:\n      # original (default) value\n      mail_notify_page_changed_subject = '[%(sitename)s] %(trivial)sUpdate of \"%(pagename)s\" by %(username)s'\n\n      c) notification mail intro:\n      # original (default) value\n      mail_notify_page_changed_intro = \\\n          (\"Dear Wiki user,\\n\\n\"\n           'You have subscribed to a wiki page or wiki category on \"%(sitename)s\" for change notification.\\n\\n'\n           'The \"%(pagename)s\" page has been changed by %(editor)s:\\n')\n\n      Note: if you change \"*_page_changed_*\", you likely also want to change\n      \"*_page_deleted_*\" and \"*_page_renamed_*\", maybe even \"*_att_added_*\"\n      and \"*_att_removed_*\".\n\n  Fixes:\n  * security fix: XSS in useragents stats\n  * do not create empty pagedirs (with empty edit-log). To clean up all the\n    trash pagedirs, use moin ... maint cleanpage.\n  * page rename/delete, attachment add/remove email notifications work now\n    (somehow we had an event for this, but no code handling it)\n  * AttachFile do=get and do=view: send 404 status if file does not exist\n  * link rel=\"Alternate\" links: rather use page.url than request.href, so\n    url_prefix_action gets used for the (print and raw) action URLs\n  * fixed wrong detection of UI language from accept-language header for not\n    logged-in users if the language identifier there was (partially) uppercase.\n  * fix Python 2.7.4/5 compatibility issue with rss_rc action using handler._out\n  * fix \"moin import wikipage\" timestamp confusion\n  * use 302 http status for #redirect as some clients cache 301 redirects, but\n    the #redirect might get changed or removed later (so it should not be\n    cached and we also can't really say it is permanent)\n  * fix crash when macro names contain non-ascii chars\n  * CopyPage action: fix NameError exception when TextCha was answered wrong\n  * docbook formatter: fix image URL generation, avoid script name duplication\n  * fix caching scope of name2id/openid2id caches (was: \"wiki\", now:\n    \"userdir\"). this is relevant for shared user_dir configurations.\n  * moin maint cleancache: cleans up openid2id cache now also\n  * \"userdir\" caching scope used for userid lookup caches (the previously used\n    name2id cache with \"wiki\" caching scope could have outdated data if you\n    share the user_dir between multiple wikis)\n  * catch \"filename too long\" exception if some crap URL refers to a too long\n    pagename that the filesystem can not represent. It is treated like a not\n    existing page then, so you don't get a traceback in your log file.\n\n  Other changes:\n  * rss_rc action (RSS feed) is now much faster / much less resource consuming\n    when requested for a specific single page. As we have a link to this in\n    every page's html output, this likely also lightens the load caused by bots\n    and search engine crawlers.\n  * tuned editlog.news() - only open/read log if there is new stuff in it after\n    last read position\n  * improve python2.5 compatibility (with_statement)\n  * add bingbot to ua_spiders\n  * upgraded bundled werkzeug to 0.8.3\n  * upgraded bundled passlib to 1.6.2\n  * upgraded bundled pygments to 1.6\n\n\nVersion 1.9.7:\n  New features:\n  * passlib support - enhanced password hash security. Special thanks go to\n    the Python Software Foundation (PSF) for sponsoring development of this!\n\n    Docs for passlib: http://packages.python.org/passlib/\n\n    If cfg.passlib_support is True (default), we try to import passlib and set\n    it up using the configuration given in cfg.passlib_crypt_context (default\n    is to use sha512_crypt with default configuration from passlib).\n\n    The passlib docs recommend 3 hashing schemes that have good security, but\n    some of them have additional requirements:\n    sha512_crypt needs passlib >= 1.3.0, no other requirements.\n    pbkdf2_sha512 needs passlib >= 1.4.0, no other requirements.\n    bcrypt has additional binary/compiled package requirements, please refer to\n    the passlib docs.\n\n    cfg.password_scheme should be '{PASSLIB}' (default) to tell that passlib is\n    wanted for new password hash creation and also for upgrading existing\n    password hashes.\n\n    For the moin code as distributed in our download release archive, passlib\n    support should just work, as we have passlib 1.6.1 bundled with MoinMoin\n    as MoinMoin/support/passlib. If you use some other moin package, please\n    first check if you have moin AND passlib installed (and also find out the\n    passlib version you have installed).\n\n    If you do NOT want to (not recommended!) or can't use (still using python\n    2.4?) passlib, you can disable it your wiki config:\n\n        passlib_support = False  # do not import passlib\n        password_scheme = '{SSHA}'  # use best builtin hash (like moin < 1.9.7)\n\n    Please note that after you have used moin with passlib support and have user\n    profiles with passlib hashes, you can't just switch off passlib support,\n    because if you did, moin would not be able to log in users with passlib\n    password hashes. Password recovery would still work, though.\n\n    password_scheme always gives the password scheme that is wanted for new or\n    recomputed password hashes. The code is able to upgrade and downgrade hashes\n    at login time and also when setting / resetting passwords for one or all\n    users (via the wiki web interface or via moin account resetpw script\n    command).\n\n    So, if you want that everybody uses strong, passlib-created hashes,\n    resetting the passwords for all users is strongly recommended:\n    First have passlib support switched on (it is on by default), use\n    password_scheme = '{PASSLIB}' (also default), then reset all passwords.\n\n    Same procedure can be used to go back to weaker builtin hashes (not\n    recommended): First switch off passlib support, use password_scheme =\n    '{SSHA}', then reset all passwords.\n\n    Wiki farm admins sharing the same user_dir between multiple wikis must use\n    consistent password hashing / passlib configuration settings for all wikis\n    sharing the same user_dir. Using the builtin defaults or doing the\n    configuration in farmconfig.py is recommended.\n\n    Admins are advised to read the passlib docs (especially when experiencing\n    too slow logins or when running old passlib versions which may not have\n    appropriate defaults for nowadays):\n    http://packages.python.org/passlib/new_app_quickstart.html#choosing-a-hash\n    http://packages.python.org/passlib/password_hash_api.html#choosing-the-right-rounds-value\n\n  * Password mass reset/invalidation support, see docs/resetpw/.\n    This is useful to make sure everybody sets a new password and moin computes\n    the password hash using the current configuration.\n\n  * Customizable default password checker:\n    Moin's default password checker used and still uses min_length=6 (minimum pw\n    length) and min_different=4 (minimum count of different chars in the password).\n    If you feel that you need to require better passwords from your users, you\n    can customize it now like that in your wiki config:\n\n    password_checker = lambda cfg, request, name, pw: multiconfig._default_password_checker(cfg, request, name, pw, min_length=10, min_different=7)\n\n  * Removing/disabling inactive users (moin ... account inactive)\n    Many wikis have a lot of inactive users, that never ever made a single edit.\n    See help of the command for more details, be careful.\n  * SystemAdmin user browser: show disabled user accounts at the bottom of\n    the list\n  * At startup, announce moin version and code path in log output (makes\n    support and debugging easier).\n  * AttachList: introduced search_term parameter (optional) for listing\n    attachments filtered by a regular expression on their name.\n  * sign release archive using GnuPG with the key of tw@waldmann-edv.de\n    ID 31A6CB60 (main key ID FAF7B393)\n\n  Fixes:\n  * logging: if the logging config file can't be read, give a helpful error msg\n  * logging: use info loglevel (not warning) for telling about using the builtin\n    default logging config\n  * moin script commands: warn if someone gave ... to the moin script, avoids a\n    strange and unhelpful 'empty module name' error message\n  * reorder html input fields in recoverpass form, to help browsers remember\n    the user name and password (not erroneously the recovery token and password)\n  * don't try to send password recovery email to user if email address in\n    user profile is empty\n  * cache action: fix 304 http status\n  * rst parser: fix safe_import for level param in __import__ call of docutils 0.10\n  * moin maint cleancache: also kill the i18n cache 'meta' pickle file\n  * sendmail: catch unicode errors when E-Mail addr has non-ascii chars\n  * redirect last visited: if last visited page is on same wiki, use a local\n    redirect, do not compute via interwiki map (fixes https: usage)\n\n\nVersion 1.9.6:\n\n  Fixes:\n  * fix remote code execution vulnerability in twikidraw/anywikidraw action\n  * fix path traversal vulnerability in AttachFile action\n  * fix XSS issue, escape page name in rss link\n  * escape user- or admin-defined css url\n  * make taintfilename more secure\n  * use a constant time str comparison function to prevent timing attacks\n  * Attachment handler: catch all Zip-related errors\n\n\nVersion 1.9.5:\n\n  Fixes:\n   * Security fix: fix virtual group bug in ACL evaluation.\n   * Avoid crash if #refresh processing instruction is used without arguments.\n   * Fix issue with non-ASCII textchas.\n   * Xapian indexing: remove copy.copy() that crashed on Windows/IIS/isapi-wsgi\n     after page save.\n   * Fix dictionary file reading crash under Windows.\n   * Work around crash of AdvancedSearch macro rendering caused by non-ascii\n     mimetypes.types_map entries.\n   * Added migration script for moin 1.8.9.\n   * rss_rc: Fix diffs added in RSS with diffs=1 (now they correspond to item\n     listed in feed and not just last page diffs). Links generated with ddiffs=1\n     also fixed.\n   * rss_rc: fix double escaping issue.\n   * rss_rc: respect show_names configuration option.\n   * rss_rc: proper support of rename, revert, page creation.\n   * modern/modernized theme: fix padding/width for editor preview\n   * group/pagelinks formatters: avoid to create unnecessary output, redirect\n     output of send_page call with the groups formatter, it must not be written\n     to the output stream\n   * rst parser: fix include and macro directives\n   * wikisync: fix unicode pagename sending for python 2.7 httplib\n\n  New features:\n   * add a comment_required config option (default: False) to require a\n     non-empty comment when saving a page\n   * when a save error happens, show the editor again and highlight the error\n   * rss_rc: several new options added: lines parameter gives ability to set\n     maximum size of diffs showed in RSS. show_att parameter gives ability\n     to show information aboout attachment-related items in RSS. page parameter\n     gives ability to specify set of pages for which changes RSS feed should be\n     generated. Configuration of defaults and limits can now be done via wiki\n     configuration mechanism.\n   * As soon as it is now possible to provide RSS for page change history,\n     appropriate alternate link is now added for every page (controlled by\n     rss_show_page_history_link configuration parameter).\n   * Search: \"no_highlight:\" search query option provided for suppressing\n     highlighting search results.\n   * Search macros: new options for FullSearch, FullSearchCached and PageList\n     available:\n     * highlight_titles option controls highlighting of matches in search\n       results provided by these macros. Default value is set in\n       search_macro_highlight_titles configuration option)\n     * highlight_pages option controls adding of highlight URL parameter to\n       page links (so search term is highlighted when user goes to one of\n       these pages via provided link) in search results. Default value is set\n       in search_macro_highlight_pages configuration option.\n     Usage of these options is disabled (via search_macro_parse_args\n     configuration option) by default due to behavioural changes introduced\n     in macro parameter parsing mechanism to support them. Related to\n     http://moinmo.in/FeatureRequests/FullSearchResultsWithoutHighlight .\n\n  Other changes:\n   * Remove 4suite dependency for docbook formatter, use minidom (included in\n     Python).\n   * Upgraded FCKeditor to 2.6.8.\n\n\nVersion 1.9.4:\n\n  HINT: Python >= 2.5 is maybe required! See docs/REQUIREMENTS for details.\n\n  Fixes:\n   * Fix XSS / remove javascript URL support in rst parser (CVE-2011-1058).\n   * werkzeug: Removed a dummy import. Fixes Python 2.7 compatibility.\n   * Fix linux-to-windows edit-log migration/upgrade issue (wrong line endings)\n   * logfile: strip \\n lineends from line data (\\n is part of the file\n     structure, not of the data)\n   * Fix for MoinMoinBugs/SinglePageSlideShowAndParserMarkup.\n   * Simplify auto scroll initialization; fix bug in IE init discovered when\n     using IE7 on pages with wide tables.\n   * Fix timestamp in edit lock message to show the time when edit-locking ends.\n   * Updated wikiserverconfig.py from internal defaults, sync the one in\n     toplevel dir and the one in wiki/server/ - fixes hostname setting.\n   * SubProcess: make sure files are closed at the end (experimental change).\n   * text plain formatter: fix bullet_list, see number_list.\n   * Add some image mimetypes to MIMETYPES_MORE to fix windows issues.\n   * Include page name in password reset URL.\n   * Fix moin export dump to generate relative URLs.\n   * Fix MonthCalendar mouseover for pages with ampersand in page name.\n   * ldap_login: assign server early, it is used in exception handler.\n   * OpenID server preferences: fix traceback related to request method.\n   * Work around page.mtime_usecs() returning 0 for pages without edit-log.\n   * revert action: catch and display all SaveErrors when revert failed.\n   * Fixed bug in groups formatter which caused the last list item to be not in the group.\n   * Avoid strange exception in zipfile.py for pre-1980 timestamps.\n   * TableOfContents: fix for other markups than default wiki markup, e.g. rst\n   * script.account.homepage: added wiki format to homepage_default_text\n   * Enable webkit based browsers (try chrome/safari/konqueror now) for GUI\n     editing (after fixing selection FCKeditor plugin for chrome).\n   * Parsers: avoid crash when Parser.format() call gets inhibit_p kw arg.\n   * advancedsearch: fix problem with non-ascii chars breaking up words for OR\n     and NOT terms\n   * fix globaledit script to keep comments on Homepage...Template pages\n\n  New features:\n   * Added print mode to action.SlideShow, see\n     FeatureRequests/PrintableSinglePageSlideshows.\n   * xmlrpc: new methods xmlrpc_getProcessingInstruction(Version)\n   * Add support for other password hashes (all of them will get auto-upgraded\n     to SSHA when user logs in):\n     * {DES} (Unix crypt(3))\n     * {MD5} (MD5-based crypt())\n     * {APR1} (Apache .htpasswd). \n   * Experimental queued indexing support to work around memory leak - use it like this:\n     # put all pages into indexer queue:\n     python MoinMoin/script/moin.py index build --mode=makequeue\n     # take <count> pages out of the indexer queue and index them,\n     # you need to repeat the following line respective to the total amount of pages\n     # in your wiki (doing more indexer calls does no harm, doing less means an\n     # incomplete index):\n     python MoinMoin/script/moin.py index build --mode=buildnewindexqueued --count=500\n     python MoinMoin/script/moin.py index build --mode=buildnewindexqueued --count=500\n     python MoinMoin/script/moin.py index build --mode=buildnewindexqueued --count=500\n     # ...\n     # switch to new index:\n     python MoinMoin/script/moin.py index build --mode=usenewindex \n\n  Other changes:\n   * Raise exceptions as recommended in PEP 8.\n   * Updated i18n / underlay pages.\n   * Updated interwiki map.\n   * Use logging.traceback to get more information if a indexing filter crashes.\n   * u200b is not considered a space any more in unicode 4.0.1.\n   * Improve textcha security, use some crypto and timing to make cheating\n     harder - use cfg.textchas_expiry_time = 600 (default, seconds) to set the\n     time a textcha is valid.\n   * Upgraded bundled werkzeug to 0.8.1, pygments to 1.4, flup to repo tip.\n\n\nVersion 1.9.3:\n  Fixes:\n  * Fix XSS in Despam action (CVE-2010-0828).\n  * Fix XSS issues (see MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg):\n    * by escaping template name in messages\n    * by fixing other places that had similar issues\n  * Make moin compatible to werkzeug 0.5 .. 0.6.2 (1.9.2 had issues\n    with xmlrpc when used with werkzeug 0.6.x).\n  * MoinMoin.util.filesys: disable usage of dircache, deprecate dc* functions,\n    because the dircache stdlib module can't work correctly for fast updates of\n    directories.\n  * rss_rc and sisterpages actions: fix Content-Type header (mimetype)\n  * Fix associating OpenID identity with user, wasn't adapted to werkzeug yet.\n  * openidrp auth: fix undefined _ (gettext)\n  * Fix auth.cas and userprefs.oidserv request object usage.\n  * highlight parser: fixed MoinMoinBugs/LineNumberSpansForProcessInstructionsMissed\n  * Pygments syntax highlighting: add missing code files\n  * Notifications: use same email subject format for every notification\n  * Fix docbook formatter crashing, see MoinMoinPatch/IncludeMacroWithDocBookFormatter\n  * Fix regex content search for xapian search.\n  * Get rid of the empty line at the end of code highlights.\n  * GUI editor: compute editor height like the text editor does.\n  * Added help texts for: standalone server and moin migration.\n  * script.maint.cleancache: clean also i18n cache files\n  * Improved formatter.text_plain, see FeatureRequests/TextPlainFormatterRewrite\n    (fixes many issues of this formatter).\n  * text_html_text_moin_wiki: fixed index error for width=\"\", see also:\n    MoinMoinBugs/GUI_convertor_list_index_out_of_range\n  * xmlrpc: disable editor backup for putPage, renamePage and revertPage\n    because if pages get uploaded by xmlrpc then the draft cache file can\n    rapidly increase in size, causing high memory usage because it needs to\n    get loaded into memory for updating/processing.\n  * Emit Content-Type header (with charset) for SlideShow action and many other\n    actions that just call send_title().\n  * ActionBase: better compatibility to moin 1.8, use request.values by\n    default, optionally use request.form data only\n\n  New features:\n  * RenamePage action: added ability to create redirect pages when renaming\n    (turned off by default, see show_rename_redirect config option).\n  * formatter/text_html: Added line number links to code blocks.\n  * diff action:\n    * Fixed whitespace in generated (html) diff view table so white-space: pre\n      can be used (and whitespace in diffs preserved).\n    * Added links to first/last revision.\n  * MoinMoin.widget.browser: introduced feature for sorting tables, see:\n    http://moinmo.in/FeatureRequests/SortableTables\n  * SystemAdmin user and attachment browsers: sorting feature used there now\n  * Scrolling the text editor to the double clicked line.\n  * Enable double-click-editing by default.\n  * WikiConfigHelp macro: make heading and description display optional,\n    heading level as a parameter (default 2)\n  * If edit ticket check fails, send the editor with the current content.\n  * moin import wikipage - use this script to import local files as a wiki page\n\n  Other changes:\n  * upgraded pygments from 1.2.2 to 1.3.1\n  * upgraded FCKeditor from 2.6.4.1 to 2.6.6\n  * added configuration snippet for ldap authentication against 2 servers\n  * improved script help output\n\nVersion 1.9.2:\n  Fixes:\n  * Fixed CVE-2010-0668: major security issues were discovered in misc. parts\n    of moin.\n    HINT: if you have removed superuser configuration to workaround the issue\n    (following our security advisory), you may re-add it after installing this\n    moin release. If you don't need superuser capabilities often, it might be\n    wise to not have superusers configured all the time, though.\n  * Fixed CVE-2010-0669: potential security issue due to incomplete user profile\n    input sanitizing.\n  * Improved package security: cfg.packagepages_actions_excluded excludes\n    unsafe or otherwise questionable package actions by default now.\n  * wiki parser: fixed transclusion of (e.g. video) attachments from other\n    pages.\n  * Fixed edit locking for non-logged in editors and cfg.log_remote_addr=False.\n  * mailimport: fix missing wikiutil import for normalize_pagename\n  * SubProcess: fix \"timeout\" AttributeError\n  * \"standalone\" wikiserver.py: fixed calling non-existing os.getuid on win32\n  * HTTPAuth deprecation warning moved from class level to __init__\n  * Fixed MoinMoinBugs/1.9DiffActionThrowsException.\n  * Fixed misc. session related problems, avoid unneccessary session file\n    updates.\n  * Fix/improve rename-related problems on Win32 (depending on Windows version).\n  * Fixed spider / user agent detection.\n  * Make sure to use language_default when language_ignore_browser is set.\n  * diff action: fix for case when user can't revert page.\n  * Fix trail size (was off by one).\n  * Updated bundled flup middleware (upstream repo checkout), avoids\n    socket.fromfd AttributeError on win32 if cgi is forced, gives helpful\n    exception msg.\n  * wikiutil: Fixed required_arg handling (no exception when trying to raise\n    exception that choice is wrong).\n  * Do not use MoinMoin.support.* to import 3rd party code, give dist packages\n    a chance.\n  * wikiutil.clean_input: avoid crash if it gets str type\n  * request: fixed for werkzeug 0.6 and 0.5.1 compatibility. Please note that\n    we didn't do much testing with 0.6 yet. So, if you use 0.6, please do some\n    testing and provide feedback to us.\n  * AttachFile._build_filelist: verifies readonly flag for unzip file link\n  * attachUrl: fix wrongly generated tickets (e.g. for AttachList macro)\n  * http headers: fix duplicated http headers (e.g. content-type)\n\n  New features:\n  * info action: added pagination ability to revision history viewer.\n    Use cfg.history_paging = True [default] / False to enable/disable it.\n  * ldap_login auth: add report_invalid_credentials param to control wrong\n    credentials error message (this is typically used when using multiple\n    ldap authenticators).\n  * Add RenderAsDocbook to actions_excluded if we have no python-xml.\n  * Upgraded pygments to 1.2.2 (some fixes, some new lexers).\n  * Text editor: if edit_rows==0 (user profile or config), we dynamically size\n    the text editor height. This avoids double sliders for the editor page\n    in most cases.\n\n  Other changes:\n  * New docs/REQUIREMENTS.\n  * Added a less magic cgi/fcgi driver (moin.fcgi), added fixer middleware\n    for apache2/win32 to it.\n\n\nVersion 1.9.1:\n  Bug fixes:\n  * Fixed CVE-2010-0667: sys.argv security issue.\n  * Fixed FileSessionService - use session_dir from CURRENT request.cfg (it\n    mixed up session_dirs in farm setups).\n    HINT: if you added the hotfix to your wikiconfig, please remove it now.\n  * Fixed creation of lots of session files (if anon session were enabled and\n    user agent did not support cookies).\n  * Fixed session file storage for a non-ascii base path.\n  * Fixed session cookie confusion for nested URL paths (like path=/ and\n    path=/mywiki - for more info, see also \"New features\").\n  * Handle cookie_lifetime / anonymous_session_lifetime upgrade issue\n    gracefully: emit errors/warnings to log, use old settings to create\n    cfg.cookie_lifetime as expected by moin 1.9.\n  * flup based frontends: fixed SCGI and AJP (didn't work).\n  * farmconfig example: remove wrong comment, add sample http/https entry.\n  * Fixed password reset url (email content needs full URL).\n  * Page: fixed adding of page contents (only data added now, without metadata) -\n    fixes MoinMoinBugs/DeprecatedPageInclusionErrornousPageInstructionsProcessing\n  * xmlrpc:\n    * Process attachname in get/putAttachment similarly.\n    * revertPage: convert pagename to internal representation.\n    * Fixed auth calls used by jabberbot (needs more work).\n  * Added missing config.umask support code (setting was not used), fixed\n    config.umask usage for page packages.\n  * Fixed browser language detection.\n  * Fixed language pack generation/installation for pt-br, zh, zh-tw.\n  * Fixed caching of formatted msgs, see MoinMoinBugs/1.9EditPageHelpLinksBroken.\n  * Fixed usage of i18n.wikiLanguages() on class level (moved to method), failed\n    when tools import the module (e.g. pydoc -k foo).\n  * highlight parser:\n    * fixed caching issue for \"toggle line numbers\" link.\n    * added missing support for console/bash session\n  * Fixed precedence of parsers: more special parsers now have precedence\n    before moin falls back to using the HighlightParser (syntax highlighting).\n  * Added extensions to the rst, moin and creole parser (example.rst, example.moin and\n    example.creole attachments are rendered now when viewed).\n  * Fixed MoinMoinBugs/LineNumberSpansForProcessInstructionsMissed for\n    moin_wiki, highlight and plain parser.\n  * Fixed MoinMoinBugs/LineNumberAnchorsInPreformattedText for highlight and\n    plain parser.\n  * Fixed MoinMoinBugs/TableOfContentsBrokenForIncludedPages.\n  * Exception raised on calling add_msg() after send_title(), which leads to \n    Internal Server Error on calling several actions (diff, preview) for \n    deprecated pages, is replaced with warning and call stack information in \n    the log.\n  * AttachFile.move_file: send events (so e.g. xapian index update happens)\n  * SubProcess: fixed win32-specific parts, fixed imports (fixes calling of\n    external xapian index filters)\n  * Fixed auth methods that use redirects (like OpenID).\n  * OpenID client:\n    * Add setting cfg.openidrp_allowed_op, default is [].\n    * Fixed logging in with openid and associating with an existing account.\n    * openidrp_sreg extension: handle UnknownTimeZoneError gracefully\n  * OpenID server:\n    * Fixed TypeError.\n    * Fixed processing POSTed form data AND URL args.\n\n  New features:\n  * diff: Added displaying of information about revisions (editor, size, \n    timestamp, comment), added revision navigation.\n  * text editor: added @TIMESTAMP@ variable for adding a raw time stamp\n  * xmlrpc: added renamePage and deleteAttachment methods.\n  * Accept \"rel\" attribute for links (moin wiki parser).\n  * Generate session cookie names to fix cookie path confusion and enable port-\n    based wiki farming.\n\n    HINT: New setting cfg.cookie_name:\n\n    None (default): use MOIN_SESSION_<PORT>_<PATH> as session cookie name. This\n                    should work out-of-the-box for most setups.\n\n    'siteidmagic': use MOIN_SESSION_<SITEID>, which is unique within a wiki farm\n                   created by a single farmconfig (currently, cfg.siteid is just\n                   the name of the wiki configuration module).\n\n    'other_value': use MOIN_SESSION_other_value - this gives YOU control. Just\n                   use same value to share the session between wikis and use a\n                   different value, if you want a separate session.\n\n    HINT: Please do not use cfg.cookie_path any more - it usually should not be\n    needed any more, as we now always put path=/ into the cookie except if you\n    explicitly configure something else (only do that if you know exactly what\n    you're doing and if the default does not work for you).\n\n    HINT: see also the HelpOnSessions page which shows some typical configs.\n  * Store expiry into sessions, use moin maint cleansessions script to clean up.\n    HINT: use moin ... maint cleansessions --all once after upgrading.\n    HINT: you may want to add a cron job calling moin ... maint cleansessions\n          to regularly cleanup expired sessions (it won't remove not expired\n          sessions).\n\n  Other changes:\n  * Added rtsp, rtp, rtcp protocols to url_schemas.\n  * Added more info about index building to xapian wikiconfig snippet.\n  * Updated the wikicreole parser to version 1.1.\n\n\nVersion 1.9.0:\n  Note: This is a reduced CHANGES, ommitting details from rc/beta test and\n        also less interesting minor changes and fixes. It shows changes\n        relative to 1.8.6 release.\n        If you want to see full detail, read it there:\n        http://hg.moinmo.in/moin/1.9/file/b290d938be63/docs/CHANGES\n\n  New features: ==============================================================\n  * HINT: MoinMoin requires Python 2.4 now. If you only have Python 2.3 and\n    you don't want to upgrade it, please use MoinMoin 1.8.x.\n  * HINT: MoinMoin is now a WSGI application.\n    Please read the new install docs about how to use it, see:\n    http://master19.moinmo.in/InstallDocs\n    You also have a local copy of that page as docs/INSTALL.html.\n  * HINT: due to big changes in the request processing and the request\n    object (related to the WSGI refactoring), many 3rd party plugins might\n    need code updates to work with moin 1.9.\n  * HINT: We now offer different sized sets of system/help pages and the default\n    underlay just contains a single page: LanguageSetup. You need to be\n    superuser, visit that page and then install the language packs you like\n    (minimum is the essential set for English).\n  * HINT: LanguageSetup is the default page_front_page, you need to change that\n    after installing language packs (see above).\n\n  * New modular group and dict data access, you can use group and dict \n    backend modules to access group and dict data stored anywhere you like.\n    Currently we provide these backends:\n      * WikiGroups and WikiDicts backends get data from wikipages. They work\n        similar to old wikidicts code (but with less caching issues :).\n      * ConfigGroups and ConfigDicts backends get data from a dictionary\n        defined in the wiki config.\n      * CompositeGroups and CompositeDicts compose several backends, so data\n        may be retrieved from several sources. For example, groups may be\n        defined in the wiki config and on wiki pages.\n    * Using cfg.groups and cfg.dicts, you can define the backend to use to\n      access group and dict information (default: WikiGroups / WikiDicts\n      backend).\n      See the wiki/config/more_samples/ directory (groups_wikiconfig_snippet\n      and dicts_wikiconfig_snippet).\n    * See also the new HelpOnDictionaries and HelpOnGroups pages.\n\n  * Improved Xapian indexing / search:\n    * Moin's Xapian based search code was refactored:\n      * It is now based on the xappy library (see MoinMoin.support.xappy).\n      * Minimum Xapian requirement is 1.0.6 now.\n      * Outdated and unmaintained xapwrap lib was removed.\n      * regex search with Xapian enabled also is based on the xapian index now\n    * Safe 2-stage xapian index rebuilding:\n      moin index build --mode=buildnewindex  # slow, concurrent\n      <stop wiki>\n      moin index build --mode=usenewindex  # fast\n      <start wiki>\n    * Added wikiconfig snippet for xapian search.\n\n  * Improved drawing support:\n    * TWikiDraw:\n      * Support code was refactored/moved to the twikidraw action.\n      * Use drawing:example.tdraw to invoke it (drawing:example also still\n        works for backwards compatibility)\n      * Drawings are now stored as a single attachment foo.tdraw.\n        We added a migration script that converts your existing drawings.\n    * AnyWikiDraw:\n      * Java applet added, source code see contrib/.\n      * Support code for it is in anywikidraw action.\n      * Use drawing:example.adraw to invoke it.\n      * Drawings are stored in a similar way as foo.adraw.\n    * cfg.extensions_mapping added for mapping of attachment file extensions\n      to actions (currently used for anywikidraw/twikidraw action)\n\n  * Themes / static files related:\n    * Added modernized_cms theme (hides most wiki widgets from modernized if the\n      user is not logged in).\n    * Static file serving built-in (moved wiki/htdocs to MoinMoin/web/static/htdocs).\n      MoinMoin.web.static has a static file serving wrapper that uses the files\n      from htdocs subdirectory by default (docs=True).\n      You can also give another path or switch off creation of that static wrapper.\n      See the docstring of the static package for details.\n    * Theme packages: do_copythemefile now copies theme files to\n      MoinMoin/web/static/htdocs.\n\n  * Syntax highlighting is based on the pygments library now, it does this for\n    LOTS of stuff (programming languages, config files, ...) - use it like this:\n    {{{#!highlight xxx\n    ...\n    }}}\n    xxx is any of the markups pygments supports (see HelpOnParsers).\n    Note: we still have some (deprecated) small wrappers around pygments,\n    so the old syntax #!python/pascal/cplusplus/... still works.\n\n  * Authentication improvements:\n    * HTTP auth related (see also HelpOnAuthentication):\n      * HTTPAuthMoin: http basic auth done by moin\n      * HINT: auth.http.HTTPAuth is now auth.GivenAuth\n        This was badly named from the beginning as for most servers, it just\n        looked at REMOTE_USER environment variable and relied on the server\n        doing the authentication (could be http basic auth or any other auth).\n    * LDAP/AD auth: new name_callback param to create a custom wiki username (not\n      the ldap login username)\n    * OpenID auth:\n      * Support for Simple Registration (SREG) extension.\n        Basic profile fields can be copied from OpenID provider when logging in.\n      * Support for Teams extension.\n      * Ability to accept logins from specific OpenID providers.\n        Login form changes based on configuration for better usability:\n        * 0 providers: normal text input box for OpenID URL\n        * 1 provider: hidden field, automatic form submission with JavaScript\n        * 2+ providers: select field, uses directed identity\n\n  * Sessions / cookies:\n    * HINT: cfg.cookie_lifetime is now a tuple (anon, loggedin), giving the\n      lifetime of the cookie in hours, accepting floats, for anon sessions and\n      logged-in sessions. Default is (0, 12). 0 means not to use a session\n      cookie (== not to establish a session) and makes only sense for anon users.\n    * cfg.cookie_httponly is new and defaults to False. Please note that if you\n      set it to True, TWikiDraw and similar stuff won't be able to use the session\n      cookie. Thus, if your wiki page doesn't allow writing for everybody, saving\n      a drawing will fail, because there is no session (== no logged in user) for\n      the TWikiDraw applet's saving POSTs.\n\n  * Macros:\n    * WikiConfigHelp: added section keyword for selecting a subset of the\n      description, e.g. <<WikiConfigHelp(section=\"xapian\")>>\n    * HighlighterList: show Pygments syntax highlighters (see HelpOnParsers)\n\n  * Actions:\n    * SlideShow action added (please use the \"modernized\" theme [default])\n    * raw action mimetype support: ...?action=raw&mimetype=text/css\n    * PackagePages: create package file on-the-fly in memory and send it to the\n      client (do NOT create package.zip attachment)\n\n  * Improved logging / debugging / developer support:\n    * Main exception handler: include request url in log output.\n    * Environment variable MOIN_DEBUGGER=off/web/external (default is \"off\").\n    * Handle wikiserverconfig(_local) in the same way as wikiconfig(_local).\n\n  * GUI editor: improved attachment dialog\n\n  * \"moin ... account homepage\" script to create user homepages.\n\n\n  Removed features: ==========================================================\n  * Removed cfg.traceback_* settings (use logging configuration)\n  * Removed old session code and settings:\n    * Removed cfg.session_handler and session_id_handler (use cfg.session_service)\n    * Removed cfg.anonymous_session_lifetime (use cfg.cookie_lifetime)\n\n\n  Bug fixes: =================================================================\n  * Xapian indexing:\n    * Rely on xapian's locking (remove moin's additional and sometimes broken\n      locking, that blocked index-rebuilds or updates sometimes).\n    * Removed indexer threading.\n    * Fixed (reimplemented) indexer queue.\n    * Less disruptive xapian index rebuild.\n  * AdvancedSearch: example didn't work, fixed\n\n  * With the groups/dicts code rewrite, we fixed the caching problems that the\n    old code (< 1.9) sometimes had.\n\n  * Actions:\n    * Abort RenamePage if renaming of main page fails (do not try to rename\n      subpages).\n    * AttachFile do=view: quote filename and pagename params for EmbedObject\n      macro call\n    * unsubscribe action: add msg types so icons get displayed\n\n  * Parsers:\n    * fixed MoinMoinBugs/LineNumbersWorkingBuggyWithHighlightParser\n\n  * GUI editor: roundtripping works now for .pdf/doc/... attachment transclusion\n\n  * AttachFile: added remove_attachment() and FileRemovedEvent (mail and xapian\n    support, no jabber support yet).\n\n  * Fix makeForbidden403() calls - is makeForbidden(403, ...) now.\n  * sendmail: add more debug logging, check for empty recipients list\n  * Fix MoinMoinBugs/MissingPageShouldn'tOfferToCreatePageForReadonlyUsers\n  * Fix MoinMoinBugs/1.6XmlRpcPutPagePagenameEscape\n  * Bug with \"language:en\" was fixed for the Moin search. Now language:\n    behaves like described on HelpOnSearching.\n  * Fixed MoinMoinBugs/DeprecatedIsNotRespected (search ranking, WantedPages).\n  * OpenID: always return error messages with CancelLogin if OpenID process fails.\n  * suid: simplify and fix, bigger selection box\n\n  * patch werkzeug 0.5.1 to catch OverFlowError and ValueError so it doesn't\n    crash when receiving invalid If-modified-since header from client.\n\n\n  Other changes: =============================================================\n  * 'modernized' theme:\n    * use it by default (1.8 used 'modern')\n    * move title_with_separators() from Modernized theme to ThemeBase\n    * add a span with \"pagepath\" class to title_with_separators\n  * add the sidebar() method from Mandarin and Gugiel themes to ThemeBase\n  * updated flup to 1.0.2+ ( http://hg.saddi.com/flup-server/rev/6ea1ffac1bcb )\n  * updated pygments to 1.1.1+ ( http://dev.pocoo.org/hg/pygments-main/rev/948f8885af16 )\n  * updated parsedatetime to 0.8.7\n  * increase surge protection limits for AttachFile to avoid trouble with image galleries\n  * HINT: simplify wikiserver configuration by using same names as werkzeug's\n    run_simple() call.\n  * Removed moin account check's --lastsaved option, it is default now\n    (checking last use with trail file did not work in 1.9 anyway).\n  * ImageLink page has been killed (ImageLink macro is gone since 1.6.1).\n  * Allowed disabling of timezone and language user prefs if they are\n    part of the user's login fields (i.e. OpenID SREG).\n  * Added option to disable local registration links and direct user\n    to registration page at an OpenID provider instead.\n\n  Developer notes: ===========================================================\n  * groups and dicts API changes:\n    * request.groups and request.dicts provide access to groups and dicts.\n    * MoinMoin.wikidicts is gone, please use MoinMoin.datastruct.\n    * LazyGroup and LazyGroupsBackend base classes for implementing backends\n      which potentially deal with huge amounts of data (like a LDAP directory).\n      Use MoinMoin/datastruct/backends/config_lazy_groups.py as a draft for\n      new backends.\n    * See http://moinmo.in/Groups2009 for more details.\n  * i18n: new approach for defining sets of system/help pages (see i18n.strings).\n    CheckTranslation, page packager, wikiutil.isSystemPage() use those sets.\n  * killed deprecated macro.form attribute (didn't work as expected anyway due\n    to WSGI refactoring) - please use macro.request.{args,form,values}\n\n\nVersion 1.8.8:\n  Fixes:\n    * Fixed XSS issues (see MoinMoinBugs/1.9.2UnescapedInputForThemeAddMsg).\n    * Fixed XSS in Despam action (CVE-2010-0828).\n    * wikiutil.clean_input: avoid crash if it gets str type\n    * Add RenderAsDocbook to actions_excluded if we have no python-xml\n    * AttachFile._build_filelist: verifies readonly flag for unzip file link\n    * attachUrl: fix wrongly generated tickets (e.g. for AttachList macro)\n    * MoinMoin.util.filesys.dc* (dircache can't work reliably):\n      * disable usage of dircache, deprecate dc* functions\n      * remove all calls to filesys.dc* (dclistdir, dcdisable)\n    * Fixed crash, see MoinMoinPatch/IncludeMacroWithDocBookFormatter\n    * Avoid hardly recoverable crashes if #format specification is invalid\n\n  New features:\n    * auth.ldap_login: add report_invalid_credentials param to control wrong\n      credentials error message (typically used when using multiple ldap\n      authenticators)\n\n\nVersion 1.8.7:\n  Fixes:\n  * Fixed major security issues in miscellaneous parts of moin.\n    HINT: if you have removed superuser configuration to workaround the issue\n    (following our security advisory), you may re-add it after installing this\n    moin release. If you don't need superuser capabilities often, it might be\n    wise to not have superusers configured all the time, though.\n  * Improved package security: cfg.packagepages_actions_excluded excludes\n    unsafe or otherwise questionable package actions by default now.\n  * wiki parser: fixed transclusion of (e.g. video) attachments from other\n    pages.\n  * Fixed edit locking for non-logged in editors and cfg.log_remote_addr=False.\n  * xmlrpc:\n    * Process attachname in get/putAttachment similarly.\n    * revertPage: convert pagename to internal representation.\n  * Fixed config.umask usage for page packages.\n  * Fixed usage of i18n.wikiLanguages() on class level (moved to method),\n    failed when tools import the module (e.g. pydoc -k foo).\n  * SubProcess: fixed win32-specific parts, fixed imports (fixes calling of\n    external xapian index filters)\n\n\nVersion 1.8.6:\n  Bug fixes:\n  * Xapian indexing / indexing filters:\n    * fix deadlocks with well- and misbehaving external filters\n    * work around indexing run crashing when encountering encoding problems\n      with non-ascii filenames\n    * OpenOffice/OpenDocument filters: catch UnicodeDecodeErrors (happens\n      with password protected files)\n  * i18n: check if languages is not initialized yet, don't crash\n  * http_redirect: use 301 redirect for some cases\n  * do not use httponly session cookies, makes trouble with twikidraw and ACLs\n  * GetText2 macro: fix for named placeholder\n  * Fix SHA -> SSHA password hash upgrade for old user profiles.\n  * abort RenamePage if renaming of main page fails (do not try to rename\n    subpages)\n\n  New features:\n  * search: improve search result ordering\n  * add MS Powerpoint indexing filter (needs catppt from catdoc package)\n  * migration scripts: make finding damaged edit-log entries easier\n  * SubscribeUser action: support username regexes and unsubscribing.\n    Usage (enter this into the input form field you get after invoking\n    SubscribeUser action from the \"More Actions\" menu:\n    [+|-][re:]username[,username,...] \n\n    +username: subscribes user <username> (+ is optional/default)\n    -username: unsubscribes user <username>\n    +re:username_re: subscribes users who match <username_re> regex.\n    -re:username_re: unsubscribes users who match <username_re> regex.\n\n\nVersion 1.8.5:\n  Bug fixes:\n    * Attachment links: fix processing of attributes (e.g. 'target', 'title')\n    * Upgrade FCKeditor from 2.6.4 to 2.6.4.1.\n    * PDF embedding: fix html, works better with PDF browser plugins now.\n    * Fix typo in rightsidebar CSS.\n    * Action revert: avoids reverting to a deleted current revision.\n    * Action diff: enable prev/next button only in the range of given revisions.\n    * Add a Auto-Submitted: auto-generated header to generated mails.\n    * Include comment in email notifies.\n    * mailimport: fix endless looping while trying to import a forwarded mail.\n    * fuid: keep same fake_mtime for intervals of max_staleness duration.\n    * Fixes a bug with empty list items in the GUI editor.\n    * Improve filesys.rename compatibility code (win32).\n    * Fix locking for CacheEntry.\n    * Xapian indexing: catch exception when a bad zip file is encountered.\n    * openidrp / botbouncer: fix param count for CancelLogin().\n\n  New features:\n    * Added CAS authentication.\n    * Added httponly cookie support and use it for session cookie.\n\n  Other changes:\n    * HTTP auth: added debug logging.\n    * Minor LDAP auth improvements.\n    * Data browser widget:\n      * Add (h)column<idx> css class to make it styleable.\n      * Include only necessary autofilter options.\n    * moin maint cleancache purges now drafts, too.\n    * Add gopher and apt protocols to url_schemas.\n    * Add .csv, .flv, .swf to MIMETYPES_MORE.\n\n\nVersion 1.8.4:\n  Bug fixes:\n    * ACL security: fix bug in hierarchical ACL processing, more restrictive\n      sub page ACLs did not work if the current user name did not give a match\n      within the sub page ACL (instead, the less restrictive parent page ACL\n      was used).\n      Non-hierarchical ACL processing (the default) is NOT affected.\n    * Creole parser: fix spaces in multiline elements.\n    * Use msie.css only for Internet Explorer older than version 8, fixes\n      e.g. the double rendering of link icons.\n    * http auth: do auth_type comparisons case-insensitively (spec-compliant)\n\n  New features:\n    * EmbedObject macro: changed default width value for PDF files to 100%\n                         (use a recent Adobe Reader to make this work).\n    * CopyPage action: added a TextCha for it\n\n  Other changes:    \n    * Creole parser: Add second license: BSD\n\n\nVersion 1.8.3:\n  Bug fixes:\n    * AttachFile XSS fixes: move escaping to error_msg / upload_form\n    * AttachFile move: add more escaping (maybe not XSS exploitable though)\n    * email attachments import with xapian indexing enabled: fix AttributeError\n    * fix wrong links in attachment notifications\n    * AttachFile do=view: quote filename and pagename params for EmbedObject\n      macro call\n    * AttachFile: fix exception when someone just clicks on upload, without\n      giving a file\n    * ldap_login: use None as default value for ssl certs/keys (using '' for\n      the pathes lets it fail with Connect Error)\n    * release edit lock if someone saves an unchanged page\n    * fix sendmail.encodeAddress (do not [QP] encode blanks, do not un-\n      necessarily use [QP] encoding for pure ascii mail addresses)\n    * Fixed docs bug: see HINT about secrets configuration at version 1.8.0\n      (1.8.0 Other changes).\n    * backup action: add 'self' dummy argument for backup_exclude function\n    * login action: fix formatting of error messages\n    * unsubscribe action: add msg types so icons get displayed\n    * fix quoting for pagehits stats (info action) - was not working for pagenames with blanks\n    * macro.TableOfContents: bug fix for MoinMoinBugs/TableOfContentsIgnoresSectionNumbersPragma\n\n  New features:\n    * added modernized_cms theme\n    * use url_prefix_fckeditor if you don't want to use the builtin FCKeditor\n      of moin, but a separate one at some specific url\n    * action.Load: added textcha feature\n    * add mumble protocol (nice and good quality F/OSS VOIP conference chat sw)\n    * ldap auth: new name_callback param to create a custom wiki username (not\n      the ldap login username).\n\n  Other changes:\n    * add compatibility code for set to xapwrap.index (fix py 2.6 warnings)\n    * wikiutil: MIMETYPES_MORE extended for .md5 as text/plain\n\n\nVersion 1.8.2:\n  Bug fixes:\n    * Fix AttachFile and antispam XSS issues.\n    * Modernized, modern and rightsidebar themes: make nonexistent or\n      badinterwiki links gray also when they are already visited.\n    * Fix anchor parsing for interwiki links and #redirect processing\n      instruction.\n    * user.apply_recovery_token: key must be of type string (for Python 2.6).\n    * Fix MoinMoinBugs/GuiEditorBreaksIndentedTable.\n    * Fix autofilter javascript breakage caused by including a databrowser\n      widget.\n    * Use per-wiki i18n cache (fixes wrong links to other farm wikis).\n    * Made cfg.interwikiname and cfg.user_homewiki unicode objects (str only\n      worked for ascii names).\n    * Xapian search: fixed historysearch.\n    * Xapian search indexing:\n      * Fix index updating for trivial changes.\n      * With history search enabled and in update mode, do not try to re-index\n        old page revisions again.\n      * With history search enabled, index page attachments only once.\n      * Fix last modified time of xapian index (shown on SystemInfo page).\n    * Make logging handlers defined in logging.handlers work (e.g.\n      class=handlers.RotatingFileHandler)\n    * Jabber notifications:\n      * Use an RFC compliant message type.\n      * Fix user creation notifications.\n    * OpenID: Compatibility fix for python-openid 2.x.x (also works with\n      1.x.x), fixes crash when trying to associate moin user to OpenID.\n    * Have a wikiserverconfig.py in wiki/server/ so setup.py copies it.\n    * Fixed inconsistent handling of fragments / anchor IDs:\n      * Fixed creole and wiki parser, other parsers might need similar fixes.\n      * IDs with blanks, non-ASCII chars etc. are now sanitized in the same way\n        for links as well as for link targets, so the user editing a page won't\n        have to bother with it.\n        E.g. [[#123 foo bar]] will link to:\n        * <<Anchor(123 foo bar)>> (moin) or {{#123 foo bar}} (creole)\n        * headline = 123 foo bar = (moin / creole)\n        Simple rule: if the link and the target are consistent, it should work.\n      * The creole wiki parser created non-human-readable sha1 heading IDs\n        before 1.8.2, now it creates same (sometimes readable) heading IDs as\n        the moin wiki parser.\n      * TitleIndex/WordIndex now also use IDs sanitized in that way internally.\n      HINT: if you manually worked around the inconsistencies/bugs before, you\n            likely have to remove those workarounds now. Same thing if you used\n            creole's sha1 heading IDs or IDs on TitleIndex/WordIndex.\n\n  Other changes:\n    * Updated FCKeditor to 2.6.4 (== many bug fixes in the GUI editor).\n    * Enhanced privacy by a new setting: cfg.log_remote_addr (default: True),\n      it controls whether moin logs the remote's IP/hostname to edit-log and\n      event-log. Use log_remote_addr = False to enhance privacy.\n    * Streamline attachment_drawing formatter behaviour.\n    * Search results: only redirect to a single search result for titlesearch\n      (fuzzy goto functionality), but not for fulltext search results.\n\n\n\nVersion 1.8.1:\n  Bug fixes:\n    * Workaround win32 locking problems (caused by spurious access denied\n      exceptions on that platform).\n    * Fix unicode errors that happened when password checker failed a password\n    * WikiConfig/WikiConfigHelp: fixed wrong language table headings\n    * Themes: make the margins around trail line work properly\n    * \"modernized\" theme:\n      * make broken links gray\n      * add new right/center/left/justify css classes\n      * don't force Arial\n    * Standalone server: be more specific when catching socket exceptions,\n      treat socket errors in http header emission in the same way.\n    * GUI editor:\n      * Fix heading levels when inserting new headings.\n      * Fix headers already sent exception when using e.g. edit LOCKing.\n    * Xapian indexing: fixed missing import for execfilter (only happened on\n      non-posix platforms like win32)\n\n  * New features:\n    * Themes:\n     * Make the TOC shrinkwrap, add white background to navigation macro.\n       The table of contents looked bad spanning the whole width of the page.\n       It's made to shrinkwrap now, so it will only get as wide, as the longest\n       heading. We use display:inline-table, so this won't work in MS IE6,\n       which still displays it the old way.\n       Navigation macro now has a white background, to make it more readable\n       when it's floating over a pre block or TOC.\n     * Make the numbers in lists in table of contents right-aligned.\n     * Refactored and extended theme.html_stylesheets() to make alternate\n       stylesheets possible. Stylesheet definitions now can either be:\n       2-tuples: (media, href)  # backwards compatibility\n       or:\n       3-tuples: (media, href, title)  # new, for defining alternate stylesheets\n       This works within themes as well as in the wiki config.\n       See also: http://www.w3.org/Style/Examples/007/alternatives.html\n\n\nVersion 1.8.0:\n  Note: This is a reduced CHANGES, ommitting details from rc/beta test and\n        also less interesting minor changes and fixes. It shows changes\n        relative to 1.7.2 release.\n        If you want to see full detail, read it there:\n        http://hg.moinmo.in/moin/1.8/file/6130eab15936/docs/CHANGES\n\n  New Features: ==============================================================\n    * HINT: New \"modernized\" theme - if you use \"modern\" [default], try:\n      theme_default = 'modernized'\n      If you find problems with \"modernized\", please report them because we\n      want to use it as default theme in future.\n    * GUI Editor:\n      * upgraded to use FCKEditor version 2.6.3\n      * user can insert and modify various types of MoinMoin links\n    * New plugin_dirs setting to allow multiple plugin pathes (additional to\n      the automatically configured plugin_dir [default: data_dir/plugin]).\n    * @EMAIL@ expands to a MailTo macro call with the obfuscated email address\n      of the current user.\n    * New macros \"WikiConfig\" and \"WikiConfigHelp\".\n    * Per-parser quickhelp, 'quickhelp' class variable of parser class.\n    * Secure session cookies for https (see cfg.cookie_secure).\n    * Added left/center/right/justify css classes to builtin themes.\n      Use them like:\n      {{{#!wiki justify\n      this content is justified....\n      }}}\n\n  Removed Features: ==========================================================\n    * HINT: url_prefix setting (use url_prefix_static or just use the default)\n    * traceback_log_dir setting (we just use logging.exception)\n    * editor_quickhelp setting (replaced by per-parser quickhelp)\n    * Restoring backups with the backup action and related settings (while\n      creating backups is no big issue and should work OK, restoring them\n      had fundamental issues related to overwriting or not-overwriting of\n      existing files - thus we removed the \"restore\" part of the action and\n      recommend that you just contact the wiki server admin in case of trouble,\n      give him your wiki backup file and let him carefully restore it.)\n    * Removed unmaintained DesktopEdition (moin 1.5.x style) and phpwiki\n      migration scripts from contrib/ directory.\n\n  Bug Fixes: =================================================================\n    * GUI Editor - fixed lots of bugs.\n    * Fixing https detection for servers using HTTPS=1 and also for WSGI\n      servers not using HTTPS/SSL_ environment, but just wsgi.url_scheme.\n    * Search results: link to 'view' rendering of found attachments.\n    * Standalone server: fix serverClass and interface argument processing,\n      announce used serverClass in log output.\n    * mointwisted: fixed Twisted start script.\n    * Logging:\n      * Use logging framework for messages emitted by warnings module (e.g.\n        DeprecationWarning), silence some specific warnings.\n      * Removed superfluous linefeeds in timing log output.\n    * Bug fix for language not installed (MoinMoinBugs/WikiLanguageNotDefined).\n    * Fixed editbar hidden comment link cosmetics for sidebar themes (hide the\n      complete list element).\n    * MoinMoinBugs/DoubleScriptNameInSitemap (fixing urls given by sitemap\n      action, if the wiki does not run in the root url of the site)\n    * Fixed backup action configuration (broke on win32).\n    * Fixed MoinMoinBugs/PackagesAddRevision.\n    * SyncPages: add workaround for callers calling log_status with encoded\n      bytestrings.\n    * Fixed dbw_hide_buttons javascript.\n    * HINT: Jabber bot can now be configured to use an authentication realm\n      which is different from the server's hostname; the xmpp_node\n      configuration parameter can now contain a full JID and the xmpp_resource\n      parameter is no longer supported.\n\n  Other Changes: =============================================================\n    * HINT: new configuration for misc. secrets, please use either:\n          secrets = \"MySecretLooongString!\" # one secret for everything\n      or:\n          secrets = {\n              'xmlrpc/ProcessMail': 'yourmailsecret', # for mailimport\n              'xmlrpc/RemoteScript': 'yourremotescriptsecret',\n              'action/cache': 'yourcachesecret', # unguessable cache keys\n              'wikiutil/tickets': 'yourticketsecret', # edit tickets\n              'jabberbot': 'yourjabberbotsecret', # jabberbot communication\n          }\n      Secret strings must be at least 10 chars long.\n      Note: mail_import_secret setting is gone, use\n            secrets[\"xmlrpc/ProcessMail\"] instead of it.\n      Note: jabberbot secret setting is gone, use\n            secrets[\"jabberbot\"] instead of it.\n    * HINT: user_autocreate setting was removed from wiki configuration and\n      replaced by a autocreate=<boolean> parameter of the auth objects that\n      support user profile auto creation.\n    * moin import irclog: use irssi parser to format logs, mapped .irc\n      extension to text/plain mimetype.\n    * HINT: backup action: backup_exclude (default: \"do not exclude anything\")\n      is now a function f(filename) that tells whether a file should be\n      excluded from backup.\n      You can get the old regex exclusion functionality by using:\n      backup_exclude = re.compile(your_regex).search\n      Be careful with your regex, you might need to use re.escape() to escape\n      characters that have a special meaning in regexes (e.g.: \\.[] etc.).\n      If in doubt, maybe just leave backup_exclude at the default and don't\n      exclude anything.\n    * Speed up javascript comments processing on IE by getElementsByClassName()\n    * Added sk (slovak) i18n, updated i18n.\n\n\n1.7.3:\n  New features:\n    * Secure session cookies for https, see cfg.cookie_secure.\n    * Add left/center/right/justify classes to builtin themes.\n\n  Fixes:\n    * Python 2.3 compatibility fixes.\n    * Fixed https detection for servers using HTTPS=1 and also for wsgi servers\n      not using HTTPS/SSL_ environment, but just wsgi.url_scheme.\n    * GUI editor:\n      * Fix crash when editing a page with non-ASCII pagename and inserting a link\n      * Fix \"headers already sent exception\" with edit LOCKs.\n    * i18n.__init__: Bug fix for wiki language not installed.\n    * Fixed URLs given by sitemap action, if the wiki does not run at / URL.\n    * Search results: link to 'view' rendering of found attachments\n    * Logging:    \n      * Removed superfluous linefeed in timing log output.\n      * Use logging framework for messages emitted by warnings module (e.g.\n        DeprecationWarning), silence some specific warnings.\n    * Fix dbw_hide_buttons javascript.\n    * Standalone server:\n      * fix serverClass argument processing\n      * fix --interface=\"\" argument processing\n    * mointwisted:\n      * added missing pidFile parameter\n      * better use Config.name for pidFile to avoid conflicts and keep same\n        behaviour as in the past\n    * Jabber bot can now be configured to use an authentication realm which\n      is different from the server's hostname\n\n\nVersion 1.7.2:\n  Fixes:\n    * Fix leakage of edit-log file handles (leaked 1 file handle / request!).\n    * Fix for MoinMoinBugs/SystemAdminMailAccountData (using POST and forms)\n    * Wiki parser: avoid IndexError for empty #! line\n    * MonthCalendar macro: fix parameter parsing / url generation\n    * Xapian indexing filters (MoinMoin/filter/ or data/plugin/filter/):\n      Some indexing filter scripts (e.g. for MS Word documents or PDF files)\n      failed on windows because of the single-quote quoting we used (that\n      works on Linux and other Posix systems). The fix introduces platform-\n      dependant automatic quoting, using double-quotes on win32 and single-\n      quotes on posix.\n      HINT: if you use own filter plugins based on execfilter, you have to\n      update them as the filename quoting (was '%s') is now done automatically\n      and must not be part of the command string any more (now just use %s).\n      See MoinMoin/filter/ for some up-to-date code (esp. the PDF filter).\n    * Prevent CategoryTemplate being listed as a category (it is a Template,\n      but matched also the category regex) - added to sample wikiconfig.\n    * LDAP auth: fix processing of TLS options\n    * UpdateGroup xmlrpc server side: fix wrong arg count error\n    * UpdateGroup client: use multicall / auth_token, refactor code so that\n      updateGroup function is reusable.\n    * Improve Python 2.3 compatibility, add notes where 2.4 is required.\n\n\nVersion 1.7.1:\n  New features:\n    * New 'cache' action (see developer notes).\n\n  Fixes:\n    * Security fix: XSS fix for advanced search form\n    * Avoid creation of new pagedirs with empty edit-log files by just\n      accessing a non-existant page. If you used 1.7 before, you likely have\n      quite some trash pagedirs now and you can clean them up by using:\n      moin --config-dir=... --wiki-url=... maint cleanpage\n      This will output some shell script (please review it before running!)\n      that can be used to move trash pages into some trash/ directory and also\n      moves deleted pages into some deleted/ directory. Maybe keep a copy of\n      those directories for a while just for the case.\n    * Server specific fixes:\n      * standalone (wikiserver.py): fix --pidfile and --group option, fix\n        operation without a wikiserverconfig.py (use builtin defaults).\n      * mod_python: work around mod_python 3.3.1 problems with file uploads.\n        Note: if you are still using mod_python, we strongly recommend you\n\t      try out mod_wsgi (in daemon mode) - it has less bugs, better\n\t      security, better separation, WSGI is a Python standard, and moin\n\t      developers also use WSGI. See HelpOnInstalling/ApacheWithModWSGI.\n    * revert action: fixed for deleted pages.\n    * Search:\n      * Xapian indexing: Removed crappy \"hostname\" tokenization.\n        Fixes MoinMoinBugs/1.7 XapianNotWorkingWithLeadingNumbersInTitle.\n        Also tokenize CamelCase parts of non-wikiwords.\n      * Make query parser reject more invalid input.\n      * If query parsing raises a BracketError, at least tell what the problem\n        is (and not just raise empty  ValueError).\n      * Category search: ignore traling whitespace after ----\n    * Argument parser:\n      * Fixed sort() usage in UnitArgument to be Python 2.3 compatible.\n      * Fixed MoinMoinBugs/TypeErrorInWikiutils.\n    * Macros:\n      * TableOfContents: skip outer-most <ol> levels when page isn't using\n        the biggest headings\n      * MonthCalendar: fix MoinMoinBugs/MonthCalendarBreaksOnApostrophe\n    * xslt parser: fix MoinMoinBugs/DoNotConvertUnicodeToUTF8ForXsltParser\n    * OpenID RP: make it compatible to python-openid 2.2.x\n    * PackagePages.collectpackage: removed encoding from file name of zipfile\n    * Surge protection: exclude localnet no matter whether user is known or not.\n    * Notifications: fix MoinMoinBugs/DuplicateNewUserNotification\n    * Script moin account create/disable/resetpw: checks for already existing\n      user now.\n\n  Other changes:\n    * Prevent CategoryTemplate being listed as a category (it is a Template)\n      by changing the default page_category_regex.\n\n  Developer notes:\n    * New MoinMoin.action.cache - can be used to cache expensively rendered\n      output, e.g. generated images). Once put into the cache, moin can emit\n      a http response for that content very fast and very efficient (including\n      \"304 not changed\" handling.\n    * New file-like API in MoinMoin.caching (good for dealing with medium\n      to large files without consuming lots of memory).\n    * wikiutil.importPlugin supports getting the whole plugin module object\n      by giving function=None.\n\n\nVersion 1.7.0:\n  Note: This is a reduced CHANGES, ommitting details from rc/beta test and\n        also less interesting minor changes and fixes. It shows changes\n        relative to 1.6.3 release.\n        If you want to see full detail, read it there:\n        http://hg.moinmo.in/moin/1.7/file/76265568e8d3/docs/CHANGES\n\n  New Features: ==============================================================\n    * HINT: we added generic UPDATE instructions as docs/UPDATE.html.\n\n    * HINT: Standalone server usage changed:\n      * Standalone server can now be started via the \"moin\" script command,\n        optionally backgrounding itself.\n        See: moin server standalone --help\n      * In the toplevel dir, we have renamed moin.py to wikiserver.py (it was\n        often confused with the moin scripting command).\n        Now you have:\n        * wikiserver.py - to start the standalone server\n        * wikiserverconfig.py - to configure the standalone server\n        * wikiserverlogging.conf - to configure logging for it (default config\n          is ok for all day use, but can easily be modified for debugging)\n        * wikiconfig.py - to configure the wiki engine\n      * Removed old moin daemonizing script (replaced by moin server standalone\n        --start/stop)\n      * We now provide the \"moin\" script command also for people not using\n        setup.py, see wiki/server/moin.\n\n    * Logging\n      * New powerful and flexible logging, please see wiki/config/logging/ -\n        HINT: you have to upgrade your server adaptor script (e.g. moin.cgi)\n        and load a logging configuration that fits your needs from there, or\n        alternatively you can also set MOINLOGGINGCONF environment variable\n        to point at your logging config file.\n        If you use some of our sample logging configs, make sure you have a\n        look INTO them to fix e.g. the path of the logfile it will use.\n      * Moin now logs the path from where it loaded its configuration(s).\n\n    * Authentication / Sessions:\n      * HINT: New authentication plugin system, see HelpOnAuthentication. If\n        you do not use the builtin default for 'auth' list, you likely have to\n        change your configuration. See wiki/config/snippets/ for some samples.\n      * HINT: New session handling system (no moin_session any more, now done\n        internally and automatically), see HelpOnSessions for details.\n      * Added OpenID client and server support.\n        See: HelpOnAuthentication and HelpOnOpenIDProvider.\n      * cfg.trusted_auth_methods is a list of auth methods that put an\n        authenticated user into the \"Trusted\" ACL group.\n\n    * User profiles / password recovery / notification:\n      * New newacount action for creating new user accounts/profiles. If you\n        don't want users creating new accounts on their own, you can add this\n        action to actions_excluded list.\n      * New recoverpass action for password recovery:\n        If you forgot your password, recoverpass sends you an email with a\n        password recovery token (NOT the encrypted password) that is valid\n        for 12 hours.\n      * New moin account resetpw script for resetting a user's password by\n        the wiki admin.\n      * New preferences plugin system, see MoinMoin/userprefs/__init__.py.\n      * New notification system with an optional jabber notification bot, see\n        HelpOnNotification. HINT: wiki users have to check their notification\n        settings, esp. if they want to receive trivial update notifications.\n\n    * The diff action now has navigation buttons for prev/next change and also\n      a revert button to revert to the revision shown below the diff display.\n    * ThemeBase: support Universal Edit Button, see there for details:\n      http://universaleditbutton.org/\n    * ?action=info&max_count=42 - show the last 42 history entries of the page.\n      max_count has a default of default_count and a upper limit of\n      limit_max_count - you can configure both in your wiki config:\n      cfg.history_count = (100, 200) # (default_count, limit_max_count) default\n    * The CSV parser can sniff the delimiter from the first CSV line so other\n      delimeters than \";\" can be used.\n    * Admonition support. Added styling for tip, note, important, warning \n      and caution in the modern theme. For more info see HelpOnAdmonitions.\n    * DocBook-formatter:\n      * supports HTML entities like &rarr; and &#9731;\n      * supports the FootNote macro\n      * supports bulletless lists\n      * support for admonitions\n      * will export the wiki page's edit history as the generated article's\n        revision history. Doesn't add history of included pages.\n      * supports for the MoinMoin comment element, though only inline comments\n        are likely to be valid since the DocBook remark is an inline element.\n    * New Hits macro: shows the total hits for the page it is used on.\n\n  Removed Features: ==========================================================\n    * HINT: Removed attachments direct serving (cfg.attachments - this was\n            deprecated since long!). Use AttachFile action to serve attachments.\n    * Duplicated file attachment upload code was removed from Load action (just\n      use AttachFile action to deal with attachments).\n    * Removed 'test' action. If you like to run unit tests, use py.test.\n    * Removed Login macro.\n\n  Bug Fixes: =================================================================\n    * Better handling of ImportErrors (farmconfig, macros, wikiserverconfig).\n    * Fix failure of detection of on-disk cache updates.\n    * Fix traceback in filesys.py on Mac OS X when \"import Carbon\" fails.\n\n    * AttachFile action / file up- and download / zip support:\n      * WSGI: use wsgi.file_wrapper (or a builtin simple wrapper). Fixes memory\n        consumption for sending of large file attachments.\n      * FastCGI: flush often. Fixes memory consumption for sending of large\n        file attachments.\n      * Use the open temporary file for receiving file attachment uploads\n        (fixes big memory consumption for large file uploads).\n      * Catch runtime errors raised by zipfile stdlib modules when trying to\n        process a defective zip.\n      * When unzipping member files, decode their filenames from utf-8 and\n        replace invalid chars.\n      * Make error msg less confusing when trying to overwrite a file attachment\n        without having 'delete' rights.\n\n    * HINT: page_*_regex processing had to be changed to fix category search.\n      If you don't use the builtin (english) defaults, you will have to change\n      your configuration:\n        old (default): page_category_regex = u'^Category[A-Z]'\n        new (default): page_category_regex = ur'(?P<all>Category(?P<key>\\S+))'\n      As you see, the old regex did work for detecting whether a pagename is\n      a category, but it could not be used to search for a category tag in the\n      page text. The new regex can be used for both and identifies the complete\n      category tag (match in group 'all', e.g. \"CategoryFoo\") as well as the\n      category key (match in group 'key', e.g. \"Foo\") by using named regex\n      groups. \\S+ means the category key can be anything non-blank.\n      If you like to simultaneously support multiple languages, use something\n      like this: ur'(?P<all>(Kategorie|Category)(?P<key>\\S+))'\n      HINT: after changing your configuration, please rebuild the cache:\n        * stop moin\n        * moin ... maint cleancache\n        * start moin\n      If you don't do this, your groups / dicts will stop working (and also\n      your ACLs that use those groups). You better do a test whether it works.\n\n    * Xapian search / indexing / stemming:\n      * Use text/<format> as mimetype for pages.\n      * Index also major and minor for mimetypes, so it will find 'text' or\n        'plain' as well as 'text/plain'\n      * Fix searching for negative terms.\n      * Improve result list ordering.\n      * Index filters: redirect stderr to logging system.\n      * Remove crappy num regex from WikiAnalyzer, improve tokenization.\n      * Fix AttributeError that happened when trying to access an attribute only\n        used with xapian search (but regex search is not done by xapian)\n      * Fix IndexErrors happening when pages are renamed/nuked after the index\n        was built.\n      * Fixed indexing of WikiWords (index \"WikiWords\", \"Wiki\" and \"Words\").\n      * Fix crash if default language is un-stemmable.\n      * xapian_stemming: removed some strange code (fixes search\n        title:lowercaseword with xapian_stemming enabled)\n      * Fixed category indexing (index CategoryFoo correctly as CategoryFoo, not\n        Foo - for all languages, see page_*_regex change above).\n    * Builtin search: support mimetype: search for pages for the builtin search\n      engine (using text/<format>).\n\n    * Parser fixes:\n      * Wiki: fix subscript parsing (was broken for cases like 'a,,1,2,,').\n      * Docbook: fixed detection of WikiWords.\n      * All: Add ssh protocol to url_schemas for ssh:... URLs.\n\n    * XMLRPC:\n      * Fix xmlrpc request.read() call to use content-length, if available,\n        fixes hangs with wsgiref server.\n      * Wiki xmlrpc getPageInfoVersion() fixed:\n        * works correctly now for old page versions (was unsupported)\n        * works correctly now for current page version (reported wrong\n          data when a page had attachment uploads after the last page\n          edit)\n        * returns a Fault if it did not find a edit-log entry\n\n  Other Changes: =============================================================\n    * Using better ACLs and comments on system/help pages now, just taking\n      away 'write' permission, but using default ACLs for everything else.\n    * HINT: If you want to use xapian based indexed search, you need to have\n      Xapian >= 1.0.0 (and you can remove PyStemmer in case you have installed\n      it just for moin - we now use the stemmer built into Xapian as it\n      supports utf-8 since 1.0.0).\n    * Changed default value of cfg.search_results_per_page to 25.\n    * Surge Protection: If a user is authenticated by a trusted authentication\n      (see also cfg.auth_methods_trusted) then he/she won't trigger surge\n      protection, but moin will just log a INFO level log msg with the user's\n      name so you can find the culprit in case he/she is overusing ressources.\n    * HINT: Added MyPages and CopyPage to actions_excluded because MyPages\n      doesn't work without special SecurityPolicy anyway and CopyPage has\n      questionable behaviour.\n    * Load action now just creates a new revision of the target page, the\n      target pagename defaults to the current page name and can be edited.\n      If the target pagename is empty, moin tries to derive the target pagename\n      from the uploaded file's name.\n      Load tries to decode the file contents first using utf-8 coding and, if\n      that fails, it forces decoding using iso-8859-1 coding (and replacing\n      invalid characters).\n    * HINT: cfg.show_login is gone, see code in theme/__init__.py, this may\n      affect many themes!\n    * HINT: a new userprefs/ plugin directory will be created by the usual\n      \"moin migration data\" command.\n    * DocBook-formatter:\n      * generates a valid DOCTYPE\n      * table support has been improved\n      * handling of definitions and glossaries is more robust\n      * supports program language and line numbering in code areas\n    * HINT: ldap_login behaves a bit different now:\n      In previous moin versions, ldap_login tended to either successfully\n      authenticate a user or to completely cancel the whole login process in\n      any other case (including ldap server down or exceptions happening).\n      This made subsequent auth list entries rather pointless.\n      Now it behaves like this:\n        * user not found in LDAP -> give subsequent auth list entries a\n          chance to authenticate the user (same happens if it finds multiple\n          LDAP entries when searching - it logs an additional warning then).\n        * user found, but wrong password -> cancel login\n        * ldap server not reachable or other exceptions -> give subsequent\n          auth list entries a chance\n      So please make sure that you really trust every auth list entry you have\n      configured when upgrading or it might maybe change behaviour in a\n      unexpected or unwanted way.\n    * ldap_login now supports failover: if it can't contact your LDAP server\n      (e.g. because it is down or unreachable), it will just continue and\n      try to authenticate with other authenticators (if there are any in\n      cfg.auth list). So if you have some mirroring LDAP backup server, just\n      put another authenticator querying it there:\n          ldap_auth1 = LDAPAuth(server_uri='ldap://mainserver', ...)\n          ldap_auth2 = LDAPAuth(server_uri='ldap://backupserver', ...)\n          auth = [ldap_auth1, ldap_auth2, ]\n\n  Developer notes: ===========================================================\n    * Page.last_edit() is DEPRECATED, please use Page.edit_info().\n    * Page._last_edited() is GONE (was broken anyway), please use\n      Page.editlog_entry().\n    * New request.send_file() call, making it possible to use server-specific\n      optimizations.\n    * getText's (aka _()) 'formatted' keyword param (default: True in 1.6 and\n      early 1.7) was renamed/changed: it is now called 'wiki' and defaults to\n      False. Example calls:\n      _('This will NOT get parsed/formatted by MoinMoin!')\n      _('This will be parsed/formatted by MoinMoin!', wiki=True)\n      _('This will be used as a left side of percent operator. %s',\n        wiki=True, percent=True)\n    * Page.url 'relative' keyword param (default: True in 1.6 and early 1.7)\n      was changed to default False).\n    * The themedict no longer contains 'page_user_prefs' and 'user_prefs',\n      this may affect custom themes.\n    * The rst-parser's admonition class names are no longer prepended with\n      \"admonition_\". Instead the class names are now for example \"note\"\n      and not \"admonition_note\".\n\n\nVersion 1.6.3:\n  Fixes:\n    * Security fix: a check in the user form processing was not working as\n      expected, leading to a major ACL and superuser priviledge escalation\n      problem. If you use ACL entries other than \"Known:\" or \"All:\" and/or\n      a non-empty superuser list, you need to urgently install this upgrade.\n    * Security fix: if acl_hierarchic=True was used (False is the default),\n      ACL processing was wrong for some cases, see\n      MoinMoinBugs/AclHierarchicPageAclSupercededByAclRightsAfter\n    * For {{transclusion_targets}} we checked the protocol to be http(s),\n      this check was removed (because file: and ftp: should work also) and\n      it's not moin's problem if the user uses silly protocols that can't\n      work for that purpose.\n    * Fixed TableOfContents macro for included pages.\n    * server_fastcgi: added Config.port = None. If you want to use some port\n      (not a fd), you can set it now in your Config, e.g. port = 8888.\n    * category: search matches categories even if there are comment lines\n      between the horizontal rule and the real categories, e.g.:\n      ... some page text ...\n      ----\n      ## optionally some comments, e.g. about possible categories:\n      ## CategoryJustACommentNotFound\n      CategoryTheRealAndOnly\n\n      Note: there might be multiple comment lines, but all real categories\n            must be on a single line either directly below the ---- or\n            directly below some comment lines.\n  \n  Other changes:\n    * Added 'notes' to config.url_schemas, so you can use notes://notessrv/...\n      to invoke your Lotus Notes client.\n    * After creating a new user profile via UserPreferences, you are logged\n      in with that user (no need to immediately enter the same name/password\n      again for logging in).\n\n\nVersion 1.6.2:\n  Fixes:\n    * Security fix: check the ACL of the included page for the rst parser's\n      include directive.\n    * Potential security/DOS fix: we removed cracklib / python-crack support\n      in password_checker as it is not thread-safe and caused segmentation\n      faults (leading to server error 500 because the moin process died).\n    * Fix moin_session code for auth methods other than moin_login (e.g. http).\n      If you have worked around this using moin_anon_session, you can remove\n      this workaround now (except if you want anon sessions for other reasons).\n    * Fix moin_session code to delete invalid session cookies and also create\n      a new session cookie if it got a valid user_obj at the same time.\n    * Fix xmlrpc applyAuthToken: give good error msg for empty token.\n    * Fixed category search, use category:CategoryFoo as search term.\n    * xapian_stemming = False (changed default) to workaround some problems\n      in the code enabled by it. Fixes the problems when searching for\n      lowercase or numeric titles or word fragments with the builtin search.\n    * Fix trail for anon users without a session, do not show a single page.\n    * Fix MoinMoinBugs/WikiSyncComplainsAboutTooOldMoin.\n    * Wiki parser: fixed strange insertion of unwanted paragraphs.\n    * Wiki parser: fix interwiki linking:\n      Free interwiki links did not change since 1.5 (they still require to match\n      [A-Z][A-Za-z]+ for the wikiname part, i.e. a ASCII word beginning with an\n      uppercase letter).\n      Bracketed interwiki links now behave similar to how they worked in 1.5:\n      Moin just splits off the part left of the colon - no matter how it looks\n      like. It then tries to find that in the interwiki map. If it is found,\n      a interwiki link gets rendered. If it is not found, moin will render a\n      link to a local wiki page (that has a colon in the pagename). It will\n      also render a local wiki page link if there is no colon at all, of course.\n      Examples:\n      [[lowercasewikiname:somepage]] does an interwiki link (if in the map).\n      [[ABC:n]] does a local link to page ABC:n (if ABC is NOT in the map).\n    * Wiki parser: fix interwiki linking for the case that there are query args\n      in the interwiki map entry and you give additional query args via link\n      markup (uses correct query arg separator now), e.g.:\n      [[Google:searchterm|search this|&foo=bar]]\n    * Creole parser: fixed bug that prevents images inside links.\n    * Python parser: catch indentation error.\n    * PageEditor: fixed copyPage for write restricted pages.\n    * GUI editor: fixed javascript error with too complex word_rule regex,\n      see MoinMoinBugs/GuiEditorSyntaxError.\n    * Fixed FCKeditor dialog boxes for FireFox3.\n    * NewPage macro/newpage action: fixed for non-ascii template pagenames.\n    * FootNote macro: Fix MoinMoinBugs/FootNoteNumbering.\n    * EmbedObject macro: bug fix for image mimetype\n    * WSGI:\n      * fix TWikiDraw saving a drawing by also evaluating the query args.\n      * work around unpythonic WSGI 1.0 read() API, fixing broken xmlrpc\n        putPage with mod_wsgi\n    * Fix highlighting (see MoinMoinBugs/SearchForPagesWithComments).\n    * Fix logfile code for EACCESS errors.\n    * Removed the \"logging initialized\" log messages because it was issued once\n      per request for CGI.\n\n  Other changes:\n    * Show \"Comments\" toggling link in edit bar only if the page really\n      contains comments.\n    * Made default configuration of surge protection a bit more forgiving,\n      especially for edit action which is currently also used for previews.\n    * Updated i18n, system/help pages, added Macedonian system text translation.\n    * Improved moin xmlrpc write command's builtin docs and auto-append\n      ?action=xmlrpc2 to the target wiki url given.\n\n\nVersion 1.6.1:\n  New features:\n    * Improved params for [[target|label|params]]:\n      Added accesskey link tag attribute, e.g.: [[target|label|accesskey=1]].\n      Additionally to specifying link tag attributes (like class=foo), you can\n      now also specify &key=value for getting that into the query string of\n      the link URL.\n      The \"&\" character is important, don't forget it or it won't get into the\n      query string!\n      E.g. for an attachment, you can use:\n      [[attachment:foo.pdf|Direct download of foo.pdf|&do=get]]\n      E.g. for linking to some specific diff, you can use:\n      [[SomePage|see that diff|&action=diff,&rev1=23,&rev2=42]]\n      See also the updated HelpOnLinking page!\n    * AdvancedSearch: make multipe categories/languages/mimetype selections possible\n    * Added a configuration directive to only do one bind to the LDAP server.\n      This is useful if you bind as the user the first time.\n      ldap_bindonce = False # default\n\n  Fixes:\n    * Fix XSS issue in login action.\n    * Fix wrong pagename when creating new pages on Mac OS X - that was a big\n      showstopper for moin 1.6.0 on Mac OS X.\n    * Fixed 1.6 migration script:\n      Make sorting python 2.3 compatible.\n      Just skip corrupted event log lines.\n      Fix link conversion by using data.pre160 as data_dir.\n      Fix bad /InterWiki pagenames when encountering interwiki links with bad\n      wiki names.\n      Improve ImageLink conversion by using its argument parser code.\n      Added STONEAGE_IMAGELINK (default: False) switch to wiki markup converter,\n      toggle it if you had a very old ImageLink macro in production and the\n      converter output has target and image interchanged.\n      Fixed UnicodeDecodeError for wrongly encoded attachment filenames.\n    * Wiki parser:\n      Fix parsing of link/transclusion description and params.\n      Fix relative attachment targets.\n      Fix supported URL schemes (some got lost since 1.5.8).\n      Showing an upload link for non-existing non-text/non-image transclusions\n      now (like e.g. *.pdf).\n    * RST parser: fix attachment: and drawing: processing\n    * Fix quickhelp when editing RST markup pages.\n    * Fix Despam action: editor grouping was broken, increase time interval\n      to 30 days.\n    * Fix AdvancedSearch domain:system search crashing.\n    * Only switch off xapian search if we didn't use it because of missing index.\n    * Fix saving twikidraw drawings by removing 'java' from spider regex.\n    * Fix classic theme's unsubscribe icon's action link.\n    * Fix AttachFile action: don't show unzip for packages, only show install\n      for superuser.\n    * Fix \"su user\" troubles on UserPreferences.\n    * Removed unit tests from ?action=test (due to changes in our test\n      environment, using py.test now, this was broken).\n    * Duplicated the top directories' moin.py to wiki/server/moin.py so it gets\n      installed by setup.py.\n    * Fix MoinMoinBugs/1.6.0LanguageIgnoreBrowserConfigurationError\n    * Fix MoinMoinBugs/MoveAttachmentNotWorkingWithModPython\n    * Fix MoinMoinBugs/1.6.0SupplementationAndAccessRights\n    * Fix MoinMoinBugs/RenamingUserAllowsOldUsernameToLogin\n    * Fix MoinMoinBugs/GuiEditorExcelPasteExpatErrorUnboundPrefix\n\n  Other changes:\n    * I18n texts, system and help pages updated, please update your underlay\n      directory (see wiki/underlay/...).\n    * Improved \"moin\" script help, invoke it with \"moin ... package command --help\".\n    * Added some .ext -> mimetype mappings missing on some systems (like Mac OS X).\n    * Removed ImageLink macro, as this can be easily done with moin wiki link\n      syntax now - see HelpOnMacros/ImageLink (the 1.6 migration scripts convert\n      all ImageLink calls to moin wiki link syntax).\n    * Updated EmbedObject macro.\n\n\nVersion 1.6.0:\n * This is a reduced CHANGES, ommitting details from rc/beta test and also\n   less interesting minor changes and fixes. If you want to see full detail,\n   read it there: http://hg.moinmo.in/moin/1.6/file/640f21787334/docs/CHANGES\n\n   It took MoinMoin development a lot of work and time to implement all the new\n   and fixed stuff, so please, before asking for support:\n   * take the time to read all the stuff below\n   * read the new help pages (copy them from wiki/underlay/ directory)\n\n * HINT: If you are upgrading from a older moin version and want to keep your\n   existing data directory, it is essential that you read and follow\n   README.migration because the wiki markup and user profiles changed significantly.\n   See also more HINTs below...\n\n  New features: ==============================================================\n\n  User interface: ------------------------------------------------------------\n    * Removed \"underscore in URL\" == \"blank in pagename magic\" - it made more\n      trouble than it was worth. If you still want to have a _ in URL, just\n      put a _ into pagename.\n    * Discussion pages, see FeatureRequests/DiscussionAndOrCommentPages.\n    * cfg.password_checker (default: use some simple builtin checks for too\n      easy passwords and, if available, python-crack).\n      Use password_checker = None to disable password checking.\n    * We now have a drafts functionality (no */MoinEditorBackup pages any\n      more):\n      * If you edit a page and cancel the edit, use preview or save, a draft\n        copy gets saved for you to a internal cache area (data/cache/drafts/).\n      * If it is a save what you did and it succeeds, the draft copy gets\n        killed right afterwards.\n      * If you accidentally used cancel or your browser or machine crashes\n        after you used preview, then just visit that page again and edit it.\n        the editor will notify you that there is a draft of this page and you\n        will see a \"Load draft\" button. Click on it to load the draft into the\n        editor and save the page.\n      * The draft storage is per user and per page, but only one draft per page.\n    * cfg.quicklinks_default and cfg.subscribed_pages_default can be used to\n      preload new user profiles with configurable values.\n    * attachment links for non-existing attachments look different now:\n      the note about the non-existing attachment moved to the link title,\n      the link is shown with nonexistent class (grey).\n    * attachment embeddings for non-existing attachments show a grey clip\n    * The list of InterWiki sites is editable in the wiki (page InterWikiMap),\n      it is getting reloaded every minute.\n    * We support some new languages and also have new underlay pages, thanks\n      to all translators and people helping with the docs!\n\n  Actions: -------------------------------------------------------------------\n    * Synchronisation of wikis using the SyncPages action.\n    * Xapian (see http://xapian.org/) based indexed search code.\n      To use this:\n      * Install xapian-core and xapian-bindings on your machine.\n        We used 0.9.4, but newer code should hopefully work, too.\n      * cfg.xapian_search = True\n      * Execute this to build the index:\n        $ moin ... index build   # indexes pages and attachments\n        $ moin ... index build --files=files.lst  # same plus a list of files\n        You should run those commands as the same user you use for your wiki,\n        usually this is the webserver userid, e.g.:\n        $ sudo -u www-data moin --config=... --wiki-url=wiki.example.org/ \\\n               index build --files=files.lst\n    * New searches:\n        - LanguageSearch: language:de\n        - CategorySearch: category:Homepage\n        - MimetypeSearch: mimetype:image/png (for attachments/files)\n        - DomainSearch: domain:underlay or domain:standard\n        - History Search: available in advanced ui\n      Note: Some currently only available when Xapian is used.\n    * New config options and their defaults:\n        xapian_search        False  enables xapian-powered search\n        xapian_index_dir     None   directory for xapian indices\n                                    (can be shared for wiki farms)\n        xapian_stemming      True   toggles usage of stemmer, fallback\n                                    to False if no stemmer installed\n        search_results_per_page 10  determines how many hits should be\n                                    shown on a fullsearch action\n        xapian_index_history False  indexes all revisions of pages to\n                                    allow searching in their history\n    * Speeded up linkto search by avoiding read locks on the pagelinks file.\n\n    * The action menu now calls the actions for the revision of the page you\n      are currently viewing. If you are viewing the current page revision, you\n      get the same behaviour as in moin 1.5, but if you are viewing an old\n      page revision, action \"raw\" will now show you the raw text of this OLD\n      revision (not of the current revision as moin 1.5 did it).\n      Note that not every action does evaluate the rev=XX parameter it gets.\n      Also please note that the edit, info, ... links in the editbar do NOT\n      use the rev parameter, but operate on the latest page revision (as\n      they did in moin 1.5).\n    * Info action lost the links for \"raw\", \"print\" and \"revert\" actions,\n      because you can now just view an old revision and select those actions\n      from the menu there.\n    \n    * ?action=sitemap emits a google sitemap (XML), listing all your wiki pages\n      and the wiki root URL.\n      Page                      Priority / Frequency / Last modification\n      --------------------------------------------------------------------\n      /                         1.0 / hourly / <now>\n      cfg.page_front_page       1.0 / hourly / page last edit\n      TitleIndex,RecentChanges  0.9 / hourly / <now>\n      content pages             0.5 / daily / page last edit\n      system/help pages         0.1 / yearly / page last edit\n\n    * Action DeletePage and RenamePage can now be used for subpages of a page, too.\n    * Added Action CopyPage so you can use now an existing page or page hierarchy\n      as template for a new page, see FeatureRequests/CloneOrCopyPages.\n    * \"Package Pages\" action supports attachments now.\n    * Added SisterPages support:\n      * action=sisterpages will generate a list of url pagename lines for all\n        pages in your moin wiki.\n      * action=pollsistersites will poll all sister sites listed in\n        cfg.sistersites = [(wikiname, fetchURL), ...]\n        The fetch URL for the sistersites depends on the wiki engine, e.g.:\n        # moin based wiki:\n        ('MoinExample', 'http://moin.example.org/?action=sisterpages')\n        # oddmuse based wiki:\n        ('EmacsWiki', 'http://www.emacswiki.org/cgi-bin/test?action=sisterpages')\n        # JspWiki based wiki:\n        ('JspWiki', 'http://www.jspwiki.org/SisterSites.jsp')\n      * If the current page exists on some sister wiki, a link to it will be\n        added to the navibar.\n      You can use sister wikis for adding another dimension to your wiki UI: use\n      it for simple multi language support, or for comments, or anything else\n      \"related\" you need.\n      TODO: add sistersites_force with sister sites we link to even if they do not\n            have the page yet (will work only for moin as we don't know\n            pagename>url transformation of other wikis)\n    * showtags action that lists all tags related to a page.\n    * action=view does use mimetypes of EmbedObject too and text files will be shown\n      by using their colorized parsers\n\n  Macros: --------------------------------------------------------------------\n    * RecentChanges:\n      * If a change has happened after your bookmark, the updated/new/renamed\n        icon links to the bookmark diff.\n      * If a page does not exist any more (because it was deleted or renamed),\n        we link the deleted icon to the diff showing what was deleted (for the\n        delete action). For the rename action, we just show the deleted icon.\n    * Conflict icon in RecentChanges is shown if a edit conflict is detected.\n    * Enhanced SystemAdmin's user browser, so a SuperUser can enable/disable\n      users from there.\n    * Included EmbedObject macro for embedding different major mimetypes:\n      application, audio, image, video, chemical, x-world. \n      You are able to change the defaults of allowed mimetypes in the config\n      var mimetypes_embed. The config var mimetypes_xss_protect is used to deny\n      mimetypes. The order of both variables is Allow, Deny (mimetypes_embed,\n      mimetypes_xss_protect).\n    * Added support for @SELF to the NewPage macro.\n    * GetText2 macro that allows to translate messages that contain data.\n    * Make the FootNote macro filter duplicates and display a list of numbers\n      instead of a list of identical footnotes. Thanks to Johannes Berg for the\n      patch.\n\n  Parsers: -------------------------------------------------------------------\n    * Moin Wiki parser: Changed markup for links, images and macros, see these\n      wiki pages: HelpOnLinking, HelpOnMacros\n    * New wiki markup for /* inline comments */ - they get rendered as a span\n      with class=\"comment\", see next item:\n    * There is a new item in the edit bar: \"Comments\". If you click it, the\n      visibility of all class \"comment\" tags will be toggled. There is a user\n      preferences item \"show_comments\" to set if the default view shows them or not.\n    * The wiki parser can be used with css classes now:\n      {{{#!wiki comment\n      This will render output within a div with class \"comment\".\n      You can use any wiki markup as usual.\n      }}}\n      You can also combine multiple css classes like this:\n      {{{#!wiki red/dotted/comment\n      This will render a red background, dotted border comment section.\n      }}}\n      The same thing will work for any other css classes you have.\n      If the css classes contain the word \"comment\", they will trigger some\n      special feature, see next item:\n    * Wiki nested parser/pre sections work now, using this syntax:\n      a) just use more curly braces if you have 3 closing in your content:\n         {{{{\n         }}} <- does not terminate the section!\n         }}}}\n      b) use {{{ + some magic string:\n         {{{somemagicstring\n         }}} <- does not terminate the section!\n         somemagicstring}}}\n      c) {{{whatever#!python\n         # py code\n         whatever}}}\n      Pitfall: stuff like below does not work as it did in 1.5:\n         {{{aaa\n         bbb}}}\n      Solution:\n         {{{\n         aaa\n         bbb\n         }}}\n    * Added support for ircs: URLs (secure IRC).\n    * New text/creole parser that allows you to use WikiCreole 1.0 markup,\n      use #format creole.\n    * HTML parser (called \"html\") that allows you to use HTML on the page.\n      Thanks to the trac team for the nice code.\n    * Added the diff parser from ParserMarket, thanks to Emilio Lopes, Fabien\n      Ninoles and Juergen Hermann.\n\n  XMLRPC: --------------------------------------------------------------------\n    * actions_excluded now defaults to ['xmlrpc'] - this kind of disables the\n      built-in wiki xmlrpc server code (not completely: it will just answer\n      with a Fault instance for any request). If you want to use xmlrpc v1 or\n      v2, you have to remove 'xmlrpc' from the actions_excluded list (for\n      example if you want to use wikisync, mailimport or any other feature\n      using xmlrpc). If you enable xmlrpc, it will be possible that someone\n      changes your wiki content by using xmlrpc (it will of course honour ACLs).\n    * New XMLRPC methods (see doc strings for details):\n      * getMoinVersion\n      * system.multicall -- multicall support\n      * Authentication System: getAuthToken/appyAuthToken\n      * getDiff -- method to get binary diffs\n      * mergeDiff -- method to local changes remotely\n      * interwikiName -- method to get the IWID and the interwiki moniker\n      * getAllPagesEx -- method to get the pagelist in a special way (revnos,\n        no system pages etc.)\n      * getAuthToken -- make and authentication token by supplying username/password\n      * applyAuthToken -- set request.user for following xmlrpc calls (within the\n                          same multicall)\n      * getUserProfile -- method to get user profile data for request.user\n    * Added XMLRPC methods for attachment handling. Thanks to Matthew Gilbert.\n    * XMLRPC putPage method adjusted to new AuthToken, config vars \n      xmlrpc_putpage_enabled and xmlrpc_putpage_trusted_only removed.\n\n  Scripts / Commandline interface: -------------------------------------------\n    * moin export dump now better conforms to the theme guidelines.\n    * Added a --dump-user option to the moin export dump command.\n      Thanks to Oliver O'Halloran.\n\n  Security / Auth / AntiSpam / etc.: -----------------------------------------\n    * Hierarchical ACLs are now supported, i.e. pages inheriting permissions\n      from higher-level pages. See HelpOnAccessControlLists.\n    * If you have \"#acl\" (without the quotes) on a page, this means now:\n      \"this page has own (empty) ACLs, so do not use acl_rights_default here\"\n      Please note that this is COMPLETELY DIFFERENT from having no ACL line at\n      all on the page (acl_rights_default is used in that case).\n    * Antispam master url is now configurable via cfg.antispam_master_url.\n      The default is to fetch the antispam patterns from MoinMaster wiki.\n    * Antispam now checks the edit comments against BadContent also.\n    * TextCHAs (text-form CAPTCHAs).\n      Due to increasingly annoying wiki spammers, we added the option to use\n      TextCHAs (for page save (not for preview!), for attachment upload, for\n      user creation (not for profile save)).\n      This function is disabled by default. If you run a wiki that is editable\n      by anonymous or non-approved users from the internet (i.e. All: or Known:\n      in ACL terms), you should enable it in your wiki config by:\n      textchas = { # DO NOT USE EXACTLY THESE QUESTIONS!!!\n          'en': {\n              u'H2O is ...': u'water', # bad: too common\n              u'2 apples and three bananas makes how many fruits?': ur'(five|5)', # good\n              u'2 apples and three pigs makes how many fruits?': ur'(two|2)', # good\n              u'2+3': ur'5', # bad: computable\n              u'\n          },\n          'de': { # for german users\n              u'H2O ist ...': u'wasser',\n          },\n      }\n      This means that english users will get some random question from the 'en'\n      set, german users will get some from the 'de' set. If there is no 'de'\n      set configured, moin will fallback to language_default and then to 'en',\n      so make sure that you at least have a 'en' set configured (or whatever\n      you have set as language_default).\n      You need to use unicode for the questions and answers (see that u\"...\").\n      For the answer, you need to give a regular expression:\n      * In the easiest case, this is just some word or sentence (first en\n        example). It will be matched in a case-insensitive way.\n      * For more complex stuff, you can use the power of regular expressions,\n        e.g. if multiple answers are correct (second en example). Any answer\n        matching the regular expression will be considered as correct, any\n        non-matching answer will be considered as incorrect.\n\n      Tipps for making it hard to break for the spammers and easy for the users:\n      * Use site-specific (not too common) questions.\n      * Don't use too hard questions (annoys legitimate users).\n      * Don't use computable questions.\n      * Don't reuse textchas from other sites.\n\n      textchas_disabled_group = None # (default)\n      Set this to some group name and noone in this group will get textchas.\n      E.g.: textchas_disabled_group = u'NoTextChasGroup'\n\n    * The login page gives now the possibility to recover a lost password, thanks to \n      Oliver Siemoneit. This is especially useful for wikis where access to user \n      preferences is restricted by acl.\n    * Session handling for logged-in users and (not by default due to expiry\n      problems) anonymous users.\n    * Updated the ldap_login code from 1.5 branch, supports TLS now.\n      See MoinMoin/config/multiconfig.py for supported configuration options\n      and their defaults (and please just change what you need to change,\n      in your wikiconfig).\n    * Interwiki auth: You need to define cfg.trusted_wikis and\n       cfg.user_autocreate to use it. Logging in works by entering:\n      Name: RemoteWikiName RemoteUserName\n      Password: remotepass\n      Then moin contacts RemoteWikiName after looking it up in the interwiki\n      map and tries to authenticate there using RemoteUserName and remotepass.\n      If it succeeds, the remote wiki will return the remote user profile items\n      and your local moin will autocreate an account with these values.\n\n  Server / Network / Logging: ------------------------------------------------\n    * The standalone server script moved to the toplevel directory. This makes\n      it possible to directly start moin.py without additional configuration\n      to run a MoinMoin DesktopEdition like wiki setup.\n      Be careful: DesktopEdition uses relaxed security settings only suitable\n      for personal and local use.\n    * Added TLS/SSL support to the standalone server. Thanks to Matthew Gilbert.\n      To use TLS/SSL support you must also install the TLSLite library\n      (http://trevp.net/tlslite/). Version 0.3.8 was used for development and\n      testing.\n\n    * cfg.log_reverse_dns_lookups [default: True] - you can set this to False\n      if rev. dns lookups are broken in your network (leading to long delays\n      on page saves). With False, edit-log will only contain IP, not hostname.\n    * Added support for \"304 not modified\" response header for AttachFile get\n      and rss_rc actions - faster, less traffic, less load.\n\n    * Added logging framework, using stdlib's \"logging\" module. Just do\n      import logging ; logging.debug(\"your text\"). Depending on configuration\n      in the server Config class, your stuff will be written to screen (stderr),\n      to a moin logfile, to apache's error.log, etc.:\n      logPath = None # 'moin.log'\n      loglevel_file = None # logging.DEBUG/INFO/WARNING/ERROR/CRITICAL\n      loglevel_stderr = None # logging.DEBUG/INFO/WARNING/ERROR/CRITICAL\n      NOTE: this is NOT in wikiconfig, but e.g. in moin.cgi or moin.py or ...\n\n    * Added some experimental and disabled code, that uses x-forwarded-for\n      header (if present) to get the right \"outside\" IP before a request\n      enters our chain of trusted (reverse) proxies.\n      This code has the problem that we can't configure it in wikiconfig, so\n      if you want to use it / test it, you have to edit the moin code:\n      MoinMoin/request/__init__.py - edit proxies_trusted (near the top).\n      We will try to make this easier to configure, but there was no time left\n      before 1.6.0 release for doing bigger code refactorings needed for that.\n\n  Mail: ----------------------------------------------------------------------\n    * You can send email to the wiki now (requires xmlrpc), see:\n      FeatureRequests/WikiEmailIntegration, HelpOnConfiguration/EmailSupport\n\n    * Mail notifications contain a link to the diff action so the user\n      can see the coloured difference more easily. Thanks to Tobias Polzin.\n\n  Other changes: =============================================================\n    * HINT: please copy a new version of your server script from the wiki/server/\n      directory and edit it to match your setup.\n    * HINT: instead of \"from MoinMoin.multiconfig import DefaultConfig\" you\n      need to use \"from MoinMoin.config.multiconfig import DefaultConfig\" now.\n      You need to change this in your wikiconfig.py or farmconfig.py file.\n      See MoinMoin/multiconfig.py for an alternative way if you can't do that.\n    * HINT: you need to change some imports (if you have them in your config):\n      Old: from MoinMoin.util.antispam import SecurityPolicy\n      New: from MoinMoin.security.antispam import SecurityPolicy\n      Old: from MoinMoin.util.autoadmin import SecurityPolicy\n      New: from MoinMoin.security.autoadmin import SecurityPolicy\n    * HINT: you need to change your auth stuff, the new way is:\n      from MoinMoin.auth import moin_login, moin_session\n      from MoinMoin.auth.http import http\n      auth = [http, moin_login, moin_session]\n      Do it in a similar way for other auth methods.\n    * HINT: you need to change your url_prefix setting in 2 ways:\n      1. The setting is now called url_prefix_static (to make it more clear\n         that we mean the static stuff, not the wiki script url).\n      2. The strongly recommended (and default) value of it is '/moin_static160'\n         for moin version 1.6.0 (and will be ...161 for moin 1.6.1). It is\n         possible and recommended to use a very long cache lifetime for static\n         stuff now (Expires: access plus 1 year), because we require to change\n         the URL of static stuff when the static stuff changes (e.g. on a\n         version upgrade of moin) to avoid problems with stale cache content.\n         Your moin will be faster with lower load and traffic because of this.\n         For standalone server, we use 1 year expiry for static stuff now.\n         For Apache, Lighttpd and other \"external\" servers, you have to care\n         for configuring them to use a long expiry and change url_prefix_static\n         related configuration on upgrade.\n      HINT: if you run standalone or Twisted server, the easiest way to get a\n            working configuration (with server configuration matching wiki\n            configuration) is to NOT set url_prefix_static at all. Moin will\n            use matching configuration defaults in this case.\n    * url_prefix_action ['action'] was introduced for lowering load and traffic\n      caused by searchengine crawlers. Up to now, crawlers where causing a high\n      load in internet moin wikis because they tried to get about everything,\n      including all actions linked from the user interface.\n      Known crawlers only get 403 for most actions, but nevertheless they first\n      tried. There was no means keeping them away from actions due to the rather\n      braindead robots.txt standard. You can only disallow pathes there, but\n      moin's actions were querystring based, not path based (this would need\n      regex support in robots.txt, but there is no such thing).\n      This changed now. Moin is able to generate action URLs you can handle in\n      robots.txt, like /action/info/PageName?action=info. So if you don't want\n      bots triggering actions, just disallow /action/ there. Keep in mind that\n      attachments are handled by /action/AttachFile, so if you want attached\n      files and pictures indexed by search engine, don't disallow\n      /action/AttachFile/ in your robots.txt. In order to use this feature,\n      set url_prefix_action in your wikiconfig to e.g. \"action\".\n    * We use (again) the same browser compatibility check as FCKeditor uses\n      internally, too. So if GUI editor invocation is broken due to browser\n      compatibility issues or a wrong browser version check, please file a bug\n      at FCKeditor development or browser development.\n    * HINT: We removed Lupy based indexed search code. If you were brave enough\n      to use cfg.lupy_search, you maybe want to try cfg.xapian_search instead.\n\n  Developer notes: ===========================================================\n    * We moved the IE hacks to theme/css/msie.css that gets included after all\n      other css files (but before the user css file) using a conditional\n      comment with \"if IE\", so it gets only loaded for MSIE (no matter which\n      version). The file has some standard css inside (evaluated on all MSIE\n      versions) and some * html hacks that only IE < 7 will read.\n      HINT: if you use custom themes, you want to update them in the same way.\n    * autofilters for databrowser widget. Thanks to Johannes Berg for the patch.\n    * changed formatter.attachment_link call (it is now more flexible,\n      because you can render the stuff between link start and link end yourself)\n    * Page.url() does not escape any more. You have to use wikiutil.escape()\n      yourself if you want to write the URL to HTML and it contains e.g. &.\n    * The testing wikiconfig moved to tests/wikiconfig.py, the testing wiki\n      is now created in tests/wiki/...\n    * HINT: Killed \"processors\" (finally), formatter method changed to:\n      formatter.parser(parsername, lines)\n    * Refactored some actions to use ActionBase base class.\n    * Moved \"test\" action from wikiaction to MoinMoin/action/\n      (and use ActionBase).\n    * Moved MoinMoin/config.py to MoinMoin/config/__init__.py.\n    * Moved MoinMoin/multiconfig.py to MoinMoin/config/multiconfig.py.\n    * Moved \"SystemInfo\" macro from wikimacro to MoinMoin/macro/.\n    * Moved wikiaction.py stuff to MoinMoin/action/__init__.py.\n    * Moved wikimacro.py stuff to MoinMoin/macro/__init__.py.\n    * Moved wikirpc.py stuff to MoinMoin/xmlrpc/__init__.py.\n    * Moved wikitest.py stuff to action/test.py (only used from there).\n    * Moved formatter/base.py to formatter/__init__.py (FormatterBase).\n    * Moved util/ParserBase.py to parser/ParserBase.py.\n    * Moved / splitted request.py into MoinMoin/request/*.\n      Most stuff will be broken, please help fixing it (usually some imports\n      will be missing and the adaptor script will need a change maybe):\n      Tested successfully: CGI, CLI, STANDALONE, FCGI, TWISTED\n    * Moved security.py to security/__init__.py.\n    * Moved wikiacl.py to security/__init__.py.\n    * Moved logfile/logfile.py to logfile/__init__.py.\n    * Moved mailimport.py to mail/mailimport.py.\n    * Moved util/mail.py to mail/sendmail.py.\n    * Moved auth.py to auth/__init__.py.\n      Moved util/sessionParser.py to auth/_PHPsessionParser.py.\n      teared auth code into single modules under auth/* - moin_session handling\n      and the builting moin_login method are in auth/__init__.py.\n    * Added wikiutil.MimeType class (works internally with sanitized mime\n      types because the official ones suck).\n    * Renamed parsers to module names representing sane mimetypes, e.g.:\n      parser.wiki -> parser.text_moin_wiki\n    * Added thread_monitor debugging aid. It can be activated using:\n      from MoinMoin.util import thread_monitor; thread_monitor.activate_hook()\n      and then triggered by requesting URL ...?action=thread_monitor - please\n      be aware that monitoring threads has a big performance impact on its own,\n      so you only want to temporarily enable this for debugging.\n      By default, it dumps its output to the data_dir as tm_<timestamp>.log,\n      you can change this at bottom of action/thread_monitor.py if you want to\n      see output in your browser.\n    * Introduced scope parameter to CacheEntry() - if you specify 'farm', it\n      will cache into a common directory for all wikis in the same farm, if you\n      specify 'wiki', it will use a cache directory per wiki and if you specify\n      'item', it will use a cache directory per item (== per page).\n      Creating a CacheEntry without explicit scope is DEPRECATED.\n    * Smileys moved from MoinMoin.config to MoinMoin.theme.\n    * Removed all _ magic in URLs and filenames.\n    * request.action now has the action requested, default: 'show'.\n    * Cleaned up duplicated http_headers code and DEPRECATED this function\n      call (it was sometimes confused with setHttpHeaders call) - it will\n      vanish with moin 1.7, so please fix your custom plugins!\n      The replacement is:\n          request.emit_http_headers(more_headers=[])\n      This call pre-processes the headers list (encoding from unicode, making\n      sure that there is exactly ONE content-type header, etc.) and then\n      calls a server specific helper _emit_http_headers to emit it.\n      Tested successfully: CGI, STANDALONE, FCGI, TWISTED\n    * setResponseCode request method DEPRECATED (it only worked for Twisted\n      anyway), just use emit_http_headers and include a Status: XXX header.\n      Method will vanish with moin 1.7.\n    * cfg.url_prefix is DEPRECATED, please use cfg.url_prefix_static.\n    * d['title_link'] is not supported any more. You can easily make that link\n      on your own in your theme, see example in MoinMoin/theme/__init__.py,\n      function \"title\".\n    * There is a new Page method called Page.get_raw_body_str that returns\n      the encoded page body. This is useful if you just deal with byte data\n      (e.g. while generating binary diffs).\n    * The TagStore/PickleTagStore system is used to store the syncronisation tags.\n    * XMLRPC functions may return Fault instances from now on\n    * Moin got multicall support, including a module that makes it usable on the\n      client-side without requiring Python 2.4\n    * Added no_magic to text_html formatter to disable tag autoclosing.\n    * MOIN_DEBUG can be set in the environment to let MoinMoin ignore exceptions\n      that would lead to a traceback in the browser. Thanks to Raphael Bossek.\n    * There is a new MoinMoin.Page.ItemCache class now with automatic cache\n      invalidation based on global edit-log. We currently use it to cache page\n      acls, speedup Page.get_rev and reading the page local edit-log.\n    * Added wikiutil.renderText parse and format raw wiki markup with all page elements.\n    * The user file format has changed, old files will be read correctly but\n      will silently be upgraded to the new format so old versions will not\n      read the new files correctly (this only affects 'subscribed_pages' and\n      'quicklinks' which will be lost when downgrading.)\n\n\nVersion 1.5.8:\n  New features:\n    * Added timing.log to help performance debugging. Use cfg.log_timing = True\n      to update <data_dir>/timing.log (default is False, meaning no logging).\n\n      Example log entries:\n\n\n      Timestamp       PID   Timing Flag action     URL\n      -----------------------------------------------------------------------------\n      20070512 184401 22690 vvv         None       moinmoin.wikiwikiweb.de/RssFeeds\n      20070512 184401 22690 0.267s    - show       moinmoin.wikiwikiweb.de/RssFeeds\n\n      Timestamp: YYYYMMDD HHMMSS (UTC)\n      PID: the process ID of the moin process\n      Timing: when action starts, it will be \"vvv\"\n              when it ends, it logs the total time it needed for execution\n      Flag (some are only logged at end of action):\n      +   Page exists\n      -   Page does not exist\n      B   user agent was recognized as bot / spider\n      !x! Action took rather long (the higher the x, the longer it took - this\n          makes it easy to grep for problematic stuff).\n      Action: action name (None is when no action was specified, moin assumes\n              \"show\" for that case)\n      URL: the requested URL\n\n      For more information about tuning your moin setup, see:\n      http://moinmoin.wikiwikiweb.de/PerformanceTuning\n    * Added support for ircs, webcal, xmpp, ed2k and rootz protocols - we\n      moved all protocols to config.url_schemas, so this is not empty any more.\n      It is possible to use these protocols now on wiki pages and in the\n      navi_bar. We just generate the URLs, it is up to your browser what it\n      does when clicking on those links.\n    * cfg.traceback_show (default: 1) can be used to disable showing tracebacks.\n      cfg.traceback_log_dir (default: None) can be used to set a directory\n      that is used to dump traceback files to. Your users will get a notice to\n      which (random) file in that directory the traceback was been written.\n      NOTE: while you can feel free to set traceback_show = 0 and\n      traceback_log_dir = None, we will also feel free to reject bug reports\n      when you (or your site's users) don't give us enough information (like a\n      traceback file) to debug the problem. If you set traceback_show = 0,\n      we recommend pointing traceback_log_dir to a directory with reasonable\n      free space and putting a page onto your wiki that describes who has to\n      get contacted (usually the wiki server admin) in case a traceback happens.\n      The admin can then locate the traceback file and submit it to moin\n      development, if the bug is not already known (see MoinMoin:MoinMoinBugs).\n      Of course we will also need all the other details of a bug report, not\n      only the traceback file.\n\n  Other changes:\n    * Updated spider agents list.\n    * Reduce bot/spider cpu usage for SystemInfo, OrphanedPages, WantedPages,\n      PageHits, PageSize, WordIndex macros (we just return nothing for bots).\n\n  Bugfixes:\n    * XSS fixes, see http://secunia.com/advisories/24138/ (item 1 and 2).\n    * ACL security fixes:\n      * MonthCalendar respects ACLs of day pages now.\n      * Check the ACL for the rst markup include directive.\n    * Fixed cleaning of edit comments (control chars in there could damage\n      edit-log).\n    * Fixed in-process caching of antispam patterns (didn't update the cache\n      for multi-process, persistent servers).\n    * Correct encoding/decoding for surge-log data, fixes leftover\n      surge-logXXXXXXX.tmp files in data/cache/surgeprotect.\n    * Fixed mode of cache files (mkstemp creates them with 0600 mode).\n    * Symbolic entities with numbers (like &sup2;) did not work, fixed.\n    * We open data/error.log earlier now and we also use it for FastCGI.\n    * Fixed unicode cfg.page_group_regex.\n    * Fixed moin.spec to use english date format.\n    * GUI converter: fixed conversion of relative wiki links.\n    * Fixed NewPage macro button label to not be formatted as wiki text.\n\nVersion 1.5.7:\n  New features:\n    * added url_prefix_local which is used for stuff that must be loaded from\n      same site as the wiki engine (e.g. FCKeditor GUI editor applet), while\n      url_prefix can be a remote server serving the static files (css/img).\n      If not set (or set to None), url_prefix_local will default to the value\n      of url_prefix.\n    * We save some CPU and disk I/O by having EditTemplates and LikePages macro\n      (both used on MissingPage) check whether the requesting entity was\n      identified as a spider (e.g. search engine bot) and do nothing in that\n      case. Normal users won't see any difference.\n    * For AttachFile, you can now choose to overwrite existing files of same\n      name (nice for updating files).\n\n  Bugfixes:\n    * XSS Fixes:\n      * fixed unescaped page info display.\n      * fixed unescaped page name display in AttachFile, RenamePage and\n        LocalSiteMap actions\n    * WantedPages listed existing pages that are not readable for the user,\n      but are linked from pages that ARE readable for the user (so this is NOT\n      a privacy/security issue). We now don't list those pages any more as it\n      is pointless/confusing, the user can't read or edit there anyway.\n    * MoinMoin:MoinMoinBugs/TableOfContentsUsesNonExistingIncludeLinks\n    * MoinMoin:MoinMoinBugs/ActionsExcludedTriggerError\n    * GUI editor/converter:\n      * ignore <col>/<colgroup>/<meta> elements\n      * support <a> within blockquote\n    * Remove generated=... attribute from pagelink html output (this attr is\n      for internal use only). w3c validator is now happier again.\n    * Fixed css class \"userpref\" (not: \"userprefs\") of the Login form.\n    * Fixed the version number check in the xslt parser for 4suite >= 1.0.\n    * We reset the umask to the wanted value every request. This should fix\n      wrong file modes when used with Twisted (twistd uses a hardcoded 0077\n      umask in daemonize()).\n    * Avoid trouble when saving pages with antispam function when MoinMaster\n      wiki is having troubles (catch xmlrpc Fault).\n\n  Other changes:\n    * Standalone server does not do reverse DNS lookups any more (this is a\n      standard feature of BaseHTTPServer stdlib module, but we override this\n      now and just print the IP).\n    * We moved the IE hacks to theme/css/msie.css that gets included after all\n      other css files (but before the user css file) using a conditional\n      comment with \"if IE\", so it gets only loaded for MSIE (no matter which\n      version). The file has some standard css inside (evaluated on all MSIE\n      versions) and some * html hacks that only IE < 7 will read.\n      HINT: if you use custom themes, you want to update them in the same way.\n    * Improved ldap auth:\n      * cfg.ldap_name_attribute was removed because of new cfg.ldap_filter.\n        If you had ldap_name_attribute = 'sAMAccountName' before, just use\n        ldap_filter = '(sAMAccountName=%(username)s)' now.\n      * New cfg.ldap_filter used for the ldap filter string used in the ldap\n        search instead of the rather limited, partly hardcoded filter we used\n        before. This is much more flexible:\n        ldap_filter = '(sAMAccountName=%(username)s)'\n        You can also do more complex filtering expressions like:\n        '(&(cn=%(username)s)(memberOf=CN=WikiUsers,OU=Groups,DC=example,DC=org))'\n      * Added some processing to filter out result entries with dn == None.\n      * We set REFERRALS option to 0 before initializing the ldap server\n        connection (this seems to be needed for Active Directory servers).\n      * We support self-signed ssl certs for ldaps - completely untested.\n      * New cfg.ldap_surname_attribute (usually 'sn'), was hardcoded before.\n      * New cfg.ldap_givenname_attribute (usually 'givenName'), hardcoded before.\n      * New cfg.ldap_aliasname_attribute (usually 'displayName') - if this\n        attribute is not there or empty (in the results of the ldap lookup for\n        the user), we just make up the aliasname from surname and givenname\n        attribute.\n      * We only request the attributes we need from ldap (was: all attrs).\n      * We deny user login (and break out of auth chain) for the following cases:\n        * if a user is not found by ldap lookup\n        * if we find more than one matching entry\n        * if the password is empty or incorrect\n        * if some exception happens\n      * Please note that there is an updated ldap sample config in directory\n        wiki/config/more_samples/.\n      * Added experimental LDAP SSL/TLS support (untested, please help testing),\n        see also the sample config.\n    * Work around a IE7 rendering problem with long pages getting more and\n      more narrow. We just applied the same \"fix\" as we used for IE6, using\n      \"display: none\" for span.anchor for IE browsers.\n    * RSS feed related:\n      * We used to emit a <link> tag for the action=rss_rc RSS feed on any\n        page. This was changed, we now emit that link only on RecentChanges and\n        the current user's language translation of RecentChanges.\n        This was changed because Google Toolbar requests the RSS feed linked\n        by such a link tag every time it sees one. Thus, if you used the wiki\n        normally, it requested the RSS feed every few seconds and caused\n        problems due to surge protection kicking in because of that.\n      * HINT for custom theme users: if your theme code calls\n        rsslink(), then you need to change that to rsslink(d) for 1.5.7+.\n\n\nVersion 1.5.6:\n  A general security notice:\n      Check your Python version, there was a buffer overflow issue in Python\n      recently! Details: http://moinmoin.wikiwikiweb.de/PythonUnicodeEscapeBug\n\n  Bugfixes:\n    * Fix AttributeError traceback with Standalone server (if_modified_since)\n    * Fix AttachFile \"304 not modified\" and redirect status code for Twisted\n    * http auth: we now decode username and password to unicode (using\n      config.charset == utf-8). Same for SSL client cert auth and CN.\n    * Avoid infinite recursion in Page.parsePageLinks.\n    * Fixed standalone server failing to shutdown if interface == \"\".\n    * Now MoinMoin does not think anymore that every page links to various user\n      homepages.\n    * Made the irssi parser more tolerant (Thanks to \"TheAnarcat\").\n    * Now multiple formatters can be used per request, the send_page code was\n      not reentrant to this regard. Fixes \"empty\" search results.\n    * Fixed problem with \"=\" in ImageLink macro links.\n    * Not a moin bug, but a silly stdlib os.tempnam function made trouble to\n      some people because it lets you override the path given in the code\n      by setting the environment variable TMP(DIR). We now use a different\n      function to avoid renaming trouble when TMP(DIR) points to a different\n      file system.\n    * Fixed antispam update on every save (Thanks to \"TheAnarcat\").\n    * GUI converter: don't throw away rowclass for tables.\n    * GUI editor formatter: allow height for table cells.\n    * GUI editor formatter: comment texts are output using the formatter now. \n\n  New features:\n    * Mail notifications contain a link to the diff action so the user\n      can see the coloured difference more easily. Thanks to Tobias Polzin.\n    * FeatureRequests/MoveAttachments - you can move attachments from one\n      page to another (and also rename the attachment at the same time).\n      Thanks to Reimar Bauer.\n    * Added support for linking to attachment: and inline: URLs with ImageLink.\n    * Added UNIX socket support for FastCGI, just set the port to some (socket)\n      filename. Details see: MoinMoin:FeatureRequests/FastCgiUnixSocket\n    * [[Attachlist(pagename,mimetype)]] lists attachments of pagename (default:\n      current page) with optional mimetype restriction (default: all).\n      Thanks to Reimar Bauer.\n\n  Other changes:\n    * Minor performance improvements (might be noticeable if you have many\n      custom navi_bar entries and high server load).\n    * Avoid usage of no-cache because it breaks attachment download on IE6.\n      This is a IE bug, not a moin bug.\n    * Added XHTML to the unsafe list.\n    * Changed the rst parser to be compatible to the new docutils interface\n      for directives.\n    * Updated EmbedObject macro.\n\n\nVersion 1.5.5a:\n  Bugfixes:\n    * fixed ticket creation to only use constant values\n\nVersion 1.5.5:\n  HINT: read docs/README.migration.\n  HINT: there was NO change in the underlay/ pages since 1.5.4.\n  HINT: If you experience problems with the reStructured Text (rst) parser,\n        please downgrade docutils to \"0.4\" because there were major interface\n        breaking API refactorings on the docutils trunk.\n\n  Bugfixes:\n    * GUI editor fixes:\n      * Fixed MoinMoinBugs/GuiEditorModifiesInterwikiPreferred.\n      * Fixed MoinMoinBugs/TableAlignmentProbsWithGUI.\n    * Not a moin bug, but it severely annoyed IE users and also was less\n      comfortable for users of other browser: since about 1.5.4, we served\n      attachments with Content-Disposition: attachment - so that the user has\n      to save them to disk. This was to fix a possible XSS attack using attached\n      HTML files with Javascript inside for stealing your moin cookie or doing\n      other nasty things. We improved this by using different behaviour depending\n      on the potential danger the attached file has when served inline:\n      mimetypes_xss_protect = ['text/html', 'application/x-shockwave-flash', ]\n      This is the default value. If you know more dangerous stuff, please just\n      add the mimetypes there to protect your users and file a bug report\n      telling us what we missed.\n    * Fixed MoinMoinBugs/ReStructuredTextRelativeLinksBroken, thanks to Stefan\n      Merten.\n    * Make tickets used for some actions more safe.\n\n  New features:\n    * edit_ticketing [True] - we protect page save by a ticket (same stuff we\n      already use for DeletePage and RenamePage action).\n      NOTE: If you don't use your browser for editing, but some tool like\n            \"editmoin\" or \"MoinMoin plugin for jEdit\", you'll need an update\n            of them supporting the ticket.\n            Alternatively, you can use edit_ticketing = False setting - this\n            is not recommended for internet wikis as it will make spamming them\n            easier.\n    * If we detect some spammer, we kick him out by triggering surge protection\n      (if surge protection is not disabled).\n\nVersion 1.5.5rc1:\n  Bugfixes:\n    * Fixed MoinMoinBugs/XmlRpcBrokenForFastCgi - thanks to Johannes Berg.\n    * Fixed gui editor converter confusing of `` and {{{}}} markup.\n    * Fixed emission of HTTP headers (esp. Vary: Cache-Control:).\n    * Fixed a bad crash that happens (on ANY page!) when you put a *Dict\n      page's name as a member into a *Group page.\n    * Fix MyPages action title to use an unformatted string.\n    * Fix double quoted-printable encoding in generated emails (note: this is\n      not a moin bug - this just works around bugs in python stdlib).\n    * Fix mode of drawing files (use config.umask).\n    * Fix trouble with /?action= urls by dropping getPageNameFromQueryString\n      code. \n    * Fixed sre unpickle issues seen on some machines by avoiding to pickle\n      the regex.\n    * Fix Clock code, add more timers.\n    * Worked around FastCGI problem on Lighttpd: empty lines in the error log.\n    * Fix (add) locking for caching's .remove() call, small fixes to lock code.\n    * Print error message when --target-dir=path is missing from moin export\n      dump command.\n\n  New features:\n    * Added support for \"304 not modified\" response header for AttachFile get\n      and rss_rc actions - faster, less traffic, less load.\n    * Limit rss with full diffs to 5 items.\n    * Allow surge_action_limits = None to disable surge protection.\n    * moin.fcg improved - if you use FastCGI, you must use the new file:\n      * can self-terminate after some number of requests (default: -1, this\n        means \"unlimited lifetime\")\n      * the count of created threads is limited now (default: 5), you can use\n        1 to use non-threaded operation.\n      * configurable socket.listen() backlog (default: 5)\n    * Added indonesian i18n (id).\n    * Some measures against spammers trying to brute force their spam into moin.\n    * EmbedObject macro: added mov, mpg and midi support\n    * moin ... export dump --target-dir=PATH --page=PAGENAME_REGEX\n      You must specify --target-dir (where dump will write the html files to)\n      and you may specify --page and either a page name or a regex used to\n      match all pages you want to export. Default is to export all pages.\n\n  Other changes:\n    * Tuning:\n      * more efficient locking code on POSIX platforms, we do much less I/O\n        for locking now\n      * removed most chmod calls in favour of a single os.umask call\n    * Improved Python 2.5 compatibility. Note: if you think that MoinMoin\n      is using too much RAM, you might want to look at Python 2.5 because\n      of its improved memory management.\n    * Throw away SAVE comments longer than 200 chars (you can't enter those by\n      the user interface, so only spammer using automatic POSTs do them).\n    * Updated spider user agent list.\n    * BadContent and LocalBadContent now get noindex,nofollow robots header,\n      same as POSTs.\n    * Standalone opens it logfile unbuffered from now on, thanks to\n      Carsten Grohmann.\n    * Avoid trouble when request.write() data contains None, just skip it -\n      thanks to Juergen Hermann.\n    * Instead of showing a ConfigurationError, moin now emits \"404 Not found\"\n      http headers and a hint about what could be wrong. This won't fill up\n      your logs just because of typos and spiders still trying old URLs.\n\n \nVersion 1.5.4:\n    HINT: read docs/README.migration.\nVersion 1.5.4-current:\n    * increased maxlength of some input fields from 80 to 200\n\nVersion 1.5.current:\n  Developer notes:\n    * We switched to Mercurial SCM, see here for more infos:\n      http://moinmoin.wikiwikiweb.de/MoinDev/MercurialGuide\n\n  Bugfixes:\n    * fix MonthCalendar macro for non-ASCII pagenames (thanks to Jonas Smedegaard)\n    * remove 'search' and 'google' from bot user agent list and add some more\n      specific terms\n    * Fix the forgotten password email login URL and also properly encode the\n      email body. Thanks to Robin Dunn for the patch.\n    * Applied a patch by Matthew Gilbert for increased compatiblity with\n      latest docutils.\n\n\nVersion 1.5.3:\n  New Features:\n    * Added CSS classes for TableOfContents macro.\n\n  Bug Fixes:\n    * GUI editor / GUI editor converter:\n      * Fixed missing GUI editor link in edit bar.\n      * Fixed table/row/cell style spaces.\n      * Changed <p> generation for macros.\n      * Fixed handling of subpages.\n      * Fixed processing of complex list elements (thanks to Craig Markwardt).\n      * Fixed processing of html \\n (thanks to Craig Markwardt).\n      * Fixed joining of comment lines with text below them.\n      * Fixed table height attribute crash.\n    * Fixed sslclientcert auth.\n    * Added some missing files to i18n processing, translatable strings more\n      complete now.\n    * Change <p> generation from self-closing (<p />) to auto-closing (only\n      emit <p>, let browser find place for </p>).\n    * Fix eating of newline before tables.\n    * Fixed incorrect login hint for not logged-in users trying a disallowed\n      action.\n    * Fixed nasty missing or double </a> formatter bug (mostly happening when\n      user has enabled questionmarks for nonexisting pages).\n\n  Other Changes:\n    * We catch and ignore html to wiki conversion errors in case of hitting\n      the cancel button, so you can get out of the error screen.\n\nVersion 1.5.3-rc2:\n  New Features:\n    * Modified SystemInfo macro to give human readable units and disk usage\n    * cfg.editor_quickhelp makes the quick help below the editor configurable\n      (at least as far as the default_markup is concerned). If set to None,\n      it doesn't display any quickhelp. Thanks to Seth Falcon for the patch.\n\n  Bugfixes:\n    * Fixed double class attribute for nonexistent links\n    * Fixed double </a> with qm_noexist option\n    * Fixed table xxx=\"yyy\" style attribute parsing\n    * If not (editor_force and editor_default == 'text') then display GUI mode\n      switch button (this is only a partial fix, but enough to deny the GUI\n      mode to your users completely)\n    * Fixed XSS issue which could lead to cookie theft etc.\n    * Fixed definition list \"same level\" indenting.\n    * Fixed pagename in log for PackagePages action.\n    * Made <p> self-closing and line-anchors more well-behaved, thanks to\n      Martin Wilck for the patch. I didn't apply the <ol> patch, because this\n      is no real problem, just a problem of a bad standard.\n    * Fixed gui editor *bgcolor crash.\n    * Support/Fix tableclass attr with gui editor.\n\n  Other changes:\n    * Moved back UserPreferences action link from menu to top of page (renaming\n      it to \"Preferences\"), added \"Cancel\" button to make it possible to return\n      to the previous page without saving preferences.\n    * Removed formatter.url \"attrs\" keyword arg that took premade html, we use\n      separate kw args per attribute now.\n    * Moved broken tests to MoinMoin/_tests/broken (= disabling them).\n      All \"active\" tests run ok now.\n      If you want to compare, I included the output of this test run:\n      $ make test >tests/make_test.out\n\n \nVersion 1.5.3-rc1:\n\n  New features:\n    * HINT: please read README.migration\n    * Login and Logout are actions now, therefore you stay on the page where\n      you were before.\n    * UserPreferences is also an action now and moved from top border (in\n      modern theme) to the \"more actions\" dropdown menu. You also stay on the\n      same page.\n    * There is also a [[Login]] macro now. You can put it on any page you want\n      and if the user is not logged in, it renders the login form. If the user\n      is logged in, it doesn't render anything.\n    * We check cfg.superuser to be a list of user names (as documented) and\n      deny superuser access if it is not. This avoids security issues by\n      wrong configuration.\n    * auth methods changed:\n      HINT: if you wrote own auth methods, please change them as you see in\n            MoinMoin/auth.py and test them again before relying on them.\n      * now get a user_obj kw argument that is either a user object returned\n        from a previous auth method or None (if no user has been made up yet).\n        The auth method should either return a user object (if it has\n        determined one) or what it got as user_obj (being \"passive\") or None\n        (if it wants to \"veto\" some user even if a previous method already has\n        made up some user object).\n      * return value of continue_flag is now True in most cases (except if\n        it wants to \"veto\" and abort).\n      * moin_cookie auth method now logs out a user by deleting the cookie and\n        setting user_obj.valid = 0. This makes it possible to still get the\n        user's name in subsequent auth method calls within the same request.\n      * added ldap_login and smb_mount auth methods, see MoinMoin/auth.py and\n        wiki/config/more_samples/ldap_smb_farmconfig.py\n    * MonthCalendar now takes an additional argument for specifying a template\n      to use to directly invoke the page editor when clicking on non-existing\n      day pages.\n    * Added ImageLink macro. Thanks to Jeff Kunce, Marcin Zalewski, Reimar\n      Bauer and Chong-Dae Park for working on it.\n    * Lupy stuff (still experimental, partly broken and disabled by default):\n      * Attachment search using lupy (lupy_search = 1 in your config)\n        Title search will also search attachment filenames.\n        Full text search will also search attachment contents.\n      * Indexing filter plugins, see MoinMoin:FiltersForIndexing\n        Some filters depend on external converters that might not be available\n        for any platform (see Depends: line in filter plugin).\n        Feel free to contribute more filter plugins, especially if you wrote\n        some nice platform independant filter in Python for some popular file\n        format! Filters implemented so far (depending on):\n        MS Word, RTF, MS Excel (antiword, catdoc)\n        PDF (pdftotext)\n        OpenOffice.org XML based data formats (-)\n        XML, HTML (-)\n        text/* (-)\n        JPEG's EXIF data (-)\n        Binary generic (-)\n      * As you might know, Lupy is \"retired\" (that means it isn't developped\n        by its authors any more). We are currently evaluating Xapian as new\n        indexing search engine in moin.\n        If we succeed, we will replace Lupy stuff by some Xapian interface\n        code in moin.\n        But: the filters will likely stay, as we also need them with Xapian.\n    \n    * A new MoinMoin script interface was introduced:\n      \n      Syntax: moin [options] <cmdmodule> <cmdname> [options]\n      \n      For example:\n      moin --config-dir=/my/cfgdir --wiki-url=wiki.example.org/ \\\n           export dump --page=WikiSandBox\n      \n      This will call the \"moin\" script, which will use the --config-dir and\n      --wiki-url options to initialize, then it will go to MoinMoin.script\n      module, import the export.dump module from there and run it, providing\n      the additional --page value to it.\n\n      The old scripts that have not been migrated to this new interface can\n      still be found in MoinMoin/script/old/ - including the old migration\n      scripts.\n    * moin ... account create --name=JoeDoe --email=joe@doe.org\n    * moin ... account disable --name=JoeDoe\n    * moin ... acount check     <-- this is what usercheck script was before\n    * moin ... maint cleancache <-- this is what cachecleaner script was\n    * moin ... maint cleanpage  <-- this is what pagescleaner script was\n\n  Bugfixes:\n    * cookie_lifetime didn't work comfortable for low values. The cookie was\n      created once on login and never updated afterwards. So you got logged\n      out cookie_lifetime hours later, no matter whether you were active at\n      that time or not. This has been changed, we update the cookie expiry now\n      on every request, so it will expire cookie_lifetime after your last\n      request (not after login).\n    * Fixed logout problems when using cfg.cookie_path.\n    * Fixed cookie_path for root url wikis.\n    * Lupy search now behaves a bit less funky. Still no guarantees...\n    * We lowered the twisted server timeout to 2 minutes now (was: 10) because\n      it just used up too many files (open TCP connections until it timeouts)\n      on our farm.\n    * The algorithm used for processing the farmconfig.wikis list was changed\n      to work for big farms (>= 50 wikis), too. This works around the python\n      \"re\" module limitation of having a maximum of 100 named groups in a RE.\n    * Fixed a TypeError which occurred for formatters that dislike None values.\n      (cf. http://moinmoin.wikiwikiweb.de/MoinMoinBugs/PythonErrorEditingFrontPage)\n    * Fixed GUI editor converter error for https:... image URLs.\n    * ThemeBase (use by modern/rightsidebar): removed duplicate AttachFile from\n      actions menu (we already have it in editbar).\n    * Speedup group/dicts scanning for persistent servers.\n    * Implemented HEAD requests for standalone server, this should fix some of\n      the strange effects happening when using \"Save as\" on attachments.\n    * Not a moin bug, but rather a workaround for non-standard non-ASCII DNS\n      hostnames: we just use the IP instead of crashing now.\n    * Spurious cyclic usage error in i18n fixed.\n    * Fixed antispam for python 2.5a xmlrpclib.\n    * I18n for linenumber toggle in listings.\n    * All action menu entries are translatable now.\n\n  Other:\n    * Added css classes for the rst admonitions. Thanks to TiagoMacambira!\n\nVersion 1.5.2:\n\n  New features:\n    * Added FullSearchCached macro which is statically cached.\n      Use it if you do not depend on fresh search results but prefer raw speed.\n    * Added surge protection, see HelpOnConfiguration/SurgeProtection.\n    * Allow hex and symbolic entities.\n    * If there is a user with empty password, we just generate a random one\n      when he requests it getting sent by mail. Thanks to Reimar Bauer.\n    * The superuser now can switch to another user using UserPreferences -\n      nice to help your users when they forgot their password or need other\n      help. You need to logout/relogin to use your own userid afterwards.\n      This function only works correctly if you use moin_cookie authentication.\n      Thanks to Reimar Bauer.\n    * Add new markup for bulletless lists: just use a \".\" instead of \"*\".\n\n  Other changes:\n    * Added \"voyager\" to bot useragent list.\n    * Added locking for caching subsystem.\n    * Deron Meranda's formatter API cleanup.\n    * Added div and span to formatter API.\n    * Removed old unfinished form and export code.\n    * updated i18n\n\n  Fixes:\n   * Fixed table attribute parsing.\n   * Fixed cookie handling wrt properties adherance.\n   * The new \".\" list markup makes it possible to have a bulletless list with\n     elements on the same level. Before this change and only using indentation\n     with blanks, that would get merged into a single paragraph.\n   * It is possible now to have multiple paragraphs in the same list element,\n     just leave an empty line in between the paragraphs.\n   * Fixed GAP processing for ordered lists.\n   * Fix text_gedit formatter's invalid list nesting.\n   * Fixed hr crash in blockquote (but needs more work).\n   * Fixed FootNote's formatter usage.\n   * Fixed rst's headline levels.\n   * Fixed MoinMoinBugs/WikiParserThinksItIsInsidePreWhenItIsNot\n   * Fixed MoinMoinBugs/ListItemGeneratedOutsideList\n   * Fixed that macros were followed by a wrong <p>.\n   * Added <blockquote> to the block elements in the text_html formatter,\n     so it does not close it erratically when you close a inner <p>.\n   * GUI editor converter now also accept http: urls without // (relative or\n     same server urls).\n   * Fixed the DocBook parser in cases where the pagename was non-ascii.\n   * Fixed MoinMoinBugs/ProcessInlineDontSupportUlElement\n\n\nVersion 1.5.1:\n\n  Fixes:\n    * Fixed rst parser docutils version check\n    * Repaired attachment unzipping feature.\n    * Fixed the AddRevision command of the PackageInstaller.\n    * improved the migration scripts (used to migrate pre-1.3 wikis to 1.3+):\n      * do not crash on empty lines in event log\n      * fix edit log format for very old moin data (like 0.11)\n      * workaround for an ugly win32 operating system bug leading to wiki text\n        file mtime not matching edit logs timestamp values if there was some\n        timezone change since last edit (e.g. a daylight saving tz switch),\n        but differing 3600s.\n        This affected pre-1.3 moin wiki servers running on win32 OS only.\n        We now try to correct those inconsistencies in mig05 by fuzzy matching.\n    * fixed bracketed link scheme icon (css class)\n    * we included a modified copy of Python 2.4.2's copy.py as some previous\n      python versions seem to have problems (2.3.x, x < 5 and also 2.4[.0]),\n      see: http://moinmoin.wikiwikiweb.de/MoinMoinBugs/DeepCopyError\n      Our own copy.py was slightly modified to run on 2.3.x and 2.4.x.\n    * Fixed the problem of not being able to change the date/time format back\n      to \"Default\" (UserPreferences).\n    * We generate the GUI editor footer now the same way as the text editor\n      footer.\n    * Include a CSS workaround for yet another IE bug, see:\n      MoinMoinBugs:InternetExplorerPeekABooBugInRightSideBar\n    * classic theme: added GUI editor link\n    * classic theme: added pagename header to editor screen\n    * the \"mail enabled\" check now also checks whether mail_from is set\n\n  Other changes:\n    * Updated FCKeditor to current CVS (2006-01-08 == 2.2+)\n    * Split up show_hosts into show_hosts and show_names\n    * attachment:file%20with%20spaces.txt in attachment list\n    * added support for file:// in GUI editor link dialogue, see also:\n      MoinMoin:FileLinks\n    * cfg.mail_smarthost now supports \"server:port\" syntax, the default port\n      is 25, of course.\n    * removed unused kwargs showpage/editable/form from wikiutil.send_footer\n    * updated i18n (translation texts, additional languages)\n    * removed interwiki:pagename from print view's top of page, added it to\n      the \"lasted edited\" line at bottom right.\n\n\nVersion 1.5.0:\n  HINT: 1.5.0 uses the same data/pages format as 1.3.x. The only thing you want\n        to check is whether the 1.5.x version you are upgrading to has NEW mig\n        scripts compared to the version you are running now (e.g. in 1.3.5 we\n        added some scripts that fixed some small problems).\n        See the MoinMoin/scripts/migration/ directory.\n        You must run every mig script in sequence and only ONCE ever.\n  Fixes:\n    * Fix <x=y> table attributes parsing. Thanks to Reimar Bauer.\n    * Fixed a few bugs in the reStructured text parser. Note that you\n      need to install docutils 0.3.10 or newer (snapshot from December 2005\n      or newer) to make reStructuring parsing work:\n     * Case preservation for anonymous links\n     * MoinMoin links get the appropriate CSS class\n     * Images do not get special CSS markup anymore\n     Thanks to Matthew Gilbert.\n    * Fixed a bug in the WSGI code which led to incorrect exception handling.\n    * Removed all nationality flags. They used to be used for indicating some\n      specific language (NOT nationality) and this was simply wrong and a bad\n      idea.\n    * Fixed some header rendering issues (CSS).\n    * SystemAdmin macro now checks against cfg.superuser list.\n\n  Other changes:\n    * Added turkish i18n. To be considered as alpha as it got in last minute.\n\n\nVersion 1.5.0rc1:\n  This is the first release candidate of MoinMoin 1.5.0.\n  \n  Fixes:\n    * fixed broken logs when a DeletePage (maybe also RenamePage) comment\n      contained CR/LF characters (could happen when using copy&paste)\n    * fixed GUI editor MoinEditorBackup page containing HTML instead of wiki\n      markup\n    * fixed invalid HTML in FootNotes\n    * fixed HTML source in EditorBackup after canceling GUI editor\n    * Footnotes of included pages are not shown at the bottom of the including page.\n    * Bug in Dict handling that often breaks first entry\n\nVersion 1.5.0beta6:\n  Authentication:\n    * Added SSO module for PHP based apps. Currently supported: eGroupware 1.2.\n      No need to login in two systems anymore - MoinMoin will read the PHP session\n      files.\n\n  Fixes:\n    * Improved rendering of bullet lists and external links in Restructured text.\n      Thanks to Matthew Gilbert.\n    * Fixed modern theme rendering, including some fixes and workarounds for\n      broken MS IE.\n    * When checking for email uniqueness, do not compare with disabled user\n      profiles.\n    * Fix sending of HTTP headers for Despam action.\n    * Add some margin left and right of the link icons.\n\n  Other changes:\n    * Made it easier for auth methods needing a user interface (like ldap or\n      mysql stuff). Unlike http auth, they usually need some \"login form\".\n      We made UserPreferences login form values (name, password, login, logout)\n      available as kw args of the auth method, so it is easy and obvious now.\n    * Make login and logout show at the same place. Is only shown when\n      show_login is True (default).\n    * Disabled login using &uid=12345.67.8910 method. Please use name/password.\n    * Made builtin moin_cookie authentication more modular: the cookie is now\n      touched by MoinMoin.auth.moin_cookie only, with one minor discomfort:\n      When creating a user, you are not automatically logged in any more.\n    * We now use the packager for additional help and system pages in all other\n      languages except English. The packages are attached to SystemPagesSetup\n      page and can be installed from there after getting \"superuser\" powers.\n      The \"extra\" package contains a collection of orphan pages not listed on\n      some SystemPagesIn<Language>Group page.\n\n\nVersion 1.5.0beta5:\n  Fixes:\n    * Fixed a minor user interface bug: it showed RenamePage and DeletePage\n      actions in the menu if you only had write rights and then complained\n      when you really tried when you had no delete rights additionally.\n    * We don't remove RenamePage and DeletePage from menu any more if user is\n      unknown. This stuff is only driven by ACLs now.\n    * Some fixes to Despam action.\n    * Fixed moin_dump (broken by some recent theme init change).\n    * Fixed a few tests by moving the theme init from moin_dump to RequestCLI.\n    * removed old_onload reference from infobox.js\n    * Fixed MoinMoin logo for IE.\n    * search: fixed whitespace handling in linkto: search terms\n    * Increased stability of the tests system by outputting results to sys.stdout\n      instead of request. Note that this changes the semantics for e.g. mod_py or\n      mod_fcgi.\n    * Fixed packaging system in the case of AddRevision that does not alter the page.\n    * Fixed a few bugs in the XML formatters (dom_xml, text_xml, xml_docbook).\n    * Fixed link icons. We now just use a.xxx.before where xxx is the link scheme,\n      e.g. a.http.before. See theme's common.css.\n    * Hopefully fixed some issue with non-ASCII attachment filenames.\n    * Workaround for Opera 8.5 making silly \"No addition\" categories.\n    * Do not show GUI editor for non-wiki format pages, because we only have a\n      converter from html to wiki right now.\n    * Fix the modern CSS issues for editbar, when it shifted content far right.\n      Also removed the absolute height value that never was right.\n    * Fix mod_python adaptor bugs failing to handle Location correctly.\n      See: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=339543\n\n  Other changes:\n    * Added irc:// to the builtin supported link schemas. You can remove it\n      from config.url_schemas in case you have patched it in there.\n    * Added cfg.user_autocreate (default: False). Use True to enable user\n      profile autocreation, e.g. when you use http authentication, so your\n      externally authenticated users don't need to create their moin profile\n      manually. The auth method (see cfg.auth list) must check this setting\n      if it supports auto creation.\n    * Added user_autocreate support for auth.http and auth.sslclientcert.\n    * Added \".\" and \"@\" to allowed characters in usernames. This is needed\n      e.g. when using mod_pubcookie for authentication. mod_pubcookie returns\n      userids like \"geek@ANDREW.CMU.EDU\" (e.g. the Kerberos domain is part of\n      the id). Thanks to Brian E. Gallew for his patch, which we used for\n      inspiration for user autocreation changes.\n    * Changed auth method to return a tuple (user_obj, continue_flag), see\n      comments in auth.py.\n    * auth methods now create user objects with kw args auth_method and\n      auth_attribs, so that moin knows later how the user was authenticated\n      and which user object attributes were determined by the auth method.\n    * Added MoinMoin/scripts/import/IrcLogImporter.py to import supybot's\n      IRC logs into a moin wiki. We use MonthCalendar compatible page names,\n      so you can use the calendar for showing / navigating the logs.\n    * Removed packager binary from FCKeditor (fixing a Debian policy problem).\n    * Worked around .png transparency bugs of IE with the new logo. We ship\n      two logos: moinmoin.png without an alpha channel (IE compatible) and\n      moinmoin_alpha.png which has an alpha channel and looks better on\n      browsers with full .png support.\n    * Allow a .zip file to have a directory in it if it is the only one.\n\nVersion 1.5.0beta4:\n  Fixes:\n    * use <span class=\"anchor\"> instead of <a> for line-xxx anchors, this\n      fixes some rendering problems on IE\n    * Fixed the ReStructured text parser when it was used with non-HTML\n      formatters. Increased compatiblity with new docutils code.\n      (Thanks to Matt Gilbert.)\n  Other changes:\n    * cfg.stylesheets = [] (default). You can use this on wiki or farm level\n      to emit stylesheets after the theme css and before the user prefs css.\n      The list entries must be ('screen', '/where/ever/is/my.css') style.\n    * Added sample code for auth using an external cookie made by some other\n      program. See contrib/auth_externalcookie/*. You need to edit it to\n      fit whatever cookie you want to use.\n\nVersion 1.5.0beta3:\n  Fixes:\n    * fixed editor preview throwing away page content for new pages\n    * require POST for userform save and create* action\n    * use request.normalizePagename() while collecting pagelinks\n    * do not offer gui editor for safari\n  Other changes:\n    * tell user if account is disabled\n    * added support for linking to .ico and .bmp\n    * attachment methods for the text_xml and xml_docbook formatters\n    * new favicon\n    * updated i18n (fixed nl, did nobody notice this?) and underlay\n    * changed show_interwiki default to 0\n\nVersion 1.5.0beta2:\n  Fixes:\n    * fix wrong _ in title links (MoinMoinBugs/AddSpaceWikiNameAtHead)\n    * fix gui editor (converter) crash on save\n    * MoinMoinBugs/PageHitsFails\n    * MoinMoinBugs/PackagePagesFailsBecauseAllowedActionsMissing\n    * Avoid destroying existing page content if editor is called with\n      template parameter for an existing page.\n    * fix countdown javascript for browser status line in editor\n    * added page title display for editor\n    * added header div for classic theme\n\n  Authentication and related:\n    * Added a WhoAmI.py wiki xmlrpc plugin to check whether auth works\n      correctly for xmlrpc. There is a counterpart script WhoAmI.py that\n      uses http auth when calling the xmlrpc plugin, so you can use it to\n      check http auth.\n\nVersion 1.5.0beta1:\n    * Requirements changed to require Python >= 2.3. We recommend that\n      you use the latest Python release you can get. The reason we\n      dropped 2.2.2 support is because no developer or tester uses this\n      old version any more, so incompatibilities crept in the code\n      without anybody noticing. Using some recent Python usually is no\n      real problem, see there for some hints in case you still run an\n      old python: http://moinmoin.wikiwikiweb.de/NewPythonOnOldLinux\n      The hint also does apply to other POSIX style operating systems,\n      not only Linux.\n    * We recommend you use MoinMoin/scripts/cachecleaner.py to clean the\n      wiki's cache (see comments at top of the script).\n      The cache will automatically be rebuilt (some operations may take\n      some time when first being used, e.g. linkto: search, so be patient!).\n\n  Config Changes:\n     * there is a file CHANGES.config with just the recently changed stuff\n       from multiconfig.py\n     * new defaults:\n       * page_front_page old: u\"FrontPage\" new: u\"HelpOnLanguages\"\n         please just read the help page in case you see it :)\n       * bang_meta old: 0 new: 1\n       * show_section_numbers old: 1 new: 0\n       * some regexes that used to be [a-z]Uxxxx$ are now [a-z0-9]Uxxxx$\n       * navi_bar has no page_front_page as first element any more\n     * removed settings and code [new behaviour]:\n       * acl_enabled [1]\n       * allow_extended_names [1]\n       * allow_numeric_entities [1]\n       * backtick_meta [1]\n       * allow_subpages [1]\n     * new settings:\n      * cfg.mail_sendmail = \"/usr/sbin/sendmail -t -i\" can be used if sending\n        via SMTP doesn't work on your server. Default is None and that means\n        using SMTP.\n      * language_default replaces the old default_lang setting (just renamed).\n      * language_ignore_browser = True can be used to let moin ignore the\n        user's browser settings (e.g. if you run a local-language only wiki\n        and your users use misconfigured or buggy browsers often). Default is\n        False. Don't forget to set language_default when using this.\n \n    * Wiki Editor changes / new WYSIWYG editor\n     * fully imported the javascript based LGPLed FCKeditor (many thanks\n      to Fred CK for his great work). See http://fckeditor.net/ for details.\n     * config for FCKeditor is at wiki/htdocs/applets/moinfckeditor.js\n     * added cfg.interwiki_preferred (default = []) to set a list of wikis to\n       show at the top of the wiki selection list when inserting an\n       interwiki link (just use the same wiki name as in interwiki\n       map). If the last list item is None, then the preferred wikis\n       will not be followed by the entries of the interwiki map.\n    * moved save/preview/... buttons to the top so that they can be\n      easily reached\n    * reduced edit_rows default to 20 lines\n    * Added support for edit by doubleclick in the diff view\n\n    * Improved wiki farm support\n     * make user files sharable between several wikis in a farm\n      * allow/use interwiki subscriptions\n      * use interwiki links in page trail\n      * save bookmark per wiki name\n     * cfg.cookie_domain can be used to set a cookie valid for a complete\n       domain (default: None == only for this host). If you use '.domain.tld',\n       the cookie will be valid for all hosts *.domain.tld - good for host\n       based wiki farms.\n     * cfg.cookie_path can be used to set a cookie valid for a wiki farm under\n       some base path (default: None == only for this wiki's path). If you use\n       '/wikifarm',  the cookie will be valid for all wikis\n       server.tld/wikifarm/* - good for path based wiki farms.\n     * Interwiki user homepage (if you have MANY users)\n       Generated links for usernames are interwiki now, use cfg.user_homewiki\n       (default: 'Self') to specify in which wiki the user home pages are\n       located. Note: when pointing this to another wiki, the /MoinEditorBackup\n       functionality will be disabled.\n       @SIG@ also uses interwiki when needed.\n\n    * Authentication, ACLs and related\n     * Modular authentication: cfg.auth is a list of functions that return a\n       valid user or None, use it like this:\n           from MoinMoin.auth import http, moin_cookie\n           auth = [http, moin_cookie]\n     * cfg.auth_http_enabled was removed, please use cfg.auth instead.\n     * http auth now supports \"Negotiate\" scheme, too\n     * Added sslclientcert auth method (Apache: untested, Twisted: not\n       implemented, IIS: no idea). See MoinMoin/auth.py for details.\n       Submit a patch if you have improvements.\n     * cfg.superuser is a list of unicode usernames. It is used by some\n       critical operations like despam action or PackageInstaller.\n     * removed allowed_actions, we now use actions_excluded only and it\n       defaults to [], that means, no action is excluded, everything is\n       allowed (limited by ACLs). In case of RenamePage and DeletePage,\n       this shouldn't be a problem as both can be reverted. In case you\n       did not allow attachments, you now have to use:\n       actions_excluded = ['AttachFile']\n     * special users (All, Known, Trusted) in Groups are now supported\n     * MoinMoin.security.autoadmin SecurityPolicy added\n       When using this security policy, a user will get admin rights on his\n       homepage (where pagename == username) and its sub pages. This is needed\n       for the MyPages action, but can also get used for manual ACL changes.\n       It can also be used for Project page auto admin functionality, see the\n       comments in the script for details.\n       Further it can automatically create the user's group pages when the\n       user saves his homepage.\n     * there is a UpdateGroup xmlrpc call, see MoinMoin/xmlrpc/UpdateGroup.py -\n       you can use this to update your *Group pages e.g. when generating them\n       from an external group database.\n\n    * UserPreferences changes\n     * Alias name: is used for display purposes, when \"name\" is cryptic. It is\n       shown e.g. in the title attribute of userid links (displayed when\n       moving the mouse over it).\n     * \"Publish my email (not my wiki homepage) in author info\" - use this\n       if you don't have a wiki homepage, but if you want to be contactable\n       by email. When you edit a page, your email address will be published\n       as mailto: link on RecentChanges, at bottom of page (last editor) and\n       in page info. If the wiki runs publically on the internet, be careful\n       using this or your email address might be collected by spammers.\n     * Preferred Editor: whether you want to use the text editor (as in\n       previous moin versions), the gui editor (new!) or both (you will get\n       2 edit links in that case).\n     * a user can add/remove the current page to/from his quicklinks with an\n       appropriate action now\n     * if cfg.user_email_unique = False, we don't require user's email\n       addresses to be unique\n     * removed show_fancy_links user preferences setting to simplify code and\n       caching. Displaying those icons is now done by CSS styles (see\n       common.css). Maybe needs fixing for non-standard themes and RTL langs.\n\n    * Markup\n     * added strikethrough markup: --(striked through text here)--\n     * @ME@ expands to just the plain username (no markup added) on save\n    \n    * User homepages\n     * when a user accesses his own non-existing homepage (pagename ==\n       username), the wiki will present the MissingHomePage system page\n       content, explaining what a user homepage is good for and offer\n       one-click editing it with content loaded from HomepageTemplate\n     * creation of homepage subpages is assisted by the MyPages action, which\n       offers rw, ro page creation (and a related group) or creation of private\n       pages. If you are not in the user_homewiki, you will get redirected\n       there first.\n\n  Other changes/new features:\n    * Added PackageInstaller and unzipping support (see wiki page\n      HelpOnActions/AttachFile for further details).  PackageInstaller requires\n      the user to be in cfg.superuser list.\n     * Added an PackagePages action to simplify the package creation.\n    * Added location breadcrumbs - when you are on some subpage, the page\n      title parts link to the corresponding parent pages, the last part does\n      the usual reverse linking.\n    * added WSGI server support, thanks to Anakim Border, see:\n      wiki/server/moinwsgi.py (moin as WSGI app, uses the flup WSGI server,\n                               see http://www.saddi.com/software/flup/)\n      MoinMoin/server/wsgi.py (adaptor code)\n    * added a \"Despam\" action to make de-spamming a wiki easy (mass revert\n      bad changes done by a single author or bot). You need to be in\n      cfg.superuser to use it.\n    * Better diffs with links to anchors to the changed places\n    * Enhanced table support in the DocBook formatter.\n    * Added 'moin' daemon script, that let you run moin standalone\n      server as daemon and control the server with simple command line\n      intreface: moin start | stop | restart | kill\n    * Add 'restart' option to mointwisted script\n    * Add properties option to standalone server config. Allow\n      overriding any request property like in other server types.\n    * Add support for running behind proxy out of the box with out\n      manual url mapping.\n      See HelpOnConfiguration/IntegratingWithApache\n    * added a WikiBackup action, configure it similar to this:\n      data_dir = \"/path/to/data\"\n      backup_include = [data_dir, ] # you can add other dirs here\n      backup_users = [\"BackupUserName\", ] # only TRUSTED users!\n      You usually don't need to change the default backup_exclude setting.\n      The default backup_include list is EMPTY and so will be your\n      backup in case you don't configure it correctly.\n      If you put your data_dir there, the backup will contain private\n      user data like email addresses and encrypted passwords.\n    * Added a SubscribeUser action which allows the administrator to subscribe users to the\n      current page.\n    * Added thread count to SystemInfo macro.\n    * Added Petr's newest patch against the DocBook code. It allows you to use macros (esp. the include macro) in DocBook pages in order to build larger documents.\n    * Added a RenderAsDocbook action which redirects to the DocBook formatter.\n    * Added searching for wiki-local words lists under <data_dir>/dict/.\n      They are used additionally to the global lists in MoinMoin/dict/.\n    * moin_dump now also dumps attachments referenced from the page.\n      It doesn't dump stuff that is just attached, but not referenced!\n    * On RecentChanges we now force the comment to be breakable, this improves\n      rendering of over-long words or on narrow browser windows - especially\n      for themes with limited content width like rightsidebar.\n    * We now have the \"new\" icon on RecentChanges clickable, just links to the\n      page.\n    * Print view now shows \"interwikiname: pagename\" (for show_interwiki = 1).\n\n  International support:    \n    * mail_from can be now a unicode name-address \n      e.g u'J\u00fcrgen wiki <noreply@jhwiki.org>'\n\n  Theme changes:\n    * logo_string is now should be really only the logo (img).\n      If you included your wiki's name in logo_string you maybe want to remove\n      it now as it is shown as part of the location display now anyway (if\n      you set show_interwiki = 1).\n    * You maybe want to remove page_front_page from your navi_bar - we link to\n      that page now from the logo and (new, if you set show_interwiki = 1) from\n      the interwiki name displayed in location display, so you maybe don't need\n      it in navi_bar, too.\n    * If you have a custom theme, you should / may:\n     * sync modern/css/screen.css #pagelocation #pagetrail stuff to your\n       screen.css or pagelocation display (title()) will look strange (like a\n       list).\n     * remove \"#title h1 ...\" CSS (or any other CSS assuming h1 is a page\n       title and not just a first level heading), it is not used any more.\n     * we now render = heading = as <h1> (was <h2> before 1.5),\n       == heading == as <h2> (was <h3>), etc.\n     * maybe move both title() and trail() to header area, like the builtin\n       themes do it.\n     * there is a new interwiki() base theme method that optionally (if\n       show_interwiki = 1) shows the interwiki name of this wiki and links to\n       page_front_page. The css for it is #interwiki.\n\n  Developer notes:    \n    * Plugin API was improved. When plugin module is missing,\n      wikiutil.PluginMissingError is raised. When trying to import a\n      missing name from a plugin module, wikiutil.PluginMissingError is\n      raised. You must update any code that use wikiutil.importPlugin.\n      Errors in your plugin should raise now correct tracebacks. See\n      http://moinmoin.wikiwikiweb.de/ErrorHandlingInPlugins\n    * pysupport.importName was changed, it does not check for any\n      errors when trying to import a name from a module. The calling\n      code should check for ImportError or AttributeError. Previous\n      code used to hide all errors behind None.\n    * Its easier now to customize the editbar by overriding\n      editbarItems() in your theme, and returning a list of items to\n      display in the editbar. To change a single editbar link, override\n      one of the xxxLink methods in your theme.\n\n  Internal Changes:\n    * request.formatter (html) is available for actions now\n    * theme API's d['page_home_page'] is gone (sorry) and replaced by\n      d['home_page'] which is either None or tuple (wikiname,pagename).\n      It is better to use the base classes function for username/prefs anyway.\n    * introduced cfg.hacks for internal use by development, see comment in\n      multiconfig.py and file HACKS.\n    * added IE7 (v0.9) from Dean Edwards (see http://dean.edwards.name/IE7/) -\n      that should fix quite some IE bugs and annoyances (on Win32).\n      * for enabling IE7, use cfg.hacks = { 'ie7': True }\n    * reducewiki now also copies all attachments (we use that to make underlay\n      directory from moinmaster wiki's data_dir)\n\n  Fixes:  \n    * Fixed a typo in xslt.py which led to a traceback instead of an\n      error message in case of disabled XSLT support.\n    * Fixed crash in twisted server if twisted.internet.ssl is not\n      available.\n    * Fixed wrong decoding of query string, enable wiki/?page_name urls\n      with non ascii page names.\n    * Fixed wrong display of non ascii attachments names in\n      RecentChanges and page revision history.\n    * Fixed a crash when trying to run standalone server on non posix os.\n    * Fixed highlight of misspelled words in Check Spelling action.\n    * Fixed case insensitivity problems on darwin (Mac OS X). See\n      MoinMoinBugs/MacHfsPlusCaseInsensitive\n    * Added RecentChanges (only the english one) to the pages getting\n      html_head_index headers\n    * text_html cache files written with this code will invalidate themselves\n      if they detect to be older than the wikiconfig. Note: you should remove\n      all old text_html cache files once after upgrading, they will then be\n      rebuilt automatically with the new code.\n    * Fixed MoinMoinBugs/12_to_13_mig10_Walk\n    * Fixed the word_rule: a word like AAAbbAbb isn't teared into two parts\n      any more (was: AA<link>AbbAbb</link>)\n    * Fixed false positive InterWiki markup for languages like Finnish.\n      InterWiki links are only rendered if the left side has an appropriate\n      entry in the interwiki map, otherwise it is rendered as simple text.\n    * Fixed unicode error when uploding non-ascii file name using mod\n      python.\n    * Fixed error handling of wikirpc requests, should give more\n      correct errors and prevent no error output and blocking the\n      client in some cases.\n    * Fixed the \"lost password\" mail processing. If a user entered some email\n      address unknown to the system, he was not notified of this, but just got\n      a useless mail with no account data in it. Now the system directly tells\n      the user that he entered an unknown email address.\n    * Fixed SystemInfo, it now also lists parsers in data/plugin/parser dir.\n    * Fix error handling on failure, improved error display\n    * Fix error handling when importing plugins or importing modules\n      dynamically. The fix is not backward compatible with older plugins.\n    * Fix chart action, returns a page with error message when chart\n      can not be created.\n    * Fixed formatter usage in the ShowSmileys macro.\n    * Fixed updating pagelinks cache for [:page:text] or [wiki:Self:page text],\n      fixes display of LocalSiteMap and rendering of such links.\n    * Hopefully fixed urllib problems (esp. with py 2.4.2, but also before) by\n      using our own urllib wrapper that handles encoding/decoding to/from\n      unicode, see wikiutil.py. Also made a similar fix for making and parsing\n      query strings.\n    * Fixed MonthCalendar tooltips when containing special chars like quotes.\n    * Added html escaping for diff text for RSS feed with diff=1.\n    * The distance between page content beginning and the first = heading =\n      was much too much. Fixed.\n    \nVersion 1.4:\n\n    We used that version number for an internal and early development version\n    for what will be called moin 2.0 at some time in the future.\n    There will never be a 1.4.x release.\n\n\nVersion 1.3.5 (2005-08-04, Revision moin--main--1.3--patch-883)\n\nFixes:\n    * small CSS fix for rightsidebar theme\n    * applied some Debian patches (thanks to Jonas!):\n      * de i18n spelling fixes\n      * AttachFile fix, we strip CR in .draw files now\n      * when loading spellcheck dictionaries, we want utf-8, but we make\n        a 2nd try with iso-8859-1 encoding.\n\nNew Features:\n\n    * enabled using https with the Twisted server:\n      You need to use port 443, have PyOpenSSL (+ ssl libs it depends on)\n      installed and have some site key and certificate PEM files configured in\n      your twistedmoin.py file:\n      sslcert = ('/whereever/cert/sitekey.pem', '/whereever/cert/sitecert.pem')\n\n\nVersion 1.3.5rc1 (2005-07-31, Revision moin--main--1.3--patch-865)\n\nFixes:\n\n    * Fixed security bug when acl of deleted page was ignored. See:\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/ACLIgnoredAfterDelete\n    * AttachFile did not display the original filename plus there\n      was a confusion in input field labelling ('Rename to').\n    * Fixed shortcut link non-existent page detection.\n    * Fixed non-working bookmark function on python 2.2.x.\n    * Fixed wikirpc getPageInfo call on python 2.2.x.\n    * Fixed the failing import of plugins from the data/plugin/\n      directories if run in zipimport environments.\n    * Fixed traceback which occurred on negated searches.\n    * Fixed crash when trying to render error message on twisted, fast\n      cgi and modpy.\n    * Fixed error message with modpy, used to show wrong errors below\n      the real message.\n    * Fixed search and goto text fields for better compatibility with\n      dark themes and better control through css.\n    * Show an edit link if MissingPage is missing and a warning in the\n      server log.\n    * Fixed missing footer in the editor.\n    * Fixed indented (invalid) headings with broken links in table of\n      contents.\n    * Fixed crash when file name is too long, show standard error message.\n    * Save trail file in a safe way, should be enough for normal use.\n    * Fixed remember_last_visit user preferences option when show_trail\n      is not selected.\n    * Fixed the tests for Standalone, Twisted, FastCGI and Mod_Python.\n      Run with ?action=test from any page.\n    * Fixed rare bug when wrong search type was performed when pasting\n      search term in Safari.\n    * Fixed crash for custom formatters and dom_xml (which occurred if\n      smileys were in the page).\n    * Editor opens on double click in pages with single quote in the\n      name, like \"Ben's Wiki\".\n    * '/.' in page names are not replaced any more by '/(2e)'\n    * Fixed the long delays while saving pages using RequestCLI.\n    * Fixed variable expanding for users with non WikiName.\n    * Fixed MonthCalendar's calculation of \"today\" to use the user's\n      time zone setting.\n    * Fixed moin_dump script, use same configuration options as other\n      scripts.\n    * Fixed url_mappings to work in proxied setups and sent mails\n      again. Also fixed for image links. Thanks to JohannesBerg.\n    * Fixed page shown after saving a drawing (esp. when saved from a\n      sub page). Fixed help link for drawings.\n    * Fixed mig10 script to run on Python < 2.3.\n    * The twisted server defaulted to a socket timeout of 12 hours!\n      We reduced that to a more sane 10 minutes, that should still be more\n      than enough. This fixed the \"too many open files\" problem we\n      encountered quite often recently. Thanks to Helmut Grohne!\n\nOther Changes:\n\n    * Added {hu} flag.\n    * Added cz, pt and pt-br i18n.\n    * We send a 404 http status code for nonexisting wiki pages now,\n      maybe this will repell some search engines from requesting gone\n      pages again and again. The wiki user still sees the MissingPage\n      wiki stuff, so a user usually won't notice this change.\n    * Return 500 error code on failure and exceptions.\n    * Added some more bot / leech tool user agent strings.\n    * Prevent page floating elements from floating out of the page over\n      the footer, in modern, rightsidebar and classic themes.\n    * Encode URLs in a safer way\n    * We allow usernames with ' character in them now (like Tim O'Brian).\n    * Added support for the new security flags in docutils 0.3.9.\n    * @MAILTO@ expands now to safer [[MailTo()]] macro.\n    * Clarified and i18ned lost password mails.\n    * Added 'TitleIndex' and 'SiteNavigation' (+ translation) to the\n      list of pages that use html_head_index (so that robots\n      \"index,follow\").  Please make sure to have either FindPage,\n      TitleIndex or SiteNavigation in your navi_bar or in your\n      page_front_page content if you want search engines to find all\n      your pages.\n    * Make it possible to send account data when being logged in (for\n      future reference or whatever purpose).\n    * Speed up when running with persistent servers, the wiki config\n      does only get loaded once and misc. stuff is being cached between\n      requests now.\n    * The unit tests are disabled when using multi threading, because\n      the wiki configuration is shared between diffrent threads.\n    * The main code path (using standalone server) of MoinMoin runs on\n      PyPy now.\n    * Formatters do automatically transform HTML to plain text if they are\n      called with raw HTML code.\n    * Using larger socket backlog on Standalone and FastCGI servers\n      should be more reliable on high load.\n    * We now strip leading path from attachments uploaded by IE (this is\n      a bug in IE, not in MoinMoin). Better use a sane browser, like Firefox.\n    * added \"teleport\" to the user agent blacklist\n\nNew Features:\n\n    * Integrated Lupy indexer for better search performance. It is disabled\n      by default as of 1.3.5 as it still has known issues.\n      See multiconfig.py if you want to test it.\n    * Integrated MonthCalendar 2.1, with some new features:\n      * a mouseover bubble that shows first level headlines of the linked\n        day page\n      * all calendars with same pagename move when using cal navigation,\n        thanks to Oliver Graf\n      * included AnnualMonthlyCalendar patch of Jonathan Dietrich\n        (use [[MonthCalendar(Yearly,,,+1,,6,1)]] syntax for birthdays and\n        other annually repeating stuff)\n      Make sure you remove old MonthCalendar.* from data/plugin/macro so that\n      moin will use the new code in MoinMoin/macro/MonthCalendar.py.\n      Maybe also clear the text_html cache.\n    * Added the new XSLT parser and the DocBook parser. This should increase\n      the 4suite compatiblity. See HelpOnXmlPages for details.\n      It now should run on 4suite 1.0a4 and 1.0b1. Thanks to Henry Ho!\n    * Added the DocBook formatter. This will let you generate DocBook markup\n      by writing simple wiki pages. It needs PyXML.\n    * It is now possible to customize parts of the UserPreferences page in\n      your wikiconfig (changing defaults, disabling fields, removing fields):\n      * Use user_checkbox_* for the checkboxes.\n      * Use user_form_* for other fields.\n      * See MoinMoin/multiconfig.py for the built-in defaults.\n    * New standalone server classes: ThreadPoolServer using pool of\n      threads, ThreadingServer with thread limit and ForkingServer.\n    * New standalone server configuration options: serverClass,\n      threadLimit, requestQueueSize.\n    * Use \"PythonOption Location\" in mod_python setup to solve script_name\n      problems.\n\nDeveloper notes:\n    \n    * Theme can now override maxPagenameLength() method to control page\n      name shortening.\n    * A search Match now provides access to the full re match via\n      the re_match attribute (use to access groups of the match)\n    * Underlay is not managed by arch any more. The tree contains an\n      underlay tarball, and you should untar after you update from main.\n    * \"make update-underlay\" will untar underlay\n    * \"make merge\" will star-merge main into your tree\n    * \"make test\" will now create and run in a fresh testwiki instace\n    * \"make clean\" options added\n    * _tests module does not have a global request any more. To refer to\n      the current request in a test, use self.request.\n    * _tests.TestConfig class require a request in the constructor.\n    * \"python tests/runtests.py test_module\" will run only test_module\n    * request.cfg stays between requests (for persistent servers).\n\n\nVersion 1.3.4 (2005-03-13, Revision moin--main--1.3--patch-666)\n\nFixes:\n\n    * Fixed ACL check in LikePages macro that caused links to unreadable \n      pages to show.\n    * Fixed ACL check in newpage action.\n    * Fixed a security problem when admin policy defined in a custom\n      SecurityPolicy class was ignored.\n    * Fixed ACL check in action=show so that a user who may not read a page\n      also can't find out WHEN the protected page was updated.\n    * Workaround on Windows 95, 98, ME in order to clear the dircache.\n      This fixes some bugs related to an outdated page list and newly created\n      pages that did not appear immediately.\n    * Fixed decoding issues of page names on Windows, finally.\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/BrokenUmlautsInLinksIn131\n    * Fixed traceback on IIS.\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/request%2epy_broken_on_IIS\n    * Fixed wikirpc for standalone server.\n    * Other fixes (encoding and str/unicode data type related) to wikirpc\n      server, fixing some non-ascii issues hopefully.\n    * Fixed broken query strings for Standalone installations.\n    * Fixed backlinks - the result did not always show all links, often it \n      showed too many irrelevant matches (MoinMoinBugs/BacklinksAreBroken).\n    * Fixed the acceptance of the show_hosts setting. Now you should be able\n      to hide any IP or host name from being published by MoinMoin by enabling\n      this option.\n    * Fixed wrong line endings on email messages.\n    * Fixed MoinMoinBugs/StandaloneUnquotesTooMuch.\n    * Fixed crash when trail file is missing.\n    * Fixed a traceback when searching for single ( or ).\n    * Added mig10 script to fix crashes with uncoverted edit-locks and file\n      attachments. Just use it as you did with mig1..mig9 before.\n    * Added mig11 script to add __init__.py files to data/plugin (and below).\n    * added some fixes for the xslt parser (thanks to fanbanlo), it might be\n      still broken, but someone with deeper knowledge about xslt should fix it.\n    * Replaced image link with W3C's \"html 4.01 compliance\" icon by a simple\n      text link to avoid https: or config trouble.\n    * Catch OverflowError backtrace when illegal date strings (e.g. <1970 or\n      >2038) are fed to moinmoin's time routines. It will just output current\n      date / time in those cases.\n    * UserPreferences now also set a date_fmt preference and Date macro\n      honours it. You may have to reset your UserPreferences value for that.\n    * Fixed free parent and subpage links in interwiki notation.\n      http://moinmoin.wikiwikiweb.de/MoinMoinBugs/FreeParentLinksAreBroken\n    * Fixed a traceback for invalid ReST markup.\n    * Fixed UnicodeError in SystemAdmin's Attachment Browser.\n\nOther Changes:\n\n    * Optimized the IRC parser.\n    * Support for zipimport of the MoinMoin package. This allows you to use\n      py2exe and similar programs.\n    * Show the editor's name in the mail subject.\n    * Added the pragmas description and keywords. They will add <meta> headers\n      if used.\n    * Added MoinMoin/scripts/xmlrpc-tools/putPageTest.py example script, useful\n      as a starting point for importing data using wiki xmlrpc.\n    * Optimised display on Opera browser.\n\nNew features:\n\n    * The search modifier \"linkto:\" was introduced. You can use it to search\n      for links.\n    * The NewPage macro now can take a PageTemplate parameter, see HelpOnMacros.\n    * New config settings (so you don't need to edit wikirpc.py any more):\n      xmlrpc_putpage_enabled = 0 (if 1, enables writing to arbitrary page names)\n      xmlrpc_putpage_trusted_only = 1 (if 0, doesn't require users to be\n       authenticated by http auth - DANGEROUS, DO NOT SET TO 0!!!)\n    * Added support for Digest and NTLM authentication with CGI (e.g. if you\n      use those Apache modules)\n    * The datetime string accepted by Date and DateTime macros was extended to\n      accept a timezone specification, so now +/-HHMM is also valid, e.g.:\n      2005-03-06T15:15:57Z (UTC, same as +0000)\n      2005-03-06T15:15:57+0000 (UTC)\n      2005-03-06T16:15:57+0100 (same time given as local time for time zone\n                                with offset +0100, that is CET, e.g. Germany)\n      2005-03-06T10:15:57-0500 (same time given as local time for time zone\n                                with offset -0500, EST, US Eastern Std. Time)\n      The values given as macro argument will be transformed to UTC internally\n      and then adapted again according to viewing user's UserPreferences, so\n      the user will see the same moment in time but shown in his local time\n      zone's time (at least if he set his UserPreferences correctly and didn't\n      forget changing them twice a year for DST and non-DST).\n    * Readded (now optional) editlink footer to Include macro. Add\n      ',editlink' to call to enable this.\n    * star \"smileys\" e.g. {*}{*}{*}{o}{o}\n\n\nVersion 1.3.3 (2005-01-24, Revision moin--main--1.3--patch-595)\n\nFixes:\n\n    * fixed ACL security problem in search\n    * fix for IIS with CGI allowing page names that contain chars\n      that are not in the system code page\n    * fixed MoinEditorBackup revisions to start with 1 now\n    * improved page locking ('current' file)\n    * Unittests (normally shown at end of action=test output) are currently\n      disabled for everything except CGI, because they only work reliably with\n      CGI, giving wrong results for other request methods.\n\n\nVersion 1.3.2 (2005-01-23, Revision moin--main--1.3--patch-587)\n\nFixes:\n\n    * ACL bugfix for deleted pages with ACL protection.\n    * ACL bugfix for \"Default\" acl.\n    * Fixed updating of groups and dicts\n    * Python 2.2.x related fixes (worked on 2.3+)\n      * Fixed traceback in RecentChanges.\n      * Fixed traceback with links browser.\n    * Fixed 0 revision display in 'Show changes'.\n    * Fixed traceback in Antispam which occurred when it could not connect\n      to MoinMaster. Log the errors to stderr or error.log.\n    * Fixed bug in Page init (no date, use rev). Fixes problem with\n      #deprecated PI.\n    * Fixed empty lists in empty search results.\n    * Cosmetic fix for modern theme (when viewed with Internet Explorer).\n    * Fixed migration 9 script, do not drop newline, do not drop error.log, \n      note about missing error.log.\n    * Fixed repair_language.py script, keep ending newline on revisions.\n    * Show headings and macro content in correct direction when mixing content \n      in several directions in the same page and using caching.\n    * Fixed bug in standalone re farmconfig.\n    * Fixed DOS condition in antispam code.\n    * Use smaller margin in print mode to get better results with \n      Mozilla/Firefox.\n    * Fixed some user input escaping issues.\n    * Fixed a problem when one wiki plugin override other wikis plugins in \n      same farm.\n    * Fixed some broken tests.\n    * Fixed recursive include in pstats.\n    * Fixed bug in standalone - HTTP result code was 200 even when the access\n      was forbidden.\n    * Fixed traceback when trying to login with non-ascii password.\n    * Fixed traceback when xml is not available, reported on Python 2.2.?\n    * Fixed slideshow to show slides in sorted order again.\n    * Fixed serving multiple wikis on same IP/different ports with twisted and\n      farmconfig.\n    * It is possible to run with data_underlay_dir = None for special\n      application, but be aware that the wiki won't be usable unless you have\n      at least some of the system pages from underlay/ available.\n    * Files with Unicode characters in their filename are possible now.\n    * Bugfix for broken [:page#anchor:text] links.\n    * Workaround an instability of the gdchart module leading to\n      stalled servers etc.\n    * Fixed some event-log decoding issues that affect charts rendering.\n\nOther changes:\n\n    * Major speed improvement over 1.3.1. Many times faster title search,\n      creating new page, opening page editor and any operation that list pages.\n      See http://moinmoin.wikiwikiweb.de/MoinBenchmarks\n    * Improved README.migration.\n    * Cleaner design for login/register interface, login is always the default\n      button when the user click Enter.\n    * If there are problems found in the configuration, log the error\n      and display helpful error messages in the browser.\n    * More forgiving unicode configuration policy, you must use the u'string' \n      format only for unicode values.\n    * Added profiling to CGI.\n    * The content of farmconfig.py is similar to wikiconfig.py now.\n    * Unexpected errors while loading cache files are logged.\n    * i18n for icon ALT tags.\n    * Include request initialization code in the profile in standalone server.\n    * When creating new theme, style sheets are inherited correctly, no need\n      to override style sheets just to get them working.\n    * Many times faster plugin system. Typical pages are about 35% faster, \n      pages with many plugins can be many times faster. \n    * Spiders are allowed to fetch attachments.\n    * Old user files containing password hash encoded in pre 1.3 charset\n      are auto repaired on first login.\n    * data_dir defaults to './data', underlay_data_dir to './underlay' now.\n      It is a good idea to replace those by absolute pathes in wikiconfig.py.\n    * Renamed \"Refresh\" to \"Delete Cache\" - it was misused by users. The action \n      was also moved into the action menu in the modern and rightsidebar themes.\n    * Added a workaround for TableOfContents missing some links by making it\n      uncacheable via a \"time\" dependency.\n    * Removed interwiki icon and title attribute for wiki:Self:... links.\n    * Unittests (normally shown at end of action=test output) are currently\n      disabled because they worked unreliably, giving wrong results sometimes.\n\nNew features:\n\n    * Create new pages easily using configurable interface and page templates \n      with the new NewPage macro.\n    * ReStructuredText (rst) support is built-in now. See HelpOnParsers.\n    * New experimental feature in mointwisted.py - each interface may \n      specify a port: '12.34.56.78:80'. Without a port, the port option\n      is used.\n\nAPI changes:\n\n    * For a complete list of changes, see MoinMoin:ApiChanges.\n    * wikiutil.importPlugin's first argument is now a wiki config instance \n      (request.cfg) and there is no path keyword.\n    * Wiki plugins always override MoinMoin plugins. wikiutil.importPlugin\n      implements this override.\n    * util.pysupport.importName does not accept path - you should call \n      it with correct module name, e.g 'wikiconfig.plugin.parser.wiki' for \n      wiki plugins, or 'MoinMoin.parser.wiki'. \n    * wikiutil.extensionPlugin was renamed to wikiPlugins and it gets config \n      instance instead of path.\n    * New function wikiutil.importWikiPlugin used to import wiki plugins \n      using a cache in a thread safe way.\n    * New config option config.use_threads is used to activate thread \n      safe code.\n    * New keyword arguments for getPageList, enable 10X faster operation\n      for common cases by controlling page filtering.\n    * New up to 100X times faster getPageCount\n\n\nVersion 1.3.1 (2004-12-13, Revision moin--main--1.3--patch-434)\n\nFixes:\n\n    * Fixed \"Error Cyclic usage\" crash when user had Italian (it), Korean\n      (ko), Serbian (sr) or Vietnamese (vi) as user interface language.\n    * Fall back to en (instead of crashing) when user uses a language moin\n      does not support / does not support any more (like pt,sv,fi,sr).\n    * In 1.3.0, people accidentally put iso-8859-1 chars into wiki configs,\n      but those where expected to be pure utf-8 and thus it crashed.\n      Fixed by using unicode strings (varname = u'whatever'), a matching\n      encoding setting (see top of script comment) and, when decoding strings,\n      using decode to ASCII with replace mode (this replaces non-ASCII chars,\n      but at least it won't crash - and you get a warning to better use\n      Unicode strings).\n    * Fixed long time broken table formatting. ||<style=\"see css spec\" a||b||\n      Now even generates valid HTML! The old markup for align, valign, width,\n      bgcolor still works, but synthesizes style attribute data.\n    * SystemAdmin macro shows attachments of ALL pages now.\n    * Users without write acl rights will be able to see attachments again and\n      also have AttachFile action in menu.\n    * Fixed wrong match count in search results, find all matches in page \n      titles, show all matches in contents in some rare cases.\n    * Run about 200% faster with long running processes (standalone, Twisted), \n      about 20% faster with cgi, by better internal data handling in wikidicts.\n    * On SF, the dict files use utf-8 encoding now. We included them also in\n      distribution, see contrib/dict/.\n    * Fixed permissions to shared template stuff.\n    * Speeded up search, fixed wrong match counts.\n    * Speeded up internal data handling (wikidicts).\n    * Fixed rare unicode error after deleting a page (reported only on SuSE\n      Linux 9.0 / Python 2.3.0).\n    * Fixed file permissions of files in the data dir.  \n    * Fixed some cosmetic problems in migration scripts and use sys.path.insert\n      to get latest moin code when executing them.\n\nOther Changes:\n\n    * Improved docs, system and help pages.\n    * Updated translation files.\n\nKnown Bugs:\n\n    * Internet Explorer renders our HTML/CSS in a suboptimal way.\n      (MoinMoin:MoinMoinBugs/InternetExplorer)\n      Workaround: use a non-broken browser like FireFox / Mozilla.\n      Fixed in MoinMoin 1.3.2.\n    * Passwords using non-ascii do not work.\n      (MoinMoin:MoinMoinBugs/NonAsciiPasswordsBroken)\n    * The TOC macro is broken partly.\n      (MoinMoinBugs/TableOfContentsBrokenForIncludedPages,\n       MoinMoinBugs/TableOfContentsLacksLinks)\n    * See also: http://moinmoin.wikiwikiweb.de/MoinMoinBugs\n      \n\nVersion 1.3.0 (2004-12-06, Revision moin--main--1.3--patch-400)\n\n    As you see from the length of the 1.3 changes below, 1.3 is a major(!)\n    upgrade. We could have also named it \"2.0\", but we decided against.\n    So take the time for reading the informations thoroughly and do the\n    migration exactly as we tell you - this is no 5 minutes upgrade!\n\n    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    !!! We heavily changed configuration, data encoding, dir layout:    !!!\n    !!!  * the default encoding changed to utf-8.                       !!!\n    !!!  * also, we changed the escaping for special chars to %XX%YY in !!!\n    !!!    URL and (xxyy) in file system.                               !!!\n    !!!  * layout of data dir changed completely                        !!!\n    !!! If you upgrade an existing wiki, you must run the migration     !!!\n    !!! scripts or you will get data corruption or other problems.      !!!\n    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n    HINT: Upgrading your wiki - critical information\n\n      If you are NOT starting from scratch, you MUST convert your existing\n      data - see README.migration for details.\n\n      If you use ##language: xx comments on your OWN pages, you should also run\n      repair_language script. Not needed for help/system pages as we already\n      have done that for you.\n\n      MoinMoin uses Unicode internally now (UCS-2 with 16 bits or UCS-4 with\n      32 bits, depending on your Python installation). The encoding used\n      for page files and html output is set by config.charset.\n\n      Moin 1.3 uses utf-8 encoding only, there is NO SUPPORT for using a\n      charset different from utf-8 with 1.3. If you try, you are on your own.\n\n    Directory layout\n\n      Directory layout was heavily changed. Each page now is a directory,\n      containing page revisions, attachments, cache files and edit-log.\n      \n      You can delete a page or move a page from one wiki to another\n      easily. Look at the wiki/data directory to see.\n      \n      Example:\n        old: data/text/FrontPage\n        new: data/pages/FrontPage/revisions/00000042\n             data/pages/FrontPage/current (contains: 00000042)\n        old: data/backup/FrontPage.xxxxxxxx\n        new: data/pages/FrontPage/revisions/00000023\n\n      For cleaning up cache files, use MoinMoin/scripts/cachecleaner.py \n      (see comments in script).\n\n   Python / Libs\n      \n      * For using RSS, you need to have PyXML installed:\n        Python 2.4*   -> PyXML 0.8.4 (cvs version)\n        Python 2.3.x  -> PyXML 0.8.3\n        Python 2.2.2+ -> ???\n        This will also make \"Live Bookmarks\" of Mozilla Firefox working.\n        New: if you don't have PyXML installed, the RSS icon on RecentChanges\n        will not be displayed any more. Python with no PyXML installed\n        generates invalid RSS XML.\n\n   Page names handling\n\n      * Handling of special characters in file names changed from _xx format\n        to (xx...) format.\n      * In URLs, moin now uses %xx%yy quoting, (because this is supported by \n        browsers), and sub pages use \"/\" instead of the ugly \"_2f\".\n      * Underscore character \"_\" is used now as a space character \" \" both \n        in file names and URLs. \" \" and \"_\" will be handled equivalent at most\n        places in the future (represented as \"_\", rendered as \" \").\n      * To prevent wiki abuse and user typing errors, page names are normalized \n        in URLs, query strings, the \"go\" box and when renaming pages. This \n        include leading, trailing and multiple slashes and white space. Certain \n        invisible unicode characters are removed from page names.\n      * Group page names are restricted even more, any non unicode alpha-numeric\n        character is removed. This is done to enable changing acl syntax in \n        the future. The restriction might be loosen on future versions.\n      * You can edit config.page_invalid_chars_regex to control which characters\n        are allowed in page names (Changing it is not supported).\n      * When you enter page name, it is normalized and you are redirected to\n        the normalized page, or if nothing left (e.g '/////'), to FrontPage.\n      * When renaming a page to a name that can be normalized to an empty string,\n        the new page name will be \"EmptyName\" and the user will not get an\n        error message.\n       \n   Underlay directory\n\n     * Pages (especially system and help pages) are now located in an underlay\n       directory (data_underlay_dir). You will see the pages there if they are\n       NOT covered (overlayed) by a page in the normal pages directory\n       (as set using data_dir).\n       MAKE SURE THAT data_underlay_dir IS CORRECT OR YOU WILL SEE MANY EMPTY\n       PAGES ONLY IN A NEW WIKI.\n     * If you edit a page that is shown from underlay directory, it will be\n       copied to the normal page directory on save (copy-on-write).\n     * You can use one copy of the underlay directory shared by many\n       wiki instances. Each wiki will then have only your local, self-made\n       wiki pages in its data directory, and only system and help pages in the\n       single, shared underlay directory - this simplifies upgrades a lot.\n     * It is recommended to keep your underlay system and help pages immutable\n       using acl, so you can upgrade your wiki easily. The default help and\n       system pages already have those ACLs (using MoinPagesEditorGroup).\n     * Do not forget to remove your old help and system pages after migrating\n       your wiki. We don't provide a script for that as that would be\n       dangerous for edited pages. Just use some file manager (e.g. mc) to\n       clean the data/pages/ directory. As soon as you have removed the\n       system pages there, you will see the new pages in the underlay dir.\n       See the EditedSystemPages page for a list of pages that exist in both\n       data and underlay directory (use this page as admin!).\n\n       When updating from 1.2 or lower to 1.3 or higher, you will want to\n       clean out the copies of the system pages in your {{{wiki/data}}}\n       directory. All of these pages will now reside in the underlay\n       directory. If you have system pages from 1.2 or lower in your\n       wiki/data/ directory, they will overshadow the more up-to-date\n       documentation. This can be done using the following manual procedure:\n       1. You have just converted from 1.2 or lower to post-1.3.\n       2. Go to your wiki's EditedSystemPages.\n       3. Find all the pages that are MoinMoin system or help pages. You will\n          know if it is one of those pages because it is not your page.\n       4. Check if it is okay to delete by either:\n          1. Using the this page \"info\" link and check the Revision History to\n             see if it is greater than 1. If so, there are modifications, so do\n             not delete the page and evaluate the modifications to see if they\n             are necessary.\n          2. Using your file browser (Windows Explorer, etc) to go to your\n             wiki/data/<<systemPage>>/revisions/ directory and to see if there\n             are no modifications. If there are, do not delete the page and\n             evaluate the modifications to see if they are necessary.\n       5. Delete that wiki/data/<<systemPage>> using your file browser.\n\n    Multiple languages\n\n      * New file name quoting method allow 50% longer page names in languages\n        that use more than one byte per character, like Hebrew, Korean etc.\n      * Configuration file uses 'utf-8' encoding now. Certain values that are\n        marked with [Unicode] can use any character in your language. Examples \n        are page names in navi_bar, page types regular expressions and site name.\n      * For configuration examples adopted to your language, check ConfigMarket \n        in the MoinMoin wiki.\n      * The system and help pages that come with moin are now in utf-8.\n      * MissingPage system page localized, should display in your language.\n      * We did many i18n (translation) updates.\n      * CSS file use utf-8 encoding. User css is also expected to be utf-8.\n        This is relevant only if you use non-ASCII values in the CSS file.\n      * config.upperletters and config.lowerletters were removed.\n        We now use a pre-made ucs-2 spanning set and you usually don't have to\n        change it. See MoinMoin/util/chartypes.py if you're interested.\n      * ACL works with any user name or group name in any language, even names \n        with spaces.\n      * Now you can use any charset in config.charset. Note: only utf-8 is \n        a supported configuration!\n      * Improved url handling, now creating pages directly from the browser \n        url box with non-ascii names works in most cases, even when \n        config.charset is not utf-8.\n      * When using non-utf-8 config.charset, characters in URLs that does\n        fit in the charsets are replaced with \"?\" (instead of crashing).\n      * All themes and most macros and actions are Right to Left friendly.\n        Full RTL support planned for 1.3 release.\n      * If page language is specified with #language processing instruction\n        the page is displayed in the correct direction. Pages without\n        language are displayed using the wiki default_lang.\n\n    Multiple configurations\n\n      * You can run multiple wikis from the same wiki directory or server. \n        For example, you can run one Twisted server that serve multiple wikis, \n        instead of running multiple servers. Samples of the new configuration\n        are supplied in wiki/config/*.\n      * You can't just use your old moin_config.py file. It is now called\n        wikiconfig.py and the config variables now have to be in a class\n        \"Config\" and that class must inherit from\n        MoinMoin.multiconfig.DefaultConfig - see the provided wikiconfig.py\n        sample for details.\n        This is very useful, e.g. you could derive a GermanConfig from\n        DefaultConfig. After that, you can derive configs for wikiA and wikiB\n        from that GermanConfig.\n      * farmconfig.py contains a mapping attribute called \"wikis\" with pairs of\n        wikiconfig module name and regular expression. The regular expression\n        is matched against the URL of the request and the first matching entry\n        determines the config module to be imported by MoinMoin.\n      * If you use farmconfig.py's \"wikis\" mapping, then any wiki has a private\n        config module, named after the wiki - e.g. wiki named moinmoin would\n        use moinmoin.py.\n      * If you only have a single wiki, you do not need farmconfig.py. just make \n        a wikiconfig.py and it will be used no matter what URL is requested. \n      * There is one common global \"config\" that holds sitewide settings (like\n        umask or charset) - you do not need to change settings there.\n        This file is located in the MoinMoin code: MoinMoin/config.py.\n      \n    General configuration\n\n      * SecurityPolicy now uses \"write\" instead of \"edit\" (so it is may.write\n        now). This is to get it in sync with ACLs.\n      * SecurityPolicy now automatically can use everything in acl_rights_valid.\n      * There is a new config option \"config_check_enabled\". It will warn about\n        any unknown variable name (probably typo) to stderr or error.log. \n        If something doesn't work at all and changing the config does no \n        difference, switch it on and look at the error message. \n      * The sample config file comes with config_check_enabled = 1. If you \n        introduce additional variables yourself, you definitely want to switch \n        that check off or it will fill your log.\n      * If you define \"page_front_page\" variable, this name will show in the \n        navigation bar now, instead of the default \"FrontPage\".\n\n    New search engine\n\n     * Full text and title search do support multiple search terms now - \n       see HelpOnSearching for details.\n     * Regular expressions are still supported but have to be turned on per\n       search term. Search terms in macros using regular expressions will have\n       to be fixed.\n     * The URL interface of the search engine has also changed. Links that \n       point directly to search actions may be broken.\n\n    User names\n\n      * User names can not use group names, even if ACLs are not enabled.\n        This will prevent error later, if you start to use acl in the future\n        (acl is going to be mandatory in 1.5).\n      * User names are not restricted any more to only CamelCase. \n      * To prevent imposing as other users, leading, trailing and multiple \n        whitespace in user names is not allowed. Only Unicode alpha numeric \n        characters are allowed, with optional one space character between \n        words.\n      * When a user name with a group name or \"bad\" name is trying to \n        access the wiki, he is redirected to the UserPreferences page and \n        asked to create a new account.\n      * When trying to login or create a new account with a bad name, \n        correct error message is displayed in all cases.   \n\n    CGI\n\n      * You can not use your old moin.cgi file, as we removed cgimain.py \n        (was deprecated since 1.2). Copy the new file from the server dir.     \n\n    Moin servers - Twisted and standalone\n\n      * Configuration self checking on startup. Will raise an error in case\n        of bad configuration or non-accessible directories.\n      * Both use shorter and identical configuration options.\n      * Server scripts contain detailed comments and examples.\n      * Configuration defaults changed to fit most users.\n      * There is memory profiler option for debugging, switched off by default.\n      * If you perform a standard install, server scripts should run out\n        of the box or with minimal change.\n\n    Twisted server\n\n      * All code moved into the new server package, the server script\n        contains only configuration options.\n      * Listen to more than one interface with \"interfaces\" list.\n      * Code updated to new Twisted API.\n      * Use mointwisted script to start and stop the server, using \n        \"mointwisted start\" and \"mointwisted stop\".\n      * The Twisted server runs as daemon by default.\n      * All moin Twisted files are called now mointwisted instead of \n        moin_twisted.\n      * Fixed getting username from Twisted request (http auth)\n\n    Standalone server\n\n      * Configuration moved from moin_config.py to moin.py.\n      * If run as root, you can set both user and group for the server.\n      * Can use logfile instead of logging to stderr.\n      * Fixed missing unquoting of query string (caused problems in rare cases).\n\n    mod_python server\n\n     * moin_modpy server files renamed to moinmodpy.\n\n    Wiki Markup\n\n     * '''strong''', ''em'' and __underline__ have now paragraph scope. You can\n       set these attributes on words level. For multiple paragraphs, wrap each \n       with needed markup.\n     * If you leave unclosed ''', '' and __  markup, its is closed when the \n       paragraph ends.\n\n    User interface\n\n     * Due to many changes in CSS files, the wiki may look \"broken\" until\n       your reload once or twice, or empty your browser cache.\n     * The \"Send mail notification\" checkbox is replaced by \"Trivial change\"\n       checkbox. The default behavior did not change - regular edit is not\n       a trivial change, and mail will be sent to subscribes. If you check\n       trivial change, mail will be sent only to users who selected to \n       get trivial changes in their user preferences.\n     * New theme \"modern\" has been added, and used as default theme. \n     * classic and rightsidebar improved.\n     * viewonly theme removed, as any theme can be use now as viewonly\n       by using #acl All:read in the wikiconfig.\n     * All themes use new navibar, displaying both wiki links, user links\n       and the current page.\n     * navibar and pagetrail use now shortened page names, so very long\n       names does not break the interface visually.\n     * All themes have improved search interface at the top of the window.\n     * Only avaiable actions are displayed, so most situations when a user\n       try to do something he can't do are prevented.\n     * When creating a new page, no action is available until the page \n       is created. You can't attach files to non-existing page any more.\n     * Non registered users get a \"login\" link. Registered uses get\n       \"username\" link to their home page, and \"user preferences\" link.\n     * Messages more clear using bold type, designed by css.\n     * Few useless messages removed (but there are many more)\n     * Default wiki logo uses the wiki name instead of the MoinMoin troll \n       logo.\n\n    Other fixes and changes\n    \n     * Most generated html code is valid \"html 4 strict\". There are still\n       some problems that still have to be fixed, mainly macros, table\n       attributes, and inline markup crossing (<a><b></a></b>).\n     * WantedPages can include and exclude system pages, which makes it \n       much more useful.\n     * Fixed a bug in TitleIndex where not all system pages are excluded.    \n     * RenamePage action now renames everything, including backups, page\n       history, attachments. It does not change toplevel editlog, though.\n       After you rename a page, you are redirected to the new page.\n     * Syntax colorization supports more languages (Java, C++, Pascal)\n     * Inline: display of attachments was extended. A Parser now knows which\n       extensions it can handle.\n     * TableOfContents and Include macros now cooperate a bit better. There\n       are still problems with multiple Includes of the same page.\n     * Excluded actions at bottom of page are not displayed any more.   \n     * Editor: removed the columns size setting, just using 100% of browser\n       window width (it didn't work because of that anyway). Also removed that\n       \"reduce editor size\" link at top of editor as you would lose your\n       changes when using it.\n     * Removed the option to choose text smileys instead of images, this made\n       more trouble than it was worth. The text version is still given in ALT\n       attribute.\n     * Moved stuff from contribution/ to MacroMarket page on MoinMoin wiki\n     * Some nasty people try to use a running moin as a proxy (at least they\n       did on moinmaster.wikiwikiweb.de:8000, maybe due to the magic port\n       number). We changed the code to check for that and just return 403\n       in that case. Moin can not be used as a proxy anyway.\n     * moin.cgi?test was removed in favor of a new buildin test\n       action. It works for all deployments, just use ?action=test.\n     * Sending mail does use tls if server supports it.\n\n    3rd party developer notes\n\n     * Themes should be now sub class of MoinMoin.theme.ThemeBase. Sub\n       classes will get automatically all new improved user interface\n       elements for free.\n     * Theme authors should update their theme for 1.3. Some keys removed\n       from them dict. See ThemeBase class in MoinMoin/theme/__init__.py. \n     * Actions writers should call request.setContentLangauge with the \n       correct language used by the action. This enable themes and other\n       code to use correct direction.\n     * The Formatter interface was changed. Formatters and parsers using \n       the formatter interface have to be adjusted.\n     * started deprecation of Processors: they are still recognized, but\n       implementors should start to rewrite their Processors as Parsers.\n       A processor with the same name as a parser in a pre #! section is\n       currently preferred. This will change in the next release.\n\n    Deprecation notes\n\n     * Processors are deprecated, see section above.\n\n     * Using the cookie (or the login url with ID) only and not setting (or\n       setting and not remembering) your email/password in UserPreferences\n       is DEPRECATED. Those quite unsecure methods will likely be dropped\n       in next moin version.\n\n     * Operating with acl_enabled = 0 is also DEPRECATED. Due to some other\n       improvements planned, we will have to operate with ACLs enabled ONLY\n       in a future moin version, so this setting will likely be dropped.\n       So clean up your user accounts (see moin_usercheck.py) and switch ACLs\n       on NOW.\n       There are no drawbacks, so you will like it. Having ACLs enabled\n       doesn't mean you really have to USE them on wiki pages...\n\n     * allow_extended_names = 0 is deprecated (default was/is 1).\n       Future versions will be able to use extended names (aka free links) in\n       any case and the config setting will be removed.\n\n     * allow_subpages = 0 is deprecated (default was/is 1).\n       Future versions will be able to use subpages in any case and the config\n       setting will be removed.\n\n     * attachments = {...} - we would like to remove that setting because of\n       several reasons:\n       * when not being extremely careful, this can easily lead to security\n         problems (like when uploading a .php exploit and then executing it\n         by accessing it directly via web server)\n       * makes code more complicated - code that we want to change completely\n         in next version\n       If you need that feature, speak up now and tell us your reasons WHY you\n       need it.\n\n\nVersion 1.2.4 (2004-10-23, Revision 1.187)\n\nThis will probably be the last 1.2.x release as we are soon doing release\ncandidates for 1.3 release (with big internal changes) and are expecting\nrelease 1.3 in december 2004.\n\nFixes:\n    * fixed \"None\" pagename bug in fullsearch/titlesearch\n    * fixed projection CSS usage\n    * the compiled page is removed when a page is deleted, so no ghost page\n      appears after deletion\n    * fixed AbandonedPages day-break problem\n    * fixed [[GetVal(WikiDict,key)]]\n    * the msg box is now outside content div on PageEditor, too\n    * privacy fix for email notifications: you don't see other email addresses\n      in To: any more. mail_from is now also used for To: header field, but\n      we don't really send email to that address.\n    * privacy fix for /MoinEditorBackup pages that were made on previews of\n      pages that were not saved in the end\n    * fix double content div on PageEditor preview\n\nOther changes:\n    * workaround for broken Microsoft Internet Explorer, the page editor now\n      stops expanding to the right (e.g. with rightsidebar theme).\n      Nevertheless it is a very good idea to use a non-broken and more secure\n      browser like Mozilla, Firefox or Opera!\n\n    * from MoinMoin.security.antispam import SecurityPolicy in your\n      moin_config.py will protect your wiki from at least the known spammers.\n      See MoinMoin:AntiSpamGlobalSolution for details.\n\n    * xmlrpc plugin for usage logging, currently used for antispam accesses\n\n    * (re-)added configurable meta tags:\n        * html_head_queries = '''<meta name=\"robots\" content=\"noindex,nofollow\">\\n'''\n        * html_head_posts   = '''<meta name=\"robots\" content=\"noindex,nofollow\">\\n'''\n        * html_head_index   = '''<meta name=\"robots\" content=\"index,follow\">\\n'''\n        * html_head_normal  = '''<meta name=\"robots\" content=\"index,nofollow\">\\n'''\n\n    * i18n updates/fixes\n\n    * New UserPreferences switch:\n      you may subscribe to trivial changes (when you want to be notified about ALL\n      changes to pages, even if the author deselected to send notifications).\n\n    * New AttachList and AttachInfo macros - thanks to Nigel Metheringham and\n      Jacob Cohen.\n\nVersion 1.2.3 (2004-07-21, Revision 1.186)\n\nFixes:\n    * fixed NameError \"UnpicklingError\" in user.py\n    * fixed version number in moin.spec\n    * reverts done by bots or leechers\n      There was a bad, old bug that triggered if you did not use ACLs. In that\n      case, moin used some simple (but wrong and incomplete) function to\n      determine what a user (or bot) may do or may not do. The function is now\n      fixed to allow only read and write to anon users, and only delete and\n      revert to known users additionally - and disallow everything else.\n    * avoid creation of unneccessary pages/* directories\n    * removed double content divs in general info and history info pages\n    * fixed wiki xmlrpc getPageHTML\n    * fixed rightsidebar logout URL, also fixed top banner to link to FrontPage\n    * use config.page_front_page and .page_title_index for robots meta tag\n      (whether it uses index,follow or index,nofollow), not hardcoded english\n      page names\n    * ACL security fix for PageEditor, thanks to Dr. Pleger for reporting\n    * default options for new users are same as for anon users\n\nVersion 1.2.2 (2004-06-06, Revision 1.185)\n\nFixes:\n    * python related:\n     * own copy of difflib removed\n       Until moin 1.2.1 we had our own copy of python 2.2.3's difflib coming\n       with moin. This was to work around some problems with broken older 2.2\n       python installations. We removed this now because if you have py 2.3,\n       there is even a better difflib coming with python (and that fixes an\n       extremely slow diff calculation happening in some rare cases).\n       So the good news is that when you run python 2.3, you don't need to do\n       anything and it will run great. If you run python 2.2.3, it will mostly\n       work good and you also don't need to do anything. The bad news is that\n       if you run an old and broken 2.2 installation (2.2.1, maybe 2.2.2) you\n       will have to fix it on your own (just copy difflib.py from python 2.2.3\n       over to your python 2.2.x installation).\n       But better upgrade to python 2.3 (for debian woody, there's a backport),\n       as 2.3 generally runs better and faster than 2.2.\n     * scripts changed to use #!/usr/bin/env python (not /usr/bin/python2.2)\n\n    * user accounts and ACLs:\n     * we now require the user to specify a password for a new account (you\n       were not able to login without a password anyway)\n     * it is not allowed any more to create user accounts with user names\n       matching config.page_group_regex - please check manually that you do\n       not already have such users existing (like a user named \"AdminGroup\"):\n       cd data/user ; grep name=.*Group *  # there should be no output!\n     * subscription email sending now honours ACLs correctly\n\n    * markup / rendering / user interface fixes:\n     * fixed merging multiple lines indented by the same amount of blanks\n     * ## comments don't break tables in two parts\n     * added a \"remove bookmark\" link to RecentChanges\n     * fixed action=titleindex (added \\n after each entry)\n\n    * RSS fixes:\n     * non-ASCII characters should work now\n     * RSS feed (Recentchanges?action=rss_rc) gives UTC timestamps now\n     * removed attribute breaking RSS feed on RecentChanges\n\n    * better email generation:\n     * if you use python >=2.2.2, we add a Message-ID header to emails\n     * if you use python 2.2.1, there is no email.Header. Instead of crashing\n       (like previous moin 1.2.x releases), we just use the subject \"as is\" in\n       that case. If it is not ASCII, this is not standards compliant.\n     * If you have >=2.2.2 it will use email.Header to make standards compliant\n       subject lines.\n     * use config.mail_from as sender address when sending \"lost my password\"\n       emails\n\n    * file attachments:\n     * fixed for standalone server\n     * attachment URLs (when handled by moin) don't include server name\n     * fixed some wrong &amp;amp; in html src\n    \n    * better themeability:\n     * some entries in dict \"d\" where only present in header theme calls, some\n       only in footer theme calls. Now almost all is present in both calls.\n     * added some missing \"content\" divs so sidebar themes look better\n\n    * fixed some crashes producing backtraces:\n     * no IOError when diffing against deleted page\n     * no backtrace in xml footnote generation\n     * no SystemInfo crash when no editlog exists in new wikis\n     * xmlrpc.getRecentChanges fixed\n\n    * MoinMoin.util.filesys.rename is now a wrapper around os.rename that\n      fixes os.rename on broken win32 api semantics\n\nOther Changes:\n    * saving traffic and load by improved robot meta tag generation:\n     * \"noindex,nofollow\" on queries and POSTs\n     * \"index,follow\" on FrontPage and TitleIndex (give robots a chance ;))\n     * \"index,nofollow\" on all other pages (hopefully saving lots of senseless\n       requests for page?action=...) \n     * removed config.html_head_queries (was used for same stuff)\n    * added russian i18n (utf-8)\n    * misc. other translation updates / fixes\n    * added rightsidebar theme\n    * TitleIndex now folds case, so \"APage\" and \"anotherPage\" are both under\n      letter \"A\".\n    * added macro/PageHits.py - it calculates the hits each page gets since\n      beginning of logging\n\n\n    * Full text and title search do now support multiple search terms - \n      see HelpOnSearching for details\n \n    * The Formatter interface was changed. Formatter and parser using \n      the formatter interface have to be adjusted.\n\nVersion 1.2.1 (2004-03-08, Revision 1.184)\n\nFixes:\n    * minimum requirement to run moin 1.2/1.2.1 is python 2.2.2\n     * not: 2.2(.0), as this does not have True/False\n     * not: 2.2.1, as this does not have email.Header. You maybe can work\n       around that one by:\n      * getting the python 2.2.x (x>=2) /usr/lib/python2.2/email directory\n      * putting it into directory 'x' (whereever you like)\n      * doing a sys.path[0:0] = ['x'] in moin.cgi [or other appropriate place]\n      No guarantee, this is untested.\n    * Twisted: the http headers missed the charset data, fixed\n    * mod_python: fixes for mod_python 2.7\n    * wiki/data/plugin/__init__.py added - fixes not working plugin modules\n    * plugin processors work now, too\n    * fixed displaying non-existent translations of SiteNavigation in footer\n    * fixed zh-tw iso name (wrong zh_tw -> correct zh-tw)\n    * fixed reversed diffs in RecentChanges RSS\n    * fixed \"last change\" info in footer (wasn't updated)\n    * fixed event.log missing pagename (and other) information\n    * fixed horizontal line thickness >1\n    * fixed setup.py running from CVS workdir\n    * fixed crash when doing action=info on first revision of a page\n    * fixed hostname truncation in footer\n    * minor css fixes\n    * fixed clear msg links (they missed quoting, leading to strange page\n      names when you click on some of them)\n    * fixed python colorizer processor\n    * fixed quoting of stats cache filenames\n    * catched \"bad marshal data\" error when switching python versions\n\nOther changes:\n    * updated danish (da) i18n\n    * updated japanese (ja) i18n\n    * added serbian (sr) i18n\n    * added chinese (zh) i18n\n    * added a simple \"viewonly\" theme based on classic theme - you can use\n      this as default theme, so anonymous users won't get the usual wiki stuff,\n      but a far simpler (and less powerful) user interface.\n      It also displays the navibar at the left side.\n    * added moin.spec for building RPMs\n    * included MoinMoin/i18n/* into distribution archive (nice for translators)\n    * included some stuff under MoinMoin/scripts - xmlrpc-tools and account\n      checking stuff. removed some version control clutter from the dist\n      archive, too.\n\n    * code colorization was refactored and some new languages (Java, C++,\n      Pascal) where added.\n    * inline: display of attachments was extended. A Parser now knows which\n      extensions it can handle.\n\nVersion 1.2 (2004-02-20, Revision 1.183)\n\nNew features:\n    * MoinMoin now requires Python >=2.2.2., we recommend to use Python >=2.3.2\n      (with 2.3.x, MoinMoin runs about 20-30% faster).\n    * by refactoring request processing, we made it possible to run moin under\n      persistent environments:\n        * twisted-web (http://twistedmatrix.com)\n        * httpdmain.py (use moin.py for starting this mini server)\n        * mod_python\n        * FastCGI\n      Of course, CGI is still possible.\n    * wiki pages will be compiled to bytecode now (by default), so no need for\n      slow parsing/formatting on every view (\"WASP\", see caching_formats)\n    * when using a persistent environment (like twisted) and WASP, you get up\n      to 20x speed - compared to CGI and moin 1.1\n    * added support for diffs between arbitrary revisions.\n    * removed requirement of the external diff utility\n    * config.auth_http_enabled (defaults to 0) - use this to enable moin\n      getting your authenticated user name from apache (http basic auth,\n      htpasswd) - if you enable this, your basic auth username has to be the\n      same as your wiki username.\n      Should work with CGI, FCGI and maybe even with mod_python.\n      Does not change behaviour of moin under twisted or standalone server.\n    * config.tz_offset = 0.0 sets a default timezone offset (in hours\n      from UTC)\n    * config.cookie_lifetime (int, in hours, default 12) sets the lifetime of\n      the MOIN_ID cookie:\n        == 0  --> cookie will live forever (no matter what user has configured!)\n        > 0   --> cookie will live for n hours (or forever when \"remember_me\")\n        < 0   --> cookie will live for -n hours (forced, ignore \"remember_me\"!)\n    * added themeing and some themes (if you improve the existing themes or\n      make nice new ones, please contribute your stuff!). The default theme is\n      set by config.theme_default (and defaults to 'classic').\n    * now supporting plugin directory for parsers, processors, themes, xmlrpc.\n    * action=info now defaults to showing page revision history again\n    * all actions accessing the logfile (as RecentChanges or history) are now\n      much faster\n    * #refresh processing instruction, config.refresh\n        * config.refresh = (minimum_delay, target_allowed)\n            * minimum delay is the minimum waiting time (in seconds) allowed\n            * target_allowed is either 'internal' or 'external', depending on\n              whether you want to allow only internal redirects or also\n              external ones. For internal redirects, just use the Wiki pagename,\n              for external, use http://... url.\n        * #refresh 3                    == refresh this page every 3 seconds\n        * #refresh 5 FrontPage          == internal redirect to FrontPage in 5s\n        * #refresh 5 http://google.com/ == redirect to google in 5s\n      Use very carefully! Allowing a low minimum_delay and putting a #refresh\n      on RecentChanges might slow down your wiki significantly, when some\n      people just let their browser refresh and refresh again. Also, it does\n      cause quite some traffic long-term. So better do not use this without\n      good reason! Default is None (switched off).\n    * hide most UserPreferences options before user has logged in, less\n      confusing for new users\n    * \"config.page_dict_regex\" defines what pages are dictionary definitions\n      Currently dictionaries are used for UserHomePage/MyDict where you can\n      define key:: value pairs that get processed like @DATE@ expansion when\n      saving a page. The 2 \"@\" will be added to your keys automatically.\n      Please do not use @xxx@ strings on the right side (value), results may\n      vary if you do.\n      You can also access wiki dictionaries by using the internal macro\n      [[GetVal(page,key)]]\" - that will go to page \"page\" and return the\n      value (right side) corresponding to \"key\".\n      Implementation note: groups are a subset of the dictionary functionality.\n    * standalone server should work now (see server/moin.py), so you don't\n      need to setup apache or twisted for a local personal wiki, you only need\n      python and moin for that now, no additional stuff any more!\n    * if you run your wiki with charset = \"utf-8\" (the default is still\n      iso8859-1), you might want to have a look at contributions/utf8-pages/\n      to see if there are already translated system pages for your language.\n\nFixes:\n    * new importPlugin routine (the old one didn't work correctly)\n    * removed 0xA0 characters breaking utf-8\n    * system page recognition now uses wiki groups (see AllSystemPagesGroup),\n      fixing the long-time broken system page exclusion on TitleIndex.\n    * mostly HTML 4.01 Strict compliant HTML\n    * design is done by CSS now, HTML is semantic markup only \n    * removed target attribute from links, also [^NewWindow] markup - this\n      is a HTML 3.2 feature and not valid in HTML 4.01\n    * updated TWikiDrawPlugin to 20021003 version, with further modifications\n      including source. It can draw imagemaps now and saves PNG. On display a\n      GIF will be searched if no PNG is found. We recommend changing all GIFs\n      to indexed PNGs cause this fallback might disappear in later versions.\n\n      Sample code using bash and ImageMagick (be sure you know what you do):\n      for draw in `find /path/to/wiki/data -name \\*.draw`; do\n        file=`dirname $draw`/`basename $draw .draw`\n        if [ -e \"${file}.gif\" ]; then\n          echo \"Converting ${file}.gif to ${file}.png\"\n          convert \"${file}.gif\" \"${file}.png\"\n        fi\n      done\n\n    * fixed email headers and encoding\n    * Changed moin-usercheck to adhere to scripting standards; no\n      proprietary config changes needed any more (added --config);\n      --wikinames is now part of the usage message.\n    * config.umask now defaults to 0770 - if you give world r/w access, ACLs\n      could be rather pointless...\n\nRemoved config variables:\n    * external_diff (not needed any more, we have internal diff now)\n    * shared_metadb (wasn't implemented for long - we will re-add it, when it is)\n    * title1/2 (please use page_header1/2)\n    * page_icons_up\n\nChanged config variables:\n    * changed_time_fmt (removed some html and brackets around time from default)\n    * html_head (default is empty string now)\n    * page_footer1/2 (default is empty string now)\n    * page_icons (is now a list of icon names, not html any more)\n    * umask (default is 0770 now, not world r/w any more == more secure)\n\nNew config variables (see MoinMaster:HelpOnConfiguration):\n    * cookie_lifetime\n    * mail_login\n    * page_credits\n    * page_dict_regex\n    * page_group_regex\n    * page_header1/2\n    * page_iconbar \n    * page_icons_table\n    * page_license_enabled\n    * page_license_page\n    * theme_default\n    * theme_force\n    * tz_offset \n\nOther:\n    * lots of internal code refactoring and optimization\n    * began moving src code documentation to epydoc, see \"make epydoc\"\n    * the URL for the RecentChanges RSS feed changed. It now only works with\n      ...?action=rss_rc.\n\nKnown problems:\n    * theme support is neither complete (although covering most important\n      stuff) nor perfect - work on that will continue...\n    * we removed some html from system messages (the boxes at top of page you\n      get after some actions), so it currently looks less nice than before.\n    * html is not completely validating and it is not xhtml - this will be\n      fixed as soon as we have the infrastructure for that (other parser, DOM)\n    * problems with rtl (right-to-left) languages, will be fixed in 1.3\n    * if you change moin_config or switch themes, moin will still use already\n      cached page content. For the config this can be fixed by touching\n      MoinMoin/version.py (or simply deleting everything in\n      data/cache/Page.py). If you get more annoyed by this than pleased by\n      caching speedup, you can also switch off caching (see docs on\n      caching_formats).\n\nThemeing and HTML/CSS cleanup:\n    * Browsers with completely broken CSS support (like e.g. Netscape 4.x) are\n      no longer supported. If you still need to support them, do not upgrade to\n      moin 1.2. If you still use these browsers, we recommend that you upgrade\n      your browser first (Mozilla 1.5 has nice and standards compliant HTML and\n      CSS support and is available as Free Software for Windows, Linux and Mac).\n    * If you changed any html in code or by config you will have to check if it\n      still works. For the usual stuff, look into `MoinMoin/theme/classic.py`\n      and `classic/css/screen.css`. For config defaults of the html fragments,\n      read `MoinMoin/config.py`. If you want to modify a theme, don't simply\n      change classic, but copy or subclass it under a new theme name.\n    * because of the new theme support the layout of the `htdocs` directory\n      changed:\n      * Instead of using icons under `img/` and css under `css/`, there will\n        be an additional `themename/` directory in between, e.g. `classic/img/`\n        and `classic/css/`. If you added own icons, you may have to copy them\n        to the themes directory.\n      * The filename of the CSS file has changed to the media type, so the\n        normal one used for screen output has changed name from `moinmoin.css`\n        to `screen.css`. There also were quite some changes and enhancements to\n        the CSS files, so better use the new ones.\n    * config.css_url was removed\n\nPlugins:\n  * we use a new plugin loader that requires a correct `__init__.py` file in\n    the plugin directories. See the directory `wiki/data/plugin/` in the\n    distribution archive and just copy it over to your wiki's plugin directory.\n\n\nVersion 1.1 (2003-11-29, Revision 1.178)\n\nVersion 1.1 requires Python 2.0 or higher, we recommend to use Python 2.2\n(version 2.2.2 if that is available on your host) or even better >= 2.3.2\n(with 2.3.x, MoinMoin runs about 20-30% faster).\n\nNew features:\n  Configuration:\n    * config.default_lang lets you set a default language for users not\n      having specified language in their browser or UserPreferences\n    * \"config.page_category_regex\" defines what pages are categories\n    * replaced `config.page_template_ending` by a more flexible setting\n      named `config.page_template_regex`\n    * the same with config.page_form_regex (was: page_form_ending)\n    * \"config.page_group_regex\" defines what pages are group definitions\n      Currently groups are used for \"user groups\" (see ACLs) and \"page\n      groups\" (see AllSystemPagesGroup).\n    * robot exclusion from all pages except the standard view action,\n      via the config.ua_spiders regex (reduces server load)\n    * \"maxdepth\" argument for the TableOfContents macro\n    * config.title1, config.title2, config.page_footer1,\n      config.page_footer2 can now be callables and will be called with\n      the \"request\" object as a single argument (note that you should\n      accept any keyword arguments in order to be compatible to future\n      changes)\n    * \"config.html_pagetitle\" allows you to set a specific HTML page\n      title (if not set, it defaults to \"config.sitename\")\n    * navi_bar / quicklinks can now contain free-form links, i.e.\n      entries of the form \"[url linktext]\" just like in wiki pages\n    * if a quick link starts with '^', it opens in a new window; help\n      now opens in a new window also\n    * `config.smileys` for user-defined smileys (default: `{}`) - a dict\n      with the markup as the key and a tuple of width, height, border, image\n      name as the value).\n    * `config.hosts_deny` to forbid access based on IP address\n    * `config.mail_login` can be set to username and password separated by\n      a space, e.g. \"username userpass\", if you need to use SMTP AUTH\n    * `config.edit_locking` can be set to None (old behaviour, no\n      locking), 'warn <timeout mins>' (warn about concurrent edits, but\n      do not enforce anything), or 'lock <timeout mins>' (strict locking)\n    * optionally showing a license text on editor page, use:\n      config.page_license_enabled = 1\n      Optionally use these to customize what is shown there:\n      config.page_license_text = \"... your text ...\"\n      config.page_license_page = \"MyLicensePage\"\n      See the default values in MoinMoin/config.py for details and\n      override them in moin_config.py, if needed.\n    * `config.shared_intermap` can be a list of filenames (instead of a\n      single string)\n    * If you have added your own `SecurityPolicy`, the class interface for\n      that has changed (see `security.py`).\n\n  Authenticaton / Authorization:\n    * added ACL support, written by Gustavo Niemeyer of Conectiva and\n      Thomas Waldmann. See HelpOnAccessControlLists for more infos.\n      You should use MoinMoin/scripts/moin_usercheck.py before activating\n      ACLs or some users with bad or duplicate accounts might get into\n      trouble.\n    * A user account can be disabled using moin_usercheck.py or\n      UserPreferences page. Disabling, but keeping it is good for edit\n      history.\n    * changed security default: deletion only available to known users\n    * support for Basic authentication (Apache style: AUTH_TYPE=\"Basic\",\n      REMOTE_USER=\"WikiUserName\"). If authentication is there, user\n      will be in ACL class \"Trusted\".\n    * support for username / password login\n      The username / password login will ONLY work, if you define a\n      password. With an empty password, username / password login is not\n      allowed due to security reasons. Passwords are stored encrypted\n      (format similar to Apache SHA) and can also be entered in the\n      UserPreferences form in this format. When requesting login\n      information by email, the password is also sent in this encrypted\n      format (use copy&paste to fill it in the form).\n      ...?action=userform?uid=<userid> is still possible, so if you have\n      bookmarks, they will still work). The input field for the ID was\n      dropped.\n      NOTE: using the userid for login purposes is DEPRECATED and might\n            be removed for better security soon.\n    * after logging in, you will get a cookie valid until midnight.\n      The next day, the cookie will expire and you will have to login\n      again. If you don't want this, you can check the \"remember me\n      forever\" option in UserPreferences.\n    * if the page file is read-only, you get a message (i.e. you can now\n      protect pages against changes if you're the wiki admin).\n      Note: you can do that easier using ACLs.\n\n  Markup / Macros / Actions:\n    * RandomQuote macro (and even parses Wiki markup now)\n    * `[[Navigation]]` macro for slides and subpage navigation\n    * [[ShowSmileys]] displays ALL smileys, including user-defined ones\n    * the Include macro has new parameters (from, to, sort, items) and\n      is able to include more than one page (via a regex pattern)\n    * `MailTo` macro for adding spam-safe email links to a page\n    * if a fancy link starts with '^' (i.e. if it has the form\n      \"[^http:... ...]\"), it's opened in a new window\n     * because of that, the NewWindow macro was removed from contrib\n    * \"#pragma section-numbers 2\" only displays section numbers for\n      headings of level 2 and up (similarly for 3 to 6)\n    * ../SubPageOfParent links\n\n  User interface:\n    * new fancy diffs\n    * Page creation shows LikePages that already exist\n    * editor shows the current size of the page\n    * editor returns to including page when editing an included page\n    * Visual indication we're on the editor page (new CSS style)\n    * selection to add categories to a page in the editor (use preview\n      button to add more than one category)\n    * if user has a homepage, a backup of save/preview text is saved as\n      a subpage UsersHomePage/MoinEditorBackup\n    * added \"revert\" link to PageInfo view (which makes DeletePage more\n      safe in public wikis, since you can easily revive deleted pages\n      via revert)\n    * Selection for logged in users (i.e. no bots) to extend the listing\n      of recent changes beyond the default limits\n    * Activated display of context for backlinks search\n    * Subscriber list shown on page info\n    * LikePages shows similar pages (using difflib.get_close_matches)\n    * last edit action is stored into \"last-edited\" file, and\n      displayed in the page footer\n    * reciprocal footnote linking (definition refers back to reference)\n    * \"Ex-/Include system pages\" link for title index\n      Note: system/help pages algorithm is still mostly broken.\n    * list items set apart by empty lines are now also set apart\n      visually (by adding the CSS class \"gap\" to <li>)\n    * \"save\" check for security.Permissions\n    * Added Spanish, Croatian and Danish system texts\n    * Added flag icons for the languages supported in \"i18n\"\n    * updated help and system pages, more translations, see also\n      AllSystemPagesGroup\n    * there was quite some work done on wiki xmlrpc v1 and v2 - it\n      basically works now.\n\n  Tools and other changes:\n    * moin-dump: New option \"--page\"\n    * there are some scripts MoinMoin/scripts/* using wiki xmlrpc for\n      backup and wiki page copying applications\n    * Updated the XSLT parser to work with 4Suite 1.0a1\n    * more infos in cgi tracebacks\n    * UPDATE.html is a HTML version of MoinMaster:HelpOnUpdating\n\nUnfinished or experimental features:\n    * user defined forms\n    * XML export of all data in the wiki\n    * RST parser (you need to install docutils to use this)\n    * SystemAdmin macro\n\nPrivacy fixes:\n    * do not use / display user's email address in public places\n\nSECURITY FIXES:\n    * Removed two cross-site scripting vulnerabilities reported by \"office\"\n\nBugfixes:\n    * Bugfix for PageList when no arguments are given\n    * Disallow full-text searches with too short search terms\n    * [ 566094 ] TitleIndex now supports grouping by Hangul Syllables\n     * fix for multibyte first char in TitleIndex\n    * Footnotes were not HTML escaped\n    * Numbered code displays are now in a table so that you can cut the\n      code w/o the numbers\n    * Bugfix for wrong mail notifications\n    * Create unique anchors for repeated titles\n    * [ 522246 ] Transparently recode localized messages\n    * [ 685003 ] Using \"preview\" button when editing can lose data\n    * use gmtime() for time handling\n    * fixed negative gmtime() arguments\n    * [[Include]] accepts relative page names\n    * fixed ||NotInterWiki:||...||\n\n-----------------------------------------------------------------------------\nVersion 1.0 (2002-05-10, Revision 1.159)\n\nTHIS IS THE LAST RELEASE WITH PYTHON 1.5.2 SUPPORT! If severe bugs\nshould occur, a maintenance release will fix them.\n\nSome optional features (like statistics) already require Python 2.0.\n\nNew features:\n    * security fix: \"allow_xslt\" has to be set to 1 in order to enable\n      XSLT processing; note that this defaults to 0 because XSLT is able\n      to insert arbitrary HTML into a wiki\n    * \"action=content\" for transclusion into static web pages; emits the\n      pure page content, without any <html>, <head>, or <body> tags\n    * \"?action=links&mimetype=text/plain\" works like MeatBall:LinkDatabase\n    * \"Preferred language\" and \"Quick links\" user settings\n    * Added \"processor\" concept, processors work on the data in \"code\n      displays\" and are called by a bangpath in the first line of data\n    * Processors: Colorize, CSV (see HelpOnProcessors)\n    * New icons: \"{OK}\", \"(./)\", \"{X}\", \"{i}\", \"{1}\", \"{2}\" and \"{}\"\n      (see HelpOnSmileys)\n    * FullSearch now displays context information for search hits\n    * DeletePage offers a textentry field for an optional comment\n    * Email notifications are sent in the user's language, if known from\n      the preferences\n    * @PAGE@ is substituted by the name of the current page (useful\n      for template pages)\n\nUnfinished features:\n    * user defined forms\n    * XML export of all data in the wiki\n    * RST parser (you need to install docutils to use this)\n    * XMLRPC interface\n\nBugfixes:\n    * Syntax warning with Python 2.2 fixed\n    * Macro-generated pagelinks are no longer added to the list of links\n    * error codes returned by \"diff\" are reported\n    * fix for attachments on pages with non-USASCII names\n    * correct handling of spaces in attachment filenames and URLs\n\n-----------------------------------------------------------------------------\nVersion 0.11 (2002-03-11, Revision 1.151)\n\nMost important new features: file attachments, definition list markup\n(glossaries), change notification via email, variable substitution when\nsaving pages, edit preview, and improved documentation.\n\nNote that the RSS features require a recent PyXML (CVS or 0.7) due to\nbugs in the namespace handling of xml.sax.saxutils in earlier versions.\nThis is (hopefully) automatically detected on every installation.\n\nStatistical features are NOT designed to work with Python 1.5.2 and\nrequire Python 2.0 or higher. Overall, MoinMoin 0.11 is not explicitely\ntested for 1.5.2 compatibility.\n\nNew features:\n    * XML formatting now (most often) produces well-formed, and, depending\n      on proper layout of the wiki page, valid StyleBook XML\n    * Headers are now automatically numbered, unless you set the config\n      item 'show_section_numbers' to 0\n    * \"#pragma section-numbers off\" (or \"0\") switches that off explicitely,\n      and \"on\" or \"1\" enables numbering \n    * Added a \"contributions\" directory for 3rd party extensions\n    * AttachFile action, contributed by Ken Sugino; note that you have\n      to enable this action because of the possibility of DoS attacks\n      (malicious uploads), by adding this to your moin_config:\n            allowed_actions = ['AttachFile']\n    * \"attachment:\" URL scheme allows access to attachments, to get files\n       from other pages use \"attachment:WikiName/filename.ext\".\n    * New macros: Date(unixtimestamp) and DateTime(unixtimestamp) to\n      display a timestamp according to system/user settings\n    * Variable substitution when a page is saved, note that saving\n      template pages does NOT expand variables. Supported are:\n        @DATE@      Current date in the system's format\n        @TIME@      Current date and time in the user's format\n        @USERNAME@  Just the user's name (or his domain/IP)\n        @USER@      Signature \"-- loginname\"\n        @SIG@       Dated Signature \"-- loginname date time\"\n        @MAILTO@    A fancy mailto: link with the user's data  \n    * Copied some new emoticons from PikiePikie\n        || {{{ :-? }}} || :-? || tongue.gif ||\n        || {{{ :\\  }}} || :\\  || ohwell.gif ||\n        || {{{ >:> }}} || >:> || devil.gif  ||\n        || {{{ %)  }}} || %)  || eyes.gif   ||\n        || {{{ @)  }}} || @)  || eek.gif    ||\n        || {{{ |)  }}} || |)  || tired.gif  ||\n        || {{{ ;)) }}} || ;)) || lol.gif    ||\n    * AbandonedPages macro\n    * Added definition list markup: {{{<whitespace>term:: definition}}}\n    * Added email notification features contributed by Daniel Sa\ufffd    * SystemInfo: show \"Entries in edit log\"\n    * Added \"RSS\" icon to RecentChanges macro and code to generate a\n      RecentChanges RSS channel, see\n          http://www.usemod.com/cgi-bin/mb.pl?UnifiedRecentChanges\n      for details\n    * Added config.sitename and config.interwikiname parameter\n    * Better WikiFarm support:\n      * <datadir>/plugin/macro and <datadir>/plugin/action can be used\n        to store macros and actions local to a specific wiki instance\n      * config.shared_intermap can contain a pathname to a shared\n        \"intermap.txt\" file (i.e. one stored outside the datadir)\n    * added `backtick` shortcut for {{{inline literal}}} (has to be\n      enabled by \"backtick_meta=1\" in the config file); note that ``\n      is then a shorter replacement for '''''' escaping\n    * added inline search fields (at the bottom of each page)\n    * Added preview to the editor, including spell checking\n    * New languages: Chinese (Changzhe Han) and Portuguese (Jorge\n      Godoy), updated French (Lucas Bruand), added Korean (Hye-Shik\n      Chang) and Italian (Lele Gaifax)\n    * New SystemAdmin macro\n    * `[[Anchor(anchorname)]]` macro to insert anchors into a page,\n      and [#anchorname Anchor Links].\n    * User option to open editor view via a double-click\n    * Added commentary field to editor, recent changes and page info\n    * Page trails (user option)\n    * UserPreferences: checkboxes for double-click edit, page trail,\n      fancy links, emoticons, jump to last page visited, and some\n      other yes/no options\n    * \"config.nonexist_qm\" is now the default for a user setting\n    * `[[GetText(text)]]` macro loads I18N texts (mainly intended\n      for use on Help pages)\n    * table attributes via \"||<attrlist> ... ||\", more details on\n      http://purl.net/wiki/moin/HelpOnTables\n    * PythonFaq interwiki tag and support for $PAGE placeholder\n    * event logging, as the basis for future statistics\n    * \"moin-dump\" command line tool to create a static copy of\n      the wiki content\n    * \"config.external_diff\" allows to set an exact path to the\n      command, or change the name to for example \"gdiff\" if GNU\n      diff is not a native command in your UNIX flavour\n    * `[[PageSize]]` macro\n    * the interwiki name \"Self\" now always points to the own wiki\n    * config.title1 and config.title2 are inserted into the output\n      right before and after the system title html code (title1\n      is right after the <body> tag and normally undefined, title2\n      defaults to the \"<hr>\" above the page contents)\n    * Additional link on diff pages to ignore whitespace changes\n    * Subpages (config.allow_subpages, config.page_icons_up)\n    * super^script^, sub,,script,, and __underline__ markup\n    * `[[FootNote]]` macro\n    * many other new config options, see HelpOnConfiguration for\n      a complete list\n    * [[StatsChart(type)]] shows statistical charts (currently\n      defined types: hitcounts, pagesize, useragents)\n    * 'inline:' scheme works like 'attachment:', but tries to\n      inline the content of the attachment into the page;\n      currently knows about \"*.py\" sources and colorizes them\n    * support for Java applet \"TWikiDrawPlugin\" via\n      drawing:<drawingname> URL scheme (you need to activate\n      the AttachFile action if you want drawings)\n    * numeric entities (&#nnnnn;) are now optionally NOT escaped,\n      which allows you to insert more characters into a Latin-1\n      page, especially the Euro symbol\n    * navi_bar is now a list of page names which should be linked\n      on every page\n    * test.cgi is now rolled into moin.cgi, and can be called\n      by adding \"?test\" to the wiki base URL. Also, as a security\n      feature, the server's environment is only shown for requests\n      local to the web server.\n\nUnfinished features:\n    * user defined forms\n    * XML export of all data in the wiki\n\nDocumentation:\n    * extended the online help (\"Help*\" pages)\n    * German help pages (thanks to Thomas Waldmann)\n\nBugfixes:\n    * #425857: python Parser bug on the second call\n    * #424917: Caching control\n    * #465499: Two HTTPS problems\n    * #491155: FrontPage hardcoded\n    * Handling of inbound UTF-8 encoded URIs (only with Python >= 2.0)\n    * Fix for subtle changes in \"re\" of Python 2.2\n    * User-provided URLs are now never URL-escaped, which allows appending\n      #anchors and using %20 for spaces in InterWiki links\n\n-----------------------------------------------------------------------------\nVersion 0.10 (2001-10-28, Revision 1.134)\n\nThis version is still Python 1.5.2 compatible, but it's not extensively\ntested for that version and some parts of the system might not work\nthere, especially seldom used macros and actions. Bug reports welcome!\n\nNew features:\n    * \"#deprecated\" processing instruction\n    * config entry \"SecurityPolicy\" to allow for customized permissions\n      (see \"security.py\" for more)\n    * added distutils support\n    * though not extensively tested, the standalone server now does POST\n      requests, i.e. you can save pages; there are still problems with\n      persistent global variables! It only works for Python >= 2.0.\n    * \"bang_meta\" config variable and \"!NotWikiWord\" markup\n    * \"url_mappings\" config variable to dynamically change URL prefixes\n      (especially useful in intranets, when whole trees of externally\n      hosted documents move around)\n    * setting \"mail_smarthost\" and \"mail_from\" activates mailing\n      features (sending login data on the UserPreferences page)\n    * very useful for intranet developer wikis, a means to view pydoc\n      documentation, formatted via a XSLT stylesheet, for details see\n      http://purl.net/wiki/python/TeudViewer?module=MoinMoin.macro.TeudView\n      or MoinMoin/macro/TeudView.py\n    * \"LocalSiteMap\" action by Steve Howell <showell@zipcon.com>\n    * Added FOLDOC to intermap.txt\n\nBugfixes:\n    * Full config defaults, import MoinMoin now works w/o moin_config.py\n    * Better control over permissions with config.umask\n    * Bugfix for a UNIX time billenium bug (affecting RecentChanges\n      sorting and page diffs)\n    * data paths with directory names containing dots caused problems\n\n-----------------------------------------------------------------------------\nVersion 0.9 (2001-05-07)\n\nNew features:\n    * XML page input (pages that start with \"<?xml\") and XSLT formatting\n    * Page caching, for now limited to XSLT processing (where it's\n      absolutely needed); new code & API to add the \"RefreshCache\" link\n    * Selection of common date/time formats in UserPreferences\n    * New action \"titleindex\" to support wiki introspection (MetaWiki);\n      see the new links below the index bar in \"TitleIndex\"\n    * UserPreferences: editable CSS URL for personal styles\n    * PageInfo: the editor's name or IP is shown for each change\n    * WantedPages: a new macro that lists links to non-existent pages\n    * OrphanedPages: a new macro that lists pages no other page links to\n    * Extensions to the FullSearch macro (see HelpOnMacros)\n    * Python syntax highlighting\n    * \"DeletePage\" action (has to be activated, see MoinMoinFaq)\n    * \"Remove trailing whitespace from each line\" option in the editor\n    * I18N (currently German and Swedish)\n    * Config option \"url_schemas\" to extend the supported URL types\n    * Improved tracebacks by using Ka-Ping's \"cgitb\"\n\nBugfixes:\n    * The editor now sends a \"no-cache\" HTTP header\n    * \"PageList\" results are now sorted\n    * New config parameter \"html_head_queries\": send additional header\n      for all pages EXCEPT the \"normal\" view; main usage is to have\n      only the normal pages indexed by a spider, not the edit, print,\n      etc. views (which cause multiple hits on the same information)\n    * Store the modification time of the page file in the editlog, not\n      the current time when the log entry is created\n\n-----------------------------------------------------------------------------\nVersion 0.8 (2001-01-23)\n\nNew features:\n    * Page templates (create a new page using a template page, by Richard)\n    * Pluggable actions (by Richard)\n    * Added \"diff since bookmark\"\n    * Only \"normal\" URLs (outside of brackets) are converted to inline images\n    * Show number of backups in SystemInfo macro\n    * Show info on installed extension macros and actions\n    * New macro: [[BR]] for line breaks\n    * New action \"LikePages\" (again, Richard)\n    * Highlighting of search results, and of bad words when spellchecking\n    * Support for \"file:\" URLS\n    * \"SpellCheck\" action (Richard, me, and Christian)\n    * [[Include]] macro (you guessed it, Richard)\n\nBugfixes:\n    * Update bookmark with load time, not click time\n    * Changed CSS styles to better suit Netscape's broken handling of CSS\n\n-----------------------------------------------------------------------------\nVersion 0.7 (2000-12-06)\n\nNew features:\n    * RecentChanges bookmarking\n\nBugfixes:\n    * SECURITY FIX\n    * Non-greedy extended WikiNames\n\n-----------------------------------------------------------------------------\nVersion 0.6 (2000-12-04)\n\nNew features:\n    * [[UserPreferences]] macro and associated functions\n    * [[TableOfContents]] macro\n    * Mechanism for external macros (user extensions)\n    * Numbered list types and start offsets\n\nBugfixes:\n    * Search dialogs did not work on the FrontPage\n    * Add newline to text if last line has none (better diffs)\n\n-----------------------------------------------------------------------------\nVersion 0.5 (2000-11-17)\n\nNew features:\n    * Major refactoring: code is now broken up into modules within the\n      \"MoinMoin\" package\n    * Diagnosis of installation via a \"test.cgi\" script\n    * Smileys\n    * \"#format\" processing instruction\n    * \"##comment\"\n    * [[RandomPage]] and [[RandomPage(number)]] macro\n    * configurable footer (\"page_footer1\" and \"page_footer2\")\n    * \"#redirect\" processing instruction\n\nBugfixes:\n    * Bugfix for broken CGI environment of IIS/4.0\n    * URLs and InterWiki links are now less greedy (punctuation at the end\n      is excluded, and \"<\" ends them, too)\n\n-----------------------------------------------------------------------------\nVersion 0.4 (2000-11-01)\n\nNew features:\n    * Table markup \"||a||b||c||\"\n    * Headlines \"= H1 =\", \"== H2 ==\", and so on up to H5\n    * [[PageCount]] macro\n    * Added [[Icon(image)]] macro and macro arguments\n    * [[PageList(title-regex)]] macro\n    * New help system (set of help pages describing all features)\n\nBugfixes:\n    * Create complete URL for \"Clear message\" link\n    * Inline code spans needed cgi.escape\n    * Better fix for Python 1.6 \"re\" problems\n    * Fix for uppercase extensions in inline images (\"foo.JPG\")\n    * Fixed colspan in RecentChanges\n    * HR size is now limited to 8\n    * \"}\" ends an URL pattern (fixes URLs right at the end of code displays)\n\n-----------------------------------------------------------------------------\nVersion 0.3 (2000-10-25)\n\nNew features:\n    * Check for inline images with InterWiki links (Spam:eggs.gif)\n    * New config variable \"allow_extended_names\", which enables markup for\n      wiki names containing ANY character like this: [\"any chars\"] \n    * New config variable \"html_head\"\n    * New macro [[SystemInfo]]\n    * Added inline code (\"{{{\" and \"}}}\" on the same line)\n    * Support for new config variable \"max_macro_size\"\n\nBugfixes:\n    * Don't treat sequences with a double colon (CPP::Namespace) as an\n      InterWiki link\n    * The local part of InterWiki links is now correctly URL-escaped\n    * Quickfix for a bug in 1.6's regular expressions\n    * Fixed \"SpamSpamSpam\" bug (multiple entries in word list)\n    * Anchor names get quoted in WordIndex and TitleIndex\n    * Filtering of filenames in page_list() corrected\n    * Escape &, <, > when sending the editor\n    * Final(?) fix for japanese wiki names\n\n-----------------------------------------------------------------------------\nVersion 0.2 (2000-08-26)\n\nNew features:\n    * When saving, a datestamp saved in the form and that of the file are\n      compared now; so, accidently saving over changes of other people is\n      not possible anymore (saving still needs file locking though, for\n      race conditions)\n    * if the directory \"backup\" exists in the data dir, pages are saved\n      there before a new version is written to disk\n    * Removed the \"Reset\" button from EditPage\n    * Added \"Reduce editor size\" link\n    * Added Latin-1 WikiNames (J\u00fcrgenHermann ;)\n    * Speeded up RecentChanges by looking up hostnames ONCE while saving\n    * Show at most 14 (distinct) days in RecentChanges\n    * Added icons for common functions, at the top of the page\n    * Added a printing preview (no icons, etc.)\n    * Added bracketed (external) URLs\n    * Added support for quoted URLs (\"http://...\")\n    * Added styles for :visited links to CSS\n    * Embed image if an URL ends in .gif/.jpg/.png\n    * No markup detection in code sections\n    * Grey background for code sections\n    * Added handling for numbered lists\n    * the edit textarea now grows in width with the browser window\n      (thanks to Sebastian Dau\ufffdfor that idea)\n    * Added page info (revision history) and viewing of old revisions\n    * Added page diff, and diff links on page info\n    * Added InterWiki support (use \"wiki:WikiServer/theirlocalname\"; the list\n      of WikiServers is read from \"data/intermap.txt\")\n    * Added \"normal\" InterWiki links\n    * Added \"action=raw\" to send the raw wiki markup as text/plain (e.g. for\n      backup purposes via wget) \n\nBugfixes:\n    * Removed an exception when saving empty pages\n    * Fixed bold nested into emphasis ('''''Bold''' Italic'')\n\n-----------------------------------------------------------------------------\nVersion 0.1 (2000-07-29)\n\nImprovements over PikiPiki 1.62:\n    * Moved configuration to \"moin_config.py\"\n    * Added \"edit_rows\" setting\n    * Added navigation bar\n    * Improved HTML formatting\n    * Added timing comment (page created in xx secs)\n    * ISO date and time formats by default\n    * Formatted RecentChanges with HTML tables\n    * Uppercase letters for the index pages\n    * Added PythonPowered logo\n\nBugfixes:\n    * Javadoc comments now get formatted properly in {{{ }}} sections\n    * Remove \\r from submitted pages (so we get PORTABLE wiki files)\n    * chmod(0666) eases manual changes to the data dir\n\n-----------------------------------------------------------------------------\n"], "filenames": ["MoinMoin/action/fckdialog.py", "docs/CHANGES"], "buggy_code_start_loc": [205, 25], "buggy_code_end_loc": [303, 25], "fixing_code_start_loc": [206, 26], "fixing_code_end_loc": [304, 27], "type": "CWE-79", "message": "Cross-site scripting (XSS) vulnerability in the link dialogue in GUI editor in MoinMoin before 1.9.10 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.", "other": {"cve": {"id": "CVE-2017-5934", "sourceIdentifier": "cve@mitre.org", "published": "2018-10-15T19:29:00.507", "lastModified": "2018-11-29T13:00:19.337", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site scripting (XSS) vulnerability in the link dialogue in GUI editor in MoinMoin before 1.9.10 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors."}, {"lang": "es", "value": "Una vulnerabilidad Cross-Site Scripting (XSS) en el di\u00e1logo de enlaces en el editor de la interfaz gr\u00e1fica de MoinMoin en versiones anteriores a la 1.9.10 permite a atacantes remotos inyectar scripts web o HTML arbitrarios utilizando vectores no especificados."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:moinmo:moinmoin:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.9.10", "matchCriteriaId": "85D1682C-984C-4532-9DA9-B36E5FBFBD73"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:14.04:*:*:*:lts:*:*:*", "matchCriteriaId": "B5A6F2F3-4894-4392-8296-3B8DD2679084"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:16.04:*:*:*:lts:*:*:*", "matchCriteriaId": "F7016A2A-8365-4F1A-89A2-7A19F2BCAE5B"}, {"vulnerable": true, "criteria": "cpe:2.3:o:canonical:ubuntu_linux:18.04:*:*:*:lts:*:*:*", "matchCriteriaId": "23A7C53F-B80F-4E6A-AFA9-58EEA84BE11D"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:8.0:*:*:*:*:*:*:*", "matchCriteriaId": "C11E6FB0-C8C0-4527-9AA0-CB9B316F8F43"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}, {"vulnerable": true, "criteria": "cpe:2.3:o:opensuse:leap:15.0:*:*:*:*:*:*:*", "matchCriteriaId": "F1E78106-58E6-4D59-990F-75DA575BFAD9"}, {"vulnerable": true, "criteria": "cpe:2.3:o:opensuse:leap:42.3:*:*:*:*:*:*:*", "matchCriteriaId": "5F65DAB0-3DAD-49FF-BC73-3581CC3D5BF3"}]}]}], "references": [{"url": "http://lists.opensuse.org/opensuse-security-announce/2018-10/msg00024.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "http://moinmo.in/SecurityFixes", "source": "cve@mitre.org", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://github.com/moinwiki/moin-1.9/commit/70955a8eae091cc88fd9a6e510177e70289ec024", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2018/10/msg00007.html", "source": "cve@mitre.org", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://usn.ubuntu.com/3794-1/", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}, {"url": "https://www.debian.org/security/2018/dsa-4318", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/moinwiki/moin-1.9/commit/70955a8eae091cc88fd9a6e510177e70289ec024"}}