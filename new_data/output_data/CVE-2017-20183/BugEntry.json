{"buggy_code": ["<?php\n/*\nPlugin Name: External Media without Import\nDescription: Add external images to the media library without importing, i.e. uploading them to your WordPress site.\nVersion: 1.0.1\nAuthor: Zhixiang Zhu\nAuthor URI: http://zxtechart.com\nLicense: GPLv3\nLicense URI: https://www.gnu.org/licenses/gpl-3.0-standalone.html\n\nExternal Media without Import is free software: you can redistribute it\nand/or modify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation, either version 3 of the License,\nor any later version.\n \nExternal Media without Import is distributed in the hope that it will be\nuseful, but WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License for more details.\n \nYou should have received a copy of the GNU General Public License along\nwith External Media without Import. If not, see\nhttps://www.gnu.org/licenses/gpl-3.0-standalone.html.\n*/\nnamespace emwi;\n\n$style = 'emwi-css';\n$css_file = plugins_url( '/external-media-without-import.css', __FILE__ );\nwp_register_style( $style, $css_file );\nwp_enqueue_style( $style );\n\n$script = 'emwi-js';\n$js_file = plugins_url( '/external-media-without-import.js', __FILE__ );\nwp_register_script( $script, $js_file, array( 'jquery' ) );\nwp_enqueue_script( $script );\n\nadd_action( 'admin_menu', 'emwi\\add_submenu' );\nadd_action( 'post-plupload-upload-ui', 'emwi\\post_upload_ui' );\nadd_action( 'post-html-upload-ui', 'emwi\\post_upload_ui' );\nadd_action( 'wp_ajax_add_external_media_without_import', 'emwi\\wp_ajax_add_external_media_without_import' );\nadd_action( 'admin_post_add_external_media_without_import', 'emwi\\admin_post_add_external_media_without_import' );\n\nfunction add_submenu() {\n\tadd_submenu_page(\n\t\t'upload.php',\n\t\t__( 'Add External Media without Import' ),\n\t\t__( 'Add External Media without Import' ),\n\t\t'manage_options',\n\t\t'add-external-media-without-import',\n\t\t'emwi\\print_submenu_page'\n\t);\n}\n\nfunction post_upload_ui() {\n\t$media_library_mode = get_user_option( 'media_library_mode', get_current_user_id() );\n?>\n\t<div id=\"emwi-in-upload-ui\">\n\t  <div class=\"row1\">\n\t\t<?php echo __('or'); ?>\n\t  </div>\n\t  <div class=\"row2\">\n\t\t<?php if ( 'grid' === $media_library_mode ) : ?>\n\t\t  <button id=\"emwi-show\" class=\"button button-large\">\n\t\t\t<?php echo __('Add External Media without Import'); ?>\n\t\t  </button>\n\t\t  <?php print_media_new_panel( true ); ?>\n\t\t<?php else : ?>\n\t\t  <a class=\"button button-large\" href=\"<?php echo esc_url( admin_url( '/upload.php?page=add-external-media-without-import', __FILE__ ) ); ?>\">\n\t\t\t<?php echo __('Add External Media without Import'); ?>\n\t\t  </a>\n\t\t<?php endif; ?>\n\t  </div>\n\t</div>\n<?php\n}\n\nfunction print_submenu_page() {\n?>\n\t<form action=\"<?php echo esc_url( admin_url('admin-post.php') ); ?>\" method=\"post\">\n\t  <?php print_media_new_panel( false ); ?>\n\t</form>\n<?php\n}\n\nfunction print_media_new_panel( $is_in_upload_ui ) {\n?>\n\t<div id=\"emwi-media-new-panel\" <?php if ( $is_in_upload_ui  ) : ?>style=\"display: none\"<?php endif; ?>>\n\t  <div class=\"url-row\">\n\t\t<label><?php echo __('Add a media from URL'); ?></label>\n\t\t<span id=\"emwi-url-input-wrapper\">\n\t\t  <input id=\"emwi-url\" name=\"url\" type=\"url\" required placeholder=\"<?php echo __('Image URL');?>\" value=\"<?php echo urldecode( $_GET['url'] ); ?>\">\n\t\t</span>\n\t  </div>\n\t  <div id=\"emwi-hidden\" <?php if ( $is_in_upload_ui || empty( $_GET['error'] ) ) : ?>style=\"display: none\"<?php endif; ?>>\n\t\t<div>\n\t\t  <span id=\"emwi-error\"><?php echo urldecode( $_GET['error'] ); ?></span>\n\t\t  <?php echo _('Please fill in the following properties manually. If you leave the fields blank (or 0 for width/height), the plugin will try to resolve them automatically'); ?>\n\t\t</div>\n\t\t<div id=\"emwi-properties\">\n\t\t  <label><?php echo __('Width'); ?></label>\n\t\t  <input id=\"emwi-width\" name=\"width\" type=\"number\" value=\"<?php echo urldecode( $_GET['width'] ); ?>\">\n\t\t  <label><?php echo __('Height'); ?></label>\n\t\t  <input id=\"emwi-height\" name=\"height\" type=\"number\" value=\"<?php echo urldecode( $_GET['height'] ); ?>\">\n\t\t  <label><?php echo __('MIME Type'); ?></label>\n\t\t  <input id=\"emwi-mime-type\" name=\"mime-type\" type=\"text\" value=\"<?php echo urldecode( $_GET['mime-type'] ); ?>\">\n\t\t</div>\n\t  </div>\n\t  <div id=\"emwi-buttons-row\">\n\t\t<input type=\"hidden\" name=\"action\" value=\"add_external_media_without_import\">\n\t\t<span class=\"spinner\"></span>\n\t\t<input type=\"button\" id=\"emwi-clear\" class=\"button\" value=\"<?php echo __('Clear') ?>\">\n\t\t<input type=\"submit\" id=\"emwi-add\" class=\"button button-primary\" value=\"<?php echo __('Add') ?>\">\n\t\t<?php if ( $is_in_upload_ui  ) : ?>\n\t\t  <input type=\"button\" id=\"emwi-cancel\" class=\"button\" value=\"<?php echo __('Cancel') ?>\">\n\t\t<?php endif; ?>\n\t  </div>\n\t</div>\n<?php\n}\n\nfunction wp_ajax_add_external_media_without_import() {\n\t$info = add_external_media_without_import();\n\tif ( isset( $info['id'] ) ) {\n\t\tif ( $attachment = wp_prepare_attachment_for_js( $info['id'] ) ) {\n\t\t\twp_send_json_success( $attachment );\n\t\t}\n\t\telse {\n\t\t\t$info['error'] = _('Failed to prepare attachment for js');\n\t\t\twp_send_json_error( $info );\n\t\t}\n\t}\n\telse {\n\t\twp_send_json_error( $info );\n\t}\n}\n\nfunction admin_post_add_external_media_without_import() {\n\t$info = add_external_media_without_import();\n\t$redirect_url = 'upload.php';\n\tif ( ! isset( $info['id'] ) ) {\n\t\t$redirect_url = $redirect_url .  '?page=add-external-media-without-import&url=' . urlencode( $info['url'] );\n\t\t$redirect_url = $redirect_url . '&error=' . urlencode( $info['error'] );\n\t\t$redirect_url = $redirect_url . '&width=' . urlencode( $info['width'] );\n\t\t$redirect_url = $redirect_url . '&height=' . urlencode( $info['height'] );\n\t\t$redirect_url = $redirect_url . '&mime-type=' . urlencode( $info['mime-type'] );\n\t}\n\twp_redirect( admin_url( $redirect_url ) );\n\texit;\n}\n\nfunction sanitize_and_validate_input() {\n\t// Don't call sanitize_text_field on url because it removes '%20'.\n\t// Always use esc_url/esc_url_raw when sanitizing URLs. See:\n\t// https://codex.wordpress.org/Function_Reference/esc_url\n\t$input = array(\n\t\t'url' => esc_url_raw( $_POST['url'] ),\n\t\t'width' => sanitize_text_field( $_POST['width'] ),\n\t\t'height' => sanitize_text_field( $_POST['height'] ),\n\t\t'mime-type' => sanitize_mime_type( $_POST['mime-type'] )\n\t);\n\n\t$width_str = $input['width'];\n\t$width_int = intval( $width_str );\n\tif ( ! empty( $width_str ) && $width_int <= 0 ) {\n\t\t$input['error'] = _('Width and height must be non-negative integers.');\n\t\treturn $input;\n\t}\n\n\t$height_str = $input['height'];\n\t$height_int = intval( $height_str );\n\tif ( ! empty( $height_str ) && $height_int <= 0 ) {\n\t\t$input['error'] = _('Width and height must be non-negative integers.');\n\t\treturn $input;\n\t}\n\n\t$input['width'] = $width_int;\n\t$input['height'] = $height_int;\n\n\treturn $input;\n}\n\nfunction add_external_media_without_import() {\n\t$input = sanitize_and_validate_input();\n\n\tif ( isset( $input['error'] ) ) {\n\t\treturn $input;\n\t}\n\n\t$url = $input['url'];\n\t$width = $input['width'];\n\t$height = $input['height'];\n\t$mime_type = $input['mime-type'];\n\n\tif ( empty( $width ) || empty( $height ) || empty( $mime_type ) ) {\n\t\t$image_size = @getimagesize( $url );\n\n\t\tif ( empty( $image_size ) ) {\n\t\t\tif ( empty( $mime_type ) ) {\n\t\t\t\t$response = wp_remote_head( $url );\n\t\t\t\tif ( is_array( $response ) && isset( $response['headers']['content-type'] ) ) {\n\t\t\t\t\t$input['mime-type'] = $response['headers']['content-type'];\n\t\t\t\t}\n\t\t\t}\n\t\t\t$input['error'] = _('Unable to get the image size.');\n\t\t\treturn $input;\n\t\t}\n\n\t\tif ( empty( $width ) ) {\n\t\t\t$width = $image_size[0];\n\t\t}\n\n\t\tif ( empty( $height ) ) {\n\t\t\t$height = $image_size[1];\n\t\t}\n\n\t\tif ( empty( $mime_type ) ) {\n\t\t\t$mime_type = $image_size['mime'];\n\t\t}\n\t}\n\n\t$filename = wp_basename( $url );\n\t$attachment = array(\n\t\t'guid' => $url,\n\t\t'post_mime_type' => $mime_type,\n\t\t'post_title' => preg_replace( '/\\.[^.]+$/', '', $filename ),\n\t);\n\t$attachment_metadata = array( 'width' => $width, 'height' => $height, 'file' => $filename );\n\t$attachment_metadata['sizes'] = array( 'full' => $attachment_metadata );\n\t$attachment_id = wp_insert_attachment( $attachment );\n\twp_update_attachment_metadata( $attachment_id, $attachment_metadata );\n\n\t$input['id'] = $attachment_id;\n\treturn $input;\n}\n"], "fixing_code": ["<?php\n/*\nPlugin Name: External Media without Import\nDescription: Add external images to the media library without importing, i.e. uploading them to your WordPress site.\nVersion: 1.0.1\nAuthor: Zhixiang Zhu\nAuthor URI: http://zxtechart.com\nLicense: GPLv3\nLicense URI: https://www.gnu.org/licenses/gpl-3.0-standalone.html\n\nExternal Media without Import is free software: you can redistribute it\nand/or modify it under the terms of the GNU General Public License as\npublished by the Free Software Foundation, either version 3 of the License,\nor any later version.\n \nExternal Media without Import is distributed in the hope that it will be\nuseful, but WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\nPublic License for more details.\n \nYou should have received a copy of the GNU General Public License along\nwith External Media without Import. If not, see\nhttps://www.gnu.org/licenses/gpl-3.0-standalone.html.\n*/\nnamespace emwi;\n\n$style = 'emwi-css';\n$css_file = plugins_url( '/external-media-without-import.css', __FILE__ );\nwp_register_style( $style, $css_file );\nwp_enqueue_style( $style );\n\n$script = 'emwi-js';\n$js_file = plugins_url( '/external-media-without-import.js', __FILE__ );\nwp_register_script( $script, $js_file, array( 'jquery' ) );\nwp_enqueue_script( $script );\n\nadd_action( 'admin_menu', 'emwi\\add_submenu' );\nadd_action( 'post-plupload-upload-ui', 'emwi\\post_upload_ui' );\nadd_action( 'post-html-upload-ui', 'emwi\\post_upload_ui' );\nadd_action( 'wp_ajax_add_external_media_without_import', 'emwi\\wp_ajax_add_external_media_without_import' );\nadd_action( 'admin_post_add_external_media_without_import', 'emwi\\admin_post_add_external_media_without_import' );\n\nfunction add_submenu() {\n\tadd_submenu_page(\n\t\t'upload.php',\n\t\t__( 'Add External Media without Import' ),\n\t\t__( 'Add External Media without Import' ),\n\t\t'manage_options',\n\t\t'add-external-media-without-import',\n\t\t'emwi\\print_submenu_page'\n\t);\n}\n\nfunction post_upload_ui() {\n\t$media_library_mode = get_user_option( 'media_library_mode', get_current_user_id() );\n?>\n\t<div id=\"emwi-in-upload-ui\">\n\t  <div class=\"row1\">\n\t\t<?php echo __('or'); ?>\n\t  </div>\n\t  <div class=\"row2\">\n\t\t<?php if ( 'grid' === $media_library_mode ) : ?>\n\t\t  <button id=\"emwi-show\" class=\"button button-large\">\n\t\t\t<?php echo __('Add External Media without Import'); ?>\n\t\t  </button>\n\t\t  <?php print_media_new_panel( true ); ?>\n\t\t<?php else : ?>\n\t\t  <a class=\"button button-large\" href=\"<?php echo esc_url( admin_url( '/upload.php?page=add-external-media-without-import', __FILE__ ) ); ?>\">\n\t\t\t<?php echo __('Add External Media without Import'); ?>\n\t\t  </a>\n\t\t<?php endif; ?>\n\t  </div>\n\t</div>\n<?php\n}\n\nfunction print_submenu_page() {\n?>\n\t<form action=\"<?php echo esc_url( admin_url('admin-post.php') ); ?>\" method=\"post\">\n\t  <?php print_media_new_panel( false ); ?>\n\t</form>\n<?php\n}\n\nfunction print_media_new_panel( $is_in_upload_ui ) {\n?>\n\t<div id=\"emwi-media-new-panel\" <?php if ( $is_in_upload_ui  ) : ?>style=\"display: none\"<?php endif; ?>>\n\t  <div class=\"url-row\">\n\t\t<label><?php echo __('Add a media from URL'); ?></label>\n\t\t<span id=\"emwi-url-input-wrapper\">\n\t\t  <input id=\"emwi-url\" name=\"url\" type=\"url\" required placeholder=\"<?php echo __('Image URL');?>\" value=\"<?php echo esc_url( $_GET['url'] ); ?>\">\n\t\t</span>\n\t  </div>\n\t  <div id=\"emwi-hidden\" <?php if ( $is_in_upload_ui || empty( $_GET['error'] ) ) : ?>style=\"display: none\"<?php endif; ?>>\n\t\t<div>\n\t\t  <span id=\"emwi-error\"><?php echo esc_html( $_GET['error'] ); ?></span>\n\t\t  <?php echo _('Please fill in the following properties manually. If you leave the fields blank (or 0 for width/height), the plugin will try to resolve them automatically'); ?>\n\t\t</div>\n\t\t<div id=\"emwi-properties\">\n\t\t  <label><?php echo __('Width'); ?></label>\n\t\t  <input id=\"emwi-width\" name=\"width\" type=\"number\" value=\"<?php echo esc_html( $_GET['width'] ); ?>\">\n\t\t  <label><?php echo __('Height'); ?></label>\n\t\t  <input id=\"emwi-height\" name=\"height\" type=\"number\" value=\"<?php echo esc_html( $_GET['height'] ); ?>\">\n\t\t  <label><?php echo __('MIME Type'); ?></label>\n\t\t  <input id=\"emwi-mime-type\" name=\"mime-type\" type=\"text\" value=\"<?php echo esc_html( $_GET['mime-type'] ); ?>\">\n\t\t</div>\n\t  </div>\n\t  <div id=\"emwi-buttons-row\">\n\t\t<input type=\"hidden\" name=\"action\" value=\"add_external_media_without_import\">\n\t\t<span class=\"spinner\"></span>\n\t\t<input type=\"button\" id=\"emwi-clear\" class=\"button\" value=\"<?php echo __('Clear') ?>\">\n\t\t<input type=\"submit\" id=\"emwi-add\" class=\"button button-primary\" value=\"<?php echo __('Add') ?>\">\n\t\t<?php if ( $is_in_upload_ui  ) : ?>\n\t\t  <input type=\"button\" id=\"emwi-cancel\" class=\"button\" value=\"<?php echo __('Cancel') ?>\">\n\t\t<?php endif; ?>\n\t  </div>\n\t</div>\n<?php\n}\n\nfunction wp_ajax_add_external_media_without_import() {\n\t$info = add_external_media_without_import();\n\tif ( isset( $info['id'] ) ) {\n\t\tif ( $attachment = wp_prepare_attachment_for_js( $info['id'] ) ) {\n\t\t\twp_send_json_success( $attachment );\n\t\t}\n\t\telse {\n\t\t\t$info['error'] = _('Failed to prepare attachment for js');\n\t\t\twp_send_json_error( $info );\n\t\t}\n\t}\n\telse {\n\t\twp_send_json_error( $info );\n\t}\n}\n\nfunction admin_post_add_external_media_without_import() {\n\t$info = add_external_media_without_import();\n\t$redirect_url = 'upload.php';\n\tif ( ! isset( $info['id'] ) ) {\n\t\t$redirect_url = $redirect_url .  '?page=add-external-media-without-import&url=' . urlencode( $info['url'] );\n\t\t$redirect_url = $redirect_url . '&error=' . urlencode( $info['error'] );\n\t\t$redirect_url = $redirect_url . '&width=' . urlencode( $info['width'] );\n\t\t$redirect_url = $redirect_url . '&height=' . urlencode( $info['height'] );\n\t\t$redirect_url = $redirect_url . '&mime-type=' . urlencode( $info['mime-type'] );\n\t}\n\twp_redirect( admin_url( $redirect_url ) );\n\texit;\n}\n\nfunction sanitize_and_validate_input() {\n\t// Don't call sanitize_text_field on url because it removes '%20'.\n\t// Always use esc_url/esc_url_raw when sanitizing URLs. See:\n\t// https://codex.wordpress.org/Function_Reference/esc_url\n\t$input = array(\n\t\t'url' => esc_url_raw( $_POST['url'] ),\n\t\t'width' => sanitize_text_field( $_POST['width'] ),\n\t\t'height' => sanitize_text_field( $_POST['height'] ),\n\t\t'mime-type' => sanitize_mime_type( $_POST['mime-type'] )\n\t);\n\n\t$width_str = $input['width'];\n\t$width_int = intval( $width_str );\n\tif ( ! empty( $width_str ) && $width_int <= 0 ) {\n\t\t$input['error'] = _('Width and height must be non-negative integers.');\n\t\treturn $input;\n\t}\n\n\t$height_str = $input['height'];\n\t$height_int = intval( $height_str );\n\tif ( ! empty( $height_str ) && $height_int <= 0 ) {\n\t\t$input['error'] = _('Width and height must be non-negative integers.');\n\t\treturn $input;\n\t}\n\n\t$input['width'] = $width_int;\n\t$input['height'] = $height_int;\n\n\treturn $input;\n}\n\nfunction add_external_media_without_import() {\n\t$input = sanitize_and_validate_input();\n\n\tif ( isset( $input['error'] ) ) {\n\t\treturn $input;\n\t}\n\n\t$url = $input['url'];\n\t$width = $input['width'];\n\t$height = $input['height'];\n\t$mime_type = $input['mime-type'];\n\n\tif ( empty( $width ) || empty( $height ) || empty( $mime_type ) ) {\n\t\t$image_size = @getimagesize( $url );\n\n\t\tif ( empty( $image_size ) ) {\n\t\t\tif ( empty( $mime_type ) ) {\n\t\t\t\t$response = wp_remote_head( $url );\n\t\t\t\tif ( is_array( $response ) && isset( $response['headers']['content-type'] ) ) {\n\t\t\t\t\t$input['mime-type'] = $response['headers']['content-type'];\n\t\t\t\t}\n\t\t\t}\n\t\t\t$input['error'] = _('Unable to get the image size.');\n\t\t\treturn $input;\n\t\t}\n\n\t\tif ( empty( $width ) ) {\n\t\t\t$width = $image_size[0];\n\t\t}\n\n\t\tif ( empty( $height ) ) {\n\t\t\t$height = $image_size[1];\n\t\t}\n\n\t\tif ( empty( $mime_type ) ) {\n\t\t\t$mime_type = $image_size['mime'];\n\t\t}\n\t}\n\n\t$filename = wp_basename( $url );\n\t$attachment = array(\n\t\t'guid' => $url,\n\t\t'post_mime_type' => $mime_type,\n\t\t'post_title' => preg_replace( '/\\.[^.]+$/', '', $filename ),\n\t);\n\t$attachment_metadata = array( 'width' => $width, 'height' => $height, 'file' => $filename );\n\t$attachment_metadata['sizes'] = array( 'full' => $attachment_metadata );\n\t$attachment_id = wp_insert_attachment( $attachment );\n\twp_update_attachment_metadata( $attachment_id, $attachment_metadata );\n\n\t$input['id'] = $attachment_id;\n\treturn $input;\n}\n"], "filenames": ["external-media-without-import.php"], "buggy_code_start_loc": [91], "buggy_code_end_loc": [106], "fixing_code_start_loc": [91], "fixing_code_end_loc": [106], "type": "CWE-79", "message": "A vulnerability was found in External Media without Import Plugin up to 1.0.0 on WordPress. It has been declared as problematic. This vulnerability affects the function print_media_new_panel of the file external-media-without-import.php. The manipulation of the argument url/error/width/height/mime-type leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 1.0.1 is able to address this issue. The name of the patch is 9d2ecd159a6e2e3f710b4f1c28e2714f66502746. It is recommended to upgrade the affected component. VDB-227950 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2017-20183", "sourceIdentifier": "cna@vuldb.com", "published": "2023-05-05T01:15:08.550", "lastModified": "2023-05-11T17:37:24.683", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in External Media without Import Plugin up to 1.0.0 on WordPress. It has been declared as problematic. This vulnerability affects the function print_media_new_panel of the file external-media-without-import.php. The manipulation of the argument url/error/width/height/mime-type leads to cross site scripting. The attack can be initiated remotely. Upgrading to version 1.0.1 is able to address this issue. The name of the patch is 9d2ecd159a6e2e3f710b4f1c28e2714f66502746. It is recommended to upgrade the affected component. VDB-227950 is the identifier assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:external_media_without_import_project:external_media_without_import:*:*:*:*:*:*:*:*", "versionEndIncluding": "1.0.0", "matchCriteriaId": "FE88986E-4CA5-4553-BF78-DAE1CB770A50"}]}]}], "references": [{"url": "https://github.com/zzxiang/external-media-without-import/commit/9d2ecd159a6e2e3f710b4f1c28e2714f66502746", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/zzxiang/external-media-without-import/releases/tag/v1.0.1", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.227950", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}, {"url": "https://vuldb.com/?id.227950", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/zzxiang/external-media-without-import/commit/9d2ecd159a6e2e3f710b4f1c28e2714f66502746"}}