{"buggy_code": ["<?php\n    /**\n     * Help view controller\n     * @author Stefan Seehafer <sea75300@yahoo.de>\n     * @copyright (c) 2011-2017, Stefan Seehafer\n     * @license http://www.gnu.org/licenses/gpl.txt GPLv3\n     */\n    namespace fpcm\\controller\\action\\system;\n    \n    class help extends \\fpcm\\controller\\abstracts\\controller {\n        \n        /**\n         * Controller-View\n         * @var \\fpcm\\model\\view\\acp\n         */\n        protected $view;\n        \n        /**\n         * ID des automatisch offenen Kapitels\n         * @var int\n         */\n        protected $chapterHeadline = '';\n\n        /**\n         * Konstruktor\n         */\n        public function __construct() {\n            parent::__construct();\n\n            $this->checkPermission = [];\n            $this->view            = new \\fpcm\\model\\view\\acp('help', 'system');\n            $this->cache           = new \\fpcm\\classes\\cache('helpcache_'.$this->config->system_lang);\n        }\n\n        public function request() {\n            $this->chapterHeadline = $this->getRequestVar('ref');\n            return parent::request();\n        }\n        \n        /**\n         * Controller-Processing\n         * @return boolean\n         */\n        public function process() {\n            if (!parent::process()) return false;\n\n            $contents = $this->cache->read();\n            if ($this->cache->isExpired() || !is_array($contents)) {\n                $xml = simplexml_load_string($this->lang->getHelp());\n                foreach ($xml->chapter as $chapter) {\n                    $headline = trim($chapter->headline);\n                    $contents[$headline] = trim($chapter->text);\n                }                \n            }            \n            \n            $contents = $this->events->runEvent('extendHelp', $contents);\n            $this->view->assign('chapters', $contents);\n\n            $pos = $this->chapterHeadline ? (int) array_search(strtoupper(base64_decode($this->chapterHeadline)), array_keys($contents)) : 0;\n            $this->view->addJsVars(['fpcmDefaultCapter' => $pos]);\n            $this->view->setViewJsFiles(['help.js']);\n            \n            $this->view->render();\n        }\n        \n    }\n?>", "<?php\n    /**\n     * Template preview controller\n     * @author Stefan Seehafer <sea75300@yahoo.de>\n     * @copyright (c) 2011-2017, Stefan Seehafer\n     * @license http://www.gnu.org/licenses/gpl.txt GPLv3\n     */\n    namespace fpcm\\controller\\action\\system;\n    \n    class templatepreview extends \\fpcm\\controller\\abstracts\\controller {\n        \n        use \\fpcm\\controller\\traits\\system\\templatepreview;\n        \n        /**\n         *\n         * @var \\fpcm\\model\\view\\pub\n         */\n        protected $view;\n\n        /**\n         *\n         * @var \\fpcm\\model\\pubtemplates\\template\n         */\n        protected $template;\n        \n        /**\n         *\n         * @var int \n         */\n        protected $tid;\n\n        /**\n         * Konstruktor\n         */\n        public function __construct() {\n            parent::__construct();\n            \n            $this->checkPermission = array('system' => 'templates');\n\n        }\n        \n        /**\n         * Request-Handler\n         * @return boolean\n         */\n        public function request() {\n\n            $this->tid = $this->getRequestVar('tid', array(9));\n\n            if (!$this->tid) {\n                return false;\n            }\n\n            return true;\n        }\n        \n        /**\n         * Controller-Processing\n         * @return boolean\n         */\n        public function process() {\n            if (!parent::process()) return false;\n\n            $this->template = $this->getTemplateById($this->tid);\n            switch ($this->tid) {\n                case 1 :\n                    $this->getArticlesPreview();\n                    break;\n                case 2 :\n                    $this->getArticlePreview();\n                    break;\n                case 3 :\n                    $this->getCommentPreview();\n                    break;\n                case 4 :\n                    $this->getCommentFormPreview();\n                    break;\n                case 5 :\n                    $this->getLatestNewsPreview();\n                    break;\n                default :\n                    $this->view = new \\fpcm\\model\\view\\error();\n                    $this->view->setMessage('Invalid template data');\n                    $this->view->render();\n                    return;\n            }\n\n            $this->view->assign('showToolbars', false);\n            $this->view->assign('hideDebug', true);\n            $this->view->assign('hideDebug', true);\n            $this->view->assign('systemMode', 1);\n            $this->view->setShowHeader(true);\n            $this->view->setShowFooter(true);\n            $this->view->setForceCss(true);\n            $this->view->prependjQuery();\n            $this->view->render();\n\n        }        \n        \n        private function getArticlesPreview() {\n\n            $this->view         = new \\fpcm\\model\\view\\pub('showall', 'public');\n\n            $parsed = [];\n            \n            $categoryTexts     = array('<span class=\"fpcm-pub-category-text\">Category 1</span>', '<span class=\"fpcm-pub-category-text\">Category 2</span>');\n            $shareButtonParser = new \\fpcm\\model\\pubtemplates\\sharebuttons($this->config->system_url, 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!');\n\n            $replacements = array(\n                '{{headline}}'                      => 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!',\n                '{{text}}'                          => 'Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.',\n                '{{author}}'                        => $this->session->getCurrentUser()->getUsername(),\n                '{{authorEmail}}'                   => '<a href=\"mailto:'.$this->session->getCurrentUser()->getEmail().'\">'.$this->session->getCurrentUser()->getDisplayname().'</a>',\n                '{{authorAvatar}}'                  => \\fpcm\\model\\users\\author::getAuthorImageDataOrPath($this->session->getCurrentUser(), 0),\n                '{{authorInfoText}}'                => $this->session->getCurrentUser()->getUsrinfo(),\n                '{{date}}'                          => date($this->config->system_dtmask, time()),\n                '{{changeDate}}'                    => date($this->config->system_dtmask, time()),\n                '{{changeUser}}'                    => $this->session->getCurrentUser()->getDisplayname(),\n                '{{statusPinned}}'                  => '',\n                '{{shareButtons}}'                  => $shareButtonParser->parse(),\n                '{{categoryIcons}}'                 => '',\n                '{{categoryTexts}}'                 => implode(PHP_EOL, $categoryTexts),\n                '{{commentCount}}'                  => 0,\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments',\n                '<readmore>:</readmore>'            => md5(time()),\n                '{{articleImage}}'                  => '',\n                '{{sources}}'                       => $this->config->system_url\n            );\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n            \n            $categoryTexts     = array('<span class=\"fpcm-pub-category-text\">Category 3</span>', '<span class=\"fpcm-pub-category-text\">Category 4</span>');\n            $shareButtonParser = new \\fpcm\\model\\pubtemplates\\sharebuttons($this->config->system_url, 'Ut wisi enim ad minim veniam?');\n            $replacements = array(\n                '{{headline}}'                      => 'Ut wisi enim ad minim veniam?',\n                '{{text}}'                          => 'Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. ',\n                '{{author}}'                        => $this->session->getCurrentUser()->getUsername(),\n                '{{authorEmail}}'                   => '<a href=\"mailto:'.$this->session->getCurrentUser()->getEmail().'\">'.$this->session->getCurrentUser()->getDisplayname().'</a>',\n                '{{authorAvatar}}'                  => '',\n                '{{authorInfoText}}'                => '',\n                '{{date}}'                          => date($this->config->system_dtmask, time() - 3600),\n                '{{changeDate}}'                    => date($this->config->system_dtmask, time() - 3600),\n                '{{changeUser}}'                    => $this->session->getCurrentUser()->getDisplayname(),\n                '{{statusPinned}}'                  => '',\n                '{{shareButtons}}'                  => $shareButtonParser->parse(),\n                '{{categoryIcons}}'                 => '',\n                '{{categoryTexts}}'                 => implode(PHP_EOL, $categoryTexts),\n                '{{commentCount}}'                  => 0,\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments',\n                '<readmore>:</readmore>'            => md5(time()),\n                '{{articleImage}}'                  => '',\n                '{{sources}}'                       => ''\n            );\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n\n            $this->view->assign('content', implode(PHP_EOL, $parsed));\n            $this->view->assign('commentform', '');\n\n        }\n\n        private function getArticlePreview() {\n\n            $this->view         = new \\fpcm\\model\\view\\pub('showsingle', 'public');\n            \n            $categoryTexts     = array('<span class=\"fpcm-pub-category-text\">Category 1</span>', '<span class=\"fpcm-pub-category-text\">Category 2</span>');\n            $shareButtonParser = new \\fpcm\\model\\pubtemplates\\sharebuttons($this->config->system_url, 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!');\n\n            $replacements = array(\n                '{{headline}}'                      => 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!',\n                '{{text}}'                          => 'Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.',\n                '{{author}}'                        => $this->session->getCurrentUser()->getDisplayname(),\n                '{{authorEmail}}'                   => '<a href=\"mailto:'.$this->session->getCurrentUser()->getEmail().'\">'.$this->session->getCurrentUser()->getDisplayname().'</a>',\n                '{{authorAvatar}}'                  => \\fpcm\\model\\users\\author::getAuthorImageDataOrPath($this->session->getCurrentUser(), 0),\n                '{{authorInfoText}}'                => $this->session->getCurrentUser()->getUsrinfo(),\n                '{{date}}'                          => date($this->config->system_dtmask, time()),\n                '{{changeDate}}'                    => date($this->config->system_dtmask, time()),\n                '{{changeUser}}'                    => $this->session->getCurrentUser()->getDisplayname(),\n                '{{statusPinned}}'                  => '',\n                '{{shareButtons}}'                  => $shareButtonParser->parse(),\n                '{{categoryIcons}}'                 => '',\n                '{{categoryTexts}}'                 => implode(PHP_EOL, $categoryTexts),\n                '{{commentCount}}'                  => 0,\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments',\n                '<readmore>:</readmore>'            => md5(time()),\n                '{{articleImage}}'                  => '',\n                '{{sources}}'                       => $this->config->system_url\n            );\n\n            $this->template->setReplacementTags($replacements);\n\n            $this->view->assign('article', $this->template->parse());\n            $this->view->assign('comments', '');\n            $this->view->assign('commentform', '');\n        }\n        \n        private function getCommentPreview() {\n            $this->view = new \\fpcm\\model\\view\\pub('showsingle', 'public');\n\n            $this->view->assign('article', '');\n            \n            $replacements = array(\n                '{{author}}'                => $this->session->getCurrentUser()->getDisplayname(),\n                '{{email}}'                 => $this->session->getCurrentUser()->getEmail(),\n                '{{website}}'               => $this->config->system_url,\n                '{{text}}'                  => 'Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis. ',\n                '{{date}}'                  => date($this->config->system_dtmask, time()-600),\n                '{{number}}'                => 1,\n                '{{id}}'                    => 1,\n                '{{mentionid}}'             => 'id=\"c1\"',\n                '{{mention}}:{{/mention}}'  => 1\n            );\n\n            $this->template->setReplacementTags($replacements);\n            $this->view->assign('comments', $this->template->parse());\n            $this->view->assign('commentform', '');\n        }\n        \n        private function getCommentFormPreview() {\n            \n            $this->view = new \\fpcm\\model\\view\\pub('showsingle', 'public');\n            $this->view->assign('article', '');\n            $this->view->assign('comments', '');\n            \n            $captcha = $this->events->runEvent('publicReplaceSpamCaptcha');\n            \n            if (!is_a($captcha, '\\fpcm\\model\\abstracts\\spamCaptcha')) {\n                $captcha = new \\fpcm\\model\\captchas\\fpcmDefault();\n            }\n\n            $smileyList = new \\fpcm\\model\\files\\smileylist();\n            $smileys    = $smileyList->getDatabaseList();            \n\n            $smileyHtml = [];\n            $smileyHtml[] = \"<ul class=\\\"fpcm-pub-smileys\\\">\";\n            foreach ($smileys as $key => $smiley)  {\n                $smileyHtml[] = '<li><a class=\"fpcm-pub-commentsmiley\" smileycode=\"'.$smiley->getSmileyCode().'\" href=\"#\"><img src=\"'.$smiley->getSmileyUrl().'\" alt=\"'.$smiley->getSmileyCode().'()\" '.$smiley->getWhstring().'></a></li>';\n            }\n            $smileyHtml[] = '</ul>';\n            \n            $replacementTags = array(\n                '{{formHeadline}}'                   => $this->lang->translate('COMMENTS_PUBLIC_FORMHEADLINE'),\n                '{{submitUrl}}'                      => $this->config->system_url,\n                '{{nameDescription}}'                => $this->lang->translate('COMMMENT_AUTHOR'),\n                '{{nameField}}'                      => '<input type=\"text\" class=\"fpcm-pub-textinput\" name=\"newcomment[name]\" value=\"\">',\n                '{{emailDescription}}'               => $this->lang->translate('GLOBAL_EMAIL'),\n                '{{emailField}}'                     => '<input type=\"text\" class=\"fpcm-pub-textinput\" name=\"newcomment[email]\" value=\"\">',\n                '{{websiteDescription}}'             => $this->lang->translate('COMMMENT_WEBSITE'),\n                '{{websiteField}}'                   => '<input type=\"text\" class=\"fpcm-pub-textinput\" name=\"newcomment[website]\" value=\"\">',\n                '{{textfield}}'                      => '<textarea class=\"fpcm-pub-textarea\" id=\"newcommenttext\" name=\"newcomment[text]\"></textarea>',\n                '{{smileysDescription}}'             => $this->lang->translate('HL_OPTIONS_SMILEYS'),\n                '{{smileys}}'                        => implode(PHP_EOL, $smileyHtml),\n                '{{tags}}'                           => htmlentities(\\fpcm\\model\\comments\\comment::COMMENT_TEXT_HTMLTAGS_FORM),\n                '{{spampluginQuestion}}'             => $captcha->createPluginText(),\n                '{{spampluginField}}'                => $captcha->createPluginInput(),\n                '{{privateCheckbox}}'                => '<input type=\"checkbox\" class=\"fpcm-pub-checkboxinput\" name=\"newcomment[private]\" value=\"1\">',\n                '{{submitButton}}'                   => '<button type=\"submit\" name=\"btnSendComment\">'.$this->lang->translate('GLOBAL_SUBMIT').'</button>',\n                '{{resetButton}}'                    => '<button type=\"reset\">'.$this->lang->translate('GLOBAL_RESET').'</button>'\n            );            \n\n            $this->template->setReplacementTags($replacementTags);            \n            $this->view->assign('commentform', $this->template->parse());\n        }\n        \n        private function getLatestNewsPreview() {\n\n            $this->view = new \\fpcm\\model\\view\\pub('showlatest', 'public');\n            \n            $replacements = array(\n                '{{headline}}'                      => 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!',\n                '{{author}}'                        => $this->session->getCurrentUser()->getDisplayname(),\n                '{{date}}'                          => date($this->config->system_dtmask, time()),\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments'\n            );\n\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n            \n            $replacements = array(\n                '{{headline}}'                      => 'Ut wisi enim ad minim veniam?',\n                '{{author}}'                        => $this->session->getCurrentUser()->getDisplayname(),\n                '{{date}}'                          => date($this->config->system_dtmask, time() - 3600),\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments'\n            );\n\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n\n            $this->view->assign('content', implode(PHP_EOL, $parsed));\n        }\n    }\n?>"], "fixing_code": ["<?php\n    /**\n     * Help view controller\n     * @author Stefan Seehafer <sea75300@yahoo.de>\n     * @copyright (c) 2011-2017, Stefan Seehafer\n     * @license http://www.gnu.org/licenses/gpl.txt GPLv3\n     */\n    namespace fpcm\\controller\\action\\system;\n    \n    class help extends \\fpcm\\controller\\abstracts\\controller {\n        \n        /**\n         * Controller-View\n         * @var \\fpcm\\model\\view\\acp\n         */\n        protected $view;\n        \n        /**\n         * ID des automatisch offenen Kapitels\n         * @var int\n         */\n        protected $chapterHeadline = '';\n\n        /**\n         * Konstruktor\n         */\n        public function __construct() {\n            parent::__construct();\n\n            $this->checkPermission = [];\n            $this->view            = new \\fpcm\\model\\view\\acp('help', 'system');\n            $this->cache           = new \\fpcm\\classes\\cache('helpcache_'.$this->config->system_lang);\n        }\n\n        public function request() {\n            $this->chapterHeadline = $this->getRequestVar('ref');\n            return parent::request();\n        }\n        \n        /**\n         * Controller-Processing\n         * @return boolean\n         */\n        public function process() {\n            if (!parent::process()) return false;\n\n            $contents = $this->cache->read();\n            if (!is_array($contents)) {\n                $contents = [];\n            }\n\n            if ($this->cache->isExpired()) {\n                $xml = simplexml_load_string($this->lang->getHelp());\n                foreach ($xml->chapter as $chapter) {\n                    $headline = trim($chapter->headline);\n                    $contents[$headline] = trim($chapter->text);\n                }\n                \n                $this->cache->write($contents, FPCM_LANGCACHE_TIMEOUT);\n            }            \n            \n            $contents = $this->events->runEvent('extendHelp', $contents);\n            $this->view->assign('chapters', $contents);\n\n            $pos = $this->chapterHeadline ? (int) array_search(strtoupper(base64_decode($this->chapterHeadline)), array_keys($contents)) : 0;\n            $this->view->addJsVars(['fpcmDefaultCapter' => $pos]);\n            $this->view->setViewJsFiles(['help.js']);\n            \n            $this->view->render();\n        }\n        \n    }\n?>", "<?php\n    /**\n     * Template preview controller\n     * @author Stefan Seehafer <sea75300@yahoo.de>\n     * @copyright (c) 2011-2017, Stefan Seehafer\n     * @license http://www.gnu.org/licenses/gpl.txt GPLv3\n     */\n    namespace fpcm\\controller\\action\\system;\n    \n    class templatepreview extends \\fpcm\\controller\\abstracts\\controller {\n        \n        use \\fpcm\\controller\\traits\\system\\templatepreview;\n        \n        /**\n         *\n         * @var \\fpcm\\model\\view\\pub\n         */\n        protected $view;\n\n        /**\n         *\n         * @var \\fpcm\\model\\pubtemplates\\template\n         */\n        protected $template;\n        \n        /**\n         *\n         * @var int \n         */\n        protected $tid;\n\n        /**\n         * Konstruktor\n         */\n        public function __construct() {\n            parent::__construct();\n            \n            $this->checkPermission = array('system' => 'templates');\n\n        }\n        \n        /**\n         * Request-Handler\n         * @return boolean\n         */\n        public function request() {\n\n            $this->tid = $this->getRequestVar('tid', array(9));\n\n            if (!$this->tid) {\n                return false;\n            }\n\n            return true;\n        }\n        \n        /**\n         * Controller-Processing\n         * @return boolean\n         */\n        public function process() {\n            if (!parent::process()) return false;\n\n            $this->template = $this->getTemplateById($this->tid);\n\n            switch ($this->tid) {\n                case 1 :\n                    $this->getArticlesPreview();\n                    break;\n                case 2 :\n                    $this->getArticlePreview();\n                    break;\n                case 3 :\n                    $this->getCommentPreview();\n                    break;\n                case 4 :\n                    $this->getCommentFormPreview();\n                    break;\n                case 5 :\n                    $this->getLatestNewsPreview();\n                    break;\n                default :\n                    $this->view = new \\fpcm\\model\\view\\error();\n                    $this->view->setMessage('Invalid template data');\n                    $this->view->render();\n                    return;\n            }\n\n            $this->view->assign('showToolbars', false);\n            $this->view->assign('hideDebug', true);\n            $this->view->assign('hideDebug', true);\n            $this->view->assign('systemMode', 1);\n            $this->view->setShowHeader(true);\n            $this->view->setShowFooter(true);\n            $this->view->setForceCss(true);\n            $this->view->prependjQuery();\n            $this->view->render();\n\n        }        \n        \n        private function getArticlesPreview() {\n\n            $this->view         = new \\fpcm\\model\\view\\pub('showall', 'public');\n\n            $parsed = [];\n            \n            $categoryTexts     = array('<span class=\"fpcm-pub-category-text\">Category 1</span>', '<span class=\"fpcm-pub-category-text\">Category 2</span>');\n            $shareButtonParser = new \\fpcm\\model\\pubtemplates\\sharebuttons($this->config->system_url, 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!');\n\n            $replacements = array(\n                '{{headline}}'                      => 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!',\n                '{{text}}'                          => 'Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.',\n                '{{author}}'                        => $this->session->getCurrentUser()->getUsername(),\n                '{{authorEmail}}'                   => '<a href=\"mailto:'.$this->session->getCurrentUser()->getEmail().'\">'.$this->session->getCurrentUser()->getDisplayname().'</a>',\n                '{{authorAvatar}}'                  => \\fpcm\\model\\users\\author::getAuthorImageDataOrPath($this->session->getCurrentUser(), 0),\n                '{{authorInfoText}}'                => $this->session->getCurrentUser()->getUsrinfo(),\n                '{{date}}'                          => date($this->config->system_dtmask, time()),\n                '{{changeDate}}'                    => date($this->config->system_dtmask, time()),\n                '{{changeUser}}'                    => $this->session->getCurrentUser()->getDisplayname(),\n                '{{statusPinned}}'                  => '',\n                '{{shareButtons}}'                  => $shareButtonParser->parse(),\n                '{{categoryIcons}}'                 => '',\n                '{{categoryTexts}}'                 => implode(PHP_EOL, $categoryTexts),\n                '{{commentCount}}'                  => 0,\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments',\n                '<readmore>:</readmore>'            => md5(time()),\n                '{{articleImage}}'                  => '',\n                '{{sources}}'                       => $this->config->system_url\n            );\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n            \n            $categoryTexts     = array('<span class=\"fpcm-pub-category-text\">Category 3</span>', '<span class=\"fpcm-pub-category-text\">Category 4</span>');\n            $shareButtonParser = new \\fpcm\\model\\pubtemplates\\sharebuttons($this->config->system_url, 'Ut wisi enim ad minim veniam?');\n            $replacements = array(\n                '{{headline}}'                      => 'Ut wisi enim ad minim veniam?',\n                '{{text}}'                          => 'Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. ',\n                '{{author}}'                        => $this->session->getCurrentUser()->getUsername(),\n                '{{authorEmail}}'                   => '<a href=\"mailto:'.$this->session->getCurrentUser()->getEmail().'\">'.$this->session->getCurrentUser()->getDisplayname().'</a>',\n                '{{authorAvatar}}'                  => '',\n                '{{authorInfoText}}'                => '',\n                '{{date}}'                          => date($this->config->system_dtmask, time() - 3600),\n                '{{changeDate}}'                    => date($this->config->system_dtmask, time() - 3600),\n                '{{changeUser}}'                    => $this->session->getCurrentUser()->getDisplayname(),\n                '{{statusPinned}}'                  => '',\n                '{{shareButtons}}'                  => $shareButtonParser->parse(),\n                '{{categoryIcons}}'                 => '',\n                '{{categoryTexts}}'                 => implode(PHP_EOL, $categoryTexts),\n                '{{commentCount}}'                  => 0,\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments',\n                '<readmore>:</readmore>'            => md5(time()),\n                '{{articleImage}}'                  => '',\n                '{{sources}}'                       => ''\n            );\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n\n            $this->view->assign('content', str_replace(\n                ['<script>', '</script>'],\n                ['&lt;script_diabled_in_preview&gt;', '&lt;/script_diabled_in_preview&gt;'],\n                implode(PHP_EOL, $parsed))\n            );\n            $this->view->assign('commentform', '');\n\n        }\n\n        private function getArticlePreview() {\n\n            $this->view         = new \\fpcm\\model\\view\\pub('showsingle', 'public');\n            \n            $categoryTexts     = array('<span class=\"fpcm-pub-category-text\">Category 1</span>', '<span class=\"fpcm-pub-category-text\">Category 2</span>');\n            $shareButtonParser = new \\fpcm\\model\\pubtemplates\\sharebuttons($this->config->system_url, 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!');\n\n            $replacements = array(\n                '{{headline}}'                      => 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!',\n                '{{text}}'                          => 'Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.',\n                '{{author}}'                        => $this->session->getCurrentUser()->getDisplayname(),\n                '{{authorEmail}}'                   => '<a href=\"mailto:'.$this->session->getCurrentUser()->getEmail().'\">'.$this->session->getCurrentUser()->getDisplayname().'</a>',\n                '{{authorAvatar}}'                  => \\fpcm\\model\\users\\author::getAuthorImageDataOrPath($this->session->getCurrentUser(), 0),\n                '{{authorInfoText}}'                => $this->session->getCurrentUser()->getUsrinfo(),\n                '{{date}}'                          => date($this->config->system_dtmask, time()),\n                '{{changeDate}}'                    => date($this->config->system_dtmask, time()),\n                '{{changeUser}}'                    => $this->session->getCurrentUser()->getDisplayname(),\n                '{{statusPinned}}'                  => '',\n                '{{shareButtons}}'                  => $shareButtonParser->parse(),\n                '{{categoryIcons}}'                 => '',\n                '{{categoryTexts}}'                 => implode(PHP_EOL, $categoryTexts),\n                '{{commentCount}}'                  => 0,\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments',\n                '<readmore>:</readmore>'            => md5(time()),\n                '{{articleImage}}'                  => '',\n                '{{sources}}'                       => $this->config->system_url\n            );\n\n            $this->template->setReplacementTags($replacements);\n\n            $this->view->assign('article', $this->template->parse());\n            $this->view->assign('comments', '');\n            $this->view->assign('commentform', '');\n        }\n        \n        private function getCommentPreview() {\n            $this->view = new \\fpcm\\model\\view\\pub('showsingle', 'public');\n\n            $this->view->assign('article', '');\n            \n            $replacements = array(\n                '{{author}}'                => $this->session->getCurrentUser()->getDisplayname(),\n                '{{email}}'                 => $this->session->getCurrentUser()->getEmail(),\n                '{{website}}'               => $this->config->system_url,\n                '{{text}}'                  => 'Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis. ',\n                '{{date}}'                  => date($this->config->system_dtmask, time()-600),\n                '{{number}}'                => 1,\n                '{{id}}'                    => 1,\n                '{{mentionid}}'             => 'id=\"c1\"',\n                '{{mention}}:{{/mention}}'  => 1\n            );\n\n            $this->template->setReplacementTags($replacements);\n            $this->view->assign('comments', $this->template->parse());\n            $this->view->assign('commentform', '');\n        }\n        \n        private function getCommentFormPreview() {\n            \n            $this->view = new \\fpcm\\model\\view\\pub('showsingle', 'public');\n            $this->view->assign('article', '');\n            $this->view->assign('comments', '');\n            \n            $captcha = $this->events->runEvent('publicReplaceSpamCaptcha');\n            \n            if (!is_a($captcha, '\\fpcm\\model\\abstracts\\spamCaptcha')) {\n                $captcha = new \\fpcm\\model\\captchas\\fpcmDefault();\n            }\n\n            $smileyList = new \\fpcm\\model\\files\\smileylist();\n            $smileys    = $smileyList->getDatabaseList();            \n\n            $smileyHtml = [];\n            $smileyHtml[] = \"<ul class=\\\"fpcm-pub-smileys\\\">\";\n            foreach ($smileys as $key => $smiley)  {\n                $smileyHtml[] = '<li><a class=\"fpcm-pub-commentsmiley\" smileycode=\"'.$smiley->getSmileyCode().'\" href=\"#\"><img src=\"'.$smiley->getSmileyUrl().'\" alt=\"'.$smiley->getSmileyCode().'()\" '.$smiley->getWhstring().'></a></li>';\n            }\n            $smileyHtml[] = '</ul>';\n            \n            $replacementTags = array(\n                '{{formHeadline}}'                   => $this->lang->translate('COMMENTS_PUBLIC_FORMHEADLINE'),\n                '{{submitUrl}}'                      => $this->config->system_url,\n                '{{nameDescription}}'                => $this->lang->translate('COMMMENT_AUTHOR'),\n                '{{nameField}}'                      => '<input type=\"text\" class=\"fpcm-pub-textinput\" name=\"newcomment[name]\" value=\"\">',\n                '{{emailDescription}}'               => $this->lang->translate('GLOBAL_EMAIL'),\n                '{{emailField}}'                     => '<input type=\"text\" class=\"fpcm-pub-textinput\" name=\"newcomment[email]\" value=\"\">',\n                '{{websiteDescription}}'             => $this->lang->translate('COMMMENT_WEBSITE'),\n                '{{websiteField}}'                   => '<input type=\"text\" class=\"fpcm-pub-textinput\" name=\"newcomment[website]\" value=\"\">',\n                '{{textfield}}'                      => '<textarea class=\"fpcm-pub-textarea\" id=\"newcommenttext\" name=\"newcomment[text]\"></textarea>',\n                '{{smileysDescription}}'             => $this->lang->translate('HL_OPTIONS_SMILEYS'),\n                '{{smileys}}'                        => implode(PHP_EOL, $smileyHtml),\n                '{{tags}}'                           => htmlentities(\\fpcm\\model\\comments\\comment::COMMENT_TEXT_HTMLTAGS_FORM),\n                '{{spampluginQuestion}}'             => $captcha->createPluginText(),\n                '{{spampluginField}}'                => $captcha->createPluginInput(),\n                '{{privateCheckbox}}'                => '<input type=\"checkbox\" class=\"fpcm-pub-checkboxinput\" name=\"newcomment[private]\" value=\"1\">',\n                '{{submitButton}}'                   => '<button type=\"submit\" name=\"btnSendComment\">'.$this->lang->translate('GLOBAL_SUBMIT').'</button>',\n                '{{resetButton}}'                    => '<button type=\"reset\">'.$this->lang->translate('GLOBAL_RESET').'</button>'\n            );            \n\n            $this->template->setReplacementTags($replacementTags);            \n            $this->view->assign('commentform', $this->template->parse());\n        }\n        \n        private function getLatestNewsPreview() {\n\n            $this->view = new \\fpcm\\model\\view\\pub('showlatest', 'public');\n            \n            $replacements = array(\n                '{{headline}}'                      => 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr!',\n                '{{author}}'                        => $this->session->getCurrentUser()->getDisplayname(),\n                '{{date}}'                          => date($this->config->system_dtmask, time()),\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments'\n            );\n\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n            \n            $replacements = array(\n                '{{headline}}'                      => 'Ut wisi enim ad minim veniam?',\n                '{{author}}'                        => $this->session->getCurrentUser()->getDisplayname(),\n                '{{date}}'                          => date($this->config->system_dtmask, time() - 3600),\n                '{{permaLink}}:{{/permaLink}}'      => $this->config->system_url,\n                '{{commentLink}}:{{/commentLink}}'  => $this->config->system_url.'#comments'\n            );\n\n            $this->template->setReplacementTags($replacements);\n            $parsed[] = $this->template->parse();\n\n            $this->view->assign('content', implode(PHP_EOL, $parsed));\n        }\n    }\n?>"], "filenames": ["inc/controller/action/system/help.php", "inc/controller/action/system/templatepreview.php"], "buggy_code_start_loc": [48, 64], "buggy_code_end_loc": [54, 160], "fixing_code_start_loc": [48, 65], "fixing_code_end_loc": [60, 165], "type": "CWE-79", "message": "A vulnerability was found in sea75300 FanPress CM up to 3.6.3. It has been classified as problematic. This affects the function getArticlesPreview of the file inc/controller/action/system/templatepreview.php of the component Template Preview. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.6.4 is able to address this issue. The name of the patch is c380d343c2107fcee55ab00eb8d189ce5e03369b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-230235.", "other": {"cve": {"id": "CVE-2018-25086", "sourceIdentifier": "cna@vuldb.com", "published": "2023-06-01T07:15:08.860", "lastModified": "2023-06-08T20:01:17.053", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability was found in sea75300 FanPress CM up to 3.6.3. It has been classified as problematic. This affects the function getArticlesPreview of the file inc/controller/action/system/templatepreview.php of the component Template Preview. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 3.6.4 is able to address this issue. The name of the patch is c380d343c2107fcee55ab00eb8d189ce5e03369b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-230235."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fanpress_cm_project:fanpress_cm:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.6.0", "versionEndIncluding": "3.6.3", "matchCriteriaId": "4B8BBB43-6747-480E-91C2-B47173EE96F4"}]}]}], "references": [{"url": "https://github.com/sea75300/fanpresscm3/commit/c380d343c2107fcee55ab00eb8d189ce5e03369b", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://github.com/sea75300/fanpresscm3/releases/tag/v3.6.4", "source": "cna@vuldb.com", "tags": ["Release Notes"]}, {"url": "https://vuldb.com/?ctiid.230235", "source": "cna@vuldb.com", "tags": ["Permissions Required"]}, {"url": "https://vuldb.com/?id.230235", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/sea75300/fanpresscm3/commit/c380d343c2107fcee55ab00eb8d189ce5e03369b"}}