{"buggy_code": ["<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\n$common_output[] = '\n<div class=\"table-responsive\">\n    <table id=\"eventlog\" class=\"table table-hover table-condensed table-striped\">\n        <thead>\n            <tr>\n                <th data-column-id=\"datetime\" data-order=\"desc\">Timestamp</th>\n                <th data-column-id=\"type\">Type</th>\n                <th data-column-id=\"device_id\">Hostname</th>\n                <th data-column-id=\"message\">Message</th>\n                <th data-column-id=\"username\">User</th>\n            </tr>\n        </thead>\n    </table>\n</div>\n<script>\n\nvar eventlog_grid = $(\"#eventlog\").bootgrid({\n    ajax: true,\n    rowCount: [50, 100, 250, -1],\n    post: function ()\n    {\n        return {\n            device: ' . (empty($vars['device']) ? 'null' : (int) $vars['device']) . ',\n            eventtype: \"' . addcslashes($vars['eventtype'] ?? '', '\"') . '\",\n        };\n    },\n    url: \"' . url('/ajax/table/eventlog') . '\"\n});\n\n</script>\n';\n", "<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\n$common_output[] = '\n<div class=\"table-responsive\">\n    <table id=\"syslog\" class=\"table table-hover table-condensed table-striped\">\n        <thead>\n            <tr>\n                <th data-column-id=\"label\"></th>\n                <th data-column-id=\"timestamp\" data-order=\"desc\">Timestamp</th>\n                <th data-column-id=\"level\">Level</th>\n                <th data-column-id=\"device_id\">Hostname</th>\n                <th data-column-id=\"program\">Program</th>\n                <th data-column-id=\"msg\">Message</th>\n                <th data-column-id=\"priority\">Priority</th>\n            </tr>\n        </thead>\n    </table>\n</div>\n<script>\n\nvar syslog_grid = $(\"#syslog\").bootgrid({\n    ajax: true,\n    rowCount: [50, 100, 250, -1],\n    post: function ()\n    {\n        return {\n            device: \"' . addcslashes($vars['device'] ?? '', '\"') . '\",\n            program: \"' . addcslashes($vars['program'] ?? '', '\"') . '\",\n            priority: \"' . addcslashes($vars['priority'] ?? '', '\"') . '\",\n            to: \"' . addcslashes($vars['to'] ?? '', '\"') . '\",\n            from: \"' . addcslashes($vars['from'] ?? '', '\"') . '\",\n        };\n    },\n    url: \"' . url('/ajax/table/syslog') . '\"\n});\n\n</script>\n';\n", "<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\nuse App\\Models\\Device;\n\n$no_refresh = true;\n$param = [];\nif ($device_id = (int) Request::get('device')) {\n    $device = Device::find($device_id);\n}\n\n$pagetitle[] = 'Eventlog';\n?>\n\n<div class=\"panel panel-default panel-condensed\">\n    <div class=\"panel-heading\">\n        <strong>Eventlog</strong>\n    </div>\n\n    <?php\n    require_once 'includes/html/common/eventlog.inc.php';\n    echo implode('', $common_output);\n    ?>\n</div>\n\n<script>\n    $('.actionBar').append(\n        '<div class=\"pull-left\">' +\n        '<form method=\"post\" action=\"\" class=\"form-inline\" role=\"form\" id=\"result_form\">' +\n        '<?php echo csrf_field() ?>' +\n        <?php\n        if (! isset($vars['fromdevice'])) {\n            ?>\n        '<div class=\"form-group\">' +\n        '<label><strong>Device&nbsp;&nbsp;</strong></label>' +\n        '<select name=\"device\" id=\"device\" class=\"form-control\">' +\n        '<option value=\"\">All Devices</option>' +\n            <?php\n            if ($device instanceof Device) {\n                echo \"'<option value=$device->device_id>\" . $device->displayName() . \"</option>' +\";\n            } ?>\n        '</select>' +\n        '</div>&nbsp;&nbsp;&nbsp;&nbsp;' +\n            <?php\n        } else {\n            echo \"'&nbsp;&nbsp;<input type=\\\"hidden\\\" name=\\\"device\\\" id=\\\"device\\\" value=\\\"\" . $vars['device'] . \"\\\">' + \";\n        }\n        ?>\n        '<div class=\"form-group\"><label><strong>Type&nbsp;&nbsp;</strong></label>' +\n        '<select name=\"eventtype\" id=\"eventtype\" class=\"form-control input-sm\">' +\n        '<option value=\"\">All types</option>' +\n        <?php\n        if ($type = Request::get('eventtype')) {\n            $js_type = addcslashes(htmlentities($type), \"'\");\n            echo \"'<option value=\\\"$js_type\\\">$js_type</option>' +\";\n        }\n        ?>\n        '</select>' +\n        '</div>&nbsp;&nbsp;' +\n        '<button type=\"submit\" class=\"btn btn-default\">Filter</button>' +\n        '</form>' +\n        '</div>'\n    );\n\n    <?php if (! isset($vars['fromdevice'])) { ?>\n    $(\"#device\").select2({\n        theme: 'bootstrap',\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Devices\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/device'); ?>',\n            delay: 200\n        }\n    })<?php echo $device_id ? \".val($device_id).trigger('change');\" : ''; ?>;\n    <?php } ?>\n\n    $(\"#eventtype\").select2({\n        theme: 'bootstrap',\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Types\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/eventlog'); ?>',\n            delay: 200,\n            data: function(params) {\n                return {\n                    field: \"type\",\n                    device: $('#device').val(),\n                    term: params.term,\n                    page: params.page || 1\n                }\n            }\n        }\n    })<?php echo Request::get('eventtype') ? \".val('\" . addcslashes(Request::get('eventtype'), \"'\") . \"').trigger('change');\" : ''; ?>;\n\n</script>\n", "<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\nuse Carbon\\Carbon;\nuse LibreNMS\\Config;\n\n$no_refresh = true;\n$param = [];\n$device_id = (int) $vars['device'];\n\nif (isset($vars['action']) && $vars['action'] == 'expunge' && \\Auth::user()->hasGlobalAdmin()) {\n    dbQuery('TRUNCATE TABLE `syslog`');\n    print_message('syslog truncated');\n}\n\n$pagetitle[] = 'Syslog';\n?>\n<div class=\"panel panel-default panel-condensed\">\n    <div class=\"panel-heading\">\n        <strong>Syslog</strong>\n    </div>\n\n    <?php\n    require_once 'includes/html/common/syslog.inc.php';\n    echo implode('', $common_output);\n    ?>\n</div>\n<script>\n    $('.actionBar').append(\n        '<div class=\"pull-left\">' +\n        '<form method=\"post\" action=\"\" class=\"form-inline\" role=\"form\" id=\"result_form\">' +\n        '<?php echo csrf_field() ?>'+\n        '<div class=\"form-group\">' +\n        <?php\n        if (! isset($vars['fromdevice'])) {\n            ?>\n        '<select name=\"device\" id=\"device\" class=\"form-control\">' +\n        '<option value=\"\">All Devices&nbsp;&nbsp;</option>' +\n            <?php\n            if ($device_id) {\n                echo \"'<option value=$device_id>\" . format_hostname(device_by_id_cache($device_id)) . \"</option>' +\";\n            } ?>\n        '</select>' +\n            <?php\n        } else {\n            echo \"'&nbsp;&nbsp;<input type=\\\"hidden\\\" name=\\\"device\\\" id=\\\"device\\\" value=\\\"\" . $device_id . \"\\\">' + \";\n        }\n        ?>\n        '</div>' +\n        '&nbsp;&nbsp;<div class=\"form-group\">' +\n        '<select name=\"program\" id=\"program\" class=\"form-control\">' +\n        '<option value=\"\">All Programs&nbsp;&nbsp;</option>' +\n        <?php\n        if (! empty($vars['program'])) {\n            $js_program = addcslashes(htmlentities($vars['program']), \"'\");\n            echo \"'<option value=\\\"$js_program\\\">$js_program</option>' +\";\n        }\n        ?>\n        '</select>' +\n        '</div>' +\n        '&nbsp;&nbsp;<div class=\"form-group\">' +\n        '<select name=\"priority\" id=\"priority\" class=\"form-control\">' +\n        '<option value=\"\">All Priorities</option>' +\n        <?php\n        if (! empty($vars['priority'])) {\n            $js_priority = addcslashes(htmlentities($vars['priority']), \"'\");\n            echo \"'<option value=\\\"$js_priority\\\">$js_priority</option>' +\";\n        }\n        ?>\n        '</select>' +\n        '</div>' +\n        '&nbsp;&nbsp;<div class=\"form-group\">' +\n        '<input name=\"from\" type=\"text\" class=\"form-control\" id=\"dtpickerfrom\" maxlength=\"16\" value=\"<?php echo htmlspecialchars($vars['from'] ?? ''); ?>\" placeholder=\"From\" data-date-format=\"YYYY-MM-DD HH:mm\">' +\n        '</div>' +\n        '<div class=\"form-group\">' +\n        '&nbsp;&nbsp;<input name=\"to\" type=\"text\" class=\"form-control\" id=\"dtpickerto\" maxlength=\"16\" value=\"<?php echo htmlspecialchars($vars['to'] ?? ''); ?>\" placeholder=\"To\" data-date-format=\"YYYY-MM-DD HH:mm\">' +\n        '</div>' +\n        '&nbsp;&nbsp;<button type=\"submit\" class=\"btn btn-default\">Filter</button>' +\n        '</form>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>'\n    );\n\n    $(function () {\n        $(\"#dtpickerfrom\").datetimepicker({\n            icons: {\n                time: 'fa fa-clock-o',\n                date: 'fa fa-calendar',\n                up: 'fa fa-chevron-up',\n                down: 'fa fa-chevron-down',\n                previous: 'fa fa-chevron-left',\n                next: 'fa fa-chevron-right',\n                today: 'fa fa-calendar-check-o',\n                clear: 'fa fa-trash-o',\n                close: 'fa fa-close'\n            },\n            defaultDate: '<?php echo Carbon::now()->subDay()->format(Config::get('dateformat.byminute', 'Y-m-d H:i')); ?>'\n        });\n        $(\"#dtpickerfrom\").on(\"dp.change\", function (e) {\n            $(\"#dtpickerto\").data(\"DateTimePicker\").minDate(e.date);\n        });\n        $(\"#dtpickerto\").datetimepicker({\n            icons: {\n                time: 'fa fa-clock-o',\n                date: 'fa fa-calendar',\n                up: 'fa fa-chevron-up',\n                down: 'fa fa-chevron-down',\n                previous: 'fa fa-chevron-left',\n                next: 'fa fa-chevron-right',\n                today: 'fa fa-calendar-check-o',\n                clear: 'fa fa-trash-o',\n                close: 'fa fa-close'\n            }\n        });\n        $(\"#dtpickerto\").on(\"dp.change\", function (e) {\n            $(\"#dtpickerfrom\").data(\"DateTimePicker\").maxDate(e.date);\n        });\n        if ($(\"#dtpickerfrom\").val() != \"\") {\n            $(\"#dtpickerto\").data(\"DateTimePicker\").minDate($(\"#dtpickerfrom\").val());\n        }\n        if ($(\"#dtpickerto\").val() != \"\") {\n            $(\"#dtpickerfrom\").data(\"DateTimePicker\").maxDate($(\"#dtpickerto\").val());\n        } else {\n            $(\"#dtpickerto\").data(\"DateTimePicker\").maxDate('<?php echo Carbon::now()->format(Config::get('dateformat.byminute', 'Y-m-d H:i')); ?>');\n        }\n    });\n\n    <?php if (! isset($vars['fromdevice'])) { ?>\n    $(\"#device\").select2({\n        theme: \"bootstrap\",\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Devices\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/device'); ?>',\n            delay: 200\n        }\n    })<?php echo $device_id ? \".val($device_id).trigger('change');\" : ''; ?>;\n    <?php } ?>\n\n    $(\"#program\").select2({\n        theme: \"bootstrap\",\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Programs\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/syslog'); ?>',\n            delay: 200,\n            data: function(params) {\n                return {\n                    field: \"program\",\n                    device: $('#device').val(),\n                    term: params.term,\n                    page: params.page || 1\n                }\n            }\n        }\n    })<?php echo isset($vars['program']) ? \".val('\" . addcslashes($vars['program'], \"'\") . \"').trigger('change');\" : ''; ?>;\n\n    $(\"#priority\").select2({\n        theme: \"bootstrap\",\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Priorities\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/syslog'); ?>',\n            delay: 200,\n            data: function(params) {\n                return {\n                    field: \"priority\",\n                    device: $('#device').val(),\n                    term: params.term,\n                    page: params.page || 1\n                }\n            }\n        }\n    })<?php echo isset($vars['priority']) ? \".val('\" . addcslashes($vars['priority'], \"'\") . \"').trigger('change');\" : ''; ?>;\n</script>\n\n"], "fixing_code": ["<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\n$vars['eventtype'] = 'test\\\"-alert(document.cookie)//';\n\n$common_output[] = '\n<div class=\"table-responsive\">\n    <table id=\"eventlog\" class=\"table table-hover table-condensed table-striped\">\n        <thead>\n            <tr>\n                <th data-column-id=\"datetime\" data-order=\"desc\">Timestamp</th>\n                <th data-column-id=\"type\">Type</th>\n                <th data-column-id=\"device_id\">Hostname</th>\n                <th data-column-id=\"message\">Message</th>\n                <th data-column-id=\"username\">User</th>\n            </tr>\n        </thead>\n    </table>\n</div>\n<script>\n\nvar eventlog_grid = $(\"#eventlog\").bootgrid({\n    ajax: true,\n    rowCount: [50, 100, 250, -1],\n    post: function ()\n    {\n        return {\n            device: ' . (empty($vars['device']) ? 'null' : (int) $vars['device']) . ',\n            eventtype: \"' . htmlspecialchars($vars['eventtype'] ?? '') . '\",\n        };\n    },\n    url: \"' . url('/ajax/table/eventlog') . '\"\n});\n\n</script>\n';\n", "<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\n$common_output[] = '\n<div class=\"table-responsive\">\n    <table id=\"syslog\" class=\"table table-hover table-condensed table-striped\">\n        <thead>\n            <tr>\n                <th data-column-id=\"label\"></th>\n                <th data-column-id=\"timestamp\" data-order=\"desc\">Timestamp</th>\n                <th data-column-id=\"level\">Level</th>\n                <th data-column-id=\"device_id\">Hostname</th>\n                <th data-column-id=\"program\">Program</th>\n                <th data-column-id=\"msg\">Message</th>\n                <th data-column-id=\"priority\">Priority</th>\n            </tr>\n        </thead>\n    </table>\n</div>\n<script>\n\nvar syslog_grid = $(\"#syslog\").bootgrid({\n    ajax: true,\n    rowCount: [50, 100, 250, -1],\n    post: function ()\n    {\n        return {\n            device: \"' . htmlspecialchars($vars['device'] ?? '') . '\",\n            program: \"' . htmlspecialchars($vars['program'] ?? '') . '\",\n            priority: \"' . htmlspecialchars($vars['priority'] ?? '') . '\",\n            to: \"' . htmlspecialchars($vars['to'] ?? '') . '\",\n            from: \"' . htmlspecialchars($vars['from'] ?? '') . '\",\n        };\n    },\n    url: \"' . url('/ajax/table/syslog') . '\"\n});\n\n</script>\n';\n", "<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\nuse App\\Models\\Device;\n\n$no_refresh = true;\n$param = [];\nif ($device_id = (int) Request::get('device')) {\n    $device = Device::find($device_id);\n}\n\n$pagetitle[] = 'Eventlog';\n?>\n\n<div class=\"panel panel-default panel-condensed\">\n    <div class=\"panel-heading\">\n        <strong>Eventlog</strong>\n    </div>\n\n    <?php\n    require_once 'includes/html/common/eventlog.inc.php';\n    echo implode('', $common_output);\n    ?>\n</div>\n\n<script>\n    $('.actionBar').append(\n        '<div class=\"pull-left\">' +\n        '<form method=\"post\" action=\"\" class=\"form-inline\" role=\"form\" id=\"result_form\">' +\n        '<?php echo csrf_field() ?>' +\n        <?php\n        if (! isset($vars['fromdevice'])) {\n            ?>\n        '<div class=\"form-group\">' +\n        '<label><strong>Device&nbsp;&nbsp;</strong></label>' +\n        '<select name=\"device\" id=\"device\" class=\"form-control\">' +\n        '<option value=\"\">All Devices</option>' +\n            <?php\n            if ($device instanceof Device) {\n                echo \"'<option value=$device->device_id>\" . $device->displayName() . \"</option>' +\";\n            } ?>\n        '</select>' +\n        '</div>&nbsp;&nbsp;&nbsp;&nbsp;' +\n            <?php\n        } else {\n            echo \"'&nbsp;&nbsp;<input type=\\\"hidden\\\" name=\\\"device\\\" id=\\\"device\\\" value=\\\"\" . $vars['device'] . \"\\\">' + \";\n        }\n        ?>\n        '<div class=\"form-group\"><label><strong>Type&nbsp;&nbsp;</strong></label>' +\n        '<select name=\"eventtype\" id=\"eventtype\" class=\"form-control input-sm\">' +\n        '<option value=\"\">All types</option>' +\n        <?php\n        if ($type = Request::get('eventtype')) {\n            $js_type = addcslashes(htmlentities($type), \"'\");\n            echo \"'<option value=\\\"$js_type\\\">$js_type</option>' +\";\n        }\n        ?>\n        '</select>' +\n        '</div>&nbsp;&nbsp;' +\n        '<button type=\"submit\" class=\"btn btn-default\">Filter</button>' +\n        '</form>' +\n        '</div>'\n    );\n\n    <?php if (! isset($vars['fromdevice'])) { ?>\n    $(\"#device\").select2({\n        theme: 'bootstrap',\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Devices\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/device'); ?>',\n            delay: 200\n        }\n    })<?php echo $device_id ? \".val($device_id).trigger('change');\" : ''; ?>;\n    <?php } ?>\n\n    $(\"#eventtype\").select2({\n        theme: 'bootstrap',\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Types\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/eventlog'); ?>',\n            delay: 200,\n            data: function(params) {\n                return {\n                    field: \"type\",\n                    device: $('#device').val(),\n                    term: params.term,\n                    page: params.page || 1\n                }\n            }\n        }\n    })<?php echo Request::get('eventtype') ? \".val('\" . htmlspecialchars(Request::get('eventtype')) . \"').trigger('change');\" : ''; ?>;\n\n</script>\n", "<?php\n/*\n * This program is free software: you can redistribute it and/or modify it\n * under the terms of the GNU General Public License as published by the\n * Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.  Please see LICENSE.txt at the top level of\n * the source code distribution for details.\n *\n * @package    LibreNMS\n * @subpackage webui\n * @link       https://www.librenms.org\n * @copyright  2017 LibreNMS\n * @author     LibreNMS Contributors\n*/\n\nuse Carbon\\Carbon;\nuse LibreNMS\\Config;\n\n$no_refresh = true;\n$param = [];\n$device_id = (int) $vars['device'];\n\nif (isset($vars['action']) && $vars['action'] == 'expunge' && \\Auth::user()->hasGlobalAdmin()) {\n    dbQuery('TRUNCATE TABLE `syslog`');\n    print_message('syslog truncated');\n}\n\n$pagetitle[] = 'Syslog';\n?>\n<div class=\"panel panel-default panel-condensed\">\n    <div class=\"panel-heading\">\n        <strong>Syslog</strong>\n    </div>\n\n    <?php\n    require_once 'includes/html/common/syslog.inc.php';\n    echo implode('', $common_output);\n    ?>\n</div>\n<script>\n    $('.actionBar').append(\n        '<div class=\"pull-left\">' +\n        '<form method=\"post\" action=\"\" class=\"form-inline\" role=\"form\" id=\"result_form\">' +\n        '<?php echo csrf_field() ?>'+\n        '<div class=\"form-group\">' +\n        <?php\n        if (! isset($vars['fromdevice'])) {\n            ?>\n        '<select name=\"device\" id=\"device\" class=\"form-control\">' +\n        '<option value=\"\">All Devices&nbsp;&nbsp;</option>' +\n            <?php\n            if ($device_id) {\n                echo \"'<option value=$device_id>\" . format_hostname(device_by_id_cache($device_id)) . \"</option>' +\";\n            } ?>\n        '</select>' +\n            <?php\n        } else {\n            echo \"'&nbsp;&nbsp;<input type=\\\"hidden\\\" name=\\\"device\\\" id=\\\"device\\\" value=\\\"\" . $device_id . \"\\\">' + \";\n        }\n        ?>\n        '</div>' +\n        '&nbsp;&nbsp;<div class=\"form-group\">' +\n        '<select name=\"program\" id=\"program\" class=\"form-control\">' +\n        '<option value=\"\">All Programs&nbsp;&nbsp;</option>' +\n        <?php\n        if (! empty($vars['program'])) {\n            $js_program = addcslashes(htmlentities($vars['program']), \"'\");\n            echo \"'<option value=\\\"$js_program\\\">$js_program</option>' +\";\n        }\n        ?>\n        '</select>' +\n        '</div>' +\n        '&nbsp;&nbsp;<div class=\"form-group\">' +\n        '<select name=\"priority\" id=\"priority\" class=\"form-control\">' +\n        '<option value=\"\">All Priorities</option>' +\n        <?php\n        if (! empty($vars['priority'])) {\n            $js_priority = addcslashes(htmlentities($vars['priority']), \"'\");\n            echo \"'<option value=\\\"$js_priority\\\">$js_priority</option>' +\";\n        }\n        ?>\n        '</select>' +\n        '</div>' +\n        '&nbsp;&nbsp;<div class=\"form-group\">' +\n        '<input name=\"from\" type=\"text\" class=\"form-control\" id=\"dtpickerfrom\" maxlength=\"16\" value=\"<?php echo htmlspecialchars($vars['from'] ?? ''); ?>\" placeholder=\"From\" data-date-format=\"YYYY-MM-DD HH:mm\">' +\n        '</div>' +\n        '<div class=\"form-group\">' +\n        '&nbsp;&nbsp;<input name=\"to\" type=\"text\" class=\"form-control\" id=\"dtpickerto\" maxlength=\"16\" value=\"<?php echo htmlspecialchars($vars['to'] ?? ''); ?>\" placeholder=\"To\" data-date-format=\"YYYY-MM-DD HH:mm\">' +\n        '</div>' +\n        '&nbsp;&nbsp;<button type=\"submit\" class=\"btn btn-default\">Filter</button>' +\n        '</form>' +\n        '</div>' +\n        '</div>' +\n        '</div>' +\n        '</div>'\n    );\n\n    $(function () {\n        $(\"#dtpickerfrom\").datetimepicker({\n            icons: {\n                time: 'fa fa-clock-o',\n                date: 'fa fa-calendar',\n                up: 'fa fa-chevron-up',\n                down: 'fa fa-chevron-down',\n                previous: 'fa fa-chevron-left',\n                next: 'fa fa-chevron-right',\n                today: 'fa fa-calendar-check-o',\n                clear: 'fa fa-trash-o',\n                close: 'fa fa-close'\n            },\n            defaultDate: '<?php echo Carbon::now()->subDay()->format(Config::get('dateformat.byminute', 'Y-m-d H:i')); ?>'\n        });\n        $(\"#dtpickerfrom\").on(\"dp.change\", function (e) {\n            $(\"#dtpickerto\").data(\"DateTimePicker\").minDate(e.date);\n        });\n        $(\"#dtpickerto\").datetimepicker({\n            icons: {\n                time: 'fa fa-clock-o',\n                date: 'fa fa-calendar',\n                up: 'fa fa-chevron-up',\n                down: 'fa fa-chevron-down',\n                previous: 'fa fa-chevron-left',\n                next: 'fa fa-chevron-right',\n                today: 'fa fa-calendar-check-o',\n                clear: 'fa fa-trash-o',\n                close: 'fa fa-close'\n            }\n        });\n        $(\"#dtpickerto\").on(\"dp.change\", function (e) {\n            $(\"#dtpickerfrom\").data(\"DateTimePicker\").maxDate(e.date);\n        });\n        if ($(\"#dtpickerfrom\").val() != \"\") {\n            $(\"#dtpickerto\").data(\"DateTimePicker\").minDate($(\"#dtpickerfrom\").val());\n        }\n        if ($(\"#dtpickerto\").val() != \"\") {\n            $(\"#dtpickerfrom\").data(\"DateTimePicker\").maxDate($(\"#dtpickerto\").val());\n        } else {\n            $(\"#dtpickerto\").data(\"DateTimePicker\").maxDate('<?php echo Carbon::now()->format(Config::get('dateformat.byminute', 'Y-m-d H:i')); ?>');\n        }\n    });\n\n    <?php if (! isset($vars['fromdevice'])) { ?>\n    $(\"#device\").select2({\n        theme: \"bootstrap\",\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Devices\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/device'); ?>',\n            delay: 200\n        }\n    })<?php echo $device_id ? \".val($device_id).trigger('change');\" : ''; ?>;\n    <?php } ?>\n\n    $(\"#program\").select2({\n        theme: \"bootstrap\",\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Programs\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/syslog'); ?>',\n            delay: 200,\n            data: function(params) {\n                return {\n                    field: \"program\",\n                    device: $('#device').val(),\n                    term: params.term,\n                    page: params.page || 1\n                }\n            }\n        }\n    })<?php echo isset($vars['program']) ? \".val('\" . htmlspecialchars($vars['program']) . \"').trigger('change');\" : ''; ?>;\n\n    $(\"#priority\").select2({\n        theme: \"bootstrap\",\n        dropdownAutoWidth : true,\n        width: \"auto\",\n        allowClear: true,\n        placeholder: \"All Priorities\",\n        ajax: {\n            url: '<?php echo url('/ajax/select/syslog'); ?>',\n            delay: 200,\n            data: function(params) {\n                return {\n                    field: \"priority\",\n                    device: $('#device').val(),\n                    term: params.term,\n                    page: params.page || 1\n                }\n            }\n        }\n    })<?php echo isset($vars['priority']) ? \".val('\" . htmlspecialchars($vars['priority']) . \"').trigger('change');\" : ''; ?>;\n</script>\n\n"], "filenames": ["includes/html/common/eventlog.inc.php", "includes/html/common/syslog.inc.php", "includes/html/pages/eventlog.inc.php", "includes/html/pages/syslog.inc.php"], "buggy_code_start_loc": [14, 40, 109, 174], "buggy_code_end_loc": [40, 45, 110, 195], "fixing_code_start_loc": [15, 40, 109, 174], "fixing_code_end_loc": [42, 45, 110, 195], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - DOM in GitHub repository librenms/librenms prior to 23.9.0.", "other": {"cve": {"id": "CVE-2023-4981", "sourceIdentifier": "security@huntr.dev", "published": "2023-09-15T01:15:08.810", "lastModified": "2023-09-20T13:13:02.687", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - DOM in GitHub repository librenms/librenms prior to 23.9.0."}, {"lang": "es", "value": "Cross-site Scripting (XSS): DOM en librenms/librenms del repositorio de GitHub anteriores a 23.9.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:librenms:librenms:*:*:*:*:*:*:*:*", "versionEndExcluding": "23.9.0", "matchCriteriaId": "D11631AD-0BBB-4877-B426-D0D036598849"}]}]}], "references": [{"url": "https://github.com/librenms/librenms/commit/03c4da62c8acde0a82acbb4a445ae866ebfdd3f7", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/1f014494-49a9-4bf0-8d43-a675498b9609", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/librenms/librenms/commit/03c4da62c8acde0a82acbb4a445ae866ebfdd3f7"}}