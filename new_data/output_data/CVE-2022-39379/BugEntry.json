{"buggy_code": ["require 'fluent/config/types'\n\nmodule Fluent\n  class OjOptions\n    OPTIONS = {\n      'bigdecimal_load': :symbol,\n      'max_nesting': :integer,\n      'mode': :symbol,\n      'use_to_json': :bool\n    }\n\n    ALLOWED_VALUES = {\n      'bigdecimal_load': %i[bigdecimal float auto],\n      'mode': %i[strict null compat json rails object custom]\n    }\n\n    DEFAULTS = {\n      'bigdecimal_load': :float,\n      'mode': :compat,\n      'use_to_json': true\n    }\n\n    @@available = false\n\n    def self.available?\n      @@available\n    end\n\n    def self.load_env\n      options = self.get_options\n      begin\n        require 'oj'\n        Oj.default_options = options\n        @@available = true\n      rescue LoadError\n        @@available = false\n      end\n      options\n    end\n\n    private\n\n    def self.get_options\n      options = {}\n      DEFAULTS.each { |key, value| options[key] = value }\n\n      OPTIONS.each do |key, type|\n        env_value = ENV[\"FLUENT_OJ_OPTION_#{key.upcase}\"]\n        next if env_value.nil?\n\n        cast_value = Fluent::Config.reformatted_value(OPTIONS[key], env_value, { strict: true })\n        next if cast_value.nil?\n\n        next if ALLOWED_VALUES[key] && !ALLOWED_VALUES[key].include?(cast_value)\n\n        options[key.to_sym] = cast_value\n      end\n\n      options\n    end\n  end\nend\n"], "fixing_code": ["require 'fluent/config/types'\n\nmodule Fluent\n  class OjOptions\n    OPTIONS = {\n      'bigdecimal_load': :symbol,\n      'max_nesting': :integer,\n      'mode': :symbol,\n      'use_to_json': :bool\n    }\n\n    ALLOWED_VALUES = {\n      'bigdecimal_load': %i[bigdecimal float auto],\n      'mode': %i[strict null compat json rails custom]\n    }\n\n    DEFAULTS = {\n      'bigdecimal_load': :float,\n      'mode': :compat,\n      'use_to_json': true\n    }\n\n    @@available = false\n\n    def self.available?\n      @@available\n    end\n\n    def self.load_env\n      options = self.get_options\n      begin\n        require 'oj'\n        Oj.default_options = options\n        @@available = true\n      rescue LoadError\n        @@available = false\n      end\n      options\n    end\n\n    private\n\n    def self.get_options\n      options = {}\n      DEFAULTS.each { |key, value| options[key] = value }\n\n      OPTIONS.each do |key, type|\n        env_value = ENV[\"FLUENT_OJ_OPTION_#{key.upcase}\"]\n        next if env_value.nil?\n\n        cast_value = Fluent::Config.reformatted_value(OPTIONS[key], env_value, { strict: true })\n        next if cast_value.nil?\n\n        next if ALLOWED_VALUES[key] && !ALLOWED_VALUES[key].include?(cast_value)\n\n        options[key.to_sym] = cast_value\n      end\n\n      options\n    end\n  end\nend\n"], "filenames": ["lib/fluent/oj_options.rb"], "buggy_code_start_loc": [14], "buggy_code_end_loc": [15], "fixing_code_start_loc": [14], "fixing_code_end_loc": [15], "type": "CWE-502", "message": "Fluentd collects events from various data sources and writes them to files, RDBMS, NoSQL, IaaS, SaaS, Hadoop and so on. A remote code execution (RCE) vulnerability in non-default configurations of Fluentd allows unauthenticated attackers to execute arbitrary code via specially crafted JSON payloads. Fluentd setups are only affected if the environment variable `FLUENT_OJ_OPTION_MODE` is explicitly set to `object`. Please note: The option FLUENT_OJ_OPTION_MODE was introduced in Fluentd version 1.13.2. Earlier versions of Fluentd are not affected by this vulnerability. This issue was patched in version 1.15.3. As a workaround do not use `FLUENT_OJ_OPTION_MODE=object`.", "other": {"cve": {"id": "CVE-2022-39379", "sourceIdentifier": "security-advisories@github.com", "published": "2022-11-02T13:15:13.583", "lastModified": "2023-03-01T16:36:34.097", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Fluentd collects events from various data sources and writes them to files, RDBMS, NoSQL, IaaS, SaaS, Hadoop and so on. A remote code execution (RCE) vulnerability in non-default configurations of Fluentd allows unauthenticated attackers to execute arbitrary code via specially crafted JSON payloads. Fluentd setups are only affected if the environment variable `FLUENT_OJ_OPTION_MODE` is explicitly set to `object`. Please note: The option FLUENT_OJ_OPTION_MODE was introduced in Fluentd version 1.13.2. Earlier versions of Fluentd are not affected by this vulnerability. This issue was patched in version 1.15.3. As a workaround do not use `FLUENT_OJ_OPTION_MODE=object`."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 3.1, "baseSeverity": "LOW"}, "exploitabilityScore": 1.6, "impactScore": 1.4}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-502"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-502"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:fluentd:fluentd:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.13.2", "versionEndExcluding": "1.15.3", "matchCriteriaId": "242E386A-FF76-40A5-908E-A4D7C13D7DD7"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*", "matchCriteriaId": "E30D0E6F-4AE8-4284-8716-991DFA48CC5D"}]}]}], "references": [{"url": "https://github.com/fluent/fluentd/commit/48e5b85dab1b6d4c273090d538fc11b3f2fd8135", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/fluent/fluentd/security/advisories/GHSA-fppq-mj76-fpj2", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/MYD5QV66OLDHES6IKVYYM3Y3YID3VVCO/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/fluent/fluentd/commit/48e5b85dab1b6d4c273090d538fc11b3f2fd8135"}}