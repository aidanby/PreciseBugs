{"buggy_code": ["2016-12-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: modify ChopUpSingleUncompressedStrip() to\n\tinstanciate compute ntrips as TIFFhowmany_32(td->td_imagelength, rowsperstrip),\n\tinstead of a logic based on the total size of data. Which is faulty is\n\tthe total size of data is not sufficient to fill the whole image, and thus\n\tresults in reading outside of the StripByCounts/StripOffsets arrays when\n\tusing TIFFReadScanline().\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2608.\n\n\t* libtiff/tif_strip.c: revert the change in TIFFNumberOfStrips() done\n\tfor http://bugzilla.maptools.org/show_bug.cgi?id=2587 / CVE-2016-9273 since\n\tthe above change is a better fix that makes it unnecessary.\n\n2016-12-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c, libtiff/tif_luv.c: fix heap-based buffer\n\toverflow on generation of PixarLog / LUV compressed files, with\n\tColorMap, TransferFunction attached and nasty plays with bitspersample.\n\tThe fix for LUV has not been tested, but suffers from the same kind\n\tof issue of PixarLog.\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2604\n\n2016-12-02 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcp.c: avoid uint32 underflow in cpDecodedStrips that \n\tcan cause various issues, such as buffer overflows in the library.\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2598\n\n2016-12-02 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c, libtiff/tiffiop.h: fix uint32 overflow in\n\tTIFFReadEncodedStrip() that caused an integer division by zero.\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2596\n\n2016-11-20 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_getimage.c, libtiff/tif_open.c: add parenthesis to\n\tfix cppcheck clarifyCalculation warnings\n\t* libtiff/tif_predict.c, libtiff/tif_print.c: fix printf unsigned\n\tvs signed formatting (cppcheck invalidPrintfArgType_uint warnings)\n\n2016-11-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/fax2tiff.c (main): Applied patch by J\u00f6rg Ahrens to fix\n\tpassing client data for Win32 builds using tif_win32.c\n\t(USE_WIN32_FILEIO defined) for file I/O.  Patch was provided via\n\temail on November 20, 2016.\n\n2016-11-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.7 released.\n\n\t* configure.ac: Update for 4.0.7 release.\n\n\t* tools/tiffdump.c (ReadDirectory): Remove uint32 cast to\n\t_TIFFmalloc() argument which resulted in Coverity report.  Added\n\tmore mutiplication overflow checks.\n\n2016-11-18 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: Fix memory leak in (recent) error code path.\n\tFixes Coverity 1394415.\n\n2016-11-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_getimage.c: Fix some benign warnings which appear in\n\t64-bit compilation under Microsoft Visual Studio of the form\n\t\"Arithmetic overflow: 32-bit value is shifted, then cast to 64-bit\n\tvalue.  Results might not be an expected value.\".  Problem was\n\treported on November 16, 2016 on the tiff mailing list.\n\n2016-11-16 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: in TIFFFetchNormalTag(), do not dereference\n\tNULL pointer when values of tags with TIFF_SETGET_C16_ASCII / TIFF_SETGET_C32_ASCII\n\taccess are 0-byte arrays.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2593 (regression introduced\n\tby previous fix done on 2016-11-11 for CVE-2016-9297).\n\tReported by Henri Salo. Assigned as CVE-2016-9448\n\n2016-11-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffinfo.c (TIFFReadContigTileData): Fix signed/unsigned\n\tcomparison warning.\n\t(TIFFReadSeparateTileData): Fix signed/unsigned comparison\n\twarning.\n\n\t* tools/tiffcrop.c (readContigTilesIntoBuffer): Fix\n\tsigned/unsigned comparison warning.\n\n\t* html/v4.0.7.html: Add a file to document the pending 4.0.7\n\trelease.\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: avoid undefined behaviour related to overlapping\n\tof source and destination buffer in memcpy() call in\n\tt2p_sample_rgbaa_to_rgb()\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2577\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: fix potential integer overflows on 32 bit builds\n\tin t2p_read_tiff_size()\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2576\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_aux.c: fix crash in TIFFVGetFieldDefaulted()\n\twhen requesting Predictor tag and that the zip/lzw codec is not\n\tconfigured.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2591\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: in TIFFFetchNormalTag(), make sure that\n\tvalues of tags with TIFF_SETGET_C16_ASCII / TIFF_SETGET_C32_ASCII\n\taccess are null terminated, to avoid potential read outside buffer\n\tin _TIFFPrintField().\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2590 (CVE-2016-9297)\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: reject images with OJPEG compression that\n\thave no TileOffsets/StripOffsets tag, when OJPEG compression is\n\tdisabled. Prevent null pointer dereference in TIFFReadRawStrip1()\n\tand other functions that expect td_stripbytecount to be non NULL.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2585\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix multiple uint32 overflows in\n\twriteBufferToSeparateStrips(), writeBufferToContigTiles() and\n\twriteBufferToSeparateTiles() that could cause heap buffer overflows.\n\tReported by Henri Salo from Nixu Corporation.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2592 (CVE-2016-9532)\n\n2016-11-10 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_strip.c: make TIFFNumberOfStrips() return the td->td_nstrips\n\tvalue when it is non-zero, instead of recomputing it. This is needed in\n\tTIFF_STRIPCHOP mode where td_nstrips is modified. Fixes a read outsize of\n\tarray in tiffsplit (or other utilities using TIFFNumberOfStrips()).\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2587 (CVE-2016-9273)\n\n2016-11-04 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predic.c: fix memory leaks in error code paths added in\n\tprevious commit (fix for MSVR 35105)\n\n2016-10-31 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predict.h, libtiff/tif_predict.c:\n\tReplace assertions by runtime checks to avoid assertions in debug mode,\n\tor buffer overflows in release mode. Can happen when dealing with\n\tunusual tile size like YCbCr with subsampling. Reported as MSVR 35105\n\tby Axel Souchet\t& Vishal Chauhan from the MSRC Vulnerabilities & Mitigations\n\tteam.\n\n2016-10-26 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/fax2tiff.c: fix segfault when specifying -r without\n\targument. Patch by Yuriy M. Kaminskiy.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2572\n\n2016-10-25 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dir.c: discard values of SMinSampleValue and\n\tSMaxSampleValue when they have been read and the value of\n\tSamplesPerPixel is changed afterwards (like when reading a\n\tOJPEG compressed image with a missing SamplesPerPixel tag,\n\tand whose photometric is RGB or YCbCr, forcing SamplesPerPixel\n\tbeing 3). Otherwise when rewriting the directory (for example\n\twith tiffset, we will expect 3 values whereas the array had been\n\tallocated with just one), thus causing a out of bound read access.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2500\n\t(CVE-2014-8127, duplicate: CVE-2016-3658)\n\t\n\t* libtiff/tif_dirwrite.c: avoid null pointer dereference on td_stripoffset\n\twhen writing directory, if FIELD_STRIPOFFSETS was artificially set\n\tfor a hack case\tin OJPEG case.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2500\n\t(CVE-2014-8127, duplicate: CVE-2016-3658)\n\n2016-10-25 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffinfo.c: fix out-of-bound read on some tiled images.\n\t(http://bugzilla.maptools.org/show_bug.cgi?id=2517)\n\n\t* libtiff/tif_compress.c: make TIFFNoDecode() return 0 to indicate an\n\terror and make upper level read routines treat it accordingly.\n\t(linked to the test case of http://bugzilla.maptools.org/show_bug.cgi?id=2517)\n\n2016-10-14 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix out-of-bound read of up to 3 bytes in\n\treadContigTilesIntoBuffer(). Reported as MSVR 35092 by Axel Souchet\n\t& Vishal Chauhan from the MSRC Vulnerabilities & Mitigations team.\n\n2016-10-09 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: fix write buffer overflow of 2 bytes on JPEG\n\tcompressed images. Reported by Tyler Bohan of Cisco Talos as\n\tTALOS-CAN-0187 / CVE-2016-5652.\n\tAlso prevents writing 2 extra uninitialized bytes to the file stream.\n\n2016-10-08 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcp.c: fix out-of-bounds write on tiled images with odd\n\ttile width vs image width. Reported as MSVR 35103\n\tby Axel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\n\tMitigations team.\n\n2016-10-08 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: fix read -largely- outsize of buffer in\n\tt2p_readwrite_pdf_image_tile(), causing crash, when reading a\n\tJPEG compressed image with TIFFTAG_JPEGTABLES length being one.\n\tReported as MSVR 35101 by Axel Souchet and Vishal Chauhan from\n\tthe MSRC Vulnerabilities & Mitigations team. CVE-2016-9453\n\n2016-10-08 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcp.c: fix read of undefined variable in case of missing\n\trequired tags. Found on test case of MSVR 35100.\n\t* tools/tiffcrop.c: fix read of undefined buffer in\n\treadContigStripsIntoBuffer() due to uint16 overflow. Probably not a\n\tsecurity issue but I can be wrong. Reported as MSVR 35100 by Axel\n\tSouchet from the MSRC Vulnerabilities & Mitigations team.\n\n2016-09-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html: Change as many remotesensing.org broken links to a working\n\tURL as possible.\n\n2016-09-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_getimage.c (TIFFRGBAImageOK): Reject attempts to\n\tread floating point images.\n\n\t* libtiff/tif_predict.c (PredictorSetup): Enforce bits-per-sample\n\trequirements of floating point predictor (3).  Fixes CVE-2016-3622\n\t\"Divide By Zero in the tiff2rgba tool.\"\n\n2016-09-23 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix various out-of-bounds write vulnerabilities\n\tin heap or stack allocated buffers. Reported as MSVR 35093,\n\tMSVR 35096 and MSVR 35097. Discovered by Axel Souchet and Vishal\n\tChauhan from the MSRC Vulnerabilities & Mitigations team.\n\t* tools/tiff2pdf.c: fix out-of-bounds write vulnerabilities in\n\theap allocate buffer in t2p_process_jpeg_strip(). Reported as MSVR\n\t35098. Discovered by Axel Souchet and Vishal Chauhan from the MSRC\n\tVulnerabilities & Mitigations team.\n\t* libtiff/tif_pixarlog.c: fix out-of-bounds write vulnerabilities\n\tin heap allocated buffers. Reported as MSVR 35094. Discovered by\n\tAxel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\n\tMitigations team.\n\t* libtiff/tif_write.c: fix issue in error code path of TIFFFlushData1()\n\tthat didn't reset the tif_rawcc and tif_rawcp members. I'm not\n\tcompletely sure if that could happen in practice outside of the odd\n\tbehaviour of t2p_seekproc() of tiff2pdf). The report points that a\n\tbetter fix could be to check the return value of TIFFFlushData1() in\n\tplaces where it isn't done currently, but it seems this patch is enough.\n\tReported as MSVR 35095. Discovered by Axel Souchet & Vishal Chauhan &\n\tSuha Can from the MSRC Vulnerabilities & Mitigations team.\n\n2016-09-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/man/index.html: Comment out links to documentation for\n\tabandoned utilities.\n\n2016-09-17 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_lzma.c: typo fix in comment\n\n2016-09-04 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix warnings raised by clang 3.9 -Wcomma\n\n2016-09-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirwrite.c, libtiff/tif_color.c: fix warnings raised\n\tby GCC 5 / clang -Wfloat-conversion\n\n2016-08-16 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix C99'ism.\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2bw.c: fix weight computation that could result of color\n\tvalue overflow (no security implication). Fix bugzilla #2550.\n\tPatch by Frank Freudenberg.\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/rgb2ycbcr.c: validate values of -v and -h parameters to\n\tavoid potential divide by zero. Fixes CVE-2016-3623 (bugzilla #2569)\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: Fix out-of-bounds write in loadImage().\n\tFrom patch libtiff-CVE-2016-3991.patch from\n\tlibtiff-4.0.3-25.el7_2.src.rpm by Nikola Forro (bugzilla #2543)\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c: Fix write buffer overflow in PixarLogEncode\n\tif more input samples are provided than expected by PixarLogSetupEncode.\n\tIdea based on libtiff-CVE-2016-3990.patch from\n\tlibtiff-4.0.3-25.el7_2.src.rpm by Nikola Forro, but with different and\n\tsimpler check. (bugzilla #2544)\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2rgba.c: Fix integer overflow in size of allocated\n\tbuffer, when -b mode is enabled, that could result in out-of-bounds\n\twrite. Based initially on patch tiff-CVE-2016-3945.patch from\n\tlibtiff-4.0.3-25.el7_2.src.rpm by Nikola Forro, with correction for\n\tinvalid tests that rejected valid files. (bugzilla #2545)\n\n2016-07-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: Avoid access outside of stack allocated array\n\ton a tiled separate TIFF with more than 8 samples per pixel.\n\tReported by Kaixiang Zhang of the Cloud Security Team, Qihoo 360\n\t(CVE-2016-5321 / CVE-2016-5323 , bugzilla #2558 / #2559)\n\n2016-07-10 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c: Fix out-of-bounds read on\n\tmemory-mapped files in TIFFReadRawStrip1() and TIFFReadRawTile1()\n\twhen stripoffset is beyond tmsize_t max value (reported by\n\tMathias Svensson)\n\n2016-07-10 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffdump.c: fix a few misaligned 64-bit reads warned\n\tby -fsanitize\n\n2016-07-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c: make TIFFReadEncodedStrip() and\n\tTIFFReadEncodedTile() directly use user provided buffer when\n\tno compression (and other conditions) to save a memcpy().\n\n\t* libtiff/tif_write.c: make TIFFWriteEncodedStrip() and\n\tTIFFWriteEncodedTile() directly use user provided buffer when\n\tno compression to save a memcpy().\n\n2016-07-01  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_luv.c: validate that for COMPRESSION_SGILOG and\n\tPHOTOMETRIC_LOGL, there is only one sample per pixel. Avoid\n\tpotential invalid memory write on corrupted/unexpected images when\n\tusing the TIFFRGBAImageBegin() interface (reported by\n\tClay Wood)\n\n2016-06-28  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c: fix potential buffer write overrun in\n\tPixarLogDecode() on corrupted/unexpected images (reported by Mathias Svensson)\n\t(CVE-2016-5875)\n\n2016-06-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/libtiff.def: Added _TIFFMultiply32 and _TIFFMultiply64\n\tto libtiff.def\n\n2016-06-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/Makefile.am: The libtiff tools bmp2tiff, gif2tiff,\n\tras2tiff, sgi2tiff, sgisv, and ycbcr are completely removed from\n\tthe distribution.  The libtiff tools rgb2ycbcr and thumbnail are\n\tonly built in the build tree for testing.  Old files are put in\n\tnew 'archive' subdirectory of the source repository, but not in\n\tdistribution archives.  These changes are made in order to lessen\n\tthe maintenance burden.\n\n2016-05-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_config.vc.h (HAVE_SNPRINTF): Add a '1' to the\n\tHAVE_SNPRINTF definition.'\n\n2016-05-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_config.vc.h (HAVE_SNPRINTF): Applied patch by Edward\n\tLam to define HAVE_SNPRINTF for Visual Studio 2015.\n\n2016-04-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: when compiled with DEFER_STRILE_LOAD,\n\tfix regression, introduced on 2014-12-23, when reading a one-strip\n\tfile without a StripByteCounts tag. GDAL #6490\n\n2016-04-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/bugs.html: Replace Andrey Kiselev with Bob Friesenhahn for\n\tpurposes of security issue reporting.\n\n2016-01-23  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*: upstream typo fixes (mostly contributed by Kurt Schwehr)\n\tcoming from GDAL internal libtiff\n\n2016-01-09  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_fax3.h: make Param member of TIFFFaxTabEnt structure\n\ta uint16 to reduce size of the binary.\n\n2016-01-03  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c, tif_dirread.c: fix indentation issues raised\n\tby GCC 6 -Wmisleading-indentation\n\n2015-12-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c: avoid zlib error messages to pass a NULL\n\tstring to %s formatter, which is undefined behaviour in sprintf().\n\n2015-12-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_next.c: fix potential out-of-bound write in NeXTDecode()\n\ttriggered by http://lcamtuf.coredump.cx/afl/vulns/libtiff5.tif\n\t(bugzilla #2508)\n\n2015-12-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_luv.c: fix potential out-of-bound writes in decode\n\tfunctions in non debug builds by replacing assert()s by regular if\n\tchecks (bugzilla #2522).\n\tFix potential out-of-bound reads in case of short input data.\n\n2015-12-26  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_getimage.c: fix out-of-bound reads in TIFFRGBAImage\n\tinterface in case of unsupported values of SamplesPerPixel/ExtraSamples\n\tfor LogLUV / CIELab. Add explicit call to TIFFRGBAImageOK() in\n\tTIFFRGBAImageBegin(). Fix CVE-2015-8665 reported by limingxing and\n\tCVE-2015-8683 reported by zzf of Alibaba.\n\n2015-12-21  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: workaround false positive warning of Clang Static\n\tAnalyzer about null pointer dereference in TIFFCheckDirOffset().\n\n2015-12-19  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_fax3.c: remove dead assignment in Fax3PutEOLgdal(). Found\n\tby Clang Static Analyzer\n\n2015-12-18  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirwrite.c: fix truncation to 32 bit of file offsets in\n\tTIFFLinkDirectory() and TIFFWriteDirectorySec() when aligning directory\n\toffsets on a even offset (affects BigTIFF). This was a regression of the\n\tchangeset of 2015-10-19.\n\n2015-12-12  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_write.c: TIFFWriteEncodedStrip() and TIFFWriteEncodedTile()\n\tshould return -1 in case of failure of tif_encodestrip() as documented\n\t* libtiff/tif_dumpmode.c: DumpModeEncode() should return 0 in case of\n\tfailure so that the above mentionned functions detect the error.\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/uvcode.h: const'ify uv_code array\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirinfo.c: const'ify tiffFields, exifFields,\n\ttiffFieldArray and exifFieldArray arrays\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_print.c: constify photoNames and orientNames arrays\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_close.c, libtiff/tif_extension.c : rename link\n\tvariable to avoid -Wshadow warnings\n\n2015-11-22  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix typos in comments (patch by Kurt Schwehr)\n \n2015-11-22  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix MSVC warnings related to cast shortening and\n\tassignment within conditional expression\n\n2015-11-18  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix clang -Wshorten-64-to-32 warnings\n\n2015-11-18  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: initialize double* data at line 3693 to NULL\n\tto please MSVC 2013\n\n2015-11-17  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: prevent reading ColorMap or TransferFunction\n\tif BitsPerPixel > 24, so as to avoid huge memory allocation and file\n\tread attempts\n\n2015-11-02  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: remove duplicated assignment (reported by\n\tClang static analyzer)\n\n2015-10-28  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dir.c, libtiff/tif_dirinfo.c, libtiff/tif_compress.c,\n\tlibtiff/tif_jpeg_12.c: suppress warnings about 'no previous\n\tdeclaration/prototype'\n\n2015-10-19  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tiffiop.h, libtiff/tif_dirwrite.c: suffix constants by U to fix \n\t'warning: negative integer implicitly converted to unsigned type' warning\n\t(part of -Wconversion)\n\n2015-10-17  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dir.c, libtiff/tif_dirread.c, libtiff/tif_getimage.c,\n\t  libtiff/tif_print.c: fix -Wshadow warnings (only in libtiff/)\n\n2015-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.6 released.\n\n\t* html/v4.0.6.html: Added release notes for 4.0.6.\n\n2015-09-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffgt.c: Silence glut API deprecation warnings on MacOS\n\tX.  Patch by Roger Leigh.\n\n\t* Makefile.am: Added a 'coverity' rule to assist with Coverity\n\tsubmissions.\n\n\t* tools/tiff2pdf.c: Fix compiler warning about unused function\n\twhen JPEG is not available.\n\n\t* tools/fax2ps.c (main): Detect failure to write to temporary\n\tfile.\n\n2015-09-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirread.c (TIFFReadDirEntryCheckRangeSlongSlong8):\n\tChange implementation so that it does not sometimes overflow the\n\trange of a 32-bit int and to avoid a signed vs unsigned compare\n\tcompiler warning.\n\t(TIFF_INT64_MAX): Avoid use of platform-specific large constants.\n\t(TIFF_UINT32_MAX): Avoid use of platform-specific large constants.\n\n2015-09-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (distcheck-hook), configure.ac: Applied patches by\n\tRoger Leigh (via tiff mailing list on 2015-09-01) to fix issue\n\twith BSD make and to make use of cmake in 'distcheck' target\n\tconditional on if cmake is available.\n\n\t* CMakeLists.txt, Makefile.am, configure.ac: Applied patches by\n\tRoger Leigh (via tiff mailing list on 2015-09-01).\n\n\tCMake build is now included in 'distcheck' target.\n\n\tBuilds with CMake 2.8.9 and newer.\n\n\tTar is now resquested to use POSIX PAX format.\n\n2015-08-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt, libtiff/test/Makefile.am: Applied patches by\n\tRoger Leigh (via tiff mailing list on 2015-08-31.\n\n\tCMake reads all version information directly from configure.ac to\n\tavoid duplication of values.  This basically greps over the file\n\tfor the LIBTIFF_* variables, then translates them to the form\n\tneeded for cmake. This includes the release version and libtool\n\tshared library version information.\n\n\tMake shared/static library building configurable.  Currently it\n\talways builds shared libraries, with static libs having a _static\n\tsuffix (copying zlib, but it means it's got a non-standard name).\n\tCMake has a -DBUILD_SHARED_LIBS=ON|OFF option to select one or the\n\tother, which is now used instead.  There's now a single \"tiff\"\n\ttarget to build either shared or static as required, and all the\n\ttests and tools are linked with this. Note: the Windows tests fail\n\twhen linked with a static libtiff (says: libtiff.dll not found).\n\tNot really a regression since this was not tested up to this\n\tpoint, and it's likely the unit tests haven't (ever?) been run on\n\tWindows with a static libtiff, so there's some additional\n\tportability issue here to address.  Works fine on UNIX systems,\n\tand fine on Windows with the default to build a DLL.\n\n\tAdd a missing file which wasn't being distributed, causing unit\n\ttests to fail.  Note that \"find . -name '*.cmake'\" lists all the\n\tCMake files which need distributing in addition to all the\n\tCMakeLists.txt files (which now are distributed).\n\n2015-08-31  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predict.c: pedantic change to add explicit masking\n\twith 0xff before casting to uchar in floating-point horizontal\n\tdifferencing and accumulation routines.\n\n2015-08-31  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predict.c: fix generation of output with 16 bit\n\tor 32 bit integer, when byte swapping is needed, in\n\thorizontal predictor (#2521). Also fixes decoding when there is\n\ta single pixel to code (unlikely case...) and byte swapping is\n\tinvolved.\n\n2015-08-30  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_lzw.c: make nextdata a unsigned type to avoid\n\tundefined behaviour with shifts (gcc -fsanitize=shift)\n\n2015-08-30  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_fax3.c, libtiff/tif_lzw.c, libtiff/tif_predict.c:\n\tadd explicit masking with 0xff before casting\n\tto unsigned char (make icc -check=conversions happy)\n\n\t* libtiff/tif_predict.c: operate on unsigned datatypes when\n\tcomputing/applying differences to avoid undefined behaviour of\n\tsigned types (C standard compliance)\n\n2015-08-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: libtiff 4.0.5 released.\n\n2015-08-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt: Applied patch by Roger Leigh (via tiff mailing\n\tlist on 2015-08-29) to add ld-version-script option to cmake build\n\tto match autoconf.  Note: defaults to 'on' to be ABI-compatible by\n\tdefault with common Linux distribution builds.  Note that the\n\tautoconf configure script defaults to 'off'.\n\n\t* html/build.html: Applied patch by Roger Leigh (via tiff mailing\n\tlist on 2015-08-29) to describe how to use CMake to build libtiff.\n\n2015-08-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/v4.0.5.html: Added HTML file describing the changes which\n\twill appear in the 4.0.5 release.\n\n2015-08-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h: For MinGW comiles, make sure that build\n\tsupports necessary __MSVCRT_VERSION__ (at least at least 0x800).\n\tOtherwise large files can not be supported for POSIX-style I/O.\n\n\t* tools/fax2tiff.c (main): Eliminate a compiler warning in 64-bit\n\tbuilds about cast to thandle_t.\n\n\t* test/rewrite_tag.c (main): Does not require any arguments.\n\n2015-08-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/CMakeLists.txt, port/snprintf.c: Patch by Roger Leigh to\n\tfix build issues when using Cmake due to Windows large file\n\tchanges.\n\n2015-08-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h: First cut at supporting large files under\n\tMicrosoft Windows using tif_unix.c and the libtiff tools.  This\n\tonly works if the Windows CDK is new enough to support the APIs\n\tused (Visual C++ 2005 or later).  Support for large files is not\n\tactually tested yet.\n\n2015-08-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: Applied patch by R\u00e4is\u00e4 Olli to assure that\n\tclient_data is initialized to a known value, and to report an\n\terror on two memory allocation failures.\n\n2015-08-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt: Applied patch by Roger Leigh to fix libtiffxx\n\tsymbol versioning.  Patch was mailed to libtiff list on Thu, 13\n\tAug 2015.\n\n2015-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* cmake: Add d suffix to debug libraries with MSVC.  Patch #3 of 3\n\tby Roger Leigh posted to tiff list on Wed, 1 Jul 2015 15:58:20\n\t+0100.\n\n\t* cmake: Add extra warning flags.  Patch #2 of 3 by Roger Leigh\n\tposted to tiff list on Wed, 1 Jul 2015 15:58:20 +0100.\n\n\t* cmake: Correct snprintf fallback for VS2015.  Patch #1 of 3 by\n\tRoger Leigh posted to tiff list on Wed, 1 Jul 2015 15:58:20 +0100.\n\n2015-06-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt: Add CMake patchset by Roger Leigh as posted to\n\tlibtiff mailing list on Mon, 22 Jun 2015 21:21:01 +0100. Several\n\tcorrections to ensure that the autotools build still works were\n\tadded by me.  I have not yet tested the build using 'cmake' or\n\tMSVC with 'nmake'.\n\n2015-06-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am: tiff2rgba-quad-tile.jpg.sh depends on the JPEG\n\tlibrary so only execute if JPEG is available.\n\n\t* libtiff 4.0.4 released.\n\n\t* configure.ac: Add a HAVE_FOO Automake conditional for each\n\tadd-on library.\n\n\t* test/Makefile.am (JPEG_DEPENDENT_CHECK_PROG): raw_decode\n\trequires JPEG support to compile.  Use Automake conditional to\n\tonly include it when JPEG support is available.\n\n\t* html/build.html: Try to improve the nmake-based VC++ build\n\tdescription.\n\n\t* libtiff/tiffconf.vc.h: Build fixes based on testing.\n\n\t* libtiff/tif_config.vc.h: Build fixes based on testing.\n\n\t* libtiff/libtiff.def: TIFFRasterScanline does not exist so remove\n\texport for it.\n\n2015-06-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_config.vc.h: Make adjustments to match the new\n\tdefinitions that configure produces, including for WIN64.  Still\n\tneeds to be tested.\n\n\t* configure.ac: For 64-bit MinGW, fix SSIZE_FORMAT formatting\n\tspecifier.  64-bit MinGW supports 'long long' but support for\n\t'lld' is not assured by the run-time DLLs and so GCC warns.\n\tAdd TIFF_SIZE_T and TIFF_SIZE_FORMAT to provide a type definition\n\tand printf format specifier to deal with printing values of\n\t'size_t' type.  In particular, this was necessary for WIN64.\n\tAdded a configure test for if the system headers provide 'optarg'\n\t(normal case) and block out the many explicit 'extern' statements\n\tin the utilities.  This was found to be necessary under Windows\n\twhen getopt is in a DLL and the symbols are already imported with\n\tdllimport via standard header files.\n\n\t* test/raw_decode.c (XMD_H): Avoid conflicting typedefs for INT32\n\tand boolean in MinGW build due to including jpeglib.h.\n\n\t* test/rewrite_tag.c (main): Fix problem with location of variable\n\tdeclaration.\n\n\t* libtiff/libtiff.def: Added exports for TIFFGetConfiguredCODECs,\n\tTIFFReadRGBAImageOriented, TIFFSetCompressionScheme,\n\tTIFFSwabArrayOfTriples, TIFFVGetFieldDefaulted, _TIFFCheckRealloc,\n\tTIFFRasterScanline, TIFFSetErrorHandlerExt,\n\tTIFFSetWarningHandlerExt, TIFFNumberOfDirectories,\n\tTIFFCreateCustomDirectory, TIFFCreateEXIFDirectory,\n\tTIFFWriteCustomDirectory, _TIFFRewriteField as recommended by\n\tRoger Leigh and justified by use in libtiff tests, documentation,\n\tand changelog notes.  Also sorted symbol list and removed\n\tduplicate entries.\n\n2015-06-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_getimage.c: Fix four Coverity issues related to\n\tunintended sign extension.\n\n2015-06-16  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_unix.c: fix compilation with MSVC (fix by Jeff McKenna)\n\n2015-06-14  Lee Howard  <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_unix.c: contribution from Vadim Zeitlin on\n\tBugzilla Bug #2510 fixes several harmless but still annoying\n\twarnings\n\n\t* configure: contribution from Ludolf Holzheid on Bugzilla\n\tBug #2498.  Adds an option to select the file I/O style on\n\tWindows hosts.\n\n\t* libtiff/tif_getimage.c: contribution from Gary Cramblitt\n\ton Bugzilla Bug #2409.  Correct reading of certain tiled TIFFs.\n\n\t* configure, configure.ac: contribution from Marcos H. Woehrmann\n\ton Bugzilla Bug #2405.  Correct shell equality operator.\n\n\t* tools/tiffgt.c (raster_draw): contribution from Jay Berkenbilt\n\ton Bugzilla Bug #2401.  Appropriately call glFlush().\n\n\t* tools/tiff2pdf.c: change ColorTransform from \"0\" to \"1\"\n\tfollowing Bugzilla Bug #2150.\n\n2015-06-13  Lee Howard  <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_lzw.c: contribution from Andy Cave - decode\n\tfiles that contain consecutive CODE_CLEAR codes.\n\n\t* tools/tiff2pdf.c: contribution from Antti S. Lankila on\n\tBugzilla Bug #2078. Suppress initial output of the header.\n\n\t* tools/tiff2pdf.c: contribution from Yuriy M. Kaminskiy -\n\tTake care in using the return value from snprintf().\n\n\t* tools/tiffcrop.c: contribution from Eduardo Robles Elvira -\n\tcorrectly copy the compression tag from the source TIFF.\n\n\t* tools/tiff2ps.c: contribution from Eduardo Robles Elvira -\n\tcorrect sizing and scaling problems with output document.\n\n2015-06-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c (JPEGDecode): Split JPEGDecode() into two\n\tclean implementations in order to avoid pre-processor hell.  Only\n\tone of the implementations is used in a given build.\n\n2015-06-08  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_jpeg.c: Fix compilation in BITS_IN_JSAMPLE == 12\n\tcase\n\n2015-06-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_write.c (TIFFWriteEncodedStrip): Fix Coverity 715975\n\t\"Division or modulo by zero\".\n\t(TIFFWriteEncodedTile): Fix Coverity 715976 and 715977 \"Division\n\tor modulo by zero\".\n\t(TIFFWriteRawStrip): Fix Coverity 715978 \"Division or modulo by\n\tzero\".\n\t(TIFFWriteScanline): Fix Coverity 715979 \"Division or modulo by\n\tzero\".\n\n\t* libtiff/tif_read.c (TIFFStartTile): Fix Coverity 715973 and\n\t715974 \"Division or modulo by zero\".\n\n2015-05-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dir.c (TIFFNumberOfDirectories): Quiet Coverity\n\t1134470 \"Logically dead code\" by making the roll-over check\n\texplicit.\n\n\t* libtiff/tif_luv.c (LogLuvDecodeTile): Fix Coverity 991227\n\t\"Division or modulo by zero\".\n\t(LogLuvDecodeStrip): Fix Coverity 991239 \"Division or modulo by\n\tzero\".\n\t(LogLuvEncodeStrip): Fix Coverity 991240 \"Division or modulo by\n\tzero\".\n\t(LogLuvEncodeTile): Fix Coverity 991241 \"Division or modulo by\n\tzero\".\n\n\t* libtiff/tif_dirread.c (TIFFReadDirEntryDoubleArray): Fix\n\tCoverity 298626 \"Logically dead code\".\n\t(TIFFReadDirEntryFloatArray): Fix Coverity 298627 \"Logically dead\n\tcode\".\n\t(TIFFReadDirEntryIfd8Array): Fix Coverity 298628 \"Logically dead\n\tcode\".\n\t(TIFFReadDirEntrySlong8Array): Fix Coverity 298629 \"Logically dead\n\tcode\"\n\n\t* libtiff/tif_dir.c (TIFFNumberOfDirectories): Don't depend on ++\n\toperator precedenc in evaluation.  Might quench Coverity 1134470\n\t\"Logically dead code\".\n\n\t* libtiff/tif_jpeg.c (JPEGDecode): Fix Coverity 602597 \"Operands\n\tdon't affect result\".  This change uses ifdefs to include\n\tapplicable code based on properties of libjpeg.  Still needs to be\n\tre-tested with 12-bit \"6b\" and \"MK1\".\n\n2015-05-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirwrite.c (_TIFFRewriteField): Fix Coverity 1024310\n\t\"Resource leak\".\n\n\t* libtiff/tif_ojpeg.c (OJPEGReadHeaderInfoSecStreamDht): Fix\n\tCoverity 601720 \"Resource leak\".\n\n\t* libtiff/tif_jpeg.c (JPEGCleanup): Fix Coverity 298624\n\t\"Dereference before null check\".\n\n\t* libtiff/tif_ojpeg.c (OJPEGReadBufferFill): Fix Coverity 603400\n\t\"Missing break in switch\".\n\n\t* contrib/addtiffo/tif_overview.c (TIFF_DownSample): Check buffer\n\tsize calculation for overflow.\n\n\t* contrib/addtiffo/addtiffo.c (main): Possibly address Coverity\n\t1024226 \"Untrusted value as argument\".\n\n\t* tools/gif2tiff.c (readgifimage): Fix Coverity 1024222 \"Untrusted\n\tvalue as argument\".\n\t(checksignature): Fix Coverity 1024894 \"Ignoring number of bytes\n\tread\".\n\t(readextension): Fix Coverity 1024893 \"Ignoring number of bytes\n\tread\".\n\t(readgifimage): Fix Coverity 1024890 \"Ignoring number of bytes\n\tread\".\n\t(readraster): Fix Coverity 1024891 \"Ignoring number of bytes\n\tread\".\n\t(readgifimage): Fix Coverity 1024892 \"Ignoring number of bytes\n\tread\".\n\n\t* tools/tiff2pdf.c (t2p_readwrite_pdf_image): Fix Coverity 1024181\n\t\"Structurally dead code\".\n\n\t* tools/raw2tiff.c (main): Fix Coverity 1024887 \"Unchecked return\n\tvalue from library\".\n\t(guessSize): Fix Coverity 1024888 \"Unchecked return value from\n\tlibrary\".\n\t(guessSize): Fix Coverity 1214162 \"Ignoring number of bytes read\".\n\t(guessSize): Fix Coverity 1024889 \"Unchecked return value from\n\tlibrary\".\n\n\t* tools/tiff2pdf.c (t2p_readwrite_pdf_image): Fix Coverity 298621\n\t\"Resource leak\".\n\t(t2p_readwrite_pdf_image): Fix Coverity 1024181 \"Structurally dead\n\tcode\".\n\t(t2p_write_pdf): Fix Coverity 1227690 \"Unused value\".\n\n2015-05-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* contrib/iptcutil/iptcutil.c (formatIPTC): Fix Coverity 1024468\n\t\"Infinite loop\".\n\t(formatIPTC): Fix Coverity 1024727 \"Truncated stdio return value\".\n\t(formatIPTC): Fix Coverity 1214240 \"Untrusted loop bound\".\n\n2015-05-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* contrib/addtiffo/tif_ovrcache.c (TIFFCreateOvrCache): Fix\n\tCoverity 298615 \"Resource leak\".\n\t(TIFFGetOvrBlock): Fix Coverity 1024649 \"Unintended sign\n\textension\".\n\n\t* tools/bmp2tiff.c (main): Fix Coverity 1024225 \"Untrusted value\n\tas argument\".\n\t(main): Fix Coverity 1024678 \"Unchecked return value from\n\tlibrary\".\n\t(main): Fix Coverity 1024679 \"Unchecked return value from\n\tlibrary\".\n\t(main): Fix Coverity 1214160 \"Ignoring number of bytes read\".\n\n\t* contrib/addtiffo/tif_ovrcache.c (TIFFCreateOvrCache): Fix\n\tCoverity 298615 \"Resource leak\".\n\n\t* tools/tiffcp.c: Fix Coverity 1024306, 1024307, 1024308, 1024309\n\t\"Resource leak\".\n\n\t* tools/tiffsplit.c (cpTiles): Fix Coverity 1024304 \"Resource\n\tleak\".\n\t(cpStrips): Fix Coverity 1024305 \"Resource leak\".\n\n2015-05-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/ras2tiff.c: Fix Sun Raster header definition to be safe\n\tfor 64-bit systems.  Add some header validations.  Should fix many\n\tCoverity issues.\n\t(main): Fix Coverity 1301206: \"Integer handling issues  (BAD_SHIFT)\".\n\t(main): Quiet Coverity 1024223 \"Untrusted value as argument\".\n\n\t* tools/tiffmedian.c (GetInputLine): Fix Coverity 1024795 \"Nesting\n\tlevel does not match indentation\".\n\t(get_histogram): Quiet Coverity 1024386 \"Out-of-bounds read\".\n\tThis was a benign mis-diagnosis but added code to enforce against\n\tbuffer overflow.\n\n\t* tools/tiffcrop.c (ROTATE_ANY): Fix Coverity 1294542 \"Logical\n\tvs. bitwise operator\".\n\t(readContigStripsIntoBuffer): Fix Coverity 1024545 \"Division or\n\tmodulo by zero\".\n\t(readContigTilesIntoBuffer): Fix Coverity 1024586 \"Logically dead\n\tcode\".\n\t(writeSingleSection): Fix Coverity 1024796 \"Nesting level does not\n\tmatch indentation\".\n\t(writeCroppedImage): Fix Coverity 1024797 \"Nesting level does not\n\tmatch indentation\".\n\t(loadImage): Fix Coverity 1299741 \"Dereference before null check\".\n\t(loadImage): Fix Coverity 1299740 \"Out-of-bounds write\".\n\n2015-03-02  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiffdither.c: check memory allocations to avoid writing to\n\tNULL pointer. Also check multiplication overflow. Fixes #2501,\n\tCVE-2014-8128. Derived from patch by Petr Gajdos.\n\n2015-01-26  Even Rouault  <even.rouault@spatialys.com>\n\n\t* add html/v4.0.4beta.html under version control\n\t* HOWTO-RELEASE: write that cvs add html/vX.X.html must be used\n\n2015-01-26  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff 4.0.4beta released\n\n2015-01-26  Even Rouault  <even.rouault@spatialys.com>\n\n\t* automake: updated to 1.15\n\t* libtool: updated to 2.4.5\n\n2015-01-22  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: Fix two crashes (oCERT-2014-013)\n\n2015-01-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/bugs.html: remove note about needing to email the tiff mailing\n\tlist administrator about being approved for membership, this appears\n\tnot to be true.\n\n2015-01-05  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* tools/tiff2pdf.c: Fixed unsigned integer addition overflow detection.\n\n2015-01-03  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_dirread.c: in TIFFCheckDirOffset(), avoid uint16 overflow\n\twhen reading more than 65535 directories, and effectively error out when\n\treaching that limit.\n\n2014-12-29  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_jpeg.c: in JPEGFixupTags(), recognize SOF2, SOF9 and SOF10\n\tmarkers to avoid emitting a warning (even if, according to the TechNote,\n\tthere are admitedly unusual/not recommended or even forbidden variants, but\n\tthey do work well with libjpeg for SOF2, and with libjpeg-turbo for SOF2,\n\tSOF9 and SOF10).\n\tDefine in_color_space and input_components to the right values in\n\tJPEGSetupEncode(), before calling jpeg_set_defaults(), as specified by\n\tlibjpeg API documentation, so as to be compatible with mozjpeg library.\n\tNote: the default settings of mozjpeg will produce progressive scans, which\n\tis forbidden by the TechNote.\n\n2014-12-29  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_getimage.c: move test on vertical value of YCbCr subsampling.\n\tto avoid buffer leak (fix previous fix, found by Coverity scan)\n\n2014-12-29  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_next.c: add new tests to check that we don't read outside of\n\tthe compressed input stream buffer.\n\n\t* libtiff/tif_getimage.c: in OJPEG case, fix checks on strile width/height\n    in the putcontig8bitYCbCr42tile, putcontig8bitYCbCr41tile and\n    putcontig8bitYCbCr21tile cases.\n\n2014-12-27  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_dir.c: in TIFFDefaultDirectory(), reset any already existing\n\textented tags installed by user code through the extender mechaninm before\n\tcalling the extender callback (GDAL #5054)\n\n2014-12-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Fix warnings about variables set but not used.\n\n\t* contrib/iptcutil/iptcutil.c: Fix warnings about variables set\n\tbut not used.\n\n\t* tools/tiffgt.c: Fix warnings about unused parameters.\n\n\t* libtiff/tif_stream.cxx: Fix warnings about unused parameters.\n\n2014-12-25  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_getimage.c, libtiff/tif_ojpeg.c, libtiff/tif_zip.c: fix\n\tvarious typos found by Debian lintian tool (GDAL #5756)\n\n2014-12-24  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_getimage.c: avoid divide by zero on invalid YCbCr subsampling.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2235\n\n2014-12-24  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: fix buffer overflow on some YCbCr JPEG compressed images.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2445\n\n2014-12-24  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: fix buffer overflow on YCbCr JPEG compressed image.\n\tDerived from patch by Petr Gajdos,\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2443\n\n2014-12-23  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_dirread.c: In EstimateStripByteCounts(), check return code\n\tof _TIFFFillStriles(). This solves crashing bug on corrupted\n\timages generated by afl.\n\n2014-12-23  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_read.c: fix several invalid comparisons of a uint64 value with\n\t<= 0 by casting it to int64 first. This solves crashing bug on corrupted\n\timages generated by afl.\n\n2014-12-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffdump.c: Guard against arithmetic overflow when\n\tcalculating allocation buffer sizes.\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2bw.c: when Photometric=RGB, the utility only works if\n\tSamplesPerPixel = 3. Enforce that\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2485 (CVE-2014-8127)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/pal2rgb.c, tools/thumbnail.c: fix crash by disabling TIFFTAG_INKNAMES\n\tcopying. The right fix would be to properly copy it, but not worth the burden\n\tfor those esoteric utilities.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2484 (CVE-2014-8127)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/thumbnail.c: fix out-of-buffer write\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2489 (CVE-2014-8128)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/thumbnail.c, tools/tiffcmp.c: only read/write TIFFTAG_GROUP3OPTIONS\n\tor TIFFTAG_GROUP4OPTIONS if compression is COMPRESSION_CCITTFAX3 or\n\tCOMPRESSION_CCITTFAX4\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2493 (CVE-2014-8128)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_next.c: check that BitsPerSample = 2. Fixes\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2487 (CVE-2014-8129)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: check return code of TIFFGetField() when reading\n\tTIFFTAG_SAMPLESPERPIXEL\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiffcp.c: fix crash when converting YCbCr JPEG-compressed to none.\n\tBased on patch by Tomasz Buchert (http://bugzilla.maptools.org/show_bug.cgi?id=2480)\n\tDescription: fix for Debian bug #741451\n\ttiffcp crashes when converting JPEG-encoded TIFF to a different\n\tencoding (like none or lzw). For example this will probably fail:\n\ttiffcp -c none jpeg_encoded_file.tif output.tif\n\tThe reason is that when the input file contains JPEG data,\n\tthe tiffcp code forces conversion to RGB space. However,\n\tthe output normally inherits YCbCr subsampling parameters\n\tfrom the input, which leads to a smaller working buffer\n\tthan necessary. The buffer is subsequently overrun inside\n\tcpStripToTile() (called from writeBufferToContigTiles).\n\tNote that the resulting TIFF file would be scrambled even\n\tif tiffcp wouldn't crash, since the output file would contain\n\tRGB data intepreted as subsampled YCbCr values.\n\tThis patch fixes the problem by forcing RGB space on the output\n\tTIF if the input is JPEG-encoded and output is *not* JPEG-encoded.\n\tAuthor: Tomasz Buchert <tomasz.buchert@inria.fr>\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\tFix various crasher bugs on fuzzed images.\n\t* libtiff/tif_dir.c: TIFFSetField(): refuse to set negative values for\n\tTIFFTAG_XRESOLUTION and TIFFTAG_YRESOLUTION that cause asserts when writing\n\tthe directory\n\t* libtiff/tif_dirread.c: TIFFReadDirectory(): refuse to read ColorMap or\n\tTransferFunction if BitsPerSample has not yet been read, otherwise reading\n\tit later will cause user code to crash if BitsPerSample > 1\n\t* libtiff/tif_getimage.c: TIFFRGBAImageOK(): return FALSE if LOGLUV with\n\tSamplesPerPixel != 3, or if CIELAB with SamplesPerPixel != 3 or BitsPerSample != 8\n\t* libtiff/tif_next.c: in the \"run mode\", use tilewidth for tiled images\n\tinstead of imagewidth to avoid crash\n\t* tools/bmp2tiff.c: fix crash due to int overflow related to input BMP dimensions\n\t* tools/tiff2pdf.c: fix crash due to invalid tile count (should likely be checked by\n\tlibtiff too). Detect invalid settings of BitsPerSample/SamplesPerPixel for CIELAB / ITULAB\n\t* tools/tiffcrop.c: fix crash due to invalid TileWidth/TileHeight\n\t* tools/tiffdump.c: fix crash due to overflow of entry count.\n\n2014-12-15  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_jpeg.c: Fix regression introduced on 2010-05-07 that caused\n\tall tiles/strips to include quantization tables even when the jpegtablesmode\n\thad the JPEGTABLESMODE_QUANT bit set.\n\tAlso add explicit removal of Huffman tables when jpegtablesmode has the\n\tJPEGTABLESMODE_HUFF bit set, which avoids Huffman tables to be emitted in the\n\tfirst tile/strip (only useful in update scenarios. create-only was\n\tfine)\n\n2014-12-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2pdf.c: Assure that memory size calculations for\n\t_TIFFmalloc() do not overflow the range of tmsize_t.\n\n2014-12-07  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/thumbnail.c, tools/tiffcrop.c: \"fix\" heap read over-run found with\n\tValgrind and Address Sanitizer on test suite\n\n2014-12-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2pdf.c (t2p_read_tiff_init): TIFFTAG_TRANSFERFUNCTION\n\ttag can return one channel, with the other two channels set to\n\tNULL.  The tiff2pdf code was expecting that other two channels\n\twere duplicate pointers in the case where there is only one\n\tchannel.  Detect this condition in order to avoid a crash, and\n\tpresumably perform correctly with just one channel.\n\n2014-12-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffdump.c: Fix double-free bug.\n\n2014-11-27  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_config.vc.h: no longer use \"#define snprintf _snprintf\" with\n\tVisual Studio 2015 aka VC 14 aka MSVC 1900\n\n2014-11-20  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_lzw.c: prevent potential null dereference of\n\tsp->dec_codetab in LZWPreDecode (bug #2459)\n\n\t* libtiff/tif_read.c: in TIFFReadBufferSetup(), avoid passing -1 size\n\tto TIFFmalloc() if passed user buffer size is 0 (bug #2459)\n\n\t* libtiff/tif_ojpeg.c: make Coverity happier (not a bug, #2459)\n\n\t* libtiff/tif_dir.c: in _TIFFVGetField() and _TIFFVSetField(), make\n\tCoverity happier (not a bug, #2459)\n\n\t* libtiff/tif_dirread.c: in TIFFFetchNormalTag(), make Coverity happier\n\t(not a bug, #2459)\n\n\t* tools/tiff2pdf.c: close PDF file (bug #2479)\n\n\t* tools/fax2ps.c: check malloc()/realloc() result (bug #2470)\n\n\t* tools/tiffdump.c: detect cycle in TIFF directory chaining (bug #2463)\n\tand avoid passing a NULL pointer to read() if seek() failed before (bug #2459)\n\n\t* tools/tiffcrop.c: fix segfault if bad value passed to -Z option\n\t(bug #2459) and add missing va_end in dump_info (#2459)\n\n\t* tools/gif2tif.c: apply patch for CVE-2013-4243 (#2451)\n\n2014-11-20  Even Rouault  <even.rouault@spatialys.com>\n\t* libtiff/tif_jpeg.c: fix segfault in JPEGFixupTagsSubsampling() on\n\tcorrupted image where tif->tif_dir.td_stripoffset == NULL (bug #2471)\n\n2014-11-20  Even Rouault  <even.rouault@spatialys.com>\n\t* automake: updated to 1.14.1\n\t* libtool: updated to 2.4.3\n\t* HOWTO-RELEASE: small update about autotools building order\n\n2014-10-20  Olivier Paquet  <olivier.paquet@gmail.com>\n\t* tools/tiff2pdf.c: Preserve input file directory order when pages\n\tare tagged with the same page number.\n\n2014-08-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirread.c (TIFFReadDirEntryOutputErr): Incorrect\n\tcount for tag should be a warning rather than an error since\n\terrors terminate processing.\n\n2014-06-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2rgba.c (]): Fixed tiff2rgba usage message in that zip\n\twas wrongly described.  Fix suggested by Miguel Medalha.\n\n2014-05-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirinfo.c (TIFFField) : Fix data type for\n\tTIFFTAG_GLOBALPARAMETERSIFD tag.  Patch by Steve Underwood.\n\tReviewed and forwarded by Lee Howard.\n\n2013-11-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fix last fix for TIFFNumberOfDirectories()\n\n2013-10-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: generate error in case of directory count\n\toverflow.\n\n2013-10-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h, libtiff/tif_dirinfo.c: add definitions for\n\tTIFF/EP CFARepeatPatternDim and CFAPattern tags (bug #2457)\n\n2013-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dir.c (TIFFAdvanceDirectory): If nextdir is found to\n\tbe defective, then set it to zero before returning error in order\n\tto terminate processing of truncated TIFF.  Issue found and fix\n\tsuggested by Richard Nolde.\n\n2013-08-14  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/gif2tiff.c: fix possible OOB write (#2452, CVE-2013-4244)\n\n2013-08-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/gif2tiff.c: Be more careful about corrupt or\n\thostile input files (#2450, CVE-2013-4231)\n\n\t* tools/tiff2pdf.c: terminate after failure of allocating\n\tycbcr buffer (bug #2449, CVE-2013-4232)\n\n2013-07-09  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tools/tiffinfo.c: Default various values fetched with\n\tTIFFGetField() to avoid being uninitialized.\n\n2013-05-02  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Rewrite JPEG marker parsing in\n\tt2p_process_jpeg_strip to be at least marginally competent.  The\n\tapproach is still fundamentally flawed, but at least now it won't\n\tstomp all over memory when given bogus input.  Fixes CVE-2013-1960.\n\n2013-05-02  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* contrib/dbs/xtiff/xtiff.c, libtiff/tif_codec.c,\n \tlibtiff/tif_dirinfo.c, tools/rgb2ycbcr.c, tools/tiff2bw.c,\n \ttools/tiff2pdf.c, tools/tiff2ps.c, tools/tiffcrop.c,\n \ttools/tiffdither.c: Enlarge some fixed-size buffers that weren't\n \tlarge enough, and eliminate substantially all uses of sprintf(buf,\n \t...)  in favor of using snprintf(buf, sizeof(buf), ...), so as to\n \tprotect against overflow of fixed-size buffers.  This responds in\n \tparticular to CVE-2013-1961 concerning overflow in tiff2pdf.c's\n \tt2p_write_pdf_page(), but in general it seems like a good idea to\n \tdeprecate use of sprintf().\n\n2013-03-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Applied patch by Brad Smith to improve pkg-config\n\tstatic linking by adding -lm to Libs.private when needed.\n\n2013-03-05  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* html/man/tiff2ps.1.html, html/man/tiffcp.1.html,\n \thtml/man/tiffdither.1.html, man/tiff2ps.1, man/tiffcp.1,\n \tman/tiffdither.1, tools/tiff2ps.c, tools/tiffcp.c,\n \ttools/tiffdither.c: Sync tool usage printouts and man pages with\n \treality (quite a few options had escaped being documented in one\n \tor both places).  Per an old report from Miroslav Vadkerti.\n\n2013-01-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2ps.c:Fix bug in auto rotate option code. Once a\n\trotation angle was set by the auto rotate check, it was retained\n\tfor all pages that followed instead ofa being retested for each\n\tpage.  Patch by Richard Nolde.\n\n2013-01-18  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_write.c: tmsize_t related casting warning fixed for\n\t64bit linux.\n\n\t* libtiff/tif_read.c: uint64/tmsize_t change for MSVC warnings.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2427\n\n2012-12-20  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* test/raw_decode.c: Relax raw_decode's pixel-value checks so that\n\tit will pass with more versions of libjpeg.  (There are at least\n\tthree in active use now, and JPEG_LIB_VERSION doesn't tell us\n\tenough to uniquely identify expected results.)\n\n2012-12-12  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* libtiff/tif_print.c: Fix TIFFPrintDirectory's handling of\n\tfield_passcount fields: it had the TIFF_VARIABLE and\n\tTIFF_VARIABLE2 cases backwards.\n\n2012-12-10  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/ppm2tiff.c: Improve previous patch for CVE-2012-4564:\n \tcheck the linebytes calculation too, get the max() calculation\n \tstraight, avoid redundant error messages, check for malloc\n \tfailure.\n\n2012-12-10  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* libtiff/tif_pixarlog.c: Improve previous patch for CVE-2012-4447\n \t(to enlarge tbuf for possible partial stride at end) so that\n \toverflow in the integer addition is detected.  Per gripe from\n \tHuzaifa Sidhpurwala.\n\n2012-12-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffset.c: tiffset now supports a -u option to unset a\n\ttag.  Patch by Zach Baker. See\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2419\n\n2012-11-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* automake: Update Automake to 1.12.5 release.\n\n\t* libtiff/tif_{unix,vms,win32}.c (_TIFFmalloc): ANSI C does not\n\trequire malloc() to return NULL pointer if requested allocation\n\tsize is zero.  Assure that _TIFFmalloc does.\n\n2012-11-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/ppm2tiff.c: avoid zero size buffer vulnerability.\n\tCVE-2012-4564 - Thanks to Huzaifa Sidhpurwala of the\n\tRed Hat Security Response team for the fix.\n\n2012-10-18  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tif_zip.c: Avoid crash on NULL error messages.\n\n2012-09-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.3 released.\n\n2012-09-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am: Update to Automake 1.12.4\n\n2012-08-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.in: Update to Automake 1.12.3\n\n\t* libtiff{tiff.h, tif_print.c, tif_dirinfo.c, tif_dirread.c}: Add\n\tsome TIFF/FX support in libtiff.  Add the tag definitions to\n\ttiff.h.  Add the related TIFF field definitions to tif_dirinfo.c,\n\tand also fixes an error in a comment.  Adds the photometric values\n\tto tif_print.c, and fixes a bug.  These changes are by Steve\n\tUnderwood.\n\n2012-08-13  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_write.c: Fix bug rewriting image tiles in a\n\tcompressed file: http://trac.osgeo.org/gdal/ticket/4771\n\n2012-08-02  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_dirread.c: report error in case of mismatch value\n\tcounts for tags (ie. DotRange).\n\n2012-07-26  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* libtiff/{tiffio.h, tif_dirinfo.c, libtiff.def}: Add six new\n \tfunctions TIFFFieldTag(), TIFFFieldName(), TIFFFieldDataType(),\n\tTIFFFieldPassCount(), TIFFFieldReadCount(), TIFFFieldWriteCount()\n\tas external accessors for the opaque type TIFFField.\n\n\t* tools/tiffset.c: Make tiffset use the above functions instead of\n\trelying on library private headers.\n\n2012-07-19  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Fix two places where t2p_error didn't get set\n\tafter a malloc failure.  No crash risk AFAICS, but the program\n\tmight not report exit code 1 as desired.  h/t mancha@mac.hush.com\n\n2012-07-18  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Fail when TIFFSetDirectory() fails.  This\n\tprevents core dumps or perhaps even arbitrary code execution when\n\tprocessing a corrupt input file (CVE-2012-3401).\n\n2012-07-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/raw_decode.c (main): Test fixes to work with IJG JPEG 7+.\n\tIJG JPEG 7+ uses a different upsampling algorithm which produces\n\tdifferent numeric results.\n\n\t* libtiff/tif_jpeg.c (JPEGPreDecode): Patch from Even Rouault to\n\twork with IJG JPEG 7+.\n\n2012-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/raw_decode.c: Add changes so that test can run with build\n\tdirectory outside of source directory.\n\n2012-07-02  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_jpeg.c: Fix handling when writing RGBA jpeg compressed\n\timagery (http://trac.osgeo.org/gdal/ticket/4732)\n\n2012-06-20  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_fax3.c: fix memory initialization of runs, only\n\tpartly done.\n\n\t* libtiff/tif_pixarlog.c: Make sure tbuf is large enough for one\n\tfull \"stride\" past the end.\n\n2012-06-19  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_packbits.c: fix read past end of data buffer.\n\n2012-06-15  Frank Warmerdam  <warmerdam@google.com>\n\n\t*  libtiff 4.0.2 released.\n\n\t* tools/tif2pdf.c, tools/tifdump.c: avoid unitialized variable\n\twarnings with clang.\n\n2012-06-15  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Defend against integer overflows while\n\tcalculating required buffer sizes (CVE-2012-2113).\n\n2012-06-12  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_print.c: Be careful about printing corrupt inknames.\n\n\t* libtiff/tif_fax3.c: Ensure runs array is initialized to zeros.\n\n2012-06-07  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_print.c: avoid pretty printing other fields when\n\twe don't have the proper amount and type of data or if the field\n\tis actually autodefined.\n\n2012-06-05  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_tile.c, libtiff/tif_strip.c: Ensure that illegal\n\tycbcrsubsampling values result in a runtime error, not just an\n\tassertion.\n\n\t* tests/custom_dir.c: Add testing of EXIF and custom directory\n\treading and writing.\n\n\t* libtiff/tif_dir.c, libtiff/tiffio.h: Add TIFFCreateCustomDirectory()\n\tand TIFFCreateEXIFDirectory() functions.\n\n\t* libtiff/tif_dir.c, tif_print.c : Remove FIELD_CUSTOM handling for\n\tPAGENUMBER, HALFTONEHINTS, and YCBCRSUBSAMPLING.  Implement DOTRANGE\n\tdifferently.  This is to avoid using special TIFFGetField/TIFFSetField\n\trules for these fields in non-image directories (like EXIF).\n\n2012-06-04  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_jpeg.c: Remove code for fixing up h_sampling and v_sampling\n\tin JPEGPreDecode().  If a fixup will be done it needs to be done sooner\n\tin JPEGFixupTagsSubsampling() or else buffer sized may be wrong.\n\n2012-06-01  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tools/tiffinfo.c: Do not try to read image data in EXIF directories.\n\n\t* libtiff/tif_getimage.c: added support for _SEPARATED CMYK images.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2379\n\n\t* libtiff/tif_unix.c: use strerror() to return a more specific error message\n\ton failed open.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2341\n\n\t* libtiff/tif_jpeg.c: Fix JPEGDecodeRaw() bugs.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2386\n\n\t* tests/decode_raw.c, tests/images/quad-tile.jpg.tiff: add limited support\n\tfor testing jpeg in tiff image decoding including the \"raw\" decode interface.\n\n2012-05-31  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_jpeg.c: avoid overrunning the end of the output buffer in\n\tJPEGDecodeRaw() - mostly likely to occur when there is confusion about\n\tsampling values.\n\n\t* libtiff/tif_read.c: Make sure tif_rawdatasize is cleared when tif_rawdata is freed.\n\n\t* libtiff/tif_getimage.c: Add support for greyscale+alpha c/o J\u00e9r\u00e9mie Laval.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2398\n\n2012-05-29  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_dir.c: avoid using specific set/get logic to process fields in custom directories,\n\tlike EXIF directories.  This fixes problems like a tag \"320\" existing in a custom directory getting\n\tprocessed as if it were a colormap when it isn't really.  Damn the wide variety of argument formulations\n\tto get/set functions for different tags!\n\n\t* libtiff/tif_dir.c: Ensure that we keep track of when tif_rawdata\n\tis a pointer into an mmap()ed file via TIFF_BUFFERMMAP flag.\n\n2012-05-24  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_pixarlog.c: Allocate working buffer one word larger since we \"forward\n\taccumulate\" and overwrite the end by one word in at least some cases.\n\n2012-05-23  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_pixarlog.c: avoid accessing out of the lookup arrays for out of range inputs.\n\n\t* tools/tiffinfo.c: initialize h=0 to avoid undefined variable for degenerate files.\n\n\t* libtiff/tif_ojpeg.c: if OJPEGWriteHeader() fails once do not bother trying again on\n\tthe same image.\n\n\t* libtiff/tif_ojpeg.c: make things more resilient in the face of files without\n\tstripbytecounts or stripoffsets or where loading these fails.\n\n\t* libtiff/tif_print.c: be careful about whether min/max values are singular\n\tor one per sample.\n\n\t* libtiff/tif_print.c: Avoid confusion about count size when printing custom fields.\n\tMay affect things like ISOSpeedRatings.\n\n\t* libtiff/tif_dir.c: avoid one byte past end of ink names reading\n\tin some cases.\n\n2012-05-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* man/TIFFGetField.3tiff: Correct the 'count' field type in the\n\texample for how to retreive the value of unsupported tags.\n\n2012-03-30  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tif_getimage.c: Fix size overflow (zdi-can-1221,CVE-2012-1173)\n\tcare of Tom Lane @ Red Hat.\n\n2012-02-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.1 released.\n\n\t* Update automake used to 1.11.3.\n\n\t* libtiff/tiffio.h: Use double-underbar syntax in GCC printf\n\tattribute specification to lessen the risk of accidental macro\n\tsubstitution.  Patch from Vincent Torri.\n\n2012-01-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c, libtiff/tif_dirread.c: Extra caution around\n\tassumption tag fetching is always successful.\n\n\t* libtiff/tif_jpeg.c: Extra caution for case where sp is NULL.\n\n2012-01-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Add support for using library symbol versioning on\n\tELF systems with the GNU linker.  Support is enabled via\n\t--enable-ld-version-script.  Disabled by default for now until\n\tthere is a decision for how to deploy a libtiff with versioned\n\tsymbols after libtiff 4.0.0 was already released.\n\n2011-12-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_win32.c: Eliminate some minor 64-bit warnings in\n\n\ttif_win32.c.  Patch by Edward Lam.\n\n\t* configure.ac: Add libtiff private dependency on -llzma for\n\tpkg-config.  Patch by Mark Brand.\n\tUpdated Automake to 1.11.2.\n\n2011-12-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0 released.\n\n2011-12-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c, libtiff/tif_read.c: more cautious checking\n\tof _TIFFFillStriles() results (#gdal 4372)\n\n2011-12-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: fixes to deal with invalid files where\n\t_TIFFFillStriles() fails, and we try to chop up strips (gdal #4372)\n\n\t* libtiff/tif_dirread.c: fix error reporting when there is no\n\ttag information struct and name (gdal #4373)\n\n2011-10-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Update GNU libtool to 2.4.2.\n\n\t* tools/tiffsplit.c (tiffcp): TIFFGetField count field should be\n\tuint32 type for TIFFTAG_JPEGTABLES.  Patch by Christophe\n\tDeroulers.\n\n2011-06-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Restore TIFFMergeFieldInfo.\n\n2011-05-31  Jim Meyering  <meyering@redhat.com>\n\n\t* libtiff/tif_dirread.c (TIFFFetchStripThing): Free \"data\" also\n\tupon failure to allocate \"resizeddata\".\n\t* tools/tiff2ps.c (PSDataBW): Zero buffer *after* checking for\n\tallocation failure, not before.\n\t* libtiff/tif_ojpeg.c: plug leaks on OJPEG read failure path\n\t* tools/rgb2ycbcr.c (cvtRaster): unchecked malloc\n\t* libtiff/tif_jpeg.c, tools/tiff2pdf.c, tools/tiff2ps.c: mark\n\tNULL-deref and possible overflow\n\t* tools/tiff2pdf.c: remove decl+set of set-but-not-used local, \"written\"\n\t* libtiff/tif_jpeg.c (JPEGInitializeLibJPEG): Remove declaration\n\tand set of otherwise unused local, data_is_empty.\n\t* libtiff/tif_jpeg.c (JPEGDecodeRaw) [JPEG_LIB_MK1_OR_12BIT]:\n\tDiagnose out-of-memory failure and return 0 rather than\n\tdereferencing NULL.\n\n2011-05-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: produce special error message for zero tag\n\tdirectories instead of error out on the malloc(0) failure.\n\n2011-05-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Restore TIFFMergeFieldInfo() and\n\trelated declarations as they are in active use by libraries\n\tsuch as libgeotiff, and work just fine.  (#2315)\n\n2011-04-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c,tiffio.h: Remove the obsolete\n\tTIFFMergeFieldInfo/TIFFFindFieldInfo/TIFFFindFieldInfoByName API.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2315\n\n\t* libtiff/libtiff.def: add some missing (64bit) APIs.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2316\n\n2011-04-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0beta7 released.\n\n2011-04-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Should use AC_CANONICAL_HOST since host specifies\n\tthe run-time target whereas target is used to specify the final\n\toutput target if the package is a build tool (like a compiler),\n\twhich libtiff is not.  Resolves libtiff bug 2307 \"Use\n\tAC_CANONICAL_HOST macro\".\n\n2011-04-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Support configuring TIFF_INT64_FORMAT and\n\tTIFF_UINT64_FORMAT appropriately for MinGW32.\n\n\t* tools/tiffdump.c (ReadDirectory): MinGW32 needs to use WIN32\n\tprintf conventions for 64-bit types because it uses the WIN32 CRT.\n\n\t* libtiff/{tif_dumpmode.c,tif_luv.c,tif_lzw.c,tif_print.c,\n\ttif_read.c,tif_strip.c,tif_thunder.c}: MinGW32 needs to use WIN32\n\tprintf conventions for 64-bit types because it uses the WIN32 CRT.\n\n\t* tools/tiff2pdf.c (t2p_write_pdf_string): Fix printf syntax not\n\tunderstood by WIN32 CRT.\n\n\t* libtiff/tif_ojpeg.c: Fixes to compile with MinGW32 GCC.\n\n\t* tools/fax2ps.c (main): Use tmpfile() rather than mkstemp() since\n\tit is much more portable.  Tmpfile is included in ISO/IEC\n\t9899:1990 and the WIN32 CRT.\n\n2011-03-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffset.c: add -d and -sd switches to allow operation on\n\ta particular directory, not just the first (jef).\n\n2011-03-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_thunder.c: Correct potential buffer overflow with\n\tthunder encoded files with wrong bitspersample set.  The libtiff\n\tdevelopment team would like to thank Marin Barbella and TippingPoint's\n\tZero Day Initiative for reporting this vulnerability (ZDI-CAN-1004,\n\tCVE-2011-1167).\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2300\n\n2011-03-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.h: Fix to last change allowing zero length\n\truns at the start of a scanline - needed for legal cases.\n\n2011-03-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.h: Protect against a fax VL(n) codeword commanding\n\ta move left.  Without this, a malicious input file can generate an\n\tindefinitely large series of runs without a0 ever reaching the right\n\tmargin, thus overrunning our buffer of run lengths.  Per CVE-2011-0192.\n\tThis is a modified version of a patch proposed by Drew Yao of Apple\n\tProduct Security.  It adds an unexpected() report, and disallows the\n\tequality case, since emitting a run without increasing a0 still allows\n\tbuffer overrun.\n\n2011-02-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: avoid divide by zero in degenerate case (#2296)\n\n\t* tools/tiff2rgba.c: close source file on error to make leak\n\tdetection easier.\n\n\t* libtiff/tif_getimage.c: avoid leaks if TIFFRGBAImageBegin() fails.\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2295\n\n2011-02-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzma.c: Maintain tif_rawcc/tif_rawcp (CHUNKY_STRING_READ\n\t_SUPPORT)\n\n2011-02-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure.ac, configure: Added support for --enable-chunky-strip-read\n\tconfigure option to enable the experimental feature from a couple\n\tmonths ago for reading big strips in chunks.\n\n\t* configure.ac, tif_read.c, tif_readdir.c, tif_dir.h, tiffiop.h,\n\ttif_write.c, tif_print.c, tif_jpeg.c, tif_dirwrite.c, tif_write.c:\n\tImplement optional support for deferring the load of strip/tile\n\toffset and size tags for optimized scanning of directories.  Enabled\n\twith the --enable-defer-strile-load configure option (DEFER_STRILE_LOAD\n\t#define in tif_config.h).\n\n2011-02-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: remove unused variable.\n\n2011-02-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_win32.c: avoid error/warning buffer overrun problem\n\twith non-console (popup message) builds on win32.\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2293\n\n2011-01-24  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/{tif_dir.{h,c}, tif_dirinfo.c, tif_dirread.c, tif_dirwrite.c,\n\ttif_print.c, tiff.h, tiffiop.h} : Added support for\n\tTIFFTAG_SMINSAMPLEVALUE and TIFFTAG_SMAXSAMPLEVALUE to have different\n\tvalues for each sample. Presents the min/max of all samples by default for\n\tcompatibility. TIFFSetField/TIFFGetField can be made to handle those tags\n\tas arrays by changing the new TIFFTAG_PERSAMPLE pseudo tag.\n\thttp://www.asmail.be/msg0055458208.html\n\n2011-01-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_pixarlog.c: Note that tif_rawcc/tif_rawcp are not\n\tmaintained.\n\n\t* libtiff/tif_zip.c: Maintain tif_rawcc/tif_rawcp when decoding\n\tfor CHUNKY_STRIP_READ_SUPPORT.\n\n\t* libtiff/tif_jpeg.c: ensure that rawcc and rawcp are maintained\n\tduring JPEGPreDecode and JPEGDecode calls.\n\t* libtiff/tif_read.c: larger read ahead for CHUNKY_STRIP_READ_SUPPORT,\n\tas compression formats like JPEG keep 16 lines interleaved in a sense\n\tand might need to touch\tquite a bit of data.\n\n\thttp://trac.osgeo.org/gdal/ticket/3894\n\n2011-01-03  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: Fix regressions with 2 and 3 band images\n\tcaused by commit on 2010-12-14.  Submitted by e-mail from\n\tEven Rouault <even.rouault@mines-paris.org>\n\n2010-12-31  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_dirwrite.c: Fixed writing of TIFFTAG_REFERENCEBLACKWHITE.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2266\n\n2010-12-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c, man/tiffcp.1: Added support for specifying the\n\tcompression level parameter (preset) for Deflate and LZMA encoders,\n\te.g \"-c lzma:p1\" or \"-c zip:p9\".\n\n\t* libtiff/tif_lzma.c: Properly set the LZMA2 compression level\n\t(preset) in LZMAVSetField().\n\n2010-12-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/Makefile.am (libtiff_la_SOURCES): Added tif_lzma.c to\n\tMakefile.\n\n2010-12-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/{tif_codec.c, tif_config.h.in, tiff.h,\n\ttiffiop.h, tif_lzma.c}, tools/tiffcp.c, man/tiffcp.1: Implement a new\n\tTIFF compression scheme LZMA reserving a new value 34925 for\n\tCompression tag. As per\n\tbug http://bugzilla.maptools.org/show_bug.cgi?id=2221\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_dirread.c: tolerate some cases where\n\tFIELD_COLORMAP is missing\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2189\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_read.c: change read_ahead to tmsize_t\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2222\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* configure.ac, libtiff/Makefile.am: Build tif_win32.c on\n\tWindows except on Cygwin\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2224\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/gif2tiff.c: fix buffer overrun\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2270\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: reduce usage of JCS_UNKNOWN in order\n\tto improve compatibility with various viewers\n\tsubmitted by e-mail from Dwight Kelly <dkelly@apago.com>\n\n2010-12-13  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/fax2ps.c: be consistent with page-numbering\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2225\n\n2010-12-13  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_color.c: prevent crash in handling bad TIFFs\n\tresolves CVE-2010-2595\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2208\n\n2010-12-13  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiffcrop.c: new release by Richard Nolde\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2004\n\n2010-12-12  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2pdf.c: fix colors for images with RGBA\n\tinterleaved data\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2250\n\n2010-12-12  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_dirread.c: fix for Zeiss LSM and Canon CR2 files\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2164\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2pdf.c: remove invalid duplication for Lab\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2162\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: fix use of clumplines calculation\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2149\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/fax2ps.c: replace unsafe tmpfile() with mkstemp()\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2118\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_ojpeg.c, libtiff/tif_pixarlog.c,\n\t  libtiff/tif_zip.c: fix build errors for VC6\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2105\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_stream.cxx: warnings cleanup\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2091\n\t* libtiff/tif_dirread.c: warnings cleanup\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2092\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2pdf.c: add fill-page option\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2051\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_dirread.c: modify warnings\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2016\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_ojpeg.c: fix buffer overflow on problem data\n        http://bugzilla.maptools.org/show_bug.cgi?id=1999\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiffinfoce.c: strip byte counts are uint64* now\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n        * libtiff/tif_ojpeg.c: fix crash when reading a TIFF with a zero\n        or missing byte-count tag\n        * tools/tiffsplit.c: abort when reading a TIFF without a byte-count\n        per http://bugzilla.maptools.org/show_bug.cgi?id=1996\n\n2010-12-08  Lee Howard <faxguy@howardsilvan.com>\n\n        * libtiff/tif_dirread.c: fix crash when reading a badly-constructed\n        TIFF per http://bugzilla.maptools.org/show_bug.cgi?id=1994\n\n2010-12-06  Lee Howard <faxguy@howardsilvan.com>\n\n        * libtiff/tif_open.c: Fix mode check before opening a file.\n        http://bugzilla.maptools.org/show_bug.cgi?id=1906\n\n2010-11-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff-4.pc.in: Added libtiff pkg-config .pc file support.\n\tPatch by Vincent Torri.\n\n2010-10-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffinfo.c: avoid direct reference to _TIFFerrorHandler.\n\n\t* libtiff/tif_config.vc.h: define snprintf to _snprintf for tiff2pdf.\n\n\t* libtiff/libtiff.def: export _TIFFCheckMalloc for tools.\n\n2010-09-25  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2ps.c: improvements and enhancements from Richard Nolde\n\twith additional command line options for Document Title,\n\tDocument Creator, and Page Orientation\n\n2010-07-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Patch from Richard Nolde to avoid a\n\tpotentially unterminated buffer due to using an exceptionally long\n\tfile name.\n\n2010-07-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Fixed ID buffer filling in\n\tt2p_write_pdf_trailer(), thanks to Dmitry V. Levin.\n\n2010-07-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Really reset the tag count in CheckDirCount()\n\tto expected value as the warning message suggests. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1963\n\n2010-07-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: Properly handle TIFFTAG_PAGENUMBER,\n\tTIFFTAG_HALFTONEHINTS, TIFFTAG_YCBCRSUBSAMPLING, TIFFTAG_DOTRANGE\n\twhich should be set by value.\n\n\t* libtiff/tif_dirinfo.c: Don't use assertions in _TIFFFieldWithTag()\n\tand _TIFFFieldWithName() if the tag is not found in the tag table.\n\tThis should be normal situation and returned NULL value should be\n\tproperly handled by the caller.\n\n2010-07-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Avoid wrong math du to the signed/unsigned\n\tinteger type conversions. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2207\n\n\t* tools/{tiff2bw.c, thumbnail.c, pal2rgb.c}: Fix the count for\n\tWhitePoint tag as per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2042\n\n\t* libtiff/tif_getimage.c: Check the number of samples per pixel when\n\tworking with YCbCr image in PickContigCase(). As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2216\n\n\t* libtiff/tif_dir.c: Set the bogus post-decoding hook when processing\n\tTIFFTAG_BITSPERSAMPLE in _TIFFVSetField() for the case of 8 bit when\n\twe don't need any post-processing. That helps to reset the hook if we\n\tpreviously set this field to some other value and the hook was\n\tinitialized accordingly. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2035\n\n2010-07-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffgt.c: Properly check the raster buffer allocations for\n\tinteger overflows. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2108\n\n\t* m4/acinclude.m4: Update GL/GLU/GLUt/Pthread macros from the\n\tupstream.\n\n\t* libtiff/{tif_aux.c, tif_strip.c, tif_tile.c, tiffiop.h}: Move\n\tmultiply_32() and multiply_64() functions into tif_aux.c file and\n\trename them into _TIFFMultiply32() and _TIFFMultiply64() respectively.\n\n2010-06-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Better generation of ID field in\n\tt2p_write_pdf_trailer(). Get rid of GCC aliasing warnings.\n\n\t* tools/tiff2pdf.c: Fixed computation of the tile buffer size when\n\tconverting JPEG encoded tiles.\n\n\t* tools/tiff2pdf.c: Better handling of string fields, use static\n\tstring buffers instead of dynamically allocated, use strncpy() instead\n\tof strcpy(), control the string lengths.\n\n2010-06-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Initialize buffer arrays with zero to avoid\n\treferencing to uninitialized memory in some cases (e.g. when tile size\n\tset bigger than the image size).\n\n2010-06-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Patch from Richard Nolde. Reject YCbCr\n\tsubsampled data since tiffcrop currently doesn't support it.  Fix\n\tJPEG support.\n\n2010-06-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Fix invocation of tag compare function (#2201)\n\n\t* tools/tiff2pdf.c: Fix assorted bugs in tiff2pdf: missing \"return\"\n\tin t2p_read_tiff_size() causes t2p->tiff_datasize to be set entirely\n\twrong for COMPRESSION_JPEG case, resulting in memory stomp if actual\n\tsize is larger.  Also, there are a bunch of places that try to\n\tmemset() a malloc'd buffer before checking for malloc failure, which\n\twould result in core dump if there actually were a failure. (#2211)\n\n2010-06-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h (TIFFSafeMultiply): Need more castings to\n\tavoid compiler warnings if parameter types are not sign\n\tconsistent.\n\n\t* libtiff 4.0.0alpha6 released.\n\n\t* tools/tiffcrop.c: Applied patch from Richard Nolde: Corrected\n\tEuropean page size dimensions.  Added an option to allow the user\n\tto specify a custom page size on the command line.  Fix the case\n\twhere a page size specified with a fractional part was being\n\tcoerced to an integer by retyping the variables that define the\n\tpaper size.\n\n\t* html/index.html: Update for the 3.9.3 release.\n\n\t* tools/tiffcp.c (tiffcp): Applied Tom Lane's patch to reject\n\tYCbCr subsampled data since tiffcp currently doesn't support it.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2097\n\n\t* Update libtool to version 2.2.10.\n\n2010-06-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h (TIFFSafeMultiply): Work properly if\n\tmultiplier is zero.\n\n2010-06-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_fax3.c (Fax3SetupState): Yesterday's fix for\n\tCVE-2010-1411 was not complete.\n\n\t* libtiff/tiffiop.h (TIFFSafeMultiply): New macro to safely\n\tmultiply two integers.  Returns zero if there is an integer\n\toverflow.\n\n\t* tools/tiffcp.c (main): tiffcp should not leak memory if an error\n\tis reported when reading the input file.\n\n2010-06-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Update libtool to version 2.2.8.\n\n\t* libtiff/tif_fax3.c (Fax3SetupState): Avoid under-allocation of\n\tbuffer due to integer overflow in TIFFroundup() and several other\n\tpotential overflows.  In conjunction with the fix to TIFFhowmany(),\n\tfixes CVE-2010-1411.\n\n\t* libtiff/tiffiop.h (TIFFhowmany): Return zero if parameters would\n\tresult in an integer overflow. This causes TIFFroundup() to also\n\treturn zero if there would be an integer overflow.\n\n\t* contrib: Add an emacs formatting mode footer to all source files\n\tso that emacs can be effectively used.\n\n2010-06-03  Oliver Chen Feng <scip8183@gmail.com>\n\n\t* libtiff/tools/tiffcp.c: add a new option -x to force merged tiff\n\tfile PAGENUMBER value in sequence for users who care the page\n\tsequence, this will also prevent tiff2pdf from creating pdf file from\n\tthe merged tiff file with wrong page sequence.\n\n2010-05-08  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_dirread.c: Restored TIFFReadDirEntryFloat function in order\n\tto add missing TIFF_SETGET_FLOAT case to TIFFFetchNormalTag.\n\t* libtiff/tif_dirinfo.c: Use correct set_field_type for\n\tTIFFTAG_PIXAR_FOVCOT so it is readable again (regression from 3.9.2).\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2192\n\n2010-05-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Ensure that quality is always set in\n\tJPEGPreEncode(), not just when we want to output local tables.\n\tOtherwise the quality used during compression may not be right and\n\tmight not match the tables in the tables tag.   This bug only occurs\n\twhen seeking between directories in the midst of writing blocks.\n\thttp://trac.osgeo.org/gdal/ticket/3539\n\n2010-05-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* html/man/TIFFGetField.3tiff.html, html/man/TIFFSetField.3tiff.html:\n\tRegenerated from the source.\n\n2010-05-05  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_print.c: Fixed printing of TIFFTAG_REFERENCEBLACKWHITE which\n\thad stopped working. Also made it always print 6 floats instead of\n\t2*SamplesPerPixel.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2191\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2186\n\t* man/TIFFGetField.3tiff, man/TIFFSetField.3tiff: Fixed doc to reflect the\n\tfact that libtiff considers TIFFTAG_REFERENCEBLACKWHITE to be 6 floats.\n\n2010-05-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Fix to use memcmp(), not memcpy() when checking\n\tif the jpeg table was written.  This is a fix for the last fix on 04-21.\n\n2010-04-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: avoid preparing jpeg tables everytime\n\tJPEGSetupEncode() is called if the tables already seem to be\n\testablished.  This prevents spurious updates and rewriting of\n\tdirectories with jpegtables when doing updates to existing images.\n\thttp://trac.osgeo.org/gdal/ticket/3539\n\n2010-04-20  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_dirinfo.c: Use correct set_field_type for\n\tTIFFTAG_PIXAR_IMAGEFULLWIDTH, TIFFTAG_PIXAR_IMAGEFULLLENGTH,\n\tTIFFTAG_PIXAR_MATRIX_WORLDTOSCREEN and TIFFTAG_PIXAR_MATRIX_WORLDTOCAMERA.\n\tThey were unreadable with TIFF_SETGET_UNDEFINED, a regression from 3.9.2.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2139\n\n2010-04-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dir.c (_TIFFVSetField): Add a special error case for\n\twhen the tag count value is zero.  Error handling is still a\n\tregression since in 3.9.2, empty tags are skipped (with a warning)\n\trather than returning a hard error and refusing to read the file.\n\n\t* tools/ppm2tiff.c (main): While case for parsing comment line\n\trequires extra parenthesis to work as expected.  Reported by\n\tThomas Sinclair.\n\n2010-04-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_read.c (primarily): Add support for\n\tCHUNKY_STRIP_READ_SUPPORT where large strips are\n\tread in chunks for applications using TIFFReadScanline().\n\tThis is intended to make it more practical work with very\n\tlarge compressed one-strip files.   Feature is off by default.\n\tEnable by defining CHUNK_STRIP_READ_SUPPORT as a macro.\n\thttp://trac.osgeo.org/gdal/ticket/3514\n\n2010-03-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_flush.c: Use TIFFRewriteDirectory() when flushing\n\tdirectories so previously placed directories will be migrated to\n\tthe end of file if needed.\n\n2010-03-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c: change type of dec_bitsleft field to uint64\n\tto support operating on strips/tiles of more than 256MB.\n\thttp://trac.osgeo.org/gdal/ticket/3512\n\n2010-03-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_aux.c (_TIFFCheckRealloc): Improve error message so\n\tthat it is clearly a memory allocation error message, and also\n\tincludes the size of the allocation request.\n\n2010-02-22  Lee Howard  <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: Do not generate a JPEGTables tag when creating\n\tthe JPEG TIFF as is is not required in order to prevent it from\n\tbeing unused and filled with invalid data.  (Leave it to be\n\tgenerated by later activity.)\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2135\n\t* tools/tiff2pdf.c: Write the JPEG SOI headers into the TIFF strip\n\tdata rather than skipping them.  This fixes the ability to view in\n\tAcrobat Reader, Evince, and Ghostscript.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2135\n\t* libtiff/tif_fax3.c: Don't return error on badly-terminated MMR\n\tstrips.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2029\n\n2009-12-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Made JPEGDecodeRaw() check for buffer overruns.\n\tMade so that when working with downsampled images a stub function\n\treporting an error is used for tif_decoderow.  We cannot meaningfully\n\tsupport reading scanlines in this situation.  (#1936)\n\n\t* libtiff/tif_jpeg.c: Ensure that tif_scanlinesize is computed after\n\tresetting of the upsampling values (gdal:#3259).\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1936\n\n2009-11-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* contrib/dbs/tiff-grayscale.c, contrib/tif-palette.c,\n\ttools/ras2tiff.c: Fix resource leaks on error.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2121\n\n\t* libtiff/tif_{aux.c,dir.c,dir.h,dirinfo.c}: Return to handling\n\tTIFFTAG_REFERENCEBLACKWHITE as a field in the TIFF directory instead\n\tof as a custom(generic) field to avoid a potential reentrancy problem.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2125\n\n\t* libtiff/tif_color.c, libtiff/tif_getimage.c, libtiff/tiffio.h,\n\tman/TIFFcolor.3tiff: Make TIFFDisplay argument in TIFFCIELabToRGBInit\n\tconst, and display_sRGB static and const.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2124\n\n2009-11-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0alpha5 released.\n\n2009-11-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Updated tiffcrop from Richard Nolde.  This\n\tversion has undergone substantial testing with arbitrary sample\n\tbit depths.  Also eliminates GCC compilation warnings.\n\n2009-11-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* port/libport.h: Add extern declarations for getopt standard\n\tglobals.\n\n2009-10-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_lzw.c (LZWDecode, LZWDecodeCompat): Fix warnings\n\tnoticed in 64-bit build of libtiff with Visual Studio 2005.\n\tResolves \"Bug 2067 - Visual Studio 2005 64-bit warnings in\n\ttif_lzw.c\", http://bugzilla.maptools.org/show_bug.cgi?id=2067\n\n\t* libtiff/tif_pixarlog.c (PixarLogEncode): Fix non-important\n\twarning noticed in Visual Studio 2005 build. Resolves \"Bug 2068 -\n\tVisual Studio 2005 64-bit warning in tif_pixarlog.c\",\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2068\n\n2009-10-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirread.c: Eliminate GCC \"dereferencing type-punned\n\tpointer\" warnings.\n\n2009-10-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/tools.html: Add manual page links, and a summary\n\tdescription of tiffcrop.\n\n2009-10-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: x86_64 should use the same fill order as i386.\n\n2009-09-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: New tiffcrop from Richard\n\tNolde.  Major updates to add significant functionality for reading\n\tand writing tile based images with bit depths not a multiple of 8\n\twhich cannot be handled by tiffcp.\n\n2009-09-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_ojpeg.c (OJPEGWriteHeaderInfo): IJG JPEG 7 needs\n\tdo_fancy_upsampling=FALSE in order to read raw data.  Resolves\n\t\"Bug 2090 - OJPEG crash with libjpeg v7\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2090\n\n2009-09-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Fixed error recognition handling in RGBA\n\tinterface when stoponerror is set.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2071\n\n2009-08-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/{tiffcrop.c,tiffgt.c}: Applied patch from Oden Eriksson to\n\tfix build with gcc when using the \"-Wformat\n\t-Werror=format-security\" flags.\n\n2009-08-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/{bmp2tiff_palette.sh, bmp2tiff_rgb.sh, gif2tiff.sh,\n\tppm2tiff_pbm.sh, ppm2tiff_pgm.sh, ppm2tiff_ppm.sh}: Additional\n\tutilities tests.\n\n2009-08-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffinfo.c: tiffinfo should return error status to the\n\tcaller.  Register a private error callback to accomplish that.\n\n\t* test/Makefile.am (TIFFIMAGES): Add test images in BMP, GIF, and\n\tPNM formats so that we will be able to test more of the tools.\n\tWhile adding these test images I notice that bmp2tiff and gif2tiff\n\tonly support ancient versions of their respective formats.\n\n2009-08-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0alpha4 released.\n\n\t* HOWTO-RELEASE: Improved release instructions.\n\n2009-08-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* man/{TIFFClose.3tiff,raw2tiff.1,tiffcmp.1,tiffsplit.1}: Applied\n\tfixes for \"Bug 2023 - nroff errors in manual pages\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2023\n\n\t* tools/{rgb2ycbcr.c, tiff2rgba.c}: Applied fixes for \"Bug 2079 -\n\tCVE-2009-2347 libtiff: integer overflows in various inter-color\n\tspace conversion tools\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2079\n\n\t* libtiff/tif_print.c (TIFFPrintDirectory): Apply fix from Jay\n\tBerkenbilt for \"Bug 2024 - possible null pointer dereference with\n\tone-line fix\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2024\n\n\t* libtiff/tif_dirread.c (TIFFReadCustomDirectory): Apply patch\n\tfrom Jay Berkenbilt for \"Bug 1895 - logic error in tif_dirread.c:\n\tsegfault after setting tdir_tag = IGNORE\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1895\n\n2009-08-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am, test/tiffcrop*.sh: Split previously existing\n\ttiffcrop.sh into a collection of many specific tests.  Re-wrote\n\tall of the existing tests to be based on some simple shell\n\tfunctions.  Make distcheck works again.\n\n\tExport certain variables (MAKE, MAKEFLAGS, MEMCHECK) to tests and\n\tadded 'memcheck' and 'ptrcheck' targets to make it easy to run the\n\ttests under valgrind.\n\n2009-08-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/tiffcp-logluv.sh: Fix test so that it works with a VPATH\n\tbuild.\n\n\t* test/Makefile.am (AUTOMAKE_OPTIONS): Colorized tests was not\n\tactually activated since it needed to be enabled in this\n\tMakefile.am.  Also activated parallel-tests mode since it offers\n\tuseful features such as per-test .log files and a summary test\n\treport .log file.\n\n2009-08-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Updated autotools.  Autoconf 2.64, Automake 1.11,\n\tlibtool 2.2.6.  Enabled support for silent build rules\n\t(--enable-silent-rules or 'make V=0') and colorized tests.\n\n\t* html/{index.html, v3.9.0.html}: Update for 3.9.0 release.\n\n2009-06-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tests/tiffcp-logluv.sh: minimal testing of sgilog compression.\n\n\t* tools/tiffcp.c: add -c sgilog support.\n\n\t* libtiff/tif_luv.c: correct return codes from encoderow to be\n\t1 on success instead of zero.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2069\n\n\t* libtiff/tif_lzw.c: back out patch from #2065 and apply patch from\n\t#1085 for a better underflow fix that errors properly.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2065\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1985\n\n2009-06-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_strip.c: Remove an inappropriate assertion that often\n\tfails on oddly sized 12bit jpeg compressed ycbcr images.\n\n2009-06-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c: Fix buffer underflow bug.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2065\n\n2009-06-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure.ac, libtiff/tif_jpeg.c, libtiff/tif_jpeg_12.c: add support\n\tfor dual mode 8/12 bit jpeg support.\n\n2009-06-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: do not override the planar configuration to be\n\tcontig for one sample files if planar configuration is already set.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2057\n\n2009-06-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Add TIFFUnsetField.\n\n2009-05-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/{tif_jpeg.c,tif_ojpeg.c,tif_getimage.c}: Fixed various\n\terror reports to use \"%s\" as format string.\n\thttp://trac.osgeo.org/gdal/ticket/2976\n\n2009-03-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/{tif_fax3.c,tif_jpeg.c,tif_ojpeg.c}: Fix printdir chaining\n\tfor some codecs (#2020).\n\n2009-02-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_luv.c: Fix handling of tiled logluv images.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2005\n\n2009-02-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Improve allocation safety when allocated\n\tbuffer for large tags.  (#1998)  Related to (#1993)\n\n2009-02-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffcrop.c: Don't default image->res_unit to INCH.  Now the\n\ttest suite should pass.\n\n2009-02-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Re-incorporated a sanity check on tag size,\n\tbut at the 2GB boundary to avoid overflow on 32bit systems.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1993\n\n\t* libtiff/tif_dirread.c: Remove some assertions that blow due to\n\tcorrupt files rather than in response to library internal\n\tinconsistencies.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1995\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1991\n\n\t* libtiff/tif_dirread.c: Fixed testing for failed result from\n\tTIFFReadDirectoryFindFieldInfo().\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1992\n\n2009-01-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_predict.c: Add support for 32bit integer horz. predictors.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1911\n\n\t* libtiff/tif_dirwrite.c: Fix byte swapping of next directory offset.\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1924\n\n\t* tools/tiffcrop.c: initialize xres/yres values.\n\n\t* test/*.sh - default ${srcdir} to local directory.\n\n\t* test/common.sh - start verbose mode after common settings.\n\n\t* libtiff/tif_dirinfo.c: Replace lfind() with local equivelent to\n\tavoid type mismatches on different platforms.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1889\n\n2009-01-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/{fax2tiff.c,thumbnail.c,tiff2pdf.c,tiff2ps.c,tiffdump.c,\n\ttiffsplit.c}: avoid warnings, mostly 32bit/64bit casting issues.\n\n\t* port,tools: Introduce libport.h, and include in tools if NEED_LIBPORT\n\tdefined, primarily to reduce prototype warnings on windows.\n\n\t* libtiff/tif_dirinfo.c,tif_dirread.c: Avoid warnings\n\tabout unused parameters, and uninitialized variables.\n\n2009-01-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/common.sh: Execute tests like 'make VERBOSE=TRUE check' in\n\torder to trace full execution detail while executing the test suite.\n\n2009-01-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffsplit.c: fix sampleformat to be shortv instead of longv.\n\n2009-01-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am (CLEANFILES): Make sure that test output files\n\tare removed by 'make clean'\n\n\t* Update autotools for 4.0.0 beta3\n\n\t* 4.0.0 beta3 produced.\n\n2009-01-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/tiffcrop.sh: New test script for tiffcrop from Richard\n\tNolde.\n\n\t* tools/tiff2ps.c: Remove spurious message to stderr.\n\n2009-01-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2ps.c: Incorporated significant functionality update\n\tfrom Richard Nolde.  In particular, support for rotating the image\n\tby 90, 180, 270, and 'auto' has been added.\n\n\t* man/tiffcrop.1: Incorporated documentation updates from Richard\n\tNolde.\n\n\t* tools/tiffcrop.c: Incorporated significant functionality update\n\tfrom Richard Nolde.\n\n2008-12-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffio.h: GCC will now validate format specifications\n\tfor TIFFError(), TIFFErrorExt(), TIFFWarning(), and\n\tTIFFWarningExt() in order to reveal bugs.\n\n\t* Many fixes throughout to work better as a 64-bit build.\n\n2008-12-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/{tiff2pdf.c, tiff2ps.c, tiffinfo.c}: Offset and length\n\ttags now require 64-bit parameter rather than 32-bit.\n\n\t* libtiff/tif_dirread.c: Fixed issues with unaligned access to\n\t64-bit values.\n\n\t* tools/thumbnail.c: Eliminate crash noticed while running test\n\tsuite.\n\n2008-12-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_ojpeg.c (OJPEGLibjpegJpegSourceMgrFillInputBuffer):\n\tInitialize stack variables to avoid compiler warning.\n\n\t* tools/tiffinfoce.c (main): Use toff_t for offset type when\n\tretrieving offset of EXIF IFD.\n\n\t* libtiff/tiffio.h: Undeprecate toff_t and restore its use in the\n\tTIFFClientOpen() callback and other external function definitions.\n\n\t* tools/tiffinfo.c (main): Offset to EXIF IFD requires a 64-bit\n\ttype now.  Fixes crash when dumping files containing an EXIF IFD.\n\n\t* m4/libtool.m4: Update to libtool 2.2.6.\n\n2008-12-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c, tiffio.h: Introduce TIFFUnsetField() function.\n\n\t* libtiff/tif_jpeg.c: Avoid errors if the application writes a full\n\tstrip for the last partial strip in a jpeg compressed file.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1981\n\n2008-10-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_flush.c: Make sure that BEENWRITING is cleared when\n\twe take the shortcut to only update the strip/tile offsets in place.\n\thttp://trac.osgeo.org/gdal/ticket/2621\n\n2008-10-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jbig.c: Support the JBIG-KIT 2.0 (compatibility with\n\tthe older versions retained).\n\n2008-10-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Add #ifdefs for changes needed if using\n\tIPP enabled version of libjpeg from Intel.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1951\n\n2008-09-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Use byte counts of proper size (uint64).\n\tRequired for libtiff 4.0.\n\n\t* tools/tiffsplit.c: Use dynamically allocated array instead of static\n\twhen constructing output file names.\n\n2008-09-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Get rid of unsafe strcpy()/strcat() calls when\n\tdoing the filename/path construction.\n\n\t* tools/tiff2pdf.c: More appropriate format string in\n\tt2p_write_pdf_string(); avoid signed/unsigned mismatch.\n\n\t* libtiff/tif_lzw.c: Properly zero out the codetable. As per bug\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1929\n\n\t* libtiff/tif_lzw.c: Properly zero out the string table. Fixes\n\tCVE-2008-2327 security issue.\n\n2008-09-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Avoid unused TIFFReadDirEntryFloat() function.\n\n\t* libtiff/tif_dirwrite.c: modified to write IFDs as either IFD8 or IFD\n\tdepending on whether the file is bigtiff or classic tiff.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1917\n\n2008-08-12  Edward Lam  <edward@sidefx.com>\n\n\t* tools/tiffdump.c: When compiling for Microsoft Windows, apply\n\tconsistent (__int64) casting when testing if _lseeki64 has\n\tsuccessfully seeked as requested.  This is necessary for large\n\tfile support to work since off_t is only 32-bit.\n\n2008-07-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_strip.c: Replace assertions related to samplesperpixel != 3 or\n\tthe subsampling values not being 1, 2 or 4 (for jpeg compressed images)\n\twith control logic to return runtime errors (c/o Even Rouault) (#1927).\n\n2008-06-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffcrop.c: Fix some portability problems.\n\n\t* libtiff/tif_ojpeg.c: Use same jpeg/win32 boolean/FAR hacks as are\n\tused in tif_jpeg.c.\n\n\t* libtiff/tif_win32.c: Ensure TIFFOpenW() uses same FILE_SHARE flags\n\tas TIFFOpen().\n\n2008-06-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: Fix alignment problems affecting architectures\n\tlike Sparc/Solaris.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1892\n\n2008-05-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff.def: Add TIFFFindField\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1891\n\n2008-05-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_config.*.h, tiffconf.*.h: Remove SIZEOF_LONG definition, unused.\n\n\t* li2008-04-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\nbtiff/tif_win32.c: Replace custom Win32 memory api with generic\n\tPOSIX one.  No apparent value to use of GlobalAlloc() in the modern\n\tage.  http://bugzilla.maptools.org/show_bug.cgi?id=1885\n\n\t* libtiff/tiffconf.vc.h: Added JBIG_SUPPORT and MDI_SUPPORT items\n\tin windows version (care of Edward Lam).\n\n2008-05-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_codec.c: Avoid NULL pointer dereferencing for exotic\n\tcompression codec codes.\n\n\t* tif_dirwrite.c: fix potential memory leak.\n\n\t* tif_dirread.c: Fix unchecked malloc result.\n\n2008-05-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test {tiff2pdf.sh tiff2ps-EPS1.sh tiff2ps-PS1.sh tiff2ps-PS2.sh\n\ttiff2ps-PS3.sh tiffcp-g3-1d-fill.sh tiffcp-g3-1d.sh\n\ttiffcp-g3-2d-fill.sh tiffcp-g3-2d.sh tiffcp-g3.sh tiffcp-g4.sh\n\ttiffcp-split-join.sh tiffcp-split.sh tiffcp-thumbnail.sh\n\ttiffdump.sh tiffinfo.sh}: Added more test scripts based on\n\tsuggestions from Lee Howard posted to the tiff list on 13 Sep\n\t2007.\n\n2008-05-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.c: Add an assert in an effort to detect a\n\tpossible runtime problem reported by coverity.\n\n\t* contrib/iptcutil/iptcutil.c: Fixed memory leak of str.\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: Major update from Richard Nolde.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1888\n\n\t* tools/tiffdither.c: remove dead onestrip code.  avoid memory leak.\n\n\t* tools/rgb2ycbcr.c: fix memory leak of raster buffer.\n\n\t* tools/tiffcp.c: Simplify inknames code to avoid pointless test.\n\tCleanup scanline allocation to avoid coverity warning.\n\n\t* tools/thumbnail.c: Check for TIFFOpen() failure.\n\n2008-05-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Use TIFF_SETGET_ASCII for PIXAR_TEXTUREFORMAT\n\tand PIXAR_WRAPMODES instead of TIFF_SETGET_UNDEFINED.  Not exactly clear\n\twhy this is needed.\n\n2008-05-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (ACLOCAL_AMFLAGS): Libtool 2.2.4 does not like\n\t\"ACLOCAL_AMFLAGS=-I ./m4\".  It wants \"ACLOCAL_AMFLAGS=-I m4\".\n\n2008-04-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* test/: Test suite updated. Everything is passed now.\n\n\t* libtiff/tif_dirinfo.c: Fixed description of the\n\tTIFFTAG_NUMBEROFINKS tag.\n\n2008-04-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_dirwrite.c, tiffiop.h}:\n\tGet rid of some of \"dereferencing type-punned\" warnings by converting\n\ttdir_offset field of TIFFDirEntry structure into union.\n\n2008-04-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_flush.c, tif_dirwrite.c, tiffio.h, tiffiop.h}:\n\tTIFFRewriteField() renamed into _TIFFRewriteField() and moved out\n\tfrom the public interface. Type of its 'count' parameter changed\n\tfrom uint32 to tmsize_t.\n\n\t* /libtiff/tiffiop.h: Make tif_nfields and tif_nfieldscompat fields\n\tof the tiff structure have the size_t type instead of uint32.\n\n2008-04-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdump.c: Added support for MSVS 6.0.\n\n\t* libtiff/tif_dirread.c: Use custom functions _TIFFUInt64ToFloat()\n\tand _TIFFUInt64ToDouble() to convert 64-bit integers into floating\n\tpoint values on MSVS 6.0 platform.\n\n2008-03-14  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: Removed sanity checks on tags larger than 4MB in\n\tTIFFReadDirEntryArray() since they are interfering with seemingly\n\tlegitimate files.  http://trac.osgeo.org/gdal/ticket/2005\n\n2008-02-09  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Added handling for the case of number of values for\n\tPageNumber tag different from 2 (previously resulted in an assert\n\tindicating lack of handling and was forgotten about)\n\n2008-02-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Do not try to fixup subsampling tags based on\n\tthe actual jpeg data stream if the first strip/tile has zero size.\n\tThis is the case when GDAL creates a new file with zero sizes, closes\n\tand reopens it.\n\n2008-01-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2ps.c: fix up 64bit issues (from Edward Lam).\n\n2008-01-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: #ifdef out lots of unused functions.\n\n\t* Makefile.vc, libtiff/Makefile.vc, tools/Makefile.vc: Improve clean\n\ttargets.\n\n\t* tools/tiffinfo.c, tools/tiffcmp.c, tools/gif2tiff.c, tools/bmp2tiff.c\n\ttools/tiff2pdf.c: Fix 64-bit warnings when compiling under MSVC 2005\n\t(x64).\n\n\t* tools/tiffset.c: Changes to reflect the fact that TIFFFieldWithTag()\n\tand TIFFFieldWithName() now return TIFFField pointers instead of\n\tTIFFFieldInfo pointers.\n\n\t* tools/tiffdump.c: Added ssize_t typedef on Windows since it doesn't\n\texist. This makes it compile again on Windows\n\n\t* tif_aux.c, tif_getimage.c, tif_next.c, tif_predict.c, tif_win32.c,\n\ttiffconf.vc.h: Various 64bit fixes from Edward Lam identified on win64.\n\n\t* test/rewrite_tag.c: New test for TIFFRewriteField().\n\n2007-12-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: Added TIFFRewriteField().  This new function\n\trewrites one field \"on disk\" updating an existing directory\n\tentry.  Lots of limitations still...\n\n\t* tiffiop.h, tif_write.c, tif_dirread.c, tif_flush.c: Keep track of\n\tTIFF_DIRTYSTRIP separately from TIFF_DIRTYDIRECT to indicate that\n\tthe strip offset/size values are dirty but nothing else about the\n\tdirectory is dirty.  In flush handle \"just stripmaps dirty\" as a\n\tspecial case that just rewrites these values without otherwise\n\tmodifying the directory on disk using TIFFRewriteField().\n\n\tWe also modify logic so that in update mode the directory is not\n\tmarked dirty on read, but only when something is changed.  This\n\tmeans we need to keep track of updates to the stripmap stuff in\n\tTIFFAppendToStrip().\n\n2007-12-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_jpeg.c: Improve ability to switch between encoding and decoding\n\tin the jpeg code (gdal bug #2033).\n\n2007-11-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dir.c, tif_dirread.c, tif_dirwrite.c, tif_read.c, tif_write.c,\n\ttiffiop.h: Added TIFF_BUF4WRITE flag to indicate if contents of the\n\trawcp/rawcc buffer are for writing and thus may require flushing.\n\tNecessary to distinguish whether they need to be written to disk when\n\tin mixed read/write mode and doing a mixture of writing followed by\n\treading.  http://trac.osgeo.org/gdal/ticket/1758\n\n2007-11-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.com, libtiff/tif_vms.c: Better OpenVMS support. Patches\n\tfrom Alexey Chupahin.\n\n2007-11-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_write.c: Rip out the fancy logic in TIFFAppendToStrip() for\n\testablishing if an existing tile can be rewritten to the same location\n\tby comparing the current size to all the other blocks in the same\n\tdirectory.  This is dangerous in many situations and can easily\n\tcorrupt a file.  (observed in esoteric GDAL situation that's hard to\n\tdocument).  This change involves leaving the stripbytecount[] values\n\tunaltered till TIFFAppendToStrip().  Now we only write a block back\n\tto the same location it used to be at if the new data is the same\n\tsize or smaller - otherwise we move it to the end of file.\n\n\t* tif_dirwrite.c: Try to avoid writing out a full readbuffer of tile\n\tdata when writing the directory just because we have BEENWRITING at\n\tsome point in the past.  This was causing odd junk to be written out\n\tin a tile of data when a single tile had an interleaving of reading\n\tand writing with reading last.  (highlighted by gdal\n\tautotest/gcore/tif_write.py test 7.\n\n\t* tif_predict.c: use working buffer in PredictorEncodeTile to avoid\n\tmodifying callers buffer.\n\thttp://trac.osgeo.org/gdal/ticket/1965\n\n\t* tif_predict.c/h: more fixes related to last item, keeping a\n\tdistinct pfunc for encode and decode cases as these were getting\n\tmixed up sometimes.\n\thttp://trac.osgeo.org/gdal/ticket/1948\n\n2007-11-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_predict.c/h, tif_lzw.c, tif_zip.c: Improvements so that\n\tpredictor based encoding and decoding works in read-write update\n\tmode properly.\n\thttp://trac.osgeo.org/gdal/ticket/1948\n\n2007-10-24  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Fixed problem with bogus file triggering\n\tassert(td->td_planarconfig == PLANARCONFIG_CONTIG) in\n\tChopUpSingleUncompressedStrip\n\n2007-10-22  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_jpeg.c: Resolved buffer incrementation bug that lead to faulty images\n\tat best, access violation at worst, when subsampled JPEG compressed imagery\n\tis decoded without the JPEG_COLORMODE feature\n\n2007-10-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/index.html: Update \"people responsible\" section.\n\n2007-10-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: Fix problem with alpha setting in some cases\n\tas reported on the mailing list.\n\n2007-10-01  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* changed some more incorrect %lud printf flags to %lu\n\n2007-09-29  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Strip chopping interfered badly with uncompressed\n\tsubsampled images because it tried to divide subsampled rowblocks,\n\tleading to all sorts of errors throughout the library for these\n\timages. Fixed by making strip chopping divide in row counts that\n\tare a multiple of vertical subsampling value.\n\n2007-09-28  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Logical cast working around compiler warning\n\n\t* tif_read.c: Correction of some error flags and parameter lists\n\n2007-09-27  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Made calculation of td_maxsamplevalue more robust\n\twhen dealing with large bitspersample values, shutting up purification\n\ttools that warn about truncation, though it remains incorrect and\n\tindicates a conceptual problem there.\n\n\t* tif_open.c: Moved early exit in case of 'h' flag (to disable reading\n\tof first IFD) to proper place because it badly interfered with memory\n\tmapping, resulting in mapping flag even with dummy mapping functions\n\tthat returned 0 whilst at the same time the mapping tif_size wasn't\n\tset, thus resulting in continuous incorrect beyond-eof errors.\n\n2007-09-24  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirinfo.c: Fixed (MSVC) compiler reports about\n\tinconsistent use of const in tiffFields and exifFields definition\n\n2007-09-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: Always write tile/strip offsets and sizes\n\tusing LONG8 type when output format is BigTIFF.  The\n\tTIFFWriteDirectoryTagLongLong8Array() function was restructured\n\taccordingly.\n\n\t* tif_dirread.c: Improvements to error reporting text in\n\tTIFFFetchDirectory().\n\n2007-09-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/images: Added a small collection of test images for use by\n\ttest programs and scripts.\n\t* test/tiffinfo.sh: A trivial example test script.\n\t* test/common.sh: Added small script for setting the environment\n\tused by script-based tests.\n\n2007-08-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: Write the tif_nextdiroff value instead of a fixed\n\tzero when writing directory contents to preserve the ability to\n\trewrite directories in place, even in the middle of a directory\n\tchain.\n\n\t* tif_dirinfo.c:  _TIFFMergeFields() now only merges in field\n\tdefinitions that are missing.  Existing definitions are silently\n\tignored.\n\n\t* tif_dirread.c: Add runtime error for fields for which no definition\n\tis found (in addition to an assert for developers) in\n\tTIFFFetchNormalTag().  Not sure if this is needed, but it seems\n\tprudent.\n\n2007-08-10  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: removed SubsamplingHor and SubsamplingVer\n\tfrom _TIFFRGBAImage structure to revert unwanted ABI change.\n\n2007-08-10  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_win32.c: use SetFilePointer instead of\n\tSetFilePointerEx, as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1580\n\n2007-07-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_stream.cxx: Put all callback functions declarations\n\tinside extern \"C\" block.\n\n\t* libtiff/{tif_lzw.c, tif_luv.c, tif_dumpmode.c, tif_print.c,\n\ttif_read.c, tif_strip.c, tif_thunder.c}: Use \"%I64d\" printf()\n\tformatter instead of \"%lld\" with MSVC compiler.\n\n\t* libtiff/{tiffiop.h, tif_aux.c}:  Added _TIFFUInt64ToFloat() and\n\t_TIFFUInt64ToDouble() functions.\n\n2007-07-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Handle the case of MSVC 6 when using 64-bit\n\tinteger constants.\n\n\t* libtiff/{Makefile.am, Makefile.v}: Do not distribute tiffconf.h,\n\tremove tif_config.h/tiffconf.h during cleaning. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1573\n\n\t* libtiff/tif_unix.c: Do not use O_LARGEFILE. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1577\n\n2007-07-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 4.0.0alpha released.\n\n2007-07-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Added missed extern optind as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1567\n\n\t* libtiff/{tif_close.c, tif_dirinfo.c, tiffiop.c, tif_dirread.c,\n\ttif_dir.h, tif_dir.c, tiffio.h}: Transition to the new-style tag\n\textending scheme completed.\n\n2007-07-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_stream.cxx: Adapt to use toff_t again.  Update to\n\tuse standard C++ library size types and attempt to detect overflow\n\tcases.\n\n2007-07-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_jpeg.c, tif_dir.h, tif_dir.c, tif_dirinfo.c, tiffio.h,\n\ttif_ojpeg.c, tif_print.c, tif_fax3.c, tif_dirread.c}: More work on new\n\ttag extending scheme. Use the new scheme everywhere.\n\n\t* libtiff/{tif_zip.c, tif_predict.c, tif_pixarlog.c, tif_luv.c,\n\ttif_fax3.c, tif_dirread.c, tif_dirwrite.c, tif_close.c, tif_ojpeg.c,\n\ttif_jpeg.c, tif_dirinfo.c, tif_dir.h, tiffio.h, tiffiop.h}:\n\tTIFFFIeldInfo structure replaced with TIFFField structure.\n\tTIFFFieldInfo retained for the backward compatibility.\n\n2007-07-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2pdf.c: Fix a compile problem when JPEG_SUPPORT is not\n\tdefined.\n\n2007-07-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tiff.h, tiffio.h, libtiff.def}: Unused\n\tTIFFReassignTagToIgnore() function and TIFFIgnoreSense enumeration\n\tremoved.\n\n\t* libtiff/{tif_dirinfo.c, tif_fax3.c, tif_jbig.c, tif_jpeg.c}: Move\n\ttags TIFFTAG_FAXRECVPARAMS, TIFFTAG_FAXSUBADDRESS,\n\tTIFFTAG_FAXRECVTIME and TIFFTAG_FAXDCS to the common tag directory.\n\tThese tags are not codec-specific and relate to image content, so\n\tprocess them as other normal tags.\n\n\t* libtiff/{tiffio.h, tif_dir.h}: TIFFTagValue structure moved from the\n\tpublic tiffio.h to private tif_dir.h.\n\n\t* contrib/{acorn, mac-cw, mac-mpw}: Removed as unmaintained and\n\toutdated.\n\n2007-07-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff{tif_acorn.c, tif_apple.c, tif_atari.c, tif_msdos.c,\n\ttif_win3.c}: Obsoleted portability stuff removed.\n\n\t* tools/tiff2ps.c:  Added support 16-bit images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1566\n\n\tPatch from William Bader.\n\n\t* tools/tiff2pdf.c: Fix for TIFFTAG_JPEGTABLES tag fetching and\n\tsignificant upgrade of the whole utility as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1560\n\n\tNow we don't need tiffiop.h in tiff2pdf anymore and will open output\n\tPDF file using TIFFClientOpen() machinery as it is implemented\n\tby Leon Bottou.\n\n2007-06-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Fix typo when substituting value for unsigned 8 bit type.\n\tAdded support for a TIFF_PTRDIFF_T type to use when doing pointer arithmetic.\n\tAdded support for a TIFF_SSIZE_T in order to return memory sizes but still\n\tallow returning -1 for errors.\n\t* libtiff/tiffconf.vc.h: Add porting type defintions for WIN32.\n\n2007-06-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* port/strtoull.c: New porting function in case strtoull() is not\n\tavailable on the target system.\n\t* configure.ac: Add configure support for determining sized types\n\tin a portable way and performing necessary substitutions in\n\ttif_config.h and tiffconf.h.  Updated tiff.h to use the new\n\tdefinitions.\n\n2007-04-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Check the tmpfile() return status as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=154\n\n2007-04-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.h, tif_dirread.c, tif_dirinfo.c, tif_jpeg.c,\n\ttif_fax3.c, tif_jbig.c, tif_luv.c, tif_ojpeg.c, tif_pixarlog.c,\n\ttif_predict.c, tif_zip.c}: Finally fix bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1274\n\n\tby introducing _TIFFMergeFieldInfo() returning integer error status\n\tinstead of void in case of problems with field merging (e.g., if the\n\tfield with such a tag already registered). TIFFMergeFieldInfo() in\n\tpublic API remains void. Use _TIFFMergeFieldInfo() everywhere and\n\tcheck returned value.\n\n2007-04-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* contrib/addtiffo/tif_overview.c: Fix problems with odd sized output\n\tblocks in TIFF_DownSample_Subsampled() (bug 1542).\n\n2007-04-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Changed JPEGInitializeLibJPEG() so that it\n\twill convert from decompressor to compressor or compress to decompress\n\tif required by the force arguments.  This works around a problem in\n\twhere the JPEGFixupTestSubsampling() may cause a decompressor to\n\tbe setup on a directory when later a compressor is required with the\n\tforce flag set.  Occurs with the addtiffo program for instance.\n\n2007-04-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: Significant update in\n\tfunctionality from Richard Nolde. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1525\n\n2007-03-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.c: \"inline static\" -> \"static inline\" for IRIC CC.\n\n2007-03-17  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* start of BigTIFF upgrade - CVS HEAD unstable until further notice\n\n2007-03-07  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: workaround for 'Fractional scanline' error reading\n\tOJPEG images with rowsperstrip that is not a multiple of vertical subsampling\n\tfactor. This bug is mentioned in:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1390\n\thttp://www.asmail.be/msg0054766825.html\n\n2007-03-07  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_win32.c: made inclusion of windows.h unconditional\n\n\t* libtiff/tif_win32.c: replaced preprocessor indication for consiously\n\tunused arguments by standard C indication for the same\n\n2007-02-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Use uint32 type instead of tsize_t in byte\n\tcounters in TIFFFetchData(). Should finally fix the issue\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=890\n\n2007-02-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: Properly handle tags with TIFF_VARIABLE writecount.\n\tAs per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1350\n\n\t* libtiff/tif_dirread.c: Added special function to handle\n\tSubjectDistance EXIF tag as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1362\n\n\t* tools/tiff2pdf.c: Do not assume inches when the resolution units\n\tdo not specified. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1366\n\n\t* tools/{tiffcp.c, tiffcrop.c}: Do not change RowsPerStrip value if\n\tit was set as infinite. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1368\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: New tiffcrop utility contributed\n\tby Richard Nolde. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1383\n\n2007-02-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Workaround for incorrect TIFFs with\n\tExtraSamples == 999 produced by Corel Draw. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1490\n\n\t* libtiff/{tif_dirread.c, tif_read.c}: Type of the byte counters\n\tchanged from tsize_t to uint32 to be able to work with data arrays\n\tlarger than 2GB. Fixes bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=890\n\n\tIdea submitted by Matt Hancher.\n\n2007-01-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tif2rgba.c: This utility does not work properly on big-endian\n\tarchitectures. It was fixed including the bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1149\n\n2007-01-15  Mateusz Loskot <mateusz@loskot.net>\n\n\t* Submitted libtiff port for Windows CE platform\n\t* libtiff/tif_config.wince.h: Added configuration header for WinCE.\n\t* libtiff/tiffconf.wince.h: Ported old configuration header for WinCE.\n\t* libtiff/tif_wince.c: Added WinCE-specific implementation of some\n\tfunctons from tif_win32.c.\n\t* libtiff/tif_win32.c: Disabled some functions already reimplemented in tif_wince.c.\n\t* libtiff/tiffiop.h, port/lfind.c: Added conditional include of some\n\tstandard header files for Windows CE build.\n\t* tools/tiffinfoce.c: Ported tiffinfo utility for Windows CE.\n\n2006-11-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: TIFFAppendToStrip() - clear sorted flag if\n\twe move a strip.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1359\n\n2006-10-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: More fixes for vulnerabilities, reported\n\tin Gentoo bug ():\n\n\thttp://bugs.gentoo.org/show_bug.cgi?id=142383\n\n\t* libtiff/contrib/dbs/xtiff/xtiff.c: Make xtiff utility compilable.\n\tThough it is still far from the state of being working and useful.\n\n2006-10-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Save the state of printdir codec dependent\n\tmethod.\n\n\t* libtiff/tif_jpeg.c: Save the state of printdir codec dependent method\n\tas per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1273\n\n\t* libtiff/tif_win32.c: Fixed problem with offset value manipulation\n\tas per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1322\n\n\t* libtiff/{tif_read.c, tif_jpeg.c, tif_dir.c}: More fixes for\n\tvulnerabilities, reported in Gentoo bug ():\n\n\thttp://bugs.gentoo.org/show_bug.cgi?id=142383\n\n2006-09-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_fax3.c, tif_next.c, tif_pixarlog.c}: Fixed multiple\n\tvulnerabilities, as per\tGentoo bug ():\n\n\thttp://bugs.gentoo.org/show_bug.cgi?id=142383\n\n2006-09-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c, libtiff/tif_zip.c: Fixed problems with mixing\n\tencoding and decoding on the same read-write TIFF handle.  The LZW\n\tcode can now maintain encode and decode state at the same time. The\n\tZIP code will switch back and forth as needed.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=757\n\n2006-09-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff: Rename config.h.vc and tif_config.h.vc to config.vc.h and\n\ttif_config.vc.h for easier identification by folks using an IDE.\n\n2006-07-25  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_msdos.c: Avoid handle leak for failed opens.  c/o Thierry Pierron\n\n2006-07-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: take care not to flush out buffer of strip/tile\n\tdata in _TIFFWriteDirectory if TIFF_BEENWRITING not set.  Relates\n\tto bug report by Peng Gao with black strip at bottom of images.\n\n2006-07-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: make sure to use uint32 for wordcount in\n\tTIFFWriteNormanTag if writecount is VARIABLE2 for ASCII fields.\n\tIt already seems to have been done for other field types.  Needed\n\tfor \"tiffset\" on files with geotiff ascii text.\n\n2006-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* {configure.ac, libtiff/tif_config.h.vc, libtiff/tif_jbig.c}\n\t(JBIGDecode): jbg_newlen is not available in older JBIG-KIT and\n\tits use does not appear to be required, so use it only when it is\n\tavailable.\n\n2006-06-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Added missed EXIF tag ColorSpace (40961).\n\n\t* libtiff/tif_dirread.c: Move IFD fetching code in the separate\n\tfunction TIFFFetchDirectory() avoiding code duplication in\n\tTIFFReadDirectory() and TIFFReadCustomDirectory().\n\n2006-06-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: Fix handling of -q values.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=587\n\n2006-06-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_readdir.c: Added case in EstimateStripByteCounts() for tiled\n\tfiles.  Modified TIFFReadDirectory() to not invoke\n\tEstimateStripByteCounts() for case where entry 0 and 1 are unequal\n\tbut one of them is zero.\n\t  http://bugzilla.remotesensing.org/show_bug.cgi?id=1204\n\n2006-06-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_open.c, tif_dirread.c, tiffiop.h}: Move IFD looping\n\tchecking code in the separate function TIFFCheckDirOffset().\n\n\t* libtiff/tif_aux.c: Added _TIFFCheckRealloc() function.\n\n\t* tools/tiffcmp.c: Fixed floating point comparison logic as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1191\n\n\t* libtiff/tif_fax3.c: Fixed problems in fax decoder as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1194\n\n\t* tools/tiff2pdf.c: Fixed buffer overflow condition in\n\tt2p_write_pdf_string() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1196\n\n2006-06-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* {configure, configure.ac, libtiff/tif_jbig.c, tools/tiffcp.c}: Added\n\tsupport for JBIG compression scheme (34661 code) contributed by Lee\n\tHoward. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=896\n\n\t* configure, configure.ac: OJPEG support enabled by default.\n\n\t* contrib/ojpeg/: Removed. New OJPEG support does not need this patch.\n\n2006-06-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/{tif_dirinfo.c, tif_print.c} : Fix crash in\n\tTIFFPrintDirectory().  Joris Van Damme authored the fix.\n\n2006-04-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Unified line ending characters (always use '\\n')\n\tas per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1163\n\n\t* README.vms, Makefile.am, configure.com, libtiff/{Makefile.am,\n\ttif_config.h-vms, tif_stream.cxx, tif_vms.c, tiffconf.h-vms}:\n\tAdded support for OpenVMS by Alexey Chupahin, elvis_75@mail.ru.\n\n2006-04-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/{fax2ps.c, fax2tiff.c, ppm2tiff.c, ras2tiff.c, tiff2pdf.c}:\n\tProperly set the binary mode for stdin stream as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1141\n\n\t* man/{bmp2tiff.1, fax2ps.1, fax2tiff.1, gif2tiff.1, ras2tiff.1,\n\traw2tiff.1, rgb2ycbcr.1, sgi2tiff.1, tiff2bw.1, tiff2pdf.1, tiff2ps.1,\n\ttiff2rgba.1, tiffcmp.1, tiffcp.1, tiffdither.1,\ttiffdump.1, tiffgt.1,\n\ttiffset.1}: Improvements in page formatting as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1140\n\n\t* html/tools.html, html/man/Makefile.am, tools/tiff2pdf.c: Fixed\n\ttypos as per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1139\n\n2006-04-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* nmake.opt: use /EHsc for VS2005 compatibility.  Also define\n\t_CRT_SECURE_NO_DEPRECATE to avoid noise on VS2005.\n\n2006-04-12  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: Added support for planarconfig separate\n\tnon-subsampled YCbCr (i.e. separate YCbCr with subsampling [1,1])\n\n2006-04-11  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: Revision of all RGB(A) put routines\n\t- Conversion of unassociated alpha to associated alpha now done with\n\t  more performant LUT, and calculation more correct\n\t- Conversion of 16bit data to 8bit data now done with\n\t  more performant LUT, and calculation more correct\n\t- Bugfix of handling of 16bit RGB with unassociated alpha\n\n2006-04-11  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c:\n\t- When there is no alpha, gtTileSeparate and gtStripSeparate allocated\n\t  buffer for alpha strile and filled it, only to never read it back.\n\t  Removed allocation and fill.\n\t- Minor rename of vars in gtTileSeparate and gtStripSeparate\n\t  anticipating planned functionality extension\n\n2006-04-08  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: renamed pickTileContigCase to PickContigCase\n\tand pickTileSeparateCase to PickSeparateCase as both work on strips as\n\twell\n\n\t* libtiff/tif_getimage.c: moved img->get selection from\n\tTIFFRGBAImageBegin into PickContigCase and PickSeparateCase to create\n\tlogical hook for planned functionality extension\n\n2006-04-08  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_ojpeg.c: resolved memory leak that was a consequence\n\tof inappropriate use of jpeg_abort instead of jpeg_destroy\n\n2006-04-07  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: replaced usage of TIFFScanlineSize in\n\tgtStripContig with TIFFNewScanlineSize so as to fix buggy behaviour\n\ton subsampled images - this ought to get sorted when we feel brave\n\tenough to replace TIFFScanlineSize alltogether\n\n\t* libtiff/tif_ojpeg.c: fixed bug in OJPEGReadSkip\n\n2006-04-04  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tiffio.h: added new type tstrile_t\n\n\t* libtiff/tif_dir.h: changed types of td_stripsperimage and td_nstrips\n\tto new tstrile_t, types of td_stripoffset and td_stripbytecount to\n\ttoff_t*\n\n\t* libtiff/tif_ojpeg.c: totally new implementation\n\n\t* libtiff/tif_dirread.c: added several hacks to suit new support of\n\tOJPEG\n\n\t* libtiff/tif_getimage.c: removed TIFFTAG_JPEGCOLORMODE handling\n\tof OJPEG images in favor of tif_getimage.c native handling of\n\tYCbCr and desubsampling\n\n2006-03-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: JPEGVSetField() so that altering the photometric\n\tinterpretation causes the \"upsampled\" flag to be recomputed.  Fixes\n\tpeculiar bug where photometric flag had to be set before jpegcolormode\n\tflag.\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_jpeg.c: strip size related bugfix in encode raw\n\n\t* libtiff/tif_strip.c: temporarilly added two new versions of\n\tTIFFScanlineSize\n\t  - TIFFNewScanlineSize: proposed new version, after all related\n\t    issues and side-effects are sorted out\n\t  - TIFFOldScanlineSize: old version, from prior to 2006-03-21 change\n\tThis needs further sorting out.\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* contrib/addtiffo/tif_ovrcache.c: bugfix to correctly pass size\n\tof last truncated strip data to TIFFWriteEncodedStrip\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/{tif_jpeg.c, tif_strip.c}: bugfix of tif_jpeg decode raw\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: bugfix/rewrite of putcontig8bitYCbCr22tile\n\n\t* libtiff/tif_getimage.c: added putcontig8bitYCbCr12tile\n\n\t* libtiff/tif_read.c: added support for new TIFF_NOREADRAW flag to\n\tprepare\tthe path for new tif_ojpeg.c\n\n2006-03-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.8.2 released.\n\n\t* tools/Makefile.am: Use runtime paths linker flags when rpath\n\toption enabled.\n\n2006-03-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added missed exports as per bug\n\thttp://bugzilla.remotesensing.org/attachment.cgi?id=337\n\n\t* contrib/addtiffo/Makefile.vc, libtiff/Makefile.vc, port/Makefile.vc,\n\ttools/Makefile.vc: Makefiles improvements as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1128\n\n\t* nmake.opt libtiff/{tif_config.h.vc, tif_unix.c, tiffio.h},\n\ttools/{fax2ps.c, fax2tiff.c, tiff2pdf.c}: Fixed win32 I/O functions\n\tusage as per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1127\n\n\t* libtiff/tif_strip.c: Take subsampling in account when calculating\n\tTIFFScanlineSize().\n\n\t* tools/tiffcp.c: Do not set RowsPerStrip bigger than image length.\n\n2006-03-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Fixed wrong TIFFerror() invocations as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1125\n\n\t* tools/fax2ps.c: Fixed reading the input stream from stdin as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1124\n\n2006-03-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffiop.h: Added decalration for\n\t_TIFFSetDefaultCompressionState().\n\n\t* libtiff/{tif_jpeg.c, tif_fax3.c, tif_zip.c, tif_pixarlog.c,\n\ttif_lzw.c, tif_luv.c}: Use _TIFFSetDefaultCompressionState() in all\n\tcodec cleanup methods. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1120\n\n2006-03-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jpeg.c: Do not cleanup codec state in TIFFInitJPEG(). As\n\tper bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1119\n\n\t* tools/raw2tiff.c: Do not set RowsPerStrip larger than ImageLength.\n\tAs per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1110\n\n\t* libtiff/tiffiop.h: dblparam_t typedef removed; GLOBALDATA macro\n\tremoved; move here the STRIP_SIZE_DEFAULT macro definition.\n\n\t* libtiff/{tif_dirread.c, tif_strip.c}: Removed STRIP_SIZE_DEFAULT\n\tmacro definition.\n\n\t* libtiff/tif_dir.c: Use double type instead of dblparam_t.\n\n2006-03-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Do not check the PlanarConfig tag presence\n\tin TIFFReadDirectory, because it is always set at the start of\n\tfunction and we allow TIFFs without that tag set.\n\n2005-03-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.8.1 released.\n\n2006-03-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Fixed error reporting in TIFFFetchAnyArray()\n\tfunction as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n\t* libtiff/tif_dirread.c: More wise check for integer overflow\n\tcondition as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n\t* libtiff/{tif_jpeg.c, tif_pixarlog.c, tif_fax3.c, tif_zip.c}:\n\tProperly restore setfield/getfield methods in cleanup functions. As\n\tper bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n2006-03-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_predict.c, tif_predict.h}: Added new function\n\tTIFFPredictorCleanup() to restore parent decode/encode/field methods.\n\n\t* libtiff/{tif_lzw.c, tif_pixarlog.c, tif_zip.c}: Use\n\tTIFFPredictorCleanup() in codec cleanup methods. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n\t* libtiff/tif_dirread.c: Fixed integer overflow condition in\n\tTIFFFetchData() function. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n2006-03-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_ojpeg.c: Set the ReferenceBlackWhite with the\n\tTIFFSetField() method, not directly. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1043\n\n\t* tools/ppm2tiff.c: Added support for PBM files as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1044\n\n2006-02-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Small code rearrangement in TIFFWriteScanline()\n\tto avoid crash as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1081.\n\n2006-02-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Functions t2p_sample_rgbaa_to_rgb() and\n\tt2p_sample_rgba_to_rgb() was used in place of each other, that was\n\tresulted in problems with RGBA images with associated alpha.\n\tAs per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1097\n\n2006-02-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirwrite.c: Properly write TIFFTAG_DOTRANGE tag as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=1088.\n\n\t* libtiff/tif_print.c: Properly read TIFFTAG_PAGENUMBER,\n\tTIFFTAG_HALFTONEHINTS, TIFFTAG_YCBCRSUBSAMPLING and TIFFTAG_DOTRANGE\n\ttags as per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1088.\n\n\t* tools/tiff2ps.c: Properly scale all the pages when converting\n\tmultipage TIFF with /width/height/center options set. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1080\n\n2006-02-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Do not create output file until all option checks\n\twill be done. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1072\n\n\t* tools/bmp2tiff.c: Added ability to create multipage TIFFs from the\n\tlist of input files as per bug:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1077\n\n2006-02-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_tile.c: Fix error reporting in TIFFCheckTile() as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=1063.\n\n\t* tools/tiffgt.c: Avoid crashing in case of image unsupported by\n\tTIFFRGBAImage interface.\n\n\t* libtiff/tif_color.c: Avoid overflow in case of wrong input as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=1065.\n\n2006-02-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: Fixed support for non-YCbCr encoded JPEG\n\tcompressed TIFF files, per submission from Dan Cobra.\n\n2006-02-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_packbits.c, tif_win32.c}: Properly\n\tcast values to avoid warnings. As per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1033.\n\n\t* libtiff/tif_dirinfo.c: Use TIFF_NOTYPE instead of 0 when\n\tappropriate. As per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1033.\n\n\t* libtiff/tif_aux.c: Fixed type of temporary variable in\n\t_TIFFCheckMalloc() as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1033.\n\n2006-02-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_aux.c: Return static array when fetching default\n\tYCbCrCoefficients (another problem, reported a the\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1029 entry).\n\n2006-02-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Special handling for PageNumber, HalftoneHints,\n\tYCbCrSubsampling and DotRange tags as per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1029\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1034\n\n\t* libtiff/tif_dirread.c: Use _TIFFGetExifFieldInfo() instead of\n\t_TIFFGetFieldInfo() in TIFFReadEXIFDirectory() call as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1026.\n\n2006-01-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtool related stuff updated from the 2.1a branch.\n\n2006-01-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/bmp2tiff,pal2rgb,ppm2tiff,ras2tiff,raw2tiff,sgi2tiff,\n\ttiff2bw,tiffcp: Fixed jpeg option processing so -c jpeg:r:50 works\n\tproperly as per bug:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1025\n\n2006-01-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Fix with_default_strip_size comparison as reported\n\tby Norihiko Murase.\n\n2006-01-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am (LIBTIFF): Due to linking against libtiff\n\tincorrectly, tests were not actually testing the uninstalled\n\tlibtiff.  Now they are.\n\n2006-01-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Change definitions for TIFFTAG_ICCPROFILE,\n\tTIFFTAG_PHOTOSHOP, TIFFTAG_RICHTIFFIPTC, TIFFTAG_XMLPACKET: readcount\n\tshould be uint32 value.\n\n2006-01-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/man/Makefile.am (htmldoc): Fix htmldoc rule so that it can\n\tbe used if build directory is not the same as source directory.\n\t* man/{TIFFGetField.3tiff, TIFFSetField.3tiff}: Documented\n\tTIFFTAG_PHOTOSHOP, TIFFTAG_RICHTIFFIPTC, and TIFFTAG_XMLPACKET,\n\tand re-sorted tag names in alphabetical order.\n\n2005-12-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.8.0 released.\n\n2005-12-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/bmp2tiff.c (main): Fixed warning regarding returning\n\tinconsistent types from a condition.\n\t* tools/tiffcmp.c (CheckLongTag): Eliminate warning due to printf\n\tformat.\n\t* tools/bmp2tiff.c: Reduce compilation warnings on big-endian CPUs.\n\n2005-12-28  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* html/{index.html, support.hml, libtiff.html}: Cleaned up HTML\n\n2005-12-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffio.h: Added VC_EXTRALEAN definition before including\n\twindows.h, to reduce the compile time.\n\n2005-12-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: Improve compilation under MinGW.\n\n2005-12-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_dirread.c, tif_dirinfo.c}:\n\ttiffFieldInfo and exifFieldInfo arrays definitions moved back to\n\ttif_dirinfo.c; added _TIFFGetFieldInfo() and _TIFFGetExifFieldInfo()\n\tprivate functions to retrieve FieldInfo arrays.\n\n2005-12-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/build.html: Added some additional instructions for when\n\tbuilding using MSVC under Windows.  Also fixed two HTML syntax\n\terrors and used HTML Tidy to tidy up the HTML syntax and\n\tformatting.\n\n2005-12-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_aux.c, tif_dir.c, tif_dir.h, tif_dirwrite.c,\n\ttif_print.c, tif_getimage.c}: Make InkSet, NumberOfInks, DotRange and\n\tStoNits tags custom.\n\n2005-12-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_aux.c, tif_dir.c, tif_dir.h, tif_print.c}: Make\n\tWhitePoint tag custom.\n\n\t* libtiff/{tif_dir.h, tiff.h}: More EXIF tags added.\n\n2005-12-23  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tiffio.h: fixed typo that potentially resulted in\n\tredefininition of USE_WIN32_FILEIO\n\n\t* libtiff/*: Added more 'dual-mode' error handling: Done TIFFWarning\n\tcalls in core LibTiff.\n\n2005-12-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_print.c}: Make RichTIFFIPTC,\n\tPhotoshop and ICCProfile tags custom.\n\n2005-12-21  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/*, contrib/*: Added 'dual-mode' error handling, enabling\n\tnewer code to get context indicator in error handler and still\n\tremain compatible with older code: Done TIFFError calls everywhere\n\texcept in tools\n\n2005-12-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Added many error reporting messages; fixed integer\n\toverflow as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=789\n\n2005-12-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* contrib/addtiffo/*: Major upgrade by Joris to support subsampled\n\tYCbCr images in jpeg compressed TIFF files.\n\n2005-12-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Return non-zero status when reading fails (again).\n\n2005-12-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Return non-zero status when reading fails.\n\n2005-12-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.h, tiff.h}: Added more EXIF tags.\n\n2005-12-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_print.c}: Make XMLPacket tag\n\tcustom.\n\n\t* tools/tiffinfo.c: Print EXIF directory contents if exist.\n\n\t* libtiff/tiff.h: Few EXIF tag numbers added.\n\n\t* libtiff/{tif_dirinfo.c, tif_dirread.c, tif_dir.h, tif_dir.c,\n\ttiffio.h}: Preliminary support to read custom directories. New\n\tfunctions: TIFFReadCustomDirectory() and TIFFReadEXIFDirectory().\n\n2005-12-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirinfo.c, tif_dirread.c, tif_dir.h, tif_dir.c}:\n\tMore work to implement custom directory read support.\n\n\t* libtiff/{tif_aux.c, tif_dirinfo.c, tif_dirread.c, tif_dir.h,\n\ttif_dir.c, tif_print.c}: Make YCbCrCoefficients and ReferenceBlackWhite\n\ttags custom.\n\n2005-12-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: One more workaround for broken\n\tStripByteCounts tag. Handle the case when StripByteCounts array filled\n\twith completely wrong values.\n\n2005-11-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Release file descriptor in case of failure\n\tin the TIFFOpenW() function as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1003\n\n\t* libtiff/tif_dirinfo.c: Correctly yse bsearch() and lfind()\n\tfunctions as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1008\n\n2005-11-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_open.c, tiff.h, tiffdump.c: Incorporate preliminary support\n\tfor MS MDI format.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1002\n\n\t* .cvsignore: many files added, and a few update according\n\tto suggestion of Brad HArds on tiff mailing list.\n\n2005-11-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def, tiffiop.h, tiffio.h: Made TIFFFreeDirectory\n\tpublic.\n\n2005-10-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Properly calculate sizes of temporary arrays\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=943\n\n\t* tools/fax2tiff.c: Added option '-r' to set RowsPerStrip parameter\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=944\n\n\t* tools/tiffdump.c: Fixed typeshift and typemask arrays initialization\n\tproblem as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=946\n\n\t* tools/bmp2tiff.c: Fixed possible integer overflow error as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=965\n\n\t* libtiff/tif_dirinfo.c: Make XResolution, YResolution and\n\tResolutionUnit tags modifiable during write process. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=977\n\n\t* tools/tiffsplit.c: Copy fax related fields over splitted parts\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=983\n\n2005-10-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: Don't try and split single strips into \"0\" strips\n\tin ChopUpSingleUncompressedStrip.  This happens in some degenerate\n\tcases (like 1x1 files with stripbytecounts==0 (gtsmall.jp2 embed tiff)\n\n2005-10-20  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_fax3.c: changed 'at scanline ...' style warning/errors\n\twith incorrect use of tif_row, to 'at line ... of\n\tstrip/tile ...' style\n\n2005-10-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_write.c: fixed setting of planarconfig as per bug report\n\ton the mailing list from Joris.\n\n2005-10-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, configure, nmake.opt, libtiff/{tif_config.h,\n\ttif_dirread.c}: Make the default strip size configurable via the\n\t--with-default-strip-size and STRIP_SIZE_DEFAULT options.\n\n2005-09-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/support.html: Fixed link to documentation on Greg Ward's\n\tLogLuv TIFF format.\n\n2005-09-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdump.c: Fixed crash when reading malformed tags.\n\n2005-09-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Added missed 'break' statement as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=932\n\n2005-09-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.4 released.\n\n\t* {configure, configure.ac, Makefile.am, autogen.sh}: Applied patch\n\tfrom Patrick Welche (all scripts moved in the 'config' and 'm4'\n\tdirectories).\n\n2005-09-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: reintroduce seek to avoid problem on solaris.\n\n2005-09-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: When prefreeing tv->value in TIFFSetFieldV\n\talso set it to NULL to avoid double free when re-setting custom\n\tstring fields as per:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=922\n\n2005-08-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: avoid signed/unsigned warning.\n\n\t* libtiff/tif_dirread.c: removed unused variable.\n\n2005-07-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: Fixed up support for swapping \"double complex\"\n\tvalues (128 bits as 2 64 bits doubles).  GDAL gcore tests now\n\tpass on bigendian (macosx) system.\n\n2005-07-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_aux.c, tif_dirread.c, tif_fax3.c, tiffiop.h}: Rename\n\tCheckMalloc() function to _TIFFCheckMalloc() and make it available\n\tglobally as an internal helper routine.\n\n2005-07-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: More improvements in the \"pass by value\" part of\n\tthe custom tags handling code.\n\n2005-07-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_dirinfo.c}: Do not upcast BYTEs to\n\tSHORTs in the TIFFFetchByteArray(). Remove TIFFFetchExtraSamples()\n\tfunction, use TIFFFetchNormalTag() instead as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=831\n\n\tRemove TIFFFetchExtraSamples() function, use TIFFFetchNormalTag()\n\tinstead.\n\n\t* libtiff/tiffconf.h.in: One more attempt to fix the AIX bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2005-07-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_print.c: Fixed printing of the BYTE and SBYTE arrays.\n\n\t* tools/tiffdump.c: Added support for TIFF_IFD datatype.\n\n2005-07-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Do not check the PlanarConfiguration field in\n\tthe TIFFWriteCheck() function in case of single band images (as per\n\tTIFF spec).\n\n2005-07-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* SConstruct, libtiff/SConstruct: Added the first very preliminary\n\tsupport for SCons software building tool (http://www.scons.org/).\n\tThis is experimental infrastructure and it will exist along with the\n\tautotools mechanics.\n\n2005-07-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* port/{getopt.c, strcasecmp.c, strtoul.c}: Update modules from\n\tthe NetBSD source tree (the old\t4-clause BSD license changed to\n\tthe new 3-clause one).\n\n\t* configure.ac, port/lfind.c, libtiff/tiffiop.h: Added lfind()\n\treplacement module.\n\n\t* port/dummy.c: Make the dummy function static.\n\n2005-07-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Fixed WhitePoint tag copying.\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_dirinfo.c, tif_print.c}:\n\tMake FieldOfViewCotangent, MatrixWorldToScreen, MatrixWorldToCamera,\n\tImageFullWidth, ImageFullLength and PrimaryChromaticities tags custom.\n\n2005-07-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.3 released.\n\n\t* configure, configure.ac: Do not use empty -R option when linking\n\twith --enable-rpath.\n\n2005-07-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_open.c}: Added open option 'h' to avoid\n\treading the first IFD when needed. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=875\n\n\t* libtiff/tif_color.c: Better use of TIFFmin() macro to avoid side\n\teffects.\n\n2005-06-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Print two characters per loop in the\n\tt2p_write_pdf_trailer(). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=594\n\n\t* tools/tiffgt.c: Use MacOS X OpenGL framework when appropriate. As\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=844\n\n\t* acinclude.m4: Updated to latest OpenGL test macros versions.\n\n\t* libtiff/tiff.h: Use correct int size on Sparc 64bit/Sun compiler\n\tplatform. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=855\n\n2005-06-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Added support for ClipPath, XClipPathUnits\n\tand YClipPathUnits tags.\n\n2005-06-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/addtiffo/tif_ovrcache.c: Properly extract tile/strip size;\n\tuse pixel sized shift in contigous case.\n\n2005-06-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/addtiffo/{tif_overview.c, tif_ovrcache.c, tif_ovrcache.h}:\n\tMake overviews working for contiguos images.\n\n2005-06-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Replace runtime endianess check with the compile\n\ttime one.\n\n\t* libtiff/tif_predict.c: Floating point predictor now works on\n\tbig-endian hosts.\n\n2005-06-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Use _TIFFsetString() function when read custom\n\tASCII values.\n\n\t* libtiff/{tif_dirinfo.c, tif_dir.h, tif_dir.c, tif_print.c}: Make\n\tDocumentName, Artist, HostComputer, ImageDescription, Make, Model,\n\tCopyright, DateTime, PageName, TextureFormat, TextureWrapModes and\n\tTargetPrinter tags custom.\n\n\t* libtiff/tif_jpeg.c: Cleanup the codec state depending on\n\tTIFF_CODERSETUP flag (to fix memry leaks).\n\n\t* libtiff/tif_jpeg.c: Initialize JPEGTables array with zero after\n\tallocating.\n\n2005-05-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/Makefile.am: Added workaround for\n\tOpenBSD/MirOS soname problem as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=838\n\n\t* libtiff/tif_dirwrite.c: Use tdir_count when calling\n\tTIFFCvtNativeToIEEEDouble() in the TIFFWriteDoubleArray() function as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=845\n\n2005-05-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ppm2tiff.c: Fixed format string when read PPM file header with\n\tthe fscanf() function. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=861\n\n\t* libtiff/{tif_dirinfo.c, tif_print.c}: TIFFFetchByteArray() returns\n\tuint16 array when fetching the BYTE and SBYTE filds, so we should\n\tconsider result as pointer to uint16 array and not as array of chars.\n\tAs per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=831\n\n\t* libtiff/tif_dir.c: More efficient custom tags retrieval as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=830\n\n\t* libtiff/tif_win32.c: Use FILE_SHARE_READ | FILE_SHARE_WRITE share\n\tmode in CreateFile() call as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=829\n\n\t* libtiff/Makefile.am: Fixed parallel compilation of the libtiff and\n\tlibtiffxx libraries as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=826\n\n\t* contrib/addtiffo/{tif_overview.c, tif_ovrcache.h}: Sinchronized with\n\tGDAL.\n\n2005-05-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Substantial fix for addtiffo problems with\n\tJPEG encoded TIFF files.  Pre-allocate lots of space for jpegtables\n\tin directory.\n\n2005-05-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Changed the code that computes\n\tstripbytecount[0] if it appears bogus to ignore if stripoffset[0] is\n\tzero. This is a common case with GDAL indicating a \"null\" tile/strip.\n\n2005-05-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Check for JPEGTables tag presence before copying.\n\n2005-05-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Applied similar change to\n\tTIFFFetchPerSampleLongs and TIFFFetchPerSampleAnys.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=843\n\n\t* libtiff/tif_jpeg.c: added LIB_JPEG_MK1 support in JPEGDecodeRaw().\n\n2005-05-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\t* tools/tiff2pdfr.c, man/tiff2pdf.1: Calculate the tile width properly;\n\tadded new option '-b' to use interpolation in output PDF files (Bruno\n\tLedoux).\n\n2005-05-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Ensure that broken files with too many\n\tvalues in PerSampleShorts work ok instead of crashing.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=843\n\n2005-04-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdither.c: Copy the PhotometricInterpretation tag from the\n\tinput file.\n\n2005-04-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_predict.c: Added ability to encode floating point\n\tpredictor, as per TIFF Technical Note 3.\n\n2005-04-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_predict.h, tif_predict.c}: Added ability to decode\n\tfloating point predictor, as per TIFF Technical Note 3.\n\n2005-04-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tiffiop.h, tif_dir.c, tif_read.c, tif_swab.c}:\n\tAdded _TIFFSwab24BitData() and TIFFSwabArrayOfLong() functions used to\n\tswap 24-bit floating point values.\n\n\t* libtiff/tiff.h: Added predictor constants.\n\n2005-04-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_dir.c}: Use uint32 type for appropriate\n\tvalues in _TIFFVSetField() function. Inspired by the bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=816\n\n\t* man/TIFFSetField.3tiff: Fixed definition of the TIFFTAG_INKNAMES tag\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=816\n\n2005-03-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Do not read header in case the output file\n\tshould be truncated (Ron).\n\n\t* libtiff/{tif_dirinfo.c, tif_config.h.vc}: Use lfind() instead\n\tof bsearch() in _TIFFFindFieldInfoByName() function (Ron).\n\n\t* libtiff/{tiff.h, tif_dirinfo.c}: Fixes in EXIF tag ordering (Ron).\n\n2005-03-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/Makefile.am: Use libtool machinery to pass\n\trpath option.\n\n2005-03-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_print.c}: Handle all data types in custom\n\ttags.\n\n2005-03-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/dirinfo.c: Added DNG tags.\n\n\t* libtiff/{tif_dir.c, tif_print.c}: More improvements in custom tag\n\thandling code.\n\n\t* libtiff/tiff.h: More comments; added missed DNG tag (LensInfo);\n\tadded DNG 1.1.0.0 tags.\n\n\t* tools/tif2pdf.c: Fixed problem with alpha channel handling as per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=794\n\n\t* man/TIFFGetField.3tiff: Add a note about autoregistered tags.\n\n2005-03-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* nmake.opt: Build with Win32 CRT library by default.\n\n\t* tools/tiff2ps.c: Fixed typo in page size handling code.\n\n\t* libtiff/{tif_dir.c, tif_print.c}: Support for custom tags, passed\n\tby value.\n\n\t* libtiff/{tiff.h, tif_dirinfo.c, tiffiop.h}: Added EXIF related tags.\n\n2005-03-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.2 released.\n\n2005-03-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcmp.c: Added ability to compare the 32-bit integer and\n\tfloating point data; complain on unsupported bit depths.\n\n2005-03-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tif_stream.cxx: Use ios namespace instead of ios_base to support\n\tGCC 2.95.\n\n\t* libtiff/{tiff.h, tif_fax3.tif, tif_jpeg.c}: Applied correct patch from\n\tLee Howard for HylaFax DCS tag\n\t(see http://bugzilla.remotesensing.org/show_bug.cgi?id=771)\n\n2005-03-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, configure.ac: Use -rpath option instead of -R as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=732\n\n\t* libtiff/{tiff.h, tif_fax3.tif, tif_jpeg.c}: Applied patch from Lee\n\tHoward to support a new tag TIFFTAG_FAXDCS (34911) used in HylaFax\n\tsoftware. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=771\n\n\t* nmake.opt, html/build.html: Add more comments, change the config\n\tfile organization a bit as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=764\n\n\t* tools/tiffcmp.c: Use properly sized buffer in short arrays comparison\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=785\n\n2005-03-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: More logic to guess missed strip size as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=705\n\n\t* tools/fax2ps.c: Replace insecure mktemp() function with the\n\ttmpfile() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=786\n\n2005-02-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiff.h: Changed the int8 definition to be always signed char\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=727\n\n\t* libtiff/tiffio.h: Move TIFFOpenW() function into the extern \"C\"{}\n\tblock as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=763\n\n2005-02-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffgt.c: Fix problem on big-endian CPUs so that images\n\tdisplay more correctly.  Images display brighter than they should\n\ton a Sun workstation.\n\n2005-02-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Estimate strip size in case of wrong or\n\tsuspicious values in the tags. As per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=705\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=320\n\n\t* tools/tiff2ps.c: Fixed problem with page sizes as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=742\n\n2005-01-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiff.h (TIFFTAG_TILEWIDTH): Corrected description.\n\t(TIFFTAG_TILELENGTH): Corrected description.\n\n2005-01-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac: Fixes for --with-docdir option as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=759\n\n\t* libtiff/tif_open.c: Remove unnesessary TIFFSeekFile() call as per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=756\n\n\t* libtiff/tif_stream.cxx: Fixes for C++ stream interface from\n\tMichael Rinne and Edward Lam.\n\n2005-01-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac: Make the documentation directory location configurable\n\tvia the --with-docdir option (as suggested by Jeremy C. Reed).\n\n\t* libtiff/tif_color.c: Use double as the second argument of pow()\n\tfunction in TIFFCIELabToRGBInit(). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=741\n\n\t* libtiff/tif_pixarlog.c: Avoid warnings when converting float to\n\tinteger as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=740\n\n\t* libtiff/tif_getimage.c: Always fill the error message buffer in\n\tTIFFRGBAImageBegin() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=739\n\n2005-01-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jpeg.c: Added ability to read/write the fax specific\n\tTIFFTAG_FAXRECVPARAMS, TIFFTAG_FAXSUBADDRESS and TIFFTAG_FAXRECVTIME\n\ttags as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=736\n\n\t* libtiff/tif_win32.c: Fixed message formatting in functions\n\tWin32WarningHandler() and Win32ErrorHandler() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=735\n\n\t* tools/tiff2ps.c: Interpret the -w and -h options independently. As\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=689\n\n2005-01-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffio.h: Move the color conversion routines in the 'extern\n\t\"C\"' section as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=727\n\n\t* libtiff/tiff.h: Restore back the workaround for AIX Visual Age C\n\tcompiler to avoid double definition of BSD types as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n\t* libtiff/Makefile.am: Place the C++ stream API in the separate\n\tlibrary called libtiffxx to avoid unneeded dependencies. Probably\n\tthere will be more C++ API in the future. As per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=733\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=730\n\n2005-01-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdump.c: Fixed problem when read broken TIFFs with the\n\twrong tag counts (Dmitry V. Levin, Martin Pitt).\n\n\t* configure.ac: Replace --disable-c++ with the --disable-cxx option as\n\tper bug http://bugzilla.remotesensing.org/show_bug.cgi?id=730\n\n2004-12-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: More fixes for multiple-alpha-channelled\n\tRGB-images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=713\n\n\n\t* tools/tiffset.c: Convert character option to integer value as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=725\n\n2004-12-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.1 released.\n\n\t* html/tiffset.1.html: Add missed manual page as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=678\n\n\t* libtiff/tiff.h: Revert back libtiff data type definitions as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=687\n\n2004-12-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Do not forget about TIFF_VARIABLE2 when\n\tchecking for tag count in TIFFReadDirectory() function. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=713\n\n\t* libtiff/{tif_dirread.c, tif_fax3.c}: More argument checking in\n\tCheckMallock() function.\n\n\t* libtiff/tif_getimage.c: Support for multiple-alpha-channelled\n\tRGB-images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=718\n\n2004-12-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: #define A1 bracketing for clean build on\n\tSunPro compiler.\n\n2004-12-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* autogen.sh: aclocal and autoheader should be executed after\n\tlibtoolize.  Also add '-I .' to aclocal invocation to check\n\tcurrent directory for macros.\n\n2004-12-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirwrite.c: Always write TIFFTAG_SUBIFD using LONG type\n\tas per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=703\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=704\n\n2004-12-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* nmake.opt: Link with the user32.lib in windowed mode. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=697\n\n\t* libtiff/tif_win32.c: Use char* strings instead of TCHAR in windowed\n\tmode as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=697\n\n\t* libtiff/tif_config.in.vc: Removed unneded definitions for\n\tread/open/close/lseek functions to fix the\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=680\n\n2004-12-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dirread.c}: Remove TIFFReassignTagToIgnore()\n\tcall from the TIFFReadDirectory() function. TIFFReassignTagToIgnore\n\tmust be removed in the future, as it was never used properly. As per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=692\n\n2004-11-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: Added a work-around in order to allow\n\tcompilation with the heavily modified version of libjpeg delivered\n\twith Cygwin.\n\n2004-11-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Properly handle tags, which have the uint32\n\tcounts. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=693\n\n\t* tools/fax2ps.c: Be able to extract the first page (#0). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=690\n\n2004-11-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_unix.c: Make UNIX module compilable (and usable)\n\ton Windows.\n\n\t* nmake.opt: Add missed DLLNAME variable.\n\n2004-11-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/makefile.vc: make it easier to rename the libtiff DLL.\n\n2004-11-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* man/libtiff.3tiff: Improvements in the \"LIST OF ROUTINES\" table as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=545\n\n\t* man/tiffset.1: Added manual page for tiffset tool written by Jay\n\tBerkenbilt. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=678\n\n2004-11-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_error.c: fixed TIFFerror call to be TIFFError.\n\n2004-11-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/document.html: Updated Adobe web links as per email from Joris.\n\n2004-11-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.hxx, tiffio.h}: C++ stream interface moved to new\n\tfile tiffio.hxx. We don't have any C++ in tiffio.h, those who want to\n\tuse C++ streams should #include <tiffio.hxx>.\n\n2004-11-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiff.h: Added Adobe DNG tags.\n\n\t* libtiff/tif_win32.c: Typo fixed.\n\n\t* libtiff/{tif_stream.cxx, tiffio.h}: C++ stream interface updated to\n\tbe compliant with the latest standard. Appropriate additions in\n\tmakefiles now completed.\n\n2004-11-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c, libtiff/tif_dirinfo.c: Properly handle the\n\tdifferent tag types. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=600\n\n2004-11-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_aux.c: Set the appropriate ReferenceBlackWhite array for\n\tYCbCr image which lacks that tag (noted by Hans Petter Selasky).\n\n2004-11-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_color.c: Division by zero fixed (Hans Petter Selasky).\n\n2004-11-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_stream.cxx, tiffio.h}: Added C++ stream interface\n\tcontributed by Edward Lam (see\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=654 for details).\n\tThough no changes in any makefiles yet.\n\n2004-11-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: Removed close() in TIFFClientOpen() if file\n\tis bad. This is the callers responsibility.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=651\n\n2004-11-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_win32.c, libtiff.def}: Added TIFFOpenW()\n\tfunction to work with the double byte strings (used to represent\n\tfilenames in some locales). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=625\n\n\t* libtiff/tif_dirread.c: Fixed problem when fetching BitsPerSample and\n\tCompression tags of type LONG from broken TIFFS as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=662\n\n\t* libtiff/tif_dirinfo.c: Fixed definition for TIFFTAG_RICHTIFFIPTC,\n\tthe writecount should have uint32 type. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=662\n\n\t* libtiff/tif_write.c: Fixed wrong if() statement in\n\tTIFFAppendToStrip() function as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=660\n\n2004-11-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Change definition for TIFFTAG_EXTRASAMPLES\n\tfield. The caller should supply a count when setting this field. As\n\tper bug\n\n\t http://bugzilla.remotesensing.org/show_bug.cgi?id=648\n\n\t* libtiff/{tif_jpeg.c, tif_ojpeg.c}: TIFFTAG_JPEGTABLES should have\n\tuint32 count. Use this type everywhere.\n\n2004-11-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_next.c: avoid use of u_long and u_char types.  Bug 653.\n\n2004-11-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2rgba.c: removed extra newlines in usage message.\n\n2004-10-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirwrite.c: Improvements in tag writing code.\n\n\t* tools/tiff2ps.c: Fixed wrong variable data type when read Position\n\ttags (Tristan Hill).\n\n2004-10-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiffiop.h: added fallback definition of assert() if we\n\tdon't have assert.h.\n\n2004-10-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Fixed case with the wrong decode routines\n\tchoosing when the incorrect Group4Options tag set. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=323\n\n\t* libtiff/tif_dirwrite.c: Fixed problem with passing count variable of\n\twrong type when writing the TIFF_BYTE/TIFF_SBYTE tags in\n\tTIFFWriteNormalTag().\n\n2004-10-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Fixed wrong variable data type when read Resolution\n\ttags (Peter Fales).\n\n\t* tools/{bmp2tiff.c, raw2tiff.c}: Get rid of stream I/O functions.\n\n2004-10-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: added casts to avoid warnings.\n\n\t* libtiff/libtiff.def: Added several more entry points required\n\tto link fax2tiff.c against the DLL on windows.\n\n2004-10-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, configure.ac: Added --enable-rpath option to embed linker\n\tpaths into library binary.\n\n2004-10-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: Check the malloc return value (Dmitry V. Levin).\n\n\t* libtiff/{tif_strip.c, tif_tile.c}: Zero division problem fixed\n\t(Vladimir Nadvornik, Dmitry V. Levin).\n\n2004-10-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0 released.\n\n2004-10-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: There seems to be no need to include stdio.h\n\tin this file so its inclusion is removed.  Including stdio.h\n\tsometimes incurs an INT32 typedef conflict between MinGW's\n\tbasetsd.h and libjpeg's jmorecfg.h.\n\n2004-10-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* man/bmp2tiff.1: Added manual page for bmp2tiff utility.\n\n2004-10-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcmp.c (leof): Renamed from 'eof' in order to avoid\n\tconflict noticed under MinGW.\n\t* ltmain.sh: Fix for MinGW compilation.\n\n2004-10-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* man/tiffsplit.1: Fixed to indicate using aaa-zzz, not aa-zz.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=635\n\n2004-10-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_jpeg.c, tif_luv.c, tif_ojpeg.c,\n\ttif_pixarlog.c, tif_write.c}: Handle the zero strip/tile sizes\n\tproperly (Dmitry V. Levin, Marcus Meissner).\n\n2004-10-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Type of the TIFFTAG_SUBIFD field changed\n\tto TIFF_IFD.\n\n2004-10-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/bmp2tif.c: Check the space allocation results.\n\n2004-10-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Initialize td_tilewidth and td_tilelength fields\n\tof the TIFFDirectory structure with the 0 instead of -1 to avoid\n\tconfusing integer overflows in TIFFTileRowSize() for striped images.\n\n\t* tools/tiff2pdf.c: Fixed TransferFunction tag handling reported\n\tby Ross A. Finlayson.\n\n\t* libtiff/tif_dir.c: Fixed custom tags handling as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=629\n\n2004-10-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Fix bug with tif_foundfield and reallocation\n\tof tif_fieldinfo.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=630\n\n2004-10-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* contrib/iptcutil/README: Added the missing README which goes\n\talong with iptcutil.\n\n2004-10-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_compress.c: Improved error reporting in\n\tTIFFGetConfiguredCODECs() (Dmitry V. Levin).\n\n2004-10-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0beta2 released.\n\n\t* libtiff/{tif_aux.c, tif_compress.c, tif_dirinfo.c, tif_dirwrite.c,\n\ttif_extension.c, tif_fax3.c, tif_luv.c, tif_packbits.c,\n\ttif_pixarlog.c, tif_write.c}: Added checks for failed memory\n\tallocations and\tinteger overflows (Dmitry V. Levin).\n\n\t* libtiff/tiff.h: Missed TIFF_BIGTIFF_VERSION constant added.\n\n2004-10-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: added a more informative message if a BigTIFF\n\tfile is opened.\n\n2004-09-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: changed type of XMLPacket (tag 700) to\n\tTIFFTAG_BYTE instead of TIFFTAG_UNDEFINED to comply with the info\n\tin the Adobe XMP Specification.\n\n2004-09-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_jpeg.c, tif_pixarlog.c}: Use _TIFFmemset() instead of\n\tmemset().\n\n\t* libtiff/{tif_dirread.c, tif_strip.c, tif_tile.c}: Applied patches\n\tfrom Dmitry V. Levin to fix possible integer overflow problems.\n\n2004-09-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Check for allocated buffers before clearing\n\t(Dmitry V. Levin).\n\n2004-09-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.h, tif_dir.c, tif_dirread.c, tif_write.c}:\n\tOptimize checking for the strip bounds.\n\n\t* libtiff/{tif_dirread.c, tif_strip.c}: TIFFScanlineSize() and\n\tTIFFRasterScanlineSize() functions report zero in the case of integer\n\toverflow now. Properly handle this case in TIFFReadDirectory()\n\t(patches from Dmitry V. Levin).\n\n2004-09-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirinfo.c, tif_strip.c, tif_tile.c}: Use TIFFhowmany8()\n\tmacro where appropriate.\n\n\t* tools/tiff2bw.c: Write ImageWidth/Height tags to output file, as\n\tnoted by Gennady Khokhorin.\n\n\t* libtiff/tif_dirread.c: Always check the return values, returned\n\tby the _TIFFmalloc() (Dmitry V. Levin).\n\n\t* libtiff/tif_dir.c: Fixed possible integer overflow _TIFFset*Array()\n\tfunctions (Dmitry V. Levin).\n\n\t* libtiff/{tif_dirread.c, tif_dir.c, tif_write.c}:\n\tPotential memory leak fixed in TIFFReadDirectory(), _TIFFVSetField(),\n\tTIFFGrowStrips() (found by Dmitry V. Levin).\n\n2004-09-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_compress.c}: Added TIFFGetConfiguredCODECs()\n\tto get the list of configured codecs.\n\n\t* libtiff/{tiffiop.h, tif_dirread.c}: More overflow fixes from\n\tDmitry V. Levin.\n\n2004-09-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Applied patch from Dmitry V. Levin to fix\n\tpossible integer overflow in CheckMalloc() function.\n\n2004-09-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_strip.c}: Use TIFFhowmany8() macro instead\n\tof plain TIFFhowmany() where appropriate.\n\n2004-09-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Initialize arrays after space allocation.\n\n2004-09-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0beta released.\n\n\t* libtiff/{tif_luv.c, tif_next.c, tif_thunder.c}: Several buffer\n\toverruns fixed, as noted by Chris Evans.\n\n2004-09-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* commit: Added a script to make it more convenient to commit\n\tupdates.  The CVS commit message is extracted from this ChangeLog\n\tfile.\n\n2004-09-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, configure, aclocal.m4, libtiff/{mkspans.c, tif_fax3.c,\n\ttif_getimage.c, tif_luv.c, tif_lzw.c, tif_ojpeg.c, tif_packbits.c,\n\ttif_predict.c, tif_read.c, tif_swab.c, tif_thunder.c, tif_write.c,\n\ttif_dir.c, tif_dirread.c, tif_dirwrite.c, tif_jpeg.c, tif_dirinfo.c,\n\ttif_vms.c, tif_print.c, tif_strip.c, tif_tile.c, tif_dir.h,\n\ttif_config.h.in, tiffiop.h}:\n\tGet rid of BSD data types (u_char, u_short, u_int, u_long).\n\n2004-09-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiff.h: Fix column tagging. Reference current Adobe XMP\n\tspecification. Reference libtiff bug tracking system to submit\n\tprivate tag additions.\n\n2004-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffgt.c: Include \"tif_config.h\".\n\n\t* configure.ac: Use AM_PROG_CC_C_O since it is now needed to build\n\ttiffgt.  This results in the 'compile' script being added to the\n\tproject.\n\n\t* tools/Makefile.am (tiffgt_CFLAGS): Add extra build options\n\trequired to find OpenGL headers necessary to build tiffgt.  Also\n\tensure that the libtiff that we built is used rather than some other\n\tlibtiff installed on the system.\n\n2004-09-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, acinclude.m4, aclocal.m4: New macros to detect GLUT\n\tlibraries.\n\n2004-09-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Pass library configuration defines via\n\ttif_config.h rather than extending CPPFLAGS. Configure a\n\tlibtiff/tiffconf.h in order to satisfy application requirements\n\t(not used by library build). Do not define _POSIX_C_SOURCE=2 since\n\tthis causes failure to build on systems which properly respect\n\tthis request.\n\n\t* libtiff/tiffconf.h.in: New file to act as the template for the\n\tconfigured tiffconf.h\n\n\t* libtiff/files.lst (HDRS): Install the configured tiffconf.h.\n\n2004-09-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/internals.html: Split off a discussion of adding new tags\n\tinto addingtags.html.\n\n2004-09-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* test/{ascii_tag.c, long_tag.c}: Preliminary test suite added.\n\n\t* tools/tiff2pdf.c: Fixed reading TransferFunction tag as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=590\n\n\t* libtiff/tif_print.c: Fixes in InkNames and NumberOfInks reporting.\n\n\t* libtiff/tif_dirread.c: Don't reject to read tags of the\n\tSamplesPerPixel size when the tag count is greater than number of\n\tsamples as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=576\n\n\t* libtiff/tiff.h: Use _TIFF_DATA_TYPEDEFS_ guardian to switch off\n\tdefining int8/uint8/... etc. types. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=607\n\n2004-09-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2ps.c, tools/tiffmedian.c: fiddle with include files\n\tto avoid compile warnings about getopt() and a few other things.\n\n2004-09-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Use memcpy() function instead of pointer\n\tassigning magic in TIFFFetchFloat().\n\n2004-09-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_open.c}: Applied patches from Joris Van Damme\n\tto avoid requirement for tiffiop.h inclusion in some applications. See\n\there\n\n\thttp://www.asmail.be/msg0054799560.html\n\n\tfor details.\n\n\t* tools/fax2tiff.c: Use the new functions in the code.\n\n2004-08-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Initialize arrays properly.\n\n\t* tools/tiff2ps.c: Avoid zero division in setupPageState() function;\n\tproperly initialize array in PSDataBW().\n\n2004-08-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: More fixes for bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=590\n\n\tfrom Ross Finlayson.\n\n2004-08-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Fixed problem with uninitialized values.\n\n\t* libtiff/tif_dir.c: Initialize tif_foundfield data member in the\n\tTIFFDefaultDirectory() (in addition to 2004-08-19 fix).\n\n\t* tools/tiff2pdf.c: Fixed a bunch of problems as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=590\n\n2004-08-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Applied patch from Ross Finlayson that checks\n\tthat the input file has compression, photometric interpretation,\n\tetcetra, tags or if not than a more descriptive error is returned.\n\n\t* libtiff/tif_dirread.c: Fixed problem in TIFFReadDirectory() in the\n\tcode, responsible for tag data type checking.\n\n2004-08-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_dirinfo.c}: Fixed problem with the static\n\tvariable as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=593\n\n2004-08-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ras2tiff.c: Fixed issue with missed big-endian checks as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=586\n\n2004-08-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_config.h.in, tif_config.h.vc}: config.h.in and\n\tconfig.h.vc files renamed in the tif_config.h.in and tif_config.h.vc.\n\n2004-07-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_lzw.c: LZW compression code is merged back from the\n\tseparate package. All libtiff tools are updated to not advertise an\n\tabcence of LZW support.\n\n2004-07-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffio.h: Revert thandle_t back to void* type.\n\n2004-07-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_read.c, tif_tile.c, tif_strip.c}: Fixes in error\n\tmessages, as suggested by Bernd Herd.\n\n2004-07-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Call TIFFError() instead of producing warnings\n\twhen setting custom tags by value. Reported by Eric Fieleke.\n\n2004-06-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/bmp2tiff.c: Add missed RawsPerStrip setting.\n\n2004-06-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/bmp2tiff.c: Added new utility to convert Windows BMP files\n\tinto TIFFs.\n\n2004-06-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0alpha released.\n\n2004-06-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiff.h, tif_dirwrite.c, tif_fax3.c, tif_packbits.c,}: Get rid\n\tof ugly 64-bit hacks, replace them with the clever (autoconf based )\n\tones :-).\n\n\t* libtiff/tiffio.h: Define thandle_t as int, not void* (may cause\n\tproblems in 64-bit environment).\n\n2004-06-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: tiffset now can set any libtiff supported tags.\n\tTags can be supplied by the mnemonic name or number.\n\n\t* libtiff/{tiffio.h, tif_dir.h, tif_dirinfo.c,}: Added two new\n\tfunctions TIFFFindFieldInfoByName() and TIFFFieldWithName().\n\n2004-05-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_ojpeg.c: Fixed problem with duplicated SOI and SOF\n\tmarkers as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=581\n\n2004-05-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Don't forget to copy Photometric\n\tInterpretation tag.\n\n2004-05-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_open.c, tiffio.h}: New function added:\n\tTIFFIsBigEndian(). Function returns nonzero if given was file written\n\tin big-endian order.\n\n\t* tools/tiffsplit.c: Fixed problem with unproperly written multibyte\n\tfiles. Now output files will be written using the same byte order\n\tflag as\tin the input image. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=574\n\n\tfor details.\n\n2004-05-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: added (untested) support for printing\n\tSSHORT, SLONG and SRATIONAL fields.\n\n\t* tools/tiffcp.c: close output file on normal exit.\n\n2004-05-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Avoid reading CCITT compression options\n\tif compression type mismatches. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=565\n\n2004-04-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_strip.c: Never return 0 from the\n\tTIFFNumberOfStrips().\n\n2004-04-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Workaround for broken TIFF writers which\n\tstore single SampleFormat value for multisampled images. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=562\n\n2004-04-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/{tiff.h, config.h.in}: Added tests for int8,\n\tint16 and int32 types to avoid complains on some compilers. Details at\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2004-04-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Fixed problem with unaligned access as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=555\n\n2004-04-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Allow in-place updating of the compressed\n\timages (don't work properly with all codecs). For details see GDAL bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=534\n\n2004-04-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jpeg.c: Workaround for wrong sampling factors used\n\tin the Intergarph JPEG compressed TIFF images as per bug:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=532\n\n2004-04-04  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: close clientdata if TIFFClientOpen() fails\n\tvia bad2.\n\n2004-03-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Properly set Photometric Interpretation in case of\n\tJPEG compression of grayscale images.\n\n\t* tools/tiffcp.c: Don't emit warnings when Orientation tag does not\n\tpresent in the input image.\n\n2004-03-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* {many}: The first attempt to switch to autotools.\n\n2004-03-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Use dummy mmap/munmap functions in\n\tTIFFClientOpen() when the appropriate client functions was not\n\tsupplied by user.\n\n2004-03-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/ycbcr.c: fixed main() declaration as per:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=513\n\n2004-02-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Copy JPEGTables tag contents for JPEG compressed\n\timages. Reported by Artem Mirolubov.\n\n\t* libtiff/tif_dirread.c: Fixed problem with handling TIFF_UNDEFINED\n\ttag type in TIFFFetchNormalTag() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=508\n\n2004-02-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_codec.c: Fixed typo in TIFFInitPackBits name as per:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=494\n\n2004-02-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Fixed problem with CCITT encoding modes as per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=483\n\n\tBut we need more work on fax codec to support update mode.\n\n2004-01-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Added TIFFCurrentDirOffset, TIFFWriteCheck,\n\tTIFFRGBAImageOK, and TIFFNumberOfDirectories as suggested by\n\tScott Reynolds.\n\n2004-01-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiff.h: Fixed tag definitions for TIFFTAG_YCLIPPATHUNITS\n\tand TIFFTAG_INDEXED as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=475\n\n\t* libtiff/{tif_win32.c, tif_unix.c}: Check whether the pointer is\n\tNULL before proceeding further as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=474\n\n\tCheck results, returned by the TIFFFdOpen() before returning and close\n\tfile if TIFFFdOpen() failed as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=468\n\n\t* libtiff/tif_open.c: More fixes for\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=468\n\n2004-01-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{libtiff.def, tif_close.c, tiffio.h, tif_open.c}: Separate\n\tTIFFCleanup() from the TIFFClose() in order to fix the bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=468\n\n\t* tools/tiffcp.c: Fixed problem with wrong interpretation of the\n\tInkNames tag as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=466\n\n\tMemory leak fixed.\n\n2004-01-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: Fixed handling of writable ASCII tags that\n\tare field_passcount=TRUE properly.  Arguably anonymous custom tags\n\tshould be declared as passcount=FALSE, but I don't want to change\n\tthat without a careful review.\n\n2004-01-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Fixed reporting size of the buffer in case of\n\tstripped image in TIFFWriteBufferSetup(). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=460\n\n2004-01-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Incomplete cleanup in TIFFFreeDirectory(),\n\tpatch from Gerben Koopmans.\n\n\t* libtiff/tif_dirread.c: Check field_passcount value before setting\n\tthe value of undefined type, patch from Gerben Koopmans.\n\n2004-01-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Fixed problem with wrong Photometric setting for\n\tnon-RGB images.\n\n2003-12-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_win32.c: Fixed problem with _TIFFrealloc() when the NULL\n\tpointer passed. Patch supplied by Larry Grill.\n\n\t* libtiff/{tiff.h, tif_fax3.c}:Fixes for AMD 64 platform as\n\tsuggested by Jeremy C. Reed.\n\n2003-12-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.6.1 released.\n\n2003-12-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* config.guess, config.sub: Updated from the recent upstream.\n\n2003-12-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_color, tif_getimage.c, tiffio.h}, man/TIFFcolor.3t:\n\tMore cleanups in color conversion interface, added appropriate manual\n\tpage.\n\n2003-12-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_extension.c, tif_dirinfo.c, tiff.h}: Warnings fixed as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=357\n\n\t* tools/tiff2ps.c: Added support for alpha channel. Fixes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=428\n\n\t* libtiff/{libtiff.def, tif_color.c, tif_getimage.c, tiffio.h}:\n\tInterface for Lab->RGB color conversion is finally cleaned up.\n\tAdded support for ReferenceBlackWhite tag handling when converted from\n\tYCbCr color space. The latter closes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=120\n\n2003-12-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tiffio.h}: Avoid warnings.\n\n\t* libtiff/makefile.vc, tools/makefile.vc: Support for IJG JPEG\n\tlibrary.\n\n2003-12-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tif_aux.c}: Read WhitePoint tag from the\n\tfile and properly use it for CIE Lab->RGB transform.\n\n2003-12-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tif_color.c, tiffio.h}: YCbCr->RGB\n\tconversion routines now in the tif_color.c module. New function\n\tTIFFYCbCrtoRGB() available in TIFF API.\n\n\t* libtiff/tif_dirwrite.c: Handle TIFF_IFD tag type correctly.\n\n2003-12-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tif_color.c, tiffio.h}: Improvements in\n\tCIE Lab conversion code. Start moving YCbCr stuff to the tif_color.c\n\tmodule.\n\n\t* libtiff/{tif_getimage.c, tiffio.h}, man{TIFFReadRGBAImage.3t,\n\tTIFFReadRGBAStrip.3t, TIFFReadRGBATile.3t, TIFFRGBAImage.3t}:\n\tFinally resolved problems with orientation handling. TIFFRGBAImage\n\tinterface now properly supports all possible orientations, i.e. images\n\twill be flipped both in horizontal and vertical directions if\n\trequired. 'Known bugs' section now removed from the appropriate manual\n\tpages. Closed bug entry:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=322\n\n2003-12-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Fixed order of the parameters in TIFFError()\n\tfunction calls as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=440\n\n2003-11-28 Ross Finlayson  <libtiff@apexinternetsoftware.com>\n\n\t* tools/tiff2pdf.c:  Some bugs fixed.\n\n2003-11-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_luv.c: Fixed bug in 48-bit to 24-bit conversion routine,\n\treported by Antonio Scuri.\n\n\t* man/tiff2pdf.1: Few improvements in page layout.\n\n\t* Makefile.in, /man/Makefile.in, /html/man/tiff2pdf.1.html:\n\t Added support fpr tiff2pdf manual page.\n\n2003-11-26 Ross Finlayson  <libtiff@apexinternetsoftware.com>\n\n\t* /man/tiff2pdf.1:  File added to repository.\n\n2003-11-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in, /tools/{Makefile.in, makefile.vc}:\n\t Added support fpr tiff2pdf utility.\n\n2003-11-25  Ross Finlayson  <libtiff@apexinternetsoftware.com>\n\n\t* /tools/tiff2pdf.c:  File added to repository.\n\n2003-11-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/raw2tiff.c: sqrtf() replaced with sqrt().\n\n2003-11-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/raw2tiff.c: #include <getopt.h> removed.\n\n\t* tools/{Makefile.in, tiffgt.c}: Unmaintained and platform dependent\n\tsgigt utility removed and replaced with the completely rewritten\n\tportable tiffgt tool (depend on OpenGL and GLUT). Initial revision,\n\tthere is a lot of things to improve.\n\n\t* libtiff/tif_ojpeg.c: TIFFVGetField() function now can properly\n\textract the fields from the OJPEG files. Patch supplied by Ross\n\tFinlayson.\n\n\t* libtiff/{tiffio.h, tif_codec.c}, man/{libtiff.3t, TIFFcodec.3t}:\n\tAdded new function TIFFIsCODECConfigured(), suggested by Ross\n\tFinlayson.\n\n2003-11-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Implemented binary search in\n\t_TIFFMergeFieldInfo(). Patch supplied by Ross Finlayson.\n\n\t* libtiff/tif_dir.h: _TIFFFindOrRegisterdInfo declaration replaced\n\twith _TIFFFindOrRegisterFieldInfo as reported by Ross Finlayson.\n\n2003-11-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: do not mark all anonymously defined tags to be\n\tIGNOREd.\n\n2003-11-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/pds/{tif_pdsdirread.c, tif_pdsdirwrite.c}: Use\n\tTIFFDataWidth() function insted of tiffDataWidth array.\n\n2003-11-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiff.h, tif_dirinfo.c}: Added support for IFD (13)\n\tdatatype, intruduced in \"Adobe PageMaker TIFF Tech. Notes\".\n\n2003-11-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Makefile.in: fixed missing backslash for tif_color.c in list.\n\n2003-11-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_color.c, tif_getimage.c, tiffio.h, Makefile.in}:\n\tNew color space conversion code: CIE L*a*b* 1976 images now supported\n\tby the TIFFRGBAImage interface. All introduced routines go to new\n\tmodule tif_color.c. Eventually all color conversion functions should\n\tbe moved there.\n\n2003-11-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/{ras2tiff.c, rasterfile.h}: Properly determine SUN Rasterfiles\n\twith the reverse byte order (it is reported by the magic header\n\tfield). Problem reported by Andreas Wiesmann.\n\n\t* tools/raw2tiff.c, man/raw2tiff.1: Few improvements in correlation\n\tcalculation function. Guessing mechanics now documented in manual page.\n\n2003-11-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/raw2tiff.c: Implemented image size guessing using\n\tcorrelation coefficient calculation between two neighbour lines.\n\n2003-11-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_tile.c: remove spurious use of \"s\" (sample) in the\n\tplanarconfig_contig case in TIFFComputeTile().\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=387\n\n2003-11-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffiop.h: New macros: TIFFmax, TIFFmin and TIFFrint.\n\n2003-11-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_strip.c}, man/{TIFFstrip.3t, libtiff.3t}:\n\tAdded TIFFRawStripSize() function as suggested by Chris Hanson.\n\n2003-11-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_lzw.c, tif_fax3.c}: Proper support for update mode as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=424\n\n2003-10-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added TIFFReadRGBAImageOriented.\n\n\t* html/build.html: Added note about GNU make requirement.\n\n2003-10-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in: Fixes in using MAKEFLAGS as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=418\n\n\t* port/install.sh.in: Option -p added to the mkdir command to create\n\tall directory tree structure before installing.\n\n2003-10-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/tiff2ps.c: #include <strings.h> replaced with the\n\t#include <string.h>.\n\n2003-10-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in: Add an absolute path to the test_pics.sh call.\n\n2003-10-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffcomp.h: #define _BSDTYPES_DEFINED when defining BSD\n\ttypedefs.\n\n2003-10-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, libtiff/{Makefile.in, mkversion.c}:\n\tRelative buildings fixed.\n\n\t* tools/Makefile.in: Added \"-I../libtiff\" to the tiffset building\n\trule.\n\n2003-10-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in: Added missed v3.6.0.html.\n\n\t* libtiff/tiffio.h: Typo fixed: ORIENTATION_BOTTOMLEFT replaced with\n\tORIENTATION_BOTLEFT.\n\n2003-10-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* 3.6.0 final release.\n\n2003-10-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tiffio.h}, man/TIFFReadRGBAImage.3t: New\n\tfunction TIFFReadRGBAImageOriented() implemented to retrieve raster\n\tarray with user-specified origin position as suggested by Jason Frank.\n\tSee\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=322\n\n\tfor details.\n\n\t* tools/tiff2rgba.c: Switched to use TIFFReadRGBAImageOriented()\n\tinstead of TIFFReadRGBAImage().\n\n\t* tools/tiff2ps.c: Fixed possible endless loop as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=404\n\n2003-09-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Check field counter against number of fields\n\tin order to fix\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=366\n\n\t* libtiff/tif_fax3.c: Fix wrong line numbering as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=342\n\n2003-09-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_dirread.c, tif_dir.c, tif_open.c,\n\ttif_close.c}: Store a list of opened IFD to prevent looping as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=383\n\n2003-09-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: More fixes for\tEstimateStripByteCounts(). See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=358\n\n2003-08-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffmedian.c: int declaration replaced with the uint32 to\n\tsupport large images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=382\n\n2003-08-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n \t* libtiff/Makefile.in: Fixed problem with building in different\n\tdirectory.\n\n\t* tools/tiff2ps.c: Added missing #include <strings.h>.\n\n\t* libtiff/tif_dirwrite.c: More fixes for custom tags code\n\tfrom Ashley Dreier.\n\n2003-08-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Added page size setting when creating PS Level 2.\n\tPatch submitted by Balatoni Denes (with corrections from Tom\n\tKacvinsky).\n\n\t* tools/tiff2ps.c: Fixed PS comment emitted when FlateDecode is\n\tbeing used. Reported by Tom Kacvinsky.\n\n\t* libtiff/tif_dirwrite.c: Fixed problem with custom tags writing,\n\treported by Ashley Dreier.\n\n\t* libtiff/tif_print.c: Fixed problem with float tags reading, support\n\tfor printing RATIONAL and BYTE tags added.\n\n2003-08-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_lzw.c: Move LZW codec state block allocation back to\n\tTIFFInitLZW(), because its initialization in LZWSetupDecode() cause\n\tproblems with predictor initialization. Remove O_RDONLY check during\n\tstate block allocation to be able open LZW compressed files in update\n\tmode.\n\n\tProblem exist for libtiff version of the tif_lzw.c module. One from\n\tlzw-compression-kit hasn't such troubles.\n\n2003-08-04  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: modified tif_write.c so that the various\n\tencoded write functions use tif_postdecode() to apply byte order\n\tswapping (swab) to the application passed data buffer if the same\n\twould be done when reading.  This allows us to write pixel data with\n\tmore than 8 bits per sample to existing files of a non-native byte\n\torder.  One side effect of this change is the applications buffer\n\titself is altered in this case by the act of writing.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=171\n\n2003-07-25  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: avoid signed/unsigned casting warning\n\tinitializing typemask as per patch from J.A. Strother.\n\n\t* tools/tiffcp.c: fixed signed/unsigned casting warning.\n\n\t* libtiff/tif_print.c: dos2unix conversion.\n\n\t* tools/tiffsplit.c: increased the maximum number of pages that\n\tcan be split.  Patch provided by Andrew J. Montalenti.\n\n2003-07-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/raw2tiff.c: Added option `-p' to explicitly select color\n\tspace of input image data. Closes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=364\n\n2003-07-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_aux.c, tif_codec.c, tif_dir.c, tif_dirread.c, tif_extension.c,\n\ttif_fax3.c, tif_getimage.c, tif_luv.c, tif_lzw.c, tif_next.c,\n\ttif_packbits.c, tif_predict.c, tif_print.c, tif_swab.c, tif_thunder.c:\n\tavoid casting warning at /W4.\n\n2003-07-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/thumbnail.c: Memory leak fixed as reported by Robert S. Kissel.\n\n2003-06-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_pixarlog.c: Unused variables removed.\n\n\t* libtiff/{tif_dirread.c, tif_dir.c}: Fixed problem with\n\tEstimateStripByteCounts() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=358\n\n\t* libtiff/{tif_dirwrite.c, tif_packbits.c}: Fixed compilation on\n\t64-bit architectures as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=357\n\n\t* libtiff/tif_dirinfo.c: TIFFDataWidth() returns 0 in case of\n\tunknown data type.\n\n2003-06-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: fixed some serious bugs when printing\n\tcustom tags ... almost certain to crash.\n\n\t* libtiff/tif_dirread.c: Don't ignore custom fields that are\n\tautodefined.  Not sure how this got to be like this.\n\n2003-06-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* 3.6.0 Beta2 released.\n\n\t* tools/tiffcmp.c, man/tiffcmp.1: Fixed problem with unused data\n\tcomparing as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=349\n\n\t`-z' option now can be used to set the number of reported different\n\tbytes.\n\n2003-06-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c, man/tiffcp.1: Added possibility to specify value -1\n\tto -r option to get the entire image as one strip. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=343\n\n\tfor details.\n\n2003-06-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Set the correct RowsPerStrip and PageNumber\n\tvalues as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=343\n\n2003-05-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: modified segment_height calculation to always\n\tbe a full height tile for tiled images.  Also changed error to just\n\tbe a warning.\n\n2003-05-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Page numbering fixed, as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=341\n\n2003-05-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/ojpeg/{Makefile.in, jdhuff.h, jinclude.h, ojpeg.c, README},\n\tconfigure, Makefile.in:\tSwitched back to the old behaviour. Likely\n\tbetter solution should be found for OJPEG support.\n\n2003-05-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/mkversion.c: Fixed problem with wrong string size when\n\treading RELEASE-DATE file.\n\n2003-05-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Fixed bug in Ascii85EncodeBlock() function: array\n\tindex was out of range.\n\n2003-05-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/ojpeg/{Makefile.in, jdhuff.h, jinclude.h, ojpeg.c, README},\n\tconfigure, Makefile.in:\tImproved libtiff compilation with OJPEG\n\tsupport. Now no need for patching IJG JPEG library, hack requred by\n\tlibtiff will be compiled and used in-place. Implemented with\n\tsuggestion and help from Bill Allombert, Debian's libjpeg maintainer.\n\n\t* libtiff/tif_aux.c: Properly handle TIFFTAG_PREDICTOR in\n\tTIFFVGetFieldDefaulted() function.\n\n2003-05-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ppm2tiff.c: PPM header parser improved: now able to skip\n\tcomments.\n\n\t* tools/tiffdither.c: Fixed problem with bit fill order tag setting:\n\twas not copied from source image.\n\n\t* libtiff/getimage.c: Workaround for some images without correct\n\tinfo about alpha channel as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=331\n\n2003-04-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c, man/tiff2ps.1: Add ability to generate PS Level 3.\n\tIt basically allows one to use the /flateDecode filter for ZIP\n\tcompressed TIFF images. Patch supplied by Tom Kacvinsky. Fixes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=328\n\n\t* tools/tiff2ps.c: Force deadzone printing when EPS output specified\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=325\n\n2003-04-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Removed additional check for StripByteCounts\n\tdue to problems with multidirectory images. Quality of error messages\n\timproved.\n\n2003-04-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Fixed problem with colorspace conversion for JPEG\n\tencoded images. See bug entries\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=275\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=23\n\n\t* libtiff/tif_dirread.c: Additional check for StripByteCounts\n\tcorrectness. Fixes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=320\n\n2003-03-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/{fax2ps.c, fax2tiff.c, gif2tiff.c, pal2rgb.c, ppm2tiff.c,\n\tras2tiff.c, raw2tiff.c, rgb2ycbcr.c, thumbnail.c, tiff2bw.c,\n\ttiff2ps.c, tiff2rgba.c, tiffcp.c, tiffdither.c, tiffinfo.c,\n\ttiffmedian.c}: Added library version reporting facility to all tools.\n\n2003-03-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* port/install.sh.in: Fixed problems with install producing paths\n\tlike ///usr/local/lib on cygwin.\n\n2003-02-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c, man/fax2tiff.1: New switch (-X) to set width of\n\traw input page. Patch supplied by Julien Gaulmin. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=293\n\n\tfor details.\n\n2003-02-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fixed up the tif_postdecode settings\n\tresponsible for byte swapping complex image data.\n\n\t* libtiff/tif_lzw.c: fixed so that decoder state isn't allocated till\n\tLZWSetupDecode().  Needed to read LZW files in \"r+\" mode.\n\n2003-02-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ppm2tiff.c: Fixed problem with too many arguments.\n\n2003-02-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/raw2tiff.c: Memory leak fixed.\n\n2003-02-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c, man/fax2tiff.1: Applied patch from Julien Gaulmin\n\t(thanks, Julien!). More switches for fax2tiff tool for better control\n\tof input and output. Details at\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=272\n\n2003-02-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Modified to defer initialization of jpeg\n\tlibrary so that we can check if there is already any tile/strip data\n\tbefore deciding between creating a compressor or a decompressor.\n\n2003-01-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: TIFFWriteCheck() now fails if the image is\n\ta pre-existing compressed image.  That is, image writing to\n\tpre-existing compressed images is not allowed.\n\n\t* libtiff/tif_open.c: Removed error if opening a compressed file\n\tin update mode.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=198\n\n2003-01-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* config.guess, config.sub: Updated to recent upstream versions.\n\n2003-01-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* cut 3.6.0 Beta release.\n\n2002-12-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2ps.c, man/fax2ps.1: Page size was determined\n\tin wrong way as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=239\n\n2002-12-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Allow wrong sized arrays in\n\tTIFFFetchStripThing().\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=49\n\n2002-12-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fix problem with test on td_customValueCount.\n\tWas using realloc even first time.  Fix by Igor Venevtsev.\n\n2002-11-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fixed bug with resetting an existing custom\n\tfield value.\n\n\t* libtiff/tif_dir.c: Fixed potential problem with ascii \"custom\"\n\ttags in TIFFVGetField() ... added missing break.\n\n2002-10-14  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2ps.c: fixes a problem where \"tiff2ps -1e\" did not make\n\tthe scanline buffer long enough when writing rgb triplets.\n\tThe scanline needs to be 3 X the number of dots or else it will\n\tcontain\tan incomplete triplet and programs that try to separate\n\tthe eps by redefining the colorimage operator will get messed up.\n\tPatch supplied by William Bader.\n\n\t* Makefile.in: added tif_extension.c to file list as per\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=218.\n\n2002-10-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, config.site, libtiff/{tif_unix.c, Makefile.in}: Fix for\n\tlarge files (>2GiB) supporting. New option in the config.site:\n\tLARGEFILE=\"yes\". Should be enough for I/O of the large files.\n\n2002-10-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/html/v3.6.0.html: new release notes.\n\n\t* libtiff/index.html: removed faq, cvs snapshot cruft.  Added email\n\tlink for Andrey.  Pointer to v3.6.0.html.\n\n\t* libtiff/Makefile.in: added direct rule for tiffvers.h for release.\n\n2002-10-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\t* tools/tiff2ps.c, man/tiff2ps.1: Applied patch form Sebastian Eken\n\t(thanks, Sebastian!). New switches:\n\t-b # for a bottom margin of # inches\n\t-c   center image\n\t-l # for a left margin of # inches\n\t-r   rotate the image by 180 degrees\n\tNew features merged with code for shrinking/overlapping.\n\tPreviously added -c and -n switches (for overriding PS units) renamed\n\tin -x and -y respectively.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=200\n\n\t* html/man/*.html: Updated from actual manual pages.\n\n2002-10-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: fixed problem with boolean defined with wrong\n\tsize on windows.  Use #define boolean hack.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=188\n\n\t* libtiff/tiff.h: Don't do special type handling in tiff.h unless\n\tUSING_VISUALAGE is defined.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2002-10-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h: added COMPRESSION_JP2000.\n\n2002-10-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Another fix for the fetching SBYTE arrays\n\tby the TIFFFetchByteArray() function. Should finally resolve\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=52\n\n\t* configure: Set -DPIXARLOG_SUPPORT option along with -DZIP_SUPPORT\n\n\t* html/Makefile.in: New targets added: html and groffhtml for\n\tproducing HTML representations of the manual pages automatically.\n\thtml target uses man2html tool, groffhtml uses groff tool.\n\n2002-09-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, libtiff/Makefile.in: Added SCO OpenServer 5.0.6 support\n\tfrom John H. DuBois III.\n\n2002-09-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in, /man/{raw2tiff.1, Makefile.in, libtiff.3}: Added\n\tmanual page for raw2tiff(1) tool.\n\n2002-09-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/{tiffio.h, tif_dir.h}: TIFFDataWidth() declaration moved to\n\tthe tiffio.h header file.\n\n\t* Makefile.in, /man/{TIFFDataWidth.3t, Makefile.in, libtiff.3}: Added\n\tmanual page for TIFFDataWidth() function\n\n2002-09-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Expand v[2] to v[4] in TIFFFetchShortPair()\n\tas per http://bugzilla.remotesensing.org/show_bug.cgi?id=196.\n\n\t* tools/tiff2ps.c: Don't emit BeginData/EndData DSC comments\n\tsince we are unable to properly include the amount to skip.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=80\n\n2002-09-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/tif_dirread.c: Fixed problem with SBYTE type data fetching\n\tin TIFFFetchByteArray(). Problem described at\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=52\n\n2002-08-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/tif_dirinfo.c: Further additions to free custom fields\n\tin _TIFFSetupFieldInfo() function.\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=169 for details.\n\n\t* /libtiff/tif_lzw.c: Additional consistency checking added in\n\tLZWDecode() and LZWDecodeCompat().\n\tFixes http://bugzilla.remotesensing.org/show_bug.cgi?id=190\n\tand http://bugzilla.remotesensing.org/show_bug.cgi?id=100\n\n\t* /libtiff/tif_lzw.c:\n\tAdded check for valid code lengths in LZWDecode() and\n\tLZWDecodeCompat(). Fixes\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=115\n\n2002-08-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/{Makefile.vc, libtiff.def}:\n\tMissed declarations added.\n\n2002-08-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_getimage.c: Ensure that TIFFRGBAImageBegin() returns the\n\treturn code from the underlying pick function.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=177\n\n\t* tif_dir.h: changed FIELD_CODEC to 66 from 64 to avoid overlap\n\twith FIELD_CUSTOM as mentioned in bug 169.\n\n\t* tif_close.c: added logic to free dynamically created anonymous\n\tfield definitions to correct a small memory leak.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=169\n\n2002-08-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/{raw2tiff.c, Makefile.in, Makefile.lcc, Makefile.vc}:\n\tNew tool: raw2tiff --- raw images to TIFF converter. No manual page yet.\n\n2002-07-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Fixed problem with setting of nrows in\n\tJPEGDecode() as per bugzilla bug (issue 1):\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=129\n\n\t* libtiff/{tif_jpeg.c,tif_strip.c,tif_print.c}: Hacked tif_jpeg.c to\n\tfetch TIFFTAG_YCBCRSUBSAMPLING from the jpeg data stream if it isn't\n\tpresent in the tiff tags.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=168\n\n\t* libtiff/tif_read.c, libtiff/tif_write.c: TIFFReadScanline() and\n\tTIFFWriteScanline() now set tif_row explicitly in case the codec has\n\tfooled with the value.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=129\n\n2002-06-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/tiff2ps.c: Added workaround for some software that may crash\n\twhen last strip of image contains fewer number of scanlines than\n\tspecified by the `/Height' variable. See\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=164\n\tfor explanation.\n\n2002-06-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps, man/tiff2ps.1: New functionality for tiff2ps utility:\n\tsplitting long images in several pages. See\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=142 for explanation.\n\tPatch granted by John Williams <williams@morinda.com>.\n\n2002-06-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/contrib/win95: renamed to contrib/win_dib.  Added new\n\tTiffile.cpp example of converting TIFF files into a DIB on Win32.\n\tThis one is described in:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=143\n\n\t* libtiff/tif_ojpeg.c: Major upgrade from Scott.  See details at:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=156\n\n2002-05-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps: New commandline switches to override resolution\n\tunits obtained from the input file. Closes\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=131\n\n2002-04-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added missed declaration.\n\n2002-04-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Updated to reflect latest changes in libtiff.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=125\n\n2002-04-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Pointers to custom procedures\n\tin TIFFClientOpen() are checked to be not NULL-pointers.\n\n2002-04-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added missed declarations.\n\n\t* libtiff/tif_pixarlog.c: Updated for using tif_tagmethods structure.\n\n2002-04-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_lzw.c: Additional checks for data integrity introduced.\n\tShould finally close\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=100\n\n2002-04-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps: Division by zero fixed.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=88\n\n2002-04-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_dirwrite.c, tif_write.c, tiffio.h:\n\tTIFFCheckpointDirectory() routine added.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=124\n\n\t* man/: TIFFWriteDirectory.3t,  Makefile.in: Added description\n\tfor the new function.\n\n2002-04-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_codec.c, tif_compress.c, tiffiop.h: Introduced\n\tadditional members tif->tif_decodestatus and tif->tif_encodestatus\n\tfor correct handling of unconfigured codecs (we should not try to read\n\tdata or to define data size without correct codecs).\n\n\t* libtiff/tif_getimage.c: The way of codecs checking in TIFFRGBAImageOK\n\tchanged. Now it has used tif->tif_decodestatus and\n\ttif->tif_encodestatus.\n\tShould fix http://bugzilla.remotesensing.org/show_bug.cgi?id=119 (in\n\tcase of __cvs_8.tif test image).\n\n\t* libtiff/: tif_dirinfo.c, tif_dirread.c: Somebody makes a bug in\n\ttif_dirread.c when TIFFCreateAnonFieldInfo was introduced.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=119 in case\n\tof _cvs_00000-00.tif, _cvs_00000-01.tif and _cvs_00000-02.tif.\n\n2002-04-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_lzw.c: Assertions in LZWDecode and LZWDecodeCompat\n\treplaced by warnings. Now libtiff should read corrupted LZW-compressed\n\tfiles by skipping bad strips.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=100\n\n2002-04-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: Removed some dead code.\n\n\t* libtiff/*: Cleanup some warnings.\n\n\t* libtiff/tif_dir.c: Fixed bug with count returned by TIFFGetField()\n\tfor variable length FIELD_CUSTOM values.  Was int * but should be\n\tu_short *.\n\n2002-04-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/: tifcp.c: Added support for 'Orientation' tag in tiffcp\n\tutility (at cpStripToTile routine).\n\n2002-03-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: avoid div-by-zero if rowbytes is zero in chop func.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=111\n\n\t* tif_print.c: Fixed so that ASCII FIELD_CUSTOM values with\n\tpasscount set FALSE can be printed (such as TIFFTAG_SOFTWARE).\n\n\t* libtiff/tif_dir.c,tif_dirinfo.c,tif_dir.h,tif_ojpeg.c: modified so\n\tthat TIFFTAG_SOFTWARE uses FIELD_CUSTOM as an example.\n\n2002-03-26  Dwight Kelly  <dbmalloc@remotesensing.org>\n\n\t* libtiff/: tiff.h, tif_dir.c, tif_dir.h, tif_dirinfo.c, tif_dirread.c,\n\ttif_dirwrite.c: Added get/put code for new tag XMLPACKET as defined\n\tin Adobe XMP Technote. Added missing INKSET tag value from TIFF 6.0 spec\n\tINKSET_MULTIINK (=2). Added missing tags from Adobe TIFF technotes:\n\tCLIPPATH, XCLIPPATHUNITS, YCLIPPATHUNITS, OPIIMAGEID, OPIPROXY and\n\tINDEXED. Added PHOTOMETRIC tag value from TIFF technote 4 ICCLAB (=9).\n\n2002-03-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_getimage.c: TIFFReadRGBAStrip and TIFFReadRGBATile\n\tnow also uses TIFFRGBAImageOK before reading. This is additional fix\n\tfor http://bugzilla.remotesensing.org/show_bug.cgi?id=110\n\n2002-03-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_getimage.c: Additional check for supported\n\tcodecs added in TIFFRGBAImageOK and TIFFReadRGBAImage now uses\n\tTIFFRGBAImageOK before reading.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=110\n\n2002-03-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_dir.c, tif_dir.h, tif_dirinfo.c, tif_dirread.c,\n\ttif_dirwrite.c: Added routine TIFFDataWidth for detrmining\n\tTIFFDataType sizes instead of working with tiffDataWidth array\n\tdirectly. Should prevent out-of-borders bugs in case of unknown or\n\tbroken data types.  EstimateStripByteCounts routine modified, so it\n\twon't work when tags with uknown sizes founded.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=109\n\n2002-03-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Added support for correct handling\n\t`Orientation' tag in gtTileContig. Should be added in other gt*\n\tfunctions as well, but I have not images for testing yet. Partially\n\tresolves http://bugzilla.remotesensing.org/show_bug.cgi?id=23\n\n2002-03-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_dirinfo.c, tif_dirwrite.c: Added possibility to\n\tread broken TIFFs with LONG type used for TIFFTAG_COMPRESSION,\n\tTIFFTAG_BITSPERSAMPLE, TIFFTAG_PHOTOMETRIC.  Closes\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=99\n\n2002-03-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/Makefile.in, tools/Makefile.in: Shared library will not\n\tbe stripped when installing, utility binaries will do.\tCloses\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=93\n\n2002-02-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* man/TIFFGetField: fixed type of TIFFTAG_COPYRIGHT.\n\n\t* man/libtiff.3t: added copyright tag info.\n\n2002-02-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/{tiff.h,tif_fax3.c}: Add support for __arch64__.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=94\n\n\t* man/Makefile.in: Patch DESTDIR handling\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=95\n\n\t* configure: OpenBSD changes for Sparc64 and DSO version.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=96\n\n2002-02-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* config.site/configure: added support for OJPEG=yes option to enable\n\tOJPEG support from config.site.\n\n2002-01-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/document.html: fixed links for TIFf 6 docs.\n\n2002-01-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* config.guess, config.sub: Updated from ftp.gnu.org/pub/config.\n\n\t* libtiff/tif_read.c: Fixed TIFFReadEncodedStrip() to fail if the\n\tdecodestrip function returns anything not greater than zero as per\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=97\n\n\t* configure: Modify CheckForBigEndian so it can work in a cross\n\tcompiled situation.\n\n2002-01-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffdump.c: include TIFFTAG_JPEGTABLES in tag list.\n\n\t* tools/tiffset.c: fix bug in error reporting.\n\n\t* tools/tiffcp.c: fix several warnings that show up with -Wall.\n\n2002-01-04  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: fixed computation of segment_width for\n\ttiles files to avoid error about it not matching the\n\tcinfo.d.image_width values (\"JPEGPreDecode: Improper JPEG strip/tile\n\tsize.\") for ITIFF files.  Apparently the problem was incorporated since\n\t3.5.5, presumably during the OJPEG/JPEG work recently.\n\n2001-12-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, libtiff/Makefile.in: Changes for building on MacOS 10.1.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=94\n\n\t* libtiff/tif_getimage.c: If DEFAULT_EXTRASAMPLE_AS_ALPHA is 1\n\t(defined in tiffconf.h - 1 by default) then the RGBA interface\n\twill assume that a fourth extra sample is ASSOCALPHA if the\n\tEXTRASAMPLE value isn't set for it.  This changes the behaviour of\n\tthe library, but makes it work better with RGBA files produced by\n\tlots of applications that don't mark the alpha values properly.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=93\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=65\n\n2001-12-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: allow jpeg data stream sampling values to\n\toverride those from tiff directory.  This makes this work with\n\tImageGear generated files.\n\n2001-12-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/Makefile.in: added missing images per bug 92.\n\n\t* port/Makefile.in: fixed clean target per bug 92.\n\n2001-11-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Reissue 3.5.7 release.\n\n\t* libtiff/mkversion.c: Fix output of TIFF_VERSION to be\n\tYYYYMMDD so that it is increasing over time.\n\n\t* Makefile.in: Ensure that tiffvers.h is regenerated in the\n\tmake release target.\n\n\t* Makefile.in: added libtiff/tiffvers.h to the release file list.\n\n2001-11-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* added html/v3.5.7.html, updated html/index.html.\n\n\t* Makefile.in: added contrib/addtiffo/tif_ovrcache.{c,h}.\n\n2001-11-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure: fixed test for -lm.\n\n2001-11-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added PHOTOMETRIC_ITULAB as per bug 90.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=90\n\n2001-10-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h: I have created COMPRESSION_CCITT_T4,\n\tCOMPRESSION_CCITT_T6, TIFFTAG_T4OPTIONS and TIFFTAG_T6OPTIONS aliases\n\tin keeping with TIFF 6.0 standard in tiff.h\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=83\n\n2001-09-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: added TIFFRewriteDirectory() function.\n\tUpdated TIFFWriteDirectory man page to include TIFFRewriteDirectory.\n\n2001-09-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c: Avoid MS VC++ 5.0 optimization bug.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=78\n\n\t* libtiff/tif_lzw.c: added dummy LZWSetupEncode() to report an\n\terror about LZW not being available.\n\n\t* libtiff/tif_dir.c: propagate failure to initialize compression\n\tback from TIFFSetField() as an error status, so applications can\n\tdetect failure.\n\n\t* libtiff/tif_dir.c: removed the auto replacement of\n\tCOMPRESSION_LZW with COMPRESSION_NONE in _TIFFVSetField().\n\n\t* Removed Makefile, tools/Makefile, port/install.sh, man/Makefile\n\tfrom CVS as they are all supposed to be auto-generated by configure.\n\n2001-09-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_ojpeg.c: new update from Scott.\n\n2001-09-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtif/tif_fax3.c: Removed #ifdef PURIFY logic, and modified to\n\talways use the \"safe\" version, even if there is a very slight\n\tcost in performance.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=54\n\n\t* libtiff/Makefile.in: Fixed @DSOSUB_VERSION to be @DSOSUF_VERSION@\n\tin two places.\n\n\t* libtiff/tif_getimage.c: Fixed problem with reading strips or\n\ttiles that don't start on a tile boundary.  Fix contributed by\n\tJosep Vallverdu (from HP), and further described in bug 47.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=47\n\n\t* tools/tiff2ps.c: added OJPEG YCbCr to RGB support.\n\n\t* libtiff/tif_ojpeg.c: Applied substantial patch from Scott.\n\n2001-09-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_packbits.c: fixed memory overrun error.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=77\n\n2001-08-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: relax handling of contig case where\n\tthere are extra samples that are supposed to be ignored.  This\n\tshould now work for 8bit greyscale or palletted images.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=75\n\n2001-08-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Don't complain for CMYK (separated)\n\timages with more than four samples per pixel.  See:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=73\n\n2001-08-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Use memmove() instead of TIFFmemcpy()\n\tin TIFFReadRGBATile() to avoid issues in cases of overlapping\n\tbuffers.  See Bug 69 in Bugzilla.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=69\n\n\t* tools/tiff2rgba.c: fixed getopt() call so that -b works again.\n\n2001-08-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h, libtiff/tif_fax3.c: added check for __LP64__\n\twhen checking for 64 bit architectures as per bugzilla bug 67.\n\n2001-07-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* man/Makefile.in: add TIFFClientOpen link as per debian submitted\n\tbug 66.\n\n2001-07-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Define HAVE_BOOLEAN on windows if RPCNDR.H\n\thas been included.\n\n2001-07-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: Seek back to zero after failed read,\n\tbefore writing header.\n\n2001-07-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_ojpeg.c: updates from Scott.  Handles colors\n\tmuch better.  Now depends on having patched libjpeg as per\n\tpatch in contrib/ojpeg/*.\n\n2001-07-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* */Makefile.in: added DESTDIR support.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=60\n\n2001-07-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, libtiff/Makefile.in: applied OpenBSD patches\n\tas per:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=61\n\n2001-06-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Fixed so that failure is properly\n\treported by gtTileContig, gtStripContig, gtTileSeparate and\n\tgtStripSeparate.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=51\n\n\t* tiffcmp.c: Fixed multi samples per pixel support for ContigCompare.\n\tUpdated bug section of tiffcmp.1 to note tiled file issues.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=53\n\n2001-06-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure: Changes for DSO generation on AIX provided by\n\tJohn Marquart <jomarqua@indiana.edu>.\n\n\t* configure, libtiff/Makeifle.in: Modified to build DSOs properly\n\ton Darwin thanks to Robert Krajewski (rpk@alum.mit.edu) and\n\tKeisuke Fujii (fujiik@jlcuxf.kek.jp).\n\n2001-06-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2rgba.c: added -n flag to avoid emitting alpha component.\n\n\t* man/tiff2rgba.1: new\n\n2001-05-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added tiffset and tif_ojpeg to the dist lists in Makefile.in.\n\n2001-05-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tools/thumbnail.c: changed default output compression\n\tto packbits from LZW since LZW isn't generally available.\n\n2001-05-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_ojpeg.c: New.\n\tlibtiff/tif_jpeg.c, tiffconf.h, tif_getimage.c: changes related\n\tto OJPEG support.\n\n\tScott Marovich <marovich@hpl.hp.com> supplied OJPEG support.\n\n2001-05-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tiff.h: removed, it duplicates libtiff/tiff.h.\n\n2001-05-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: moved pixar and copyright flags to\n\tensure everything is in order.\n\n\t* libtiff/libtiff.def: added TIFFCreateDirectory and\n\tTIFFDefaultStripSize as per:\n\n\t  http://bugzilla.remotesensing.org/show_bug.cgi?id=46\n\n2001-05-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Modified the TIFF_BYTE definition for\n\tTIFFTAG_PHOTOSHOP to use a writecount of TIFF_VARIABLE2 (-3) to\n\tforce use of uint32 counts instead of short counts.\n\n\t* libtiff/tif_dirwrite.c: Added support for TIFF_VARIABLE2 in the\n\tcase of writing TIFF_BYTE/TIFF_SBYTE fields.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=43\n\n2001-05-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: removed duplicate TIFFTAG_PHOTOSHOP as per\n\tbug report http://bugzilla.remotesensing.org/show_bug.cgi?id=44\n\n2001-04-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tiffio.h: removed C++ style comment.\n\n\t* configure: fixed up SCRIPT_SH/SHELL handling.\n\n\t* Makefile.in: Fixed SCRIPT_SH/SHELL handling.\n\n\t* config.guess: documented more variables as per bug 40.\n\n2001-04-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, *Makefile.in: Various changes to improve configuration\n\tfor HP/UX specifically, and also in general.  They include:\n\t - Try to handle /usr/bin/sh instead of /bin/sh where necessary.\n\t - Upgrade to HP/UX 10.x+ compiler, linker and dso options.\n\t - Fixed mmap() test to avoid MMAP_FIXED ... it isn't available on HP\n\t - Use -${MAKEFLAGS} in sub makes from makefiles.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=40\n\n2001-04-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h: Applied hac to try and resolve the problem\n\twith the inttypes.h include file on AIX.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n\t* VERSION: update to 3.5.7 beta in preparation for release.\n\n\t* configure/config.site: modified to check if -lm is needed for\n\tMACHDEPLIBS if not supplied by config.site.  Needed for Darwin.\n\n\t* config.guess: updated wholesale to an FSF version apparently\n\tfrom 1998 (as opposed to 1994).  This is mainly inspired by\n\tproviding for MacOS X support.\n\n2001-03-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, Makefile.in, etc: added support for OPTIMIZER being\n\tset from config.site.\n\n2001-03-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* fax2ps.c: Helge (libtiff at oldach.net) submitted fix:\n\n\tHere's a fix for fax2ps that corrects behaviour for non-Letter paper\n\tsizes. It fixes two problems:\n\n\tWithout\tscaling (-S) the fax is now centered on the page size specified\n\twith -H\tand/or -W. Before, fax2ps was using an obscure and practially\n\tuseless algorithm to allocate the image relative to Letter sized paper\n\twhich sometime sled to useless whitespace on the paper, while at the\n\tsame time cutting of the faxes printable area at the opposite border.\n\n\tSecond, scaling now preserves aspect ratio, which makes unusual faxes\n\t(in particular short ones) print properly.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=35\n\n\t* tiff2ps.c/tiff2ps.1: Substantial changes to tiff2ps by\n\tBruce A. Mallett.  See check message for detailed information\n\ton all the changes, including a faster encoder, fixes for level\n\t2 PostScript, and support for the imagemask operator.\n\n2001-03-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiffio.h: Changed \"#if LOGLUV_PUBLIC\" to\n\t\"#ifdef LOGLUV_PUBLIC\" so it will work with VisualAge on AIX.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2001-03-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirinfo.c: moved definition of copyright tag in field list.\n\tApparently they have to be in sorted order by tag id.\n\n2001-03-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_getimage.c: Added support for 16bit minisblack/miniswhite\n\timages in RGBA interface.\n\n2001-03-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added TIFFTAG_COPYRIGHT support.\n\n2001-02-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Brent Roman contributed updated tiffcp utility (and tiffcp.1)\n\twith support for extracting subimages with the ,n syntax, and also\n\tadding the -b bias removal flag.\n\n2001-02-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Brent Roman submitted new version adding\n\tserveral missing entry points.\n\n\t* libtiff/tif_dirinfo.c: don't declare tiffFieldInfo static on VMS.\n\tSome sort of weird VMS thing.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=31\n\n\t* tif_luv.c/tiff.h/tiffio.h:\n\tNew version of TIFF LogLuv (SGILOG) modules contributed by Greg Ward\n\t(greg@shutterfly.com).  He writes:\n\n\t1) I improved the gamut-mapping function in tif_luv.c for imaginary\n\tcolors, because some images were being super-saturated on the input\n\tside and this resulted in some strange color shifts in the output.\n\n\t2) I added a psuedotag in tiff.h to control random dithering during\n\tLogLuv encoding.  This is turned off by default for 32-bit LogLuv and\n\ton for 24-bit LogLuv output.  Dithering improves the average color\n\taccuracy over the image.\n\n\t3) I added a #define for LOG_LUV_PUBLIC, which is enabled by default in\n\ttiffio.h, to expose internal routines for converting between LogLuv and\n\tXYZ coordinates.  This is helpful for writing more efficient,\n\tspecialized conversion routines, especially for reading LogLuv files.\n\n\tChanges applied with minor edits.\n\n2001-01-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_fax3.c: keep rw_mode flag internal to fax3 state to remember\n\twhether we are encoding or decoding.  This is to ensure graceful\n\trecovery if TIFFClientOpen() discovers an attempt to open a compressed\n\tfile for \"r+\" access, and subsequently close it, as it resets the\n\ttif_mode flag to O_RDONLY in this case to avoid writes, confusing the\n\tcompressor's concept of whether it is in encode or decode mode.\n\n2001-01-08  Mike Welles <mike@bangstate.com>\n\n\t* Makefile.in:  Now cleaning up after itself after creating the .tar.gz and .zip\n\n2001-01-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/libtiff.html: Fixed arguments in example for TIFFRGBAImageGet()\n\tas per bug report by Patrick Connor.\n\n2000-12-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added RELEASE-DATE file to release file list.\n\n\t* Fixed libtiff/makefile.vc to make tiffvers.h not version.h.\n\n2000-12-22  Mike Welles <mike@bangstate.com>\n        * added link to CVS mirror from index.html\n\n\t* updated html/internals.html to note that LZW compression is\n\t  not supported by default.\n\n2000-12-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* updated html/libtiff.html to not point at Niles' old JPL web site\n\tfor the man pages, point at www.libtiff.org.\n\n2000-12-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_apple.c: Applied \"Carbon\" support patches supplied by\n\tLeonard Rosenthol <leonardr@lazerware.com>.  May interfere\n\twith correct building on older systems.  If so, please let me know.\n\n2000-12-19 Mike Welles <mike@bangsate.com>\n\n\t* Took out LZW Encoding from tif_lzw.c\n\n\t* Created HOWTO-RELEASE\n\n\t* Created html/v3.5.6.html\n\n\t* updated index.html\n\n2000-12-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added patches for EOFB support in tif_fax3.c and tif_fax3.h.\n\tPatches supplied by Frank Cringle <fdc@cliwe.ping.de>\n\tExample file at: ftp://ftp.remotesensing.org/pub/libtiff/eofb_396.tif\n\n2000-11-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/Makefile.in: Added an installPrivateHdrs and install-private\n\ttarget so that the private headers required by libgeotiff can be\n\tinstalled with the others.  They are not installed by default.\n\n\t* libtiff/Makefile.in: Added @MACHLIBDEPS@ to LINUXdso and GNULDdso\n\ttargets so libtiff.so will be built with an explicit dependency\n\ton libm.so.\n\n\t* libtiff/Makefile.in: Use softlinks to link libtiff.so.3 to\n\tlibtiff.so.3.5.5.\n\n\t* libtiff/Makefile.in & configure: Remove all references to the ALPHA\n\tfile, or ALPHA version logic.  Added stuff about DIST_POINT in\n\tplace of DIST_TYPE and the alpha release number stuff.\n\n2000-11-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* I have applied a patch from Steffen Moeller <moeller@ebi.ac.uk> to\n\tthe configure script so that it now accepts the --prefix, and\n\t--exec-prefix directives.\n\n2000-11-13  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* I have made a variety of modifications in an effort to ensure the\n\tTIFFLIB_VERSION macro is automatically generated from the RELEASE-DATE\n\tfile which seems to be updated regularly.\n\n\t o mkversion.c now reads RELEASE-DATE and emits TIFFLIB_VERSION in\n\t   version include file.\n\t o renamed version.h to tiffvers.h because we now have to install it\n\t   with the public libtiff include files.\n\t o include tiffvers.h in tiffio.h.\n\t o updated tif_version.c to use tiffvers.h.\n\t o Updated Makefile.in accordingly.\n\n\t* As per http://bugzilla.remotesensing.org/show_bug.cgi?id=25\n\tI have updated the win32 detection rules in tiffcomp.h.\n\n2000-10-20  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_getimage.c: Fixed RGBA translation for YCbCr images for which\n\tthe strip/tile width and height aren't multiples of the sampling size.\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=20\n\tSome patches from Rick LaMont of Dot C Software.\n\n\t* Modified tif_packbits.c encoder to avoid compressing more\n\tdata than provided if rowsize doesn't factor into provided data\n\t(such as occurs for YCbCr).\n\n2000-10-19  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tools/rgb2ycbcr.c: fixed output strip size to account for vertical\n\troundup if rows_per_strip not a multiple of vertical sample size.\n\n2000-10-16  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_dir.c: Clear TIFF_ISTILED flag in TIFFDefaultDirectory\n\tas per http://bugzilla.remotesensing.org/show_bug.cgi?id=18\n\tfrom vandrove@vc.cvut.cz.\n\n\t* Modified tif_packbits.c decoding to avoid overrunning the\n\toutput buffer, and to issue a warning if data needs to be\n\tdiscarded.  See http://bugzilla.remotesensing.org/show_bug.cgi?id=18\n\n2000-10-12  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Modified tiff2bw to ensure portions add to 100%, and that\n\twhite is properly recovered.\n\n\tSee bug http://bugzilla.remotesensing.org/show_bug.cgi?id=15\n\tPatch c/o Stanislav Brabec <utx@penguin.cz>\n\n2000-09-30  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Modified TIFFClientOpen() to emit an error on an attempt to\n\topen a comperessed file for update (O_RDWR/r+) access.  This is\n\tbecause the compressor/decompressor code gets very confused when\n\tthe mode is O_RDWR, assuming this means writing only.  See\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=13\n\n2000-09-27  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Added GNULDdso target an`d switched linux and freebsd to use it.\n\n2000-09-26  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Applied patch for 0x0000 sequences in tif_fax3.h's definition\n\tof EXPAND1D() as per bug 11 (from Roman).\n\n2000-09-25  Frank Warmerdam  <warmerda@cs46980-c>\n\t* Fixed tiffcomp.h to avoid win32 stuff if unix #defined, to improve\n\tcygwin compatibility.\n\n\t* Applied patch from Roman Shpount to tif_fax3.c.  This seems to\n\tbe a proper fix to the buffer sizing problem.  See\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=11\n\n\t* Fixed tif_getimage.c to fix overrun bug with YCbCr images without\n\tdownsampling.  http://bugzilla.remotesensing.org/show_bug.cgi?id=10\n\tThanks to Nick Lamb <njl98r@ecs.soton.ac.uk> for reporting the\n\tbug and proving the patch.\n\n2000-09-18  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Fixed tif_jpeg.c so avoid destroying the decompressor before\n\twe are done access data thanks to bug report from:\n\tMichael Eckstein <eckstein@gepro.cz>.\n\n\t* Reverted tif_flush change.\n\n2000-09-14  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_flush.c: Changed so that TIFFFlushData() doesn't return an\n\terror when TIFF_BEENWRITING is not set.  This ensures that the\n\tdirectory contents can still be flushed by TIFFFlush().\n\n2000-08-14  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* tif_open.c: Don't set MMAP for O_RDWR files.\n\n\t* tif_open.c: Set STRIPCHOP_DEFAULT for O_RDWR as well as O_RDONLY\n\tso that files opened for update can be strip chopped too.\n\n\t* tif_read.c: fixed up bug with files missing rowsperstrip and\n\tthe strips per separation fix done a few weeks ago.\n\n2000-07-17  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Tentatively added support for SAMPLEFORMAT_COMPLEXIEEEFP, and\n\tSAMPLEFORMAT_COMPLEXINT.\n\n2000-07-13  Mike Welles <mike@onshore.com>\n\n\t* index.html, bugs.html: added bugzilla info.\n\n2000-07-12  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* tif_read.c: fix subtle bug with determining the number of\n\trows for strips that are the last strip in a separation but\n\tnot the last strip of all in TIFFReadEncodedStrip().\n\n\t* Applied 16/32 bit fix to tif_fax3.c.  Fix supplied by\n\tPeter Skarpetis <peters@serendipity-software.com.au>\n\n2000-06-15  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* Modified tiffio.h logic with regard to including windows.h.  It\n\twon't include it when building with __CYGWIN__.\n\n2000-05-11  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* README: update to mention www.libtiff.org, don't list Sam's old\n\temail address.\n\n\t* configure: Fixed DSO test for Linux as per patch from\n\t  Jan Van Buggenhout <chipzz@Ace.ULYSSIS.Student.KULeuven.Ac.Be>.\n\n2000-04-21  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* libtiff/tif_dirread.c: Don't use estimate strip byte count for\n\tone tile/strip images with an offset, and byte count of zero. These\n\tcould be \"unpopulated\" images.\n\n2000-04-18  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* contrib/addtiffo: Added \"averaging\" resampling option.\n\n\t* tools/tiffsplit.c: Copy TIFFTAG_SAMPLEFORMAT.\n\nTue Apr 18 16:18:08 2000  Frank Warmerdam  <warmerda@esabot.atlsci.com>\n\n\t* tools/Makefile.in: Modified to install properly on SGI.\n\n2000-04-12  Mike Welles\t     <mike@onshore.com>\n\t* configure:  Fixed stupid mistake in libc6 test on Linux\n\n2000-04-04  Mike Welles\t     <mike@onshore.com>\n\t* tif_win32.c:  Applied patch to fix overreads and ovverwrites\n\t  caught by BoundsChecker.  From Arvan Pritchard\n\t  <arvan.pritchard@infomatix.co.uk>  (untested).\n\n\t* tif_getimage.c:  Applied patch to silence VC6 warnings.  From\n\t  Arvan Pritchard <arvan.pritchard@informatix.co.uk>\n\n\t* tif_lzw.c:  Applied patch to silence VC6 warnings.  From\n\t  Arvan Pritchard <arvan.pritchard@informatix.co.uk>\n\n2000-03-28  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Added contrib/stream (stream io) code submitted by Avi Bleiweiss.\n\n2000-03-28  Frank Warmerdam  <warmerda@cs46980-c>    *** 3.5.5 release ***\n\n\t* fax2ps: Fixed mixup of width and height in bounding box statement\n\tas per submission by Nalin Dahyabhai <nalin@redhat.com>.\n\n2000-03-27  Mike Welles\t     <mike@onshore.com>\n\n\t* fax2ps:  Modified printruns to take uint32 instead of uint16.\n\tPatch courtesy of Bernt Herd <herd@herdsoft.com>\n\n2000-03-20  Mike Welles\t     <mike@onshore.com>\n\n\t* configure: added test for libc6 for linux targets.  Bug reported by\n        Stanislav Brabec <utx@k332.feld.cvut.cz>\n\n\t* Added 3.5 docs to html/Makefile.in.\n\tThanks to  Stanislav Brabec <utx@k332.feld.cvut.cz>\n\n\t* configure: fixed bugs in sed scripts\n\t(applied sed script s:/@:s;@:;s:/s;;:;: to configure).\n\tfix submitted to Stanislav Brabec <utx@k332.feld.cvut.cz>\n\n\t* tools/iptcutil was not in files list, and wasn't being\n\tadded to tar archive.  Updated Makefile.in.\n\n2000-03-17  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_fax3.c: Fixed serious bug introduced during the uint16->uint32\n\tconversion for the run arrays.\n\n2000-03-03  Frank Warmerdam  <warmerda@cs46980-c.mtnk1.on.wave.home.com>\n\n\t* Set td_sampleformat default to SAMPLEFORMAT_UINT instead of\n\tSAMPLEFORMAT_VOID in TIFFDefaultDirectory() in tif_dir.c.\n\n2000-03-02  Frank Warmerdam  <warmerda@cs46980-c.mtnk1.on.wave.home.com>\n\n\t* Added \"GetDefaulted\" support for TIFFTAG_SAMPLEFORMAT in tif_aux.c.\n\n\t* Patched tif_fax3.c so that dsp->runs is allocated a bit bigger\n\tto avoid overruns encountered with frle_bug.tif.\n\nTue Feb 15 22:01:05 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Fixed tools/tiffcmp so that stopondiff testing works.\n\t  Patch care of Joseph Orost <joe@sanskrit.lz.att.com>.\n\n2000-01-28    <warmerda@CS46980-B>\n\n\t* Modified tif_unix.c to support 2-4GB seeks if USE_64BIT_API is\n\t  set to 1, and added default (off) setting in tiffconf.h.  This\n\t  should eventually be set by the configure script somehow.\n\n\t  The original work on all these 2-4GB changes was done by\n\t  Peter Smith (psmith@creo.com).\n\n\t* Modified tif_win32.c to support 2-4GB seeks.\n\n\t* tentatively changed toff_t to be unsigned instead of signed to\n\t  facilitate support for 2-4GB files.\n\n\t* Updated a variety of files to use toff_t.  Fixed some mixups\n\t  between toff_t and tsize_t.\n\nFri Jan 28 10:13:49 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Largely reimplemented contrib/addtiffo to avoid temp files,\n\tupdating the TIFF file in place.  Fixed a few other bugs to.\n\n\t* Set tif_rawdatasize to zero when freeing raw data buffer in\n\tTIFFWriteDirectory().\n\n\t* Enabled \"REWRITE_HACK\" in tif_write.c by default.\n\n\t* Fix bug in tif_write.c when switching between reading one directory\n\tand writing to another.\n\n\t* Made TIFFWriteCheck() public, and added TIFFCreateDirectory()\n\nWed Jan  5 12:37:48 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added TIFFmemory(3t) functions to libtiff.def.\n\nTue Jan  4 13:39:00 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added libtiff/libtiff.def to TIFFILES distribution list.\n\nMon Dec 27 12:13:39 EST 1999  Mike Welles <mike@onshore.com>\n\n\t* Created lzw compression kit, as a new module (libtiff-lzw-compression-kit).\n\n\t* Altered descriptions in tools to reflect \"by default\" lzw not supported\n\n\t* Updated index.html to note lzw compression kit.\n\nTue Dec 21 14:01:51 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added fax3sm_winnt.c to distribution list in Makefile.in.\n\nTue Dec 21 11:04:45 EST 1999  Mike Welles <mike@onshore.com> *** 3.5.4 release ***\n\n\t* Aadded Pixar tag support.  Contributed by Phil Beffery <phil@pixar.com>\n\n\t* Made one more change to tif_dir.c for removal of LZW compression. Also added notice\n\t  when LZW compression invoked.\n\n\t* Changed default compression in tools to TIFF_PACKBITS, and changed usage descriptions\n\t  in tools to reflect removal of LZW compression\n\nMon Dec 20 18:39:02 EST 1999  Mike Welles  <mike@onshore.com>\n\n        * Fixed bug that caused LZW (non) compression to segfault. Added\n\t  warning about LZW compression removed being removed, and why.\n\n\t* Added nostrip to install in tools/Makefile.in so that debugging\n\t  symbols are kept.\n\nTue Dec  7 12:04:47 EST 1999  Mike Welles  <mike@onshore.com>\n\n\t* Added patch from Ivo Penzar <ivo.penzar@infolink-software.com>,\n\t  supporting Adobe ZIP deflate.  Untested.\n\nSat Dec  4 15:47:11 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Made Packbits the default compression in tools/tiff2rgba.c instead\n\tof LZW.\n\nTue Nov 30 14:41:43 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>    *** 3.5.3. release ***\n\n\t* Added tif_luv to contrib/djgpp/Makefile.lib.\n\nTue Nov 30 14:15:32 EST 1999   Mike Welles <mike@onshore.com>\n\n        * Added zip creation to relase makefile target\n\n\t* Added html for TIFFWriteTile.3t man page.\n\nTue Nov 30 09:20:16 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added some changes to tif_write.c to support rewriting existing\n\tfixed sized tiles and strips.  Code mods disabled by default, only\n\tenabled if REWRITE_HACK is defined for now.\n\nMon Nov 29 11:43:42 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added TIFFWriteTile.3t man page.\n\nSun Nov 28 20:36:18 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added notes on use of makefile.vc in build.html, and fixed\n\temail subscription address.\n\n199-11-28  Mike Welles <mike@onshore.com>\n\n\t*  Fixed apocalypse-inducing y2k bug in contrib/ras/ras2tiff.c\n\n\t*  Did some casts cleaning up to reduce compiler warnings in tif_fax3.c,\n\t   from Bruce Carmeron <cameron@petris.com> -- modifications of\n\t   changes made by Frank (sun cc still complained on cast).\n\n\t*  Added tiffconf.h to install target per request from Bill\n\t   Radcliffe <billr@corbis.com>: \"We need a way for ImageMagick to\n \t   know features have been compiled into the TIFF library in order to\n\t   handle things properly\".\n\nSat Nov 27 16:49:21 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* fixed various VC++ warnings as suggested by Gilles Vollant\n\t<info@winimage.com>.\n\nWed Nov 24 12:08:16 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Modified TIFFquery.3t man pages info on TIFFIsByteSwapped() to\n\tnot imply applications are responsible for image data swapping.\n\n1999-11-22  Mike Welles <mike@onshore.com>\n\t*  HTML-ized the man pages, added to html/man\n\n\t*  Removed LZW Compression to comply with Unisys patent extortion.\n\n1999-09-29  Mike Welles\t\t<mike@onshore.com>\n\t*  Corrected one remaining 16 -> 32 bit value in tif_fax3.c,\n\t   From Ivo Penzar <ivo.penzar@infolink-software.com.\n\n\t*  Added patch from Ivo Penzar to have TiffAdvanceDirectory handle\n\t   memory mapped files. <ivo.penzar@infolink-software.com>\n\n1999-09-26  Mike Welles \t<mike@onshore.com>  *** 3.5.2 release ***\n\t* Corrected alpha versioning.\n\n\t* Removed distinction between  alpha and release targets in Makefile.in.\n\n\t* added release.stamp target, which tags cvs tree, and updates\n\t  \"RELEASE-DATE\"\n\n\t* added releasediff target, which diffs tree with source as of\n\t  date in \"RELEASE-DATE\"\n\n\t* Ticked up version to 3.5.2 (alpha 01 -- but I think we'll moving\n\t  away from alpha/non-alpha distinctions).\n\n\t* updated html to reflect release\n\n1999-09-23    <warmerda@CS46980-B>\n\n\t* Set O_BINARY for tif_unix.c open() ... used on cygwin for instance.\n\n\t* Added CYGWIN case in configure.\n\nFri Sep 17 00:13:51 CEST 1999  Mike Welles <mike@onshore.com>\n\n\t* Applied Francois Dagand's patch to handle fax decompression bug.\n\t  (sizes >= 65536 were failing)\n\nTue Sep 14 21:31:43 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Applied \"a\" mode fix to tif_win32.c/TIFFOpen() as suggested\n\t  by Christopher Lawton <clawton@mathworks.com>\n\nWed Sep  8 08:19:18 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added IRIX/gcc, and OSF/1 4.x support on behalf of\n\t  Albert Chin-A-Young <china@thewrittenword.com>\n\n\t* Added TIFFReassignTagToIgnore() API on behalf of\n\t  Bruce Cameron <cameron@petris.com>.  Man page still pending.\n\nWed Aug 25 11:39:07 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added test target in Makefile, test_pics.sh script and pics/*.rpt\n\tfiles to provide for a rudimentary testsuite.\n\n\t* Added contrib/tags back from old distribution ... fixed up a bit.\n\n1999-08-16    <warmerda@CS46980-B>\n\n\t* Added simple makefile.vc makefiles for building with MS VC++\n\ton Windows NT/98/95 in console mode.  Stuff in contrib/win* make give\n\tbetter solutions for some users.\n\nMon Aug 16 21:52:11 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added addtiffo (add overviews to a TIFF file) in contrib.  Didn't\n\tput it in tools since part of it is in C++.\n\n1999-08-16  Michael L. Welles  <mike@kurtz.fake>\n\n\t* Updated html/index.html with anon CVS instructions.\n\nMon Aug 16 13:18:41 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* pre-remove so link before softlink in LINUXdso action in\n\tlibtiff/Makefile.in to avoid failure on LINUXdso builds other than\n\tthe first.\n\n\t* Fixed problem with cvtcmap() in tif_getimage.c modifying the\n\tcolormaps owned by the TIFF handle itself when trying to fixup wrong\n\t(eight bit) colormaps.  Corrected by maintaining a private copy of\n\tthe colormap.\n\n\t* Added TIFFReadRGBATile()/TIFFReadRGBAStrip() support in\n\ttif_getimage.c.\n\n\t* CVS Repository placed at remotesensing.org.  ChangeLog added.\n", "/* $Id$ */\n\n/* WARNING: The type of JPEG encapsulation defined by the TIFF Version 6.0\n   specification is now totally obsolete and deprecated for new applications and\n   images. This file was was created solely in order to read unconverted images\n   still present on some users' computer systems. It will never be extended\n   to write such files. Writing new-style JPEG compressed TIFFs is implemented\n   in tif_jpeg.c.\n\n   The code is carefully crafted to robustly read all gathered JPEG-in-TIFF\n   testfiles, and anticipate as much as possible all other... But still, it may\n   fail on some. If you encounter problems, please report them on the TIFF\n   mailing list and/or to Joris Van Damme <info@awaresystems.be>.\n\n   Please read the file called \"TIFF Technical Note #2\" if you need to be\n   convinced this compression scheme is bad and breaks TIFF. That document\n   is linked to from the LibTiff site <http://www.remotesensing.org/libtiff/>\n   and from AWare Systems' TIFF section\n   <http://www.awaresystems.be/imaging/tiff.html>. It is also absorbed\n   in Adobe's specification supplements, marked \"draft\" up to this day, but\n   supported by the TIFF community.\n\n   This file interfaces with Release 6B of the JPEG Library written by the\n   Independent JPEG Group. Previous versions of this file required a hack inside\n   the LibJpeg library. This version no longer requires that. Remember to\n   remove the hack if you update from the old version.\n\n   Copyright (c) Joris Van Damme <info@awaresystems.be>\n   Copyright (c) AWare Systems <http://www.awaresystems.be/>\n\n   The licence agreement for this file is the same as the rest of the LibTiff\n   library.\n\n   IN NO EVENT SHALL JORIS VAN DAMME OR AWARE SYSTEMS BE LIABLE FOR\n   ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n   OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n   WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF\n   LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n   OF THIS SOFTWARE.\n\n   Joris Van Damme and/or AWare Systems may be available for custom\n   development. If you like what you see, and need anything similar or related,\n   contact <info@awaresystems.be>.\n*/\n\n/* What is what, and what is not?\n\n   This decoder starts with an input stream, that is essentially the JpegInterchangeFormat\n   stream, if any, followed by the strile data, if any. This stream is read in\n   OJPEGReadByte and related functions.\n\n   It analyzes the start of this stream, until it encounters non-marker data, i.e.\n   compressed image data. Some of the header markers it sees have no actual content,\n   like the SOI marker, and APP/COM markers that really shouldn't even be there. Some\n   other markers do have content, and the valuable bits and pieces of information\n   in these markers are saved, checking all to verify that the stream is more or\n   less within expected bounds. This happens inside the OJPEGReadHeaderInfoSecStreamXxx\n   functions.\n\n   Some OJPEG imagery contains no valid JPEG header markers. This situation is picked\n   up on if we've seen no SOF marker when we're at the start of the compressed image\n   data. In this case, the tables are read from JpegXxxTables tags, and the other\n   bits and pieces of information is initialized to its most basic value. This is\n   implemented in the OJPEGReadHeaderInfoSecTablesXxx functions.\n\n   When this is complete, a good and valid JPEG header can be assembled, and this is\n   passed through to LibJpeg. When that's done, the remainder of the input stream, i.e.\n   the compressed image data, can be passed through unchanged. This is done in\n   OJPEGWriteStream functions.\n\n   LibTiff rightly expects to know the subsampling values before decompression. Just like\n   in new-style JPEG-in-TIFF, though, or even more so, actually, the YCbCrsubsampling\n   tag is notoriously unreliable. To correct these tag values with the ones inside\n   the JPEG stream, the first part of the input stream is pre-scanned in\n   OJPEGSubsamplingCorrect, making no note of any other data, reporting no warnings\n   or errors, up to the point where either these values are read, or it's clear they\n   aren't there. This means that some of the data is read twice, but we feel speed\n   in correcting these values is important enough to warrant this sacrifice. Although\n   there is currently no define or other configuration mechanism to disable this behaviour,\n   the actual header scanning is build to robustly respond with error report if it\n   should encounter an uncorrected mismatch of subsampling values. See\n   OJPEGReadHeaderInfoSecStreamSof.\n\n   The restart interval and restart markers are the most tricky part... The restart\n   interval can be specified in a tag. It can also be set inside the input JPEG stream.\n   It can be used inside the input JPEG stream. If reading from strile data, we've\n   consistently discovered the need to insert restart markers in between the different\n   striles, as is also probably the most likely interpretation of the original TIFF 6.0\n   specification. With all this setting of interval, and actual use of markers that is not\n   predictable at the time of valid JPEG header assembly, the restart thing may turn\n   out the Achilles heel of this implementation. Fortunately, most OJPEG writer vendors\n   succeed in reading back what they write, which may be the reason why we've been able\n   to discover ways that seem to work.\n\n   Some special provision is made for planarconfig separate OJPEG files. These seem\n   to consistently contain header info, a SOS marker, a plane, SOS marker, plane, SOS,\n   and plane. This may or may not be a valid JPEG configuration, we don't know and don't\n   care. We want LibTiff to be able to access the planes individually, without huge\n   buffering inside LibJpeg, anyway. So we compose headers to feed to LibJpeg, in this\n   case, that allow us to pass a single plane such that LibJpeg sees a valid\n   single-channel JPEG stream. Locating subsequent SOS markers, and thus subsequent\n   planes, is done inside OJPEGReadSecondarySos.\n\n   The benefit of the scheme is... that it works, basically. We know of no other that\n   does. It works without checking software tag, or otherwise going about things in an\n   OJPEG flavor specific manner. Instead, it is a single scheme, that covers the cases\n   with and without JpegInterchangeFormat, with and without striles, with part of\n   the header in JpegInterchangeFormat and remainder in first strile, etc. It is forgiving\n   and robust, may likely work with OJPEG flavors we've not seen yet, and makes most out\n   of the data.\n\n   Another nice side-effect is that a complete JPEG single valid stream is build if\n   planarconfig is not separate (vast majority). We may one day use that to build\n   converters to JPEG, and/or to new-style JPEG compression inside TIFF.\n\n   A disadvantage is the lack of random access to the individual striles. This is the\n   reason for much of the complicated restart-and-position stuff inside OJPEGPreDecode.\n   Applications would do well accessing all striles in order, as this will result in\n   a single sequential scan of the input stream, and no restarting of LibJpeg decoding\n   session.\n*/\n\n#define WIN32_LEAN_AND_MEAN\n#define VC_EXTRALEAN\n\n#include \"tiffiop.h\"\n#ifdef OJPEG_SUPPORT\n\n/* Configuration defines here are:\n * JPEG_ENCAP_EXTERNAL: The normal way to call libjpeg, uses longjump. In some environments,\n * \tlike eg LibTiffDelphi, this is not possible. For this reason, the actual calls to\n * \tlibjpeg, with longjump stuff, are encapsulated in dedicated functions. When\n * \tJPEG_ENCAP_EXTERNAL is defined, these encapsulating functions are declared external\n * \tto this unit, and can be defined elsewhere to use stuff other then longjump.\n * \tThe default mode, without JPEG_ENCAP_EXTERNAL, implements the call encapsulators\n * \there, internally, with normal longjump.\n * SETJMP, LONGJMP, JMP_BUF: On some machines/environments a longjump equivalent is\n * \tconveniently available, but still it may be worthwhile to use _setjmp or sigsetjmp\n * \tin place of plain setjmp. These macros will make it easier. It is useless\n * \tto fiddle with these if you define JPEG_ENCAP_EXTERNAL.\n * OJPEG_BUFFER: Define the size of the desired buffer here. Should be small enough so as to guarantee\n * \tinstant processing, optimal streaming and optimal use of processor cache, but also big\n * \tenough so as to not result in significant call overhead. It should be at least a few\n * \tbytes to accommodate some structures (this is verified in asserts), but it would not be\n * \tsensible to make it this small anyway, and it should be at most 64K since it is indexed\n * \twith uint16. We recommend 2K.\n * EGYPTIANWALK: You could also define EGYPTIANWALK here, but it is not used anywhere and has\n * \tabsolutely no effect. That is why most people insist the EGYPTIANWALK is a bit silly.\n */\n\n/* define LIBJPEG_ENCAP_EXTERNAL */\n#define SETJMP(jbuf) setjmp(jbuf)\n#define LONGJMP(jbuf,code) longjmp(jbuf,code)\n#define JMP_BUF jmp_buf\n#define OJPEG_BUFFER 2048\n/* define EGYPTIANWALK */\n\n#define JPEG_MARKER_SOF0 0xC0\n#define JPEG_MARKER_SOF1 0xC1\n#define JPEG_MARKER_SOF3 0xC3\n#define JPEG_MARKER_DHT 0xC4\n#define JPEG_MARKER_RST0 0XD0\n#define JPEG_MARKER_SOI 0xD8\n#define JPEG_MARKER_EOI 0xD9\n#define JPEG_MARKER_SOS 0xDA\n#define JPEG_MARKER_DQT 0xDB\n#define JPEG_MARKER_DRI 0xDD\n#define JPEG_MARKER_APP0 0xE0\n#define JPEG_MARKER_COM 0xFE\n\n#define FIELD_OJPEG_JPEGINTERCHANGEFORMAT (FIELD_CODEC+0)\n#define FIELD_OJPEG_JPEGINTERCHANGEFORMATLENGTH (FIELD_CODEC+1)\n#define FIELD_OJPEG_JPEGQTABLES (FIELD_CODEC+2)\n#define FIELD_OJPEG_JPEGDCTABLES (FIELD_CODEC+3)\n#define FIELD_OJPEG_JPEGACTABLES (FIELD_CODEC+4)\n#define FIELD_OJPEG_JPEGPROC (FIELD_CODEC+5)\n#define FIELD_OJPEG_JPEGRESTARTINTERVAL (FIELD_CODEC+6)\n\nstatic const TIFFField ojpegFields[] = {\n\t{TIFFTAG_JPEGIFOFFSET,1,1,TIFF_LONG8,0,TIFF_SETGET_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGINTERCHANGEFORMAT,TRUE,FALSE,\"JpegInterchangeFormat\",NULL},\n\t{TIFFTAG_JPEGIFBYTECOUNT,1,1,TIFF_LONG8,0,TIFF_SETGET_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGINTERCHANGEFORMATLENGTH,TRUE,FALSE,\"JpegInterchangeFormatLength\",NULL},\n\t{TIFFTAG_JPEGQTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGQTABLES,FALSE,TRUE,\"JpegQTables\",NULL},\n\t{TIFFTAG_JPEGDCTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGDCTABLES,FALSE,TRUE,\"JpegDcTables\",NULL},\n\t{TIFFTAG_JPEGACTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGACTABLES,FALSE,TRUE,\"JpegAcTables\",NULL},\n\t{TIFFTAG_JPEGPROC,1,1,TIFF_SHORT,0,TIFF_SETGET_UINT16,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGPROC,FALSE,FALSE,\"JpegProc\",NULL},\n\t{TIFFTAG_JPEGRESTARTINTERVAL,1,1,TIFF_SHORT,0,TIFF_SETGET_UINT16,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGRESTARTINTERVAL,FALSE,FALSE,\"JpegRestartInterval\",NULL},\n};\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\n#include <setjmp.h>\n#endif\n\n/* We undefine FAR to avoid conflict with JPEG definition */\n\n#ifdef FAR\n#undef FAR\n#endif\n\n/*\n  Libjpeg's jmorecfg.h defines INT16 and INT32, but only if XMD_H is\n  not defined.  Unfortunately, the MinGW and Borland compilers include\n  a typedef for INT32, which causes a conflict.  MSVC does not include\n  a conflicting typedef given the headers which are included.\n*/\n#if defined(__BORLANDC__) || defined(__MINGW32__)\n# define XMD_H 1\n#endif\n\n/* Define \"boolean\" as unsigned char, not int, per Windows custom. */\n#if defined(__WIN32__) && !defined(__MINGW32__)\n# ifndef __RPCNDR_H__            /* don't conflict if rpcndr.h already read */\n   typedef unsigned char boolean;\n# endif\n# define HAVE_BOOLEAN            /* prevent jmorecfg.h from redefining it */\n#endif\n\n#include \"jpeglib.h\"\n#include \"jerror.h\"\n\ntypedef struct jpeg_error_mgr jpeg_error_mgr;\ntypedef struct jpeg_common_struct jpeg_common_struct;\ntypedef struct jpeg_decompress_struct jpeg_decompress_struct;\ntypedef struct jpeg_source_mgr jpeg_source_mgr;\n\ntypedef enum {\n\tosibsNotSetYet,\n\tosibsJpegInterchangeFormat,\n\tosibsStrile,\n\tosibsEof\n} OJPEGStateInBufferSource;\n\ntypedef enum {\n\tososSoi,\n\tososQTable0,ososQTable1,ososQTable2,ososQTable3,\n\tososDcTable0,ososDcTable1,ososDcTable2,ososDcTable3,\n\tososAcTable0,ososAcTable1,ososAcTable2,ososAcTable3,\n\tososDri,\n\tososSof,\n\tososSos,\n\tososCompressed,\n\tososRst,\n\tososEoi\n} OJPEGStateOutState;\n\ntypedef struct {\n\tTIFF* tif;\n\t#ifndef LIBJPEG_ENCAP_EXTERNAL\n\tJMP_BUF exit_jmpbuf;\n\t#endif\n\tTIFFVGetMethod vgetparent;\n\tTIFFVSetMethod vsetparent;\n\tTIFFPrintMethod printdir;\n\tuint64 file_size;\n\tuint32 image_width;\n\tuint32 image_length;\n\tuint32 strile_width;\n\tuint32 strile_length;\n\tuint32 strile_length_total;\n\tuint8 samples_per_pixel;\n\tuint8 plane_sample_offset;\n\tuint8 samples_per_pixel_per_plane;\n\tuint64 jpeg_interchange_format;\n\tuint64 jpeg_interchange_format_length;\n\tuint8 jpeg_proc;\n\tuint8 subsamplingcorrect;\n\tuint8 subsamplingcorrect_done;\n\tuint8 subsampling_tag;\n\tuint8 subsampling_hor;\n\tuint8 subsampling_ver;\n\tuint8 subsampling_force_desubsampling_inside_decompression;\n\tuint8 qtable_offset_count;\n\tuint8 dctable_offset_count;\n\tuint8 actable_offset_count;\n\tuint64 qtable_offset[3];\n\tuint64 dctable_offset[3];\n\tuint64 actable_offset[3];\n\tuint8* qtable[4];\n\tuint8* dctable[4];\n\tuint8* actable[4];\n\tuint16 restart_interval;\n\tuint8 restart_index;\n\tuint8 sof_log;\n\tuint8 sof_marker_id;\n\tuint32 sof_x;\n\tuint32 sof_y;\n\tuint8 sof_c[3];\n\tuint8 sof_hv[3];\n\tuint8 sof_tq[3];\n\tuint8 sos_cs[3];\n\tuint8 sos_tda[3];\n\tstruct {\n\t\tuint8 log;\n\t\tOJPEGStateInBufferSource in_buffer_source;\n\t\tuint32 in_buffer_next_strile;\n\t\tuint64 in_buffer_file_pos;\n\t\tuint64 in_buffer_file_togo;\n\t} sos_end[3];\n\tuint8 readheader_done;\n\tuint8 writeheader_done;\n\tuint16 write_cursample;\n\tuint32 write_curstrile;\n\tuint8 libjpeg_session_active;\n\tuint8 libjpeg_jpeg_query_style;\n\tjpeg_error_mgr libjpeg_jpeg_error_mgr;\n\tjpeg_decompress_struct libjpeg_jpeg_decompress_struct;\n\tjpeg_source_mgr libjpeg_jpeg_source_mgr;\n\tuint8 subsampling_convert_log;\n\tuint32 subsampling_convert_ylinelen;\n\tuint32 subsampling_convert_ylines;\n\tuint32 subsampling_convert_clinelen;\n\tuint32 subsampling_convert_clines;\n\tuint32 subsampling_convert_ybuflen;\n\tuint32 subsampling_convert_cbuflen;\n\tuint32 subsampling_convert_ycbcrbuflen;\n\tuint8* subsampling_convert_ycbcrbuf;\n\tuint8* subsampling_convert_ybuf;\n\tuint8* subsampling_convert_cbbuf;\n\tuint8* subsampling_convert_crbuf;\n\tuint32 subsampling_convert_ycbcrimagelen;\n\tuint8** subsampling_convert_ycbcrimage;\n\tuint32 subsampling_convert_clinelenout;\n\tuint32 subsampling_convert_state;\n\tuint32 bytes_per_line;   /* if the codec outputs subsampled data, a 'line' in bytes_per_line */\n\tuint32 lines_per_strile; /* and lines_per_strile means subsampling_ver desubsampled rows     */\n\tOJPEGStateInBufferSource in_buffer_source;\n\tuint32 in_buffer_next_strile;\n\tuint32 in_buffer_strile_count;\n\tuint64 in_buffer_file_pos;\n\tuint8 in_buffer_file_pos_log;\n\tuint64 in_buffer_file_togo;\n\tuint16 in_buffer_togo;\n\tuint8* in_buffer_cur;\n\tuint8 in_buffer[OJPEG_BUFFER];\n\tOJPEGStateOutState out_state;\n\tuint8 out_buffer[OJPEG_BUFFER];\n\tuint8* skip_buffer;\n} OJPEGState;\n\nstatic int OJPEGVGetField(TIFF* tif, uint32 tag, va_list ap);\nstatic int OJPEGVSetField(TIFF* tif, uint32 tag, va_list ap);\nstatic void OJPEGPrintDir(TIFF* tif, FILE* fd, long flags);\n\nstatic int OJPEGFixupTags(TIFF* tif);\nstatic int OJPEGSetupDecode(TIFF* tif);\nstatic int OJPEGPreDecode(TIFF* tif, uint16 s);\nstatic int OJPEGPreDecodeSkipRaw(TIFF* tif);\nstatic int OJPEGPreDecodeSkipScanlines(TIFF* tif);\nstatic int OJPEGDecode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s);\nstatic int OJPEGDecodeRaw(TIFF* tif, uint8* buf, tmsize_t cc);\nstatic int OJPEGDecodeScanlines(TIFF* tif, uint8* buf, tmsize_t cc);\nstatic void OJPEGPostDecode(TIFF* tif, uint8* buf, tmsize_t cc);\nstatic int OJPEGSetupEncode(TIFF* tif);\nstatic int OJPEGPreEncode(TIFF* tif, uint16 s);\nstatic int OJPEGEncode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s);\nstatic int OJPEGPostEncode(TIFF* tif);\nstatic void OJPEGCleanup(TIFF* tif);\n\nstatic void OJPEGSubsamplingCorrect(TIFF* tif);\nstatic int OJPEGReadHeaderInfo(TIFF* tif);\nstatic int OJPEGReadSecondarySos(TIFF* tif, uint16 s);\nstatic int OJPEGWriteHeaderInfo(TIFF* tif);\nstatic void OJPEGLibjpegSessionAbort(TIFF* tif);\n\nstatic int OJPEGReadHeaderInfoSec(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamDri(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamDqt(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamDht(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamSof(TIFF* tif, uint8 marker_id);\nstatic int OJPEGReadHeaderInfoSecStreamSos(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecTablesQTable(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecTablesDcTable(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecTablesAcTable(TIFF* tif);\n\nstatic int OJPEGReadBufferFill(OJPEGState* sp);\nstatic int OJPEGReadByte(OJPEGState* sp, uint8* byte);\nstatic int OJPEGReadBytePeek(OJPEGState* sp, uint8* byte);\nstatic void OJPEGReadByteAdvance(OJPEGState* sp);\nstatic int OJPEGReadWord(OJPEGState* sp, uint16* word);\nstatic int OJPEGReadBlock(OJPEGState* sp, uint16 len, void* mem);\nstatic void OJPEGReadSkip(OJPEGState* sp, uint16 len);\n\nstatic int OJPEGWriteStream(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamSoi(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamQTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);\nstatic void OJPEGWriteStreamDcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);\nstatic void OJPEGWriteStreamAcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);\nstatic void OJPEGWriteStreamDri(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamSof(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamSos(TIFF* tif, void** mem, uint32* len);\nstatic int OJPEGWriteStreamCompressed(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamRst(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamEoi(TIFF* tif, void** mem, uint32* len);\n\n#ifdef LIBJPEG_ENCAP_EXTERNAL\nextern int jpeg_create_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo);\nextern int jpeg_read_header_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, uint8 require_image);\nextern int jpeg_start_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo);\nextern int jpeg_read_scanlines_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* scanlines, uint32 max_lines);\nextern int jpeg_read_raw_data_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* data, uint32 max_lines);\nextern void jpeg_encap_unwind(TIFF* tif);\n#else\nstatic int jpeg_create_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* j);\nstatic int jpeg_read_header_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, uint8 require_image);\nstatic int jpeg_start_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo);\nstatic int jpeg_read_scanlines_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* scanlines, uint32 max_lines);\nstatic int jpeg_read_raw_data_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* data, uint32 max_lines);\nstatic void jpeg_encap_unwind(TIFF* tif);\n#endif\n\nstatic void OJPEGLibjpegJpegErrorMgrOutputMessage(jpeg_common_struct* cinfo);\nstatic void OJPEGLibjpegJpegErrorMgrErrorExit(jpeg_common_struct* cinfo);\nstatic void OJPEGLibjpegJpegSourceMgrInitSource(jpeg_decompress_struct* cinfo);\nstatic boolean OJPEGLibjpegJpegSourceMgrFillInputBuffer(jpeg_decompress_struct* cinfo);\nstatic void OJPEGLibjpegJpegSourceMgrSkipInputData(jpeg_decompress_struct* cinfo, long num_bytes);\nstatic boolean OJPEGLibjpegJpegSourceMgrResyncToRestart(jpeg_decompress_struct* cinfo, int desired);\nstatic void OJPEGLibjpegJpegSourceMgrTermSource(jpeg_decompress_struct* cinfo);\n\nint\nTIFFInitOJPEG(TIFF* tif, int scheme)\n{\n\tstatic const char module[]=\"TIFFInitOJPEG\";\n\tOJPEGState* sp;\n\n\tassert(scheme==COMPRESSION_OJPEG);\n\n        /*\n\t * Merge codec-specific tag information.\n\t */\n\tif (!_TIFFMergeFields(tif, ojpegFields, TIFFArrayCount(ojpegFields))) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t    \"Merging Old JPEG codec-specific tags failed\");\n\t\treturn 0;\n\t}\n\n\t/* state block */\n\tsp=_TIFFmalloc(sizeof(OJPEGState));\n\tif (sp==NULL)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"No space for OJPEG state block\");\n\t\treturn(0);\n\t}\n\t_TIFFmemset(sp,0,sizeof(OJPEGState));\n\tsp->tif=tif;\n\tsp->jpeg_proc=1;\n\tsp->subsampling_hor=2;\n\tsp->subsampling_ver=2;\n\tTIFFSetField(tif,TIFFTAG_YCBCRSUBSAMPLING,2,2);\n\t/* tif codec methods */\n\ttif->tif_fixuptags=OJPEGFixupTags;  \n\ttif->tif_setupdecode=OJPEGSetupDecode;\n\ttif->tif_predecode=OJPEGPreDecode;\n\ttif->tif_postdecode=OJPEGPostDecode;  \n\ttif->tif_decoderow=OJPEGDecode;  \n\ttif->tif_decodestrip=OJPEGDecode;  \n\ttif->tif_decodetile=OJPEGDecode;  \n\ttif->tif_setupencode=OJPEGSetupEncode;\n\ttif->tif_preencode=OJPEGPreEncode;\n\ttif->tif_postencode=OJPEGPostEncode;\n\ttif->tif_encoderow=OJPEGEncode;  \n\ttif->tif_encodestrip=OJPEGEncode;  \n\ttif->tif_encodetile=OJPEGEncode;  \n\ttif->tif_cleanup=OJPEGCleanup;\n\ttif->tif_data=(uint8*)sp;\n\t/* tif tag methods */\n\tsp->vgetparent=tif->tif_tagmethods.vgetfield;\n\ttif->tif_tagmethods.vgetfield=OJPEGVGetField;\n\tsp->vsetparent=tif->tif_tagmethods.vsetfield;\n\ttif->tif_tagmethods.vsetfield=OJPEGVSetField;\n\tsp->printdir=tif->tif_tagmethods.printdir;\n\ttif->tif_tagmethods.printdir=OJPEGPrintDir;\n\t/* Some OJPEG files don't have strip or tile offsets or bytecounts tags.\n\t   Some others do, but have totally meaningless or corrupt values\n\t   in these tags. In these cases, the JpegInterchangeFormat stream is\n\t   reliable. In any case, this decoder reads the compressed data itself,\n\t   from the most reliable locations, and we need to notify encapsulating\n\t   LibTiff not to read raw strips or tiles for us. */\n\ttif->tif_flags|=TIFF_NOREADRAW;\n\treturn(1);\n}\n\nstatic int\nOJPEGVGetField(TIFF* tif, uint32 tag, va_list ap)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tswitch(tag)\n\t{\n\t\tcase TIFFTAG_JPEGIFOFFSET:\n\t\t\t*va_arg(ap,uint64*)=(uint64)sp->jpeg_interchange_format;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGIFBYTECOUNT:\n\t\t\t*va_arg(ap,uint64*)=(uint64)sp->jpeg_interchange_format_length;\n\t\t\tbreak;\n\t\tcase TIFFTAG_YCBCRSUBSAMPLING:\n\t\t\tif (sp->subsamplingcorrect_done==0)\n\t\t\t\tOJPEGSubsamplingCorrect(tif);\n\t\t\t*va_arg(ap,uint16*)=(uint16)sp->subsampling_hor;\n\t\t\t*va_arg(ap,uint16*)=(uint16)sp->subsampling_ver;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGQTABLES:\n\t\t\t*va_arg(ap,uint32*)=(uint32)sp->qtable_offset_count;\n\t\t\t*va_arg(ap,void**)=(void*)sp->qtable_offset; \n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGDCTABLES:\n\t\t\t*va_arg(ap,uint32*)=(uint32)sp->dctable_offset_count;\n\t\t\t*va_arg(ap,void**)=(void*)sp->dctable_offset;  \n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGACTABLES:\n\t\t\t*va_arg(ap,uint32*)=(uint32)sp->actable_offset_count;\n\t\t\t*va_arg(ap,void**)=(void*)sp->actable_offset;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGPROC:\n\t\t\t*va_arg(ap,uint16*)=(uint16)sp->jpeg_proc;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGRESTARTINTERVAL:\n\t\t\t*va_arg(ap,uint16*)=sp->restart_interval;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn (*sp->vgetparent)(tif,tag,ap);\n\t}\n\treturn (1);\n}\n\nstatic int\nOJPEGVSetField(TIFF* tif, uint32 tag, va_list ap)\n{\n\tstatic const char module[]=\"OJPEGVSetField\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 ma;\n\tuint64* mb;\n\tuint32 n;\n\tconst TIFFField* fip;\n\n\tswitch(tag)\n\t{\n\t\tcase TIFFTAG_JPEGIFOFFSET:\n\t\t\tsp->jpeg_interchange_format=(uint64)va_arg(ap,uint64);\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGIFBYTECOUNT:\n\t\t\tsp->jpeg_interchange_format_length=(uint64)va_arg(ap,uint64);\n\t\t\tbreak;\n\t\tcase TIFFTAG_YCBCRSUBSAMPLING:\n\t\t\tsp->subsampling_tag=1;\n\t\t\tsp->subsampling_hor=(uint8)va_arg(ap,uint16_vap);\n\t\t\tsp->subsampling_ver=(uint8)va_arg(ap,uint16_vap);\n\t\t\ttif->tif_dir.td_ycbcrsubsampling[0]=sp->subsampling_hor;\n\t\t\ttif->tif_dir.td_ycbcrsubsampling[1]=sp->subsampling_ver;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGQTABLES:\n\t\t\tma=(uint32)va_arg(ap,uint32);\n\t\t\tif (ma!=0)\n\t\t\t{\n\t\t\t\tif (ma>3)\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JpegQTables tag has incorrect count\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tsp->qtable_offset_count=(uint8)ma;\n\t\t\t\tmb=(uint64*)va_arg(ap,uint64*);\n\t\t\t\tfor (n=0; n<ma; n++)\n\t\t\t\t\tsp->qtable_offset[n]=mb[n];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGDCTABLES:\n\t\t\tma=(uint32)va_arg(ap,uint32);\n\t\t\tif (ma!=0)\n\t\t\t{\n\t\t\t\tif (ma>3)\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JpegDcTables tag has incorrect count\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tsp->dctable_offset_count=(uint8)ma;\n\t\t\t\tmb=(uint64*)va_arg(ap,uint64*);\n\t\t\t\tfor (n=0; n<ma; n++)\n\t\t\t\t\tsp->dctable_offset[n]=mb[n];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGACTABLES:\n\t\t\tma=(uint32)va_arg(ap,uint32);\n\t\t\tif (ma!=0)\n\t\t\t{\n\t\t\t\tif (ma>3)\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JpegAcTables tag has incorrect count\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tsp->actable_offset_count=(uint8)ma;\n\t\t\t\tmb=(uint64*)va_arg(ap,uint64*);\n\t\t\t\tfor (n=0; n<ma; n++)\n\t\t\t\t\tsp->actable_offset[n]=mb[n];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGPROC:\n\t\t\tsp->jpeg_proc=(uint8)va_arg(ap,uint16_vap);\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGRESTARTINTERVAL:\n\t\t\tsp->restart_interval=(uint16)va_arg(ap,uint16_vap);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn (*sp->vsetparent)(tif,tag,ap);\n\t}\n\tfip = TIFFFieldWithTag(tif,tag);\n\tif( fip == NULL ) /* shouldn't happen */\n\t    return(0);\n\tTIFFSetFieldBit(tif,fip->field_bit);\n\ttif->tif_flags|=TIFF_DIRTYDIRECT;\n\treturn(1);\n}\n\nstatic void\nOJPEGPrintDir(TIFF* tif, FILE* fd, long flags)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\t(void)flags;\n\tassert(sp!=NULL);\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGINTERCHANGEFORMAT))\n\t\tfprintf(fd,\"  JpegInterchangeFormat: \" TIFF_UINT64_FORMAT \"\\n\",(TIFF_UINT64_T)sp->jpeg_interchange_format);  \n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGINTERCHANGEFORMATLENGTH))\n\t\tfprintf(fd,\"  JpegInterchangeFormatLength: \" TIFF_UINT64_FORMAT \"\\n\",(TIFF_UINT64_T)sp->jpeg_interchange_format_length);  \n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGQTABLES))\n\t{\n\t\tfprintf(fd,\"  JpegQTables:\");\n\t\tfor (m=0; m<sp->qtable_offset_count; m++)\n\t\t\tfprintf(fd,\" \" TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->qtable_offset[m]);\n\t\tfprintf(fd,\"\\n\");\n\t}\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGDCTABLES))\n\t{\n\t\tfprintf(fd,\"  JpegDcTables:\");\n\t\tfor (m=0; m<sp->dctable_offset_count; m++)\n\t\t\tfprintf(fd,\" \" TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->dctable_offset[m]);\n\t\tfprintf(fd,\"\\n\");\n\t}\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGACTABLES))\n\t{\n\t\tfprintf(fd,\"  JpegAcTables:\");\n\t\tfor (m=0; m<sp->actable_offset_count; m++)\n\t\t\tfprintf(fd,\" \" TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->actable_offset[m]);\n\t\tfprintf(fd,\"\\n\");\n\t}\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGPROC))\n\t\tfprintf(fd,\"  JpegProc: %u\\n\",(unsigned int)sp->jpeg_proc);\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGRESTARTINTERVAL))\n\t\tfprintf(fd,\"  JpegRestartInterval: %u\\n\",(unsigned int)sp->restart_interval);\n\tif (sp->printdir)\n\t\t(*sp->printdir)(tif, fd, flags);\n}\n\nstatic int\nOJPEGFixupTags(TIFF* tif)\n{\n\t(void) tif;\n\treturn(1);\n}\n\nstatic int\nOJPEGSetupDecode(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGSetupDecode\";\n\tTIFFWarningExt(tif->tif_clientdata,module,\"Depreciated and troublesome old-style JPEG compression mode, please convert to new-style JPEG compression and notify vendor of writing software\");\n\treturn(1);\n}\n\nstatic int\nOJPEGPreDecode(TIFF* tif, uint16 s)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 m;\n\tif (sp->subsamplingcorrect_done==0)\n\t\tOJPEGSubsamplingCorrect(tif);\n\tif (sp->readheader_done==0)\n\t{\n\t\tif (OJPEGReadHeaderInfo(tif)==0)\n\t\t\treturn(0);\n\t}\n\tif (sp->sos_end[s].log==0)\n\t{\n\t\tif (OJPEGReadSecondarySos(tif,s)==0)\n\t\t\treturn(0);\n\t}\n\tif isTiled(tif)\n\t\tm=tif->tif_curtile;\n\telse\n\t\tm=tif->tif_curstrip;\n\tif ((sp->writeheader_done!=0) && ((sp->write_cursample!=s) || (sp->write_curstrile>m)))\n\t{\n\t\tif (sp->libjpeg_session_active!=0)\n\t\t\tOJPEGLibjpegSessionAbort(tif);\n\t\tsp->writeheader_done=0;\n\t}\n\tif (sp->writeheader_done==0)\n\t{\n\t\tsp->plane_sample_offset=(uint8)s;\n\t\tsp->write_cursample=s;\n\t\tsp->write_curstrile=s*tif->tif_dir.td_stripsperimage;\n\t\tif ((sp->in_buffer_file_pos_log==0) ||\n\t\t    (sp->in_buffer_file_pos-sp->in_buffer_togo!=sp->sos_end[s].in_buffer_file_pos))\n\t\t{\n\t\t\tsp->in_buffer_source=sp->sos_end[s].in_buffer_source;\n\t\t\tsp->in_buffer_next_strile=sp->sos_end[s].in_buffer_next_strile;\n\t\t\tsp->in_buffer_file_pos=sp->sos_end[s].in_buffer_file_pos;\n\t\t\tsp->in_buffer_file_pos_log=0;\n\t\t\tsp->in_buffer_file_togo=sp->sos_end[s].in_buffer_file_togo;\n\t\t\tsp->in_buffer_togo=0;\n\t\t\tsp->in_buffer_cur=0;\n\t\t}\n\t\tif (OJPEGWriteHeaderInfo(tif)==0)\n\t\t\treturn(0);\n\t}\n\twhile (sp->write_curstrile<m)          \n\t{\n\t\tif (sp->libjpeg_jpeg_query_style==0)\n\t\t{\n\t\t\tif (OJPEGPreDecodeSkipRaw(tif)==0)\n\t\t\t\treturn(0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (OJPEGPreDecodeSkipScanlines(tif)==0)\n\t\t\t\treturn(0);\n\t\t}\n\t\tsp->write_curstrile++;\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGPreDecodeSkipRaw(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 m;\n\tm=sp->lines_per_strile;\n\tif (sp->subsampling_convert_state!=0)\n\t{\n\t\tif (sp->subsampling_convert_clines-sp->subsampling_convert_state>=m)\n\t\t{\n\t\t\tsp->subsampling_convert_state+=m;\n\t\t\tif (sp->subsampling_convert_state==sp->subsampling_convert_clines)\n\t\t\t\tsp->subsampling_convert_state=0;\n\t\t\treturn(1);\n\t\t}\n\t\tm-=sp->subsampling_convert_clines-sp->subsampling_convert_state;\n\t\tsp->subsampling_convert_state=0;\n\t}\n\twhile (m>=sp->subsampling_convert_clines)\n\t{\n\t\tif (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)\n\t\t\treturn(0);\n\t\tm-=sp->subsampling_convert_clines;\n\t}\n\tif (m>0)\n\t{\n\t\tif (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)\n\t\t\treturn(0);\n\t\tsp->subsampling_convert_state=m;\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGPreDecodeSkipScanlines(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGPreDecodeSkipScanlines\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 m;\n\tif (sp->skip_buffer==NULL)\n\t{\n\t\tsp->skip_buffer=_TIFFmalloc(sp->bytes_per_line);\n\t\tif (sp->skip_buffer==NULL)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\treturn(0);\n\t\t}\n\t}\n\tfor (m=0; m<sp->lines_per_strile; m++)\n\t{\n\t\tif (jpeg_read_scanlines_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),&sp->skip_buffer,1)==0)\n\t\t\treturn(0);\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGDecode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\t(void)s;\n\tif (sp->libjpeg_jpeg_query_style==0)\n\t{\n\t\tif (OJPEGDecodeRaw(tif,buf,cc)==0)\n\t\t\treturn(0);\n\t}\n\telse\n\t{\n\t\tif (OJPEGDecodeScanlines(tif,buf,cc)==0)\n\t\t\treturn(0);\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGDecodeRaw(TIFF* tif, uint8* buf, tmsize_t cc)\n{\n\tstatic const char module[]=\"OJPEGDecodeRaw\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8* m;\n\ttmsize_t n;\n\tuint8* oy;\n\tuint8* ocb;\n\tuint8* ocr;\n\tuint8* p;\n\tuint32 q;\n\tuint8* r;\n\tuint8 sx,sy;\n\tif (cc%sp->bytes_per_line!=0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Fractional scanline not read\");\n\t\treturn(0);\n\t}\n\tassert(cc>0);\n\tm=buf;\n\tn=cc;\n\tdo\n\t{\n\t\tif (sp->subsampling_convert_state==0)\n\t\t{\n\t\t\tif (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)\n\t\t\t\treturn(0);\n\t\t}\n\t\toy=sp->subsampling_convert_ybuf+sp->subsampling_convert_state*sp->subsampling_ver*sp->subsampling_convert_ylinelen;\n\t\tocb=sp->subsampling_convert_cbbuf+sp->subsampling_convert_state*sp->subsampling_convert_clinelen;\n\t\tocr=sp->subsampling_convert_crbuf+sp->subsampling_convert_state*sp->subsampling_convert_clinelen;\n\t\tp=m;\n\t\tfor (q=0; q<sp->subsampling_convert_clinelenout; q++)\n\t\t{\n\t\t\tr=oy;\n\t\t\tfor (sy=0; sy<sp->subsampling_ver; sy++)\n\t\t\t{\n\t\t\t\tfor (sx=0; sx<sp->subsampling_hor; sx++)\n\t\t\t\t\t*p++=*r++;\n\t\t\t\tr+=sp->subsampling_convert_ylinelen-sp->subsampling_hor;\n\t\t\t}\n\t\t\toy+=sp->subsampling_hor;\n\t\t\t*p++=*ocb++;\n\t\t\t*p++=*ocr++;\n\t\t}\n\t\tsp->subsampling_convert_state++;\n\t\tif (sp->subsampling_convert_state==sp->subsampling_convert_clines)\n\t\t\tsp->subsampling_convert_state=0;\n\t\tm+=sp->bytes_per_line;\n\t\tn-=sp->bytes_per_line;\n\t} while(n>0);\n\treturn(1);\n}\n\nstatic int\nOJPEGDecodeScanlines(TIFF* tif, uint8* buf, tmsize_t cc)\n{\n\tstatic const char module[]=\"OJPEGDecodeScanlines\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8* m;\n\ttmsize_t n;\n\tif (cc%sp->bytes_per_line!=0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Fractional scanline not read\");\n\t\treturn(0);\n\t}\n\tassert(cc>0);\n\tm=buf;\n\tn=cc;\n\tdo\n\t{\n\t\tif (jpeg_read_scanlines_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),&m,1)==0)\n\t\t\treturn(0);\n\t\tm+=sp->bytes_per_line;\n\t\tn-=sp->bytes_per_line;\n\t} while(n>0);\n\treturn(1);\n}\n\nstatic void\nOJPEGPostDecode(TIFF* tif, uint8* buf, tmsize_t cc)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\t(void)buf;\n\t(void)cc;\n\tsp->write_curstrile++;\n\tif (sp->write_curstrile%tif->tif_dir.td_stripsperimage==0)  \n\t{\n\t\tassert(sp->libjpeg_session_active!=0);\n\t\tOJPEGLibjpegSessionAbort(tif);\n\t\tsp->writeheader_done=0;\n\t}\n}\n\nstatic int\nOJPEGSetupEncode(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGSetupEncode\";\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic int\nOJPEGPreEncode(TIFF* tif, uint16 s)\n{\n\tstatic const char module[]=\"OJPEGPreEncode\";\n\t(void)s;\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic int\nOJPEGEncode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s)\n{\n\tstatic const char module[]=\"OJPEGEncode\";\n\t(void)buf;\n\t(void)cc;\n\t(void)s;\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic int\nOJPEGPostEncode(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGPostEncode\";\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic void\nOJPEGCleanup(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp!=0)\n\t{\n\t\ttif->tif_tagmethods.vgetfield=sp->vgetparent;\n\t\ttif->tif_tagmethods.vsetfield=sp->vsetparent;\n\t\ttif->tif_tagmethods.printdir=sp->printdir;\n\t\tif (sp->qtable[0]!=0)\n\t\t\t_TIFFfree(sp->qtable[0]);\n\t\tif (sp->qtable[1]!=0)\n\t\t\t_TIFFfree(sp->qtable[1]);\n\t\tif (sp->qtable[2]!=0)\n\t\t\t_TIFFfree(sp->qtable[2]);\n\t\tif (sp->qtable[3]!=0)\n\t\t\t_TIFFfree(sp->qtable[3]);\n\t\tif (sp->dctable[0]!=0)\n\t\t\t_TIFFfree(sp->dctable[0]);\n\t\tif (sp->dctable[1]!=0)\n\t\t\t_TIFFfree(sp->dctable[1]);\n\t\tif (sp->dctable[2]!=0)\n\t\t\t_TIFFfree(sp->dctable[2]);\n\t\tif (sp->dctable[3]!=0)\n\t\t\t_TIFFfree(sp->dctable[3]);\n\t\tif (sp->actable[0]!=0)\n\t\t\t_TIFFfree(sp->actable[0]);\n\t\tif (sp->actable[1]!=0)\n\t\t\t_TIFFfree(sp->actable[1]);\n\t\tif (sp->actable[2]!=0)\n\t\t\t_TIFFfree(sp->actable[2]);\n\t\tif (sp->actable[3]!=0)\n\t\t\t_TIFFfree(sp->actable[3]);\n\t\tif (sp->libjpeg_session_active!=0)\n\t\t\tOJPEGLibjpegSessionAbort(tif);\n\t\tif (sp->subsampling_convert_ycbcrbuf!=0)\n\t\t\t_TIFFfree(sp->subsampling_convert_ycbcrbuf);\n\t\tif (sp->subsampling_convert_ycbcrimage!=0)\n\t\t\t_TIFFfree(sp->subsampling_convert_ycbcrimage);\n\t\tif (sp->skip_buffer!=0)\n\t\t\t_TIFFfree(sp->skip_buffer);\n\t\t_TIFFfree(sp);\n\t\ttif->tif_data=NULL;\n\t\t_TIFFSetDefaultCompressionState(tif);\n\t}\n}\n\nstatic void\nOJPEGSubsamplingCorrect(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGSubsamplingCorrect\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 mh;\n\tuint8 mv;\n        _TIFFFillStriles( tif );\n        \n\tassert(sp->subsamplingcorrect_done==0);\n\tif ((tif->tif_dir.td_samplesperpixel!=3) || ((tif->tif_dir.td_photometric!=PHOTOMETRIC_YCBCR) &&\n\t    (tif->tif_dir.td_photometric!=PHOTOMETRIC_ITULAB)))\n\t{\n\t\tif (sp->subsampling_tag!=0)\n\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling tag not appropriate for this Photometric and/or SamplesPerPixel\");\n\t\tsp->subsampling_hor=1;\n\t\tsp->subsampling_ver=1;\n\t\tsp->subsampling_force_desubsampling_inside_decompression=0;\n\t}\n\telse\n\t{\n\t\tsp->subsamplingcorrect_done=1;\n\t\tmh=sp->subsampling_hor;\n\t\tmv=sp->subsampling_ver;\n\t\tsp->subsamplingcorrect=1;\n\t\tOJPEGReadHeaderInfoSec(tif);\n\t\tif (sp->subsampling_force_desubsampling_inside_decompression!=0)\n\t\t{\n\t\t\tsp->subsampling_hor=1;\n\t\t\tsp->subsampling_ver=1;\n\t\t}\n\t\tsp->subsamplingcorrect=0;\n\t\tif (((sp->subsampling_hor!=mh) || (sp->subsampling_ver!=mv)) && (sp->subsampling_force_desubsampling_inside_decompression==0))\n\t\t{\n\t\t\tif (sp->subsampling_tag==0)\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling tag is not set, yet subsampling inside JPEG data [%d,%d] does not match default values [2,2]; assuming subsampling inside JPEG data is correct\",sp->subsampling_hor,sp->subsampling_ver);\n\t\t\telse\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling inside JPEG data [%d,%d] does not match subsampling tag values [%d,%d]; assuming subsampling inside JPEG data is correct\",sp->subsampling_hor,sp->subsampling_ver,mh,mv);\n\t\t}\n\t\tif (sp->subsampling_force_desubsampling_inside_decompression!=0)\n\t\t{\n\t\t\tif (sp->subsampling_tag==0)\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling tag is not set, yet subsampling inside JPEG data does not match default values [2,2] (nor any other values allowed in TIFF); assuming subsampling inside JPEG data is correct and desubsampling inside JPEG decompression\");\n\t\t\telse\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling inside JPEG data does not match subsampling tag values [%d,%d] (nor any other values allowed in TIFF); assuming subsampling inside JPEG data is correct and desubsampling inside JPEG decompression\",mh,mv);\n\t\t}\n\t\tif (sp->subsampling_force_desubsampling_inside_decompression==0)\n\t\t{\n\t\t\tif (sp->subsampling_hor<sp->subsampling_ver)\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling values [%d,%d] are not allowed in TIFF\",sp->subsampling_hor,sp->subsampling_ver);\n\t\t}\n\t}\n\tsp->subsamplingcorrect_done=1;\n}\n\nstatic int\nOJPEGReadHeaderInfo(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfo\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(sp->readheader_done==0);\n\tsp->image_width=tif->tif_dir.td_imagewidth;\n\tsp->image_length=tif->tif_dir.td_imagelength;\n\tif isTiled(tif)\n\t{\n\t\tsp->strile_width=tif->tif_dir.td_tilewidth;\n\t\tsp->strile_length=tif->tif_dir.td_tilelength;\n\t\tsp->strile_length_total=((sp->image_length+sp->strile_length-1)/sp->strile_length)*sp->strile_length;\n\t}\n\telse\n\t{\n\t\tsp->strile_width=sp->image_width;\n\t\tsp->strile_length=tif->tif_dir.td_rowsperstrip;\n\t\tsp->strile_length_total=sp->image_length;\n\t}\n\tif (tif->tif_dir.td_samplesperpixel==1)\n\t{\n\t\tsp->samples_per_pixel=1;\n\t\tsp->plane_sample_offset=0;\n\t\tsp->samples_per_pixel_per_plane=sp->samples_per_pixel;\n\t\tsp->subsampling_hor=1;\n\t\tsp->subsampling_ver=1;\n\t}\n\telse\n\t{\n\t\tif (tif->tif_dir.td_samplesperpixel!=3)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"SamplesPerPixel %d not supported for this compression scheme\",sp->samples_per_pixel);\n\t\t\treturn(0);\n\t\t}\n\t\tsp->samples_per_pixel=3;\n\t\tsp->plane_sample_offset=0;\n\t\tif (tif->tif_dir.td_planarconfig==PLANARCONFIG_CONTIG)\n\t\t\tsp->samples_per_pixel_per_plane=3;\n\t\telse\n\t\t\tsp->samples_per_pixel_per_plane=1;\n\t}\n\tif (sp->strile_length<sp->image_length)\n\t{\n\t\tif (sp->strile_length%(sp->subsampling_ver*8)!=0)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Incompatible vertical subsampling and image strip/tile length\");\n\t\t\treturn(0);\n\t\t}\n\t\tsp->restart_interval=(uint16)(((sp->strile_width+sp->subsampling_hor*8-1)/(sp->subsampling_hor*8))*(sp->strile_length/(sp->subsampling_ver*8)));\n\t}\n\tif (OJPEGReadHeaderInfoSec(tif)==0)\n\t\treturn(0);\n\tsp->sos_end[0].log=1;\n\tsp->sos_end[0].in_buffer_source=sp->in_buffer_source;\n\tsp->sos_end[0].in_buffer_next_strile=sp->in_buffer_next_strile;\n\tsp->sos_end[0].in_buffer_file_pos=sp->in_buffer_file_pos-sp->in_buffer_togo;\n\tsp->sos_end[0].in_buffer_file_togo=sp->in_buffer_file_togo+sp->in_buffer_togo; \n\tsp->readheader_done=1;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadSecondarySos(TIFF* tif, uint16 s)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tassert(s>0);\n\tassert(s<3);\n\tassert(sp->sos_end[0].log!=0);\n\tassert(sp->sos_end[s].log==0);\n\tsp->plane_sample_offset=(uint8)(s-1);\n\twhile(sp->sos_end[sp->plane_sample_offset].log==0)\n\t\tsp->plane_sample_offset--;\n\tsp->in_buffer_source=sp->sos_end[sp->plane_sample_offset].in_buffer_source;\n\tsp->in_buffer_next_strile=sp->sos_end[sp->plane_sample_offset].in_buffer_next_strile;\n\tsp->in_buffer_file_pos=sp->sos_end[sp->plane_sample_offset].in_buffer_file_pos;\n\tsp->in_buffer_file_pos_log=0;\n\tsp->in_buffer_file_togo=sp->sos_end[sp->plane_sample_offset].in_buffer_file_togo;\n\tsp->in_buffer_togo=0;\n\tsp->in_buffer_cur=0;\n\twhile(sp->plane_sample_offset<s)\n\t{\n\t\tdo\n\t\t{\n\t\t\tif (OJPEGReadByte(sp,&m)==0)\n\t\t\t\treturn(0);\n\t\t\tif (m==255)\n\t\t\t{\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tif (OJPEGReadByte(sp,&m)==0)\n\t\t\t\t\t\treturn(0);\n\t\t\t\t\tif (m!=255)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} while(1);\n\t\t\t\tif (m==JPEG_MARKER_SOS)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(1);\n\t\tsp->plane_sample_offset++;\n\t\tif (OJPEGReadHeaderInfoSecStreamSos(tif)==0)\n\t\t\treturn(0);\n\t\tsp->sos_end[sp->plane_sample_offset].log=1;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_source=sp->in_buffer_source;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_next_strile=sp->in_buffer_next_strile;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_file_pos=sp->in_buffer_file_pos-sp->in_buffer_togo;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_file_togo=sp->in_buffer_file_togo+sp->in_buffer_togo;\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGWriteHeaderInfo(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGWriteHeaderInfo\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8** m;\n\tuint32 n;\n\t/* if a previous attempt failed, don't try again */\n\tif (sp->libjpeg_session_active != 0) \n\t\treturn 0;\n\tsp->out_state=ososSoi;\n\tsp->restart_index=0;\n\tjpeg_std_error(&(sp->libjpeg_jpeg_error_mgr));\n\tsp->libjpeg_jpeg_error_mgr.output_message=OJPEGLibjpegJpegErrorMgrOutputMessage;\n\tsp->libjpeg_jpeg_error_mgr.error_exit=OJPEGLibjpegJpegErrorMgrErrorExit;\n\tsp->libjpeg_jpeg_decompress_struct.err=&(sp->libjpeg_jpeg_error_mgr);\n\tsp->libjpeg_jpeg_decompress_struct.client_data=(void*)tif;\n\tif (jpeg_create_decompress_encap(sp,&(sp->libjpeg_jpeg_decompress_struct))==0)\n\t\treturn(0);\n\tsp->libjpeg_session_active=1;\n\tsp->libjpeg_jpeg_source_mgr.bytes_in_buffer=0;\n\tsp->libjpeg_jpeg_source_mgr.init_source=OJPEGLibjpegJpegSourceMgrInitSource;\n\tsp->libjpeg_jpeg_source_mgr.fill_input_buffer=OJPEGLibjpegJpegSourceMgrFillInputBuffer;\n\tsp->libjpeg_jpeg_source_mgr.skip_input_data=OJPEGLibjpegJpegSourceMgrSkipInputData;\n\tsp->libjpeg_jpeg_source_mgr.resync_to_restart=OJPEGLibjpegJpegSourceMgrResyncToRestart;\n\tsp->libjpeg_jpeg_source_mgr.term_source=OJPEGLibjpegJpegSourceMgrTermSource;\n\tsp->libjpeg_jpeg_decompress_struct.src=&(sp->libjpeg_jpeg_source_mgr);\n\tif (jpeg_read_header_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),1)==0)\n\t\treturn(0);\n\tif ((sp->subsampling_force_desubsampling_inside_decompression==0) && (sp->samples_per_pixel_per_plane>1))\n\t{\n\t\tsp->libjpeg_jpeg_decompress_struct.raw_data_out=1;\n#if JPEG_LIB_VERSION >= 70\n\t\tsp->libjpeg_jpeg_decompress_struct.do_fancy_upsampling=FALSE;\n#endif\n\t\tsp->libjpeg_jpeg_query_style=0;\n\t\tif (sp->subsampling_convert_log==0)\n\t\t{\n\t\t\tassert(sp->subsampling_convert_ycbcrbuf==0);\n\t\t\tassert(sp->subsampling_convert_ycbcrimage==0);\n\t\t\tsp->subsampling_convert_ylinelen=((sp->strile_width+sp->subsampling_hor*8-1)/(sp->subsampling_hor*8)*sp->subsampling_hor*8);\n\t\t\tsp->subsampling_convert_ylines=sp->subsampling_ver*8;\n\t\t\tsp->subsampling_convert_clinelen=sp->subsampling_convert_ylinelen/sp->subsampling_hor;\n\t\t\tsp->subsampling_convert_clines=8;\n\t\t\tsp->subsampling_convert_ybuflen=sp->subsampling_convert_ylinelen*sp->subsampling_convert_ylines;\n\t\t\tsp->subsampling_convert_cbuflen=sp->subsampling_convert_clinelen*sp->subsampling_convert_clines;\n\t\t\tsp->subsampling_convert_ycbcrbuflen=sp->subsampling_convert_ybuflen+2*sp->subsampling_convert_cbuflen;\n\t\t\tsp->subsampling_convert_ycbcrbuf=_TIFFmalloc(sp->subsampling_convert_ycbcrbuflen);\n\t\t\tif (sp->subsampling_convert_ycbcrbuf==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tsp->subsampling_convert_ybuf=sp->subsampling_convert_ycbcrbuf;\n\t\t\tsp->subsampling_convert_cbbuf=sp->subsampling_convert_ybuf+sp->subsampling_convert_ybuflen;\n\t\t\tsp->subsampling_convert_crbuf=sp->subsampling_convert_cbbuf+sp->subsampling_convert_cbuflen;\n\t\t\tsp->subsampling_convert_ycbcrimagelen=3+sp->subsampling_convert_ylines+2*sp->subsampling_convert_clines;\n\t\t\tsp->subsampling_convert_ycbcrimage=_TIFFmalloc(sp->subsampling_convert_ycbcrimagelen*sizeof(uint8*));\n\t\t\tif (sp->subsampling_convert_ycbcrimage==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tm=sp->subsampling_convert_ycbcrimage;\n\t\t\t*m++=(uint8*)(sp->subsampling_convert_ycbcrimage+3);\n\t\t\t*m++=(uint8*)(sp->subsampling_convert_ycbcrimage+3+sp->subsampling_convert_ylines);\n\t\t\t*m++=(uint8*)(sp->subsampling_convert_ycbcrimage+3+sp->subsampling_convert_ylines+sp->subsampling_convert_clines);\n\t\t\tfor (n=0; n<sp->subsampling_convert_ylines; n++)\n\t\t\t\t*m++=sp->subsampling_convert_ybuf+n*sp->subsampling_convert_ylinelen;\n\t\t\tfor (n=0; n<sp->subsampling_convert_clines; n++)\n\t\t\t\t*m++=sp->subsampling_convert_cbbuf+n*sp->subsampling_convert_clinelen;\n\t\t\tfor (n=0; n<sp->subsampling_convert_clines; n++)\n\t\t\t\t*m++=sp->subsampling_convert_crbuf+n*sp->subsampling_convert_clinelen;\n\t\t\tsp->subsampling_convert_clinelenout=((sp->strile_width+sp->subsampling_hor-1)/sp->subsampling_hor);\n\t\t\tsp->subsampling_convert_state=0;\n\t\t\tsp->bytes_per_line=sp->subsampling_convert_clinelenout*(sp->subsampling_ver*sp->subsampling_hor+2);\n\t\t\tsp->lines_per_strile=((sp->strile_length+sp->subsampling_ver-1)/sp->subsampling_ver);\n\t\t\tsp->subsampling_convert_log=1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tsp->libjpeg_jpeg_decompress_struct.jpeg_color_space=JCS_UNKNOWN;\n\t\tsp->libjpeg_jpeg_decompress_struct.out_color_space=JCS_UNKNOWN;\n\t\tsp->libjpeg_jpeg_query_style=1;\n\t\tsp->bytes_per_line=sp->samples_per_pixel_per_plane*sp->strile_width;\n\t\tsp->lines_per_strile=sp->strile_length;\n\t}\n\tif (jpeg_start_decompress_encap(sp,&(sp->libjpeg_jpeg_decompress_struct))==0)\n\t\treturn(0);\n\tsp->writeheader_done=1;\n\treturn(1);\n}\n\nstatic void\nOJPEGLibjpegSessionAbort(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(sp->libjpeg_session_active!=0);\n\tjpeg_destroy((jpeg_common_struct*)(&(sp->libjpeg_jpeg_decompress_struct)));\n\tsp->libjpeg_session_active=0;\n}\n\nstatic int\nOJPEGReadHeaderInfoSec(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSec\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint16 n;\n\tuint8 o;\n\tif (sp->file_size==0)\n\t\tsp->file_size=TIFFGetFileSize(tif);\n\tif (sp->jpeg_interchange_format!=0)\n\t{\n\t\tif (sp->jpeg_interchange_format>=sp->file_size)\n\t\t{\n\t\t\tsp->jpeg_interchange_format=0;\n\t\t\tsp->jpeg_interchange_format_length=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((sp->jpeg_interchange_format_length==0) || (sp->jpeg_interchange_format+sp->jpeg_interchange_format_length>sp->file_size))\n\t\t\t\tsp->jpeg_interchange_format_length=sp->file_size-sp->jpeg_interchange_format;\n\t\t}\n\t}\n\tsp->in_buffer_source=osibsNotSetYet;\n\tsp->in_buffer_next_strile=0;\n\tsp->in_buffer_strile_count=tif->tif_dir.td_nstrips;\n\tsp->in_buffer_file_togo=0;\n\tsp->in_buffer_togo=0;\n\tdo\n\t{\n\t\tif (OJPEGReadBytePeek(sp,&m)==0)\n\t\t\treturn(0);\n\t\tif (m!=255)\n\t\t\tbreak;\n\t\tOJPEGReadByteAdvance(sp);\n\t\tdo\n\t\t{\n\t\t\tif (OJPEGReadByte(sp,&m)==0)\n\t\t\t\treturn(0);\n\t\t} while(m==255);\n\t\tswitch(m)\n\t\t{\n\t\t\tcase JPEG_MARKER_SOI:\n\t\t\t\t/* this type of marker has no data, and should be skipped */\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_COM:\n\t\t\tcase JPEG_MARKER_APP0:\n\t\t\tcase JPEG_MARKER_APP0+1:\n\t\t\tcase JPEG_MARKER_APP0+2:\n\t\t\tcase JPEG_MARKER_APP0+3:\n\t\t\tcase JPEG_MARKER_APP0+4:\n\t\t\tcase JPEG_MARKER_APP0+5:\n\t\t\tcase JPEG_MARKER_APP0+6:\n\t\t\tcase JPEG_MARKER_APP0+7:\n\t\t\tcase JPEG_MARKER_APP0+8:\n\t\t\tcase JPEG_MARKER_APP0+9:\n\t\t\tcase JPEG_MARKER_APP0+10:\n\t\t\tcase JPEG_MARKER_APP0+11:\n\t\t\tcase JPEG_MARKER_APP0+12:\n\t\t\tcase JPEG_MARKER_APP0+13:\n\t\t\tcase JPEG_MARKER_APP0+14:\n\t\t\tcase JPEG_MARKER_APP0+15:\n\t\t\t\t/* this type of marker has data, but it has no use to us (and no place here) and should be skipped */\n\t\t\t\tif (OJPEGReadWord(sp,&n)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tif (n<2)\n\t\t\t\t{\n\t\t\t\t\tif (sp->subsamplingcorrect==0)\n\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JPEG data\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tif (n>2)\n\t\t\t\t\tOJPEGReadSkip(sp,n-2);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_DRI:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamDri(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_DQT:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamDqt(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_DHT:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamDht(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_SOF0:\n\t\t\tcase JPEG_MARKER_SOF1:\n\t\t\tcase JPEG_MARKER_SOF3:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamSof(tif,m)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tif (sp->subsamplingcorrect!=0)\n\t\t\t\t\treturn(1);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_SOS:\n\t\t\t\tif (sp->subsamplingcorrect!=0)\n\t\t\t\t\treturn(1);\n\t\t\t\tassert(sp->plane_sample_offset==0);\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamSos(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Unknown marker type %d in JPEG data\",m);\n\t\t\t\treturn(0);\n\t\t}\n\t} while(m!=JPEG_MARKER_SOS);\n\tif (sp->subsamplingcorrect)\n\t\treturn(1);\n\tif (sp->sof_log==0)\n\t{\n\t\tif (OJPEGReadHeaderInfoSecTablesQTable(tif)==0)\n\t\t\treturn(0);\n\t\tsp->sof_marker_id=JPEG_MARKER_SOF0;\n\t\tfor (o=0; o<sp->samples_per_pixel; o++)\n\t\t\tsp->sof_c[o]=o;\n\t\tsp->sof_hv[0]=((sp->subsampling_hor<<4)|sp->subsampling_ver);\n\t\tfor (o=1; o<sp->samples_per_pixel; o++)\n\t\t\tsp->sof_hv[o]=17;\n\t\tsp->sof_x=sp->strile_width;\n\t\tsp->sof_y=sp->strile_length_total;\n\t\tsp->sof_log=1;\n\t\tif (OJPEGReadHeaderInfoSecTablesDcTable(tif)==0)\n\t\t\treturn(0);\n\t\tif (OJPEGReadHeaderInfoSecTablesAcTable(tif)==0)\n\t\t\treturn(0);\n\t\tfor (o=1; o<sp->samples_per_pixel; o++)\n\t\t\tsp->sos_cs[o]=o;\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamDri(TIFF* tif)\n{\n\t/* This could easily cause trouble in some cases... but no such cases have\n           occurred so far */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamDri\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m!=4)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DRI marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tsp->restart_interval=m;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamDqt(TIFF* tif)\n{\n\t/* this is a table marker, and it is to be saved as a whole for exact pushing on the jpeg stream later on */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamDqt\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint32 na;\n\tuint8* nb;\n\tuint8 o;\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m<=2)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DQT marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tif (sp->subsamplingcorrect!=0)\n\t\tOJPEGReadSkip(sp,m-2);\n\telse\n\t{\n\t\tm-=2;\n\t\tdo\n\t\t{\n\t\t\tif (m<65)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DQT marker in JPEG data\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tna=sizeof(uint32)+69;\n\t\t\tnb=_TIFFmalloc(na);\n\t\t\tif (nb==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)nb=na;\n\t\t\tnb[sizeof(uint32)]=255;\n\t\t\tnb[sizeof(uint32)+1]=JPEG_MARKER_DQT;\n\t\t\tnb[sizeof(uint32)+2]=0;\n\t\t\tnb[sizeof(uint32)+3]=67;\n\t\t\tif (OJPEGReadBlock(sp,65,&nb[sizeof(uint32)+4])==0) {\n\t\t\t\t_TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\to=nb[sizeof(uint32)+4]&15;\n\t\t\tif (3<o)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DQT marker in JPEG data\");\n\t\t\t\t_TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tif (sp->qtable[o]!=0)\n\t\t\t\t_TIFFfree(sp->qtable[o]);\n\t\t\tsp->qtable[o]=nb;\n\t\t\tm-=65;\n\t\t} while(m>0);\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamDht(TIFF* tif)\n{\n\t/* this is a table marker, and it is to be saved as a whole for exact pushing on the jpeg stream later on */\n\t/* TODO: the following assumes there is only one table in this marker... but i'm not quite sure that assumption is guaranteed correct */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamDht\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint32 na;\n\tuint8* nb;\n\tuint8 o;\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m<=2)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tif (sp->subsamplingcorrect!=0)\n\t{\n\t\tOJPEGReadSkip(sp,m-2);\n\t}\n\telse\n\t{\n\t\tna=sizeof(uint32)+2+m;\n\t\tnb=_TIFFmalloc(na);\n\t\tif (nb==0)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\treturn(0);\n\t\t}\n\t\t*(uint32*)nb=na;\n\t\tnb[sizeof(uint32)]=255;\n\t\tnb[sizeof(uint32)+1]=JPEG_MARKER_DHT;\n\t\tnb[sizeof(uint32)+2]=(m>>8);\n\t\tnb[sizeof(uint32)+3]=(m&255);\n\t\tif (OJPEGReadBlock(sp,m-2,&nb[sizeof(uint32)+4])==0) {\n                        _TIFFfree(nb);\n\t\t\treturn(0);\n                }\n\t\to=nb[sizeof(uint32)+4];\n\t\tif ((o&240)==0)\n\t\t{\n\t\t\tif (3<o)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n                                _TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tif (sp->dctable[o]!=0)\n\t\t\t\t_TIFFfree(sp->dctable[o]);\n\t\t\tsp->dctable[o]=nb;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((o&240)!=16)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n                                _TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\to&=15;\n\t\t\tif (3<o)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n                                _TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tif (sp->actable[o]!=0)\n\t\t\t\t_TIFFfree(sp->actable[o]);\n\t\t\tsp->actable[o]=nb;\n\t\t}\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamSof(TIFF* tif, uint8 marker_id)\n{\n\t/* this marker needs to be checked, and part of its data needs to be saved for regeneration later on */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamSof\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint16 n;\n\tuint8 o;\n\tuint16 p;\n\tuint16 q;\n\tif (sp->sof_log!=0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JPEG data\");\n\t\treturn(0);\n\t}\n\tif (sp->subsamplingcorrect==0)\n\t\tsp->sof_marker_id=marker_id;\n\t/* Lf: data length */\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m<11)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOF marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tm-=8;\n\tif (m%3!=0)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOF marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tn=m/3;\n\tif (sp->subsamplingcorrect==0)\n\t{\n\t\tif (n!=sp->samples_per_pixel)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected number of samples\");\n\t\t\treturn(0);\n\t\t}\n\t}\n\t/* P: Sample precision */\n\tif (OJPEGReadByte(sp,&o)==0)\n\t\treturn(0);\n\tif (o!=8)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected number of bits per sample\");\n\t\treturn(0);\n\t}\n\t/* Y: Number of lines, X: Number of samples per line */\n\tif (sp->subsamplingcorrect)\n\t\tOJPEGReadSkip(sp,4);\n\telse\n\t{\n\t\t/* Y: Number of lines */\n\t\tif (OJPEGReadWord(sp,&p)==0)\n\t\t\treturn(0);\n\t\tif (((uint32)p<sp->image_length) && ((uint32)p<sp->strile_length_total))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected height\");\n\t\t\treturn(0);\n\t\t}\n\t\tsp->sof_y=p;\n\t\t/* X: Number of samples per line */\n\t\tif (OJPEGReadWord(sp,&p)==0)\n\t\t\treturn(0);\n\t\tif (((uint32)p<sp->image_width) && ((uint32)p<sp->strile_width))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected width\");\n\t\t\treturn(0);\n\t\t}\n\t\tif ((uint32)p>sp->strile_width)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data image width exceeds expected image width\");\n\t\t\treturn(0);\n\t\t}\n\t\tsp->sof_x=p;\n\t}\n\t/* Nf: Number of image components in frame */\n\tif (OJPEGReadByte(sp,&o)==0)\n\t\treturn(0);\n\tif (o!=n)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOF marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* per component stuff */\n\t/* TODO: double-check that flow implies that n cannot be as big as to make us overflow sof_c, sof_hv and sof_tq arrays */\n\tfor (q=0; q<n; q++)\n\t{\n\t\t/* C: Component identifier */\n\t\tif (OJPEGReadByte(sp,&o)==0)\n\t\t\treturn(0);\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tsp->sof_c[q]=o;\n\t\t/* H: Horizontal sampling factor, and V: Vertical sampling factor */\n\t\tif (OJPEGReadByte(sp,&o)==0)\n\t\t\treturn(0);\n\t\tif (sp->subsamplingcorrect!=0)\n\t\t{\n\t\t\tif (q==0)\n\t\t\t{\n\t\t\t\tsp->subsampling_hor=(o>>4);\n\t\t\t\tsp->subsampling_ver=(o&15);\n\t\t\t\tif (((sp->subsampling_hor!=1) && (sp->subsampling_hor!=2) && (sp->subsampling_hor!=4)) ||\n\t\t\t\t\t((sp->subsampling_ver!=1) && (sp->subsampling_ver!=2) && (sp->subsampling_ver!=4)))\n\t\t\t\t\tsp->subsampling_force_desubsampling_inside_decompression=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (o!=17)\n\t\t\t\t\tsp->subsampling_force_desubsampling_inside_decompression=1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsp->sof_hv[q]=o;\n\t\t\tif (sp->subsampling_force_desubsampling_inside_decompression==0)\n\t\t\t{\n\t\t\t\tif (q==0)\n\t\t\t\t{\n\t\t\t\t\tif (o!=((sp->subsampling_hor<<4)|sp->subsampling_ver))\n\t\t\t\t\t{\n\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected subsampling values\");\n\t\t\t\t\t\treturn(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (o!=17)\n\t\t\t\t\t{\n\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected subsampling values\");\n\t\t\t\t\t\treturn(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* Tq: Quantization table destination selector */\n\t\tif (OJPEGReadByte(sp,&o)==0)\n\t\t\treturn(0);\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tsp->sof_tq[q]=o;\n\t}\n\tif (sp->subsamplingcorrect==0)\n\t\tsp->sof_log=1;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamSos(TIFF* tif)\n{\n\t/* this marker needs to be checked, and part of its data needs to be saved for regeneration later on */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamSos\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint8 n;\n\tuint8 o;\n\tassert(sp->subsamplingcorrect==0);\n\tif (sp->sof_log==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOS marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* Ls */\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m!=6+sp->samples_per_pixel_per_plane*2)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOS marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* Ns */\n\tif (OJPEGReadByte(sp,&n)==0)\n\t\treturn(0);\n\tif (n!=sp->samples_per_pixel_per_plane)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOS marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* Cs, Td, and Ta */\n\tfor (o=0; o<sp->samples_per_pixel_per_plane; o++)\n\t{\n\t\t/* Cs */\n\t\tif (OJPEGReadByte(sp,&n)==0)\n\t\t\treturn(0);\n\t\tsp->sos_cs[sp->plane_sample_offset+o]=n;\n\t\t/* Td and Ta */\n\t\tif (OJPEGReadByte(sp,&n)==0)\n\t\t\treturn(0);\n\t\tsp->sos_tda[sp->plane_sample_offset+o]=n;\n\t}\n\t/* skip Ss, Se, Ah, en Al -> no check, as per Tom Lane recommendation, as per LibJpeg source */\n\tOJPEGReadSkip(sp,3);\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecTablesQTable(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecTablesQTable\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint8 n;\n\tuint32 oa;\n\tuint8* ob;\n\tuint32 p;\n\tif (sp->qtable_offset[0]==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Missing JPEG tables\");\n\t\treturn(0);\n\t}\n\tsp->in_buffer_file_pos_log=0;\n\tfor (m=0; m<sp->samples_per_pixel; m++)\n\t{\n\t\tif ((sp->qtable_offset[m]!=0) && ((m==0) || (sp->qtable_offset[m]!=sp->qtable_offset[m-1])))\n\t\t{\n\t\t\tfor (n=0; n<m-1; n++)\n\t\t\t{\n\t\t\t\tif (sp->qtable_offset[m]==sp->qtable_offset[n])\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JpegQTables tag value\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\toa=sizeof(uint32)+69;\n\t\t\tob=_TIFFmalloc(oa);\n\t\t\tif (ob==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)ob=oa;\n\t\t\tob[sizeof(uint32)]=255;\n\t\t\tob[sizeof(uint32)+1]=JPEG_MARKER_DQT;\n\t\t\tob[sizeof(uint32)+2]=0;\n\t\t\tob[sizeof(uint32)+3]=67;\n\t\t\tob[sizeof(uint32)+4]=m;\n\t\t\tTIFFSeekFile(tif,sp->qtable_offset[m],SEEK_SET); \n\t\t\tp=(uint32)TIFFReadFile(tif,&ob[sizeof(uint32)+5],64);\n\t\t\tif (p!=64)\n\t\t\t\treturn(0);\n\t\t\tsp->qtable[m]=ob;\n\t\t\tsp->sof_tq[m]=m;\n\t\t}\n\t\telse\n\t\t\tsp->sof_tq[m]=sp->sof_tq[m-1];\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecTablesDcTable(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecTablesDcTable\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint8 n;\n\tuint8 o[16];\n\tuint32 p;\n\tuint32 q;\n\tuint32 ra;\n\tuint8* rb;\n\tif (sp->dctable_offset[0]==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Missing JPEG tables\");\n\t\treturn(0);\n\t}\n\tsp->in_buffer_file_pos_log=0;\n\tfor (m=0; m<sp->samples_per_pixel; m++)\n\t{\n\t\tif ((sp->dctable_offset[m]!=0) && ((m==0) || (sp->dctable_offset[m]!=sp->dctable_offset[m-1])))\n\t\t{\n\t\t\tfor (n=0; n<m-1; n++)\n\t\t\t{\n\t\t\t\tif (sp->dctable_offset[m]==sp->dctable_offset[n])\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JpegDcTables tag value\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tTIFFSeekFile(tif,sp->dctable_offset[m],SEEK_SET);\n\t\t\tp=(uint32)TIFFReadFile(tif,o,16);\n\t\t\tif (p!=16)\n\t\t\t\treturn(0);\n\t\t\tq=0;\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\tq+=o[n];\n\t\t\tra=sizeof(uint32)+21+q;\n\t\t\trb=_TIFFmalloc(ra);\n\t\t\tif (rb==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)rb=ra;\n\t\t\trb[sizeof(uint32)]=255;\n\t\t\trb[sizeof(uint32)+1]=JPEG_MARKER_DHT;\n\t\t\trb[sizeof(uint32)+2]=(uint8)((19+q)>>8);\n\t\t\trb[sizeof(uint32)+3]=((19+q)&255);\n\t\t\trb[sizeof(uint32)+4]=m;\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\trb[sizeof(uint32)+5+n]=o[n];\n\t\t\tp=(uint32)TIFFReadFile(tif,&(rb[sizeof(uint32)+21]),q);\n\t\t\tif (p!=q)\n\t\t\t\treturn(0);\n\t\t\tsp->dctable[m]=rb;\n\t\t\tsp->sos_tda[m]=(m<<4);\n\t\t}\n\t\telse\n\t\t\tsp->sos_tda[m]=sp->sos_tda[m-1];\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecTablesAcTable(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecTablesAcTable\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint8 n;\n\tuint8 o[16];\n\tuint32 p;\n\tuint32 q;\n\tuint32 ra;\n\tuint8* rb;\n\tif (sp->actable_offset[0]==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Missing JPEG tables\");\n\t\treturn(0);\n\t}\n\tsp->in_buffer_file_pos_log=0;\n\tfor (m=0; m<sp->samples_per_pixel; m++)\n\t{\n\t\tif ((sp->actable_offset[m]!=0) && ((m==0) || (sp->actable_offset[m]!=sp->actable_offset[m-1])))\n\t\t{\n\t\t\tfor (n=0; n<m-1; n++)\n\t\t\t{\n\t\t\t\tif (sp->actable_offset[m]==sp->actable_offset[n])\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JpegAcTables tag value\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tTIFFSeekFile(tif,sp->actable_offset[m],SEEK_SET);  \n\t\t\tp=(uint32)TIFFReadFile(tif,o,16);\n\t\t\tif (p!=16)\n\t\t\t\treturn(0);\n\t\t\tq=0;\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\tq+=o[n];\n\t\t\tra=sizeof(uint32)+21+q;\n\t\t\trb=_TIFFmalloc(ra);\n\t\t\tif (rb==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)rb=ra;\n\t\t\trb[sizeof(uint32)]=255;\n\t\t\trb[sizeof(uint32)+1]=JPEG_MARKER_DHT;\n\t\t\trb[sizeof(uint32)+2]=(uint8)((19+q)>>8);\n\t\t\trb[sizeof(uint32)+3]=((19+q)&255);\n\t\t\trb[sizeof(uint32)+4]=(16|m);\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\trb[sizeof(uint32)+5+n]=o[n];\n\t\t\tp=(uint32)TIFFReadFile(tif,&(rb[sizeof(uint32)+21]),q);\n\t\t\tif (p!=q)\n\t\t\t\treturn(0);\n\t\t\tsp->actable[m]=rb;\n\t\t\tsp->sos_tda[m]=(sp->sos_tda[m]|m);\n\t\t}\n\t\telse\n\t\t\tsp->sos_tda[m]=(sp->sos_tda[m]|(sp->sos_tda[m-1]&15));\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadBufferFill(OJPEGState* sp)\n{\n\tuint16 m;\n\ttmsize_t n;\n\t/* TODO: double-check: when subsamplingcorrect is set, no call to TIFFErrorExt or TIFFWarningExt should be made\n\t * in any other case, seek or read errors should be passed through */\n\tdo\n\t{\n\t\tif (sp->in_buffer_file_togo!=0)\n\t\t{\n\t\t\tif (sp->in_buffer_file_pos_log==0)\n\t\t\t{\n\t\t\t\tTIFFSeekFile(sp->tif,sp->in_buffer_file_pos,SEEK_SET);\n\t\t\t\tsp->in_buffer_file_pos_log=1;\n\t\t\t}\n\t\t\tm=OJPEG_BUFFER;\n\t\t\tif ((uint64)m>sp->in_buffer_file_togo)\n\t\t\t\tm=(uint16)sp->in_buffer_file_togo;\n\t\t\tn=TIFFReadFile(sp->tif,sp->in_buffer,(tmsize_t)m);\n\t\t\tif (n==0)\n\t\t\t\treturn(0);\n\t\t\tassert(n>0);\n\t\t\tassert(n<=OJPEG_BUFFER);\n\t\t\tassert(n<65536);\n\t\t\tassert((uint64)n<=sp->in_buffer_file_togo);\n\t\t\tm=(uint16)n;\n\t\t\tsp->in_buffer_togo=m;\n\t\t\tsp->in_buffer_cur=sp->in_buffer;\n\t\t\tsp->in_buffer_file_togo-=m;\n\t\t\tsp->in_buffer_file_pos+=m;\n\t\t\tbreak;\n\t\t}\n\t\tsp->in_buffer_file_pos_log=0;\n\t\tswitch(sp->in_buffer_source)\n\t\t{\n\t\t\tcase osibsNotSetYet:\n\t\t\t\tif (sp->jpeg_interchange_format!=0)\n\t\t\t\t{\n\t\t\t\t\tsp->in_buffer_file_pos=sp->jpeg_interchange_format;\n\t\t\t\t\tsp->in_buffer_file_togo=sp->jpeg_interchange_format_length;\n\t\t\t\t}\n\t\t\t\tsp->in_buffer_source=osibsJpegInterchangeFormat;\n\t\t\t\tbreak;\n\t\t\tcase osibsJpegInterchangeFormat:\n\t\t\t\tsp->in_buffer_source=osibsStrile;\n                                break;\n\t\t\tcase osibsStrile:\n\t\t\t\tif (!_TIFFFillStriles( sp->tif ) \n\t\t\t\t    || sp->tif->tif_dir.td_stripoffset == NULL\n\t\t\t\t    || sp->tif->tif_dir.td_stripbytecount == NULL)\n\t\t\t\t\treturn 0;\n\n\t\t\t\tif (sp->in_buffer_next_strile==sp->in_buffer_strile_count)\n\t\t\t\t\tsp->in_buffer_source=osibsEof;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsp->in_buffer_file_pos=sp->tif->tif_dir.td_stripoffset[sp->in_buffer_next_strile];\n\t\t\t\t\tif (sp->in_buffer_file_pos!=0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sp->in_buffer_file_pos>=sp->file_size)\n\t\t\t\t\t\t\tsp->in_buffer_file_pos=0;\n\t\t\t\t\t\telse if (sp->tif->tif_dir.td_stripbytecount==NULL)\n\t\t\t\t\t\t\tsp->in_buffer_file_togo=sp->file_size-sp->in_buffer_file_pos;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (sp->tif->tif_dir.td_stripbytecount == 0) {\n\t\t\t\t\t\t\t\tTIFFErrorExt(sp->tif->tif_clientdata,sp->tif->tif_name,\"Strip byte counts are missing\");\n\t\t\t\t\t\t\t\treturn(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsp->in_buffer_file_togo=sp->tif->tif_dir.td_stripbytecount[sp->in_buffer_next_strile];\n\t\t\t\t\t\t\tif (sp->in_buffer_file_togo==0)\n\t\t\t\t\t\t\t\tsp->in_buffer_file_pos=0;\n\t\t\t\t\t\t\telse if (sp->in_buffer_file_pos+sp->in_buffer_file_togo>sp->file_size)\n\t\t\t\t\t\t\t\tsp->in_buffer_file_togo=sp->file_size-sp->in_buffer_file_pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsp->in_buffer_next_strile++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn(0);\n\t\t}\n\t} while (1);\n\treturn(1);\n}\n\nstatic int\nOJPEGReadByte(OJPEGState* sp, uint8* byte)\n{\n\tif (sp->in_buffer_togo==0)\n\t{\n\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\treturn(0);\n\t\tassert(sp->in_buffer_togo>0);\n\t}\n\t*byte=*(sp->in_buffer_cur);\n\tsp->in_buffer_cur++;\n\tsp->in_buffer_togo--;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadBytePeek(OJPEGState* sp, uint8* byte)\n{\n\tif (sp->in_buffer_togo==0)\n\t{\n\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\treturn(0);\n\t\tassert(sp->in_buffer_togo>0);\n\t}\n\t*byte=*(sp->in_buffer_cur);\n\treturn(1);\n}\n\nstatic void\nOJPEGReadByteAdvance(OJPEGState* sp)\n{\n\tassert(sp->in_buffer_togo>0);\n\tsp->in_buffer_cur++;\n\tsp->in_buffer_togo--;\n}\n\nstatic int\nOJPEGReadWord(OJPEGState* sp, uint16* word)\n{\n\tuint8 m;\n\tif (OJPEGReadByte(sp,&m)==0)\n\t\treturn(0);\n\t*word=(m<<8);\n\tif (OJPEGReadByte(sp,&m)==0)\n\t\treturn(0);\n\t*word|=m;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadBlock(OJPEGState* sp, uint16 len, void* mem)\n{\n\tuint16 mlen;\n\tuint8* mmem;\n\tuint16 n;\n\tassert(len>0);\n\tmlen=len;\n\tmmem=mem;\n\tdo\n\t{\n\t\tif (sp->in_buffer_togo==0)\n\t\t{\n\t\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\t\treturn(0);\n\t\t\tassert(sp->in_buffer_togo>0);\n\t\t}\n\t\tn=mlen;\n\t\tif (n>sp->in_buffer_togo)\n\t\t\tn=sp->in_buffer_togo;\n\t\t_TIFFmemcpy(mmem,sp->in_buffer_cur,n);\n\t\tsp->in_buffer_cur+=n;\n\t\tsp->in_buffer_togo-=n;\n\t\tmlen-=n;\n\t\tmmem+=n;\n\t} while(mlen>0);\n\treturn(1);\n}\n\nstatic void\nOJPEGReadSkip(OJPEGState* sp, uint16 len)\n{\n\tuint16 m;\n\tuint16 n;\n\tm=len;\n\tn=m;\n\tif (n>sp->in_buffer_togo)\n\t\tn=sp->in_buffer_togo;\n\tsp->in_buffer_cur+=n;\n\tsp->in_buffer_togo-=n;\n\tm-=n;\n\tif (m>0)\n\t{\n\t\tassert(sp->in_buffer_togo==0);\n\t\tn=m;\n\t\tif ((uint64)n>sp->in_buffer_file_togo)\n\t\t\tn=(uint16)sp->in_buffer_file_togo;\n\t\tsp->in_buffer_file_pos+=n;\n\t\tsp->in_buffer_file_togo-=n;\n\t\tsp->in_buffer_file_pos_log=0;\n\t\t/* we don't skip past jpeginterchangeformat/strile block...\n\t\t * if that is asked from us, we're dealing with totally bazurk\n\t\t * data anyway, and we've not seen this happening on any\n\t\t * testfile, so we might as well likely cause some other\n\t\t * meaningless error to be passed at some later time\n\t\t */\n\t}\n}\n\nstatic int\nOJPEGWriteStream(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\t*len=0;\n\tdo\n\t{\n\t\tassert(sp->out_state<=ososEoi);\n\t\tswitch(sp->out_state)\n\t\t{\n\t\t\tcase ososSoi:\n\t\t\t\tOJPEGWriteStreamSoi(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable0:\n\t\t\t\tOJPEGWriteStreamQTable(tif,0,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable1:\n\t\t\t\tOJPEGWriteStreamQTable(tif,1,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable2:\n\t\t\t\tOJPEGWriteStreamQTable(tif,2,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable3:\n\t\t\t\tOJPEGWriteStreamQTable(tif,3,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable0:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,0,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable1:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,1,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable2:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,2,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable3:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,3,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable0:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,0,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable1:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,1,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable2:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,2,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable3:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,3,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDri:\n\t\t\t\tOJPEGWriteStreamDri(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososSof:\n\t\t\t\tOJPEGWriteStreamSof(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososSos:\n\t\t\t\tOJPEGWriteStreamSos(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososCompressed:\n\t\t\t\tif (OJPEGWriteStreamCompressed(tif,mem,len)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase ososRst:\n\t\t\t\tOJPEGWriteStreamRst(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososEoi:\n\t\t\t\tOJPEGWriteStreamEoi(tif,mem,len);\n\t\t\t\tbreak;\n\t\t}\n\t} while (*len==0);\n\treturn(1);\n}\n\nstatic void\nOJPEGWriteStreamSoi(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_SOI;\n\t*len=2;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamQTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->qtable[table_index]!=0)\n\t{\n\t\t*mem=(void*)(sp->qtable[table_index]+sizeof(uint32));\n\t\t*len=*((uint32*)sp->qtable[table_index])-sizeof(uint32);\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamDcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->dctable[table_index]!=0)\n\t{\n\t\t*mem=(void*)(sp->dctable[table_index]+sizeof(uint32));\n\t\t*len=*((uint32*)sp->dctable[table_index])-sizeof(uint32);\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamAcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->actable[table_index]!=0)\n\t{\n\t\t*mem=(void*)(sp->actable[table_index]+sizeof(uint32));\n\t\t*len=*((uint32*)sp->actable[table_index])-sizeof(uint32);\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamDri(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=6);\n\tif (sp->restart_interval!=0)\n\t{\n\t\tsp->out_buffer[0]=255;\n\t\tsp->out_buffer[1]=JPEG_MARKER_DRI;\n\t\tsp->out_buffer[2]=0;\n\t\tsp->out_buffer[3]=4;\n\t\tsp->out_buffer[4]=(sp->restart_interval>>8);\n\t\tsp->out_buffer[5]=(sp->restart_interval&255);\n\t\t*len=6;\n\t\t*mem=(void*)sp->out_buffer;\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamSof(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tassert(OJPEG_BUFFER>=2+8+sp->samples_per_pixel_per_plane*3);\n\tassert(255>=8+sp->samples_per_pixel_per_plane*3);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=sp->sof_marker_id;\n\t/* Lf */\n\tsp->out_buffer[2]=0;\n\tsp->out_buffer[3]=8+sp->samples_per_pixel_per_plane*3;\n\t/* P */\n\tsp->out_buffer[4]=8;\n\t/* Y */\n\tsp->out_buffer[5]=(uint8)(sp->sof_y>>8);\n\tsp->out_buffer[6]=(sp->sof_y&255);\n\t/* X */\n\tsp->out_buffer[7]=(uint8)(sp->sof_x>>8);\n\tsp->out_buffer[8]=(sp->sof_x&255);\n\t/* Nf */\n\tsp->out_buffer[9]=sp->samples_per_pixel_per_plane;\n\tfor (m=0; m<sp->samples_per_pixel_per_plane; m++)\n\t{\n\t\t/* C */\n\t\tsp->out_buffer[10+m*3]=sp->sof_c[sp->plane_sample_offset+m];\n\t\t/* H and V */\n\t\tsp->out_buffer[10+m*3+1]=sp->sof_hv[sp->plane_sample_offset+m];\n\t\t/* Tq */\n\t\tsp->out_buffer[10+m*3+2]=sp->sof_tq[sp->plane_sample_offset+m];\n\t}\n\t*len=10+sp->samples_per_pixel_per_plane*3;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamSos(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tassert(OJPEG_BUFFER>=2+6+sp->samples_per_pixel_per_plane*2);\n\tassert(255>=6+sp->samples_per_pixel_per_plane*2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_SOS;\n\t/* Ls */\n\tsp->out_buffer[2]=0;\n\tsp->out_buffer[3]=6+sp->samples_per_pixel_per_plane*2;\n\t/* Ns */\n\tsp->out_buffer[4]=sp->samples_per_pixel_per_plane;\n\tfor (m=0; m<sp->samples_per_pixel_per_plane; m++)\n\t{\n\t\t/* Cs */\n\t\tsp->out_buffer[5+m*2]=sp->sos_cs[sp->plane_sample_offset+m];\n\t\t/* Td and Ta */\n\t\tsp->out_buffer[5+m*2+1]=sp->sos_tda[sp->plane_sample_offset+m];\n\t}\n\t/* Ss */\n\tsp->out_buffer[5+sp->samples_per_pixel_per_plane*2]=0;\n\t/* Se */\n\tsp->out_buffer[5+sp->samples_per_pixel_per_plane*2+1]=63;\n\t/* Ah and Al */\n\tsp->out_buffer[5+sp->samples_per_pixel_per_plane*2+2]=0;\n\t*len=8+sp->samples_per_pixel_per_plane*2;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state++;\n}\n\nstatic int\nOJPEGWriteStreamCompressed(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->in_buffer_togo==0)\n\t{\n\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\treturn(0);\n\t\tassert(sp->in_buffer_togo>0);\n\t}\n\t*len=sp->in_buffer_togo;\n\t*mem=(void*)sp->in_buffer_cur;\n\tsp->in_buffer_togo=0;\n\tif (sp->in_buffer_file_togo==0)\n\t{\n\t\tswitch(sp->in_buffer_source)\n\t\t{\n\t\t\tcase osibsStrile:\n\t\t\t\tif (sp->in_buffer_next_strile<sp->in_buffer_strile_count)\n\t\t\t\t\tsp->out_state=ososRst;\n\t\t\t\telse\n\t\t\t\t\tsp->out_state=ososEoi;\n\t\t\t\tbreak;\n\t\t\tcase osibsEof:\n\t\t\t\tsp->out_state=ososEoi;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn(1);\n}\n\nstatic void\nOJPEGWriteStreamRst(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_RST0+sp->restart_index;\n\tsp->restart_index++;\n\tif (sp->restart_index==8)\n\t\tsp->restart_index=0;\n\t*len=2;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state=ososCompressed;\n}\n\nstatic void\nOJPEGWriteStreamEoi(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_EOI;\n\t*len=2;\n\t*mem=(void*)sp->out_buffer;\n}\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_create_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_create_decompress(cinfo);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_read_header_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, uint8 require_image)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_read_header(cinfo,require_image);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_start_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_start_decompress(cinfo);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_read_scanlines_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* scanlines, uint32 max_lines)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_read_scanlines(cinfo,scanlines,max_lines);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_read_raw_data_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* data, uint32 max_lines)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_read_raw_data(cinfo,data,max_lines);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic void\njpeg_encap_unwind(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tLONGJMP(sp->exit_jmpbuf,1);\n}\n#endif\n\nstatic void\nOJPEGLibjpegJpegErrorMgrOutputMessage(jpeg_common_struct* cinfo)\n{\n\tchar buffer[JMSG_LENGTH_MAX];\n\t(*cinfo->err->format_message)(cinfo,buffer);\n\tTIFFWarningExt(((TIFF*)(cinfo->client_data))->tif_clientdata,\"LibJpeg\",\"%s\",buffer);\n}\n\nstatic void\nOJPEGLibjpegJpegErrorMgrErrorExit(jpeg_common_struct* cinfo)\n{\n\tchar buffer[JMSG_LENGTH_MAX];\n\t(*cinfo->err->format_message)(cinfo,buffer);\n\tTIFFErrorExt(((TIFF*)(cinfo->client_data))->tif_clientdata,\"LibJpeg\",\"%s\",buffer);\n\tjpeg_encap_unwind((TIFF*)(cinfo->client_data));\n}\n\nstatic void\nOJPEGLibjpegJpegSourceMgrInitSource(jpeg_decompress_struct* cinfo)\n{\n\t(void)cinfo;\n}\n\nstatic boolean\nOJPEGLibjpegJpegSourceMgrFillInputBuffer(jpeg_decompress_struct* cinfo)\n{\n\tTIFF* tif=(TIFF*)cinfo->client_data;\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tvoid* mem=0;\n\tuint32 len=0U;\n\tif (OJPEGWriteStream(tif,&mem,&len)==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,\"LibJpeg\",\"Premature end of JPEG data\");\n\t\tjpeg_encap_unwind(tif);\n\t}\n\tsp->libjpeg_jpeg_source_mgr.bytes_in_buffer=len;\n\tsp->libjpeg_jpeg_source_mgr.next_input_byte=mem;\n\treturn(1);\n}\n\nstatic void\nOJPEGLibjpegJpegSourceMgrSkipInputData(jpeg_decompress_struct* cinfo, long num_bytes)\n{\n\tTIFF* tif=(TIFF*)cinfo->client_data;\n\t(void)num_bytes;\n\tTIFFErrorExt(tif->tif_clientdata,\"LibJpeg\",\"Unexpected error\");\n\tjpeg_encap_unwind(tif);\n}\n\n#ifdef _MSC_VER\n#pragma warning( push )\n#pragma warning( disable : 4702 ) /* unreachable code */\n#endif\nstatic boolean\nOJPEGLibjpegJpegSourceMgrResyncToRestart(jpeg_decompress_struct* cinfo, int desired)\n{\n\tTIFF* tif=(TIFF*)cinfo->client_data;\n\t(void)desired;\n\tTIFFErrorExt(tif->tif_clientdata,\"LibJpeg\",\"Unexpected error\");\n\tjpeg_encap_unwind(tif);\n\treturn(0);\n}\n#ifdef _MSC_VER\n#pragma warning( pop ) \n#endif\n\nstatic void\nOJPEGLibjpegJpegSourceMgrTermSource(jpeg_decompress_struct* cinfo)\n{\n\t(void)cinfo;\n}\n\n#endif\n\n\n/*\n * Local Variables:\n * mode: c\n * c-basic-offset: 8\n * fill-column: 78\n * End:\n */\n"], "fixing_code": ["2016-12-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_ojpeg.c: make OJPEGDecode() early exit in case of failure in\n\tOJPEGPreDecode(). This will avoid a divide by zero, and potential other issues.\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2611\n\n2016-12-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: modify ChopUpSingleUncompressedStrip() to\n\tinstanciate compute ntrips as TIFFhowmany_32(td->td_imagelength, rowsperstrip),\n\tinstead of a logic based on the total size of data. Which is faulty is\n\tthe total size of data is not sufficient to fill the whole image, and thus\n\tresults in reading outside of the StripByCounts/StripOffsets arrays when\n\tusing TIFFReadScanline().\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2608.\n\n\t* libtiff/tif_strip.c: revert the change in TIFFNumberOfStrips() done\n\tfor http://bugzilla.maptools.org/show_bug.cgi?id=2587 / CVE-2016-9273 since\n\tthe above change is a better fix that makes it unnecessary.\n\n2016-12-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c, libtiff/tif_luv.c: fix heap-based buffer\n\toverflow on generation of PixarLog / LUV compressed files, with\n\tColorMap, TransferFunction attached and nasty plays with bitspersample.\n\tThe fix for LUV has not been tested, but suffers from the same kind\n\tof issue of PixarLog.\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2604\n\n2016-12-02 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcp.c: avoid uint32 underflow in cpDecodedStrips that \n\tcan cause various issues, such as buffer overflows in the library.\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2598\n\n2016-12-02 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c, libtiff/tiffiop.h: fix uint32 overflow in\n\tTIFFReadEncodedStrip() that caused an integer division by zero.\n\tReported by Agostino Sarubbo.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2596\n\n2016-11-20 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_getimage.c, libtiff/tif_open.c: add parenthesis to\n\tfix cppcheck clarifyCalculation warnings\n\t* libtiff/tif_predict.c, libtiff/tif_print.c: fix printf unsigned\n\tvs signed formatting (cppcheck invalidPrintfArgType_uint warnings)\n\n2016-11-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/fax2tiff.c (main): Applied patch by J\u00f6rg Ahrens to fix\n\tpassing client data for Win32 builds using tif_win32.c\n\t(USE_WIN32_FILEIO defined) for file I/O.  Patch was provided via\n\temail on November 20, 2016.\n\n2016-11-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.7 released.\n\n\t* configure.ac: Update for 4.0.7 release.\n\n\t* tools/tiffdump.c (ReadDirectory): Remove uint32 cast to\n\t_TIFFmalloc() argument which resulted in Coverity report.  Added\n\tmore mutiplication overflow checks.\n\n2016-11-18 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: Fix memory leak in (recent) error code path.\n\tFixes Coverity 1394415.\n\n2016-11-17  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_getimage.c: Fix some benign warnings which appear in\n\t64-bit compilation under Microsoft Visual Studio of the form\n\t\"Arithmetic overflow: 32-bit value is shifted, then cast to 64-bit\n\tvalue.  Results might not be an expected value.\".  Problem was\n\treported on November 16, 2016 on the tiff mailing list.\n\n2016-11-16 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: in TIFFFetchNormalTag(), do not dereference\n\tNULL pointer when values of tags with TIFF_SETGET_C16_ASCII / TIFF_SETGET_C32_ASCII\n\taccess are 0-byte arrays.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2593 (regression introduced\n\tby previous fix done on 2016-11-11 for CVE-2016-9297).\n\tReported by Henri Salo. Assigned as CVE-2016-9448\n\n2016-11-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffinfo.c (TIFFReadContigTileData): Fix signed/unsigned\n\tcomparison warning.\n\t(TIFFReadSeparateTileData): Fix signed/unsigned comparison\n\twarning.\n\n\t* tools/tiffcrop.c (readContigTilesIntoBuffer): Fix\n\tsigned/unsigned comparison warning.\n\n\t* html/v4.0.7.html: Add a file to document the pending 4.0.7\n\trelease.\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: avoid undefined behaviour related to overlapping\n\tof source and destination buffer in memcpy() call in\n\tt2p_sample_rgbaa_to_rgb()\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2577\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: fix potential integer overflows on 32 bit builds\n\tin t2p_read_tiff_size()\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2576\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_aux.c: fix crash in TIFFVGetFieldDefaulted()\n\twhen requesting Predictor tag and that the zip/lzw codec is not\n\tconfigured.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2591\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: in TIFFFetchNormalTag(), make sure that\n\tvalues of tags with TIFF_SETGET_C16_ASCII / TIFF_SETGET_C32_ASCII\n\taccess are null terminated, to avoid potential read outside buffer\n\tin _TIFFPrintField().\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2590 (CVE-2016-9297)\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: reject images with OJPEG compression that\n\thave no TileOffsets/StripOffsets tag, when OJPEG compression is\n\tdisabled. Prevent null pointer dereference in TIFFReadRawStrip1()\n\tand other functions that expect td_stripbytecount to be non NULL.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2585\n\n2016-11-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix multiple uint32 overflows in\n\twriteBufferToSeparateStrips(), writeBufferToContigTiles() and\n\twriteBufferToSeparateTiles() that could cause heap buffer overflows.\n\tReported by Henri Salo from Nixu Corporation.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2592 (CVE-2016-9532)\n\n2016-11-10 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_strip.c: make TIFFNumberOfStrips() return the td->td_nstrips\n\tvalue when it is non-zero, instead of recomputing it. This is needed in\n\tTIFF_STRIPCHOP mode where td_nstrips is modified. Fixes a read outsize of\n\tarray in tiffsplit (or other utilities using TIFFNumberOfStrips()).\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2587 (CVE-2016-9273)\n\n2016-11-04 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predic.c: fix memory leaks in error code paths added in\n\tprevious commit (fix for MSVR 35105)\n\n2016-10-31 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predict.h, libtiff/tif_predict.c:\n\tReplace assertions by runtime checks to avoid assertions in debug mode,\n\tor buffer overflows in release mode. Can happen when dealing with\n\tunusual tile size like YCbCr with subsampling. Reported as MSVR 35105\n\tby Axel Souchet\t& Vishal Chauhan from the MSRC Vulnerabilities & Mitigations\n\tteam.\n\n2016-10-26 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/fax2tiff.c: fix segfault when specifying -r without\n\targument. Patch by Yuriy M. Kaminskiy.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2572\n\n2016-10-25 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dir.c: discard values of SMinSampleValue and\n\tSMaxSampleValue when they have been read and the value of\n\tSamplesPerPixel is changed afterwards (like when reading a\n\tOJPEG compressed image with a missing SamplesPerPixel tag,\n\tand whose photometric is RGB or YCbCr, forcing SamplesPerPixel\n\tbeing 3). Otherwise when rewriting the directory (for example\n\twith tiffset, we will expect 3 values whereas the array had been\n\tallocated with just one), thus causing a out of bound read access.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2500\n\t(CVE-2014-8127, duplicate: CVE-2016-3658)\n\t\n\t* libtiff/tif_dirwrite.c: avoid null pointer dereference on td_stripoffset\n\twhen writing directory, if FIELD_STRIPOFFSETS was artificially set\n\tfor a hack case\tin OJPEG case.\n\tFixes http://bugzilla.maptools.org/show_bug.cgi?id=2500\n\t(CVE-2014-8127, duplicate: CVE-2016-3658)\n\n2016-10-25 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffinfo.c: fix out-of-bound read on some tiled images.\n\t(http://bugzilla.maptools.org/show_bug.cgi?id=2517)\n\n\t* libtiff/tif_compress.c: make TIFFNoDecode() return 0 to indicate an\n\terror and make upper level read routines treat it accordingly.\n\t(linked to the test case of http://bugzilla.maptools.org/show_bug.cgi?id=2517)\n\n2016-10-14 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix out-of-bound read of up to 3 bytes in\n\treadContigTilesIntoBuffer(). Reported as MSVR 35092 by Axel Souchet\n\t& Vishal Chauhan from the MSRC Vulnerabilities & Mitigations team.\n\n2016-10-09 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: fix write buffer overflow of 2 bytes on JPEG\n\tcompressed images. Reported by Tyler Bohan of Cisco Talos as\n\tTALOS-CAN-0187 / CVE-2016-5652.\n\tAlso prevents writing 2 extra uninitialized bytes to the file stream.\n\n2016-10-08 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcp.c: fix out-of-bounds write on tiled images with odd\n\ttile width vs image width. Reported as MSVR 35103\n\tby Axel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\n\tMitigations team.\n\n2016-10-08 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2pdf.c: fix read -largely- outsize of buffer in\n\tt2p_readwrite_pdf_image_tile(), causing crash, when reading a\n\tJPEG compressed image with TIFFTAG_JPEGTABLES length being one.\n\tReported as MSVR 35101 by Axel Souchet and Vishal Chauhan from\n\tthe MSRC Vulnerabilities & Mitigations team. CVE-2016-9453\n\n2016-10-08 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcp.c: fix read of undefined variable in case of missing\n\trequired tags. Found on test case of MSVR 35100.\n\t* tools/tiffcrop.c: fix read of undefined buffer in\n\treadContigStripsIntoBuffer() due to uint16 overflow. Probably not a\n\tsecurity issue but I can be wrong. Reported as MSVR 35100 by Axel\n\tSouchet from the MSRC Vulnerabilities & Mitigations team.\n\n2016-09-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html: Change as many remotesensing.org broken links to a working\n\tURL as possible.\n\n2016-09-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_getimage.c (TIFFRGBAImageOK): Reject attempts to\n\tread floating point images.\n\n\t* libtiff/tif_predict.c (PredictorSetup): Enforce bits-per-sample\n\trequirements of floating point predictor (3).  Fixes CVE-2016-3622\n\t\"Divide By Zero in the tiff2rgba tool.\"\n\n2016-09-23 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix various out-of-bounds write vulnerabilities\n\tin heap or stack allocated buffers. Reported as MSVR 35093,\n\tMSVR 35096 and MSVR 35097. Discovered by Axel Souchet and Vishal\n\tChauhan from the MSRC Vulnerabilities & Mitigations team.\n\t* tools/tiff2pdf.c: fix out-of-bounds write vulnerabilities in\n\theap allocate buffer in t2p_process_jpeg_strip(). Reported as MSVR\n\t35098. Discovered by Axel Souchet and Vishal Chauhan from the MSRC\n\tVulnerabilities & Mitigations team.\n\t* libtiff/tif_pixarlog.c: fix out-of-bounds write vulnerabilities\n\tin heap allocated buffers. Reported as MSVR 35094. Discovered by\n\tAxel Souchet and Vishal Chauhan from the MSRC Vulnerabilities &\n\tMitigations team.\n\t* libtiff/tif_write.c: fix issue in error code path of TIFFFlushData1()\n\tthat didn't reset the tif_rawcc and tif_rawcp members. I'm not\n\tcompletely sure if that could happen in practice outside of the odd\n\tbehaviour of t2p_seekproc() of tiff2pdf). The report points that a\n\tbetter fix could be to check the return value of TIFFFlushData1() in\n\tplaces where it isn't done currently, but it seems this patch is enough.\n\tReported as MSVR 35095. Discovered by Axel Souchet & Vishal Chauhan &\n\tSuha Can from the MSRC Vulnerabilities & Mitigations team.\n\n2016-09-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/man/index.html: Comment out links to documentation for\n\tabandoned utilities.\n\n2016-09-17 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_lzma.c: typo fix in comment\n\n2016-09-04 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix warnings raised by clang 3.9 -Wcomma\n\n2016-09-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirwrite.c, libtiff/tif_color.c: fix warnings raised\n\tby GCC 5 / clang -Wfloat-conversion\n\n2016-08-16 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: fix C99'ism.\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2bw.c: fix weight computation that could result of color\n\tvalue overflow (no security implication). Fix bugzilla #2550.\n\tPatch by Frank Freudenberg.\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/rgb2ycbcr.c: validate values of -v and -h parameters to\n\tavoid potential divide by zero. Fixes CVE-2016-3623 (bugzilla #2569)\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: Fix out-of-bounds write in loadImage().\n\tFrom patch libtiff-CVE-2016-3991.patch from\n\tlibtiff-4.0.3-25.el7_2.src.rpm by Nikola Forro (bugzilla #2543)\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c: Fix write buffer overflow in PixarLogEncode\n\tif more input samples are provided than expected by PixarLogSetupEncode.\n\tIdea based on libtiff-CVE-2016-3990.patch from\n\tlibtiff-4.0.3-25.el7_2.src.rpm by Nikola Forro, but with different and\n\tsimpler check. (bugzilla #2544)\n\n2016-08-15 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiff2rgba.c: Fix integer overflow in size of allocated\n\tbuffer, when -b mode is enabled, that could result in out-of-bounds\n\twrite. Based initially on patch tiff-CVE-2016-3945.patch from\n\tlibtiff-4.0.3-25.el7_2.src.rpm by Nikola Forro, with correction for\n\tinvalid tests that rejected valid files. (bugzilla #2545)\n\n2016-07-11 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffcrop.c: Avoid access outside of stack allocated array\n\ton a tiled separate TIFF with more than 8 samples per pixel.\n\tReported by Kaixiang Zhang of the Cloud Security Team, Qihoo 360\n\t(CVE-2016-5321 / CVE-2016-5323 , bugzilla #2558 / #2559)\n\n2016-07-10 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c: Fix out-of-bounds read on\n\tmemory-mapped files in TIFFReadRawStrip1() and TIFFReadRawTile1()\n\twhen stripoffset is beyond tmsize_t max value (reported by\n\tMathias Svensson)\n\n2016-07-10 Even Rouault <even.rouault at spatialys.com>\n\n\t* tools/tiffdump.c: fix a few misaligned 64-bit reads warned\n\tby -fsanitize\n\n2016-07-03 Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c: make TIFFReadEncodedStrip() and\n\tTIFFReadEncodedTile() directly use user provided buffer when\n\tno compression (and other conditions) to save a memcpy().\n\n\t* libtiff/tif_write.c: make TIFFWriteEncodedStrip() and\n\tTIFFWriteEncodedTile() directly use user provided buffer when\n\tno compression to save a memcpy().\n\n2016-07-01  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_luv.c: validate that for COMPRESSION_SGILOG and\n\tPHOTOMETRIC_LOGL, there is only one sample per pixel. Avoid\n\tpotential invalid memory write on corrupted/unexpected images when\n\tusing the TIFFRGBAImageBegin() interface (reported by\n\tClay Wood)\n\n2016-06-28  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c: fix potential buffer write overrun in\n\tPixarLogDecode() on corrupted/unexpected images (reported by Mathias Svensson)\n\t(CVE-2016-5875)\n\n2016-06-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/libtiff.def: Added _TIFFMultiply32 and _TIFFMultiply64\n\tto libtiff.def\n\n2016-06-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/Makefile.am: The libtiff tools bmp2tiff, gif2tiff,\n\tras2tiff, sgi2tiff, sgisv, and ycbcr are completely removed from\n\tthe distribution.  The libtiff tools rgb2ycbcr and thumbnail are\n\tonly built in the build tree for testing.  Old files are put in\n\tnew 'archive' subdirectory of the source repository, but not in\n\tdistribution archives.  These changes are made in order to lessen\n\tthe maintenance burden.\n\n2016-05-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_config.vc.h (HAVE_SNPRINTF): Add a '1' to the\n\tHAVE_SNPRINTF definition.'\n\n2016-05-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_config.vc.h (HAVE_SNPRINTF): Applied patch by Edward\n\tLam to define HAVE_SNPRINTF for Visual Studio 2015.\n\n2016-04-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: when compiled with DEFER_STRILE_LOAD,\n\tfix regression, introduced on 2014-12-23, when reading a one-strip\n\tfile without a StripByteCounts tag. GDAL #6490\n\n2016-04-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/bugs.html: Replace Andrey Kiselev with Bob Friesenhahn for\n\tpurposes of security issue reporting.\n\n2016-01-23  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*: upstream typo fixes (mostly contributed by Kurt Schwehr)\n\tcoming from GDAL internal libtiff\n\n2016-01-09  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_fax3.h: make Param member of TIFFFaxTabEnt structure\n\ta uint16 to reduce size of the binary.\n\n2016-01-03  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_read.c, tif_dirread.c: fix indentation issues raised\n\tby GCC 6 -Wmisleading-indentation\n\n2015-12-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_pixarlog.c: avoid zlib error messages to pass a NULL\n\tstring to %s formatter, which is undefined behaviour in sprintf().\n\n2015-12-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_next.c: fix potential out-of-bound write in NeXTDecode()\n\ttriggered by http://lcamtuf.coredump.cx/afl/vulns/libtiff5.tif\n\t(bugzilla #2508)\n\n2015-12-27  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_luv.c: fix potential out-of-bound writes in decode\n\tfunctions in non debug builds by replacing assert()s by regular if\n\tchecks (bugzilla #2522).\n\tFix potential out-of-bound reads in case of short input data.\n\n2015-12-26  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_getimage.c: fix out-of-bound reads in TIFFRGBAImage\n\tinterface in case of unsupported values of SamplesPerPixel/ExtraSamples\n\tfor LogLUV / CIELab. Add explicit call to TIFFRGBAImageOK() in\n\tTIFFRGBAImageBegin(). Fix CVE-2015-8665 reported by limingxing and\n\tCVE-2015-8683 reported by zzf of Alibaba.\n\n2015-12-21  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: workaround false positive warning of Clang Static\n\tAnalyzer about null pointer dereference in TIFFCheckDirOffset().\n\n2015-12-19  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_fax3.c: remove dead assignment in Fax3PutEOLgdal(). Found\n\tby Clang Static Analyzer\n\n2015-12-18  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirwrite.c: fix truncation to 32 bit of file offsets in\n\tTIFFLinkDirectory() and TIFFWriteDirectorySec() when aligning directory\n\toffsets on a even offset (affects BigTIFF). This was a regression of the\n\tchangeset of 2015-10-19.\n\n2015-12-12  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_write.c: TIFFWriteEncodedStrip() and TIFFWriteEncodedTile()\n\tshould return -1 in case of failure of tif_encodestrip() as documented\n\t* libtiff/tif_dumpmode.c: DumpModeEncode() should return 0 in case of\n\tfailure so that the above mentionned functions detect the error.\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/uvcode.h: const'ify uv_code array\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirinfo.c: const'ify tiffFields, exifFields,\n\ttiffFieldArray and exifFieldArray arrays\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_print.c: constify photoNames and orientNames arrays\n\n2015-12-06  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_close.c, libtiff/tif_extension.c : rename link\n\tvariable to avoid -Wshadow warnings\n\n2015-11-22  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix typos in comments (patch by Kurt Schwehr)\n \n2015-11-22  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix MSVC warnings related to cast shortening and\n\tassignment within conditional expression\n\n2015-11-18  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/*.c: fix clang -Wshorten-64-to-32 warnings\n\n2015-11-18  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: initialize double* data at line 3693 to NULL\n\tto please MSVC 2013\n\n2015-11-17  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: prevent reading ColorMap or TransferFunction\n\tif BitsPerPixel > 24, so as to avoid huge memory allocation and file\n\tread attempts\n\n2015-11-02  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dirread.c: remove duplicated assignment (reported by\n\tClang static analyzer)\n\n2015-10-28  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dir.c, libtiff/tif_dirinfo.c, libtiff/tif_compress.c,\n\tlibtiff/tif_jpeg_12.c: suppress warnings about 'no previous\n\tdeclaration/prototype'\n\n2015-10-19  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tiffiop.h, libtiff/tif_dirwrite.c: suffix constants by U to fix \n\t'warning: negative integer implicitly converted to unsigned type' warning\n\t(part of -Wconversion)\n\n2015-10-17  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_dir.c, libtiff/tif_dirread.c, libtiff/tif_getimage.c,\n\t  libtiff/tif_print.c: fix -Wshadow warnings (only in libtiff/)\n\n2015-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.6 released.\n\n\t* html/v4.0.6.html: Added release notes for 4.0.6.\n\n2015-09-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffgt.c: Silence glut API deprecation warnings on MacOS\n\tX.  Patch by Roger Leigh.\n\n\t* Makefile.am: Added a 'coverity' rule to assist with Coverity\n\tsubmissions.\n\n\t* tools/tiff2pdf.c: Fix compiler warning about unused function\n\twhen JPEG is not available.\n\n\t* tools/fax2ps.c (main): Detect failure to write to temporary\n\tfile.\n\n2015-09-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirread.c (TIFFReadDirEntryCheckRangeSlongSlong8):\n\tChange implementation so that it does not sometimes overflow the\n\trange of a 32-bit int and to avoid a signed vs unsigned compare\n\tcompiler warning.\n\t(TIFF_INT64_MAX): Avoid use of platform-specific large constants.\n\t(TIFF_UINT32_MAX): Avoid use of platform-specific large constants.\n\n2015-09-01  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (distcheck-hook), configure.ac: Applied patches by\n\tRoger Leigh (via tiff mailing list on 2015-09-01) to fix issue\n\twith BSD make and to make use of cmake in 'distcheck' target\n\tconditional on if cmake is available.\n\n\t* CMakeLists.txt, Makefile.am, configure.ac: Applied patches by\n\tRoger Leigh (via tiff mailing list on 2015-09-01).\n\n\tCMake build is now included in 'distcheck' target.\n\n\tBuilds with CMake 2.8.9 and newer.\n\n\tTar is now resquested to use POSIX PAX format.\n\n2015-08-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt, libtiff/test/Makefile.am: Applied patches by\n\tRoger Leigh (via tiff mailing list on 2015-08-31.\n\n\tCMake reads all version information directly from configure.ac to\n\tavoid duplication of values.  This basically greps over the file\n\tfor the LIBTIFF_* variables, then translates them to the form\n\tneeded for cmake. This includes the release version and libtool\n\tshared library version information.\n\n\tMake shared/static library building configurable.  Currently it\n\talways builds shared libraries, with static libs having a _static\n\tsuffix (copying zlib, but it means it's got a non-standard name).\n\tCMake has a -DBUILD_SHARED_LIBS=ON|OFF option to select one or the\n\tother, which is now used instead.  There's now a single \"tiff\"\n\ttarget to build either shared or static as required, and all the\n\ttests and tools are linked with this. Note: the Windows tests fail\n\twhen linked with a static libtiff (says: libtiff.dll not found).\n\tNot really a regression since this was not tested up to this\n\tpoint, and it's likely the unit tests haven't (ever?) been run on\n\tWindows with a static libtiff, so there's some additional\n\tportability issue here to address.  Works fine on UNIX systems,\n\tand fine on Windows with the default to build a DLL.\n\n\tAdd a missing file which wasn't being distributed, causing unit\n\ttests to fail.  Note that \"find . -name '*.cmake'\" lists all the\n\tCMake files which need distributing in addition to all the\n\tCMakeLists.txt files (which now are distributed).\n\n2015-08-31  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predict.c: pedantic change to add explicit masking\n\twith 0xff before casting to uchar in floating-point horizontal\n\tdifferencing and accumulation routines.\n\n2015-08-31  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_predict.c: fix generation of output with 16 bit\n\tor 32 bit integer, when byte swapping is needed, in\n\thorizontal predictor (#2521). Also fixes decoding when there is\n\ta single pixel to code (unlikely case...) and byte swapping is\n\tinvolved.\n\n2015-08-30  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_lzw.c: make nextdata a unsigned type to avoid\n\tundefined behaviour with shifts (gcc -fsanitize=shift)\n\n2015-08-30  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_fax3.c, libtiff/tif_lzw.c, libtiff/tif_predict.c:\n\tadd explicit masking with 0xff before casting\n\tto unsigned char (make icc -check=conversions happy)\n\n\t* libtiff/tif_predict.c: operate on unsigned datatypes when\n\tcomputing/applying differences to avoid undefined behaviour of\n\tsigned types (C standard compliance)\n\n2015-08-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: libtiff 4.0.5 released.\n\n2015-08-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt: Applied patch by Roger Leigh (via tiff mailing\n\tlist on 2015-08-29) to add ld-version-script option to cmake build\n\tto match autoconf.  Note: defaults to 'on' to be ABI-compatible by\n\tdefault with common Linux distribution builds.  Note that the\n\tautoconf configure script defaults to 'off'.\n\n\t* html/build.html: Applied patch by Roger Leigh (via tiff mailing\n\tlist on 2015-08-29) to describe how to use CMake to build libtiff.\n\n2015-08-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/v4.0.5.html: Added HTML file describing the changes which\n\twill appear in the 4.0.5 release.\n\n2015-08-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h: For MinGW comiles, make sure that build\n\tsupports necessary __MSVCRT_VERSION__ (at least at least 0x800).\n\tOtherwise large files can not be supported for POSIX-style I/O.\n\n\t* tools/fax2tiff.c (main): Eliminate a compiler warning in 64-bit\n\tbuilds about cast to thandle_t.\n\n\t* test/rewrite_tag.c (main): Does not require any arguments.\n\n2015-08-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/CMakeLists.txt, port/snprintf.c: Patch by Roger Leigh to\n\tfix build issues when using Cmake due to Windows large file\n\tchanges.\n\n2015-08-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h: First cut at supporting large files under\n\tMicrosoft Windows using tif_unix.c and the libtiff tools.  This\n\tonly works if the Windows CDK is new enough to support the APIs\n\tused (Visual C++ 2005 or later).  Support for large files is not\n\tactually tested yet.\n\n2015-08-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: Applied patch by R\u00e4is\u00e4 Olli to assure that\n\tclient_data is initialized to a known value, and to report an\n\terror on two memory allocation failures.\n\n2015-08-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt: Applied patch by Roger Leigh to fix libtiffxx\n\tsymbol versioning.  Patch was mailed to libtiff list on Thu, 13\n\tAug 2015.\n\n2015-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* cmake: Add d suffix to debug libraries with MSVC.  Patch #3 of 3\n\tby Roger Leigh posted to tiff list on Wed, 1 Jul 2015 15:58:20\n\t+0100.\n\n\t* cmake: Add extra warning flags.  Patch #2 of 3 by Roger Leigh\n\tposted to tiff list on Wed, 1 Jul 2015 15:58:20 +0100.\n\n\t* cmake: Correct snprintf fallback for VS2015.  Patch #1 of 3 by\n\tRoger Leigh posted to tiff list on Wed, 1 Jul 2015 15:58:20 +0100.\n\n2015-06-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* CMakeLists.txt: Add CMake patchset by Roger Leigh as posted to\n\tlibtiff mailing list on Mon, 22 Jun 2015 21:21:01 +0100. Several\n\tcorrections to ensure that the autotools build still works were\n\tadded by me.  I have not yet tested the build using 'cmake' or\n\tMSVC with 'nmake'.\n\n2015-06-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am: tiff2rgba-quad-tile.jpg.sh depends on the JPEG\n\tlibrary so only execute if JPEG is available.\n\n\t* libtiff 4.0.4 released.\n\n\t* configure.ac: Add a HAVE_FOO Automake conditional for each\n\tadd-on library.\n\n\t* test/Makefile.am (JPEG_DEPENDENT_CHECK_PROG): raw_decode\n\trequires JPEG support to compile.  Use Automake conditional to\n\tonly include it when JPEG support is available.\n\n\t* html/build.html: Try to improve the nmake-based VC++ build\n\tdescription.\n\n\t* libtiff/tiffconf.vc.h: Build fixes based on testing.\n\n\t* libtiff/tif_config.vc.h: Build fixes based on testing.\n\n\t* libtiff/libtiff.def: TIFFRasterScanline does not exist so remove\n\texport for it.\n\n2015-06-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_config.vc.h: Make adjustments to match the new\n\tdefinitions that configure produces, including for WIN64.  Still\n\tneeds to be tested.\n\n\t* configure.ac: For 64-bit MinGW, fix SSIZE_FORMAT formatting\n\tspecifier.  64-bit MinGW supports 'long long' but support for\n\t'lld' is not assured by the run-time DLLs and so GCC warns.\n\tAdd TIFF_SIZE_T and TIFF_SIZE_FORMAT to provide a type definition\n\tand printf format specifier to deal with printing values of\n\t'size_t' type.  In particular, this was necessary for WIN64.\n\tAdded a configure test for if the system headers provide 'optarg'\n\t(normal case) and block out the many explicit 'extern' statements\n\tin the utilities.  This was found to be necessary under Windows\n\twhen getopt is in a DLL and the symbols are already imported with\n\tdllimport via standard header files.\n\n\t* test/raw_decode.c (XMD_H): Avoid conflicting typedefs for INT32\n\tand boolean in MinGW build due to including jpeglib.h.\n\n\t* test/rewrite_tag.c (main): Fix problem with location of variable\n\tdeclaration.\n\n\t* libtiff/libtiff.def: Added exports for TIFFGetConfiguredCODECs,\n\tTIFFReadRGBAImageOriented, TIFFSetCompressionScheme,\n\tTIFFSwabArrayOfTriples, TIFFVGetFieldDefaulted, _TIFFCheckRealloc,\n\tTIFFRasterScanline, TIFFSetErrorHandlerExt,\n\tTIFFSetWarningHandlerExt, TIFFNumberOfDirectories,\n\tTIFFCreateCustomDirectory, TIFFCreateEXIFDirectory,\n\tTIFFWriteCustomDirectory, _TIFFRewriteField as recommended by\n\tRoger Leigh and justified by use in libtiff tests, documentation,\n\tand changelog notes.  Also sorted symbol list and removed\n\tduplicate entries.\n\n2015-06-16  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_getimage.c: Fix four Coverity issues related to\n\tunintended sign extension.\n\n2015-06-16  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_unix.c: fix compilation with MSVC (fix by Jeff McKenna)\n\n2015-06-14  Lee Howard  <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_unix.c: contribution from Vadim Zeitlin on\n\tBugzilla Bug #2510 fixes several harmless but still annoying\n\twarnings\n\n\t* configure: contribution from Ludolf Holzheid on Bugzilla\n\tBug #2498.  Adds an option to select the file I/O style on\n\tWindows hosts.\n\n\t* libtiff/tif_getimage.c: contribution from Gary Cramblitt\n\ton Bugzilla Bug #2409.  Correct reading of certain tiled TIFFs.\n\n\t* configure, configure.ac: contribution from Marcos H. Woehrmann\n\ton Bugzilla Bug #2405.  Correct shell equality operator.\n\n\t* tools/tiffgt.c (raster_draw): contribution from Jay Berkenbilt\n\ton Bugzilla Bug #2401.  Appropriately call glFlush().\n\n\t* tools/tiff2pdf.c: change ColorTransform from \"0\" to \"1\"\n\tfollowing Bugzilla Bug #2150.\n\n2015-06-13  Lee Howard  <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_lzw.c: contribution from Andy Cave - decode\n\tfiles that contain consecutive CODE_CLEAR codes.\n\n\t* tools/tiff2pdf.c: contribution from Antti S. Lankila on\n\tBugzilla Bug #2078. Suppress initial output of the header.\n\n\t* tools/tiff2pdf.c: contribution from Yuriy M. Kaminskiy -\n\tTake care in using the return value from snprintf().\n\n\t* tools/tiffcrop.c: contribution from Eduardo Robles Elvira -\n\tcorrectly copy the compression tag from the source TIFF.\n\n\t* tools/tiff2ps.c: contribution from Eduardo Robles Elvira -\n\tcorrect sizing and scaling problems with output document.\n\n2015-06-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c (JPEGDecode): Split JPEGDecode() into two\n\tclean implementations in order to avoid pre-processor hell.  Only\n\tone of the implementations is used in a given build.\n\n2015-06-08  Even Rouault <even.rouault at spatialys.com>\n\n\t* libtiff/tif_jpeg.c: Fix compilation in BITS_IN_JSAMPLE == 12\n\tcase\n\n2015-06-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_write.c (TIFFWriteEncodedStrip): Fix Coverity 715975\n\t\"Division or modulo by zero\".\n\t(TIFFWriteEncodedTile): Fix Coverity 715976 and 715977 \"Division\n\tor modulo by zero\".\n\t(TIFFWriteRawStrip): Fix Coverity 715978 \"Division or modulo by\n\tzero\".\n\t(TIFFWriteScanline): Fix Coverity 715979 \"Division or modulo by\n\tzero\".\n\n\t* libtiff/tif_read.c (TIFFStartTile): Fix Coverity 715973 and\n\t715974 \"Division or modulo by zero\".\n\n2015-05-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dir.c (TIFFNumberOfDirectories): Quiet Coverity\n\t1134470 \"Logically dead code\" by making the roll-over check\n\texplicit.\n\n\t* libtiff/tif_luv.c (LogLuvDecodeTile): Fix Coverity 991227\n\t\"Division or modulo by zero\".\n\t(LogLuvDecodeStrip): Fix Coverity 991239 \"Division or modulo by\n\tzero\".\n\t(LogLuvEncodeStrip): Fix Coverity 991240 \"Division or modulo by\n\tzero\".\n\t(LogLuvEncodeTile): Fix Coverity 991241 \"Division or modulo by\n\tzero\".\n\n\t* libtiff/tif_dirread.c (TIFFReadDirEntryDoubleArray): Fix\n\tCoverity 298626 \"Logically dead code\".\n\t(TIFFReadDirEntryFloatArray): Fix Coverity 298627 \"Logically dead\n\tcode\".\n\t(TIFFReadDirEntryIfd8Array): Fix Coverity 298628 \"Logically dead\n\tcode\".\n\t(TIFFReadDirEntrySlong8Array): Fix Coverity 298629 \"Logically dead\n\tcode\"\n\n\t* libtiff/tif_dir.c (TIFFNumberOfDirectories): Don't depend on ++\n\toperator precedenc in evaluation.  Might quench Coverity 1134470\n\t\"Logically dead code\".\n\n\t* libtiff/tif_jpeg.c (JPEGDecode): Fix Coverity 602597 \"Operands\n\tdon't affect result\".  This change uses ifdefs to include\n\tapplicable code based on properties of libjpeg.  Still needs to be\n\tre-tested with 12-bit \"6b\" and \"MK1\".\n\n2015-05-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirwrite.c (_TIFFRewriteField): Fix Coverity 1024310\n\t\"Resource leak\".\n\n\t* libtiff/tif_ojpeg.c (OJPEGReadHeaderInfoSecStreamDht): Fix\n\tCoverity 601720 \"Resource leak\".\n\n\t* libtiff/tif_jpeg.c (JPEGCleanup): Fix Coverity 298624\n\t\"Dereference before null check\".\n\n\t* libtiff/tif_ojpeg.c (OJPEGReadBufferFill): Fix Coverity 603400\n\t\"Missing break in switch\".\n\n\t* contrib/addtiffo/tif_overview.c (TIFF_DownSample): Check buffer\n\tsize calculation for overflow.\n\n\t* contrib/addtiffo/addtiffo.c (main): Possibly address Coverity\n\t1024226 \"Untrusted value as argument\".\n\n\t* tools/gif2tiff.c (readgifimage): Fix Coverity 1024222 \"Untrusted\n\tvalue as argument\".\n\t(checksignature): Fix Coverity 1024894 \"Ignoring number of bytes\n\tread\".\n\t(readextension): Fix Coverity 1024893 \"Ignoring number of bytes\n\tread\".\n\t(readgifimage): Fix Coverity 1024890 \"Ignoring number of bytes\n\tread\".\n\t(readraster): Fix Coverity 1024891 \"Ignoring number of bytes\n\tread\".\n\t(readgifimage): Fix Coverity 1024892 \"Ignoring number of bytes\n\tread\".\n\n\t* tools/tiff2pdf.c (t2p_readwrite_pdf_image): Fix Coverity 1024181\n\t\"Structurally dead code\".\n\n\t* tools/raw2tiff.c (main): Fix Coverity 1024887 \"Unchecked return\n\tvalue from library\".\n\t(guessSize): Fix Coverity 1024888 \"Unchecked return value from\n\tlibrary\".\n\t(guessSize): Fix Coverity 1214162 \"Ignoring number of bytes read\".\n\t(guessSize): Fix Coverity 1024889 \"Unchecked return value from\n\tlibrary\".\n\n\t* tools/tiff2pdf.c (t2p_readwrite_pdf_image): Fix Coverity 298621\n\t\"Resource leak\".\n\t(t2p_readwrite_pdf_image): Fix Coverity 1024181 \"Structurally dead\n\tcode\".\n\t(t2p_write_pdf): Fix Coverity 1227690 \"Unused value\".\n\n2015-05-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* contrib/iptcutil/iptcutil.c (formatIPTC): Fix Coverity 1024468\n\t\"Infinite loop\".\n\t(formatIPTC): Fix Coverity 1024727 \"Truncated stdio return value\".\n\t(formatIPTC): Fix Coverity 1214240 \"Untrusted loop bound\".\n\n2015-05-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* contrib/addtiffo/tif_ovrcache.c (TIFFCreateOvrCache): Fix\n\tCoverity 298615 \"Resource leak\".\n\t(TIFFGetOvrBlock): Fix Coverity 1024649 \"Unintended sign\n\textension\".\n\n\t* tools/bmp2tiff.c (main): Fix Coverity 1024225 \"Untrusted value\n\tas argument\".\n\t(main): Fix Coverity 1024678 \"Unchecked return value from\n\tlibrary\".\n\t(main): Fix Coverity 1024679 \"Unchecked return value from\n\tlibrary\".\n\t(main): Fix Coverity 1214160 \"Ignoring number of bytes read\".\n\n\t* contrib/addtiffo/tif_ovrcache.c (TIFFCreateOvrCache): Fix\n\tCoverity 298615 \"Resource leak\".\n\n\t* tools/tiffcp.c: Fix Coverity 1024306, 1024307, 1024308, 1024309\n\t\"Resource leak\".\n\n\t* tools/tiffsplit.c (cpTiles): Fix Coverity 1024304 \"Resource\n\tleak\".\n\t(cpStrips): Fix Coverity 1024305 \"Resource leak\".\n\n2015-05-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/ras2tiff.c: Fix Sun Raster header definition to be safe\n\tfor 64-bit systems.  Add some header validations.  Should fix many\n\tCoverity issues.\n\t(main): Fix Coverity 1301206: \"Integer handling issues  (BAD_SHIFT)\".\n\t(main): Quiet Coverity 1024223 \"Untrusted value as argument\".\n\n\t* tools/tiffmedian.c (GetInputLine): Fix Coverity 1024795 \"Nesting\n\tlevel does not match indentation\".\n\t(get_histogram): Quiet Coverity 1024386 \"Out-of-bounds read\".\n\tThis was a benign mis-diagnosis but added code to enforce against\n\tbuffer overflow.\n\n\t* tools/tiffcrop.c (ROTATE_ANY): Fix Coverity 1294542 \"Logical\n\tvs. bitwise operator\".\n\t(readContigStripsIntoBuffer): Fix Coverity 1024545 \"Division or\n\tmodulo by zero\".\n\t(readContigTilesIntoBuffer): Fix Coverity 1024586 \"Logically dead\n\tcode\".\n\t(writeSingleSection): Fix Coverity 1024796 \"Nesting level does not\n\tmatch indentation\".\n\t(writeCroppedImage): Fix Coverity 1024797 \"Nesting level does not\n\tmatch indentation\".\n\t(loadImage): Fix Coverity 1299741 \"Dereference before null check\".\n\t(loadImage): Fix Coverity 1299740 \"Out-of-bounds write\".\n\n2015-03-02  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiffdither.c: check memory allocations to avoid writing to\n\tNULL pointer. Also check multiplication overflow. Fixes #2501,\n\tCVE-2014-8128. Derived from patch by Petr Gajdos.\n\n2015-01-26  Even Rouault  <even.rouault@spatialys.com>\n\n\t* add html/v4.0.4beta.html under version control\n\t* HOWTO-RELEASE: write that cvs add html/vX.X.html must be used\n\n2015-01-26  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff 4.0.4beta released\n\n2015-01-26  Even Rouault  <even.rouault@spatialys.com>\n\n\t* automake: updated to 1.15\n\t* libtool: updated to 2.4.5\n\n2015-01-22  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: Fix two crashes (oCERT-2014-013)\n\n2015-01-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/bugs.html: remove note about needing to email the tiff mailing\n\tlist administrator about being approved for membership, this appears\n\tnot to be true.\n\n2015-01-05  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* tools/tiff2pdf.c: Fixed unsigned integer addition overflow detection.\n\n2015-01-03  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_dirread.c: in TIFFCheckDirOffset(), avoid uint16 overflow\n\twhen reading more than 65535 directories, and effectively error out when\n\treaching that limit.\n\n2014-12-29  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_jpeg.c: in JPEGFixupTags(), recognize SOF2, SOF9 and SOF10\n\tmarkers to avoid emitting a warning (even if, according to the TechNote,\n\tthere are admitedly unusual/not recommended or even forbidden variants, but\n\tthey do work well with libjpeg for SOF2, and with libjpeg-turbo for SOF2,\n\tSOF9 and SOF10).\n\tDefine in_color_space and input_components to the right values in\n\tJPEGSetupEncode(), before calling jpeg_set_defaults(), as specified by\n\tlibjpeg API documentation, so as to be compatible with mozjpeg library.\n\tNote: the default settings of mozjpeg will produce progressive scans, which\n\tis forbidden by the TechNote.\n\n2014-12-29  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_getimage.c: move test on vertical value of YCbCr subsampling.\n\tto avoid buffer leak (fix previous fix, found by Coverity scan)\n\n2014-12-29  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_next.c: add new tests to check that we don't read outside of\n\tthe compressed input stream buffer.\n\n\t* libtiff/tif_getimage.c: in OJPEG case, fix checks on strile width/height\n    in the putcontig8bitYCbCr42tile, putcontig8bitYCbCr41tile and\n    putcontig8bitYCbCr21tile cases.\n\n2014-12-27  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_dir.c: in TIFFDefaultDirectory(), reset any already existing\n\textented tags installed by user code through the extender mechaninm before\n\tcalling the extender callback (GDAL #5054)\n\n2014-12-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Fix warnings about variables set but not used.\n\n\t* contrib/iptcutil/iptcutil.c: Fix warnings about variables set\n\tbut not used.\n\n\t* tools/tiffgt.c: Fix warnings about unused parameters.\n\n\t* libtiff/tif_stream.cxx: Fix warnings about unused parameters.\n\n2014-12-25  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_getimage.c, libtiff/tif_ojpeg.c, libtiff/tif_zip.c: fix\n\tvarious typos found by Debian lintian tool (GDAL #5756)\n\n2014-12-24  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_getimage.c: avoid divide by zero on invalid YCbCr subsampling.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2235\n\n2014-12-24  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: fix buffer overflow on some YCbCr JPEG compressed images.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2445\n\n2014-12-24  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: fix buffer overflow on YCbCr JPEG compressed image.\n\tDerived from patch by Petr Gajdos,\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2443\n\n2014-12-23  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_dirread.c: In EstimateStripByteCounts(), check return code\n\tof _TIFFFillStriles(). This solves crashing bug on corrupted\n\timages generated by afl.\n\n2014-12-23  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_read.c: fix several invalid comparisons of a uint64 value with\n\t<= 0 by casting it to int64 first. This solves crashing bug on corrupted\n\timages generated by afl.\n\n2014-12-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffdump.c: Guard against arithmetic overflow when\n\tcalculating allocation buffer sizes.\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2bw.c: when Photometric=RGB, the utility only works if\n\tSamplesPerPixel = 3. Enforce that\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2485 (CVE-2014-8127)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/pal2rgb.c, tools/thumbnail.c: fix crash by disabling TIFFTAG_INKNAMES\n\tcopying. The right fix would be to properly copy it, but not worth the burden\n\tfor those esoteric utilities.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2484 (CVE-2014-8127)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/thumbnail.c: fix out-of-buffer write\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2489 (CVE-2014-8128)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/thumbnail.c, tools/tiffcmp.c: only read/write TIFFTAG_GROUP3OPTIONS\n\tor TIFFTAG_GROUP4OPTIONS if compression is COMPRESSION_CCITTFAX3 or\n\tCOMPRESSION_CCITTFAX4\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2493 (CVE-2014-8128)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_next.c: check that BitsPerSample = 2. Fixes\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2487 (CVE-2014-8129)\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiff2pdf.c: check return code of TIFFGetField() when reading\n\tTIFFTAG_SAMPLESPERPIXEL\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/tiffcp.c: fix crash when converting YCbCr JPEG-compressed to none.\n\tBased on patch by Tomasz Buchert (http://bugzilla.maptools.org/show_bug.cgi?id=2480)\n\tDescription: fix for Debian bug #741451\n\ttiffcp crashes when converting JPEG-encoded TIFF to a different\n\tencoding (like none or lzw). For example this will probably fail:\n\ttiffcp -c none jpeg_encoded_file.tif output.tif\n\tThe reason is that when the input file contains JPEG data,\n\tthe tiffcp code forces conversion to RGB space. However,\n\tthe output normally inherits YCbCr subsampling parameters\n\tfrom the input, which leads to a smaller working buffer\n\tthan necessary. The buffer is subsequently overrun inside\n\tcpStripToTile() (called from writeBufferToContigTiles).\n\tNote that the resulting TIFF file would be scrambled even\n\tif tiffcp wouldn't crash, since the output file would contain\n\tRGB data intepreted as subsampled YCbCr values.\n\tThis patch fixes the problem by forcing RGB space on the output\n\tTIF if the input is JPEG-encoded and output is *not* JPEG-encoded.\n\tAuthor: Tomasz Buchert <tomasz.buchert@inria.fr>\n\n2014-12-21  Even Rouault  <even.rouault@spatialys.com>\n\n\tFix various crasher bugs on fuzzed images.\n\t* libtiff/tif_dir.c: TIFFSetField(): refuse to set negative values for\n\tTIFFTAG_XRESOLUTION and TIFFTAG_YRESOLUTION that cause asserts when writing\n\tthe directory\n\t* libtiff/tif_dirread.c: TIFFReadDirectory(): refuse to read ColorMap or\n\tTransferFunction if BitsPerSample has not yet been read, otherwise reading\n\tit later will cause user code to crash if BitsPerSample > 1\n\t* libtiff/tif_getimage.c: TIFFRGBAImageOK(): return FALSE if LOGLUV with\n\tSamplesPerPixel != 3, or if CIELAB with SamplesPerPixel != 3 or BitsPerSample != 8\n\t* libtiff/tif_next.c: in the \"run mode\", use tilewidth for tiled images\n\tinstead of imagewidth to avoid crash\n\t* tools/bmp2tiff.c: fix crash due to int overflow related to input BMP dimensions\n\t* tools/tiff2pdf.c: fix crash due to invalid tile count (should likely be checked by\n\tlibtiff too). Detect invalid settings of BitsPerSample/SamplesPerPixel for CIELAB / ITULAB\n\t* tools/tiffcrop.c: fix crash due to invalid TileWidth/TileHeight\n\t* tools/tiffdump.c: fix crash due to overflow of entry count.\n\n2014-12-15  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_jpeg.c: Fix regression introduced on 2010-05-07 that caused\n\tall tiles/strips to include quantization tables even when the jpegtablesmode\n\thad the JPEGTABLESMODE_QUANT bit set.\n\tAlso add explicit removal of Huffman tables when jpegtablesmode has the\n\tJPEGTABLESMODE_HUFF bit set, which avoids Huffman tables to be emitted in the\n\tfirst tile/strip (only useful in update scenarios. create-only was\n\tfine)\n\n2014-12-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2pdf.c: Assure that memory size calculations for\n\t_TIFFmalloc() do not overflow the range of tmsize_t.\n\n2014-12-07  Even Rouault  <even.rouault@spatialys.com>\n\n\t* tools/thumbnail.c, tools/tiffcrop.c: \"fix\" heap read over-run found with\n\tValgrind and Address Sanitizer on test suite\n\n2014-12-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2pdf.c (t2p_read_tiff_init): TIFFTAG_TRANSFERFUNCTION\n\ttag can return one channel, with the other two channels set to\n\tNULL.  The tiff2pdf code was expecting that other two channels\n\twere duplicate pointers in the case where there is only one\n\tchannel.  Detect this condition in order to avoid a crash, and\n\tpresumably perform correctly with just one channel.\n\n2014-12-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffdump.c: Fix double-free bug.\n\n2014-11-27  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_config.vc.h: no longer use \"#define snprintf _snprintf\" with\n\tVisual Studio 2015 aka VC 14 aka MSVC 1900\n\n2014-11-20  Even Rouault  <even.rouault@spatialys.com>\n\n\t* libtiff/tif_lzw.c: prevent potential null dereference of\n\tsp->dec_codetab in LZWPreDecode (bug #2459)\n\n\t* libtiff/tif_read.c: in TIFFReadBufferSetup(), avoid passing -1 size\n\tto TIFFmalloc() if passed user buffer size is 0 (bug #2459)\n\n\t* libtiff/tif_ojpeg.c: make Coverity happier (not a bug, #2459)\n\n\t* libtiff/tif_dir.c: in _TIFFVGetField() and _TIFFVSetField(), make\n\tCoverity happier (not a bug, #2459)\n\n\t* libtiff/tif_dirread.c: in TIFFFetchNormalTag(), make Coverity happier\n\t(not a bug, #2459)\n\n\t* tools/tiff2pdf.c: close PDF file (bug #2479)\n\n\t* tools/fax2ps.c: check malloc()/realloc() result (bug #2470)\n\n\t* tools/tiffdump.c: detect cycle in TIFF directory chaining (bug #2463)\n\tand avoid passing a NULL pointer to read() if seek() failed before (bug #2459)\n\n\t* tools/tiffcrop.c: fix segfault if bad value passed to -Z option\n\t(bug #2459) and add missing va_end in dump_info (#2459)\n\n\t* tools/gif2tif.c: apply patch for CVE-2013-4243 (#2451)\n\n2014-11-20  Even Rouault  <even.rouault@spatialys.com>\n\t* libtiff/tif_jpeg.c: fix segfault in JPEGFixupTagsSubsampling() on\n\tcorrupted image where tif->tif_dir.td_stripoffset == NULL (bug #2471)\n\n2014-11-20  Even Rouault  <even.rouault@spatialys.com>\n\t* automake: updated to 1.14.1\n\t* libtool: updated to 2.4.3\n\t* HOWTO-RELEASE: small update about autotools building order\n\n2014-10-20  Olivier Paquet  <olivier.paquet@gmail.com>\n\t* tools/tiff2pdf.c: Preserve input file directory order when pages\n\tare tagged with the same page number.\n\n2014-08-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirread.c (TIFFReadDirEntryOutputErr): Incorrect\n\tcount for tag should be a warning rather than an error since\n\terrors terminate processing.\n\n2014-06-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2rgba.c (]): Fixed tiff2rgba usage message in that zip\n\twas wrongly described.  Fix suggested by Miguel Medalha.\n\n2014-05-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirinfo.c (TIFFField) : Fix data type for\n\tTIFFTAG_GLOBALPARAMETERSIFD tag.  Patch by Steve Underwood.\n\tReviewed and forwarded by Lee Howard.\n\n2013-11-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fix last fix for TIFFNumberOfDirectories()\n\n2013-10-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: generate error in case of directory count\n\toverflow.\n\n2013-10-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h, libtiff/tif_dirinfo.c: add definitions for\n\tTIFF/EP CFARepeatPatternDim and CFAPattern tags (bug #2457)\n\n2013-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dir.c (TIFFAdvanceDirectory): If nextdir is found to\n\tbe defective, then set it to zero before returning error in order\n\tto terminate processing of truncated TIFF.  Issue found and fix\n\tsuggested by Richard Nolde.\n\n2013-08-14  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/gif2tiff.c: fix possible OOB write (#2452, CVE-2013-4244)\n\n2013-08-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/gif2tiff.c: Be more careful about corrupt or\n\thostile input files (#2450, CVE-2013-4231)\n\n\t* tools/tiff2pdf.c: terminate after failure of allocating\n\tycbcr buffer (bug #2449, CVE-2013-4232)\n\n2013-07-09  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tools/tiffinfo.c: Default various values fetched with\n\tTIFFGetField() to avoid being uninitialized.\n\n2013-05-02  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Rewrite JPEG marker parsing in\n\tt2p_process_jpeg_strip to be at least marginally competent.  The\n\tapproach is still fundamentally flawed, but at least now it won't\n\tstomp all over memory when given bogus input.  Fixes CVE-2013-1960.\n\n2013-05-02  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* contrib/dbs/xtiff/xtiff.c, libtiff/tif_codec.c,\n \tlibtiff/tif_dirinfo.c, tools/rgb2ycbcr.c, tools/tiff2bw.c,\n \ttools/tiff2pdf.c, tools/tiff2ps.c, tools/tiffcrop.c,\n \ttools/tiffdither.c: Enlarge some fixed-size buffers that weren't\n \tlarge enough, and eliminate substantially all uses of sprintf(buf,\n \t...)  in favor of using snprintf(buf, sizeof(buf), ...), so as to\n \tprotect against overflow of fixed-size buffers.  This responds in\n \tparticular to CVE-2013-1961 concerning overflow in tiff2pdf.c's\n \tt2p_write_pdf_page(), but in general it seems like a good idea to\n \tdeprecate use of sprintf().\n\n2013-03-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Applied patch by Brad Smith to improve pkg-config\n\tstatic linking by adding -lm to Libs.private when needed.\n\n2013-03-05  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* html/man/tiff2ps.1.html, html/man/tiffcp.1.html,\n \thtml/man/tiffdither.1.html, man/tiff2ps.1, man/tiffcp.1,\n \tman/tiffdither.1, tools/tiff2ps.c, tools/tiffcp.c,\n \ttools/tiffdither.c: Sync tool usage printouts and man pages with\n \treality (quite a few options had escaped being documented in one\n \tor both places).  Per an old report from Miroslav Vadkerti.\n\n2013-01-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2ps.c:Fix bug in auto rotate option code. Once a\n\trotation angle was set by the auto rotate check, it was retained\n\tfor all pages that followed instead ofa being retested for each\n\tpage.  Patch by Richard Nolde.\n\n2013-01-18  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_write.c: tmsize_t related casting warning fixed for\n\t64bit linux.\n\n\t* libtiff/tif_read.c: uint64/tmsize_t change for MSVC warnings.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2427\n\n2012-12-20  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* test/raw_decode.c: Relax raw_decode's pixel-value checks so that\n\tit will pass with more versions of libjpeg.  (There are at least\n\tthree in active use now, and JPEG_LIB_VERSION doesn't tell us\n\tenough to uniquely identify expected results.)\n\n2012-12-12  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* libtiff/tif_print.c: Fix TIFFPrintDirectory's handling of\n\tfield_passcount fields: it had the TIFF_VARIABLE and\n\tTIFF_VARIABLE2 cases backwards.\n\n2012-12-10  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/ppm2tiff.c: Improve previous patch for CVE-2012-4564:\n \tcheck the linebytes calculation too, get the max() calculation\n \tstraight, avoid redundant error messages, check for malloc\n \tfailure.\n\n2012-12-10  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* libtiff/tif_pixarlog.c: Improve previous patch for CVE-2012-4447\n \t(to enlarge tbuf for possible partial stride at end) so that\n \toverflow in the integer addition is detected.  Per gripe from\n \tHuzaifa Sidhpurwala.\n\n2012-12-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffset.c: tiffset now supports a -u option to unset a\n\ttag.  Patch by Zach Baker. See\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2419\n\n2012-11-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* automake: Update Automake to 1.12.5 release.\n\n\t* libtiff/tif_{unix,vms,win32}.c (_TIFFmalloc): ANSI C does not\n\trequire malloc() to return NULL pointer if requested allocation\n\tsize is zero.  Assure that _TIFFmalloc does.\n\n2012-11-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/ppm2tiff.c: avoid zero size buffer vulnerability.\n\tCVE-2012-4564 - Thanks to Huzaifa Sidhpurwala of the\n\tRed Hat Security Response team for the fix.\n\n2012-10-18  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tif_zip.c: Avoid crash on NULL error messages.\n\n2012-09-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.3 released.\n\n2012-09-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am: Update to Automake 1.12.4\n\n2012-08-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.in: Update to Automake 1.12.3\n\n\t* libtiff{tiff.h, tif_print.c, tif_dirinfo.c, tif_dirread.c}: Add\n\tsome TIFF/FX support in libtiff.  Add the tag definitions to\n\ttiff.h.  Add the related TIFF field definitions to tif_dirinfo.c,\n\tand also fixes an error in a comment.  Adds the photometric values\n\tto tif_print.c, and fixes a bug.  These changes are by Steve\n\tUnderwood.\n\n2012-08-13  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_write.c: Fix bug rewriting image tiles in a\n\tcompressed file: http://trac.osgeo.org/gdal/ticket/4771\n\n2012-08-02  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_dirread.c: report error in case of mismatch value\n\tcounts for tags (ie. DotRange).\n\n2012-07-26  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* libtiff/{tiffio.h, tif_dirinfo.c, libtiff.def}: Add six new\n \tfunctions TIFFFieldTag(), TIFFFieldName(), TIFFFieldDataType(),\n\tTIFFFieldPassCount(), TIFFFieldReadCount(), TIFFFieldWriteCount()\n\tas external accessors for the opaque type TIFFField.\n\n\t* tools/tiffset.c: Make tiffset use the above functions instead of\n\trelying on library private headers.\n\n2012-07-19  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Fix two places where t2p_error didn't get set\n\tafter a malloc failure.  No crash risk AFAICS, but the program\n\tmight not report exit code 1 as desired.  h/t mancha@mac.hush.com\n\n2012-07-18  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Fail when TIFFSetDirectory() fails.  This\n\tprevents core dumps or perhaps even arbitrary code execution when\n\tprocessing a corrupt input file (CVE-2012-3401).\n\n2012-07-06  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/raw_decode.c (main): Test fixes to work with IJG JPEG 7+.\n\tIJG JPEG 7+ uses a different upsampling algorithm which produces\n\tdifferent numeric results.\n\n\t* libtiff/tif_jpeg.c (JPEGPreDecode): Patch from Even Rouault to\n\twork with IJG JPEG 7+.\n\n2012-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/raw_decode.c: Add changes so that test can run with build\n\tdirectory outside of source directory.\n\n2012-07-02  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_jpeg.c: Fix handling when writing RGBA jpeg compressed\n\timagery (http://trac.osgeo.org/gdal/ticket/4732)\n\n2012-06-20  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_fax3.c: fix memory initialization of runs, only\n\tpartly done.\n\n\t* libtiff/tif_pixarlog.c: Make sure tbuf is large enough for one\n\tfull \"stride\" past the end.\n\n2012-06-19  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_packbits.c: fix read past end of data buffer.\n\n2012-06-15  Frank Warmerdam  <warmerdam@google.com>\n\n\t*  libtiff 4.0.2 released.\n\n\t* tools/tif2pdf.c, tools/tifdump.c: avoid unitialized variable\n\twarnings with clang.\n\n2012-06-15  Tom Lane  <tgl@sss.pgh.pa.us>\n\n\t* tools/tiff2pdf.c: Defend against integer overflows while\n\tcalculating required buffer sizes (CVE-2012-2113).\n\n2012-06-12  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_print.c: Be careful about printing corrupt inknames.\n\n\t* libtiff/tif_fax3.c: Ensure runs array is initialized to zeros.\n\n2012-06-07  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_print.c: avoid pretty printing other fields when\n\twe don't have the proper amount and type of data or if the field\n\tis actually autodefined.\n\n2012-06-05  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_tile.c, libtiff/tif_strip.c: Ensure that illegal\n\tycbcrsubsampling values result in a runtime error, not just an\n\tassertion.\n\n\t* tests/custom_dir.c: Add testing of EXIF and custom directory\n\treading and writing.\n\n\t* libtiff/tif_dir.c, libtiff/tiffio.h: Add TIFFCreateCustomDirectory()\n\tand TIFFCreateEXIFDirectory() functions.\n\n\t* libtiff/tif_dir.c, tif_print.c : Remove FIELD_CUSTOM handling for\n\tPAGENUMBER, HALFTONEHINTS, and YCBCRSUBSAMPLING.  Implement DOTRANGE\n\tdifferently.  This is to avoid using special TIFFGetField/TIFFSetField\n\trules for these fields in non-image directories (like EXIF).\n\n2012-06-04  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_jpeg.c: Remove code for fixing up h_sampling and v_sampling\n\tin JPEGPreDecode().  If a fixup will be done it needs to be done sooner\n\tin JPEGFixupTagsSubsampling() or else buffer sized may be wrong.\n\n2012-06-01  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tools/tiffinfo.c: Do not try to read image data in EXIF directories.\n\n\t* libtiff/tif_getimage.c: added support for _SEPARATED CMYK images.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2379\n\n\t* libtiff/tif_unix.c: use strerror() to return a more specific error message\n\ton failed open.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2341\n\n\t* libtiff/tif_jpeg.c: Fix JPEGDecodeRaw() bugs.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2386\n\n\t* tests/decode_raw.c, tests/images/quad-tile.jpg.tiff: add limited support\n\tfor testing jpeg in tiff image decoding including the \"raw\" decode interface.\n\n2012-05-31  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_jpeg.c: avoid overrunning the end of the output buffer in\n\tJPEGDecodeRaw() - mostly likely to occur when there is confusion about\n\tsampling values.\n\n\t* libtiff/tif_read.c: Make sure tif_rawdatasize is cleared when tif_rawdata is freed.\n\n\t* libtiff/tif_getimage.c: Add support for greyscale+alpha c/o J\u00e9r\u00e9mie Laval.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2398\n\n2012-05-29  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_dir.c: avoid using specific set/get logic to process fields in custom directories,\n\tlike EXIF directories.  This fixes problems like a tag \"320\" existing in a custom directory getting\n\tprocessed as if it were a colormap when it isn't really.  Damn the wide variety of argument formulations\n\tto get/set functions for different tags!\n\n\t* libtiff/tif_dir.c: Ensure that we keep track of when tif_rawdata\n\tis a pointer into an mmap()ed file via TIFF_BUFFERMMAP flag.\n\n2012-05-24  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_pixarlog.c: Allocate working buffer one word larger since we \"forward\n\taccumulate\" and overwrite the end by one word in at least some cases.\n\n2012-05-23  Frank Warmerdam  <warmerdam@google.com>\n\n\t* libtiff/tif_pixarlog.c: avoid accessing out of the lookup arrays for out of range inputs.\n\n\t* tools/tiffinfo.c: initialize h=0 to avoid undefined variable for degenerate files.\n\n\t* libtiff/tif_ojpeg.c: if OJPEGWriteHeader() fails once do not bother trying again on\n\tthe same image.\n\n\t* libtiff/tif_ojpeg.c: make things more resilient in the face of files without\n\tstripbytecounts or stripoffsets or where loading these fails.\n\n\t* libtiff/tif_print.c: be careful about whether min/max values are singular\n\tor one per sample.\n\n\t* libtiff/tif_print.c: Avoid confusion about count size when printing custom fields.\n\tMay affect things like ISOSpeedRatings.\n\n\t* libtiff/tif_dir.c: avoid one byte past end of ink names reading\n\tin some cases.\n\n2012-05-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* man/TIFFGetField.3tiff: Correct the 'count' field type in the\n\texample for how to retreive the value of unsupported tags.\n\n2012-03-30  Frank Warmerdam  <warmerdam@google.com>\n\n\t* tif_getimage.c: Fix size overflow (zdi-can-1221,CVE-2012-1173)\n\tcare of Tom Lane @ Red Hat.\n\n2012-02-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.1 released.\n\n\t* Update automake used to 1.11.3.\n\n\t* libtiff/tiffio.h: Use double-underbar syntax in GCC printf\n\tattribute specification to lessen the risk of accidental macro\n\tsubstitution.  Patch from Vincent Torri.\n\n2012-01-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c, libtiff/tif_dirread.c: Extra caution around\n\tassumption tag fetching is always successful.\n\n\t* libtiff/tif_jpeg.c: Extra caution for case where sp is NULL.\n\n2012-01-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Add support for using library symbol versioning on\n\tELF systems with the GNU linker.  Support is enabled via\n\t--enable-ld-version-script.  Disabled by default for now until\n\tthere is a decision for how to deploy a libtiff with versioned\n\tsymbols after libtiff 4.0.0 was already released.\n\n2011-12-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_win32.c: Eliminate some minor 64-bit warnings in\n\n\ttif_win32.c.  Patch by Edward Lam.\n\n\t* configure.ac: Add libtiff private dependency on -llzma for\n\tpkg-config.  Patch by Mark Brand.\n\tUpdated Automake to 1.11.2.\n\n2011-12-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0 released.\n\n2011-12-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c, libtiff/tif_read.c: more cautious checking\n\tof _TIFFFillStriles() results (#gdal 4372)\n\n2011-12-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: fixes to deal with invalid files where\n\t_TIFFFillStriles() fails, and we try to chop up strips (gdal #4372)\n\n\t* libtiff/tif_dirread.c: fix error reporting when there is no\n\ttag information struct and name (gdal #4373)\n\n2011-10-22  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Update GNU libtool to 2.4.2.\n\n\t* tools/tiffsplit.c (tiffcp): TIFFGetField count field should be\n\tuint32 type for TIFFTAG_JPEGTABLES.  Patch by Christophe\n\tDeroulers.\n\n2011-06-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Restore TIFFMergeFieldInfo.\n\n2011-05-31  Jim Meyering  <meyering@redhat.com>\n\n\t* libtiff/tif_dirread.c (TIFFFetchStripThing): Free \"data\" also\n\tupon failure to allocate \"resizeddata\".\n\t* tools/tiff2ps.c (PSDataBW): Zero buffer *after* checking for\n\tallocation failure, not before.\n\t* libtiff/tif_ojpeg.c: plug leaks on OJPEG read failure path\n\t* tools/rgb2ycbcr.c (cvtRaster): unchecked malloc\n\t* libtiff/tif_jpeg.c, tools/tiff2pdf.c, tools/tiff2ps.c: mark\n\tNULL-deref and possible overflow\n\t* tools/tiff2pdf.c: remove decl+set of set-but-not-used local, \"written\"\n\t* libtiff/tif_jpeg.c (JPEGInitializeLibJPEG): Remove declaration\n\tand set of otherwise unused local, data_is_empty.\n\t* libtiff/tif_jpeg.c (JPEGDecodeRaw) [JPEG_LIB_MK1_OR_12BIT]:\n\tDiagnose out-of-memory failure and return 0 rather than\n\tdereferencing NULL.\n\n2011-05-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: produce special error message for zero tag\n\tdirectories instead of error out on the malloc(0) failure.\n\n2011-05-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Restore TIFFMergeFieldInfo() and\n\trelated declarations as they are in active use by libraries\n\tsuch as libgeotiff, and work just fine.  (#2315)\n\n2011-04-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c,tiffio.h: Remove the obsolete\n\tTIFFMergeFieldInfo/TIFFFindFieldInfo/TIFFFindFieldInfoByName API.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2315\n\n\t* libtiff/libtiff.def: add some missing (64bit) APIs.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2316\n\n2011-04-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0beta7 released.\n\n2011-04-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Should use AC_CANONICAL_HOST since host specifies\n\tthe run-time target whereas target is used to specify the final\n\toutput target if the package is a build tool (like a compiler),\n\twhich libtiff is not.  Resolves libtiff bug 2307 \"Use\n\tAC_CANONICAL_HOST macro\".\n\n2011-04-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Support configuring TIFF_INT64_FORMAT and\n\tTIFF_UINT64_FORMAT appropriately for MinGW32.\n\n\t* tools/tiffdump.c (ReadDirectory): MinGW32 needs to use WIN32\n\tprintf conventions for 64-bit types because it uses the WIN32 CRT.\n\n\t* libtiff/{tif_dumpmode.c,tif_luv.c,tif_lzw.c,tif_print.c,\n\ttif_read.c,tif_strip.c,tif_thunder.c}: MinGW32 needs to use WIN32\n\tprintf conventions for 64-bit types because it uses the WIN32 CRT.\n\n\t* tools/tiff2pdf.c (t2p_write_pdf_string): Fix printf syntax not\n\tunderstood by WIN32 CRT.\n\n\t* libtiff/tif_ojpeg.c: Fixes to compile with MinGW32 GCC.\n\n\t* tools/fax2ps.c (main): Use tmpfile() rather than mkstemp() since\n\tit is much more portable.  Tmpfile is included in ISO/IEC\n\t9899:1990 and the WIN32 CRT.\n\n2011-03-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffset.c: add -d and -sd switches to allow operation on\n\ta particular directory, not just the first (jef).\n\n2011-03-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_thunder.c: Correct potential buffer overflow with\n\tthunder encoded files with wrong bitspersample set.  The libtiff\n\tdevelopment team would like to thank Marin Barbella and TippingPoint's\n\tZero Day Initiative for reporting this vulnerability (ZDI-CAN-1004,\n\tCVE-2011-1167).\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2300\n\n2011-03-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.h: Fix to last change allowing zero length\n\truns at the start of a scanline - needed for legal cases.\n\n2011-03-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.h: Protect against a fax VL(n) codeword commanding\n\ta move left.  Without this, a malicious input file can generate an\n\tindefinitely large series of runs without a0 ever reaching the right\n\tmargin, thus overrunning our buffer of run lengths.  Per CVE-2011-0192.\n\tThis is a modified version of a patch proposed by Drew Yao of Apple\n\tProduct Security.  It adds an unexpected() report, and disallows the\n\tequality case, since emitting a run without increasing a0 still allows\n\tbuffer overrun.\n\n2011-02-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: avoid divide by zero in degenerate case (#2296)\n\n\t* tools/tiff2rgba.c: close source file on error to make leak\n\tdetection easier.\n\n\t* libtiff/tif_getimage.c: avoid leaks if TIFFRGBAImageBegin() fails.\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2295\n\n2011-02-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzma.c: Maintain tif_rawcc/tif_rawcp (CHUNKY_STRING_READ\n\t_SUPPORT)\n\n2011-02-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure.ac, configure: Added support for --enable-chunky-strip-read\n\tconfigure option to enable the experimental feature from a couple\n\tmonths ago for reading big strips in chunks.\n\n\t* configure.ac, tif_read.c, tif_readdir.c, tif_dir.h, tiffiop.h,\n\ttif_write.c, tif_print.c, tif_jpeg.c, tif_dirwrite.c, tif_write.c:\n\tImplement optional support for deferring the load of strip/tile\n\toffset and size tags for optimized scanning of directories.  Enabled\n\twith the --enable-defer-strile-load configure option (DEFER_STRILE_LOAD\n\t#define in tif_config.h).\n\n2011-02-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: remove unused variable.\n\n2011-02-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_win32.c: avoid error/warning buffer overrun problem\n\twith non-console (popup message) builds on win32.\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2293\n\n2011-01-24  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/{tif_dir.{h,c}, tif_dirinfo.c, tif_dirread.c, tif_dirwrite.c,\n\ttif_print.c, tiff.h, tiffiop.h} : Added support for\n\tTIFFTAG_SMINSAMPLEVALUE and TIFFTAG_SMAXSAMPLEVALUE to have different\n\tvalues for each sample. Presents the min/max of all samples by default for\n\tcompatibility. TIFFSetField/TIFFGetField can be made to handle those tags\n\tas arrays by changing the new TIFFTAG_PERSAMPLE pseudo tag.\n\thttp://www.asmail.be/msg0055458208.html\n\n2011-01-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_pixarlog.c: Note that tif_rawcc/tif_rawcp are not\n\tmaintained.\n\n\t* libtiff/tif_zip.c: Maintain tif_rawcc/tif_rawcp when decoding\n\tfor CHUNKY_STRIP_READ_SUPPORT.\n\n\t* libtiff/tif_jpeg.c: ensure that rawcc and rawcp are maintained\n\tduring JPEGPreDecode and JPEGDecode calls.\n\t* libtiff/tif_read.c: larger read ahead for CHUNKY_STRIP_READ_SUPPORT,\n\tas compression formats like JPEG keep 16 lines interleaved in a sense\n\tand might need to touch\tquite a bit of data.\n\n\thttp://trac.osgeo.org/gdal/ticket/3894\n\n2011-01-03  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: Fix regressions with 2 and 3 band images\n\tcaused by commit on 2010-12-14.  Submitted by e-mail from\n\tEven Rouault <even.rouault@mines-paris.org>\n\n2010-12-31  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_dirwrite.c: Fixed writing of TIFFTAG_REFERENCEBLACKWHITE.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2266\n\n2010-12-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c, man/tiffcp.1: Added support for specifying the\n\tcompression level parameter (preset) for Deflate and LZMA encoders,\n\te.g \"-c lzma:p1\" or \"-c zip:p9\".\n\n\t* libtiff/tif_lzma.c: Properly set the LZMA2 compression level\n\t(preset) in LZMAVSetField().\n\n2010-12-18  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/Makefile.am (libtiff_la_SOURCES): Added tif_lzma.c to\n\tMakefile.\n\n2010-12-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/{tif_codec.c, tif_config.h.in, tiff.h,\n\ttiffiop.h, tif_lzma.c}, tools/tiffcp.c, man/tiffcp.1: Implement a new\n\tTIFF compression scheme LZMA reserving a new value 34925 for\n\tCompression tag. As per\n\tbug http://bugzilla.maptools.org/show_bug.cgi?id=2221\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_dirread.c: tolerate some cases where\n\tFIELD_COLORMAP is missing\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2189\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_read.c: change read_ahead to tmsize_t\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2222\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* configure.ac, libtiff/Makefile.am: Build tif_win32.c on\n\tWindows except on Cygwin\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2224\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/gif2tiff.c: fix buffer overrun\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2270\n\n2010-12-14  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: reduce usage of JCS_UNKNOWN in order\n\tto improve compatibility with various viewers\n\tsubmitted by e-mail from Dwight Kelly <dkelly@apago.com>\n\n2010-12-13  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/fax2ps.c: be consistent with page-numbering\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2225\n\n2010-12-13  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_color.c: prevent crash in handling bad TIFFs\n\tresolves CVE-2010-2595\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2208\n\n2010-12-13  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiffcrop.c: new release by Richard Nolde\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2004\n\n2010-12-12  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2pdf.c: fix colors for images with RGBA\n\tinterleaved data\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2250\n\n2010-12-12  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_dirread.c: fix for Zeiss LSM and Canon CR2 files\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2164\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2pdf.c: remove invalid duplication for Lab\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2162\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: fix use of clumplines calculation\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2149\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/fax2ps.c: replace unsafe tmpfile() with mkstemp()\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2118\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_ojpeg.c, libtiff/tif_pixarlog.c,\n\t  libtiff/tif_zip.c: fix build errors for VC6\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2105\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_stream.cxx: warnings cleanup\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2091\n\t* libtiff/tif_dirread.c: warnings cleanup\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2092\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2pdf.c: add fill-page option\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2051\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_dirread.c: modify warnings\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2016\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_ojpeg.c: fix buffer overflow on problem data\n        http://bugzilla.maptools.org/show_bug.cgi?id=1999\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiffinfoce.c: strip byte counts are uint64* now\n\n2010-12-11  Lee Howard <faxguy@howardsilvan.com>\n\n        * libtiff/tif_ojpeg.c: fix crash when reading a TIFF with a zero\n        or missing byte-count tag\n        * tools/tiffsplit.c: abort when reading a TIFF without a byte-count\n        per http://bugzilla.maptools.org/show_bug.cgi?id=1996\n\n2010-12-08  Lee Howard <faxguy@howardsilvan.com>\n\n        * libtiff/tif_dirread.c: fix crash when reading a badly-constructed\n        TIFF per http://bugzilla.maptools.org/show_bug.cgi?id=1994\n\n2010-12-06  Lee Howard <faxguy@howardsilvan.com>\n\n        * libtiff/tif_open.c: Fix mode check before opening a file.\n        http://bugzilla.maptools.org/show_bug.cgi?id=1906\n\n2010-11-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff-4.pc.in: Added libtiff pkg-config .pc file support.\n\tPatch by Vincent Torri.\n\n2010-10-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffinfo.c: avoid direct reference to _TIFFerrorHandler.\n\n\t* libtiff/tif_config.vc.h: define snprintf to _snprintf for tiff2pdf.\n\n\t* libtiff/libtiff.def: export _TIFFCheckMalloc for tools.\n\n2010-09-25  Lee Howard <faxguy@howardsilvan.com>\n\n\t* tools/tiff2ps.c: improvements and enhancements from Richard Nolde\n\twith additional command line options for Document Title,\n\tDocument Creator, and Page Orientation\n\n2010-07-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Patch from Richard Nolde to avoid a\n\tpotentially unterminated buffer due to using an exceptionally long\n\tfile name.\n\n2010-07-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Fixed ID buffer filling in\n\tt2p_write_pdf_trailer(), thanks to Dmitry V. Levin.\n\n2010-07-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Really reset the tag count in CheckDirCount()\n\tto expected value as the warning message suggests. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1963\n\n2010-07-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: Properly handle TIFFTAG_PAGENUMBER,\n\tTIFFTAG_HALFTONEHINTS, TIFFTAG_YCBCRSUBSAMPLING, TIFFTAG_DOTRANGE\n\twhich should be set by value.\n\n\t* libtiff/tif_dirinfo.c: Don't use assertions in _TIFFFieldWithTag()\n\tand _TIFFFieldWithName() if the tag is not found in the tag table.\n\tThis should be normal situation and returned NULL value should be\n\tproperly handled by the caller.\n\n2010-07-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Avoid wrong math du to the signed/unsigned\n\tinteger type conversions. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2207\n\n\t* tools/{tiff2bw.c, thumbnail.c, pal2rgb.c}: Fix the count for\n\tWhitePoint tag as per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2042\n\n\t* libtiff/tif_getimage.c: Check the number of samples per pixel when\n\tworking with YCbCr image in PickContigCase(). As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2216\n\n\t* libtiff/tif_dir.c: Set the bogus post-decoding hook when processing\n\tTIFFTAG_BITSPERSAMPLE in _TIFFVSetField() for the case of 8 bit when\n\twe don't need any post-processing. That helps to reset the hook if we\n\tpreviously set this field to some other value and the hook was\n\tinitialized accordingly. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2035\n\n2010-07-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffgt.c: Properly check the raster buffer allocations for\n\tinteger overflows. As per bug\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2108\n\n\t* m4/acinclude.m4: Update GL/GLU/GLUt/Pthread macros from the\n\tupstream.\n\n\t* libtiff/{tif_aux.c, tif_strip.c, tif_tile.c, tiffiop.h}: Move\n\tmultiply_32() and multiply_64() functions into tif_aux.c file and\n\trename them into _TIFFMultiply32() and _TIFFMultiply64() respectively.\n\n2010-06-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Better generation of ID field in\n\tt2p_write_pdf_trailer(). Get rid of GCC aliasing warnings.\n\n\t* tools/tiff2pdf.c: Fixed computation of the tile buffer size when\n\tconverting JPEG encoded tiles.\n\n\t* tools/tiff2pdf.c: Better handling of string fields, use static\n\tstring buffers instead of dynamically allocated, use strncpy() instead\n\tof strcpy(), control the string lengths.\n\n2010-06-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Initialize buffer arrays with zero to avoid\n\treferencing to uninitialized memory in some cases (e.g. when tile size\n\tset bigger than the image size).\n\n2010-06-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Patch from Richard Nolde. Reject YCbCr\n\tsubsampled data since tiffcrop currently doesn't support it.  Fix\n\tJPEG support.\n\n2010-06-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Fix invocation of tag compare function (#2201)\n\n\t* tools/tiff2pdf.c: Fix assorted bugs in tiff2pdf: missing \"return\"\n\tin t2p_read_tiff_size() causes t2p->tiff_datasize to be set entirely\n\twrong for COMPRESSION_JPEG case, resulting in memory stomp if actual\n\tsize is larger.  Also, there are a bunch of places that try to\n\tmemset() a malloc'd buffer before checking for malloc failure, which\n\twould result in core dump if there actually were a failure. (#2211)\n\n2010-06-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h (TIFFSafeMultiply): Need more castings to\n\tavoid compiler warnings if parameter types are not sign\n\tconsistent.\n\n\t* libtiff 4.0.0alpha6 released.\n\n\t* tools/tiffcrop.c: Applied patch from Richard Nolde: Corrected\n\tEuropean page size dimensions.  Added an option to allow the user\n\tto specify a custom page size on the command line.  Fix the case\n\twhere a page size specified with a fractional part was being\n\tcoerced to an integer by retyping the variables that define the\n\tpaper size.\n\n\t* html/index.html: Update for the 3.9.3 release.\n\n\t* tools/tiffcp.c (tiffcp): Applied Tom Lane's patch to reject\n\tYCbCr subsampled data since tiffcp currently doesn't support it.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2097\n\n\t* Update libtool to version 2.2.10.\n\n2010-06-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffiop.h (TIFFSafeMultiply): Work properly if\n\tmultiplier is zero.\n\n2010-06-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_fax3.c (Fax3SetupState): Yesterday's fix for\n\tCVE-2010-1411 was not complete.\n\n\t* libtiff/tiffiop.h (TIFFSafeMultiply): New macro to safely\n\tmultiply two integers.  Returns zero if there is an integer\n\toverflow.\n\n\t* tools/tiffcp.c (main): tiffcp should not leak memory if an error\n\tis reported when reading the input file.\n\n2010-06-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Update libtool to version 2.2.8.\n\n\t* libtiff/tif_fax3.c (Fax3SetupState): Avoid under-allocation of\n\tbuffer due to integer overflow in TIFFroundup() and several other\n\tpotential overflows.  In conjunction with the fix to TIFFhowmany(),\n\tfixes CVE-2010-1411.\n\n\t* libtiff/tiffiop.h (TIFFhowmany): Return zero if parameters would\n\tresult in an integer overflow. This causes TIFFroundup() to also\n\treturn zero if there would be an integer overflow.\n\n\t* contrib: Add an emacs formatting mode footer to all source files\n\tso that emacs can be effectively used.\n\n2010-06-03  Oliver Chen Feng <scip8183@gmail.com>\n\n\t* libtiff/tools/tiffcp.c: add a new option -x to force merged tiff\n\tfile PAGENUMBER value in sequence for users who care the page\n\tsequence, this will also prevent tiff2pdf from creating pdf file from\n\tthe merged tiff file with wrong page sequence.\n\n2010-05-08  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_dirread.c: Restored TIFFReadDirEntryFloat function in order\n\tto add missing TIFF_SETGET_FLOAT case to TIFFFetchNormalTag.\n\t* libtiff/tif_dirinfo.c: Use correct set_field_type for\n\tTIFFTAG_PIXAR_FOVCOT so it is readable again (regression from 3.9.2).\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2192\n\n2010-05-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Ensure that quality is always set in\n\tJPEGPreEncode(), not just when we want to output local tables.\n\tOtherwise the quality used during compression may not be right and\n\tmight not match the tables in the tables tag.   This bug only occurs\n\twhen seeking between directories in the midst of writing blocks.\n\thttp://trac.osgeo.org/gdal/ticket/3539\n\n2010-05-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* html/man/TIFFGetField.3tiff.html, html/man/TIFFSetField.3tiff.html:\n\tRegenerated from the source.\n\n2010-05-05  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_print.c: Fixed printing of TIFFTAG_REFERENCEBLACKWHITE which\n\thad stopped working. Also made it always print 6 floats instead of\n\t2*SamplesPerPixel.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2191\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2186\n\t* man/TIFFGetField.3tiff, man/TIFFSetField.3tiff: Fixed doc to reflect the\n\tfact that libtiff considers TIFFTAG_REFERENCEBLACKWHITE to be 6 floats.\n\n2010-05-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Fix to use memcmp(), not memcpy() when checking\n\tif the jpeg table was written.  This is a fix for the last fix on 04-21.\n\n2010-04-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: avoid preparing jpeg tables everytime\n\tJPEGSetupEncode() is called if the tables already seem to be\n\testablished.  This prevents spurious updates and rewriting of\n\tdirectories with jpegtables when doing updates to existing images.\n\thttp://trac.osgeo.org/gdal/ticket/3539\n\n2010-04-20  Olivier Paquet  <olivier.paquet@gmail.com>\n\n\t* libtiff/tif_dirinfo.c: Use correct set_field_type for\n\tTIFFTAG_PIXAR_IMAGEFULLWIDTH, TIFFTAG_PIXAR_IMAGEFULLLENGTH,\n\tTIFFTAG_PIXAR_MATRIX_WORLDTOSCREEN and TIFFTAG_PIXAR_MATRIX_WORLDTOCAMERA.\n\tThey were unreadable with TIFF_SETGET_UNDEFINED, a regression from 3.9.2.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2139\n\n2010-04-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dir.c (_TIFFVSetField): Add a special error case for\n\twhen the tag count value is zero.  Error handling is still a\n\tregression since in 3.9.2, empty tags are skipped (with a warning)\n\trather than returning a hard error and refusing to read the file.\n\n\t* tools/ppm2tiff.c (main): While case for parsing comment line\n\trequires extra parenthesis to work as expected.  Reported by\n\tThomas Sinclair.\n\n2010-04-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_read.c (primarily): Add support for\n\tCHUNKY_STRIP_READ_SUPPORT where large strips are\n\tread in chunks for applications using TIFFReadScanline().\n\tThis is intended to make it more practical work with very\n\tlarge compressed one-strip files.   Feature is off by default.\n\tEnable by defining CHUNK_STRIP_READ_SUPPORT as a macro.\n\thttp://trac.osgeo.org/gdal/ticket/3514\n\n2010-03-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_flush.c: Use TIFFRewriteDirectory() when flushing\n\tdirectories so previously placed directories will be migrated to\n\tthe end of file if needed.\n\n2010-03-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c: change type of dec_bitsleft field to uint64\n\tto support operating on strips/tiles of more than 256MB.\n\thttp://trac.osgeo.org/gdal/ticket/3512\n\n2010-03-10  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_aux.c (_TIFFCheckRealloc): Improve error message so\n\tthat it is clearly a memory allocation error message, and also\n\tincludes the size of the allocation request.\n\n2010-02-22  Lee Howard  <faxguy@howardsilvan.com>\n\n\t* libtiff/tif_jpeg.c: Do not generate a JPEGTables tag when creating\n\tthe JPEG TIFF as is is not required in order to prevent it from\n\tbeing unused and filled with invalid data.  (Leave it to be\n\tgenerated by later activity.)\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2135\n\t* tools/tiff2pdf.c: Write the JPEG SOI headers into the TIFF strip\n\tdata rather than skipping them.  This fixes the ability to view in\n\tAcrobat Reader, Evince, and Ghostscript.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2135\n\t* libtiff/tif_fax3.c: Don't return error on badly-terminated MMR\n\tstrips.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2029\n\n2009-12-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Made JPEGDecodeRaw() check for buffer overruns.\n\tMade so that when working with downsampled images a stub function\n\treporting an error is used for tif_decoderow.  We cannot meaningfully\n\tsupport reading scanlines in this situation.  (#1936)\n\n\t* libtiff/tif_jpeg.c: Ensure that tif_scanlinesize is computed after\n\tresetting of the upsampling values (gdal:#3259).\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1936\n\n2009-11-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* contrib/dbs/tiff-grayscale.c, contrib/tif-palette.c,\n\ttools/ras2tiff.c: Fix resource leaks on error.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2121\n\n\t* libtiff/tif_{aux.c,dir.c,dir.h,dirinfo.c}: Return to handling\n\tTIFFTAG_REFERENCEBLACKWHITE as a field in the TIFF directory instead\n\tof as a custom(generic) field to avoid a potential reentrancy problem.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2125\n\n\t* libtiff/tif_color.c, libtiff/tif_getimage.c, libtiff/tiffio.h,\n\tman/TIFFcolor.3tiff: Make TIFFDisplay argument in TIFFCIELabToRGBInit\n\tconst, and display_sRGB static and const.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2124\n\n2009-11-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0alpha5 released.\n\n2009-11-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c: Updated tiffcrop from Richard Nolde.  This\n\tversion has undergone substantial testing with arbitrary sample\n\tbit depths.  Also eliminates GCC compilation warnings.\n\n2009-11-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* port/libport.h: Add extern declarations for getopt standard\n\tglobals.\n\n2009-10-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_lzw.c (LZWDecode, LZWDecodeCompat): Fix warnings\n\tnoticed in 64-bit build of libtiff with Visual Studio 2005.\n\tResolves \"Bug 2067 - Visual Studio 2005 64-bit warnings in\n\ttif_lzw.c\", http://bugzilla.maptools.org/show_bug.cgi?id=2067\n\n\t* libtiff/tif_pixarlog.c (PixarLogEncode): Fix non-important\n\twarning noticed in Visual Studio 2005 build. Resolves \"Bug 2068 -\n\tVisual Studio 2005 64-bit warning in tif_pixarlog.c\",\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2068\n\n2009-10-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_dirread.c: Eliminate GCC \"dereferencing type-punned\n\tpointer\" warnings.\n\n2009-10-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/tools.html: Add manual page links, and a summary\n\tdescription of tiffcrop.\n\n2009-10-07  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: x86_64 should use the same fill order as i386.\n\n2009-09-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: New tiffcrop from Richard\n\tNolde.  Major updates to add significant functionality for reading\n\tand writing tile based images with bit depths not a multiple of 8\n\twhich cannot be handled by tiffcp.\n\n2009-09-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_ojpeg.c (OJPEGWriteHeaderInfo): IJG JPEG 7 needs\n\tdo_fancy_upsampling=FALSE in order to read raw data.  Resolves\n\t\"Bug 2090 - OJPEG crash with libjpeg v7\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2090\n\n2009-09-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Fixed error recognition handling in RGBA\n\tinterface when stoponerror is set.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2071\n\n2009-08-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/{tiffcrop.c,tiffgt.c}: Applied patch from Oden Eriksson to\n\tfix build with gcc when using the \"-Wformat\n\t-Werror=format-security\" flags.\n\n2009-08-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/{bmp2tiff_palette.sh, bmp2tiff_rgb.sh, gif2tiff.sh,\n\tppm2tiff_pbm.sh, ppm2tiff_pgm.sh, ppm2tiff_ppm.sh}: Additional\n\tutilities tests.\n\n2009-08-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffinfo.c: tiffinfo should return error status to the\n\tcaller.  Register a private error callback to accomplish that.\n\n\t* test/Makefile.am (TIFFIMAGES): Add test images in BMP, GIF, and\n\tPNM formats so that we will be able to test more of the tools.\n\tWhile adding these test images I notice that bmp2tiff and gif2tiff\n\tonly support ancient versions of their respective formats.\n\n2009-08-27  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff 4.0.0alpha4 released.\n\n\t* HOWTO-RELEASE: Improved release instructions.\n\n2009-08-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* man/{TIFFClose.3tiff,raw2tiff.1,tiffcmp.1,tiffsplit.1}: Applied\n\tfixes for \"Bug 2023 - nroff errors in manual pages\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2023\n\n\t* tools/{rgb2ycbcr.c, tiff2rgba.c}: Applied fixes for \"Bug 2079 -\n\tCVE-2009-2347 libtiff: integer overflows in various inter-color\n\tspace conversion tools\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2079\n\n\t* libtiff/tif_print.c (TIFFPrintDirectory): Apply fix from Jay\n\tBerkenbilt for \"Bug 2024 - possible null pointer dereference with\n\tone-line fix\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2024\n\n\t* libtiff/tif_dirread.c (TIFFReadCustomDirectory): Apply patch\n\tfrom Jay Berkenbilt for \"Bug 1895 - logic error in tif_dirread.c:\n\tsegfault after setting tdir_tag = IGNORE\".\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1895\n\n2009-08-23  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am, test/tiffcrop*.sh: Split previously existing\n\ttiffcrop.sh into a collection of many specific tests.  Re-wrote\n\tall of the existing tests to be based on some simple shell\n\tfunctions.  Make distcheck works again.\n\n\tExport certain variables (MAKE, MAKEFLAGS, MEMCHECK) to tests and\n\tadded 'memcheck' and 'ptrcheck' targets to make it easy to run the\n\ttests under valgrind.\n\n2009-08-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/tiffcp-logluv.sh: Fix test so that it works with a VPATH\n\tbuild.\n\n\t* test/Makefile.am (AUTOMAKE_OPTIONS): Colorized tests was not\n\tactually activated since it needed to be enabled in this\n\tMakefile.am.  Also activated parallel-tests mode since it offers\n\tuseful features such as per-test .log files and a summary test\n\treport .log file.\n\n2009-08-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Updated autotools.  Autoconf 2.64, Automake 1.11,\n\tlibtool 2.2.6.  Enabled support for silent build rules\n\t(--enable-silent-rules or 'make V=0') and colorized tests.\n\n\t* html/{index.html, v3.9.0.html}: Update for 3.9.0 release.\n\n2009-06-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tests/tiffcp-logluv.sh: minimal testing of sgilog compression.\n\n\t* tools/tiffcp.c: add -c sgilog support.\n\n\t* libtiff/tif_luv.c: correct return codes from encoderow to be\n\t1 on success instead of zero.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2069\n\n\t* libtiff/tif_lzw.c: back out patch from #2065 and apply patch from\n\t#1085 for a better underflow fix that errors properly.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2065\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1985\n\n2009-06-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_strip.c: Remove an inappropriate assertion that often\n\tfails on oddly sized 12bit jpeg compressed ycbcr images.\n\n2009-06-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c: Fix buffer underflow bug.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2065\n\n2009-06-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure.ac, libtiff/tif_jpeg.c, libtiff/tif_jpeg_12.c: add support\n\tfor dual mode 8/12 bit jpeg support.\n\n2009-06-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: do not override the planar configuration to be\n\tcontig for one sample files if planar configuration is already set.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2057\n\n2009-06-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Add TIFFUnsetField.\n\n2009-05-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/{tif_jpeg.c,tif_ojpeg.c,tif_getimage.c}: Fixed various\n\terror reports to use \"%s\" as format string.\n\thttp://trac.osgeo.org/gdal/ticket/2976\n\n2009-03-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/{tif_fax3.c,tif_jpeg.c,tif_ojpeg.c}: Fix printdir chaining\n\tfor some codecs (#2020).\n\n2009-02-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_luv.c: Fix handling of tiled logluv images.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=2005\n\n2009-02-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Improve allocation safety when allocated\n\tbuffer for large tags.  (#1998)  Related to (#1993)\n\n2009-02-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffcrop.c: Don't default image->res_unit to INCH.  Now the\n\ttest suite should pass.\n\n2009-02-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Re-incorporated a sanity check on tag size,\n\tbut at the 2GB boundary to avoid overflow on 32bit systems.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1993\n\n\t* libtiff/tif_dirread.c: Remove some assertions that blow due to\n\tcorrupt files rather than in response to library internal\n\tinconsistencies.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1995\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1991\n\n\t* libtiff/tif_dirread.c: Fixed testing for failed result from\n\tTIFFReadDirectoryFindFieldInfo().\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1992\n\n2009-01-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_predict.c: Add support for 32bit integer horz. predictors.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1911\n\n\t* libtiff/tif_dirwrite.c: Fix byte swapping of next directory offset.\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1924\n\n\t* tools/tiffcrop.c: initialize xres/yres values.\n\n\t* test/*.sh - default ${srcdir} to local directory.\n\n\t* test/common.sh - start verbose mode after common settings.\n\n\t* libtiff/tif_dirinfo.c: Replace lfind() with local equivelent to\n\tavoid type mismatches on different platforms.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1889\n\n2009-01-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/{fax2tiff.c,thumbnail.c,tiff2pdf.c,tiff2ps.c,tiffdump.c,\n\ttiffsplit.c}: avoid warnings, mostly 32bit/64bit casting issues.\n\n\t* port,tools: Introduce libport.h, and include in tools if NEED_LIBPORT\n\tdefined, primarily to reduce prototype warnings on windows.\n\n\t* libtiff/tif_dirinfo.c,tif_dirread.c: Avoid warnings\n\tabout unused parameters, and uninitialized variables.\n\n2009-01-21  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/common.sh: Execute tests like 'make VERBOSE=TRUE check' in\n\torder to trace full execution detail while executing the test suite.\n\n2009-01-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffsplit.c: fix sampleformat to be shortv instead of longv.\n\n2009-01-20  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am (CLEANFILES): Make sure that test output files\n\tare removed by 'make clean'\n\n\t* Update autotools for 4.0.0 beta3\n\n\t* 4.0.0 beta3 produced.\n\n2009-01-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/tiffcrop.sh: New test script for tiffcrop from Richard\n\tNolde.\n\n\t* tools/tiff2ps.c: Remove spurious message to stderr.\n\n2009-01-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2ps.c: Incorporated significant functionality update\n\tfrom Richard Nolde.  In particular, support for rotating the image\n\tby 90, 180, 270, and 'auto' has been added.\n\n\t* man/tiffcrop.1: Incorporated documentation updates from Richard\n\tNolde.\n\n\t* tools/tiffcrop.c: Incorporated significant functionality update\n\tfrom Richard Nolde.\n\n2008-12-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiffio.h: GCC will now validate format specifications\n\tfor TIFFError(), TIFFErrorExt(), TIFFWarning(), and\n\tTIFFWarningExt() in order to reveal bugs.\n\n\t* Many fixes throughout to work better as a 64-bit build.\n\n2008-12-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/{tiff2pdf.c, tiff2ps.c, tiffinfo.c}: Offset and length\n\ttags now require 64-bit parameter rather than 32-bit.\n\n\t* libtiff/tif_dirread.c: Fixed issues with unaligned access to\n\t64-bit values.\n\n\t* tools/thumbnail.c: Eliminate crash noticed while running test\n\tsuite.\n\n2008-12-29  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_ojpeg.c (OJPEGLibjpegJpegSourceMgrFillInputBuffer):\n\tInitialize stack variables to avoid compiler warning.\n\n\t* tools/tiffinfoce.c (main): Use toff_t for offset type when\n\tretrieving offset of EXIF IFD.\n\n\t* libtiff/tiffio.h: Undeprecate toff_t and restore its use in the\n\tTIFFClientOpen() callback and other external function definitions.\n\n\t* tools/tiffinfo.c (main): Offset to EXIF IFD requires a 64-bit\n\ttype now.  Fixes crash when dumping files containing an EXIF IFD.\n\n\t* m4/libtool.m4: Update to libtool 2.2.6.\n\n2008-12-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c, tiffio.h: Introduce TIFFUnsetField() function.\n\n\t* libtiff/tif_jpeg.c: Avoid errors if the application writes a full\n\tstrip for the last partial strip in a jpeg compressed file.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1981\n\n2008-10-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_flush.c: Make sure that BEENWRITING is cleared when\n\twe take the shortcut to only update the strip/tile offsets in place.\n\thttp://trac.osgeo.org/gdal/ticket/2621\n\n2008-10-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jbig.c: Support the JBIG-KIT 2.0 (compatibility with\n\tthe older versions retained).\n\n2008-10-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Add #ifdefs for changes needed if using\n\tIPP enabled version of libjpeg from Intel.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1951\n\n2008-09-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Use byte counts of proper size (uint64).\n\tRequired for libtiff 4.0.\n\n\t* tools/tiffsplit.c: Use dynamically allocated array instead of static\n\twhen constructing output file names.\n\n2008-09-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Get rid of unsafe strcpy()/strcat() calls when\n\tdoing the filename/path construction.\n\n\t* tools/tiff2pdf.c: More appropriate format string in\n\tt2p_write_pdf_string(); avoid signed/unsigned mismatch.\n\n\t* libtiff/tif_lzw.c: Properly zero out the codetable. As per bug\n\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1929\n\n\t* libtiff/tif_lzw.c: Properly zero out the string table. Fixes\n\tCVE-2008-2327 security issue.\n\n2008-09-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Avoid unused TIFFReadDirEntryFloat() function.\n\n\t* libtiff/tif_dirwrite.c: modified to write IFDs as either IFD8 or IFD\n\tdepending on whether the file is bigtiff or classic tiff.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1917\n\n2008-08-12  Edward Lam  <edward@sidefx.com>\n\n\t* tools/tiffdump.c: When compiling for Microsoft Windows, apply\n\tconsistent (__int64) casting when testing if _lseeki64 has\n\tsuccessfully seeked as requested.  This is necessary for large\n\tfile support to work since off_t is only 32-bit.\n\n2008-07-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_strip.c: Replace assertions related to samplesperpixel != 3 or\n\tthe subsampling values not being 1, 2 or 4 (for jpeg compressed images)\n\twith control logic to return runtime errors (c/o Even Rouault) (#1927).\n\n2008-06-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffcrop.c: Fix some portability problems.\n\n\t* libtiff/tif_ojpeg.c: Use same jpeg/win32 boolean/FAR hacks as are\n\tused in tif_jpeg.c.\n\n\t* libtiff/tif_win32.c: Ensure TIFFOpenW() uses same FILE_SHARE flags\n\tas TIFFOpen().\n\n2008-06-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: Fix alignment problems affecting architectures\n\tlike Sparc/Solaris.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1892\n\n2008-05-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff.def: Add TIFFFindField\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1891\n\n2008-05-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_config.*.h, tiffconf.*.h: Remove SIZEOF_LONG definition, unused.\n\n\t* li2008-04-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\nbtiff/tif_win32.c: Replace custom Win32 memory api with generic\n\tPOSIX one.  No apparent value to use of GlobalAlloc() in the modern\n\tage.  http://bugzilla.maptools.org/show_bug.cgi?id=1885\n\n\t* libtiff/tiffconf.vc.h: Added JBIG_SUPPORT and MDI_SUPPORT items\n\tin windows version (care of Edward Lam).\n\n2008-05-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_codec.c: Avoid NULL pointer dereferencing for exotic\n\tcompression codec codes.\n\n\t* tif_dirwrite.c: fix potential memory leak.\n\n\t* tif_dirread.c: Fix unchecked malloc result.\n\n2008-05-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test {tiff2pdf.sh tiff2ps-EPS1.sh tiff2ps-PS1.sh tiff2ps-PS2.sh\n\ttiff2ps-PS3.sh tiffcp-g3-1d-fill.sh tiffcp-g3-1d.sh\n\ttiffcp-g3-2d-fill.sh tiffcp-g3-2d.sh tiffcp-g3.sh tiffcp-g4.sh\n\ttiffcp-split-join.sh tiffcp-split.sh tiffcp-thumbnail.sh\n\ttiffdump.sh tiffinfo.sh}: Added more test scripts based on\n\tsuggestions from Lee Howard posted to the tiff list on 13 Sep\n\t2007.\n\n2008-05-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.c: Add an assert in an effort to detect a\n\tpossible runtime problem reported by coverity.\n\n\t* contrib/iptcutil/iptcutil.c: Fixed memory leak of str.\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: Major update from Richard Nolde.\n\thttp://bugzilla.maptools.org/show_bug.cgi?id=1888\n\n\t* tools/tiffdither.c: remove dead onestrip code.  avoid memory leak.\n\n\t* tools/rgb2ycbcr.c: fix memory leak of raster buffer.\n\n\t* tools/tiffcp.c: Simplify inknames code to avoid pointless test.\n\tCleanup scanline allocation to avoid coverity warning.\n\n\t* tools/thumbnail.c: Check for TIFFOpen() failure.\n\n2008-05-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Use TIFF_SETGET_ASCII for PIXAR_TEXTUREFORMAT\n\tand PIXAR_WRAPMODES instead of TIFF_SETGET_UNDEFINED.  Not exactly clear\n\twhy this is needed.\n\n2008-05-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* Makefile.am (ACLOCAL_AMFLAGS): Libtool 2.2.4 does not like\n\t\"ACLOCAL_AMFLAGS=-I ./m4\".  It wants \"ACLOCAL_AMFLAGS=-I m4\".\n\n2008-04-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* test/: Test suite updated. Everything is passed now.\n\n\t* libtiff/tif_dirinfo.c: Fixed description of the\n\tTIFFTAG_NUMBEROFINKS tag.\n\n2008-04-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_dirwrite.c, tiffiop.h}:\n\tGet rid of some of \"dereferencing type-punned\" warnings by converting\n\ttdir_offset field of TIFFDirEntry structure into union.\n\n2008-04-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_flush.c, tif_dirwrite.c, tiffio.h, tiffiop.h}:\n\tTIFFRewriteField() renamed into _TIFFRewriteField() and moved out\n\tfrom the public interface. Type of its 'count' parameter changed\n\tfrom uint32 to tmsize_t.\n\n\t* /libtiff/tiffiop.h: Make tif_nfields and tif_nfieldscompat fields\n\tof the tiff structure have the size_t type instead of uint32.\n\n2008-04-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdump.c: Added support for MSVS 6.0.\n\n\t* libtiff/tif_dirread.c: Use custom functions _TIFFUInt64ToFloat()\n\tand _TIFFUInt64ToDouble() to convert 64-bit integers into floating\n\tpoint values on MSVS 6.0 platform.\n\n2008-03-14  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: Removed sanity checks on tags larger than 4MB in\n\tTIFFReadDirEntryArray() since they are interfering with seemingly\n\tlegitimate files.  http://trac.osgeo.org/gdal/ticket/2005\n\n2008-02-09  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Added handling for the case of number of values for\n\tPageNumber tag different from 2 (previously resulted in an assert\n\tindicating lack of handling and was forgotten about)\n\n2008-02-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Do not try to fixup subsampling tags based on\n\tthe actual jpeg data stream if the first strip/tile has zero size.\n\tThis is the case when GDAL creates a new file with zero sizes, closes\n\tand reopens it.\n\n2008-01-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2ps.c: fix up 64bit issues (from Edward Lam).\n\n2008-01-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: #ifdef out lots of unused functions.\n\n\t* Makefile.vc, libtiff/Makefile.vc, tools/Makefile.vc: Improve clean\n\ttargets.\n\n\t* tools/tiffinfo.c, tools/tiffcmp.c, tools/gif2tiff.c, tools/bmp2tiff.c\n\ttools/tiff2pdf.c: Fix 64-bit warnings when compiling under MSVC 2005\n\t(x64).\n\n\t* tools/tiffset.c: Changes to reflect the fact that TIFFFieldWithTag()\n\tand TIFFFieldWithName() now return TIFFField pointers instead of\n\tTIFFFieldInfo pointers.\n\n\t* tools/tiffdump.c: Added ssize_t typedef on Windows since it doesn't\n\texist. This makes it compile again on Windows\n\n\t* tif_aux.c, tif_getimage.c, tif_next.c, tif_predict.c, tif_win32.c,\n\ttiffconf.vc.h: Various 64bit fixes from Edward Lam identified on win64.\n\n\t* test/rewrite_tag.c: New test for TIFFRewriteField().\n\n2007-12-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: Added TIFFRewriteField().  This new function\n\trewrites one field \"on disk\" updating an existing directory\n\tentry.  Lots of limitations still...\n\n\t* tiffiop.h, tif_write.c, tif_dirread.c, tif_flush.c: Keep track of\n\tTIFF_DIRTYSTRIP separately from TIFF_DIRTYDIRECT to indicate that\n\tthe strip offset/size values are dirty but nothing else about the\n\tdirectory is dirty.  In flush handle \"just stripmaps dirty\" as a\n\tspecial case that just rewrites these values without otherwise\n\tmodifying the directory on disk using TIFFRewriteField().\n\n\tWe also modify logic so that in update mode the directory is not\n\tmarked dirty on read, but only when something is changed.  This\n\tmeans we need to keep track of updates to the stripmap stuff in\n\tTIFFAppendToStrip().\n\n2007-12-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_jpeg.c: Improve ability to switch between encoding and decoding\n\tin the jpeg code (gdal bug #2033).\n\n2007-11-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dir.c, tif_dirread.c, tif_dirwrite.c, tif_read.c, tif_write.c,\n\ttiffiop.h: Added TIFF_BUF4WRITE flag to indicate if contents of the\n\trawcp/rawcc buffer are for writing and thus may require flushing.\n\tNecessary to distinguish whether they need to be written to disk when\n\tin mixed read/write mode and doing a mixture of writing followed by\n\treading.  http://trac.osgeo.org/gdal/ticket/1758\n\n2007-11-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.com, libtiff/tif_vms.c: Better OpenVMS support. Patches\n\tfrom Alexey Chupahin.\n\n2007-11-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_write.c: Rip out the fancy logic in TIFFAppendToStrip() for\n\testablishing if an existing tile can be rewritten to the same location\n\tby comparing the current size to all the other blocks in the same\n\tdirectory.  This is dangerous in many situations and can easily\n\tcorrupt a file.  (observed in esoteric GDAL situation that's hard to\n\tdocument).  This change involves leaving the stripbytecount[] values\n\tunaltered till TIFFAppendToStrip().  Now we only write a block back\n\tto the same location it used to be at if the new data is the same\n\tsize or smaller - otherwise we move it to the end of file.\n\n\t* tif_dirwrite.c: Try to avoid writing out a full readbuffer of tile\n\tdata when writing the directory just because we have BEENWRITING at\n\tsome point in the past.  This was causing odd junk to be written out\n\tin a tile of data when a single tile had an interleaving of reading\n\tand writing with reading last.  (highlighted by gdal\n\tautotest/gcore/tif_write.py test 7.\n\n\t* tif_predict.c: use working buffer in PredictorEncodeTile to avoid\n\tmodifying callers buffer.\n\thttp://trac.osgeo.org/gdal/ticket/1965\n\n\t* tif_predict.c/h: more fixes related to last item, keeping a\n\tdistinct pfunc for encode and decode cases as these were getting\n\tmixed up sometimes.\n\thttp://trac.osgeo.org/gdal/ticket/1948\n\n2007-11-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_predict.c/h, tif_lzw.c, tif_zip.c: Improvements so that\n\tpredictor based encoding and decoding works in read-write update\n\tmode properly.\n\thttp://trac.osgeo.org/gdal/ticket/1948\n\n2007-10-24  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Fixed problem with bogus file triggering\n\tassert(td->td_planarconfig == PLANARCONFIG_CONTIG) in\n\tChopUpSingleUncompressedStrip\n\n2007-10-22  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_jpeg.c: Resolved buffer incrementation bug that lead to faulty images\n\tat best, access violation at worst, when subsampled JPEG compressed imagery\n\tis decoded without the JPEG_COLORMODE feature\n\n2007-10-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/index.html: Update \"people responsible\" section.\n\n2007-10-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: Fix problem with alpha setting in some cases\n\tas reported on the mailing list.\n\n2007-10-01  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* changed some more incorrect %lud printf flags to %lu\n\n2007-09-29  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Strip chopping interfered badly with uncompressed\n\tsubsampled images because it tried to divide subsampled rowblocks,\n\tleading to all sorts of errors throughout the library for these\n\timages. Fixed by making strip chopping divide in row counts that\n\tare a multiple of vertical subsampling value.\n\n2007-09-28  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Logical cast working around compiler warning\n\n\t* tif_read.c: Correction of some error flags and parameter lists\n\n2007-09-27  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirread.c: Made calculation of td_maxsamplevalue more robust\n\twhen dealing with large bitspersample values, shutting up purification\n\ttools that warn about truncation, though it remains incorrect and\n\tindicates a conceptual problem there.\n\n\t* tif_open.c: Moved early exit in case of 'h' flag (to disable reading\n\tof first IFD) to proper place because it badly interfered with memory\n\tmapping, resulting in mapping flag even with dummy mapping functions\n\tthat returned 0 whilst at the same time the mapping tif_size wasn't\n\tset, thus resulting in continuous incorrect beyond-eof errors.\n\n2007-09-24  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_dirinfo.c: Fixed (MSVC) compiler reports about\n\tinconsistent use of const in tiffFields and exifFields definition\n\n2007-09-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: Always write tile/strip offsets and sizes\n\tusing LONG8 type when output format is BigTIFF.  The\n\tTIFFWriteDirectoryTagLongLong8Array() function was restructured\n\taccordingly.\n\n\t* tif_dirread.c: Improvements to error reporting text in\n\tTIFFFetchDirectory().\n\n2007-09-19  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/images: Added a small collection of test images for use by\n\ttest programs and scripts.\n\t* test/tiffinfo.sh: A trivial example test script.\n\t* test/common.sh: Added small script for setting the environment\n\tused by script-based tests.\n\n2007-08-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: Write the tif_nextdiroff value instead of a fixed\n\tzero when writing directory contents to preserve the ability to\n\trewrite directories in place, even in the middle of a directory\n\tchain.\n\n\t* tif_dirinfo.c:  _TIFFMergeFields() now only merges in field\n\tdefinitions that are missing.  Existing definitions are silently\n\tignored.\n\n\t* tif_dirread.c: Add runtime error for fields for which no definition\n\tis found (in addition to an assert for developers) in\n\tTIFFFetchNormalTag().  Not sure if this is needed, but it seems\n\tprudent.\n\n2007-08-10  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: removed SubsamplingHor and SubsamplingVer\n\tfrom _TIFFRGBAImage structure to revert unwanted ABI change.\n\n2007-08-10  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_win32.c: use SetFilePointer instead of\n\tSetFilePointerEx, as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1580\n\n2007-07-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_stream.cxx: Put all callback functions declarations\n\tinside extern \"C\" block.\n\n\t* libtiff/{tif_lzw.c, tif_luv.c, tif_dumpmode.c, tif_print.c,\n\ttif_read.c, tif_strip.c, tif_thunder.c}: Use \"%I64d\" printf()\n\tformatter instead of \"%lld\" with MSVC compiler.\n\n\t* libtiff/{tiffiop.h, tif_aux.c}:  Added _TIFFUInt64ToFloat() and\n\t_TIFFUInt64ToDouble() functions.\n\n2007-07-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Handle the case of MSVC 6 when using 64-bit\n\tinteger constants.\n\n\t* libtiff/{Makefile.am, Makefile.v}: Do not distribute tiffconf.h,\n\tremove tif_config.h/tiffconf.h during cleaning. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1573\n\n\t* libtiff/tif_unix.c: Do not use O_LARGEFILE. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1577\n\n2007-07-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 4.0.0alpha released.\n\n2007-07-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Added missed extern optind as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1567\n\n\t* libtiff/{tif_close.c, tif_dirinfo.c, tiffiop.c, tif_dirread.c,\n\ttif_dir.h, tif_dir.c, tiffio.h}: Transition to the new-style tag\n\textending scheme completed.\n\n2007-07-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_stream.cxx: Adapt to use toff_t again.  Update to\n\tuse standard C++ library size types and attempt to detect overflow\n\tcases.\n\n2007-07-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_jpeg.c, tif_dir.h, tif_dir.c, tif_dirinfo.c, tiffio.h,\n\ttif_ojpeg.c, tif_print.c, tif_fax3.c, tif_dirread.c}: More work on new\n\ttag extending scheme. Use the new scheme everywhere.\n\n\t* libtiff/{tif_zip.c, tif_predict.c, tif_pixarlog.c, tif_luv.c,\n\ttif_fax3.c, tif_dirread.c, tif_dirwrite.c, tif_close.c, tif_ojpeg.c,\n\ttif_jpeg.c, tif_dirinfo.c, tif_dir.h, tiffio.h, tiffiop.h}:\n\tTIFFFIeldInfo structure replaced with TIFFField structure.\n\tTIFFFieldInfo retained for the backward compatibility.\n\n2007-07-05  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiff2pdf.c: Fix a compile problem when JPEG_SUPPORT is not\n\tdefined.\n\n2007-07-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tiff.h, tiffio.h, libtiff.def}: Unused\n\tTIFFReassignTagToIgnore() function and TIFFIgnoreSense enumeration\n\tremoved.\n\n\t* libtiff/{tif_dirinfo.c, tif_fax3.c, tif_jbig.c, tif_jpeg.c}: Move\n\ttags TIFFTAG_FAXRECVPARAMS, TIFFTAG_FAXSUBADDRESS,\n\tTIFFTAG_FAXRECVTIME and TIFFTAG_FAXDCS to the common tag directory.\n\tThese tags are not codec-specific and relate to image content, so\n\tprocess them as other normal tags.\n\n\t* libtiff/{tiffio.h, tif_dir.h}: TIFFTagValue structure moved from the\n\tpublic tiffio.h to private tif_dir.h.\n\n\t* contrib/{acorn, mac-cw, mac-mpw}: Removed as unmaintained and\n\toutdated.\n\n2007-07-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff{tif_acorn.c, tif_apple.c, tif_atari.c, tif_msdos.c,\n\ttif_win3.c}: Obsoleted portability stuff removed.\n\n\t* tools/tiff2ps.c:  Added support 16-bit images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1566\n\n\tPatch from William Bader.\n\n\t* tools/tiff2pdf.c: Fix for TIFFTAG_JPEGTABLES tag fetching and\n\tsignificant upgrade of the whole utility as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1560\n\n\tNow we don't need tiffiop.h in tiff2pdf anymore and will open output\n\tPDF file using TIFFClientOpen() machinery as it is implemented\n\tby Leon Bottou.\n\n2007-06-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Fix typo when substituting value for unsigned 8 bit type.\n\tAdded support for a TIFF_PTRDIFF_T type to use when doing pointer arithmetic.\n\tAdded support for a TIFF_SSIZE_T in order to return memory sizes but still\n\tallow returning -1 for errors.\n\t* libtiff/tiffconf.vc.h: Add porting type defintions for WIN32.\n\n2007-06-25  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* port/strtoull.c: New porting function in case strtoull() is not\n\tavailable on the target system.\n\t* configure.ac: Add configure support for determining sized types\n\tin a portable way and performing necessary substitutions in\n\ttif_config.h and tiffconf.h.  Updated tiff.h to use the new\n\tdefinitions.\n\n2007-04-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Check the tmpfile() return status as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=154\n\n2007-04-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.h, tif_dirread.c, tif_dirinfo.c, tif_jpeg.c,\n\ttif_fax3.c, tif_jbig.c, tif_luv.c, tif_ojpeg.c, tif_pixarlog.c,\n\ttif_predict.c, tif_zip.c}: Finally fix bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1274\n\n\tby introducing _TIFFMergeFieldInfo() returning integer error status\n\tinstead of void in case of problems with field merging (e.g., if the\n\tfield with such a tag already registered). TIFFMergeFieldInfo() in\n\tpublic API remains void. Use _TIFFMergeFieldInfo() everywhere and\n\tcheck returned value.\n\n2007-04-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* contrib/addtiffo/tif_overview.c: Fix problems with odd sized output\n\tblocks in TIFF_DownSample_Subsampled() (bug 1542).\n\n2007-04-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Changed JPEGInitializeLibJPEG() so that it\n\twill convert from decompressor to compressor or compress to decompress\n\tif required by the force arguments.  This works around a problem in\n\twhere the JPEGFixupTestSubsampling() may cause a decompressor to\n\tbe setup on a directory when later a compressor is required with the\n\tforce flag set.  Occurs with the addtiffo program for instance.\n\n2007-04-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: Significant update in\n\tfunctionality from Richard Nolde. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1525\n\n2007-03-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_fax3.c: \"inline static\" -> \"static inline\" for IRIC CC.\n\n2007-03-17  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* start of BigTIFF upgrade - CVS HEAD unstable until further notice\n\n2007-03-07  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: workaround for 'Fractional scanline' error reading\n\tOJPEG images with rowsperstrip that is not a multiple of vertical subsampling\n\tfactor. This bug is mentioned in:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1390\n\thttp://www.asmail.be/msg0054766825.html\n\n2007-03-07  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_win32.c: made inclusion of windows.h unconditional\n\n\t* libtiff/tif_win32.c: replaced preprocessor indication for consiously\n\tunused arguments by standard C indication for the same\n\n2007-02-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Use uint32 type instead of tsize_t in byte\n\tcounters in TIFFFetchData(). Should finally fix the issue\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=890\n\n2007-02-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: Properly handle tags with TIFF_VARIABLE writecount.\n\tAs per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1350\n\n\t* libtiff/tif_dirread.c: Added special function to handle\n\tSubjectDistance EXIF tag as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1362\n\n\t* tools/tiff2pdf.c: Do not assume inches when the resolution units\n\tdo not specified. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1366\n\n\t* tools/{tiffcp.c, tiffcrop.c}: Do not change RowsPerStrip value if\n\tit was set as infinite. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1368\n\n\t* tools/tiffcrop.c, man/tiffcrop.1: New tiffcrop utility contributed\n\tby Richard Nolde. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1383\n\n2007-02-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Workaround for incorrect TIFFs with\n\tExtraSamples == 999 produced by Corel Draw. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1490\n\n\t* libtiff/{tif_dirread.c, tif_read.c}: Type of the byte counters\n\tchanged from tsize_t to uint32 to be able to work with data arrays\n\tlarger than 2GB. Fixes bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=890\n\n\tIdea submitted by Matt Hancher.\n\n2007-01-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tif2rgba.c: This utility does not work properly on big-endian\n\tarchitectures. It was fixed including the bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1149\n\n2007-01-15  Mateusz Loskot <mateusz@loskot.net>\n\n\t* Submitted libtiff port for Windows CE platform\n\t* libtiff/tif_config.wince.h: Added configuration header for WinCE.\n\t* libtiff/tiffconf.wince.h: Ported old configuration header for WinCE.\n\t* libtiff/tif_wince.c: Added WinCE-specific implementation of some\n\tfunctons from tif_win32.c.\n\t* libtiff/tif_win32.c: Disabled some functions already reimplemented in tif_wince.c.\n\t* libtiff/tiffiop.h, port/lfind.c: Added conditional include of some\n\tstandard header files for Windows CE build.\n\t* tools/tiffinfoce.c: Ported tiffinfo utility for Windows CE.\n\n2006-11-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: TIFFAppendToStrip() - clear sorted flag if\n\twe move a strip.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1359\n\n2006-10-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: More fixes for vulnerabilities, reported\n\tin Gentoo bug ():\n\n\thttp://bugs.gentoo.org/show_bug.cgi?id=142383\n\n\t* libtiff/contrib/dbs/xtiff/xtiff.c: Make xtiff utility compilable.\n\tThough it is still far from the state of being working and useful.\n\n2006-10-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Save the state of printdir codec dependent\n\tmethod.\n\n\t* libtiff/tif_jpeg.c: Save the state of printdir codec dependent method\n\tas per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1273\n\n\t* libtiff/tif_win32.c: Fixed problem with offset value manipulation\n\tas per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1322\n\n\t* libtiff/{tif_read.c, tif_jpeg.c, tif_dir.c}: More fixes for\n\tvulnerabilities, reported in Gentoo bug ():\n\n\thttp://bugs.gentoo.org/show_bug.cgi?id=142383\n\n2006-09-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_fax3.c, tif_next.c, tif_pixarlog.c}: Fixed multiple\n\tvulnerabilities, as per\tGentoo bug ():\n\n\thttp://bugs.gentoo.org/show_bug.cgi?id=142383\n\n2006-09-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c, libtiff/tif_zip.c: Fixed problems with mixing\n\tencoding and decoding on the same read-write TIFF handle.  The LZW\n\tcode can now maintain encode and decode state at the same time. The\n\tZIP code will switch back and forth as needed.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=757\n\n2006-09-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff: Rename config.h.vc and tif_config.h.vc to config.vc.h and\n\ttif_config.vc.h for easier identification by folks using an IDE.\n\n2006-07-25  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_msdos.c: Avoid handle leak for failed opens.  c/o Thierry Pierron\n\n2006-07-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: take care not to flush out buffer of strip/tile\n\tdata in _TIFFWriteDirectory if TIFF_BEENWRITING not set.  Relates\n\tto bug report by Peng Gao with black strip at bottom of images.\n\n2006-07-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirwrite.c: make sure to use uint32 for wordcount in\n\tTIFFWriteNormanTag if writecount is VARIABLE2 for ASCII fields.\n\tIt already seems to have been done for other field types.  Needed\n\tfor \"tiffset\" on files with geotiff ascii text.\n\n2006-07-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* {configure.ac, libtiff/tif_config.h.vc, libtiff/tif_jbig.c}\n\t(JBIGDecode): jbg_newlen is not available in older JBIG-KIT and\n\tits use does not appear to be required, so use it only when it is\n\tavailable.\n\n2006-06-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Added missed EXIF tag ColorSpace (40961).\n\n\t* libtiff/tif_dirread.c: Move IFD fetching code in the separate\n\tfunction TIFFFetchDirectory() avoiding code duplication in\n\tTIFFReadDirectory() and TIFFReadCustomDirectory().\n\n2006-06-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: Fix handling of -q values.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=587\n\n2006-06-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_readdir.c: Added case in EstimateStripByteCounts() for tiled\n\tfiles.  Modified TIFFReadDirectory() to not invoke\n\tEstimateStripByteCounts() for case where entry 0 and 1 are unequal\n\tbut one of them is zero.\n\t  http://bugzilla.remotesensing.org/show_bug.cgi?id=1204\n\n2006-06-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_open.c, tif_dirread.c, tiffiop.h}: Move IFD looping\n\tchecking code in the separate function TIFFCheckDirOffset().\n\n\t* libtiff/tif_aux.c: Added _TIFFCheckRealloc() function.\n\n\t* tools/tiffcmp.c: Fixed floating point comparison logic as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1191\n\n\t* libtiff/tif_fax3.c: Fixed problems in fax decoder as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1194\n\n\t* tools/tiff2pdf.c: Fixed buffer overflow condition in\n\tt2p_write_pdf_string() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1196\n\n2006-06-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* {configure, configure.ac, libtiff/tif_jbig.c, tools/tiffcp.c}: Added\n\tsupport for JBIG compression scheme (34661 code) contributed by Lee\n\tHoward. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=896\n\n\t* configure, configure.ac: OJPEG support enabled by default.\n\n\t* contrib/ojpeg/: Removed. New OJPEG support does not need this patch.\n\n2006-06-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/{tif_dirinfo.c, tif_print.c} : Fix crash in\n\tTIFFPrintDirectory().  Joris Van Damme authored the fix.\n\n2006-04-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Unified line ending characters (always use '\\n')\n\tas per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1163\n\n\t* README.vms, Makefile.am, configure.com, libtiff/{Makefile.am,\n\ttif_config.h-vms, tif_stream.cxx, tif_vms.c, tiffconf.h-vms}:\n\tAdded support for OpenVMS by Alexey Chupahin, elvis_75@mail.ru.\n\n2006-04-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/{fax2ps.c, fax2tiff.c, ppm2tiff.c, ras2tiff.c, tiff2pdf.c}:\n\tProperly set the binary mode for stdin stream as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1141\n\n\t* man/{bmp2tiff.1, fax2ps.1, fax2tiff.1, gif2tiff.1, ras2tiff.1,\n\traw2tiff.1, rgb2ycbcr.1, sgi2tiff.1, tiff2bw.1, tiff2pdf.1, tiff2ps.1,\n\ttiff2rgba.1, tiffcmp.1, tiffcp.1, tiffdither.1,\ttiffdump.1, tiffgt.1,\n\ttiffset.1}: Improvements in page formatting as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1140\n\n\t* html/tools.html, html/man/Makefile.am, tools/tiff2pdf.c: Fixed\n\ttypos as per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1139\n\n2006-04-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* nmake.opt: use /EHsc for VS2005 compatibility.  Also define\n\t_CRT_SECURE_NO_DEPRECATE to avoid noise on VS2005.\n\n2006-04-12  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: Added support for planarconfig separate\n\tnon-subsampled YCbCr (i.e. separate YCbCr with subsampling [1,1])\n\n2006-04-11  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: Revision of all RGB(A) put routines\n\t- Conversion of unassociated alpha to associated alpha now done with\n\t  more performant LUT, and calculation more correct\n\t- Conversion of 16bit data to 8bit data now done with\n\t  more performant LUT, and calculation more correct\n\t- Bugfix of handling of 16bit RGB with unassociated alpha\n\n2006-04-11  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c:\n\t- When there is no alpha, gtTileSeparate and gtStripSeparate allocated\n\t  buffer for alpha strile and filled it, only to never read it back.\n\t  Removed allocation and fill.\n\t- Minor rename of vars in gtTileSeparate and gtStripSeparate\n\t  anticipating planned functionality extension\n\n2006-04-08  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: renamed pickTileContigCase to PickContigCase\n\tand pickTileSeparateCase to PickSeparateCase as both work on strips as\n\twell\n\n\t* libtiff/tif_getimage.c: moved img->get selection from\n\tTIFFRGBAImageBegin into PickContigCase and PickSeparateCase to create\n\tlogical hook for planned functionality extension\n\n2006-04-08  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_ojpeg.c: resolved memory leak that was a consequence\n\tof inappropriate use of jpeg_abort instead of jpeg_destroy\n\n2006-04-07  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: replaced usage of TIFFScanlineSize in\n\tgtStripContig with TIFFNewScanlineSize so as to fix buggy behaviour\n\ton subsampled images - this ought to get sorted when we feel brave\n\tenough to replace TIFFScanlineSize alltogether\n\n\t* libtiff/tif_ojpeg.c: fixed bug in OJPEGReadSkip\n\n2006-04-04  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tiffio.h: added new type tstrile_t\n\n\t* libtiff/tif_dir.h: changed types of td_stripsperimage and td_nstrips\n\tto new tstrile_t, types of td_stripoffset and td_stripbytecount to\n\ttoff_t*\n\n\t* libtiff/tif_ojpeg.c: totally new implementation\n\n\t* libtiff/tif_dirread.c: added several hacks to suit new support of\n\tOJPEG\n\n\t* libtiff/tif_getimage.c: removed TIFFTAG_JPEGCOLORMODE handling\n\tof OJPEG images in favor of tif_getimage.c native handling of\n\tYCbCr and desubsampling\n\n2006-03-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: JPEGVSetField() so that altering the photometric\n\tinterpretation causes the \"upsampled\" flag to be recomputed.  Fixes\n\tpeculiar bug where photometric flag had to be set before jpegcolormode\n\tflag.\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_jpeg.c: strip size related bugfix in encode raw\n\n\t* libtiff/tif_strip.c: temporarilly added two new versions of\n\tTIFFScanlineSize\n\t  - TIFFNewScanlineSize: proposed new version, after all related\n\t    issues and side-effects are sorted out\n\t  - TIFFOldScanlineSize: old version, from prior to 2006-03-21 change\n\tThis needs further sorting out.\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* contrib/addtiffo/tif_ovrcache.c: bugfix to correctly pass size\n\tof last truncated strip data to TIFFWriteEncodedStrip\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/{tif_jpeg.c, tif_strip.c}: bugfix of tif_jpeg decode raw\n\n2006-03-25  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tif_getimage.c: bugfix/rewrite of putcontig8bitYCbCr22tile\n\n\t* libtiff/tif_getimage.c: added putcontig8bitYCbCr12tile\n\n\t* libtiff/tif_read.c: added support for new TIFF_NOREADRAW flag to\n\tprepare\tthe path for new tif_ojpeg.c\n\n2006-03-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.8.2 released.\n\n\t* tools/Makefile.am: Use runtime paths linker flags when rpath\n\toption enabled.\n\n2006-03-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added missed exports as per bug\n\thttp://bugzilla.remotesensing.org/attachment.cgi?id=337\n\n\t* contrib/addtiffo/Makefile.vc, libtiff/Makefile.vc, port/Makefile.vc,\n\ttools/Makefile.vc: Makefiles improvements as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1128\n\n\t* nmake.opt libtiff/{tif_config.h.vc, tif_unix.c, tiffio.h},\n\ttools/{fax2ps.c, fax2tiff.c, tiff2pdf.c}: Fixed win32 I/O functions\n\tusage as per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1127\n\n\t* libtiff/tif_strip.c: Take subsampling in account when calculating\n\tTIFFScanlineSize().\n\n\t* tools/tiffcp.c: Do not set RowsPerStrip bigger than image length.\n\n2006-03-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Fixed wrong TIFFerror() invocations as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1125\n\n\t* tools/fax2ps.c: Fixed reading the input stream from stdin as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1124\n\n2006-03-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffiop.h: Added decalration for\n\t_TIFFSetDefaultCompressionState().\n\n\t* libtiff/{tif_jpeg.c, tif_fax3.c, tif_zip.c, tif_pixarlog.c,\n\ttif_lzw.c, tif_luv.c}: Use _TIFFSetDefaultCompressionState() in all\n\tcodec cleanup methods. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1120\n\n2006-03-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jpeg.c: Do not cleanup codec state in TIFFInitJPEG(). As\n\tper bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1119\n\n\t* tools/raw2tiff.c: Do not set RowsPerStrip larger than ImageLength.\n\tAs per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1110\n\n\t* libtiff/tiffiop.h: dblparam_t typedef removed; GLOBALDATA macro\n\tremoved; move here the STRIP_SIZE_DEFAULT macro definition.\n\n\t* libtiff/{tif_dirread.c, tif_strip.c}: Removed STRIP_SIZE_DEFAULT\n\tmacro definition.\n\n\t* libtiff/tif_dir.c: Use double type instead of dblparam_t.\n\n2006-03-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Do not check the PlanarConfig tag presence\n\tin TIFFReadDirectory, because it is always set at the start of\n\tfunction and we allow TIFFs without that tag set.\n\n2005-03-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.8.1 released.\n\n2006-03-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Fixed error reporting in TIFFFetchAnyArray()\n\tfunction as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n\t* libtiff/tif_dirread.c: More wise check for integer overflow\n\tcondition as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n\t* libtiff/{tif_jpeg.c, tif_pixarlog.c, tif_fax3.c, tif_zip.c}:\n\tProperly restore setfield/getfield methods in cleanup functions. As\n\tper bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n2006-03-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_predict.c, tif_predict.h}: Added new function\n\tTIFFPredictorCleanup() to restore parent decode/encode/field methods.\n\n\t* libtiff/{tif_lzw.c, tif_pixarlog.c, tif_zip.c}: Use\n\tTIFFPredictorCleanup() in codec cleanup methods. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n\t* libtiff/tif_dirread.c: Fixed integer overflow condition in\n\tTIFFFetchData() function. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1102\n\n2006-03-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_ojpeg.c: Set the ReferenceBlackWhite with the\n\tTIFFSetField() method, not directly. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1043\n\n\t* tools/ppm2tiff.c: Added support for PBM files as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1044\n\n2006-02-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Small code rearrangement in TIFFWriteScanline()\n\tto avoid crash as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1081.\n\n2006-02-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Functions t2p_sample_rgbaa_to_rgb() and\n\tt2p_sample_rgba_to_rgb() was used in place of each other, that was\n\tresulted in problems with RGBA images with associated alpha.\n\tAs per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1097\n\n2006-02-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirwrite.c: Properly write TIFFTAG_DOTRANGE tag as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=1088.\n\n\t* libtiff/tif_print.c: Properly read TIFFTAG_PAGENUMBER,\n\tTIFFTAG_HALFTONEHINTS, TIFFTAG_YCBCRSUBSAMPLING and TIFFTAG_DOTRANGE\n\ttags as per bug http://bugzilla.remotesensing.org/show_bug.cgi?id=1088.\n\n\t* tools/tiff2ps.c: Properly scale all the pages when converting\n\tmultipage TIFF with /width/height/center options set. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1080\n\n2006-02-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Do not create output file until all option checks\n\twill be done. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1072\n\n\t* tools/bmp2tiff.c: Added ability to create multipage TIFFs from the\n\tlist of input files as per bug:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1077\n\n2006-02-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_tile.c: Fix error reporting in TIFFCheckTile() as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=1063.\n\n\t* tools/tiffgt.c: Avoid crashing in case of image unsupported by\n\tTIFFRGBAImage interface.\n\n\t* libtiff/tif_color.c: Avoid overflow in case of wrong input as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=1065.\n\n2006-02-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: Fixed support for non-YCbCr encoded JPEG\n\tcompressed TIFF files, per submission from Dan Cobra.\n\n2006-02-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_packbits.c, tif_win32.c}: Properly\n\tcast values to avoid warnings. As per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1033.\n\n\t* libtiff/tif_dirinfo.c: Use TIFF_NOTYPE instead of 0 when\n\tappropriate. As per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1033.\n\n\t* libtiff/tif_aux.c: Fixed type of temporary variable in\n\t_TIFFCheckMalloc() as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1033.\n\n2006-02-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_aux.c: Return static array when fetching default\n\tYCbCrCoefficients (another problem, reported a the\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1029 entry).\n\n2006-02-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Special handling for PageNumber, HalftoneHints,\n\tYCbCrSubsampling and DotRange tags as per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1029\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1034\n\n\t* libtiff/tif_dirread.c: Use _TIFFGetExifFieldInfo() instead of\n\t_TIFFGetFieldInfo() in TIFFReadEXIFDirectory() call as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1026.\n\n2006-01-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtool related stuff updated from the 2.1a branch.\n\n2006-01-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/bmp2tiff,pal2rgb,ppm2tiff,ras2tiff,raw2tiff,sgi2tiff,\n\ttiff2bw,tiffcp: Fixed jpeg option processing so -c jpeg:r:50 works\n\tproperly as per bug:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1025\n\n2006-01-09  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Fix with_default_strip_size comparison as reported\n\tby Norihiko Murase.\n\n2006-01-08  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* test/Makefile.am (LIBTIFF): Due to linking against libtiff\n\tincorrectly, tests were not actually testing the uninstalled\n\tlibtiff.  Now they are.\n\n2006-01-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Change definitions for TIFFTAG_ICCPROFILE,\n\tTIFFTAG_PHOTOSHOP, TIFFTAG_RICHTIFFIPTC, TIFFTAG_XMLPACKET: readcount\n\tshould be uint32 value.\n\n2006-01-02  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/man/Makefile.am (htmldoc): Fix htmldoc rule so that it can\n\tbe used if build directory is not the same as source directory.\n\t* man/{TIFFGetField.3tiff, TIFFSetField.3tiff}: Documented\n\tTIFFTAG_PHOTOSHOP, TIFFTAG_RICHTIFFIPTC, and TIFFTAG_XMLPACKET,\n\tand re-sorted tag names in alphabetical order.\n\n2005-12-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.8.0 released.\n\n2005-12-28  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/bmp2tiff.c (main): Fixed warning regarding returning\n\tinconsistent types from a condition.\n\t* tools/tiffcmp.c (CheckLongTag): Eliminate warning due to printf\n\tformat.\n\t* tools/bmp2tiff.c: Reduce compilation warnings on big-endian CPUs.\n\n2005-12-28  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* html/{index.html, support.hml, libtiff.html}: Cleaned up HTML\n\n2005-12-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffio.h: Added VC_EXTRALEAN definition before including\n\twindows.h, to reduce the compile time.\n\n2005-12-26  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: Improve compilation under MinGW.\n\n2005-12-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_dirread.c, tif_dirinfo.c}:\n\ttiffFieldInfo and exifFieldInfo arrays definitions moved back to\n\ttif_dirinfo.c; added _TIFFGetFieldInfo() and _TIFFGetExifFieldInfo()\n\tprivate functions to retrieve FieldInfo arrays.\n\n2005-12-24  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/build.html: Added some additional instructions for when\n\tbuilding using MSVC under Windows.  Also fixed two HTML syntax\n\terrors and used HTML Tidy to tidy up the HTML syntax and\n\tformatting.\n\n2005-12-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_aux.c, tif_dir.c, tif_dir.h, tif_dirwrite.c,\n\ttif_print.c, tif_getimage.c}: Make InkSet, NumberOfInks, DotRange and\n\tStoNits tags custom.\n\n2005-12-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_aux.c, tif_dir.c, tif_dir.h, tif_print.c}: Make\n\tWhitePoint tag custom.\n\n\t* libtiff/{tif_dir.h, tiff.h}: More EXIF tags added.\n\n2005-12-23  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/tiffio.h: fixed typo that potentially resulted in\n\tredefininition of USE_WIN32_FILEIO\n\n\t* libtiff/*: Added more 'dual-mode' error handling: Done TIFFWarning\n\tcalls in core LibTiff.\n\n2005-12-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_print.c}: Make RichTIFFIPTC,\n\tPhotoshop and ICCProfile tags custom.\n\n2005-12-21  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* libtiff/*, contrib/*: Added 'dual-mode' error handling, enabling\n\tnewer code to get context indicator in error handler and still\n\tremain compatible with older code: Done TIFFError calls everywhere\n\texcept in tools\n\n2005-12-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Added many error reporting messages; fixed integer\n\toverflow as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=789\n\n2005-12-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* contrib/addtiffo/*: Major upgrade by Joris to support subsampled\n\tYCbCr images in jpeg compressed TIFF files.\n\n2005-12-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Return non-zero status when reading fails (again).\n\n2005-12-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Return non-zero status when reading fails.\n\n2005-12-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.h, tiff.h}: Added more EXIF tags.\n\n2005-12-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_print.c}: Make XMLPacket tag\n\tcustom.\n\n\t* tools/tiffinfo.c: Print EXIF directory contents if exist.\n\n\t* libtiff/tiff.h: Few EXIF tag numbers added.\n\n\t* libtiff/{tif_dirinfo.c, tif_dirread.c, tif_dir.h, tif_dir.c,\n\ttiffio.h}: Preliminary support to read custom directories. New\n\tfunctions: TIFFReadCustomDirectory() and TIFFReadEXIFDirectory().\n\n2005-12-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirinfo.c, tif_dirread.c, tif_dir.h, tif_dir.c}:\n\tMore work to implement custom directory read support.\n\n\t* libtiff/{tif_aux.c, tif_dirinfo.c, tif_dirread.c, tif_dir.h,\n\ttif_dir.c, tif_print.c}: Make YCbCrCoefficients and ReferenceBlackWhite\n\ttags custom.\n\n2005-12-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: One more workaround for broken\n\tStripByteCounts tag. Handle the case when StripByteCounts array filled\n\twith completely wrong values.\n\n2005-11-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Release file descriptor in case of failure\n\tin the TIFFOpenW() function as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1003\n\n\t* libtiff/tif_dirinfo.c: Correctly yse bsearch() and lfind()\n\tfunctions as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1008\n\n2005-11-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_open.c, tiff.h, tiffdump.c: Incorporate preliminary support\n\tfor MS MDI format.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=1002\n\n\t* .cvsignore: many files added, and a few update according\n\tto suggestion of Brad HArds on tiff mailing list.\n\n2005-11-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def, tiffiop.h, tiffio.h: Made TIFFFreeDirectory\n\tpublic.\n\n2005-10-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Properly calculate sizes of temporary arrays\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=943\n\n\t* tools/fax2tiff.c: Added option '-r' to set RowsPerStrip parameter\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=944\n\n\t* tools/tiffdump.c: Fixed typeshift and typemask arrays initialization\n\tproblem as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=946\n\n\t* tools/bmp2tiff.c: Fixed possible integer overflow error as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=965\n\n\t* libtiff/tif_dirinfo.c: Make XResolution, YResolution and\n\tResolutionUnit tags modifiable during write process. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=977\n\n\t* tools/tiffsplit.c: Copy fax related fields over splitted parts\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=983\n\n2005-10-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: Don't try and split single strips into \"0\" strips\n\tin ChopUpSingleUncompressedStrip.  This happens in some degenerate\n\tcases (like 1x1 files with stripbytecounts==0 (gtsmall.jp2 embed tiff)\n\n2005-10-20  Joris Van Damme  <joris.at.lebbeke@skynet.be>\n\n\t* tif_fax3.c: changed 'at scanline ...' style warning/errors\n\twith incorrect use of tif_row, to 'at line ... of\n\tstrip/tile ...' style\n\n2005-10-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_write.c: fixed setting of planarconfig as per bug report\n\ton the mailing list from Joris.\n\n2005-10-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, configure, nmake.opt, libtiff/{tif_config.h,\n\ttif_dirread.c}: Make the default strip size configurable via the\n\t--with-default-strip-size and STRIP_SIZE_DEFAULT options.\n\n2005-09-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* html/support.html: Fixed link to documentation on Greg Ward's\n\tLogLuv TIFF format.\n\n2005-09-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdump.c: Fixed crash when reading malformed tags.\n\n2005-09-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Added missed 'break' statement as per bug\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=932\n\n2005-09-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.4 released.\n\n\t* {configure, configure.ac, Makefile.am, autogen.sh}: Applied patch\n\tfrom Patrick Welche (all scripts moved in the 'config' and 'm4'\n\tdirectories).\n\n2005-09-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: reintroduce seek to avoid problem on solaris.\n\n2005-09-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: When prefreeing tv->value in TIFFSetFieldV\n\talso set it to NULL to avoid double free when re-setting custom\n\tstring fields as per:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=922\n\n2005-08-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: avoid signed/unsigned warning.\n\n\t* libtiff/tif_dirread.c: removed unused variable.\n\n2005-07-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: Fixed up support for swapping \"double complex\"\n\tvalues (128 bits as 2 64 bits doubles).  GDAL gcore tests now\n\tpass on bigendian (macosx) system.\n\n2005-07-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_aux.c, tif_dirread.c, tif_fax3.c, tiffiop.h}: Rename\n\tCheckMalloc() function to _TIFFCheckMalloc() and make it available\n\tglobally as an internal helper routine.\n\n2005-07-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: More improvements in the \"pass by value\" part of\n\tthe custom tags handling code.\n\n2005-07-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_dirinfo.c}: Do not upcast BYTEs to\n\tSHORTs in the TIFFFetchByteArray(). Remove TIFFFetchExtraSamples()\n\tfunction, use TIFFFetchNormalTag() instead as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=831\n\n\tRemove TIFFFetchExtraSamples() function, use TIFFFetchNormalTag()\n\tinstead.\n\n\t* libtiff/tiffconf.h.in: One more attempt to fix the AIX bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2005-07-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_print.c: Fixed printing of the BYTE and SBYTE arrays.\n\n\t* tools/tiffdump.c: Added support for TIFF_IFD datatype.\n\n2005-07-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Do not check the PlanarConfiguration field in\n\tthe TIFFWriteCheck() function in case of single band images (as per\n\tTIFF spec).\n\n2005-07-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* SConstruct, libtiff/SConstruct: Added the first very preliminary\n\tsupport for SCons software building tool (http://www.scons.org/).\n\tThis is experimental infrastructure and it will exist along with the\n\tautotools mechanics.\n\n2005-07-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* port/{getopt.c, strcasecmp.c, strtoul.c}: Update modules from\n\tthe NetBSD source tree (the old\t4-clause BSD license changed to\n\tthe new 3-clause one).\n\n\t* configure.ac, port/lfind.c, libtiff/tiffiop.h: Added lfind()\n\treplacement module.\n\n\t* port/dummy.c: Make the dummy function static.\n\n2005-07-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Fixed WhitePoint tag copying.\n\n\t* libtiff/{tif_dir.c, tif_dir.h, tif_dirinfo.c, tif_print.c}:\n\tMake FieldOfViewCotangent, MatrixWorldToScreen, MatrixWorldToCamera,\n\tImageFullWidth, ImageFullLength and PrimaryChromaticities tags custom.\n\n2005-07-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.3 released.\n\n\t* configure, configure.ac: Do not use empty -R option when linking\n\twith --enable-rpath.\n\n2005-07-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_open.c}: Added open option 'h' to avoid\n\treading the first IFD when needed. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=875\n\n\t* libtiff/tif_color.c: Better use of TIFFmin() macro to avoid side\n\teffects.\n\n2005-06-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Print two characters per loop in the\n\tt2p_write_pdf_trailer(). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=594\n\n\t* tools/tiffgt.c: Use MacOS X OpenGL framework when appropriate. As\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=844\n\n\t* acinclude.m4: Updated to latest OpenGL test macros versions.\n\n\t* libtiff/tiff.h: Use correct int size on Sparc 64bit/Sun compiler\n\tplatform. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=855\n\n2005-06-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Added support for ClipPath, XClipPathUnits\n\tand YClipPathUnits tags.\n\n2005-06-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/addtiffo/tif_ovrcache.c: Properly extract tile/strip size;\n\tuse pixel sized shift in contigous case.\n\n2005-06-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/addtiffo/{tif_overview.c, tif_ovrcache.c, tif_ovrcache.h}:\n\tMake overviews working for contiguos images.\n\n2005-06-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Replace runtime endianess check with the compile\n\ttime one.\n\n\t* libtiff/tif_predict.c: Floating point predictor now works on\n\tbig-endian hosts.\n\n2005-06-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Use _TIFFsetString() function when read custom\n\tASCII values.\n\n\t* libtiff/{tif_dirinfo.c, tif_dir.h, tif_dir.c, tif_print.c}: Make\n\tDocumentName, Artist, HostComputer, ImageDescription, Make, Model,\n\tCopyright, DateTime, PageName, TextureFormat, TextureWrapModes and\n\tTargetPrinter tags custom.\n\n\t* libtiff/tif_jpeg.c: Cleanup the codec state depending on\n\tTIFF_CODERSETUP flag (to fix memry leaks).\n\n\t* libtiff/tif_jpeg.c: Initialize JPEGTables array with zero after\n\tallocating.\n\n2005-05-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/Makefile.am: Added workaround for\n\tOpenBSD/MirOS soname problem as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=838\n\n\t* libtiff/tif_dirwrite.c: Use tdir_count when calling\n\tTIFFCvtNativeToIEEEDouble() in the TIFFWriteDoubleArray() function as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=845\n\n2005-05-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ppm2tiff.c: Fixed format string when read PPM file header with\n\tthe fscanf() function. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=861\n\n\t* libtiff/{tif_dirinfo.c, tif_print.c}: TIFFFetchByteArray() returns\n\tuint16 array when fetching the BYTE and SBYTE filds, so we should\n\tconsider result as pointer to uint16 array and not as array of chars.\n\tAs per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=831\n\n\t* libtiff/tif_dir.c: More efficient custom tags retrieval as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=830\n\n\t* libtiff/tif_win32.c: Use FILE_SHARE_READ | FILE_SHARE_WRITE share\n\tmode in CreateFile() call as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=829\n\n\t* libtiff/Makefile.am: Fixed parallel compilation of the libtiff and\n\tlibtiffxx libraries as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=826\n\n\t* contrib/addtiffo/{tif_overview.c, tif_ovrcache.h}: Sinchronized with\n\tGDAL.\n\n2005-05-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Substantial fix for addtiffo problems with\n\tJPEG encoded TIFF files.  Pre-allocate lots of space for jpegtables\n\tin directory.\n\n2005-05-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Changed the code that computes\n\tstripbytecount[0] if it appears bogus to ignore if stripoffset[0] is\n\tzero. This is a common case with GDAL indicating a \"null\" tile/strip.\n\n2005-05-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Check for JPEGTables tag presence before copying.\n\n2005-05-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Applied similar change to\n\tTIFFFetchPerSampleLongs and TIFFFetchPerSampleAnys.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=843\n\n\t* libtiff/tif_jpeg.c: added LIB_JPEG_MK1 support in JPEGDecodeRaw().\n\n2005-05-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\t* tools/tiff2pdfr.c, man/tiff2pdf.1: Calculate the tile width properly;\n\tadded new option '-b' to use interpolation in output PDF files (Bruno\n\tLedoux).\n\n2005-05-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Ensure that broken files with too many\n\tvalues in PerSampleShorts work ok instead of crashing.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=843\n\n2005-04-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdither.c: Copy the PhotometricInterpretation tag from the\n\tinput file.\n\n2005-04-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_predict.c: Added ability to encode floating point\n\tpredictor, as per TIFF Technical Note 3.\n\n2005-04-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_predict.h, tif_predict.c}: Added ability to decode\n\tfloating point predictor, as per TIFF Technical Note 3.\n\n2005-04-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tiffiop.h, tif_dir.c, tif_read.c, tif_swab.c}:\n\tAdded _TIFFSwab24BitData() and TIFFSwabArrayOfLong() functions used to\n\tswap 24-bit floating point values.\n\n\t* libtiff/tiff.h: Added predictor constants.\n\n2005-04-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_dir.c}: Use uint32 type for appropriate\n\tvalues in _TIFFVSetField() function. Inspired by the bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=816\n\n\t* man/TIFFSetField.3tiff: Fixed definition of the TIFFTAG_INKNAMES tag\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=816\n\n2005-03-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Do not read header in case the output file\n\tshould be truncated (Ron).\n\n\t* libtiff/{tif_dirinfo.c, tif_config.h.vc}: Use lfind() instead\n\tof bsearch() in _TIFFFindFieldInfoByName() function (Ron).\n\n\t* libtiff/{tiff.h, tif_dirinfo.c}: Fixes in EXIF tag ordering (Ron).\n\n2005-03-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/Makefile.am: Use libtool machinery to pass\n\trpath option.\n\n2005-03-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_print.c}: Handle all data types in custom\n\ttags.\n\n2005-03-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/dirinfo.c: Added DNG tags.\n\n\t* libtiff/{tif_dir.c, tif_print.c}: More improvements in custom tag\n\thandling code.\n\n\t* libtiff/tiff.h: More comments; added missed DNG tag (LensInfo);\n\tadded DNG 1.1.0.0 tags.\n\n\t* tools/tif2pdf.c: Fixed problem with alpha channel handling as per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=794\n\n\t* man/TIFFGetField.3tiff: Add a note about autoregistered tags.\n\n2005-03-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* nmake.opt: Build with Win32 CRT library by default.\n\n\t* tools/tiff2ps.c: Fixed typo in page size handling code.\n\n\t* libtiff/{tif_dir.c, tif_print.c}: Support for custom tags, passed\n\tby value.\n\n\t* libtiff/{tiff.h, tif_dirinfo.c, tiffiop.h}: Added EXIF related tags.\n\n2005-03-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.2 released.\n\n2005-03-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcmp.c: Added ability to compare the 32-bit integer and\n\tfloating point data; complain on unsupported bit depths.\n\n2005-03-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tif_stream.cxx: Use ios namespace instead of ios_base to support\n\tGCC 2.95.\n\n\t* libtiff/{tiff.h, tif_fax3.tif, tif_jpeg.c}: Applied correct patch from\n\tLee Howard for HylaFax DCS tag\n\t(see http://bugzilla.remotesensing.org/show_bug.cgi?id=771)\n\n2005-03-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, configure.ac: Use -rpath option instead of -R as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=732\n\n\t* libtiff/{tiff.h, tif_fax3.tif, tif_jpeg.c}: Applied patch from Lee\n\tHoward to support a new tag TIFFTAG_FAXDCS (34911) used in HylaFax\n\tsoftware. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=771\n\n\t* nmake.opt, html/build.html: Add more comments, change the config\n\tfile organization a bit as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=764\n\n\t* tools/tiffcmp.c: Use properly sized buffer in short arrays comparison\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=785\n\n2005-03-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: More logic to guess missed strip size as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=705\n\n\t* tools/fax2ps.c: Replace insecure mktemp() function with the\n\ttmpfile() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=786\n\n2005-02-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiff.h: Changed the int8 definition to be always signed char\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=727\n\n\t* libtiff/tiffio.h: Move TIFFOpenW() function into the extern \"C\"{}\n\tblock as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=763\n\n2005-02-03  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffgt.c: Fix problem on big-endian CPUs so that images\n\tdisplay more correctly.  Images display brighter than they should\n\ton a Sun workstation.\n\n2005-02-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Estimate strip size in case of wrong or\n\tsuspicious values in the tags. As per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=705\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=320\n\n\t* tools/tiff2ps.c: Fixed problem with page sizes as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=742\n\n2005-01-31  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiff.h (TIFFTAG_TILEWIDTH): Corrected description.\n\t(TIFFTAG_TILELENGTH): Corrected description.\n\n2005-01-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac: Fixes for --with-docdir option as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=759\n\n\t* libtiff/tif_open.c: Remove unnesessary TIFFSeekFile() call as per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=756\n\n\t* libtiff/tif_stream.cxx: Fixes for C++ stream interface from\n\tMichael Rinne and Edward Lam.\n\n2005-01-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac: Make the documentation directory location configurable\n\tvia the --with-docdir option (as suggested by Jeremy C. Reed).\n\n\t* libtiff/tif_color.c: Use double as the second argument of pow()\n\tfunction in TIFFCIELabToRGBInit(). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=741\n\n\t* libtiff/tif_pixarlog.c: Avoid warnings when converting float to\n\tinteger as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=740\n\n\t* libtiff/tif_getimage.c: Always fill the error message buffer in\n\tTIFFRGBAImageBegin() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=739\n\n2005-01-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jpeg.c: Added ability to read/write the fax specific\n\tTIFFTAG_FAXRECVPARAMS, TIFFTAG_FAXSUBADDRESS and TIFFTAG_FAXRECVTIME\n\ttags as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=736\n\n\t* libtiff/tif_win32.c: Fixed message formatting in functions\n\tWin32WarningHandler() and Win32ErrorHandler() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=735\n\n\t* tools/tiff2ps.c: Interpret the -w and -h options independently. As\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=689\n\n2005-01-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffio.h: Move the color conversion routines in the 'extern\n\t\"C\"' section as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=727\n\n\t* libtiff/tiff.h: Restore back the workaround for AIX Visual Age C\n\tcompiler to avoid double definition of BSD types as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n\t* libtiff/Makefile.am: Place the C++ stream API in the separate\n\tlibrary called libtiffxx to avoid unneeded dependencies. Probably\n\tthere will be more C++ API in the future. As per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=733\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=730\n\n2005-01-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffdump.c: Fixed problem when read broken TIFFs with the\n\twrong tag counts (Dmitry V. Levin, Martin Pitt).\n\n\t* configure.ac: Replace --disable-c++ with the --disable-cxx option as\n\tper bug http://bugzilla.remotesensing.org/show_bug.cgi?id=730\n\n2004-12-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: More fixes for multiple-alpha-channelled\n\tRGB-images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=713\n\n\n\t* tools/tiffset.c: Convert character option to integer value as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=725\n\n2004-12-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.1 released.\n\n\t* html/tiffset.1.html: Add missed manual page as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=678\n\n\t* libtiff/tiff.h: Revert back libtiff data type definitions as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=687\n\n2004-12-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Do not forget about TIFF_VARIABLE2 when\n\tchecking for tag count in TIFFReadDirectory() function. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=713\n\n\t* libtiff/{tif_dirread.c, tif_fax3.c}: More argument checking in\n\tCheckMallock() function.\n\n\t* libtiff/tif_getimage.c: Support for multiple-alpha-channelled\n\tRGB-images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=718\n\n2004-12-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: #define A1 bracketing for clean build on\n\tSunPro compiler.\n\n2004-12-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* autogen.sh: aclocal and autoheader should be executed after\n\tlibtoolize.  Also add '-I .' to aclocal invocation to check\n\tcurrent directory for macros.\n\n2004-12-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirwrite.c: Always write TIFFTAG_SUBIFD using LONG type\n\tas per bugs\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=703\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=704\n\n2004-12-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* nmake.opt: Link with the user32.lib in windowed mode. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=697\n\n\t* libtiff/tif_win32.c: Use char* strings instead of TCHAR in windowed\n\tmode as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=697\n\n\t* libtiff/tif_config.in.vc: Removed unneded definitions for\n\tread/open/close/lseek functions to fix the\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=680\n\n2004-12-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.c, tif_dirread.c}: Remove TIFFReassignTagToIgnore()\n\tcall from the TIFFReadDirectory() function. TIFFReassignTagToIgnore\n\tmust be removed in the future, as it was never used properly. As per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=692\n\n2004-11-30  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: Added a work-around in order to allow\n\tcompilation with the heavily modified version of libjpeg delivered\n\twith Cygwin.\n\n2004-11-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Properly handle tags, which have the uint32\n\tcounts. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=693\n\n\t* tools/fax2ps.c: Be able to extract the first page (#0). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=690\n\n2004-11-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_unix.c: Make UNIX module compilable (and usable)\n\ton Windows.\n\n\t* nmake.opt: Add missed DLLNAME variable.\n\n2004-11-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/makefile.vc: make it easier to rename the libtiff DLL.\n\n2004-11-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* man/libtiff.3tiff: Improvements in the \"LIST OF ROUTINES\" table as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=545\n\n\t* man/tiffset.1: Added manual page for tiffset tool written by Jay\n\tBerkenbilt. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=678\n\n2004-11-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_error.c: fixed TIFFerror call to be TIFFError.\n\n2004-11-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/document.html: Updated Adobe web links as per email from Joris.\n\n2004-11-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.hxx, tiffio.h}: C++ stream interface moved to new\n\tfile tiffio.hxx. We don't have any C++ in tiffio.h, those who want to\n\tuse C++ streams should #include <tiffio.hxx>.\n\n2004-11-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiff.h: Added Adobe DNG tags.\n\n\t* libtiff/tif_win32.c: Typo fixed.\n\n\t* libtiff/{tif_stream.cxx, tiffio.h}: C++ stream interface updated to\n\tbe compliant with the latest standard. Appropriate additions in\n\tmakefiles now completed.\n\n2004-11-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c, libtiff/tif_dirinfo.c: Properly handle the\n\tdifferent tag types. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=600\n\n2004-11-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_aux.c: Set the appropriate ReferenceBlackWhite array for\n\tYCbCr image which lacks that tag (noted by Hans Petter Selasky).\n\n2004-11-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_color.c: Division by zero fixed (Hans Petter Selasky).\n\n2004-11-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_stream.cxx, tiffio.h}: Added C++ stream interface\n\tcontributed by Edward Lam (see\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=654 for details).\n\tThough no changes in any makefiles yet.\n\n2004-11-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: Removed close() in TIFFClientOpen() if file\n\tis bad. This is the callers responsibility.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=651\n\n2004-11-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_win32.c, libtiff.def}: Added TIFFOpenW()\n\tfunction to work with the double byte strings (used to represent\n\tfilenames in some locales). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=625\n\n\t* libtiff/tif_dirread.c: Fixed problem when fetching BitsPerSample and\n\tCompression tags of type LONG from broken TIFFS as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=662\n\n\t* libtiff/tif_dirinfo.c: Fixed definition for TIFFTAG_RICHTIFFIPTC,\n\tthe writecount should have uint32 type. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=662\n\n\t* libtiff/tif_write.c: Fixed wrong if() statement in\n\tTIFFAppendToStrip() function as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=660\n\n2004-11-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Change definition for TIFFTAG_EXTRASAMPLES\n\tfield. The caller should supply a count when setting this field. As\n\tper bug\n\n\t http://bugzilla.remotesensing.org/show_bug.cgi?id=648\n\n\t* libtiff/{tif_jpeg.c, tif_ojpeg.c}: TIFFTAG_JPEGTABLES should have\n\tuint32 count. Use this type everywhere.\n\n2004-11-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_next.c: avoid use of u_long and u_char types.  Bug 653.\n\n2004-11-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2rgba.c: removed extra newlines in usage message.\n\n2004-10-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirwrite.c: Improvements in tag writing code.\n\n\t* tools/tiff2ps.c: Fixed wrong variable data type when read Position\n\ttags (Tristan Hill).\n\n2004-10-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiffiop.h: added fallback definition of assert() if we\n\tdon't have assert.h.\n\n2004-10-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Fixed case with the wrong decode routines\n\tchoosing when the incorrect Group4Options tag set. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=323\n\n\t* libtiff/tif_dirwrite.c: Fixed problem with passing count variable of\n\twrong type when writing the TIFF_BYTE/TIFF_SBYTE tags in\n\tTIFFWriteNormalTag().\n\n2004-10-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Fixed wrong variable data type when read Resolution\n\ttags (Peter Fales).\n\n\t* tools/{bmp2tiff.c, raw2tiff.c}: Get rid of stream I/O functions.\n\n2004-10-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2pdf.c: added casts to avoid warnings.\n\n\t* libtiff/libtiff.def: Added several more entry points required\n\tto link fax2tiff.c against the DLL on windows.\n\n2004-10-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, configure.ac: Added --enable-rpath option to embed linker\n\tpaths into library binary.\n\n2004-10-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: Check the malloc return value (Dmitry V. Levin).\n\n\t* libtiff/{tif_strip.c, tif_tile.c}: Zero division problem fixed\n\t(Vladimir Nadvornik, Dmitry V. Levin).\n\n2004-10-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0 released.\n\n2004-10-15  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tif_jpeg.c: There seems to be no need to include stdio.h\n\tin this file so its inclusion is removed.  Including stdio.h\n\tsometimes incurs an INT32 typedef conflict between MinGW's\n\tbasetsd.h and libjpeg's jmorecfg.h.\n\n2004-10-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* man/bmp2tiff.1: Added manual page for bmp2tiff utility.\n\n2004-10-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffcmp.c (leof): Renamed from 'eof' in order to avoid\n\tconflict noticed under MinGW.\n\t* ltmain.sh: Fix for MinGW compilation.\n\n2004-10-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* man/tiffsplit.1: Fixed to indicate using aaa-zzz, not aa-zz.\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=635\n\n2004-10-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirread.c, tif_jpeg.c, tif_luv.c, tif_ojpeg.c,\n\ttif_pixarlog.c, tif_write.c}: Handle the zero strip/tile sizes\n\tproperly (Dmitry V. Levin, Marcus Meissner).\n\n2004-10-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Type of the TIFFTAG_SUBIFD field changed\n\tto TIFF_IFD.\n\n2004-10-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/bmp2tif.c: Check the space allocation results.\n\n2004-10-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Initialize td_tilewidth and td_tilelength fields\n\tof the TIFFDirectory structure with the 0 instead of -1 to avoid\n\tconfusing integer overflows in TIFFTileRowSize() for striped images.\n\n\t* tools/tiff2pdf.c: Fixed TransferFunction tag handling reported\n\tby Ross A. Finlayson.\n\n\t* libtiff/tif_dir.c: Fixed custom tags handling as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=629\n\n2004-10-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Fix bug with tif_foundfield and reallocation\n\tof tif_fieldinfo.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=630\n\n2004-10-04  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* contrib/iptcutil/README: Added the missing README which goes\n\talong with iptcutil.\n\n2004-10-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_compress.c: Improved error reporting in\n\tTIFFGetConfiguredCODECs() (Dmitry V. Levin).\n\n2004-10-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0beta2 released.\n\n\t* libtiff/{tif_aux.c, tif_compress.c, tif_dirinfo.c, tif_dirwrite.c,\n\ttif_extension.c, tif_fax3.c, tif_luv.c, tif_packbits.c,\n\ttif_pixarlog.c, tif_write.c}: Added checks for failed memory\n\tallocations and\tinteger overflows (Dmitry V. Levin).\n\n\t* libtiff/tiff.h: Missed TIFF_BIGTIFF_VERSION constant added.\n\n2004-10-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: added a more informative message if a BigTIFF\n\tfile is opened.\n\n2004-09-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: changed type of XMLPacket (tag 700) to\n\tTIFFTAG_BYTE instead of TIFFTAG_UNDEFINED to comply with the info\n\tin the Adobe XMP Specification.\n\n2004-09-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_jpeg.c, tif_pixarlog.c}: Use _TIFFmemset() instead of\n\tmemset().\n\n\t* libtiff/{tif_dirread.c, tif_strip.c, tif_tile.c}: Applied patches\n\tfrom Dmitry V. Levin to fix possible integer overflow problems.\n\n2004-09-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Check for allocated buffers before clearing\n\t(Dmitry V. Levin).\n\n2004-09-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dir.h, tif_dir.c, tif_dirread.c, tif_write.c}:\n\tOptimize checking for the strip bounds.\n\n\t* libtiff/{tif_dirread.c, tif_strip.c}: TIFFScanlineSize() and\n\tTIFFRasterScanlineSize() functions report zero in the case of integer\n\toverflow now. Properly handle this case in TIFFReadDirectory()\n\t(patches from Dmitry V. Levin).\n\n2004-09-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_dirinfo.c, tif_strip.c, tif_tile.c}: Use TIFFhowmany8()\n\tmacro where appropriate.\n\n\t* tools/tiff2bw.c: Write ImageWidth/Height tags to output file, as\n\tnoted by Gennady Khokhorin.\n\n\t* libtiff/tif_dirread.c: Always check the return values, returned\n\tby the _TIFFmalloc() (Dmitry V. Levin).\n\n\t* libtiff/tif_dir.c: Fixed possible integer overflow _TIFFset*Array()\n\tfunctions (Dmitry V. Levin).\n\n\t* libtiff/{tif_dirread.c, tif_dir.c, tif_write.c}:\n\tPotential memory leak fixed in TIFFReadDirectory(), _TIFFVSetField(),\n\tTIFFGrowStrips() (found by Dmitry V. Levin).\n\n2004-09-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_compress.c}: Added TIFFGetConfiguredCODECs()\n\tto get the list of configured codecs.\n\n\t* libtiff/{tiffiop.h, tif_dirread.c}: More overflow fixes from\n\tDmitry V. Levin.\n\n2004-09-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Applied patch from Dmitry V. Levin to fix\n\tpossible integer overflow in CheckMalloc() function.\n\n2004-09-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_strip.c}: Use TIFFhowmany8() macro instead\n\tof plain TIFFhowmany() where appropriate.\n\n2004-09-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Initialize arrays after space allocation.\n\n2004-09-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0beta released.\n\n\t* libtiff/{tif_luv.c, tif_next.c, tif_thunder.c}: Several buffer\n\toverruns fixed, as noted by Chris Evans.\n\n2004-09-14  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* commit: Added a script to make it more convenient to commit\n\tupdates.  The CVS commit message is extracted from this ChangeLog\n\tfile.\n\n2004-09-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, configure, aclocal.m4, libtiff/{mkspans.c, tif_fax3.c,\n\ttif_getimage.c, tif_luv.c, tif_lzw.c, tif_ojpeg.c, tif_packbits.c,\n\ttif_predict.c, tif_read.c, tif_swab.c, tif_thunder.c, tif_write.c,\n\ttif_dir.c, tif_dirread.c, tif_dirwrite.c, tif_jpeg.c, tif_dirinfo.c,\n\ttif_vms.c, tif_print.c, tif_strip.c, tif_tile.c, tif_dir.h,\n\ttif_config.h.in, tiffiop.h}:\n\tGet rid of BSD data types (u_char, u_short, u_int, u_long).\n\n2004-09-13  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* libtiff/tiff.h: Fix column tagging. Reference current Adobe XMP\n\tspecification. Reference libtiff bug tracking system to submit\n\tprivate tag additions.\n\n2004-09-12  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* tools/tiffgt.c: Include \"tif_config.h\".\n\n\t* configure.ac: Use AM_PROG_CC_C_O since it is now needed to build\n\ttiffgt.  This results in the 'compile' script being added to the\n\tproject.\n\n\t* tools/Makefile.am (tiffgt_CFLAGS): Add extra build options\n\trequired to find OpenGL headers necessary to build tiffgt.  Also\n\tensure that the libtiff that we built is used rather than some other\n\tlibtiff installed on the system.\n\n2004-09-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, acinclude.m4, aclocal.m4: New macros to detect GLUT\n\tlibraries.\n\n2004-09-11  Bob Friesenhahn  <bfriesen@simple.dallas.tx.us>\n\n\t* configure.ac: Pass library configuration defines via\n\ttif_config.h rather than extending CPPFLAGS. Configure a\n\tlibtiff/tiffconf.h in order to satisfy application requirements\n\t(not used by library build). Do not define _POSIX_C_SOURCE=2 since\n\tthis causes failure to build on systems which properly respect\n\tthis request.\n\n\t* libtiff/tiffconf.h.in: New file to act as the template for the\n\tconfigured tiffconf.h\n\n\t* libtiff/files.lst (HDRS): Install the configured tiffconf.h.\n\n2004-09-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/internals.html: Split off a discussion of adding new tags\n\tinto addingtags.html.\n\n2004-09-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* test/{ascii_tag.c, long_tag.c}: Preliminary test suite added.\n\n\t* tools/tiff2pdf.c: Fixed reading TransferFunction tag as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=590\n\n\t* libtiff/tif_print.c: Fixes in InkNames and NumberOfInks reporting.\n\n\t* libtiff/tif_dirread.c: Don't reject to read tags of the\n\tSamplesPerPixel size when the tag count is greater than number of\n\tsamples as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=576\n\n\t* libtiff/tiff.h: Use _TIFF_DATA_TYPEDEFS_ guardian to switch off\n\tdefining int8/uint8/... etc. types. As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=607\n\n2004-09-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2ps.c, tools/tiffmedian.c: fiddle with include files\n\tto avoid compile warnings about getopt() and a few other things.\n\n2004-09-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Use memcpy() function instead of pointer\n\tassigning magic in TIFFFetchFloat().\n\n2004-09-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_open.c}: Applied patches from Joris Van Damme\n\tto avoid requirement for tiffiop.h inclusion in some applications. See\n\there\n\n\thttp://www.asmail.be/msg0054799560.html\n\n\tfor details.\n\n\t* tools/fax2tiff.c: Use the new functions in the code.\n\n2004-08-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Initialize arrays properly.\n\n\t* tools/tiff2ps.c: Avoid zero division in setupPageState() function;\n\tproperly initialize array in PSDataBW().\n\n2004-08-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: More fixes for bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=590\n\n\tfrom Ross Finlayson.\n\n2004-08-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Fixed problem with uninitialized values.\n\n\t* libtiff/tif_dir.c: Initialize tif_foundfield data member in the\n\tTIFFDefaultDirectory() (in addition to 2004-08-19 fix).\n\n\t* tools/tiff2pdf.c: Fixed a bunch of problems as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=590\n\n2004-08-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Applied patch from Ross Finlayson that checks\n\tthat the input file has compression, photometric interpretation,\n\tetcetra, tags or if not than a more descriptive error is returned.\n\n\t* libtiff/tif_dirread.c: Fixed problem in TIFFReadDirectory() in the\n\tcode, responsible for tag data type checking.\n\n2004-08-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_dirinfo.c}: Fixed problem with the static\n\tvariable as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=593\n\n2004-08-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ras2tiff.c: Fixed issue with missed big-endian checks as per\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=586\n\n2004-08-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_config.h.in, tif_config.h.vc}: config.h.in and\n\tconfig.h.vc files renamed in the tif_config.h.in and tif_config.h.vc.\n\n2004-07-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_lzw.c: LZW compression code is merged back from the\n\tseparate package. All libtiff tools are updated to not advertise an\n\tabcence of LZW support.\n\n2004-07-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffio.h: Revert thandle_t back to void* type.\n\n2004-07-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_read.c, tif_tile.c, tif_strip.c}: Fixes in error\n\tmessages, as suggested by Bernd Herd.\n\n2004-07-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Call TIFFError() instead of producing warnings\n\twhen setting custom tags by value. Reported by Eric Fieleke.\n\n2004-06-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/bmp2tiff.c: Add missed RawsPerStrip setting.\n\n2004-06-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/bmp2tiff.c: Added new utility to convert Windows BMP files\n\tinto TIFFs.\n\n2004-06-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.7.0alpha released.\n\n2004-06-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiff.h, tif_dirwrite.c, tif_fax3.c, tif_packbits.c,}: Get rid\n\tof ugly 64-bit hacks, replace them with the clever (autoconf based )\n\tones :-).\n\n\t* libtiff/tiffio.h: Define thandle_t as int, not void* (may cause\n\tproblems in 64-bit environment).\n\n2004-06-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffset.c: tiffset now can set any libtiff supported tags.\n\tTags can be supplied by the mnemonic name or number.\n\n\t* libtiff/{tiffio.h, tif_dir.h, tif_dirinfo.c,}: Added two new\n\tfunctions TIFFFindFieldInfoByName() and TIFFFieldWithName().\n\n2004-05-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_ojpeg.c: Fixed problem with duplicated SOI and SOF\n\tmarkers as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=581\n\n2004-05-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Don't forget to copy Photometric\n\tInterpretation tag.\n\n2004-05-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_open.c, tiffio.h}: New function added:\n\tTIFFIsBigEndian(). Function returns nonzero if given was file written\n\tin big-endian order.\n\n\t* tools/tiffsplit.c: Fixed problem with unproperly written multibyte\n\tfiles. Now output files will be written using the same byte order\n\tflag as\tin the input image. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=574\n\n\tfor details.\n\n2004-05-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: added (untested) support for printing\n\tSSHORT, SLONG and SRATIONAL fields.\n\n\t* tools/tiffcp.c: close output file on normal exit.\n\n2004-05-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Avoid reading CCITT compression options\n\tif compression type mismatches. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=565\n\n2004-04-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_strip.c: Never return 0 from the\n\tTIFFNumberOfStrips().\n\n2004-04-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Workaround for broken TIFF writers which\n\tstore single SampleFormat value for multisampled images. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=562\n\n2004-04-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure.ac, libtiff/{tiff.h, config.h.in}: Added tests for int8,\n\tint16 and int32 types to avoid complains on some compilers. Details at\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2004-04-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2pdf.c: Fixed problem with unaligned access as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=555\n\n2004-04-14  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Allow in-place updating of the compressed\n\timages (don't work properly with all codecs). For details see GDAL bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=534\n\n2004-04-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_jpeg.c: Workaround for wrong sampling factors used\n\tin the Intergarph JPEG compressed TIFF images as per bug:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=532\n\n2004-04-04  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: close clientdata if TIFFClientOpen() fails\n\tvia bad2.\n\n2004-03-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Properly set Photometric Interpretation in case of\n\tJPEG compression of grayscale images.\n\n\t* tools/tiffcp.c: Don't emit warnings when Orientation tag does not\n\tpresent in the input image.\n\n2004-03-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* {many}: The first attempt to switch to autotools.\n\n2004-03-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Use dummy mmap/munmap functions in\n\tTIFFClientOpen() when the appropriate client functions was not\n\tsupplied by user.\n\n2004-03-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/ycbcr.c: fixed main() declaration as per:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=513\n\n2004-02-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffsplit.c: Copy JPEGTables tag contents for JPEG compressed\n\timages. Reported by Artem Mirolubov.\n\n\t* libtiff/tif_dirread.c: Fixed problem with handling TIFF_UNDEFINED\n\ttag type in TIFFFetchNormalTag() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=508\n\n2004-02-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_codec.c: Fixed typo in TIFFInitPackBits name as per:\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=494\n\n2004-02-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_fax3.c: Fixed problem with CCITT encoding modes as per\n\tbug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=483\n\n\tBut we need more work on fax codec to support update mode.\n\n2004-01-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Added TIFFCurrentDirOffset, TIFFWriteCheck,\n\tTIFFRGBAImageOK, and TIFFNumberOfDirectories as suggested by\n\tScott Reynolds.\n\n2004-01-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiff.h: Fixed tag definitions for TIFFTAG_YCLIPPATHUNITS\n\tand TIFFTAG_INDEXED as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=475\n\n\t* libtiff/{tif_win32.c, tif_unix.c}: Check whether the pointer is\n\tNULL before proceeding further as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=474\n\n\tCheck results, returned by the TIFFFdOpen() before returning and close\n\tfile if TIFFFdOpen() failed as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=468\n\n\t* libtiff/tif_open.c: More fixes for\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=468\n\n2004-01-28  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{libtiff.def, tif_close.c, tiffio.h, tif_open.c}: Separate\n\tTIFFCleanup() from the TIFFClose() in order to fix the bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=468\n\n\t* tools/tiffcp.c: Fixed problem with wrong interpretation of the\n\tInkNames tag as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=466\n\n\tMemory leak fixed.\n\n2004-01-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: Fixed handling of writable ASCII tags that\n\tare field_passcount=TRUE properly.  Arguably anonymous custom tags\n\tshould be declared as passcount=FALSE, but I don't want to change\n\tthat without a careful review.\n\n2004-01-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_write.c: Fixed reporting size of the buffer in case of\n\tstripped image in TIFFWriteBufferSetup(). As per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=460\n\n2004-01-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Incomplete cleanup in TIFFFreeDirectory(),\n\tpatch from Gerben Koopmans.\n\n\t* libtiff/tif_dirread.c: Check field_passcount value before setting\n\tthe value of undefined type, patch from Gerben Koopmans.\n\n2004-01-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Fixed problem with wrong Photometric setting for\n\tnon-RGB images.\n\n2003-12-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_win32.c: Fixed problem with _TIFFrealloc() when the NULL\n\tpointer passed. Patch supplied by Larry Grill.\n\n\t* libtiff/{tiff.h, tif_fax3.c}:Fixes for AMD 64 platform as\n\tsuggested by Jeremy C. Reed.\n\n2003-12-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff 3.6.1 released.\n\n2003-12-24  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* config.guess, config.sub: Updated from the recent upstream.\n\n2003-12-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_color, tif_getimage.c, tiffio.h}, man/TIFFcolor.3t:\n\tMore cleanups in color conversion interface, added appropriate manual\n\tpage.\n\n2003-12-19  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_extension.c, tif_dirinfo.c, tiff.h}: Warnings fixed as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=357\n\n\t* tools/tiff2ps.c: Added support for alpha channel. Fixes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=428\n\n\t* libtiff/{libtiff.def, tif_color.c, tif_getimage.c, tiffio.h}:\n\tInterface for Lab->RGB color conversion is finally cleaned up.\n\tAdded support for ReferenceBlackWhite tag handling when converted from\n\tYCbCr color space. The latter closes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=120\n\n2003-12-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tiffio.h}: Avoid warnings.\n\n\t* libtiff/makefile.vc, tools/makefile.vc: Support for IJG JPEG\n\tlibrary.\n\n2003-12-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tif_aux.c}: Read WhitePoint tag from the\n\tfile and properly use it for CIE Lab->RGB transform.\n\n2003-12-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tif_color.c, tiffio.h}: YCbCr->RGB\n\tconversion routines now in the tif_color.c module. New function\n\tTIFFYCbCrtoRGB() available in TIFF API.\n\n\t* libtiff/tif_dirwrite.c: Handle TIFF_IFD tag type correctly.\n\n2003-12-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tif_color.c, tiffio.h}: Improvements in\n\tCIE Lab conversion code. Start moving YCbCr stuff to the tif_color.c\n\tmodule.\n\n\t* libtiff/{tif_getimage.c, tiffio.h}, man{TIFFReadRGBAImage.3t,\n\tTIFFReadRGBAStrip.3t, TIFFReadRGBATile.3t, TIFFRGBAImage.3t}:\n\tFinally resolved problems with orientation handling. TIFFRGBAImage\n\tinterface now properly supports all possible orientations, i.e. images\n\twill be flipped both in horizontal and vertical directions if\n\trequired. 'Known bugs' section now removed from the appropriate manual\n\tpages. Closed bug entry:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=322\n\n2003-12-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dir.c: Fixed order of the parameters in TIFFError()\n\tfunction calls as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=440\n\n2003-11-28 Ross Finlayson  <libtiff@apexinternetsoftware.com>\n\n\t* tools/tiff2pdf.c:  Some bugs fixed.\n\n2003-11-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_luv.c: Fixed bug in 48-bit to 24-bit conversion routine,\n\treported by Antonio Scuri.\n\n\t* man/tiff2pdf.1: Few improvements in page layout.\n\n\t* Makefile.in, /man/Makefile.in, /html/man/tiff2pdf.1.html:\n\t Added support fpr tiff2pdf manual page.\n\n2003-11-26 Ross Finlayson  <libtiff@apexinternetsoftware.com>\n\n\t* /man/tiff2pdf.1:  File added to repository.\n\n2003-11-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in, /tools/{Makefile.in, makefile.vc}:\n\t Added support fpr tiff2pdf utility.\n\n2003-11-25  Ross Finlayson  <libtiff@apexinternetsoftware.com>\n\n\t* /tools/tiff2pdf.c:  File added to repository.\n\n2003-11-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/raw2tiff.c: sqrtf() replaced with sqrt().\n\n2003-11-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/raw2tiff.c: #include <getopt.h> removed.\n\n\t* tools/{Makefile.in, tiffgt.c}: Unmaintained and platform dependent\n\tsgigt utility removed and replaced with the completely rewritten\n\tportable tiffgt tool (depend on OpenGL and GLUT). Initial revision,\n\tthere is a lot of things to improve.\n\n\t* libtiff/tif_ojpeg.c: TIFFVGetField() function now can properly\n\textract the fields from the OJPEG files. Patch supplied by Ross\n\tFinlayson.\n\n\t* libtiff/{tiffio.h, tif_codec.c}, man/{libtiff.3t, TIFFcodec.3t}:\n\tAdded new function TIFFIsCODECConfigured(), suggested by Ross\n\tFinlayson.\n\n2003-11-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirinfo.c: Implemented binary search in\n\t_TIFFMergeFieldInfo(). Patch supplied by Ross Finlayson.\n\n\t* libtiff/tif_dir.h: _TIFFFindOrRegisterdInfo declaration replaced\n\twith _TIFFFindOrRegisterFieldInfo as reported by Ross Finlayson.\n\n2003-11-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: do not mark all anonymously defined tags to be\n\tIGNOREd.\n\n2003-11-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/pds/{tif_pdsdirread.c, tif_pdsdirwrite.c}: Use\n\tTIFFDataWidth() function insted of tiffDataWidth array.\n\n2003-11-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiff.h, tif_dirinfo.c}: Added support for IFD (13)\n\tdatatype, intruduced in \"Adobe PageMaker TIFF Tech. Notes\".\n\n2003-11-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Makefile.in: fixed missing backslash for tif_color.c in list.\n\n2003-11-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_color.c, tif_getimage.c, tiffio.h, Makefile.in}:\n\tNew color space conversion code: CIE L*a*b* 1976 images now supported\n\tby the TIFFRGBAImage interface. All introduced routines go to new\n\tmodule tif_color.c. Eventually all color conversion functions should\n\tbe moved there.\n\n2003-11-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/{ras2tiff.c, rasterfile.h}: Properly determine SUN Rasterfiles\n\twith the reverse byte order (it is reported by the magic header\n\tfield). Problem reported by Andreas Wiesmann.\n\n\t* tools/raw2tiff.c, man/raw2tiff.1: Few improvements in correlation\n\tcalculation function. Guessing mechanics now documented in manual page.\n\n2003-11-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/raw2tiff.c: Implemented image size guessing using\n\tcorrelation coefficient calculation between two neighbour lines.\n\n2003-11-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_tile.c: remove spurious use of \"s\" (sample) in the\n\tplanarconfig_contig case in TIFFComputeTile().\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=387\n\n2003-11-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffiop.h: New macros: TIFFmax, TIFFmin and TIFFrint.\n\n2003-11-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffio.h, tif_strip.c}, man/{TIFFstrip.3t, libtiff.3t}:\n\tAdded TIFFRawStripSize() function as suggested by Chris Hanson.\n\n2003-11-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_lzw.c, tif_fax3.c}: Proper support for update mode as\n\tper bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=424\n\n2003-10-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added TIFFReadRGBAImageOriented.\n\n\t* html/build.html: Added note about GNU make requirement.\n\n2003-10-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in: Fixes in using MAKEFLAGS as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=418\n\n\t* port/install.sh.in: Option -p added to the mkdir command to create\n\tall directory tree structure before installing.\n\n2003-10-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/tiff2ps.c: #include <strings.h> replaced with the\n\t#include <string.h>.\n\n2003-10-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in: Add an absolute path to the test_pics.sh call.\n\n2003-10-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tiffcomp.h: #define _BSDTYPES_DEFINED when defining BSD\n\ttypedefs.\n\n2003-10-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, libtiff/{Makefile.in, mkversion.c}:\n\tRelative buildings fixed.\n\n\t* tools/Makefile.in: Added \"-I../libtiff\" to the tiffset building\n\trule.\n\n2003-10-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in: Added missed v3.6.0.html.\n\n\t* libtiff/tiffio.h: Typo fixed: ORIENTATION_BOTTOMLEFT replaced with\n\tORIENTATION_BOTLEFT.\n\n2003-10-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* 3.6.0 final release.\n\n2003-10-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tif_getimage.c, tiffio.h}, man/TIFFReadRGBAImage.3t: New\n\tfunction TIFFReadRGBAImageOriented() implemented to retrieve raster\n\tarray with user-specified origin position as suggested by Jason Frank.\n\tSee\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=322\n\n\tfor details.\n\n\t* tools/tiff2rgba.c: Switched to use TIFFReadRGBAImageOriented()\n\tinstead of TIFFReadRGBAImage().\n\n\t* tools/tiff2ps.c: Fixed possible endless loop as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=404\n\n2003-09-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Check field counter against number of fields\n\tin order to fix\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=366\n\n\t* libtiff/tif_fax3.c: Fix wrong line numbering as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=342\n\n2003-09-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/{tiffiop.h, tif_dirread.c, tif_dir.c, tif_open.c,\n\ttif_close.c}: Store a list of opened IFD to prevent looping as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=383\n\n2003-09-23  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: More fixes for\tEstimateStripByteCounts(). See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=358\n\n2003-08-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffmedian.c: int declaration replaced with the uint32 to\n\tsupport large images as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=382\n\n2003-08-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n \t* libtiff/Makefile.in: Fixed problem with building in different\n\tdirectory.\n\n\t* tools/tiff2ps.c: Added missing #include <strings.h>.\n\n\t* libtiff/tif_dirwrite.c: More fixes for custom tags code\n\tfrom Ashley Dreier.\n\n2003-08-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Added page size setting when creating PS Level 2.\n\tPatch submitted by Balatoni Denes (with corrections from Tom\n\tKacvinsky).\n\n\t* tools/tiff2ps.c: Fixed PS comment emitted when FlateDecode is\n\tbeing used. Reported by Tom Kacvinsky.\n\n\t* libtiff/tif_dirwrite.c: Fixed problem with custom tags writing,\n\treported by Ashley Dreier.\n\n\t* libtiff/tif_print.c: Fixed problem with float tags reading, support\n\tfor printing RATIONAL and BYTE tags added.\n\n2003-08-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_lzw.c: Move LZW codec state block allocation back to\n\tTIFFInitLZW(), because its initialization in LZWSetupDecode() cause\n\tproblems with predictor initialization. Remove O_RDONLY check during\n\tstate block allocation to be able open LZW compressed files in update\n\tmode.\n\n\tProblem exist for libtiff version of the tif_lzw.c module. One from\n\tlzw-compression-kit hasn't such troubles.\n\n2003-08-04  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: modified tif_write.c so that the various\n\tencoded write functions use tif_postdecode() to apply byte order\n\tswapping (swab) to the application passed data buffer if the same\n\twould be done when reading.  This allows us to write pixel data with\n\tmore than 8 bits per sample to existing files of a non-native byte\n\torder.  One side effect of this change is the applications buffer\n\titself is altered in this case by the act of writing.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=171\n\n2003-07-25  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: avoid signed/unsigned casting warning\n\tinitializing typemask as per patch from J.A. Strother.\n\n\t* tools/tiffcp.c: fixed signed/unsigned casting warning.\n\n\t* libtiff/tif_print.c: dos2unix conversion.\n\n\t* tools/tiffsplit.c: increased the maximum number of pages that\n\tcan be split.  Patch provided by Andrew J. Montalenti.\n\n2003-07-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/raw2tiff.c: Added option `-p' to explicitly select color\n\tspace of input image data. Closes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=364\n\n2003-07-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_aux.c, tif_codec.c, tif_dir.c, tif_dirread.c, tif_extension.c,\n\ttif_fax3.c, tif_getimage.c, tif_luv.c, tif_lzw.c, tif_next.c,\n\ttif_packbits.c, tif_predict.c, tif_print.c, tif_swab.c, tif_thunder.c:\n\tavoid casting warning at /W4.\n\n2003-07-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/thumbnail.c: Memory leak fixed as reported by Robert S. Kissel.\n\n2003-06-30  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_pixarlog.c: Unused variables removed.\n\n\t* libtiff/{tif_dirread.c, tif_dir.c}: Fixed problem with\n\tEstimateStripByteCounts() as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=358\n\n\t* libtiff/{tif_dirwrite.c, tif_packbits.c}: Fixed compilation on\n\t64-bit architectures as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=357\n\n\t* libtiff/tif_dirinfo.c: TIFFDataWidth() returns 0 in case of\n\tunknown data type.\n\n2003-06-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_print.c: fixed some serious bugs when printing\n\tcustom tags ... almost certain to crash.\n\n\t* libtiff/tif_dirread.c: Don't ignore custom fields that are\n\tautodefined.  Not sure how this got to be like this.\n\n2003-06-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* 3.6.0 Beta2 released.\n\n\t* tools/tiffcmp.c, man/tiffcmp.1: Fixed problem with unused data\n\tcomparing as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=349\n\n\t`-z' option now can be used to set the number of reported different\n\tbytes.\n\n2003-06-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c, man/tiffcp.1: Added possibility to specify value -1\n\tto -r option to get the entire image as one strip. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=343\n\n\tfor details.\n\n2003-06-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Set the correct RowsPerStrip and PageNumber\n\tvalues as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=343\n\n2003-05-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: modified segment_height calculation to always\n\tbe a full height tile for tiled images.  Also changed error to just\n\tbe a warning.\n\n2003-05-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Page numbering fixed, as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=341\n\n2003-05-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/ojpeg/{Makefile.in, jdhuff.h, jinclude.h, ojpeg.c, README},\n\tconfigure, Makefile.in:\tSwitched back to the old behaviour. Likely\n\tbetter solution should be found for OJPEG support.\n\n2003-05-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/mkversion.c: Fixed problem with wrong string size when\n\treading RELEASE-DATE file.\n\n2003-05-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c: Fixed bug in Ascii85EncodeBlock() function: array\n\tindex was out of range.\n\n2003-05-06  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* contrib/ojpeg/{Makefile.in, jdhuff.h, jinclude.h, ojpeg.c, README},\n\tconfigure, Makefile.in:\tImproved libtiff compilation with OJPEG\n\tsupport. Now no need for patching IJG JPEG library, hack requred by\n\tlibtiff will be compiled and used in-place. Implemented with\n\tsuggestion and help from Bill Allombert, Debian's libjpeg maintainer.\n\n\t* libtiff/tif_aux.c: Properly handle TIFFTAG_PREDICTOR in\n\tTIFFVGetFieldDefaulted() function.\n\n2003-05-05  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ppm2tiff.c: PPM header parser improved: now able to skip\n\tcomments.\n\n\t* tools/tiffdither.c: Fixed problem with bit fill order tag setting:\n\twas not copied from source image.\n\n\t* libtiff/getimage.c: Workaround for some images without correct\n\tinfo about alpha channel as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=331\n\n2003-04-29  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps.c, man/tiff2ps.1: Add ability to generate PS Level 3.\n\tIt basically allows one to use the /flateDecode filter for ZIP\n\tcompressed TIFF images. Patch supplied by Tom Kacvinsky. Fixes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=328\n\n\t* tools/tiff2ps.c: Force deadzone printing when EPS output specified\n\tas per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=325\n\n2003-04-17  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Removed additional check for StripByteCounts\n\tdue to problems with multidirectory images. Quality of error messages\n\timproved.\n\n2003-04-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiffcp.c: Fixed problem with colorspace conversion for JPEG\n\tencoded images. See bug entries\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=275\n\n\tand\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=23\n\n\t* libtiff/tif_dirread.c: Additional check for StripByteCounts\n\tcorrectness. Fixes\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=320\n\n2003-03-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/{fax2ps.c, fax2tiff.c, gif2tiff.c, pal2rgb.c, ppm2tiff.c,\n\tras2tiff.c, raw2tiff.c, rgb2ycbcr.c, thumbnail.c, tiff2bw.c,\n\ttiff2ps.c, tiff2rgba.c, tiffcp.c, tiffdither.c, tiffinfo.c,\n\ttiffmedian.c}: Added library version reporting facility to all tools.\n\n2003-03-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* port/install.sh.in: Fixed problems with install producing paths\n\tlike ///usr/local/lib on cygwin.\n\n2003-02-27  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c, man/fax2tiff.1: New switch (-X) to set width of\n\traw input page. Patch supplied by Julien Gaulmin. See\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=293\n\n\tfor details.\n\n2003-02-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fixed up the tif_postdecode settings\n\tresponsible for byte swapping complex image data.\n\n\t* libtiff/tif_lzw.c: fixed so that decoder state isn't allocated till\n\tLZWSetupDecode().  Needed to read LZW files in \"r+\" mode.\n\n2003-02-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/ppm2tiff.c: Fixed problem with too many arguments.\n\n2003-02-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/raw2tiff.c: Memory leak fixed.\n\n2003-02-03  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c, man/fax2tiff.1: Applied patch from Julien Gaulmin\n\t(thanks, Julien!). More switches for fax2tiff tool for better control\n\tof input and output. Details at\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=272\n\n2003-02-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Modified to defer initialization of jpeg\n\tlibrary so that we can check if there is already any tile/strip data\n\tbefore deciding between creating a compressor or a decompressor.\n\n2003-01-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_write.c: TIFFWriteCheck() now fails if the image is\n\ta pre-existing compressed image.  That is, image writing to\n\tpre-existing compressed images is not allowed.\n\n\t* libtiff/tif_open.c: Removed error if opening a compressed file\n\tin update mode.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=198\n\n2003-01-31  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* config.guess, config.sub: Updated to recent upstream versions.\n\n2003-01-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* cut 3.6.0 Beta release.\n\n2002-12-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2ps.c, man/fax2ps.1: Page size was determined\n\tin wrong way as per bug\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=239\n\n2002-12-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Allow wrong sized arrays in\n\tTIFFFetchStripThing().\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=49\n\n2002-12-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fix problem with test on td_customValueCount.\n\tWas using realloc even first time.  Fix by Igor Venevtsev.\n\n2002-11-30  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dir.c: fixed bug with resetting an existing custom\n\tfield value.\n\n\t* libtiff/tif_dir.c: Fixed potential problem with ascii \"custom\"\n\ttags in TIFFVGetField() ... added missing break.\n\n2002-10-14  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2ps.c: fixes a problem where \"tiff2ps -1e\" did not make\n\tthe scanline buffer long enough when writing rgb triplets.\n\tThe scanline needs to be 3 X the number of dots or else it will\n\tcontain\tan incomplete triplet and programs that try to separate\n\tthe eps by redefining the colorimage operator will get messed up.\n\tPatch supplied by William Bader.\n\n\t* Makefile.in: added tif_extension.c to file list as per\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=218.\n\n2002-10-11  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* configure, config.site, libtiff/{tif_unix.c, Makefile.in}: Fix for\n\tlarge files (>2GiB) supporting. New option in the config.site:\n\tLARGEFILE=\"yes\". Should be enough for I/O of the large files.\n\n2002-10-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/html/v3.6.0.html: new release notes.\n\n\t* libtiff/index.html: removed faq, cvs snapshot cruft.  Added email\n\tlink for Andrey.  Pointer to v3.6.0.html.\n\n\t* libtiff/Makefile.in: added direct rule for tiffvers.h for release.\n\n2002-10-07  Andrey Kiselev  <dron@ak4719.spb.edu>\n\t* tools/tiff2ps.c, man/tiff2ps.1: Applied patch form Sebastian Eken\n\t(thanks, Sebastian!). New switches:\n\t-b # for a bottom margin of # inches\n\t-c   center image\n\t-l # for a left margin of # inches\n\t-r   rotate the image by 180 degrees\n\tNew features merged with code for shrinking/overlapping.\n\tPreviously added -c and -n switches (for overriding PS units) renamed\n\tin -x and -y respectively.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=200\n\n\t* html/man/*.html: Updated from actual manual pages.\n\n2002-10-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: fixed problem with boolean defined with wrong\n\tsize on windows.  Use #define boolean hack.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=188\n\n\t* libtiff/tiff.h: Don't do special type handling in tiff.h unless\n\tUSING_VISUALAGE is defined.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2002-10-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h: added COMPRESSION_JP2000.\n\n2002-10-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_dirread.c: Another fix for the fetching SBYTE arrays\n\tby the TIFFFetchByteArray() function. Should finally resolve\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=52\n\n\t* configure: Set -DPIXARLOG_SUPPORT option along with -DZIP_SUPPORT\n\n\t* html/Makefile.in: New targets added: html and groffhtml for\n\tproducing HTML representations of the manual pages automatically.\n\thtml target uses man2html tool, groffhtml uses groff tool.\n\n2002-09-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, libtiff/Makefile.in: Added SCO OpenServer 5.0.6 support\n\tfrom John H. DuBois III.\n\n2002-09-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* Makefile.in, /man/{raw2tiff.1, Makefile.in, libtiff.3}: Added\n\tmanual page for raw2tiff(1) tool.\n\n2002-09-12  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/{tiffio.h, tif_dir.h}: TIFFDataWidth() declaration moved to\n\tthe tiffio.h header file.\n\n\t* Makefile.in, /man/{TIFFDataWidth.3t, Makefile.in, libtiff.3}: Added\n\tmanual page for TIFFDataWidth() function\n\n2002-09-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirread.c: Expand v[2] to v[4] in TIFFFetchShortPair()\n\tas per http://bugzilla.remotesensing.org/show_bug.cgi?id=196.\n\n\t* tools/tiff2ps.c: Don't emit BeginData/EndData DSC comments\n\tsince we are unable to properly include the amount to skip.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=80\n\n2002-09-02  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/tif_dirread.c: Fixed problem with SBYTE type data fetching\n\tin TIFFFetchByteArray(). Problem described at\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=52\n\n2002-08-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/tif_dirinfo.c: Further additions to free custom fields\n\tin _TIFFSetupFieldInfo() function.\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=169 for details.\n\n\t* /libtiff/tif_lzw.c: Additional consistency checking added in\n\tLZWDecode() and LZWDecodeCompat().\n\tFixes http://bugzilla.remotesensing.org/show_bug.cgi?id=190\n\tand http://bugzilla.remotesensing.org/show_bug.cgi?id=100\n\n\t* /libtiff/tif_lzw.c:\n\tAdded check for valid code lengths in LZWDecode() and\n\tLZWDecodeCompat(). Fixes\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=115\n\n2002-08-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /libtiff/{Makefile.vc, libtiff.def}:\n\tMissed declarations added.\n\n2002-08-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_getimage.c: Ensure that TIFFRGBAImageBegin() returns the\n\treturn code from the underlying pick function.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=177\n\n\t* tif_dir.h: changed FIELD_CODEC to 66 from 64 to avoid overlap\n\twith FIELD_CUSTOM as mentioned in bug 169.\n\n\t* tif_close.c: added logic to free dynamically created anonymous\n\tfield definitions to correct a small memory leak.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=169\n\n2002-08-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/{raw2tiff.c, Makefile.in, Makefile.lcc, Makefile.vc}:\n\tNew tool: raw2tiff --- raw images to TIFF converter. No manual page yet.\n\n2002-07-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Fixed problem with setting of nrows in\n\tJPEGDecode() as per bugzilla bug (issue 1):\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=129\n\n\t* libtiff/{tif_jpeg.c,tif_strip.c,tif_print.c}: Hacked tif_jpeg.c to\n\tfetch TIFFTAG_YCBCRSUBSAMPLING from the jpeg data stream if it isn't\n\tpresent in the tiff tags.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=168\n\n\t* libtiff/tif_read.c, libtiff/tif_write.c: TIFFReadScanline() and\n\tTIFFWriteScanline() now set tif_row explicitly in case the codec has\n\tfooled with the value.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=129\n\n2002-06-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* /tools/tiff2ps.c: Added workaround for some software that may crash\n\twhen last strip of image contains fewer number of scanlines than\n\tspecified by the `/Height' variable. See\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=164\n\tfor explanation.\n\n2002-06-21  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps, man/tiff2ps.1: New functionality for tiff2ps utility:\n\tsplitting long images in several pages. See\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=142 for explanation.\n\tPatch granted by John Williams <williams@morinda.com>.\n\n2002-06-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/contrib/win95: renamed to contrib/win_dib.  Added new\n\tTiffile.cpp example of converting TIFF files into a DIB on Win32.\n\tThis one is described in:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=143\n\n\t* libtiff/tif_ojpeg.c: Major upgrade from Scott.  See details at:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=156\n\n2002-05-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps: New commandline switches to override resolution\n\tunits obtained from the input file. Closes\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=131\n\n2002-04-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added missed declaration.\n\n2002-04-22  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/fax2tiff.c: Updated to reflect latest changes in libtiff.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=125\n\n2002-04-20  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_open.c: Pointers to custom procedures\n\tin TIFFClientOpen() are checked to be not NULL-pointers.\n\n2002-04-18  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/libtiff.def: Added missed declarations.\n\n\t* libtiff/tif_pixarlog.c: Updated for using tif_tagmethods structure.\n\n2002-04-16  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_lzw.c: Additional checks for data integrity introduced.\n\tShould finally close\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=100\n\n2002-04-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/tiff2ps: Division by zero fixed.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=88\n\n2002-04-09  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_dirwrite.c, tif_write.c, tiffio.h:\n\tTIFFCheckpointDirectory() routine added.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=124\n\n\t* man/: TIFFWriteDirectory.3t,  Makefile.in: Added description\n\tfor the new function.\n\n2002-04-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_codec.c, tif_compress.c, tiffiop.h: Introduced\n\tadditional members tif->tif_decodestatus and tif->tif_encodestatus\n\tfor correct handling of unconfigured codecs (we should not try to read\n\tdata or to define data size without correct codecs).\n\n\t* libtiff/tif_getimage.c: The way of codecs checking in TIFFRGBAImageOK\n\tchanged. Now it has used tif->tif_decodestatus and\n\ttif->tif_encodestatus.\n\tShould fix http://bugzilla.remotesensing.org/show_bug.cgi?id=119 (in\n\tcase of __cvs_8.tif test image).\n\n\t* libtiff/: tif_dirinfo.c, tif_dirread.c: Somebody makes a bug in\n\ttif_dirread.c when TIFFCreateAnonFieldInfo was introduced.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=119 in case\n\tof _cvs_00000-00.tif, _cvs_00000-01.tif and _cvs_00000-02.tif.\n\n2002-04-04  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_lzw.c: Assertions in LZWDecode and LZWDecodeCompat\n\treplaced by warnings. Now libtiff should read corrupted LZW-compressed\n\tfiles by skipping bad strips.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=100\n\n2002-04-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: Removed some dead code.\n\n\t* libtiff/*: Cleanup some warnings.\n\n\t* libtiff/tif_dir.c: Fixed bug with count returned by TIFFGetField()\n\tfor variable length FIELD_CUSTOM values.  Was int * but should be\n\tu_short *.\n\n2002-04-01  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* tools/: tifcp.c: Added support for 'Orientation' tag in tiffcp\n\tutility (at cpStripToTile routine).\n\n2002-03-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirread.c: avoid div-by-zero if rowbytes is zero in chop func.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=111\n\n\t* tif_print.c: Fixed so that ASCII FIELD_CUSTOM values with\n\tpasscount set FALSE can be printed (such as TIFFTAG_SOFTWARE).\n\n\t* libtiff/tif_dir.c,tif_dirinfo.c,tif_dir.h,tif_ojpeg.c: modified so\n\tthat TIFFTAG_SOFTWARE uses FIELD_CUSTOM as an example.\n\n2002-03-26  Dwight Kelly  <dbmalloc@remotesensing.org>\n\n\t* libtiff/: tiff.h, tif_dir.c, tif_dir.h, tif_dirinfo.c, tif_dirread.c,\n\ttif_dirwrite.c: Added get/put code for new tag XMLPACKET as defined\n\tin Adobe XMP Technote. Added missing INKSET tag value from TIFF 6.0 spec\n\tINKSET_MULTIINK (=2). Added missing tags from Adobe TIFF technotes:\n\tCLIPPATH, XCLIPPATHUNITS, YCLIPPATHUNITS, OPIIMAGEID, OPIPROXY and\n\tINDEXED. Added PHOTOMETRIC tag value from TIFF technote 4 ICCLAB (=9).\n\n2002-03-26  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_getimage.c: TIFFReadRGBAStrip and TIFFReadRGBATile\n\tnow also uses TIFFRGBAImageOK before reading. This is additional fix\n\tfor http://bugzilla.remotesensing.org/show_bug.cgi?id=110\n\n2002-03-25  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_getimage.c: Additional check for supported\n\tcodecs added in TIFFRGBAImageOK and TIFFReadRGBAImage now uses\n\tTIFFRGBAImageOK before reading.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=110\n\n2002-03-15  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_dir.c, tif_dir.h, tif_dirinfo.c, tif_dirread.c,\n\ttif_dirwrite.c: Added routine TIFFDataWidth for detrmining\n\tTIFFDataType sizes instead of working with tiffDataWidth array\n\tdirectly. Should prevent out-of-borders bugs in case of unknown or\n\tbroken data types.  EstimateStripByteCounts routine modified, so it\n\twon't work when tags with uknown sizes founded.\n\tCloses http://bugzilla.remotesensing.org/show_bug.cgi?id=109\n\n2002-03-13  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/tif_getimage.c: Added support for correct handling\n\t`Orientation' tag in gtTileContig. Should be added in other gt*\n\tfunctions as well, but I have not images for testing yet. Partially\n\tresolves http://bugzilla.remotesensing.org/show_bug.cgi?id=23\n\n2002-03-10  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/: tif_dirinfo.c, tif_dirwrite.c: Added possibility to\n\tread broken TIFFs with LONG type used for TIFFTAG_COMPRESSION,\n\tTIFFTAG_BITSPERSAMPLE, TIFFTAG_PHOTOMETRIC.  Closes\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=99\n\n2002-03-08  Andrey Kiselev  <dron@ak4719.spb.edu>\n\n\t* libtiff/Makefile.in, tools/Makefile.in: Shared library will not\n\tbe stripped when installing, utility binaries will do.\tCloses\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=93\n\n2002-02-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* man/TIFFGetField: fixed type of TIFFTAG_COPYRIGHT.\n\n\t* man/libtiff.3t: added copyright tag info.\n\n2002-02-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/{tiff.h,tif_fax3.c}: Add support for __arch64__.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=94\n\n\t* man/Makefile.in: Patch DESTDIR handling\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=95\n\n\t* configure: OpenBSD changes for Sparc64 and DSO version.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=96\n\n2002-02-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* config.site/configure: added support for OJPEG=yes option to enable\n\tOJPEG support from config.site.\n\n2002-01-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/document.html: fixed links for TIFf 6 docs.\n\n2002-01-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* config.guess, config.sub: Updated from ftp.gnu.org/pub/config.\n\n\t* libtiff/tif_read.c: Fixed TIFFReadEncodedStrip() to fail if the\n\tdecodestrip function returns anything not greater than zero as per\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=97\n\n\t* configure: Modify CheckForBigEndian so it can work in a cross\n\tcompiled situation.\n\n2002-01-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiffdump.c: include TIFFTAG_JPEGTABLES in tag list.\n\n\t* tools/tiffset.c: fix bug in error reporting.\n\n\t* tools/tiffcp.c: fix several warnings that show up with -Wall.\n\n2002-01-04  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: fixed computation of segment_width for\n\ttiles files to avoid error about it not matching the\n\tcinfo.d.image_width values (\"JPEGPreDecode: Improper JPEG strip/tile\n\tsize.\") for ITIFF files.  Apparently the problem was incorporated since\n\t3.5.5, presumably during the OJPEG/JPEG work recently.\n\n2001-12-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, libtiff/Makefile.in: Changes for building on MacOS 10.1.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=94\n\n\t* libtiff/tif_getimage.c: If DEFAULT_EXTRASAMPLE_AS_ALPHA is 1\n\t(defined in tiffconf.h - 1 by default) then the RGBA interface\n\twill assume that a fourth extra sample is ASSOCALPHA if the\n\tEXTRASAMPLE value isn't set for it.  This changes the behaviour of\n\tthe library, but makes it work better with RGBA files produced by\n\tlots of applications that don't mark the alpha values properly.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=93\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=65\n\n2001-12-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: allow jpeg data stream sampling values to\n\toverride those from tiff directory.  This makes this work with\n\tImageGear generated files.\n\n2001-12-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/Makefile.in: added missing images per bug 92.\n\n\t* port/Makefile.in: fixed clean target per bug 92.\n\n2001-11-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Reissue 3.5.7 release.\n\n\t* libtiff/mkversion.c: Fix output of TIFF_VERSION to be\n\tYYYYMMDD so that it is increasing over time.\n\n\t* Makefile.in: Ensure that tiffvers.h is regenerated in the\n\tmake release target.\n\n\t* Makefile.in: added libtiff/tiffvers.h to the release file list.\n\n2001-11-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* added html/v3.5.7.html, updated html/index.html.\n\n\t* Makefile.in: added contrib/addtiffo/tif_ovrcache.{c,h}.\n\n2001-11-15  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure: fixed test for -lm.\n\n2001-11-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added PHOTOMETRIC_ITULAB as per bug 90.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=90\n\n2001-10-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h: I have created COMPRESSION_CCITT_T4,\n\tCOMPRESSION_CCITT_T6, TIFFTAG_T4OPTIONS and TIFFTAG_T6OPTIONS aliases\n\tin keeping with TIFF 6.0 standard in tiff.h\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=83\n\n2001-09-26  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirwrite.c: added TIFFRewriteDirectory() function.\n\tUpdated TIFFWriteDirectory man page to include TIFFRewriteDirectory.\n\n2001-09-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_lzw.c: Avoid MS VC++ 5.0 optimization bug.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=78\n\n\t* libtiff/tif_lzw.c: added dummy LZWSetupEncode() to report an\n\terror about LZW not being available.\n\n\t* libtiff/tif_dir.c: propagate failure to initialize compression\n\tback from TIFFSetField() as an error status, so applications can\n\tdetect failure.\n\n\t* libtiff/tif_dir.c: removed the auto replacement of\n\tCOMPRESSION_LZW with COMPRESSION_NONE in _TIFFVSetField().\n\n\t* Removed Makefile, tools/Makefile, port/install.sh, man/Makefile\n\tfrom CVS as they are all supposed to be auto-generated by configure.\n\n2001-09-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_ojpeg.c: new update from Scott.\n\n2001-09-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtif/tif_fax3.c: Removed #ifdef PURIFY logic, and modified to\n\talways use the \"safe\" version, even if there is a very slight\n\tcost in performance.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=54\n\n\t* libtiff/Makefile.in: Fixed @DSOSUB_VERSION to be @DSOSUF_VERSION@\n\tin two places.\n\n\t* libtiff/tif_getimage.c: Fixed problem with reading strips or\n\ttiles that don't start on a tile boundary.  Fix contributed by\n\tJosep Vallverdu (from HP), and further described in bug 47.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=47\n\n\t* tools/tiff2ps.c: added OJPEG YCbCr to RGB support.\n\n\t* libtiff/tif_ojpeg.c: Applied substantial patch from Scott.\n\n2001-09-06  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_packbits.c: fixed memory overrun error.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=77\n\n2001-08-31  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: relax handling of contig case where\n\tthere are extra samples that are supposed to be ignored.  This\n\tshould now work for 8bit greyscale or palletted images.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=75\n\n2001-08-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Don't complain for CMYK (separated)\n\timages with more than four samples per pixel.  See:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=73\n\n2001-08-10  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Use memmove() instead of TIFFmemcpy()\n\tin TIFFReadRGBATile() to avoid issues in cases of overlapping\n\tbuffers.  See Bug 69 in Bugzilla.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=69\n\n\t* tools/tiff2rgba.c: fixed getopt() call so that -b works again.\n\n2001-08-09  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h, libtiff/tif_fax3.c: added check for __LP64__\n\twhen checking for 64 bit architectures as per bugzilla bug 67.\n\n2001-07-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* man/Makefile.in: add TIFFClientOpen link as per debian submitted\n\tbug 66.\n\n2001-07-20  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_jpeg.c: Define HAVE_BOOLEAN on windows if RPCNDR.H\n\thas been included.\n\n2001-07-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_open.c: Seek back to zero after failed read,\n\tbefore writing header.\n\n2001-07-18  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_ojpeg.c: updates from Scott.  Handles colors\n\tmuch better.  Now depends on having patched libjpeg as per\n\tpatch in contrib/ojpeg/*.\n\n2001-07-17  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* */Makefile.in: added DESTDIR support.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=60\n\n2001-07-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, libtiff/Makefile.in: applied OpenBSD patches\n\tas per:\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=61\n\n2001-06-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_getimage.c: Fixed so that failure is properly\n\treported by gtTileContig, gtStripContig, gtTileSeparate and\n\tgtStripSeparate.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=51\n\n\t* tiffcmp.c: Fixed multi samples per pixel support for ContigCompare.\n\tUpdated bug section of tiffcmp.1 to note tiled file issues.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=53\n\n2001-06-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure: Changes for DSO generation on AIX provided by\n\tJohn Marquart <jomarqua@indiana.edu>.\n\n\t* configure, libtiff/Makeifle.in: Modified to build DSOs properly\n\ton Darwin thanks to Robert Krajewski (rpk@alum.mit.edu) and\n\tKeisuke Fujii (fujiik@jlcuxf.kek.jp).\n\n2001-06-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tools/tiff2rgba.c: added -n flag to avoid emitting alpha component.\n\n\t* man/tiff2rgba.1: new\n\n2001-05-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added tiffset and tif_ojpeg to the dist lists in Makefile.in.\n\n2001-05-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tools/thumbnail.c: changed default output compression\n\tto packbits from LZW since LZW isn't generally available.\n\n2001-05-12  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_ojpeg.c: New.\n\tlibtiff/tif_jpeg.c, tiffconf.h, tif_getimage.c: changes related\n\tto OJPEG support.\n\n\tScott Marovich <marovich@hpl.hp.com> supplied OJPEG support.\n\n2001-05-11  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tiff.h: removed, it duplicates libtiff/tiff.h.\n\n2001-05-08  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: moved pixar and copyright flags to\n\tensure everything is in order.\n\n\t* libtiff/libtiff.def: added TIFFCreateDirectory and\n\tTIFFDefaultStripSize as per:\n\n\t  http://bugzilla.remotesensing.org/show_bug.cgi?id=46\n\n2001-05-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: Modified the TIFF_BYTE definition for\n\tTIFFTAG_PHOTOSHOP to use a writecount of TIFF_VARIABLE2 (-3) to\n\tforce use of uint32 counts instead of short counts.\n\n\t* libtiff/tif_dirwrite.c: Added support for TIFF_VARIABLE2 in the\n\tcase of writing TIFF_BYTE/TIFF_SBYTE fields.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=43\n\n2001-05-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_dirinfo.c: removed duplicate TIFFTAG_PHOTOSHOP as per\n\tbug report http://bugzilla.remotesensing.org/show_bug.cgi?id=44\n\n2001-04-05  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tiffio.h: removed C++ style comment.\n\n\t* configure: fixed up SCRIPT_SH/SHELL handling.\n\n\t* Makefile.in: Fixed SCRIPT_SH/SHELL handling.\n\n\t* config.guess: documented more variables as per bug 40.\n\n2001-04-03  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, *Makefile.in: Various changes to improve configuration\n\tfor HP/UX specifically, and also in general.  They include:\n\t - Try to handle /usr/bin/sh instead of /bin/sh where necessary.\n\t - Upgrade to HP/UX 10.x+ compiler, linker and dso options.\n\t - Fixed mmap() test to avoid MMAP_FIXED ... it isn't available on HP\n\t - Use -${MAKEFLAGS} in sub makes from makefiles.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=40\n\n2001-04-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiff.h: Applied hac to try and resolve the problem\n\twith the inttypes.h include file on AIX.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n\t* VERSION: update to 3.5.7 beta in preparation for release.\n\n\t* configure/config.site: modified to check if -lm is needed for\n\tMACHDEPLIBS if not supplied by config.site.  Needed for Darwin.\n\n\t* config.guess: updated wholesale to an FSF version apparently\n\tfrom 1998 (as opposed to 1994).  This is mainly inspired by\n\tproviding for MacOS X support.\n\n2001-03-29  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* configure, Makefile.in, etc: added support for OPTIMIZER being\n\tset from config.site.\n\n2001-03-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* fax2ps.c: Helge (libtiff at oldach.net) submitted fix:\n\n\tHere's a fix for fax2ps that corrects behaviour for non-Letter paper\n\tsizes. It fixes two problems:\n\n\tWithout\tscaling (-S) the fax is now centered on the page size specified\n\twith -H\tand/or -W. Before, fax2ps was using an obscure and practially\n\tuseless algorithm to allocate the image relative to Letter sized paper\n\twhich sometime sled to useless whitespace on the paper, while at the\n\tsame time cutting of the faxes printable area at the opposite border.\n\n\tSecond, scaling now preserves aspect ratio, which makes unusual faxes\n\t(in particular short ones) print properly.\n\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=35\n\n\t* tiff2ps.c/tiff2ps.1: Substantial changes to tiff2ps by\n\tBruce A. Mallett.  See check message for detailed information\n\ton all the changes, including a faster encoder, fixes for level\n\t2 PostScript, and support for the imagemask operator.\n\n2001-03-27  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tiffio.h: Changed \"#if LOGLUV_PUBLIC\" to\n\t\"#ifdef LOGLUV_PUBLIC\" so it will work with VisualAge on AIX.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=39\n\n2001-03-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_dirinfo.c: moved definition of copyright tag in field list.\n\tApparently they have to be in sorted order by tag id.\n\n2001-03-13  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_getimage.c: Added support for 16bit minisblack/miniswhite\n\timages in RGBA interface.\n\n2001-03-02  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added TIFFTAG_COPYRIGHT support.\n\n2001-02-19  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Brent Roman contributed updated tiffcp utility (and tiffcp.1)\n\twith support for extracting subimages with the ,n syntax, and also\n\tadding the -b bias removal flag.\n\n2001-02-16  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/libtiff.def: Brent Roman submitted new version adding\n\tserveral missing entry points.\n\n\t* libtiff/tif_dirinfo.c: don't declare tiffFieldInfo static on VMS.\n\tSome sort of weird VMS thing.\n\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=31\n\n\t* tif_luv.c/tiff.h/tiffio.h:\n\tNew version of TIFF LogLuv (SGILOG) modules contributed by Greg Ward\n\t(greg@shutterfly.com).  He writes:\n\n\t1) I improved the gamut-mapping function in tif_luv.c for imaginary\n\tcolors, because some images were being super-saturated on the input\n\tside and this resulted in some strange color shifts in the output.\n\n\t2) I added a psuedotag in tiff.h to control random dithering during\n\tLogLuv encoding.  This is turned off by default for 32-bit LogLuv and\n\ton for 24-bit LogLuv output.  Dithering improves the average color\n\taccuracy over the image.\n\n\t3) I added a #define for LOG_LUV_PUBLIC, which is enabled by default in\n\ttiffio.h, to expose internal routines for converting between LogLuv and\n\tXYZ coordinates.  This is helpful for writing more efficient,\n\tspecialized conversion routines, especially for reading LogLuv files.\n\n\tChanges applied with minor edits.\n\n2001-01-23  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* tif_fax3.c: keep rw_mode flag internal to fax3 state to remember\n\twhether we are encoding or decoding.  This is to ensure graceful\n\trecovery if TIFFClientOpen() discovers an attempt to open a compressed\n\tfile for \"r+\" access, and subsequently close it, as it resets the\n\ttif_mode flag to O_RDONLY in this case to avoid writes, confusing the\n\tcompressor's concept of whether it is in encode or decode mode.\n\n2001-01-08  Mike Welles <mike@bangstate.com>\n\n\t* Makefile.in:  Now cleaning up after itself after creating the .tar.gz and .zip\n\n2001-01-07  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* html/libtiff.html: Fixed arguments in example for TIFFRGBAImageGet()\n\tas per bug report by Patrick Connor.\n\n2000-12-28  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added RELEASE-DATE file to release file list.\n\n\t* Fixed libtiff/makefile.vc to make tiffvers.h not version.h.\n\n2000-12-22  Mike Welles <mike@bangstate.com>\n        * added link to CVS mirror from index.html\n\n\t* updated html/internals.html to note that LZW compression is\n\t  not supported by default.\n\n2000-12-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* updated html/libtiff.html to not point at Niles' old JPL web site\n\tfor the man pages, point at www.libtiff.org.\n\n2000-12-21  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/tif_apple.c: Applied \"Carbon\" support patches supplied by\n\tLeonard Rosenthol <leonardr@lazerware.com>.  May interfere\n\twith correct building on older systems.  If so, please let me know.\n\n2000-12-19 Mike Welles <mike@bangsate.com>\n\n\t* Took out LZW Encoding from tif_lzw.c\n\n\t* Created HOWTO-RELEASE\n\n\t* Created html/v3.5.6.html\n\n\t* updated index.html\n\n2000-12-01  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* Added patches for EOFB support in tif_fax3.c and tif_fax3.h.\n\tPatches supplied by Frank Cringle <fdc@cliwe.ping.de>\n\tExample file at: ftp://ftp.remotesensing.org/pub/libtiff/eofb_396.tif\n\n2000-11-24  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* libtiff/Makefile.in: Added an installPrivateHdrs and install-private\n\ttarget so that the private headers required by libgeotiff can be\n\tinstalled with the others.  They are not installed by default.\n\n\t* libtiff/Makefile.in: Added @MACHLIBDEPS@ to LINUXdso and GNULDdso\n\ttargets so libtiff.so will be built with an explicit dependency\n\ton libm.so.\n\n\t* libtiff/Makefile.in: Use softlinks to link libtiff.so.3 to\n\tlibtiff.so.3.5.5.\n\n\t* libtiff/Makefile.in & configure: Remove all references to the ALPHA\n\tfile, or ALPHA version logic.  Added stuff about DIST_POINT in\n\tplace of DIST_TYPE and the alpha release number stuff.\n\n2000-11-22  Frank Warmerdam  <warmerdam@pobox.com>\n\n\t* I have applied a patch from Steffen Moeller <moeller@ebi.ac.uk> to\n\tthe configure script so that it now accepts the --prefix, and\n\t--exec-prefix directives.\n\n2000-11-13  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* I have made a variety of modifications in an effort to ensure the\n\tTIFFLIB_VERSION macro is automatically generated from the RELEASE-DATE\n\tfile which seems to be updated regularly.\n\n\t o mkversion.c now reads RELEASE-DATE and emits TIFFLIB_VERSION in\n\t   version include file.\n\t o renamed version.h to tiffvers.h because we now have to install it\n\t   with the public libtiff include files.\n\t o include tiffvers.h in tiffio.h.\n\t o updated tif_version.c to use tiffvers.h.\n\t o Updated Makefile.in accordingly.\n\n\t* As per http://bugzilla.remotesensing.org/show_bug.cgi?id=25\n\tI have updated the win32 detection rules in tiffcomp.h.\n\n2000-10-20  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_getimage.c: Fixed RGBA translation for YCbCr images for which\n\tthe strip/tile width and height aren't multiples of the sampling size.\n\tSee http://bugzilla.remotesensing.org/show_bug.cgi?id=20\n\tSome patches from Rick LaMont of Dot C Software.\n\n\t* Modified tif_packbits.c encoder to avoid compressing more\n\tdata than provided if rowsize doesn't factor into provided data\n\t(such as occurs for YCbCr).\n\n2000-10-19  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tools/rgb2ycbcr.c: fixed output strip size to account for vertical\n\troundup if rows_per_strip not a multiple of vertical sample size.\n\n2000-10-16  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_dir.c: Clear TIFF_ISTILED flag in TIFFDefaultDirectory\n\tas per http://bugzilla.remotesensing.org/show_bug.cgi?id=18\n\tfrom vandrove@vc.cvut.cz.\n\n\t* Modified tif_packbits.c decoding to avoid overrunning the\n\toutput buffer, and to issue a warning if data needs to be\n\tdiscarded.  See http://bugzilla.remotesensing.org/show_bug.cgi?id=18\n\n2000-10-12  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Modified tiff2bw to ensure portions add to 100%, and that\n\twhite is properly recovered.\n\n\tSee bug http://bugzilla.remotesensing.org/show_bug.cgi?id=15\n\tPatch c/o Stanislav Brabec <utx@penguin.cz>\n\n2000-09-30  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Modified TIFFClientOpen() to emit an error on an attempt to\n\topen a comperessed file for update (O_RDWR/r+) access.  This is\n\tbecause the compressor/decompressor code gets very confused when\n\tthe mode is O_RDWR, assuming this means writing only.  See\n\tbug http://bugzilla.remotesensing.org/show_bug.cgi?id=13\n\n2000-09-27  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Added GNULDdso target an`d switched linux and freebsd to use it.\n\n2000-09-26  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Applied patch for 0x0000 sequences in tif_fax3.h's definition\n\tof EXPAND1D() as per bug 11 (from Roman).\n\n2000-09-25  Frank Warmerdam  <warmerda@cs46980-c>\n\t* Fixed tiffcomp.h to avoid win32 stuff if unix #defined, to improve\n\tcygwin compatibility.\n\n\t* Applied patch from Roman Shpount to tif_fax3.c.  This seems to\n\tbe a proper fix to the buffer sizing problem.  See\n\thttp://bugzilla.remotesensing.org/show_bug.cgi?id=11\n\n\t* Fixed tif_getimage.c to fix overrun bug with YCbCr images without\n\tdownsampling.  http://bugzilla.remotesensing.org/show_bug.cgi?id=10\n\tThanks to Nick Lamb <njl98r@ecs.soton.ac.uk> for reporting the\n\tbug and proving the patch.\n\n2000-09-18  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Fixed tif_jpeg.c so avoid destroying the decompressor before\n\twe are done access data thanks to bug report from:\n\tMichael Eckstein <eckstein@gepro.cz>.\n\n\t* Reverted tif_flush change.\n\n2000-09-14  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_flush.c: Changed so that TIFFFlushData() doesn't return an\n\terror when TIFF_BEENWRITING is not set.  This ensures that the\n\tdirectory contents can still be flushed by TIFFFlush().\n\n2000-08-14  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* tif_open.c: Don't set MMAP for O_RDWR files.\n\n\t* tif_open.c: Set STRIPCHOP_DEFAULT for O_RDWR as well as O_RDONLY\n\tso that files opened for update can be strip chopped too.\n\n\t* tif_read.c: fixed up bug with files missing rowsperstrip and\n\tthe strips per separation fix done a few weeks ago.\n\n2000-07-17  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Tentatively added support for SAMPLEFORMAT_COMPLEXIEEEFP, and\n\tSAMPLEFORMAT_COMPLEXINT.\n\n2000-07-13  Mike Welles <mike@onshore.com>\n\n\t* index.html, bugs.html: added bugzilla info.\n\n2000-07-12  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* tif_read.c: fix subtle bug with determining the number of\n\trows for strips that are the last strip in a separation but\n\tnot the last strip of all in TIFFReadEncodedStrip().\n\n\t* Applied 16/32 bit fix to tif_fax3.c.  Fix supplied by\n\tPeter Skarpetis <peters@serendipity-software.com.au>\n\n2000-06-15  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* Modified tiffio.h logic with regard to including windows.h.  It\n\twon't include it when building with __CYGWIN__.\n\n2000-05-11  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* README: update to mention www.libtiff.org, don't list Sam's old\n\temail address.\n\n\t* configure: Fixed DSO test for Linux as per patch from\n\t  Jan Van Buggenhout <chipzz@Ace.ULYSSIS.Student.KULeuven.Ac.Be>.\n\n2000-04-21  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* libtiff/tif_dirread.c: Don't use estimate strip byte count for\n\tone tile/strip images with an offset, and byte count of zero. These\n\tcould be \"unpopulated\" images.\n\n2000-04-18  Frank Warmerdam  <warmerda@rommel.atlsci.com>\n\n\t* contrib/addtiffo: Added \"averaging\" resampling option.\n\n\t* tools/tiffsplit.c: Copy TIFFTAG_SAMPLEFORMAT.\n\nTue Apr 18 16:18:08 2000  Frank Warmerdam  <warmerda@esabot.atlsci.com>\n\n\t* tools/Makefile.in: Modified to install properly on SGI.\n\n2000-04-12  Mike Welles\t     <mike@onshore.com>\n\t* configure:  Fixed stupid mistake in libc6 test on Linux\n\n2000-04-04  Mike Welles\t     <mike@onshore.com>\n\t* tif_win32.c:  Applied patch to fix overreads and ovverwrites\n\t  caught by BoundsChecker.  From Arvan Pritchard\n\t  <arvan.pritchard@infomatix.co.uk>  (untested).\n\n\t* tif_getimage.c:  Applied patch to silence VC6 warnings.  From\n\t  Arvan Pritchard <arvan.pritchard@informatix.co.uk>\n\n\t* tif_lzw.c:  Applied patch to silence VC6 warnings.  From\n\t  Arvan Pritchard <arvan.pritchard@informatix.co.uk>\n\n2000-03-28  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* Added contrib/stream (stream io) code submitted by Avi Bleiweiss.\n\n2000-03-28  Frank Warmerdam  <warmerda@cs46980-c>    *** 3.5.5 release ***\n\n\t* fax2ps: Fixed mixup of width and height in bounding box statement\n\tas per submission by Nalin Dahyabhai <nalin@redhat.com>.\n\n2000-03-27  Mike Welles\t     <mike@onshore.com>\n\n\t* fax2ps:  Modified printruns to take uint32 instead of uint16.\n\tPatch courtesy of Bernt Herd <herd@herdsoft.com>\n\n2000-03-20  Mike Welles\t     <mike@onshore.com>\n\n\t* configure: added test for libc6 for linux targets.  Bug reported by\n        Stanislav Brabec <utx@k332.feld.cvut.cz>\n\n\t* Added 3.5 docs to html/Makefile.in.\n\tThanks to  Stanislav Brabec <utx@k332.feld.cvut.cz>\n\n\t* configure: fixed bugs in sed scripts\n\t(applied sed script s:/@:s;@:;s:/s;;:;: to configure).\n\tfix submitted to Stanislav Brabec <utx@k332.feld.cvut.cz>\n\n\t* tools/iptcutil was not in files list, and wasn't being\n\tadded to tar archive.  Updated Makefile.in.\n\n2000-03-17  Frank Warmerdam  <warmerda@cs46980-c>\n\n\t* tif_fax3.c: Fixed serious bug introduced during the uint16->uint32\n\tconversion for the run arrays.\n\n2000-03-03  Frank Warmerdam  <warmerda@cs46980-c.mtnk1.on.wave.home.com>\n\n\t* Set td_sampleformat default to SAMPLEFORMAT_UINT instead of\n\tSAMPLEFORMAT_VOID in TIFFDefaultDirectory() in tif_dir.c.\n\n2000-03-02  Frank Warmerdam  <warmerda@cs46980-c.mtnk1.on.wave.home.com>\n\n\t* Added \"GetDefaulted\" support for TIFFTAG_SAMPLEFORMAT in tif_aux.c.\n\n\t* Patched tif_fax3.c so that dsp->runs is allocated a bit bigger\n\tto avoid overruns encountered with frle_bug.tif.\n\nTue Feb 15 22:01:05 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Fixed tools/tiffcmp so that stopondiff testing works.\n\t  Patch care of Joseph Orost <joe@sanskrit.lz.att.com>.\n\n2000-01-28    <warmerda@CS46980-B>\n\n\t* Modified tif_unix.c to support 2-4GB seeks if USE_64BIT_API is\n\t  set to 1, and added default (off) setting in tiffconf.h.  This\n\t  should eventually be set by the configure script somehow.\n\n\t  The original work on all these 2-4GB changes was done by\n\t  Peter Smith (psmith@creo.com).\n\n\t* Modified tif_win32.c to support 2-4GB seeks.\n\n\t* tentatively changed toff_t to be unsigned instead of signed to\n\t  facilitate support for 2-4GB files.\n\n\t* Updated a variety of files to use toff_t.  Fixed some mixups\n\t  between toff_t and tsize_t.\n\nFri Jan 28 10:13:49 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Largely reimplemented contrib/addtiffo to avoid temp files,\n\tupdating the TIFF file in place.  Fixed a few other bugs to.\n\n\t* Set tif_rawdatasize to zero when freeing raw data buffer in\n\tTIFFWriteDirectory().\n\n\t* Enabled \"REWRITE_HACK\" in tif_write.c by default.\n\n\t* Fix bug in tif_write.c when switching between reading one directory\n\tand writing to another.\n\n\t* Made TIFFWriteCheck() public, and added TIFFCreateDirectory()\n\nWed Jan  5 12:37:48 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added TIFFmemory(3t) functions to libtiff.def.\n\nTue Jan  4 13:39:00 2000  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added libtiff/libtiff.def to TIFFILES distribution list.\n\nMon Dec 27 12:13:39 EST 1999  Mike Welles <mike@onshore.com>\n\n\t* Created lzw compression kit, as a new module (libtiff-lzw-compression-kit).\n\n\t* Altered descriptions in tools to reflect \"by default\" lzw not supported\n\n\t* Updated index.html to note lzw compression kit.\n\nTue Dec 21 14:01:51 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added fax3sm_winnt.c to distribution list in Makefile.in.\n\nTue Dec 21 11:04:45 EST 1999  Mike Welles <mike@onshore.com> *** 3.5.4 release ***\n\n\t* Aadded Pixar tag support.  Contributed by Phil Beffery <phil@pixar.com>\n\n\t* Made one more change to tif_dir.c for removal of LZW compression. Also added notice\n\t  when LZW compression invoked.\n\n\t* Changed default compression in tools to TIFF_PACKBITS, and changed usage descriptions\n\t  in tools to reflect removal of LZW compression\n\nMon Dec 20 18:39:02 EST 1999  Mike Welles  <mike@onshore.com>\n\n        * Fixed bug that caused LZW (non) compression to segfault. Added\n\t  warning about LZW compression removed being removed, and why.\n\n\t* Added nostrip to install in tools/Makefile.in so that debugging\n\t  symbols are kept.\n\nTue Dec  7 12:04:47 EST 1999  Mike Welles  <mike@onshore.com>\n\n\t* Added patch from Ivo Penzar <ivo.penzar@infolink-software.com>,\n\t  supporting Adobe ZIP deflate.  Untested.\n\nSat Dec  4 15:47:11 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Made Packbits the default compression in tools/tiff2rgba.c instead\n\tof LZW.\n\nTue Nov 30 14:41:43 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>    *** 3.5.3. release ***\n\n\t* Added tif_luv to contrib/djgpp/Makefile.lib.\n\nTue Nov 30 14:15:32 EST 1999   Mike Welles <mike@onshore.com>\n\n        * Added zip creation to relase makefile target\n\n\t* Added html for TIFFWriteTile.3t man page.\n\nTue Nov 30 09:20:16 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added some changes to tif_write.c to support rewriting existing\n\tfixed sized tiles and strips.  Code mods disabled by default, only\n\tenabled if REWRITE_HACK is defined for now.\n\nMon Nov 29 11:43:42 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added TIFFWriteTile.3t man page.\n\nSun Nov 28 20:36:18 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added notes on use of makefile.vc in build.html, and fixed\n\temail subscription address.\n\n199-11-28  Mike Welles <mike@onshore.com>\n\n\t*  Fixed apocalypse-inducing y2k bug in contrib/ras/ras2tiff.c\n\n\t*  Did some casts cleaning up to reduce compiler warnings in tif_fax3.c,\n\t   from Bruce Carmeron <cameron@petris.com> -- modifications of\n\t   changes made by Frank (sun cc still complained on cast).\n\n\t*  Added tiffconf.h to install target per request from Bill\n\t   Radcliffe <billr@corbis.com>: \"We need a way for ImageMagick to\n \t   know features have been compiled into the TIFF library in order to\n\t   handle things properly\".\n\nSat Nov 27 16:49:21 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* fixed various VC++ warnings as suggested by Gilles Vollant\n\t<info@winimage.com>.\n\nWed Nov 24 12:08:16 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Modified TIFFquery.3t man pages info on TIFFIsByteSwapped() to\n\tnot imply applications are responsible for image data swapping.\n\n1999-11-22  Mike Welles <mike@onshore.com>\n\t*  HTML-ized the man pages, added to html/man\n\n\t*  Removed LZW Compression to comply with Unisys patent extortion.\n\n1999-09-29  Mike Welles\t\t<mike@onshore.com>\n\t*  Corrected one remaining 16 -> 32 bit value in tif_fax3.c,\n\t   From Ivo Penzar <ivo.penzar@infolink-software.com.\n\n\t*  Added patch from Ivo Penzar to have TiffAdvanceDirectory handle\n\t   memory mapped files. <ivo.penzar@infolink-software.com>\n\n1999-09-26  Mike Welles \t<mike@onshore.com>  *** 3.5.2 release ***\n\t* Corrected alpha versioning.\n\n\t* Removed distinction between  alpha and release targets in Makefile.in.\n\n\t* added release.stamp target, which tags cvs tree, and updates\n\t  \"RELEASE-DATE\"\n\n\t* added releasediff target, which diffs tree with source as of\n\t  date in \"RELEASE-DATE\"\n\n\t* Ticked up version to 3.5.2 (alpha 01 -- but I think we'll moving\n\t  away from alpha/non-alpha distinctions).\n\n\t* updated html to reflect release\n\n1999-09-23    <warmerda@CS46980-B>\n\n\t* Set O_BINARY for tif_unix.c open() ... used on cygwin for instance.\n\n\t* Added CYGWIN case in configure.\n\nFri Sep 17 00:13:51 CEST 1999  Mike Welles <mike@onshore.com>\n\n\t* Applied Francois Dagand's patch to handle fax decompression bug.\n\t  (sizes >= 65536 were failing)\n\nTue Sep 14 21:31:43 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Applied \"a\" mode fix to tif_win32.c/TIFFOpen() as suggested\n\t  by Christopher Lawton <clawton@mathworks.com>\n\nWed Sep  8 08:19:18 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added IRIX/gcc, and OSF/1 4.x support on behalf of\n\t  Albert Chin-A-Young <china@thewrittenword.com>\n\n\t* Added TIFFReassignTagToIgnore() API on behalf of\n\t  Bruce Cameron <cameron@petris.com>.  Man page still pending.\n\nWed Aug 25 11:39:07 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added test target in Makefile, test_pics.sh script and pics/*.rpt\n\tfiles to provide for a rudimentary testsuite.\n\n\t* Added contrib/tags back from old distribution ... fixed up a bit.\n\n1999-08-16    <warmerda@CS46980-B>\n\n\t* Added simple makefile.vc makefiles for building with MS VC++\n\ton Windows NT/98/95 in console mode.  Stuff in contrib/win* make give\n\tbetter solutions for some users.\n\nMon Aug 16 21:52:11 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* Added addtiffo (add overviews to a TIFF file) in contrib.  Didn't\n\tput it in tools since part of it is in C++.\n\n1999-08-16  Michael L. Welles  <mike@kurtz.fake>\n\n\t* Updated html/index.html with anon CVS instructions.\n\nMon Aug 16 13:18:41 1999  Frank Warmerdam  <warmerda@gdal.velocet.ca>\n\n\t* pre-remove so link before softlink in LINUXdso action in\n\tlibtiff/Makefile.in to avoid failure on LINUXdso builds other than\n\tthe first.\n\n\t* Fixed problem with cvtcmap() in tif_getimage.c modifying the\n\tcolormaps owned by the TIFF handle itself when trying to fixup wrong\n\t(eight bit) colormaps.  Corrected by maintaining a private copy of\n\tthe colormap.\n\n\t* Added TIFFReadRGBATile()/TIFFReadRGBAStrip() support in\n\ttif_getimage.c.\n\n\t* CVS Repository placed at remotesensing.org.  ChangeLog added.\n", "/* $Id$ */\n\n/* WARNING: The type of JPEG encapsulation defined by the TIFF Version 6.0\n   specification is now totally obsolete and deprecated for new applications and\n   images. This file was was created solely in order to read unconverted images\n   still present on some users' computer systems. It will never be extended\n   to write such files. Writing new-style JPEG compressed TIFFs is implemented\n   in tif_jpeg.c.\n\n   The code is carefully crafted to robustly read all gathered JPEG-in-TIFF\n   testfiles, and anticipate as much as possible all other... But still, it may\n   fail on some. If you encounter problems, please report them on the TIFF\n   mailing list and/or to Joris Van Damme <info@awaresystems.be>.\n\n   Please read the file called \"TIFF Technical Note #2\" if you need to be\n   convinced this compression scheme is bad and breaks TIFF. That document\n   is linked to from the LibTiff site <http://www.remotesensing.org/libtiff/>\n   and from AWare Systems' TIFF section\n   <http://www.awaresystems.be/imaging/tiff.html>. It is also absorbed\n   in Adobe's specification supplements, marked \"draft\" up to this day, but\n   supported by the TIFF community.\n\n   This file interfaces with Release 6B of the JPEG Library written by the\n   Independent JPEG Group. Previous versions of this file required a hack inside\n   the LibJpeg library. This version no longer requires that. Remember to\n   remove the hack if you update from the old version.\n\n   Copyright (c) Joris Van Damme <info@awaresystems.be>\n   Copyright (c) AWare Systems <http://www.awaresystems.be/>\n\n   The licence agreement for this file is the same as the rest of the LibTiff\n   library.\n\n   IN NO EVENT SHALL JORIS VAN DAMME OR AWARE SYSTEMS BE LIABLE FOR\n   ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,\n   OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n   WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF\n   LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE\n   OF THIS SOFTWARE.\n\n   Joris Van Damme and/or AWare Systems may be available for custom\n   development. If you like what you see, and need anything similar or related,\n   contact <info@awaresystems.be>.\n*/\n\n/* What is what, and what is not?\n\n   This decoder starts with an input stream, that is essentially the JpegInterchangeFormat\n   stream, if any, followed by the strile data, if any. This stream is read in\n   OJPEGReadByte and related functions.\n\n   It analyzes the start of this stream, until it encounters non-marker data, i.e.\n   compressed image data. Some of the header markers it sees have no actual content,\n   like the SOI marker, and APP/COM markers that really shouldn't even be there. Some\n   other markers do have content, and the valuable bits and pieces of information\n   in these markers are saved, checking all to verify that the stream is more or\n   less within expected bounds. This happens inside the OJPEGReadHeaderInfoSecStreamXxx\n   functions.\n\n   Some OJPEG imagery contains no valid JPEG header markers. This situation is picked\n   up on if we've seen no SOF marker when we're at the start of the compressed image\n   data. In this case, the tables are read from JpegXxxTables tags, and the other\n   bits and pieces of information is initialized to its most basic value. This is\n   implemented in the OJPEGReadHeaderInfoSecTablesXxx functions.\n\n   When this is complete, a good and valid JPEG header can be assembled, and this is\n   passed through to LibJpeg. When that's done, the remainder of the input stream, i.e.\n   the compressed image data, can be passed through unchanged. This is done in\n   OJPEGWriteStream functions.\n\n   LibTiff rightly expects to know the subsampling values before decompression. Just like\n   in new-style JPEG-in-TIFF, though, or even more so, actually, the YCbCrsubsampling\n   tag is notoriously unreliable. To correct these tag values with the ones inside\n   the JPEG stream, the first part of the input stream is pre-scanned in\n   OJPEGSubsamplingCorrect, making no note of any other data, reporting no warnings\n   or errors, up to the point where either these values are read, or it's clear they\n   aren't there. This means that some of the data is read twice, but we feel speed\n   in correcting these values is important enough to warrant this sacrifice. Although\n   there is currently no define or other configuration mechanism to disable this behaviour,\n   the actual header scanning is build to robustly respond with error report if it\n   should encounter an uncorrected mismatch of subsampling values. See\n   OJPEGReadHeaderInfoSecStreamSof.\n\n   The restart interval and restart markers are the most tricky part... The restart\n   interval can be specified in a tag. It can also be set inside the input JPEG stream.\n   It can be used inside the input JPEG stream. If reading from strile data, we've\n   consistently discovered the need to insert restart markers in between the different\n   striles, as is also probably the most likely interpretation of the original TIFF 6.0\n   specification. With all this setting of interval, and actual use of markers that is not\n   predictable at the time of valid JPEG header assembly, the restart thing may turn\n   out the Achilles heel of this implementation. Fortunately, most OJPEG writer vendors\n   succeed in reading back what they write, which may be the reason why we've been able\n   to discover ways that seem to work.\n\n   Some special provision is made for planarconfig separate OJPEG files. These seem\n   to consistently contain header info, a SOS marker, a plane, SOS marker, plane, SOS,\n   and plane. This may or may not be a valid JPEG configuration, we don't know and don't\n   care. We want LibTiff to be able to access the planes individually, without huge\n   buffering inside LibJpeg, anyway. So we compose headers to feed to LibJpeg, in this\n   case, that allow us to pass a single plane such that LibJpeg sees a valid\n   single-channel JPEG stream. Locating subsequent SOS markers, and thus subsequent\n   planes, is done inside OJPEGReadSecondarySos.\n\n   The benefit of the scheme is... that it works, basically. We know of no other that\n   does. It works without checking software tag, or otherwise going about things in an\n   OJPEG flavor specific manner. Instead, it is a single scheme, that covers the cases\n   with and without JpegInterchangeFormat, with and without striles, with part of\n   the header in JpegInterchangeFormat and remainder in first strile, etc. It is forgiving\n   and robust, may likely work with OJPEG flavors we've not seen yet, and makes most out\n   of the data.\n\n   Another nice side-effect is that a complete JPEG single valid stream is build if\n   planarconfig is not separate (vast majority). We may one day use that to build\n   converters to JPEG, and/or to new-style JPEG compression inside TIFF.\n\n   A disadvantage is the lack of random access to the individual striles. This is the\n   reason for much of the complicated restart-and-position stuff inside OJPEGPreDecode.\n   Applications would do well accessing all striles in order, as this will result in\n   a single sequential scan of the input stream, and no restarting of LibJpeg decoding\n   session.\n*/\n\n#define WIN32_LEAN_AND_MEAN\n#define VC_EXTRALEAN\n\n#include \"tiffiop.h\"\n#ifdef OJPEG_SUPPORT\n\n/* Configuration defines here are:\n * JPEG_ENCAP_EXTERNAL: The normal way to call libjpeg, uses longjump. In some environments,\n * \tlike eg LibTiffDelphi, this is not possible. For this reason, the actual calls to\n * \tlibjpeg, with longjump stuff, are encapsulated in dedicated functions. When\n * \tJPEG_ENCAP_EXTERNAL is defined, these encapsulating functions are declared external\n * \tto this unit, and can be defined elsewhere to use stuff other then longjump.\n * \tThe default mode, without JPEG_ENCAP_EXTERNAL, implements the call encapsulators\n * \there, internally, with normal longjump.\n * SETJMP, LONGJMP, JMP_BUF: On some machines/environments a longjump equivalent is\n * \tconveniently available, but still it may be worthwhile to use _setjmp or sigsetjmp\n * \tin place of plain setjmp. These macros will make it easier. It is useless\n * \tto fiddle with these if you define JPEG_ENCAP_EXTERNAL.\n * OJPEG_BUFFER: Define the size of the desired buffer here. Should be small enough so as to guarantee\n * \tinstant processing, optimal streaming and optimal use of processor cache, but also big\n * \tenough so as to not result in significant call overhead. It should be at least a few\n * \tbytes to accommodate some structures (this is verified in asserts), but it would not be\n * \tsensible to make it this small anyway, and it should be at most 64K since it is indexed\n * \twith uint16. We recommend 2K.\n * EGYPTIANWALK: You could also define EGYPTIANWALK here, but it is not used anywhere and has\n * \tabsolutely no effect. That is why most people insist the EGYPTIANWALK is a bit silly.\n */\n\n/* define LIBJPEG_ENCAP_EXTERNAL */\n#define SETJMP(jbuf) setjmp(jbuf)\n#define LONGJMP(jbuf,code) longjmp(jbuf,code)\n#define JMP_BUF jmp_buf\n#define OJPEG_BUFFER 2048\n/* define EGYPTIANWALK */\n\n#define JPEG_MARKER_SOF0 0xC0\n#define JPEG_MARKER_SOF1 0xC1\n#define JPEG_MARKER_SOF3 0xC3\n#define JPEG_MARKER_DHT 0xC4\n#define JPEG_MARKER_RST0 0XD0\n#define JPEG_MARKER_SOI 0xD8\n#define JPEG_MARKER_EOI 0xD9\n#define JPEG_MARKER_SOS 0xDA\n#define JPEG_MARKER_DQT 0xDB\n#define JPEG_MARKER_DRI 0xDD\n#define JPEG_MARKER_APP0 0xE0\n#define JPEG_MARKER_COM 0xFE\n\n#define FIELD_OJPEG_JPEGINTERCHANGEFORMAT (FIELD_CODEC+0)\n#define FIELD_OJPEG_JPEGINTERCHANGEFORMATLENGTH (FIELD_CODEC+1)\n#define FIELD_OJPEG_JPEGQTABLES (FIELD_CODEC+2)\n#define FIELD_OJPEG_JPEGDCTABLES (FIELD_CODEC+3)\n#define FIELD_OJPEG_JPEGACTABLES (FIELD_CODEC+4)\n#define FIELD_OJPEG_JPEGPROC (FIELD_CODEC+5)\n#define FIELD_OJPEG_JPEGRESTARTINTERVAL (FIELD_CODEC+6)\n\nstatic const TIFFField ojpegFields[] = {\n\t{TIFFTAG_JPEGIFOFFSET,1,1,TIFF_LONG8,0,TIFF_SETGET_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGINTERCHANGEFORMAT,TRUE,FALSE,\"JpegInterchangeFormat\",NULL},\n\t{TIFFTAG_JPEGIFBYTECOUNT,1,1,TIFF_LONG8,0,TIFF_SETGET_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGINTERCHANGEFORMATLENGTH,TRUE,FALSE,\"JpegInterchangeFormatLength\",NULL},\n\t{TIFFTAG_JPEGQTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGQTABLES,FALSE,TRUE,\"JpegQTables\",NULL},\n\t{TIFFTAG_JPEGDCTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGDCTABLES,FALSE,TRUE,\"JpegDcTables\",NULL},\n\t{TIFFTAG_JPEGACTABLES,TIFF_VARIABLE2,TIFF_VARIABLE2,TIFF_LONG8,0,TIFF_SETGET_C32_UINT64,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGACTABLES,FALSE,TRUE,\"JpegAcTables\",NULL},\n\t{TIFFTAG_JPEGPROC,1,1,TIFF_SHORT,0,TIFF_SETGET_UINT16,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGPROC,FALSE,FALSE,\"JpegProc\",NULL},\n\t{TIFFTAG_JPEGRESTARTINTERVAL,1,1,TIFF_SHORT,0,TIFF_SETGET_UINT16,TIFF_SETGET_UNDEFINED,FIELD_OJPEG_JPEGRESTARTINTERVAL,FALSE,FALSE,\"JpegRestartInterval\",NULL},\n};\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\n#include <setjmp.h>\n#endif\n\n/* We undefine FAR to avoid conflict with JPEG definition */\n\n#ifdef FAR\n#undef FAR\n#endif\n\n/*\n  Libjpeg's jmorecfg.h defines INT16 and INT32, but only if XMD_H is\n  not defined.  Unfortunately, the MinGW and Borland compilers include\n  a typedef for INT32, which causes a conflict.  MSVC does not include\n  a conflicting typedef given the headers which are included.\n*/\n#if defined(__BORLANDC__) || defined(__MINGW32__)\n# define XMD_H 1\n#endif\n\n/* Define \"boolean\" as unsigned char, not int, per Windows custom. */\n#if defined(__WIN32__) && !defined(__MINGW32__)\n# ifndef __RPCNDR_H__            /* don't conflict if rpcndr.h already read */\n   typedef unsigned char boolean;\n# endif\n# define HAVE_BOOLEAN            /* prevent jmorecfg.h from redefining it */\n#endif\n\n#include \"jpeglib.h\"\n#include \"jerror.h\"\n\ntypedef struct jpeg_error_mgr jpeg_error_mgr;\ntypedef struct jpeg_common_struct jpeg_common_struct;\ntypedef struct jpeg_decompress_struct jpeg_decompress_struct;\ntypedef struct jpeg_source_mgr jpeg_source_mgr;\n\ntypedef enum {\n\tosibsNotSetYet,\n\tosibsJpegInterchangeFormat,\n\tosibsStrile,\n\tosibsEof\n} OJPEGStateInBufferSource;\n\ntypedef enum {\n\tososSoi,\n\tososQTable0,ososQTable1,ososQTable2,ososQTable3,\n\tososDcTable0,ososDcTable1,ososDcTable2,ososDcTable3,\n\tososAcTable0,ososAcTable1,ososAcTable2,ososAcTable3,\n\tososDri,\n\tososSof,\n\tososSos,\n\tososCompressed,\n\tososRst,\n\tososEoi\n} OJPEGStateOutState;\n\ntypedef struct {\n\tTIFF* tif;\n        int decoder_ok;\n\t#ifndef LIBJPEG_ENCAP_EXTERNAL\n\tJMP_BUF exit_jmpbuf;\n\t#endif\n\tTIFFVGetMethod vgetparent;\n\tTIFFVSetMethod vsetparent;\n\tTIFFPrintMethod printdir;\n\tuint64 file_size;\n\tuint32 image_width;\n\tuint32 image_length;\n\tuint32 strile_width;\n\tuint32 strile_length;\n\tuint32 strile_length_total;\n\tuint8 samples_per_pixel;\n\tuint8 plane_sample_offset;\n\tuint8 samples_per_pixel_per_plane;\n\tuint64 jpeg_interchange_format;\n\tuint64 jpeg_interchange_format_length;\n\tuint8 jpeg_proc;\n\tuint8 subsamplingcorrect;\n\tuint8 subsamplingcorrect_done;\n\tuint8 subsampling_tag;\n\tuint8 subsampling_hor;\n\tuint8 subsampling_ver;\n\tuint8 subsampling_force_desubsampling_inside_decompression;\n\tuint8 qtable_offset_count;\n\tuint8 dctable_offset_count;\n\tuint8 actable_offset_count;\n\tuint64 qtable_offset[3];\n\tuint64 dctable_offset[3];\n\tuint64 actable_offset[3];\n\tuint8* qtable[4];\n\tuint8* dctable[4];\n\tuint8* actable[4];\n\tuint16 restart_interval;\n\tuint8 restart_index;\n\tuint8 sof_log;\n\tuint8 sof_marker_id;\n\tuint32 sof_x;\n\tuint32 sof_y;\n\tuint8 sof_c[3];\n\tuint8 sof_hv[3];\n\tuint8 sof_tq[3];\n\tuint8 sos_cs[3];\n\tuint8 sos_tda[3];\n\tstruct {\n\t\tuint8 log;\n\t\tOJPEGStateInBufferSource in_buffer_source;\n\t\tuint32 in_buffer_next_strile;\n\t\tuint64 in_buffer_file_pos;\n\t\tuint64 in_buffer_file_togo;\n\t} sos_end[3];\n\tuint8 readheader_done;\n\tuint8 writeheader_done;\n\tuint16 write_cursample;\n\tuint32 write_curstrile;\n\tuint8 libjpeg_session_active;\n\tuint8 libjpeg_jpeg_query_style;\n\tjpeg_error_mgr libjpeg_jpeg_error_mgr;\n\tjpeg_decompress_struct libjpeg_jpeg_decompress_struct;\n\tjpeg_source_mgr libjpeg_jpeg_source_mgr;\n\tuint8 subsampling_convert_log;\n\tuint32 subsampling_convert_ylinelen;\n\tuint32 subsampling_convert_ylines;\n\tuint32 subsampling_convert_clinelen;\n\tuint32 subsampling_convert_clines;\n\tuint32 subsampling_convert_ybuflen;\n\tuint32 subsampling_convert_cbuflen;\n\tuint32 subsampling_convert_ycbcrbuflen;\n\tuint8* subsampling_convert_ycbcrbuf;\n\tuint8* subsampling_convert_ybuf;\n\tuint8* subsampling_convert_cbbuf;\n\tuint8* subsampling_convert_crbuf;\n\tuint32 subsampling_convert_ycbcrimagelen;\n\tuint8** subsampling_convert_ycbcrimage;\n\tuint32 subsampling_convert_clinelenout;\n\tuint32 subsampling_convert_state;\n\tuint32 bytes_per_line;   /* if the codec outputs subsampled data, a 'line' in bytes_per_line */\n\tuint32 lines_per_strile; /* and lines_per_strile means subsampling_ver desubsampled rows     */\n\tOJPEGStateInBufferSource in_buffer_source;\n\tuint32 in_buffer_next_strile;\n\tuint32 in_buffer_strile_count;\n\tuint64 in_buffer_file_pos;\n\tuint8 in_buffer_file_pos_log;\n\tuint64 in_buffer_file_togo;\n\tuint16 in_buffer_togo;\n\tuint8* in_buffer_cur;\n\tuint8 in_buffer[OJPEG_BUFFER];\n\tOJPEGStateOutState out_state;\n\tuint8 out_buffer[OJPEG_BUFFER];\n\tuint8* skip_buffer;\n} OJPEGState;\n\nstatic int OJPEGVGetField(TIFF* tif, uint32 tag, va_list ap);\nstatic int OJPEGVSetField(TIFF* tif, uint32 tag, va_list ap);\nstatic void OJPEGPrintDir(TIFF* tif, FILE* fd, long flags);\n\nstatic int OJPEGFixupTags(TIFF* tif);\nstatic int OJPEGSetupDecode(TIFF* tif);\nstatic int OJPEGPreDecode(TIFF* tif, uint16 s);\nstatic int OJPEGPreDecodeSkipRaw(TIFF* tif);\nstatic int OJPEGPreDecodeSkipScanlines(TIFF* tif);\nstatic int OJPEGDecode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s);\nstatic int OJPEGDecodeRaw(TIFF* tif, uint8* buf, tmsize_t cc);\nstatic int OJPEGDecodeScanlines(TIFF* tif, uint8* buf, tmsize_t cc);\nstatic void OJPEGPostDecode(TIFF* tif, uint8* buf, tmsize_t cc);\nstatic int OJPEGSetupEncode(TIFF* tif);\nstatic int OJPEGPreEncode(TIFF* tif, uint16 s);\nstatic int OJPEGEncode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s);\nstatic int OJPEGPostEncode(TIFF* tif);\nstatic void OJPEGCleanup(TIFF* tif);\n\nstatic void OJPEGSubsamplingCorrect(TIFF* tif);\nstatic int OJPEGReadHeaderInfo(TIFF* tif);\nstatic int OJPEGReadSecondarySos(TIFF* tif, uint16 s);\nstatic int OJPEGWriteHeaderInfo(TIFF* tif);\nstatic void OJPEGLibjpegSessionAbort(TIFF* tif);\n\nstatic int OJPEGReadHeaderInfoSec(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamDri(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamDqt(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamDht(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecStreamSof(TIFF* tif, uint8 marker_id);\nstatic int OJPEGReadHeaderInfoSecStreamSos(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecTablesQTable(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecTablesDcTable(TIFF* tif);\nstatic int OJPEGReadHeaderInfoSecTablesAcTable(TIFF* tif);\n\nstatic int OJPEGReadBufferFill(OJPEGState* sp);\nstatic int OJPEGReadByte(OJPEGState* sp, uint8* byte);\nstatic int OJPEGReadBytePeek(OJPEGState* sp, uint8* byte);\nstatic void OJPEGReadByteAdvance(OJPEGState* sp);\nstatic int OJPEGReadWord(OJPEGState* sp, uint16* word);\nstatic int OJPEGReadBlock(OJPEGState* sp, uint16 len, void* mem);\nstatic void OJPEGReadSkip(OJPEGState* sp, uint16 len);\n\nstatic int OJPEGWriteStream(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamSoi(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamQTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);\nstatic void OJPEGWriteStreamDcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);\nstatic void OJPEGWriteStreamAcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len);\nstatic void OJPEGWriteStreamDri(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamSof(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamSos(TIFF* tif, void** mem, uint32* len);\nstatic int OJPEGWriteStreamCompressed(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamRst(TIFF* tif, void** mem, uint32* len);\nstatic void OJPEGWriteStreamEoi(TIFF* tif, void** mem, uint32* len);\n\n#ifdef LIBJPEG_ENCAP_EXTERNAL\nextern int jpeg_create_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo);\nextern int jpeg_read_header_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, uint8 require_image);\nextern int jpeg_start_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo);\nextern int jpeg_read_scanlines_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* scanlines, uint32 max_lines);\nextern int jpeg_read_raw_data_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* data, uint32 max_lines);\nextern void jpeg_encap_unwind(TIFF* tif);\n#else\nstatic int jpeg_create_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* j);\nstatic int jpeg_read_header_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, uint8 require_image);\nstatic int jpeg_start_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo);\nstatic int jpeg_read_scanlines_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* scanlines, uint32 max_lines);\nstatic int jpeg_read_raw_data_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* data, uint32 max_lines);\nstatic void jpeg_encap_unwind(TIFF* tif);\n#endif\n\nstatic void OJPEGLibjpegJpegErrorMgrOutputMessage(jpeg_common_struct* cinfo);\nstatic void OJPEGLibjpegJpegErrorMgrErrorExit(jpeg_common_struct* cinfo);\nstatic void OJPEGLibjpegJpegSourceMgrInitSource(jpeg_decompress_struct* cinfo);\nstatic boolean OJPEGLibjpegJpegSourceMgrFillInputBuffer(jpeg_decompress_struct* cinfo);\nstatic void OJPEGLibjpegJpegSourceMgrSkipInputData(jpeg_decompress_struct* cinfo, long num_bytes);\nstatic boolean OJPEGLibjpegJpegSourceMgrResyncToRestart(jpeg_decompress_struct* cinfo, int desired);\nstatic void OJPEGLibjpegJpegSourceMgrTermSource(jpeg_decompress_struct* cinfo);\n\nint\nTIFFInitOJPEG(TIFF* tif, int scheme)\n{\n\tstatic const char module[]=\"TIFFInitOJPEG\";\n\tOJPEGState* sp;\n\n\tassert(scheme==COMPRESSION_OJPEG);\n\n        /*\n\t * Merge codec-specific tag information.\n\t */\n\tif (!_TIFFMergeFields(tif, ojpegFields, TIFFArrayCount(ojpegFields))) {\n\t\tTIFFErrorExt(tif->tif_clientdata, module,\n\t\t    \"Merging Old JPEG codec-specific tags failed\");\n\t\treturn 0;\n\t}\n\n\t/* state block */\n\tsp=_TIFFmalloc(sizeof(OJPEGState));\n\tif (sp==NULL)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"No space for OJPEG state block\");\n\t\treturn(0);\n\t}\n\t_TIFFmemset(sp,0,sizeof(OJPEGState));\n\tsp->tif=tif;\n\tsp->jpeg_proc=1;\n\tsp->subsampling_hor=2;\n\tsp->subsampling_ver=2;\n\tTIFFSetField(tif,TIFFTAG_YCBCRSUBSAMPLING,2,2);\n\t/* tif codec methods */\n\ttif->tif_fixuptags=OJPEGFixupTags;  \n\ttif->tif_setupdecode=OJPEGSetupDecode;\n\ttif->tif_predecode=OJPEGPreDecode;\n\ttif->tif_postdecode=OJPEGPostDecode;  \n\ttif->tif_decoderow=OJPEGDecode;  \n\ttif->tif_decodestrip=OJPEGDecode;  \n\ttif->tif_decodetile=OJPEGDecode;  \n\ttif->tif_setupencode=OJPEGSetupEncode;\n\ttif->tif_preencode=OJPEGPreEncode;\n\ttif->tif_postencode=OJPEGPostEncode;\n\ttif->tif_encoderow=OJPEGEncode;  \n\ttif->tif_encodestrip=OJPEGEncode;  \n\ttif->tif_encodetile=OJPEGEncode;  \n\ttif->tif_cleanup=OJPEGCleanup;\n\ttif->tif_data=(uint8*)sp;\n\t/* tif tag methods */\n\tsp->vgetparent=tif->tif_tagmethods.vgetfield;\n\ttif->tif_tagmethods.vgetfield=OJPEGVGetField;\n\tsp->vsetparent=tif->tif_tagmethods.vsetfield;\n\ttif->tif_tagmethods.vsetfield=OJPEGVSetField;\n\tsp->printdir=tif->tif_tagmethods.printdir;\n\ttif->tif_tagmethods.printdir=OJPEGPrintDir;\n\t/* Some OJPEG files don't have strip or tile offsets or bytecounts tags.\n\t   Some others do, but have totally meaningless or corrupt values\n\t   in these tags. In these cases, the JpegInterchangeFormat stream is\n\t   reliable. In any case, this decoder reads the compressed data itself,\n\t   from the most reliable locations, and we need to notify encapsulating\n\t   LibTiff not to read raw strips or tiles for us. */\n\ttif->tif_flags|=TIFF_NOREADRAW;\n\treturn(1);\n}\n\nstatic int\nOJPEGVGetField(TIFF* tif, uint32 tag, va_list ap)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tswitch(tag)\n\t{\n\t\tcase TIFFTAG_JPEGIFOFFSET:\n\t\t\t*va_arg(ap,uint64*)=(uint64)sp->jpeg_interchange_format;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGIFBYTECOUNT:\n\t\t\t*va_arg(ap,uint64*)=(uint64)sp->jpeg_interchange_format_length;\n\t\t\tbreak;\n\t\tcase TIFFTAG_YCBCRSUBSAMPLING:\n\t\t\tif (sp->subsamplingcorrect_done==0)\n\t\t\t\tOJPEGSubsamplingCorrect(tif);\n\t\t\t*va_arg(ap,uint16*)=(uint16)sp->subsampling_hor;\n\t\t\t*va_arg(ap,uint16*)=(uint16)sp->subsampling_ver;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGQTABLES:\n\t\t\t*va_arg(ap,uint32*)=(uint32)sp->qtable_offset_count;\n\t\t\t*va_arg(ap,void**)=(void*)sp->qtable_offset; \n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGDCTABLES:\n\t\t\t*va_arg(ap,uint32*)=(uint32)sp->dctable_offset_count;\n\t\t\t*va_arg(ap,void**)=(void*)sp->dctable_offset;  \n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGACTABLES:\n\t\t\t*va_arg(ap,uint32*)=(uint32)sp->actable_offset_count;\n\t\t\t*va_arg(ap,void**)=(void*)sp->actable_offset;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGPROC:\n\t\t\t*va_arg(ap,uint16*)=(uint16)sp->jpeg_proc;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGRESTARTINTERVAL:\n\t\t\t*va_arg(ap,uint16*)=sp->restart_interval;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn (*sp->vgetparent)(tif,tag,ap);\n\t}\n\treturn (1);\n}\n\nstatic int\nOJPEGVSetField(TIFF* tif, uint32 tag, va_list ap)\n{\n\tstatic const char module[]=\"OJPEGVSetField\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 ma;\n\tuint64* mb;\n\tuint32 n;\n\tconst TIFFField* fip;\n\n\tswitch(tag)\n\t{\n\t\tcase TIFFTAG_JPEGIFOFFSET:\n\t\t\tsp->jpeg_interchange_format=(uint64)va_arg(ap,uint64);\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGIFBYTECOUNT:\n\t\t\tsp->jpeg_interchange_format_length=(uint64)va_arg(ap,uint64);\n\t\t\tbreak;\n\t\tcase TIFFTAG_YCBCRSUBSAMPLING:\n\t\t\tsp->subsampling_tag=1;\n\t\t\tsp->subsampling_hor=(uint8)va_arg(ap,uint16_vap);\n\t\t\tsp->subsampling_ver=(uint8)va_arg(ap,uint16_vap);\n\t\t\ttif->tif_dir.td_ycbcrsubsampling[0]=sp->subsampling_hor;\n\t\t\ttif->tif_dir.td_ycbcrsubsampling[1]=sp->subsampling_ver;\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGQTABLES:\n\t\t\tma=(uint32)va_arg(ap,uint32);\n\t\t\tif (ma!=0)\n\t\t\t{\n\t\t\t\tif (ma>3)\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JpegQTables tag has incorrect count\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tsp->qtable_offset_count=(uint8)ma;\n\t\t\t\tmb=(uint64*)va_arg(ap,uint64*);\n\t\t\t\tfor (n=0; n<ma; n++)\n\t\t\t\t\tsp->qtable_offset[n]=mb[n];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGDCTABLES:\n\t\t\tma=(uint32)va_arg(ap,uint32);\n\t\t\tif (ma!=0)\n\t\t\t{\n\t\t\t\tif (ma>3)\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JpegDcTables tag has incorrect count\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tsp->dctable_offset_count=(uint8)ma;\n\t\t\t\tmb=(uint64*)va_arg(ap,uint64*);\n\t\t\t\tfor (n=0; n<ma; n++)\n\t\t\t\t\tsp->dctable_offset[n]=mb[n];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGACTABLES:\n\t\t\tma=(uint32)va_arg(ap,uint32);\n\t\t\tif (ma!=0)\n\t\t\t{\n\t\t\t\tif (ma>3)\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JpegAcTables tag has incorrect count\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tsp->actable_offset_count=(uint8)ma;\n\t\t\t\tmb=(uint64*)va_arg(ap,uint64*);\n\t\t\t\tfor (n=0; n<ma; n++)\n\t\t\t\t\tsp->actable_offset[n]=mb[n];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGPROC:\n\t\t\tsp->jpeg_proc=(uint8)va_arg(ap,uint16_vap);\n\t\t\tbreak;\n\t\tcase TIFFTAG_JPEGRESTARTINTERVAL:\n\t\t\tsp->restart_interval=(uint16)va_arg(ap,uint16_vap);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn (*sp->vsetparent)(tif,tag,ap);\n\t}\n\tfip = TIFFFieldWithTag(tif,tag);\n\tif( fip == NULL ) /* shouldn't happen */\n\t    return(0);\n\tTIFFSetFieldBit(tif,fip->field_bit);\n\ttif->tif_flags|=TIFF_DIRTYDIRECT;\n\treturn(1);\n}\n\nstatic void\nOJPEGPrintDir(TIFF* tif, FILE* fd, long flags)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\t(void)flags;\n\tassert(sp!=NULL);\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGINTERCHANGEFORMAT))\n\t\tfprintf(fd,\"  JpegInterchangeFormat: \" TIFF_UINT64_FORMAT \"\\n\",(TIFF_UINT64_T)sp->jpeg_interchange_format);  \n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGINTERCHANGEFORMATLENGTH))\n\t\tfprintf(fd,\"  JpegInterchangeFormatLength: \" TIFF_UINT64_FORMAT \"\\n\",(TIFF_UINT64_T)sp->jpeg_interchange_format_length);  \n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGQTABLES))\n\t{\n\t\tfprintf(fd,\"  JpegQTables:\");\n\t\tfor (m=0; m<sp->qtable_offset_count; m++)\n\t\t\tfprintf(fd,\" \" TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->qtable_offset[m]);\n\t\tfprintf(fd,\"\\n\");\n\t}\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGDCTABLES))\n\t{\n\t\tfprintf(fd,\"  JpegDcTables:\");\n\t\tfor (m=0; m<sp->dctable_offset_count; m++)\n\t\t\tfprintf(fd,\" \" TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->dctable_offset[m]);\n\t\tfprintf(fd,\"\\n\");\n\t}\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGACTABLES))\n\t{\n\t\tfprintf(fd,\"  JpegAcTables:\");\n\t\tfor (m=0; m<sp->actable_offset_count; m++)\n\t\t\tfprintf(fd,\" \" TIFF_UINT64_FORMAT,(TIFF_UINT64_T)sp->actable_offset[m]);\n\t\tfprintf(fd,\"\\n\");\n\t}\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGPROC))\n\t\tfprintf(fd,\"  JpegProc: %u\\n\",(unsigned int)sp->jpeg_proc);\n\tif (TIFFFieldSet(tif,FIELD_OJPEG_JPEGRESTARTINTERVAL))\n\t\tfprintf(fd,\"  JpegRestartInterval: %u\\n\",(unsigned int)sp->restart_interval);\n\tif (sp->printdir)\n\t\t(*sp->printdir)(tif, fd, flags);\n}\n\nstatic int\nOJPEGFixupTags(TIFF* tif)\n{\n\t(void) tif;\n\treturn(1);\n}\n\nstatic int\nOJPEGSetupDecode(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGSetupDecode\";\n\tTIFFWarningExt(tif->tif_clientdata,module,\"Depreciated and troublesome old-style JPEG compression mode, please convert to new-style JPEG compression and notify vendor of writing software\");\n\treturn(1);\n}\n\nstatic int\nOJPEGPreDecode(TIFF* tif, uint16 s)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 m;\n\tif (sp->subsamplingcorrect_done==0)\n\t\tOJPEGSubsamplingCorrect(tif);\n\tif (sp->readheader_done==0)\n\t{\n\t\tif (OJPEGReadHeaderInfo(tif)==0)\n\t\t\treturn(0);\n\t}\n\tif (sp->sos_end[s].log==0)\n\t{\n\t\tif (OJPEGReadSecondarySos(tif,s)==0)\n\t\t\treturn(0);\n\t}\n\tif isTiled(tif)\n\t\tm=tif->tif_curtile;\n\telse\n\t\tm=tif->tif_curstrip;\n\tif ((sp->writeheader_done!=0) && ((sp->write_cursample!=s) || (sp->write_curstrile>m)))\n\t{\n\t\tif (sp->libjpeg_session_active!=0)\n\t\t\tOJPEGLibjpegSessionAbort(tif);\n\t\tsp->writeheader_done=0;\n\t}\n\tif (sp->writeheader_done==0)\n\t{\n\t\tsp->plane_sample_offset=(uint8)s;\n\t\tsp->write_cursample=s;\n\t\tsp->write_curstrile=s*tif->tif_dir.td_stripsperimage;\n\t\tif ((sp->in_buffer_file_pos_log==0) ||\n\t\t    (sp->in_buffer_file_pos-sp->in_buffer_togo!=sp->sos_end[s].in_buffer_file_pos))\n\t\t{\n\t\t\tsp->in_buffer_source=sp->sos_end[s].in_buffer_source;\n\t\t\tsp->in_buffer_next_strile=sp->sos_end[s].in_buffer_next_strile;\n\t\t\tsp->in_buffer_file_pos=sp->sos_end[s].in_buffer_file_pos;\n\t\t\tsp->in_buffer_file_pos_log=0;\n\t\t\tsp->in_buffer_file_togo=sp->sos_end[s].in_buffer_file_togo;\n\t\t\tsp->in_buffer_togo=0;\n\t\t\tsp->in_buffer_cur=0;\n\t\t}\n\t\tif (OJPEGWriteHeaderInfo(tif)==0)\n\t\t\treturn(0);\n\t}\n\twhile (sp->write_curstrile<m)          \n\t{\n\t\tif (sp->libjpeg_jpeg_query_style==0)\n\t\t{\n\t\t\tif (OJPEGPreDecodeSkipRaw(tif)==0)\n\t\t\t\treturn(0);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (OJPEGPreDecodeSkipScanlines(tif)==0)\n\t\t\t\treturn(0);\n\t\t}\n\t\tsp->write_curstrile++;\n\t}\n\tsp->decoder_ok = 1;\n\treturn(1);\n}\n\nstatic int\nOJPEGPreDecodeSkipRaw(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 m;\n\tm=sp->lines_per_strile;\n\tif (sp->subsampling_convert_state!=0)\n\t{\n\t\tif (sp->subsampling_convert_clines-sp->subsampling_convert_state>=m)\n\t\t{\n\t\t\tsp->subsampling_convert_state+=m;\n\t\t\tif (sp->subsampling_convert_state==sp->subsampling_convert_clines)\n\t\t\t\tsp->subsampling_convert_state=0;\n\t\t\treturn(1);\n\t\t}\n\t\tm-=sp->subsampling_convert_clines-sp->subsampling_convert_state;\n\t\tsp->subsampling_convert_state=0;\n\t}\n\twhile (m>=sp->subsampling_convert_clines)\n\t{\n\t\tif (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)\n\t\t\treturn(0);\n\t\tm-=sp->subsampling_convert_clines;\n\t}\n\tif (m>0)\n\t{\n\t\tif (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)\n\t\t\treturn(0);\n\t\tsp->subsampling_convert_state=m;\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGPreDecodeSkipScanlines(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGPreDecodeSkipScanlines\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint32 m;\n\tif (sp->skip_buffer==NULL)\n\t{\n\t\tsp->skip_buffer=_TIFFmalloc(sp->bytes_per_line);\n\t\tif (sp->skip_buffer==NULL)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\treturn(0);\n\t\t}\n\t}\n\tfor (m=0; m<sp->lines_per_strile; m++)\n\t{\n\t\tif (jpeg_read_scanlines_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),&sp->skip_buffer,1)==0)\n\t\t\treturn(0);\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGDecode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s)\n{\n        static const char module[]=\"OJPEGDecode\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\t(void)s;\n        if( !sp->decoder_ok )\n        {\n            TIFFErrorExt(tif->tif_clientdata,module,\"Cannot decode: decoder not correctly initialized\");\n            return 0;\n        }\n\tif (sp->libjpeg_jpeg_query_style==0)\n\t{\n\t\tif (OJPEGDecodeRaw(tif,buf,cc)==0)\n\t\t\treturn(0);\n\t}\n\telse\n\t{\n\t\tif (OJPEGDecodeScanlines(tif,buf,cc)==0)\n\t\t\treturn(0);\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGDecodeRaw(TIFF* tif, uint8* buf, tmsize_t cc)\n{\n\tstatic const char module[]=\"OJPEGDecodeRaw\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8* m;\n\ttmsize_t n;\n\tuint8* oy;\n\tuint8* ocb;\n\tuint8* ocr;\n\tuint8* p;\n\tuint32 q;\n\tuint8* r;\n\tuint8 sx,sy;\n\tif (cc%sp->bytes_per_line!=0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Fractional scanline not read\");\n\t\treturn(0);\n\t}\n\tassert(cc>0);\n\tm=buf;\n\tn=cc;\n\tdo\n\t{\n\t\tif (sp->subsampling_convert_state==0)\n\t\t{\n\t\t\tif (jpeg_read_raw_data_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),sp->subsampling_convert_ycbcrimage,sp->subsampling_ver*8)==0)\n\t\t\t\treturn(0);\n\t\t}\n\t\toy=sp->subsampling_convert_ybuf+sp->subsampling_convert_state*sp->subsampling_ver*sp->subsampling_convert_ylinelen;\n\t\tocb=sp->subsampling_convert_cbbuf+sp->subsampling_convert_state*sp->subsampling_convert_clinelen;\n\t\tocr=sp->subsampling_convert_crbuf+sp->subsampling_convert_state*sp->subsampling_convert_clinelen;\n\t\tp=m;\n\t\tfor (q=0; q<sp->subsampling_convert_clinelenout; q++)\n\t\t{\n\t\t\tr=oy;\n\t\t\tfor (sy=0; sy<sp->subsampling_ver; sy++)\n\t\t\t{\n\t\t\t\tfor (sx=0; sx<sp->subsampling_hor; sx++)\n\t\t\t\t\t*p++=*r++;\n\t\t\t\tr+=sp->subsampling_convert_ylinelen-sp->subsampling_hor;\n\t\t\t}\n\t\t\toy+=sp->subsampling_hor;\n\t\t\t*p++=*ocb++;\n\t\t\t*p++=*ocr++;\n\t\t}\n\t\tsp->subsampling_convert_state++;\n\t\tif (sp->subsampling_convert_state==sp->subsampling_convert_clines)\n\t\t\tsp->subsampling_convert_state=0;\n\t\tm+=sp->bytes_per_line;\n\t\tn-=sp->bytes_per_line;\n\t} while(n>0);\n\treturn(1);\n}\n\nstatic int\nOJPEGDecodeScanlines(TIFF* tif, uint8* buf, tmsize_t cc)\n{\n\tstatic const char module[]=\"OJPEGDecodeScanlines\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8* m;\n\ttmsize_t n;\n\tif (cc%sp->bytes_per_line!=0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Fractional scanline not read\");\n\t\treturn(0);\n\t}\n\tassert(cc>0);\n\tm=buf;\n\tn=cc;\n\tdo\n\t{\n\t\tif (jpeg_read_scanlines_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),&m,1)==0)\n\t\t\treturn(0);\n\t\tm+=sp->bytes_per_line;\n\t\tn-=sp->bytes_per_line;\n\t} while(n>0);\n\treturn(1);\n}\n\nstatic void\nOJPEGPostDecode(TIFF* tif, uint8* buf, tmsize_t cc)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\t(void)buf;\n\t(void)cc;\n\tsp->write_curstrile++;\n\tif (sp->write_curstrile%tif->tif_dir.td_stripsperimage==0)  \n\t{\n\t\tassert(sp->libjpeg_session_active!=0);\n\t\tOJPEGLibjpegSessionAbort(tif);\n\t\tsp->writeheader_done=0;\n\t}\n}\n\nstatic int\nOJPEGSetupEncode(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGSetupEncode\";\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic int\nOJPEGPreEncode(TIFF* tif, uint16 s)\n{\n\tstatic const char module[]=\"OJPEGPreEncode\";\n\t(void)s;\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic int\nOJPEGEncode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s)\n{\n\tstatic const char module[]=\"OJPEGEncode\";\n\t(void)buf;\n\t(void)cc;\n\t(void)s;\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic int\nOJPEGPostEncode(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGPostEncode\";\n\tTIFFErrorExt(tif->tif_clientdata,module,\"OJPEG encoding not supported; use new-style JPEG compression instead\");\n\treturn(0);\n}\n\nstatic void\nOJPEGCleanup(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp!=0)\n\t{\n\t\ttif->tif_tagmethods.vgetfield=sp->vgetparent;\n\t\ttif->tif_tagmethods.vsetfield=sp->vsetparent;\n\t\ttif->tif_tagmethods.printdir=sp->printdir;\n\t\tif (sp->qtable[0]!=0)\n\t\t\t_TIFFfree(sp->qtable[0]);\n\t\tif (sp->qtable[1]!=0)\n\t\t\t_TIFFfree(sp->qtable[1]);\n\t\tif (sp->qtable[2]!=0)\n\t\t\t_TIFFfree(sp->qtable[2]);\n\t\tif (sp->qtable[3]!=0)\n\t\t\t_TIFFfree(sp->qtable[3]);\n\t\tif (sp->dctable[0]!=0)\n\t\t\t_TIFFfree(sp->dctable[0]);\n\t\tif (sp->dctable[1]!=0)\n\t\t\t_TIFFfree(sp->dctable[1]);\n\t\tif (sp->dctable[2]!=0)\n\t\t\t_TIFFfree(sp->dctable[2]);\n\t\tif (sp->dctable[3]!=0)\n\t\t\t_TIFFfree(sp->dctable[3]);\n\t\tif (sp->actable[0]!=0)\n\t\t\t_TIFFfree(sp->actable[0]);\n\t\tif (sp->actable[1]!=0)\n\t\t\t_TIFFfree(sp->actable[1]);\n\t\tif (sp->actable[2]!=0)\n\t\t\t_TIFFfree(sp->actable[2]);\n\t\tif (sp->actable[3]!=0)\n\t\t\t_TIFFfree(sp->actable[3]);\n\t\tif (sp->libjpeg_session_active!=0)\n\t\t\tOJPEGLibjpegSessionAbort(tif);\n\t\tif (sp->subsampling_convert_ycbcrbuf!=0)\n\t\t\t_TIFFfree(sp->subsampling_convert_ycbcrbuf);\n\t\tif (sp->subsampling_convert_ycbcrimage!=0)\n\t\t\t_TIFFfree(sp->subsampling_convert_ycbcrimage);\n\t\tif (sp->skip_buffer!=0)\n\t\t\t_TIFFfree(sp->skip_buffer);\n\t\t_TIFFfree(sp);\n\t\ttif->tif_data=NULL;\n\t\t_TIFFSetDefaultCompressionState(tif);\n\t}\n}\n\nstatic void\nOJPEGSubsamplingCorrect(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGSubsamplingCorrect\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 mh;\n\tuint8 mv;\n        _TIFFFillStriles( tif );\n        \n\tassert(sp->subsamplingcorrect_done==0);\n\tif ((tif->tif_dir.td_samplesperpixel!=3) || ((tif->tif_dir.td_photometric!=PHOTOMETRIC_YCBCR) &&\n\t    (tif->tif_dir.td_photometric!=PHOTOMETRIC_ITULAB)))\n\t{\n\t\tif (sp->subsampling_tag!=0)\n\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling tag not appropriate for this Photometric and/or SamplesPerPixel\");\n\t\tsp->subsampling_hor=1;\n\t\tsp->subsampling_ver=1;\n\t\tsp->subsampling_force_desubsampling_inside_decompression=0;\n\t}\n\telse\n\t{\n\t\tsp->subsamplingcorrect_done=1;\n\t\tmh=sp->subsampling_hor;\n\t\tmv=sp->subsampling_ver;\n\t\tsp->subsamplingcorrect=1;\n\t\tOJPEGReadHeaderInfoSec(tif);\n\t\tif (sp->subsampling_force_desubsampling_inside_decompression!=0)\n\t\t{\n\t\t\tsp->subsampling_hor=1;\n\t\t\tsp->subsampling_ver=1;\n\t\t}\n\t\tsp->subsamplingcorrect=0;\n\t\tif (((sp->subsampling_hor!=mh) || (sp->subsampling_ver!=mv)) && (sp->subsampling_force_desubsampling_inside_decompression==0))\n\t\t{\n\t\t\tif (sp->subsampling_tag==0)\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling tag is not set, yet subsampling inside JPEG data [%d,%d] does not match default values [2,2]; assuming subsampling inside JPEG data is correct\",sp->subsampling_hor,sp->subsampling_ver);\n\t\t\telse\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling inside JPEG data [%d,%d] does not match subsampling tag values [%d,%d]; assuming subsampling inside JPEG data is correct\",sp->subsampling_hor,sp->subsampling_ver,mh,mv);\n\t\t}\n\t\tif (sp->subsampling_force_desubsampling_inside_decompression!=0)\n\t\t{\n\t\t\tif (sp->subsampling_tag==0)\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling tag is not set, yet subsampling inside JPEG data does not match default values [2,2] (nor any other values allowed in TIFF); assuming subsampling inside JPEG data is correct and desubsampling inside JPEG decompression\");\n\t\t\telse\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling inside JPEG data does not match subsampling tag values [%d,%d] (nor any other values allowed in TIFF); assuming subsampling inside JPEG data is correct and desubsampling inside JPEG decompression\",mh,mv);\n\t\t}\n\t\tif (sp->subsampling_force_desubsampling_inside_decompression==0)\n\t\t{\n\t\t\tif (sp->subsampling_hor<sp->subsampling_ver)\n\t\t\t\tTIFFWarningExt(tif->tif_clientdata,module,\"Subsampling values [%d,%d] are not allowed in TIFF\",sp->subsampling_hor,sp->subsampling_ver);\n\t\t}\n\t}\n\tsp->subsamplingcorrect_done=1;\n}\n\nstatic int\nOJPEGReadHeaderInfo(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfo\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(sp->readheader_done==0);\n\tsp->image_width=tif->tif_dir.td_imagewidth;\n\tsp->image_length=tif->tif_dir.td_imagelength;\n\tif isTiled(tif)\n\t{\n\t\tsp->strile_width=tif->tif_dir.td_tilewidth;\n\t\tsp->strile_length=tif->tif_dir.td_tilelength;\n\t\tsp->strile_length_total=((sp->image_length+sp->strile_length-1)/sp->strile_length)*sp->strile_length;\n\t}\n\telse\n\t{\n\t\tsp->strile_width=sp->image_width;\n\t\tsp->strile_length=tif->tif_dir.td_rowsperstrip;\n\t\tsp->strile_length_total=sp->image_length;\n\t}\n\tif (tif->tif_dir.td_samplesperpixel==1)\n\t{\n\t\tsp->samples_per_pixel=1;\n\t\tsp->plane_sample_offset=0;\n\t\tsp->samples_per_pixel_per_plane=sp->samples_per_pixel;\n\t\tsp->subsampling_hor=1;\n\t\tsp->subsampling_ver=1;\n\t}\n\telse\n\t{\n\t\tif (tif->tif_dir.td_samplesperpixel!=3)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"SamplesPerPixel %d not supported for this compression scheme\",sp->samples_per_pixel);\n\t\t\treturn(0);\n\t\t}\n\t\tsp->samples_per_pixel=3;\n\t\tsp->plane_sample_offset=0;\n\t\tif (tif->tif_dir.td_planarconfig==PLANARCONFIG_CONTIG)\n\t\t\tsp->samples_per_pixel_per_plane=3;\n\t\telse\n\t\t\tsp->samples_per_pixel_per_plane=1;\n\t}\n\tif (sp->strile_length<sp->image_length)\n\t{\n\t\tif (sp->strile_length%(sp->subsampling_ver*8)!=0)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Incompatible vertical subsampling and image strip/tile length\");\n\t\t\treturn(0);\n\t\t}\n\t\tsp->restart_interval=(uint16)(((sp->strile_width+sp->subsampling_hor*8-1)/(sp->subsampling_hor*8))*(sp->strile_length/(sp->subsampling_ver*8)));\n\t}\n\tif (OJPEGReadHeaderInfoSec(tif)==0)\n\t\treturn(0);\n\tsp->sos_end[0].log=1;\n\tsp->sos_end[0].in_buffer_source=sp->in_buffer_source;\n\tsp->sos_end[0].in_buffer_next_strile=sp->in_buffer_next_strile;\n\tsp->sos_end[0].in_buffer_file_pos=sp->in_buffer_file_pos-sp->in_buffer_togo;\n\tsp->sos_end[0].in_buffer_file_togo=sp->in_buffer_file_togo+sp->in_buffer_togo; \n\tsp->readheader_done=1;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadSecondarySos(TIFF* tif, uint16 s)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tassert(s>0);\n\tassert(s<3);\n\tassert(sp->sos_end[0].log!=0);\n\tassert(sp->sos_end[s].log==0);\n\tsp->plane_sample_offset=(uint8)(s-1);\n\twhile(sp->sos_end[sp->plane_sample_offset].log==0)\n\t\tsp->plane_sample_offset--;\n\tsp->in_buffer_source=sp->sos_end[sp->plane_sample_offset].in_buffer_source;\n\tsp->in_buffer_next_strile=sp->sos_end[sp->plane_sample_offset].in_buffer_next_strile;\n\tsp->in_buffer_file_pos=sp->sos_end[sp->plane_sample_offset].in_buffer_file_pos;\n\tsp->in_buffer_file_pos_log=0;\n\tsp->in_buffer_file_togo=sp->sos_end[sp->plane_sample_offset].in_buffer_file_togo;\n\tsp->in_buffer_togo=0;\n\tsp->in_buffer_cur=0;\n\twhile(sp->plane_sample_offset<s)\n\t{\n\t\tdo\n\t\t{\n\t\t\tif (OJPEGReadByte(sp,&m)==0)\n\t\t\t\treturn(0);\n\t\t\tif (m==255)\n\t\t\t{\n\t\t\t\tdo\n\t\t\t\t{\n\t\t\t\t\tif (OJPEGReadByte(sp,&m)==0)\n\t\t\t\t\t\treturn(0);\n\t\t\t\t\tif (m!=255)\n\t\t\t\t\t\tbreak;\n\t\t\t\t} while(1);\n\t\t\t\tif (m==JPEG_MARKER_SOS)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(1);\n\t\tsp->plane_sample_offset++;\n\t\tif (OJPEGReadHeaderInfoSecStreamSos(tif)==0)\n\t\t\treturn(0);\n\t\tsp->sos_end[sp->plane_sample_offset].log=1;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_source=sp->in_buffer_source;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_next_strile=sp->in_buffer_next_strile;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_file_pos=sp->in_buffer_file_pos-sp->in_buffer_togo;\n\t\tsp->sos_end[sp->plane_sample_offset].in_buffer_file_togo=sp->in_buffer_file_togo+sp->in_buffer_togo;\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGWriteHeaderInfo(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGWriteHeaderInfo\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8** m;\n\tuint32 n;\n\t/* if a previous attempt failed, don't try again */\n\tif (sp->libjpeg_session_active != 0) \n\t\treturn 0;\n\tsp->out_state=ososSoi;\n\tsp->restart_index=0;\n\tjpeg_std_error(&(sp->libjpeg_jpeg_error_mgr));\n\tsp->libjpeg_jpeg_error_mgr.output_message=OJPEGLibjpegJpegErrorMgrOutputMessage;\n\tsp->libjpeg_jpeg_error_mgr.error_exit=OJPEGLibjpegJpegErrorMgrErrorExit;\n\tsp->libjpeg_jpeg_decompress_struct.err=&(sp->libjpeg_jpeg_error_mgr);\n\tsp->libjpeg_jpeg_decompress_struct.client_data=(void*)tif;\n\tif (jpeg_create_decompress_encap(sp,&(sp->libjpeg_jpeg_decompress_struct))==0)\n\t\treturn(0);\n\tsp->libjpeg_session_active=1;\n\tsp->libjpeg_jpeg_source_mgr.bytes_in_buffer=0;\n\tsp->libjpeg_jpeg_source_mgr.init_source=OJPEGLibjpegJpegSourceMgrInitSource;\n\tsp->libjpeg_jpeg_source_mgr.fill_input_buffer=OJPEGLibjpegJpegSourceMgrFillInputBuffer;\n\tsp->libjpeg_jpeg_source_mgr.skip_input_data=OJPEGLibjpegJpegSourceMgrSkipInputData;\n\tsp->libjpeg_jpeg_source_mgr.resync_to_restart=OJPEGLibjpegJpegSourceMgrResyncToRestart;\n\tsp->libjpeg_jpeg_source_mgr.term_source=OJPEGLibjpegJpegSourceMgrTermSource;\n\tsp->libjpeg_jpeg_decompress_struct.src=&(sp->libjpeg_jpeg_source_mgr);\n\tif (jpeg_read_header_encap(sp,&(sp->libjpeg_jpeg_decompress_struct),1)==0)\n\t\treturn(0);\n\tif ((sp->subsampling_force_desubsampling_inside_decompression==0) && (sp->samples_per_pixel_per_plane>1))\n\t{\n\t\tsp->libjpeg_jpeg_decompress_struct.raw_data_out=1;\n#if JPEG_LIB_VERSION >= 70\n\t\tsp->libjpeg_jpeg_decompress_struct.do_fancy_upsampling=FALSE;\n#endif\n\t\tsp->libjpeg_jpeg_query_style=0;\n\t\tif (sp->subsampling_convert_log==0)\n\t\t{\n\t\t\tassert(sp->subsampling_convert_ycbcrbuf==0);\n\t\t\tassert(sp->subsampling_convert_ycbcrimage==0);\n\t\t\tsp->subsampling_convert_ylinelen=((sp->strile_width+sp->subsampling_hor*8-1)/(sp->subsampling_hor*8)*sp->subsampling_hor*8);\n\t\t\tsp->subsampling_convert_ylines=sp->subsampling_ver*8;\n\t\t\tsp->subsampling_convert_clinelen=sp->subsampling_convert_ylinelen/sp->subsampling_hor;\n\t\t\tsp->subsampling_convert_clines=8;\n\t\t\tsp->subsampling_convert_ybuflen=sp->subsampling_convert_ylinelen*sp->subsampling_convert_ylines;\n\t\t\tsp->subsampling_convert_cbuflen=sp->subsampling_convert_clinelen*sp->subsampling_convert_clines;\n\t\t\tsp->subsampling_convert_ycbcrbuflen=sp->subsampling_convert_ybuflen+2*sp->subsampling_convert_cbuflen;\n\t\t\tsp->subsampling_convert_ycbcrbuf=_TIFFmalloc(sp->subsampling_convert_ycbcrbuflen);\n\t\t\tif (sp->subsampling_convert_ycbcrbuf==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tsp->subsampling_convert_ybuf=sp->subsampling_convert_ycbcrbuf;\n\t\t\tsp->subsampling_convert_cbbuf=sp->subsampling_convert_ybuf+sp->subsampling_convert_ybuflen;\n\t\t\tsp->subsampling_convert_crbuf=sp->subsampling_convert_cbbuf+sp->subsampling_convert_cbuflen;\n\t\t\tsp->subsampling_convert_ycbcrimagelen=3+sp->subsampling_convert_ylines+2*sp->subsampling_convert_clines;\n\t\t\tsp->subsampling_convert_ycbcrimage=_TIFFmalloc(sp->subsampling_convert_ycbcrimagelen*sizeof(uint8*));\n\t\t\tif (sp->subsampling_convert_ycbcrimage==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tm=sp->subsampling_convert_ycbcrimage;\n\t\t\t*m++=(uint8*)(sp->subsampling_convert_ycbcrimage+3);\n\t\t\t*m++=(uint8*)(sp->subsampling_convert_ycbcrimage+3+sp->subsampling_convert_ylines);\n\t\t\t*m++=(uint8*)(sp->subsampling_convert_ycbcrimage+3+sp->subsampling_convert_ylines+sp->subsampling_convert_clines);\n\t\t\tfor (n=0; n<sp->subsampling_convert_ylines; n++)\n\t\t\t\t*m++=sp->subsampling_convert_ybuf+n*sp->subsampling_convert_ylinelen;\n\t\t\tfor (n=0; n<sp->subsampling_convert_clines; n++)\n\t\t\t\t*m++=sp->subsampling_convert_cbbuf+n*sp->subsampling_convert_clinelen;\n\t\t\tfor (n=0; n<sp->subsampling_convert_clines; n++)\n\t\t\t\t*m++=sp->subsampling_convert_crbuf+n*sp->subsampling_convert_clinelen;\n\t\t\tsp->subsampling_convert_clinelenout=((sp->strile_width+sp->subsampling_hor-1)/sp->subsampling_hor);\n\t\t\tsp->subsampling_convert_state=0;\n\t\t\tsp->bytes_per_line=sp->subsampling_convert_clinelenout*(sp->subsampling_ver*sp->subsampling_hor+2);\n\t\t\tsp->lines_per_strile=((sp->strile_length+sp->subsampling_ver-1)/sp->subsampling_ver);\n\t\t\tsp->subsampling_convert_log=1;\n\t\t}\n\t}\n\telse\n\t{\n\t\tsp->libjpeg_jpeg_decompress_struct.jpeg_color_space=JCS_UNKNOWN;\n\t\tsp->libjpeg_jpeg_decompress_struct.out_color_space=JCS_UNKNOWN;\n\t\tsp->libjpeg_jpeg_query_style=1;\n\t\tsp->bytes_per_line=sp->samples_per_pixel_per_plane*sp->strile_width;\n\t\tsp->lines_per_strile=sp->strile_length;\n\t}\n\tif (jpeg_start_decompress_encap(sp,&(sp->libjpeg_jpeg_decompress_struct))==0)\n\t\treturn(0);\n\tsp->writeheader_done=1;\n\treturn(1);\n}\n\nstatic void\nOJPEGLibjpegSessionAbort(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(sp->libjpeg_session_active!=0);\n\tjpeg_destroy((jpeg_common_struct*)(&(sp->libjpeg_jpeg_decompress_struct)));\n\tsp->libjpeg_session_active=0;\n}\n\nstatic int\nOJPEGReadHeaderInfoSec(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSec\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint16 n;\n\tuint8 o;\n\tif (sp->file_size==0)\n\t\tsp->file_size=TIFFGetFileSize(tif);\n\tif (sp->jpeg_interchange_format!=0)\n\t{\n\t\tif (sp->jpeg_interchange_format>=sp->file_size)\n\t\t{\n\t\t\tsp->jpeg_interchange_format=0;\n\t\t\tsp->jpeg_interchange_format_length=0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((sp->jpeg_interchange_format_length==0) || (sp->jpeg_interchange_format+sp->jpeg_interchange_format_length>sp->file_size))\n\t\t\t\tsp->jpeg_interchange_format_length=sp->file_size-sp->jpeg_interchange_format;\n\t\t}\n\t}\n\tsp->in_buffer_source=osibsNotSetYet;\n\tsp->in_buffer_next_strile=0;\n\tsp->in_buffer_strile_count=tif->tif_dir.td_nstrips;\n\tsp->in_buffer_file_togo=0;\n\tsp->in_buffer_togo=0;\n\tdo\n\t{\n\t\tif (OJPEGReadBytePeek(sp,&m)==0)\n\t\t\treturn(0);\n\t\tif (m!=255)\n\t\t\tbreak;\n\t\tOJPEGReadByteAdvance(sp);\n\t\tdo\n\t\t{\n\t\t\tif (OJPEGReadByte(sp,&m)==0)\n\t\t\t\treturn(0);\n\t\t} while(m==255);\n\t\tswitch(m)\n\t\t{\n\t\t\tcase JPEG_MARKER_SOI:\n\t\t\t\t/* this type of marker has no data, and should be skipped */\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_COM:\n\t\t\tcase JPEG_MARKER_APP0:\n\t\t\tcase JPEG_MARKER_APP0+1:\n\t\t\tcase JPEG_MARKER_APP0+2:\n\t\t\tcase JPEG_MARKER_APP0+3:\n\t\t\tcase JPEG_MARKER_APP0+4:\n\t\t\tcase JPEG_MARKER_APP0+5:\n\t\t\tcase JPEG_MARKER_APP0+6:\n\t\t\tcase JPEG_MARKER_APP0+7:\n\t\t\tcase JPEG_MARKER_APP0+8:\n\t\t\tcase JPEG_MARKER_APP0+9:\n\t\t\tcase JPEG_MARKER_APP0+10:\n\t\t\tcase JPEG_MARKER_APP0+11:\n\t\t\tcase JPEG_MARKER_APP0+12:\n\t\t\tcase JPEG_MARKER_APP0+13:\n\t\t\tcase JPEG_MARKER_APP0+14:\n\t\t\tcase JPEG_MARKER_APP0+15:\n\t\t\t\t/* this type of marker has data, but it has no use to us (and no place here) and should be skipped */\n\t\t\t\tif (OJPEGReadWord(sp,&n)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tif (n<2)\n\t\t\t\t{\n\t\t\t\t\tif (sp->subsamplingcorrect==0)\n\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JPEG data\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t\tif (n>2)\n\t\t\t\t\tOJPEGReadSkip(sp,n-2);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_DRI:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamDri(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_DQT:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamDqt(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_DHT:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamDht(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_SOF0:\n\t\t\tcase JPEG_MARKER_SOF1:\n\t\t\tcase JPEG_MARKER_SOF3:\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamSof(tif,m)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tif (sp->subsamplingcorrect!=0)\n\t\t\t\t\treturn(1);\n\t\t\t\tbreak;\n\t\t\tcase JPEG_MARKER_SOS:\n\t\t\t\tif (sp->subsamplingcorrect!=0)\n\t\t\t\t\treturn(1);\n\t\t\t\tassert(sp->plane_sample_offset==0);\n\t\t\t\tif (OJPEGReadHeaderInfoSecStreamSos(tif)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Unknown marker type %d in JPEG data\",m);\n\t\t\t\treturn(0);\n\t\t}\n\t} while(m!=JPEG_MARKER_SOS);\n\tif (sp->subsamplingcorrect)\n\t\treturn(1);\n\tif (sp->sof_log==0)\n\t{\n\t\tif (OJPEGReadHeaderInfoSecTablesQTable(tif)==0)\n\t\t\treturn(0);\n\t\tsp->sof_marker_id=JPEG_MARKER_SOF0;\n\t\tfor (o=0; o<sp->samples_per_pixel; o++)\n\t\t\tsp->sof_c[o]=o;\n\t\tsp->sof_hv[0]=((sp->subsampling_hor<<4)|sp->subsampling_ver);\n\t\tfor (o=1; o<sp->samples_per_pixel; o++)\n\t\t\tsp->sof_hv[o]=17;\n\t\tsp->sof_x=sp->strile_width;\n\t\tsp->sof_y=sp->strile_length_total;\n\t\tsp->sof_log=1;\n\t\tif (OJPEGReadHeaderInfoSecTablesDcTable(tif)==0)\n\t\t\treturn(0);\n\t\tif (OJPEGReadHeaderInfoSecTablesAcTable(tif)==0)\n\t\t\treturn(0);\n\t\tfor (o=1; o<sp->samples_per_pixel; o++)\n\t\t\tsp->sos_cs[o]=o;\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamDri(TIFF* tif)\n{\n\t/* This could easily cause trouble in some cases... but no such cases have\n           occurred so far */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamDri\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m!=4)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DRI marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tsp->restart_interval=m;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamDqt(TIFF* tif)\n{\n\t/* this is a table marker, and it is to be saved as a whole for exact pushing on the jpeg stream later on */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamDqt\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint32 na;\n\tuint8* nb;\n\tuint8 o;\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m<=2)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DQT marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tif (sp->subsamplingcorrect!=0)\n\t\tOJPEGReadSkip(sp,m-2);\n\telse\n\t{\n\t\tm-=2;\n\t\tdo\n\t\t{\n\t\t\tif (m<65)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DQT marker in JPEG data\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tna=sizeof(uint32)+69;\n\t\t\tnb=_TIFFmalloc(na);\n\t\t\tif (nb==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)nb=na;\n\t\t\tnb[sizeof(uint32)]=255;\n\t\t\tnb[sizeof(uint32)+1]=JPEG_MARKER_DQT;\n\t\t\tnb[sizeof(uint32)+2]=0;\n\t\t\tnb[sizeof(uint32)+3]=67;\n\t\t\tif (OJPEGReadBlock(sp,65,&nb[sizeof(uint32)+4])==0) {\n\t\t\t\t_TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\to=nb[sizeof(uint32)+4]&15;\n\t\t\tif (3<o)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DQT marker in JPEG data\");\n\t\t\t\t_TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tif (sp->qtable[o]!=0)\n\t\t\t\t_TIFFfree(sp->qtable[o]);\n\t\t\tsp->qtable[o]=nb;\n\t\t\tm-=65;\n\t\t} while(m>0);\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamDht(TIFF* tif)\n{\n\t/* this is a table marker, and it is to be saved as a whole for exact pushing on the jpeg stream later on */\n\t/* TODO: the following assumes there is only one table in this marker... but i'm not quite sure that assumption is guaranteed correct */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamDht\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint32 na;\n\tuint8* nb;\n\tuint8 o;\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m<=2)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tif (sp->subsamplingcorrect!=0)\n\t{\n\t\tOJPEGReadSkip(sp,m-2);\n\t}\n\telse\n\t{\n\t\tna=sizeof(uint32)+2+m;\n\t\tnb=_TIFFmalloc(na);\n\t\tif (nb==0)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\treturn(0);\n\t\t}\n\t\t*(uint32*)nb=na;\n\t\tnb[sizeof(uint32)]=255;\n\t\tnb[sizeof(uint32)+1]=JPEG_MARKER_DHT;\n\t\tnb[sizeof(uint32)+2]=(m>>8);\n\t\tnb[sizeof(uint32)+3]=(m&255);\n\t\tif (OJPEGReadBlock(sp,m-2,&nb[sizeof(uint32)+4])==0) {\n                        _TIFFfree(nb);\n\t\t\treturn(0);\n                }\n\t\to=nb[sizeof(uint32)+4];\n\t\tif ((o&240)==0)\n\t\t{\n\t\t\tif (3<o)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n                                _TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tif (sp->dctable[o]!=0)\n\t\t\t\t_TIFFfree(sp->dctable[o]);\n\t\t\tsp->dctable[o]=nb;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((o&240)!=16)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n                                _TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\to&=15;\n\t\t\tif (3<o)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt DHT marker in JPEG data\");\n                                _TIFFfree(nb);\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\tif (sp->actable[o]!=0)\n\t\t\t\t_TIFFfree(sp->actable[o]);\n\t\t\tsp->actable[o]=nb;\n\t\t}\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamSof(TIFF* tif, uint8 marker_id)\n{\n\t/* this marker needs to be checked, and part of its data needs to be saved for regeneration later on */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamSof\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint16 n;\n\tuint8 o;\n\tuint16 p;\n\tuint16 q;\n\tif (sp->sof_log!=0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JPEG data\");\n\t\treturn(0);\n\t}\n\tif (sp->subsamplingcorrect==0)\n\t\tsp->sof_marker_id=marker_id;\n\t/* Lf: data length */\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m<11)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOF marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tm-=8;\n\tif (m%3!=0)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOF marker in JPEG data\");\n\t\treturn(0);\n\t}\n\tn=m/3;\n\tif (sp->subsamplingcorrect==0)\n\t{\n\t\tif (n!=sp->samples_per_pixel)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected number of samples\");\n\t\t\treturn(0);\n\t\t}\n\t}\n\t/* P: Sample precision */\n\tif (OJPEGReadByte(sp,&o)==0)\n\t\treturn(0);\n\tif (o!=8)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected number of bits per sample\");\n\t\treturn(0);\n\t}\n\t/* Y: Number of lines, X: Number of samples per line */\n\tif (sp->subsamplingcorrect)\n\t\tOJPEGReadSkip(sp,4);\n\telse\n\t{\n\t\t/* Y: Number of lines */\n\t\tif (OJPEGReadWord(sp,&p)==0)\n\t\t\treturn(0);\n\t\tif (((uint32)p<sp->image_length) && ((uint32)p<sp->strile_length_total))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected height\");\n\t\t\treturn(0);\n\t\t}\n\t\tsp->sof_y=p;\n\t\t/* X: Number of samples per line */\n\t\tif (OJPEGReadWord(sp,&p)==0)\n\t\t\treturn(0);\n\t\tif (((uint32)p<sp->image_width) && ((uint32)p<sp->strile_width))\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected width\");\n\t\t\treturn(0);\n\t\t}\n\t\tif ((uint32)p>sp->strile_width)\n\t\t{\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data image width exceeds expected image width\");\n\t\t\treturn(0);\n\t\t}\n\t\tsp->sof_x=p;\n\t}\n\t/* Nf: Number of image components in frame */\n\tif (OJPEGReadByte(sp,&o)==0)\n\t\treturn(0);\n\tif (o!=n)\n\t{\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOF marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* per component stuff */\n\t/* TODO: double-check that flow implies that n cannot be as big as to make us overflow sof_c, sof_hv and sof_tq arrays */\n\tfor (q=0; q<n; q++)\n\t{\n\t\t/* C: Component identifier */\n\t\tif (OJPEGReadByte(sp,&o)==0)\n\t\t\treturn(0);\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tsp->sof_c[q]=o;\n\t\t/* H: Horizontal sampling factor, and V: Vertical sampling factor */\n\t\tif (OJPEGReadByte(sp,&o)==0)\n\t\t\treturn(0);\n\t\tif (sp->subsamplingcorrect!=0)\n\t\t{\n\t\t\tif (q==0)\n\t\t\t{\n\t\t\t\tsp->subsampling_hor=(o>>4);\n\t\t\t\tsp->subsampling_ver=(o&15);\n\t\t\t\tif (((sp->subsampling_hor!=1) && (sp->subsampling_hor!=2) && (sp->subsampling_hor!=4)) ||\n\t\t\t\t\t((sp->subsampling_ver!=1) && (sp->subsampling_ver!=2) && (sp->subsampling_ver!=4)))\n\t\t\t\t\tsp->subsampling_force_desubsampling_inside_decompression=1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (o!=17)\n\t\t\t\t\tsp->subsampling_force_desubsampling_inside_decompression=1;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsp->sof_hv[q]=o;\n\t\t\tif (sp->subsampling_force_desubsampling_inside_decompression==0)\n\t\t\t{\n\t\t\t\tif (q==0)\n\t\t\t\t{\n\t\t\t\t\tif (o!=((sp->subsampling_hor<<4)|sp->subsampling_ver))\n\t\t\t\t\t{\n\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected subsampling values\");\n\t\t\t\t\t\treturn(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (o!=17)\n\t\t\t\t\t{\n\t\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"JPEG compressed data indicates unexpected subsampling values\");\n\t\t\t\t\t\treturn(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/* Tq: Quantization table destination selector */\n\t\tif (OJPEGReadByte(sp,&o)==0)\n\t\t\treturn(0);\n\t\tif (sp->subsamplingcorrect==0)\n\t\t\tsp->sof_tq[q]=o;\n\t}\n\tif (sp->subsamplingcorrect==0)\n\t\tsp->sof_log=1;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecStreamSos(TIFF* tif)\n{\n\t/* this marker needs to be checked, and part of its data needs to be saved for regeneration later on */\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecStreamSos\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint16 m;\n\tuint8 n;\n\tuint8 o;\n\tassert(sp->subsamplingcorrect==0);\n\tif (sp->sof_log==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOS marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* Ls */\n\tif (OJPEGReadWord(sp,&m)==0)\n\t\treturn(0);\n\tif (m!=6+sp->samples_per_pixel_per_plane*2)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOS marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* Ns */\n\tif (OJPEGReadByte(sp,&n)==0)\n\t\treturn(0);\n\tif (n!=sp->samples_per_pixel_per_plane)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt SOS marker in JPEG data\");\n\t\treturn(0);\n\t}\n\t/* Cs, Td, and Ta */\n\tfor (o=0; o<sp->samples_per_pixel_per_plane; o++)\n\t{\n\t\t/* Cs */\n\t\tif (OJPEGReadByte(sp,&n)==0)\n\t\t\treturn(0);\n\t\tsp->sos_cs[sp->plane_sample_offset+o]=n;\n\t\t/* Td and Ta */\n\t\tif (OJPEGReadByte(sp,&n)==0)\n\t\t\treturn(0);\n\t\tsp->sos_tda[sp->plane_sample_offset+o]=n;\n\t}\n\t/* skip Ss, Se, Ah, en Al -> no check, as per Tom Lane recommendation, as per LibJpeg source */\n\tOJPEGReadSkip(sp,3);\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecTablesQTable(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecTablesQTable\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint8 n;\n\tuint32 oa;\n\tuint8* ob;\n\tuint32 p;\n\tif (sp->qtable_offset[0]==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Missing JPEG tables\");\n\t\treturn(0);\n\t}\n\tsp->in_buffer_file_pos_log=0;\n\tfor (m=0; m<sp->samples_per_pixel; m++)\n\t{\n\t\tif ((sp->qtable_offset[m]!=0) && ((m==0) || (sp->qtable_offset[m]!=sp->qtable_offset[m-1])))\n\t\t{\n\t\t\tfor (n=0; n<m-1; n++)\n\t\t\t{\n\t\t\t\tif (sp->qtable_offset[m]==sp->qtable_offset[n])\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JpegQTables tag value\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\toa=sizeof(uint32)+69;\n\t\t\tob=_TIFFmalloc(oa);\n\t\t\tif (ob==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)ob=oa;\n\t\t\tob[sizeof(uint32)]=255;\n\t\t\tob[sizeof(uint32)+1]=JPEG_MARKER_DQT;\n\t\t\tob[sizeof(uint32)+2]=0;\n\t\t\tob[sizeof(uint32)+3]=67;\n\t\t\tob[sizeof(uint32)+4]=m;\n\t\t\tTIFFSeekFile(tif,sp->qtable_offset[m],SEEK_SET); \n\t\t\tp=(uint32)TIFFReadFile(tif,&ob[sizeof(uint32)+5],64);\n\t\t\tif (p!=64)\n\t\t\t\treturn(0);\n\t\t\tsp->qtable[m]=ob;\n\t\t\tsp->sof_tq[m]=m;\n\t\t}\n\t\telse\n\t\t\tsp->sof_tq[m]=sp->sof_tq[m-1];\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecTablesDcTable(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecTablesDcTable\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint8 n;\n\tuint8 o[16];\n\tuint32 p;\n\tuint32 q;\n\tuint32 ra;\n\tuint8* rb;\n\tif (sp->dctable_offset[0]==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Missing JPEG tables\");\n\t\treturn(0);\n\t}\n\tsp->in_buffer_file_pos_log=0;\n\tfor (m=0; m<sp->samples_per_pixel; m++)\n\t{\n\t\tif ((sp->dctable_offset[m]!=0) && ((m==0) || (sp->dctable_offset[m]!=sp->dctable_offset[m-1])))\n\t\t{\n\t\t\tfor (n=0; n<m-1; n++)\n\t\t\t{\n\t\t\t\tif (sp->dctable_offset[m]==sp->dctable_offset[n])\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JpegDcTables tag value\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tTIFFSeekFile(tif,sp->dctable_offset[m],SEEK_SET);\n\t\t\tp=(uint32)TIFFReadFile(tif,o,16);\n\t\t\tif (p!=16)\n\t\t\t\treturn(0);\n\t\t\tq=0;\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\tq+=o[n];\n\t\t\tra=sizeof(uint32)+21+q;\n\t\t\trb=_TIFFmalloc(ra);\n\t\t\tif (rb==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)rb=ra;\n\t\t\trb[sizeof(uint32)]=255;\n\t\t\trb[sizeof(uint32)+1]=JPEG_MARKER_DHT;\n\t\t\trb[sizeof(uint32)+2]=(uint8)((19+q)>>8);\n\t\t\trb[sizeof(uint32)+3]=((19+q)&255);\n\t\t\trb[sizeof(uint32)+4]=m;\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\trb[sizeof(uint32)+5+n]=o[n];\n\t\t\tp=(uint32)TIFFReadFile(tif,&(rb[sizeof(uint32)+21]),q);\n\t\t\tif (p!=q)\n\t\t\t\treturn(0);\n\t\t\tsp->dctable[m]=rb;\n\t\t\tsp->sos_tda[m]=(m<<4);\n\t\t}\n\t\telse\n\t\t\tsp->sos_tda[m]=sp->sos_tda[m-1];\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadHeaderInfoSecTablesAcTable(TIFF* tif)\n{\n\tstatic const char module[]=\"OJPEGReadHeaderInfoSecTablesAcTable\";\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tuint8 n;\n\tuint8 o[16];\n\tuint32 p;\n\tuint32 q;\n\tuint32 ra;\n\tuint8* rb;\n\tif (sp->actable_offset[0]==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Missing JPEG tables\");\n\t\treturn(0);\n\t}\n\tsp->in_buffer_file_pos_log=0;\n\tfor (m=0; m<sp->samples_per_pixel; m++)\n\t{\n\t\tif ((sp->actable_offset[m]!=0) && ((m==0) || (sp->actable_offset[m]!=sp->actable_offset[m-1])))\n\t\t{\n\t\t\tfor (n=0; n<m-1; n++)\n\t\t\t{\n\t\t\t\tif (sp->actable_offset[m]==sp->actable_offset[n])\n\t\t\t\t{\n\t\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Corrupt JpegAcTables tag value\");\n\t\t\t\t\treturn(0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tTIFFSeekFile(tif,sp->actable_offset[m],SEEK_SET);  \n\t\t\tp=(uint32)TIFFReadFile(tif,o,16);\n\t\t\tif (p!=16)\n\t\t\t\treturn(0);\n\t\t\tq=0;\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\tq+=o[n];\n\t\t\tra=sizeof(uint32)+21+q;\n\t\t\trb=_TIFFmalloc(ra);\n\t\t\tif (rb==0)\n\t\t\t{\n\t\t\t\tTIFFErrorExt(tif->tif_clientdata,module,\"Out of memory\");\n\t\t\t\treturn(0);\n\t\t\t}\n\t\t\t*(uint32*)rb=ra;\n\t\t\trb[sizeof(uint32)]=255;\n\t\t\trb[sizeof(uint32)+1]=JPEG_MARKER_DHT;\n\t\t\trb[sizeof(uint32)+2]=(uint8)((19+q)>>8);\n\t\t\trb[sizeof(uint32)+3]=((19+q)&255);\n\t\t\trb[sizeof(uint32)+4]=(16|m);\n\t\t\tfor (n=0; n<16; n++)\n\t\t\t\trb[sizeof(uint32)+5+n]=o[n];\n\t\t\tp=(uint32)TIFFReadFile(tif,&(rb[sizeof(uint32)+21]),q);\n\t\t\tif (p!=q)\n\t\t\t\treturn(0);\n\t\t\tsp->actable[m]=rb;\n\t\t\tsp->sos_tda[m]=(sp->sos_tda[m]|m);\n\t\t}\n\t\telse\n\t\t\tsp->sos_tda[m]=(sp->sos_tda[m]|(sp->sos_tda[m-1]&15));\n\t}\n\treturn(1);\n}\n\nstatic int\nOJPEGReadBufferFill(OJPEGState* sp)\n{\n\tuint16 m;\n\ttmsize_t n;\n\t/* TODO: double-check: when subsamplingcorrect is set, no call to TIFFErrorExt or TIFFWarningExt should be made\n\t * in any other case, seek or read errors should be passed through */\n\tdo\n\t{\n\t\tif (sp->in_buffer_file_togo!=0)\n\t\t{\n\t\t\tif (sp->in_buffer_file_pos_log==0)\n\t\t\t{\n\t\t\t\tTIFFSeekFile(sp->tif,sp->in_buffer_file_pos,SEEK_SET);\n\t\t\t\tsp->in_buffer_file_pos_log=1;\n\t\t\t}\n\t\t\tm=OJPEG_BUFFER;\n\t\t\tif ((uint64)m>sp->in_buffer_file_togo)\n\t\t\t\tm=(uint16)sp->in_buffer_file_togo;\n\t\t\tn=TIFFReadFile(sp->tif,sp->in_buffer,(tmsize_t)m);\n\t\t\tif (n==0)\n\t\t\t\treturn(0);\n\t\t\tassert(n>0);\n\t\t\tassert(n<=OJPEG_BUFFER);\n\t\t\tassert(n<65536);\n\t\t\tassert((uint64)n<=sp->in_buffer_file_togo);\n\t\t\tm=(uint16)n;\n\t\t\tsp->in_buffer_togo=m;\n\t\t\tsp->in_buffer_cur=sp->in_buffer;\n\t\t\tsp->in_buffer_file_togo-=m;\n\t\t\tsp->in_buffer_file_pos+=m;\n\t\t\tbreak;\n\t\t}\n\t\tsp->in_buffer_file_pos_log=0;\n\t\tswitch(sp->in_buffer_source)\n\t\t{\n\t\t\tcase osibsNotSetYet:\n\t\t\t\tif (sp->jpeg_interchange_format!=0)\n\t\t\t\t{\n\t\t\t\t\tsp->in_buffer_file_pos=sp->jpeg_interchange_format;\n\t\t\t\t\tsp->in_buffer_file_togo=sp->jpeg_interchange_format_length;\n\t\t\t\t}\n\t\t\t\tsp->in_buffer_source=osibsJpegInterchangeFormat;\n\t\t\t\tbreak;\n\t\t\tcase osibsJpegInterchangeFormat:\n\t\t\t\tsp->in_buffer_source=osibsStrile;\n                                break;\n\t\t\tcase osibsStrile:\n\t\t\t\tif (!_TIFFFillStriles( sp->tif ) \n\t\t\t\t    || sp->tif->tif_dir.td_stripoffset == NULL\n\t\t\t\t    || sp->tif->tif_dir.td_stripbytecount == NULL)\n\t\t\t\t\treturn 0;\n\n\t\t\t\tif (sp->in_buffer_next_strile==sp->in_buffer_strile_count)\n\t\t\t\t\tsp->in_buffer_source=osibsEof;\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsp->in_buffer_file_pos=sp->tif->tif_dir.td_stripoffset[sp->in_buffer_next_strile];\n\t\t\t\t\tif (sp->in_buffer_file_pos!=0)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (sp->in_buffer_file_pos>=sp->file_size)\n\t\t\t\t\t\t\tsp->in_buffer_file_pos=0;\n\t\t\t\t\t\telse if (sp->tif->tif_dir.td_stripbytecount==NULL)\n\t\t\t\t\t\t\tsp->in_buffer_file_togo=sp->file_size-sp->in_buffer_file_pos;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (sp->tif->tif_dir.td_stripbytecount == 0) {\n\t\t\t\t\t\t\t\tTIFFErrorExt(sp->tif->tif_clientdata,sp->tif->tif_name,\"Strip byte counts are missing\");\n\t\t\t\t\t\t\t\treturn(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsp->in_buffer_file_togo=sp->tif->tif_dir.td_stripbytecount[sp->in_buffer_next_strile];\n\t\t\t\t\t\t\tif (sp->in_buffer_file_togo==0)\n\t\t\t\t\t\t\t\tsp->in_buffer_file_pos=0;\n\t\t\t\t\t\t\telse if (sp->in_buffer_file_pos+sp->in_buffer_file_togo>sp->file_size)\n\t\t\t\t\t\t\t\tsp->in_buffer_file_togo=sp->file_size-sp->in_buffer_file_pos;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsp->in_buffer_next_strile++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn(0);\n\t\t}\n\t} while (1);\n\treturn(1);\n}\n\nstatic int\nOJPEGReadByte(OJPEGState* sp, uint8* byte)\n{\n\tif (sp->in_buffer_togo==0)\n\t{\n\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\treturn(0);\n\t\tassert(sp->in_buffer_togo>0);\n\t}\n\t*byte=*(sp->in_buffer_cur);\n\tsp->in_buffer_cur++;\n\tsp->in_buffer_togo--;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadBytePeek(OJPEGState* sp, uint8* byte)\n{\n\tif (sp->in_buffer_togo==0)\n\t{\n\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\treturn(0);\n\t\tassert(sp->in_buffer_togo>0);\n\t}\n\t*byte=*(sp->in_buffer_cur);\n\treturn(1);\n}\n\nstatic void\nOJPEGReadByteAdvance(OJPEGState* sp)\n{\n\tassert(sp->in_buffer_togo>0);\n\tsp->in_buffer_cur++;\n\tsp->in_buffer_togo--;\n}\n\nstatic int\nOJPEGReadWord(OJPEGState* sp, uint16* word)\n{\n\tuint8 m;\n\tif (OJPEGReadByte(sp,&m)==0)\n\t\treturn(0);\n\t*word=(m<<8);\n\tif (OJPEGReadByte(sp,&m)==0)\n\t\treturn(0);\n\t*word|=m;\n\treturn(1);\n}\n\nstatic int\nOJPEGReadBlock(OJPEGState* sp, uint16 len, void* mem)\n{\n\tuint16 mlen;\n\tuint8* mmem;\n\tuint16 n;\n\tassert(len>0);\n\tmlen=len;\n\tmmem=mem;\n\tdo\n\t{\n\t\tif (sp->in_buffer_togo==0)\n\t\t{\n\t\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\t\treturn(0);\n\t\t\tassert(sp->in_buffer_togo>0);\n\t\t}\n\t\tn=mlen;\n\t\tif (n>sp->in_buffer_togo)\n\t\t\tn=sp->in_buffer_togo;\n\t\t_TIFFmemcpy(mmem,sp->in_buffer_cur,n);\n\t\tsp->in_buffer_cur+=n;\n\t\tsp->in_buffer_togo-=n;\n\t\tmlen-=n;\n\t\tmmem+=n;\n\t} while(mlen>0);\n\treturn(1);\n}\n\nstatic void\nOJPEGReadSkip(OJPEGState* sp, uint16 len)\n{\n\tuint16 m;\n\tuint16 n;\n\tm=len;\n\tn=m;\n\tif (n>sp->in_buffer_togo)\n\t\tn=sp->in_buffer_togo;\n\tsp->in_buffer_cur+=n;\n\tsp->in_buffer_togo-=n;\n\tm-=n;\n\tif (m>0)\n\t{\n\t\tassert(sp->in_buffer_togo==0);\n\t\tn=m;\n\t\tif ((uint64)n>sp->in_buffer_file_togo)\n\t\t\tn=(uint16)sp->in_buffer_file_togo;\n\t\tsp->in_buffer_file_pos+=n;\n\t\tsp->in_buffer_file_togo-=n;\n\t\tsp->in_buffer_file_pos_log=0;\n\t\t/* we don't skip past jpeginterchangeformat/strile block...\n\t\t * if that is asked from us, we're dealing with totally bazurk\n\t\t * data anyway, and we've not seen this happening on any\n\t\t * testfile, so we might as well likely cause some other\n\t\t * meaningless error to be passed at some later time\n\t\t */\n\t}\n}\n\nstatic int\nOJPEGWriteStream(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\t*len=0;\n\tdo\n\t{\n\t\tassert(sp->out_state<=ososEoi);\n\t\tswitch(sp->out_state)\n\t\t{\n\t\t\tcase ososSoi:\n\t\t\t\tOJPEGWriteStreamSoi(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable0:\n\t\t\t\tOJPEGWriteStreamQTable(tif,0,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable1:\n\t\t\t\tOJPEGWriteStreamQTable(tif,1,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable2:\n\t\t\t\tOJPEGWriteStreamQTable(tif,2,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososQTable3:\n\t\t\t\tOJPEGWriteStreamQTable(tif,3,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable0:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,0,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable1:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,1,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable2:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,2,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDcTable3:\n\t\t\t\tOJPEGWriteStreamDcTable(tif,3,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable0:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,0,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable1:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,1,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable2:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,2,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososAcTable3:\n\t\t\t\tOJPEGWriteStreamAcTable(tif,3,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososDri:\n\t\t\t\tOJPEGWriteStreamDri(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososSof:\n\t\t\t\tOJPEGWriteStreamSof(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososSos:\n\t\t\t\tOJPEGWriteStreamSos(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososCompressed:\n\t\t\t\tif (OJPEGWriteStreamCompressed(tif,mem,len)==0)\n\t\t\t\t\treturn(0);\n\t\t\t\tbreak;\n\t\t\tcase ososRst:\n\t\t\t\tOJPEGWriteStreamRst(tif,mem,len);\n\t\t\t\tbreak;\n\t\t\tcase ososEoi:\n\t\t\t\tOJPEGWriteStreamEoi(tif,mem,len);\n\t\t\t\tbreak;\n\t\t}\n\t} while (*len==0);\n\treturn(1);\n}\n\nstatic void\nOJPEGWriteStreamSoi(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_SOI;\n\t*len=2;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamQTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->qtable[table_index]!=0)\n\t{\n\t\t*mem=(void*)(sp->qtable[table_index]+sizeof(uint32));\n\t\t*len=*((uint32*)sp->qtable[table_index])-sizeof(uint32);\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamDcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->dctable[table_index]!=0)\n\t{\n\t\t*mem=(void*)(sp->dctable[table_index]+sizeof(uint32));\n\t\t*len=*((uint32*)sp->dctable[table_index])-sizeof(uint32);\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamAcTable(TIFF* tif, uint8 table_index, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->actable[table_index]!=0)\n\t{\n\t\t*mem=(void*)(sp->actable[table_index]+sizeof(uint32));\n\t\t*len=*((uint32*)sp->actable[table_index])-sizeof(uint32);\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamDri(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=6);\n\tif (sp->restart_interval!=0)\n\t{\n\t\tsp->out_buffer[0]=255;\n\t\tsp->out_buffer[1]=JPEG_MARKER_DRI;\n\t\tsp->out_buffer[2]=0;\n\t\tsp->out_buffer[3]=4;\n\t\tsp->out_buffer[4]=(sp->restart_interval>>8);\n\t\tsp->out_buffer[5]=(sp->restart_interval&255);\n\t\t*len=6;\n\t\t*mem=(void*)sp->out_buffer;\n\t}\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamSof(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tassert(OJPEG_BUFFER>=2+8+sp->samples_per_pixel_per_plane*3);\n\tassert(255>=8+sp->samples_per_pixel_per_plane*3);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=sp->sof_marker_id;\n\t/* Lf */\n\tsp->out_buffer[2]=0;\n\tsp->out_buffer[3]=8+sp->samples_per_pixel_per_plane*3;\n\t/* P */\n\tsp->out_buffer[4]=8;\n\t/* Y */\n\tsp->out_buffer[5]=(uint8)(sp->sof_y>>8);\n\tsp->out_buffer[6]=(sp->sof_y&255);\n\t/* X */\n\tsp->out_buffer[7]=(uint8)(sp->sof_x>>8);\n\tsp->out_buffer[8]=(sp->sof_x&255);\n\t/* Nf */\n\tsp->out_buffer[9]=sp->samples_per_pixel_per_plane;\n\tfor (m=0; m<sp->samples_per_pixel_per_plane; m++)\n\t{\n\t\t/* C */\n\t\tsp->out_buffer[10+m*3]=sp->sof_c[sp->plane_sample_offset+m];\n\t\t/* H and V */\n\t\tsp->out_buffer[10+m*3+1]=sp->sof_hv[sp->plane_sample_offset+m];\n\t\t/* Tq */\n\t\tsp->out_buffer[10+m*3+2]=sp->sof_tq[sp->plane_sample_offset+m];\n\t}\n\t*len=10+sp->samples_per_pixel_per_plane*3;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state++;\n}\n\nstatic void\nOJPEGWriteStreamSos(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tuint8 m;\n\tassert(OJPEG_BUFFER>=2+6+sp->samples_per_pixel_per_plane*2);\n\tassert(255>=6+sp->samples_per_pixel_per_plane*2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_SOS;\n\t/* Ls */\n\tsp->out_buffer[2]=0;\n\tsp->out_buffer[3]=6+sp->samples_per_pixel_per_plane*2;\n\t/* Ns */\n\tsp->out_buffer[4]=sp->samples_per_pixel_per_plane;\n\tfor (m=0; m<sp->samples_per_pixel_per_plane; m++)\n\t{\n\t\t/* Cs */\n\t\tsp->out_buffer[5+m*2]=sp->sos_cs[sp->plane_sample_offset+m];\n\t\t/* Td and Ta */\n\t\tsp->out_buffer[5+m*2+1]=sp->sos_tda[sp->plane_sample_offset+m];\n\t}\n\t/* Ss */\n\tsp->out_buffer[5+sp->samples_per_pixel_per_plane*2]=0;\n\t/* Se */\n\tsp->out_buffer[5+sp->samples_per_pixel_per_plane*2+1]=63;\n\t/* Ah and Al */\n\tsp->out_buffer[5+sp->samples_per_pixel_per_plane*2+2]=0;\n\t*len=8+sp->samples_per_pixel_per_plane*2;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state++;\n}\n\nstatic int\nOJPEGWriteStreamCompressed(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tif (sp->in_buffer_togo==0)\n\t{\n\t\tif (OJPEGReadBufferFill(sp)==0)\n\t\t\treturn(0);\n\t\tassert(sp->in_buffer_togo>0);\n\t}\n\t*len=sp->in_buffer_togo;\n\t*mem=(void*)sp->in_buffer_cur;\n\tsp->in_buffer_togo=0;\n\tif (sp->in_buffer_file_togo==0)\n\t{\n\t\tswitch(sp->in_buffer_source)\n\t\t{\n\t\t\tcase osibsStrile:\n\t\t\t\tif (sp->in_buffer_next_strile<sp->in_buffer_strile_count)\n\t\t\t\t\tsp->out_state=ososRst;\n\t\t\t\telse\n\t\t\t\t\tsp->out_state=ososEoi;\n\t\t\t\tbreak;\n\t\t\tcase osibsEof:\n\t\t\t\tsp->out_state=ososEoi;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\treturn(1);\n}\n\nstatic void\nOJPEGWriteStreamRst(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_RST0+sp->restart_index;\n\tsp->restart_index++;\n\tif (sp->restart_index==8)\n\t\tsp->restart_index=0;\n\t*len=2;\n\t*mem=(void*)sp->out_buffer;\n\tsp->out_state=ososCompressed;\n}\n\nstatic void\nOJPEGWriteStreamEoi(TIFF* tif, void** mem, uint32* len)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tassert(OJPEG_BUFFER>=2);\n\tsp->out_buffer[0]=255;\n\tsp->out_buffer[1]=JPEG_MARKER_EOI;\n\t*len=2;\n\t*mem=(void*)sp->out_buffer;\n}\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_create_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_create_decompress(cinfo);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_read_header_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, uint8 require_image)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_read_header(cinfo,require_image);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_start_decompress_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_start_decompress(cinfo);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_read_scanlines_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* scanlines, uint32 max_lines)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_read_scanlines(cinfo,scanlines,max_lines);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic int\njpeg_read_raw_data_encap(OJPEGState* sp, jpeg_decompress_struct* cinfo, void* data, uint32 max_lines)\n{\n\tif( SETJMP(sp->exit_jmpbuf) )\n\t\treturn 0;\n\telse {\n\t\tjpeg_read_raw_data(cinfo,data,max_lines);\n\t\treturn 1;\n\t}\n}\n#endif\n\n#ifndef LIBJPEG_ENCAP_EXTERNAL\nstatic void\njpeg_encap_unwind(TIFF* tif)\n{\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tLONGJMP(sp->exit_jmpbuf,1);\n}\n#endif\n\nstatic void\nOJPEGLibjpegJpegErrorMgrOutputMessage(jpeg_common_struct* cinfo)\n{\n\tchar buffer[JMSG_LENGTH_MAX];\n\t(*cinfo->err->format_message)(cinfo,buffer);\n\tTIFFWarningExt(((TIFF*)(cinfo->client_data))->tif_clientdata,\"LibJpeg\",\"%s\",buffer);\n}\n\nstatic void\nOJPEGLibjpegJpegErrorMgrErrorExit(jpeg_common_struct* cinfo)\n{\n\tchar buffer[JMSG_LENGTH_MAX];\n\t(*cinfo->err->format_message)(cinfo,buffer);\n\tTIFFErrorExt(((TIFF*)(cinfo->client_data))->tif_clientdata,\"LibJpeg\",\"%s\",buffer);\n\tjpeg_encap_unwind((TIFF*)(cinfo->client_data));\n}\n\nstatic void\nOJPEGLibjpegJpegSourceMgrInitSource(jpeg_decompress_struct* cinfo)\n{\n\t(void)cinfo;\n}\n\nstatic boolean\nOJPEGLibjpegJpegSourceMgrFillInputBuffer(jpeg_decompress_struct* cinfo)\n{\n\tTIFF* tif=(TIFF*)cinfo->client_data;\n\tOJPEGState* sp=(OJPEGState*)tif->tif_data;\n\tvoid* mem=0;\n\tuint32 len=0U;\n\tif (OJPEGWriteStream(tif,&mem,&len)==0)\n\t{\n\t\tTIFFErrorExt(tif->tif_clientdata,\"LibJpeg\",\"Premature end of JPEG data\");\n\t\tjpeg_encap_unwind(tif);\n\t}\n\tsp->libjpeg_jpeg_source_mgr.bytes_in_buffer=len;\n\tsp->libjpeg_jpeg_source_mgr.next_input_byte=mem;\n\treturn(1);\n}\n\nstatic void\nOJPEGLibjpegJpegSourceMgrSkipInputData(jpeg_decompress_struct* cinfo, long num_bytes)\n{\n\tTIFF* tif=(TIFF*)cinfo->client_data;\n\t(void)num_bytes;\n\tTIFFErrorExt(tif->tif_clientdata,\"LibJpeg\",\"Unexpected error\");\n\tjpeg_encap_unwind(tif);\n}\n\n#ifdef _MSC_VER\n#pragma warning( push )\n#pragma warning( disable : 4702 ) /* unreachable code */\n#endif\nstatic boolean\nOJPEGLibjpegJpegSourceMgrResyncToRestart(jpeg_decompress_struct* cinfo, int desired)\n{\n\tTIFF* tif=(TIFF*)cinfo->client_data;\n\t(void)desired;\n\tTIFFErrorExt(tif->tif_clientdata,\"LibJpeg\",\"Unexpected error\");\n\tjpeg_encap_unwind(tif);\n\treturn(0);\n}\n#ifdef _MSC_VER\n#pragma warning( pop ) \n#endif\n\nstatic void\nOJPEGLibjpegJpegSourceMgrTermSource(jpeg_decompress_struct* cinfo)\n{\n\t(void)cinfo;\n}\n\n#endif\n\n\n/*\n * Local Variables:\n * mode: c\n * c-basic-offset: 8\n * fill-column: 78\n * End:\n */\n"], "filenames": ["ChangeLog", "libtiff/tif_ojpeg.c"], "buggy_code_start_loc": [0, 246], "buggy_code_end_loc": [0, 788], "fixing_code_start_loc": [1, 247], "fixing_code_end_loc": [8, 797], "type": "CWE-369", "message": "LibTIFF 4.0.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image, related to libtiff/tif_ojpeg.c:816:8.", "other": {"cve": {"id": "CVE-2016-10267", "sourceIdentifier": "cve@mitre.org", "published": "2017-03-24T19:59:00.190", "lastModified": "2018-03-22T01:29:00.343", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "LibTIFF 4.0.7 allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image, related to libtiff/tif_ojpeg.c:816:8."}, {"lang": "es", "value": "LibTIFF 4.0.7 permite a atacantes remotos provocar una denegaci\u00f3n de servicio (error de divisi\u00f3n por cero y ca\u00edda de aplicaci\u00f3n) a trav\u00e9s de una imagen TIFF manipulada, relacionado con libtiff/tif_ojpeg.c: 816: 8."}], "metrics": {"cvssMetricV30": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.6}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:N/A:P", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-369"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:libtiff:libtiff:4.0.7:*:*:*:*:*:*:*", "matchCriteriaId": "FE968DD2-24BE-4417-A6DF-D79E40E07766"}]}]}], "references": [{"url": "http://www.debian.org/security/2017/dsa-3844", "source": "cve@mitre.org"}, {"url": "http://www.securityfocus.com/bid/97117", "source": "cve@mitre.org"}, {"url": "https://blogs.gentoo.org/ago/2017/01/01/libtiff-multiple-divide-by-zero", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory", "VDB Entry"]}, {"url": "https://github.com/vadz/libtiff/commit/43bc256d8ae44b92d2734a3c5bc73957a4d7c1ec", "source": "cve@mitre.org", "tags": ["Mailing List", "Patch", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/201709-27", "source": "cve@mitre.org"}, {"url": "https://usn.ubuntu.com/3602-1/", "source": "cve@mitre.org"}]}, "github_commit_url": "https://github.com/vadz/libtiff/commit/43bc256d8ae44b92d2734a3c5bc73957a4d7c1ec"}}