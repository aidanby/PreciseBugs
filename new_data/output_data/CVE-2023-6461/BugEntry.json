{"buggy_code": ["/*\n * miniPaint - https://github.com/viliusle/miniPaint\n * author: Vilius L.\n */\n\nimport app from './../../app.js';\nimport config from './../../config.js';\nimport Base_layers_class from './../base-layers.js';\nimport Helper_class from './../../libs/helpers.js';\nimport Layer_rename_class from './../../modules/layer/rename.js';\nimport Effects_browser_class from './../../modules/effects/browser.js';\nimport Layer_duplicate_class from './../../modules/layer/duplicate.js';\nimport Layer_raster_class from './../../modules/layer/raster.js';\nimport Tools_translate_class from './../../modules/tools/translate.js';\n\nvar template = `\n\t<button type=\"button\" class=\"layer_add trn\" id=\"insert_layer\" title=\"Insert new layer\">+</button>\n\t<button type=\"button\" class=\"layer_duplicate trn\" id=\"layer_duplicate\" title=\"Duplicate layer\">D</button>\n\t<button type=\"button\" class=\"layer_raster trn\" id=\"layer_raster\" title=\"Convert layer to raster\">R</button>\n\n\t<button type=\"button\" class=\"layers_arrow trn\" title=\"Move layer down\" id=\"layer_down\">&darr;</button>\n\t<button type=\"button\" class=\"layers_arrow trn\" title=\"Move layer up\" id=\"layer_up\">&uarr;</button>\n\n\t<div class=\"layers_list\" id=\"layers\"></div>\n`;\n\n/**\n * GUI class responsible for rendering layers on right sidebar\n */\nclass GUI_layers_class {\n\n\tconstructor(ctx) {\n\t\tthis.Base_layers = new Base_layers_class();\n\t\tthis.Helper = new Helper_class();\n\t\tthis.Layer_rename = new Layer_rename_class();\n\t\tthis.Effects_browser = new Effects_browser_class();\n\t\tthis.Layer_duplicate = new Layer_duplicate_class();\n\t\tthis.Layer_raster = new Layer_raster_class();\n\t\tthis.Tools_translate = new Tools_translate_class();\n\t}\n\n\trender_main_layers() {\n\t\tdocument.getElementById('layers_base').innerHTML = template;\n\t\tif (config.LANG != 'en') {\n\t\t\tthis.Tools_translate.translate(config.LANG, document.getElementById('layers_base'));\n\t\t}\n\t\tthis.render_layers();\n\t\tthis.set_events();\n\t}\n\n\tset_events() {\n\t\tvar _this = this;\n\n\t\tdocument.getElementById('layers_base').addEventListener('click', function (event) {\n\t\t\tvar target = event.target;\n\t\t\tif (target.id == 'insert_layer') {\n\t\t\t\t//new layer\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Insert_layer_action()\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'layer_duplicate') {\n\t\t\t\t//duplicate\n\t\t\t\t_this.Layer_duplicate.duplicate();\n\t\t\t}\n\t\t\telse if (target.id == 'layer_raster') {\n\t\t\t\t//raster\n\t\t\t\t_this.Layer_raster.raster();\n\t\t\t}\n\t\t\telse if (target.id == 'layer_up') {\n\t\t\t\t//move layer up\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Reorder_layer_action(config.layer.id, 1)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'layer_down') {\n\t\t\t\t//move layer down\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Reorder_layer_action(config.layer.id, -1)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'visibility') {\n\t\t\t\t//change visibility\n\t\t\t\treturn app.State.do_action(\n\t\t\t\t\tnew app.Actions.Toggle_layer_visibility_action(target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'delete') {\n\t\t\t\t//delete layer\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Delete_layer_action(target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'layer_name') {\n\t\t\t\t//select layer\n\t\t\t\tif (target.dataset.id == config.layer.id)\n\t\t\t\t\treturn;\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Select_layer_action(target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'delete_filter') {\n\t\t\t\t//delete filter\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Delete_layer_filter_action(target.dataset.pid, target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'filter_name') {\n\t\t\t\t//edit filter\n\t\t\t\tvar effects = _this.Effects_browser.get_effects_list();\n\t\t\t\tvar key = target.dataset.filter.toLowerCase();\n\t\t\t\tfor (var i in effects) {\n\t\t\t\t\tif(effects[i].title.toLowerCase() == key){\n\t\t\t\t\t\t_this.Base_layers.select(target.dataset.pid);\n\t\t\t\t\t\tvar function_name = _this.Effects_browser.get_function_from_path(key);\n\t\t\t\t\t\teffects[i].object[function_name](target.dataset.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdocument.getElementById('layers_base').addEventListener('dblclick', function (event) {\n\t\t\tvar target = event.target;\n\t\t\tif (target.id == 'layer_name') {\n\t\t\t\t//rename layer\n\t\t\t\t_this.Layer_rename.rename(target.dataset.id);\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * renders layers list\n\t */\n\trender_layers() {\n\t\tvar target_id = 'layers';\n\t\tvar layers = config.layers.concat().sort(\n\t\t\t//sort function\n\t\t\t\t(a, b) => b.order - a.order\n\t\t\t);\n\n\t\tdocument.getElementById(target_id).innerHTML = '';\n\t\tvar html = '';\n\t\t\n\t\tif (config.layer) {\n\t\t\tfor (var i in layers) {\n\t\t\t\tvar value = layers[i];\n\t\t\t\tvar class_extra = '';\n\t\t\t\tif(value.composition === 'source-atop'){\n\t\t\t\t\tclass_extra += ' shorter';\n\t\t\t\t}\n\t\t\t\tif (value.id == config.layer.id){\n\t\t\t\t\tclass_extra += ' active';\n\t\t\t\t}\n\n\t\t\t\thtml += '<div class=\"item ' + class_extra + '\">';\n\t\t\t\tif (value.visible == true)\n\t\t\t\t\thtml += '\t<button class=\"visibility visible trn\" id=\"visibility\" data-id=\"' + value.id + '\" title=\"Hide\"></button>';\n\t\t\t\telse\n\t\t\t\t\thtml += '\t<button class=\"visibility trn\" id=\"visibility\" data-id=\"' + value.id + '\" title=\"Show\"></button>';\n\t\t\t\thtml += '\t<button class=\"delete trn\" id=\"delete\" data-id=\"' + value.id + '\" title=\"Delete\"></button>';\n\t\t\t\t\n\t\t\t\tif(value.composition === 'source-atop'){\n\t\t\t\t\thtml += '\t<button class=\"arrow_down\" data-id=\"' + value.id + '\" ></button>';\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\thtml += '\t<button class=\"layer_name\" id=\"layer_name\" data-id=\"' + value.id + '\">' + value.name + '</button>';\n\t\t\t\thtml += '\t<div class=\"clear\"></div>';\n\t\t\t\thtml += '</div>';\n\n\t\t\t\t//show filters\n\t\t\t\tif (layers[i].filters.length > 0) {\n\t\t\t\t\thtml += '<div class=\"filters\">';\n\t\t\t\t\tfor (var j in layers[i].filters) {\n\t\t\t\t\t\tvar filter = layers[i].filters[j];\n\t\t\t\t\t\tvar title = this.Helper.ucfirst(filter.name);\n\t\t\t\t\t\ttitle = title.replace(/-/g, ' ');\n\n\t\t\t\t\t\thtml += '<div class=\"filter\">';\n\t\t\t\t\t\thtml += '\t<span class=\"delete\" id=\"delete_filter\" data-pid=\"' + layers[i].id + '\" data-id=\"' + filter.id + '\" title=\"delete\"></span>';\n\t\t\t\t\t\thtml += '\t<span class=\"layer_name\" id=\"filter_name\" data-pid=\"' + layers[i].id + '\" data-id=\"' + filter.id + '\" data-filter=\"' + filter.name + '\">' + title + '</span>';\n\t\t\t\t\t\thtml += '\t<div class=\"clear\"></div>';\n\t\t\t\t\t\thtml += '</div>';\n\t\t\t\t\t}\n\t\t\t\t\thtml += '</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//register\n\t\tdocument.getElementById(target_id).innerHTML = html;\n\t\tif (config.LANG != 'en') {\n\t\t\tthis.Tools_translate.translate(config.LANG, document.getElementById(target_id));\n\t\t}\n\t}\n}\n\nexport default GUI_layers_class;\n", "import app from './../../app.js';\nimport config from './../../config.js';\nimport Base_layers_class from './../../core/base-layers.js';\nimport Dialog_class from './../../libs/popup.js';\n\nclass Layer_rename_class {\n\n\tconstructor() {\n\t\tthis.Base_layers = new Base_layers_class();\n\t\tthis.POP = new Dialog_class();\n\t}\n\n\trename(id = null) {\n\t\tvar _this = this;\n\n\t\tvar settings = {\n\t\t\ttitle: 'Rename',\n\t\t\tparams: [\n\t\t\t\t{name: \"name\", title: \"Name:\", value: config.layer.name},\n\t\t\t],\n\t\t\ton_load: function () {\n\t\t\t\tdocument.querySelector('#pop_data_name').select();\n\t\t\t},\n\t\t\ton_finish: function (params) {\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Bundle_action('rename_layer', 'Rename Layer', [\n\t\t\t\t\t\tnew app.Actions.Refresh_layers_gui_action('undo'),\n\t\t\t\t\t\tnew app.Actions.Update_layer_action(id || config.layer.id, {\n\t\t\t\t\t\t\tname: params.name\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew app.Actions.Refresh_layers_gui_action('do')\n\t\t\t\t\t])\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t\tthis.POP.show(settings);\n\t}\n}\n\nexport default Layer_rename_class;\n"], "fixing_code": ["/*\n * miniPaint - https://github.com/viliusle/miniPaint\n * author: Vilius L.\n */\n\nimport app from './../../app.js';\nimport config from './../../config.js';\nimport Base_layers_class from './../base-layers.js';\nimport Helper_class from './../../libs/helpers.js';\nimport Layer_rename_class from './../../modules/layer/rename.js';\nimport Effects_browser_class from './../../modules/effects/browser.js';\nimport Layer_duplicate_class from './../../modules/layer/duplicate.js';\nimport Layer_raster_class from './../../modules/layer/raster.js';\nimport Tools_translate_class from './../../modules/tools/translate.js';\n\nvar template = `\n\t<button type=\"button\" class=\"layer_add trn\" id=\"insert_layer\" title=\"Insert new layer\">+</button>\n\t<button type=\"button\" class=\"layer_duplicate trn\" id=\"layer_duplicate\" title=\"Duplicate layer\">D</button>\n\t<button type=\"button\" class=\"layer_raster trn\" id=\"layer_raster\" title=\"Convert layer to raster\">R</button>\n\n\t<button type=\"button\" class=\"layers_arrow trn\" title=\"Move layer down\" id=\"layer_down\">&darr;</button>\n\t<button type=\"button\" class=\"layers_arrow trn\" title=\"Move layer up\" id=\"layer_up\">&uarr;</button>\n\n\t<div class=\"layers_list\" id=\"layers\"></div>\n`;\n\n/**\n * GUI class responsible for rendering layers on right sidebar\n */\nclass GUI_layers_class {\n\n\tconstructor(ctx) {\n\t\tthis.Base_layers = new Base_layers_class();\n\t\tthis.Helper = new Helper_class();\n\t\tthis.Layer_rename = new Layer_rename_class();\n\t\tthis.Effects_browser = new Effects_browser_class();\n\t\tthis.Layer_duplicate = new Layer_duplicate_class();\n\t\tthis.Layer_raster = new Layer_raster_class();\n\t\tthis.Tools_translate = new Tools_translate_class();\n\t}\n\n\trender_main_layers() {\n\t\tdocument.getElementById('layers_base').innerHTML = template;\n\t\tif (config.LANG != 'en') {\n\t\t\tthis.Tools_translate.translate(config.LANG, document.getElementById('layers_base'));\n\t\t}\n\t\tthis.render_layers();\n\t\tthis.set_events();\n\t}\n\n\tset_events() {\n\t\tvar _this = this;\n\n\t\tdocument.getElementById('layers_base').addEventListener('click', function (event) {\n\t\t\tvar target = event.target;\n\t\t\tif (target.id == 'insert_layer') {\n\t\t\t\t//new layer\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Insert_layer_action()\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'layer_duplicate') {\n\t\t\t\t//duplicate\n\t\t\t\t_this.Layer_duplicate.duplicate();\n\t\t\t}\n\t\t\telse if (target.id == 'layer_raster') {\n\t\t\t\t//raster\n\t\t\t\t_this.Layer_raster.raster();\n\t\t\t}\n\t\t\telse if (target.id == 'layer_up') {\n\t\t\t\t//move layer up\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Reorder_layer_action(config.layer.id, 1)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'layer_down') {\n\t\t\t\t//move layer down\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Reorder_layer_action(config.layer.id, -1)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'visibility') {\n\t\t\t\t//change visibility\n\t\t\t\treturn app.State.do_action(\n\t\t\t\t\tnew app.Actions.Toggle_layer_visibility_action(target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'delete') {\n\t\t\t\t//delete layer\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Delete_layer_action(target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'layer_name') {\n\t\t\t\t//select layer\n\t\t\t\tif (target.dataset.id == config.layer.id)\n\t\t\t\t\treturn;\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Select_layer_action(target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'delete_filter') {\n\t\t\t\t//delete filter\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Delete_layer_filter_action(target.dataset.pid, target.dataset.id)\n\t\t\t\t);\n\t\t\t}\n\t\t\telse if (target.id == 'filter_name') {\n\t\t\t\t//edit filter\n\t\t\t\tvar effects = _this.Effects_browser.get_effects_list();\n\t\t\t\tvar key = target.dataset.filter.toLowerCase();\n\t\t\t\tfor (var i in effects) {\n\t\t\t\t\tif(effects[i].title.toLowerCase() == key){\n\t\t\t\t\t\t_this.Base_layers.select(target.dataset.pid);\n\t\t\t\t\t\tvar function_name = _this.Effects_browser.get_function_from_path(key);\n\t\t\t\t\t\teffects[i].object[function_name](target.dataset.id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tdocument.getElementById('layers_base').addEventListener('dblclick', function (event) {\n\t\t\tvar target = event.target;\n\t\t\tif (target.id == 'layer_name') {\n\t\t\t\t//rename layer\n\t\t\t\t_this.Layer_rename.rename(target.dataset.id);\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * renders layers list\n\t */\n\trender_layers() {\n\t\tvar target_id = 'layers';\n\t\tvar layers = config.layers.concat().sort(\n\t\t\t//sort function\n\t\t\t\t(a, b) => b.order - a.order\n\t\t\t);\n\n\t\tdocument.getElementById(target_id).innerHTML = '';\n\t\tvar html = '';\n\t\t\n\t\tif (config.layer) {\n\t\t\tfor (var i in layers) {\n\t\t\t\tvar value = layers[i];\n\t\t\t\tvar class_extra = '';\n\t\t\t\tif(value.composition === 'source-atop'){\n\t\t\t\t\tclass_extra += ' shorter';\n\t\t\t\t}\n\t\t\t\tif (value.id == config.layer.id){\n\t\t\t\t\tclass_extra += ' active';\n\t\t\t\t}\n\n\t\t\t\thtml += '<div class=\"item ' + class_extra + '\">';\n\t\t\t\tif (value.visible == true)\n\t\t\t\t\thtml += '\t<button class=\"visibility visible trn\" id=\"visibility\" data-id=\"' + value.id + '\" title=\"Hide\"></button>';\n\t\t\t\telse\n\t\t\t\t\thtml += '\t<button class=\"visibility trn\" id=\"visibility\" data-id=\"' + value.id + '\" title=\"Show\"></button>';\n\t\t\t\thtml += '\t<button class=\"delete trn\" id=\"delete\" data-id=\"' + value.id + '\" title=\"Delete\"></button>';\n\t\t\t\t\n\t\t\t\tif(value.composition === 'source-atop'){\n\t\t\t\t\thtml += '\t<button class=\"arrow_down\" data-id=\"' + value.id + '\" ></button>';\n\t\t\t\t}\n\n\t\t\t\tvar layer_title = this.Helper.escapeHtml(value.name);\n\t\t\t\t\n\t\t\t\thtml += '\t<button class=\"layer_name\" id=\"layer_name\" data-id=\"' + value.id + '\">' + layer_title + '</button>';\n\t\t\t\thtml += '\t<div class=\"clear\"></div>';\n\t\t\t\thtml += '</div>';\n\n\t\t\t\t//show filters\n\t\t\t\tif (layers[i].filters.length > 0) {\n\t\t\t\t\thtml += '<div class=\"filters\">';\n\t\t\t\t\tfor (var j in layers[i].filters) {\n\t\t\t\t\t\tvar filter = layers[i].filters[j];\n\t\t\t\t\t\tvar title = this.Helper.ucfirst(filter.name);\n\t\t\t\t\t\ttitle = title.replace(/-/g, ' ');\n\n\t\t\t\t\t\thtml += '<div class=\"filter\">';\n\t\t\t\t\t\thtml += '\t<span class=\"delete\" id=\"delete_filter\" data-pid=\"' + layers[i].id + '\" data-id=\"' + filter.id + '\" title=\"delete\"></span>';\n\t\t\t\t\t\thtml += '\t<span class=\"layer_name\" id=\"filter_name\" data-pid=\"' + layers[i].id + '\" data-id=\"' + filter.id + '\" data-filter=\"' + filter.name + '\">' + title + '</span>';\n\t\t\t\t\t\thtml += '\t<div class=\"clear\"></div>';\n\t\t\t\t\t\thtml += '</div>';\n\t\t\t\t\t}\n\t\t\t\t\thtml += '</div>';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//register\n\t\tdocument.getElementById(target_id).innerHTML = html;\n\t\tif (config.LANG != 'en') {\n\t\t\tthis.Tools_translate.translate(config.LANG, document.getElementById(target_id));\n\t\t}\n\t}\n}\n\nexport default GUI_layers_class;\n", "import app from './../../app.js';\nimport config from './../../config.js';\nimport Base_layers_class from './../../core/base-layers.js';\nimport Dialog_class from './../../libs/popup.js';\nimport Helper_class from './../../libs/helpers.js';\n\nclass Layer_rename_class {\n\n\tconstructor() {\n\t\tthis.Base_layers = new Base_layers_class();\n\t\tthis.POP = new Dialog_class();\n\t\tthis.Helper = new Helper_class();\n\t}\n\n\trename(id = null) {\n\t\tvar _this = this;\n\n\t\tvar name_ = this.Helper.escapeHtml(config.layer.name);\n\n\t\tvar settings = {\n\t\t\ttitle: 'Rename',\n\t\t\tparams: [\n\t\t\t\t{name: \"name\", title: \"Name:\", value: name_},\n\t\t\t],\n\t\t\ton_load: function () {\n\t\t\t\tdocument.querySelector('#pop_data_name').select();\n\t\t\t},\n\t\t\ton_finish: function (params) {\n\t\t\t\tapp.State.do_action(\n\t\t\t\t\tnew app.Actions.Bundle_action('rename_layer', 'Rename Layer', [\n\t\t\t\t\t\tnew app.Actions.Refresh_layers_gui_action('undo'),\n\t\t\t\t\t\tnew app.Actions.Update_layer_action(id || config.layer.id, {\n\t\t\t\t\t\t\tname: params.name\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tnew app.Actions.Refresh_layers_gui_action('do')\n\t\t\t\t\t])\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t\tthis.POP.show(settings);\n\t}\n}\n\nexport default Layer_rename_class;\n"], "filenames": ["src/js/core/gui/gui-layers.js", "src/js/modules/layer/rename.js"], "buggy_code_start_loc": [165, 4], "buggy_code_end_loc": [168, 20], "fixing_code_start_loc": [166, 5], "fixing_code_end_loc": [170, 24], "type": "CWE-79", "message": "Cross-site Scripting (XSS) - Reflected in GitHub repository viliusle/minipaint prior to 4.14.0.", "other": {"cve": {"id": "CVE-2023-6461", "sourceIdentifier": "security@huntr.dev", "published": "2023-12-01T14:15:08.807", "lastModified": "2023-12-06T00:32:46.240", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Cross-site Scripting (XSS) - Reflected in GitHub repository viliusle/minipaint prior to 4.14.0."}, {"lang": "es", "value": "Cross-site scripting (XSS) Reflejado en el repositorio de GitHub viliusle/minipaint antes de 4.14.0."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 8.6, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 4.7}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:viliusle:minipaint:*:*:*:*:*:*:*:*", "versionEndExcluding": "4.14.0", "matchCriteriaId": "4BD5EC39-C1F0-4215-8BA2-67F68B35FD4D"}]}]}], "references": [{"url": "https://github.com/viliusle/minipaint/commit/f22cb46515c91b1071d48fff3e6c9b92c9b3878c", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.com/bounties/9a97d163-1738-4a09-b284-a04716e69dd0", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/viliusle/minipaint/commit/f22cb46515c91b1071d48fff3e6c9b92c9b3878c"}}