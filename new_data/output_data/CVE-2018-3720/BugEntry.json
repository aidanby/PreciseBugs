{"buggy_code": ["/*!\n * assign-deep <https://github.com/jonschlinkert/assign-deep>\n *\n * Copyright (c) 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\nvar assignSymbols = require('assign-symbols');\nvar typeOf = require('kind-of');\n\nfunction assign(target/*, objects*/) {\n  target = target || {};\n  var len = arguments.length, i = 0;\n  if (len === 1) {\n    return target;\n  }\n  while (++i < len) {\n    var val = arguments[i];\n    if (isPrimitive(target)) {\n      target = val;\n    }\n    if (isObject(val)) {\n      extend(target, val);\n    }\n  }\n  return target;\n}\n\n/**\n * Shallow extend\n */\n\nfunction extend(target, obj) {\n  assignSymbols(target, obj);\n\n  for (var key in obj) {\n    if (hasOwn(obj, key)) {\n      var val = obj[key];\n      if (isObject(val)) {\n        if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {\n          target[key] = val;\n        }\n        target[key] = assign(target[key] || {}, val);\n      } else {\n        target[key] = val;\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Returns true if the object is a plain object or a function.\n */\n\nfunction isObject(obj) {\n  return typeOf(obj) === 'object' || typeOf(obj) === 'function';\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Expose `assign`\n */\n\nmodule.exports = assign;\n"], "fixing_code": ["/*!\n * assign-deep <https://github.com/jonschlinkert/assign-deep>\n *\n * Copyright (c) 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\nvar assignSymbols = require('assign-symbols');\nvar typeOf = require('kind-of');\n\nfunction assign(target/*, objects*/) {\n  target = target || {};\n  var len = arguments.length, i = 0;\n  if (len === 1) {\n    return target;\n  }\n  while (++i < len) {\n    var val = arguments[i];\n    if (isPrimitive(target)) {\n      target = val;\n    }\n    if (isObject(val)) {\n      extend(target, val);\n    }\n  }\n  return target;\n}\n\n/**\n * Shallow extend\n */\n\nfunction extend(target, obj) {\n  assignSymbols(target, obj);\n\n  for (var key in obj) {\n    if (key !== '__proto__' && hasOwn(obj, key)) {\n      var val = obj[key];\n      if (isObject(val)) {\n        if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {\n          target[key] = val;\n        }\n        target[key] = assign(target[key] || {}, val);\n      } else {\n        target[key] = val;\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Returns true if the object is a plain object or a function.\n */\n\nfunction isObject(obj) {\n  return typeOf(obj) === 'object' || typeOf(obj) === 'function';\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Expose `assign`\n */\n\nmodule.exports = assign;\n"], "filenames": ["index.js"], "buggy_code_start_loc": [40], "buggy_code_end_loc": [41], "fixing_code_start_loc": [40], "fixing_code_end_loc": [41], "type": "NVD-CWE-noinfo", "message": "assign-deep node module before 0.4.7 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects.", "other": {"cve": {"id": "CVE-2018-3720", "sourceIdentifier": "support@hackerone.com", "published": "2018-06-07T02:29:08.270", "lastModified": "2023-02-28T17:43:31.523", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "assign-deep node module before 0.4.7 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability, which allows a malicious user to modify the prototype of \"Object\" via __proto__, causing the addition or modification of an existing property that will exist on all objects."}, {"lang": "es", "value": "El m\u00f3dulo de node assign-deep en versiones anteriores a la 0.4.7 se ve afectada por una vulnerabilidad MAID (modificaci\u00f3n de datos asumidos como asumible), lo que permite que un usuario malicioso modifique el prototipo de \"Object\" mediante __proto__, provocando la adici\u00f3n o modificaci\u00f3n de una propiedad existente que va a existir en todos los objetos."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "support@hackerone.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-471"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:assign-deep_project:assign-deep:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "0.4.7", "matchCriteriaId": "842EC2BE-68C9-4BC4-ADD4-C77F7822F0C4"}]}]}], "references": [{"url": "https://github.com/jonschlinkert/assign-deep/commit/19953a8c089b0328c470acaaaf6accdfcb34da11", "source": "support@hackerone.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://hackerone.com/reports/310707", "source": "support@hackerone.com", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jonschlinkert/assign-deep/commit/19953a8c089b0328c470acaaaf6accdfcb34da11"}}