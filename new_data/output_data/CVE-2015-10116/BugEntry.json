{"buggy_code": ["=== Favicon by RealFaviconGenerator ===\r\nContributors: phbernard\r\nTags: favicon, apple-touch-icon, realfavicongenerator\r\nRequires at least: 3.5\r\nTested up to: 4.1.1\r\nStable tag: 1.2.12\r\nLicense: GPLv2\r\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\r\n\r\nCreate and install your favicon for all platforms: PC/Mac of course, but also iPhone/iPad, Android devices, Windows 8 tablets...\r\n\r\n== Description ==\r\n\r\nGenerate and setup a favicon for desktop browsers, iPhone/iPad, Android devices, Windows 8 tablets and more. In a matter of seconds, design an icon that looks great on all major platforms.\r\n\r\nFavicon is not just a single `favicon.ico` file dropped in the middle of your site. Nowadays, with so many different platforms and devices, you need a bunch of pictures to get the job done. With RealFaviconGenerator, generate all the icons you need for desktop browsers, iPhone/iPad, Android devices, Windows 8 devices, and more.\r\n\r\niOS devices use a high resolution Apple touch icon to illustrate bookmarks and home screen shortcuts. A first generation iPhone needs a 57x57 picture, whereas a brand new iPad with Retina screen looks for a 152x152 picture. Android Chrome also use these pictures if it finds them. Windows 8 takes another route with a dedicated set of icons and HTML declarations.\r\n\r\nFavicon is not only a matter of pictures with different resolutions. The various platforms coms with different UI guidelines. For example, the classic desktop favicons often use transparency. But iOS requires opaque icons. And Windows 8 has its own recommendations.\r\n\r\nSave hours of research and image edition with RealFaviconGenerator and its companion plugin. In a matter of seconds, you setup a favicon compatible with:\r\n\r\n-  Windows (IE, Chrome, Firefox, Opera, Safari)\r\n-  Mac (Safari, Chrome, Firefox, Opera, Camino)\r\n-  iOS (Safari, Chrome, Coast)\r\n-  Android (Chrome, Firefox)\r\n-  Surface (IE)\r\n-  And more\r\n\r\nWe take compatibility very seriously. See http://realfavicongenerator.net/favicon_compatibility for the full list.\r\n\r\n** Localization **\r\n\r\n* English (`en_EN`) by [Philippe Bernard](http://realfavicongenerator.net/)\r\n* French (`fr_FR`) by [Philippe Bernard](http://realfavicongenerator.net/)\r\n* Swedish (`sv_SE`) by [Linus Wileryd](https://twitter.com/wileryd)\r\n* Brazilian Portuguese (`pt_BR`) by Marcelo Volgarini, [Cria\u00e7\u00e3o de Sites](http://www.techload.com.br/criacao-de-sites-ribeirao-preto)\r\n* Dutch (`nl_NL`) by [Axel Vanderhaeghen](https://eco13.eu)\r\n\r\n== Installation ==\r\n\r\n= Using The WordPress Dashboard =\r\n\r\n1. Navigate to the 'Add New' in the plugins dashboard\r\n2. Search for 'Favicon by RealFaviconGenerator'\r\n3. Click 'Install Now'\r\n4. Activate the plugin on the Plugin dashboard\r\n5. Navigate to the 'Favicon' entry in the Appearance menu\r\n6. Select a master picture from the Media Library (optional)\r\n7. Click the 'Generate Favicon' button and follow the instructions.\r\n\r\n= Using FTP =\r\n\r\n1. Download `favicon-by-realfavicongenerator.zip`\r\n2. Extract the `favicon-by-realfavicongenerator` directory to your computer\r\n3. Upload the `favicon-by-realfavicongenerator` directory to the `/wp-content/plugins/` directory\r\n4. Activate the plugin on the Plugin dashboard\r\n5. Navigate to the 'Favicon' entry in the Appearance menu\r\n6. Select a master picture from the Media Library (optional)\r\n7. Click the 'Generate Favicon' button and follow the instructions.\r\n\r\n== Screenshots ==\r\n\r\n1. Initial favicon setup screen. You are invited to setup your favicon.\r\n2. Select a master picture from the Media Library (optional)\r\n3. Once you hit the Generate Favicon button, you are redirected to <a href=\"http://realfavicongenerator.net/\">RealFaviconGenerator</a>, \r\nwhere you can design your favicon: adding a background to your iOS picture, using a saturated version of your master picture for Windows 8...\r\n4. When you are done with the favicon editor, you are redirected to the WordPress Dashboard. The favicon is installed automatically.\r\nThis screen presents you a preview of the favicon you various platforms, so you know how your blog looks like on various platforms.\r\n5. You can also trigger RealFaviconGenerator's favicon checker, to make sure your favicon is correctly setup.\r\n\r\n== Changelog ==\r\n\r\n= 1.2.12 =\r\n\r\n- Performance improvements: favicon update checking is now done in the Admin section (not the Public section), locales are not loaded in the Public section anymore.\r\n- Take advantage of the Rewrite API (when available) to make the files appear to be in the root directory. So http://example.com/favicon.ico works (eg. when requested by Yandex).\r\n- nl/NL translation added, thanks to Axel Vanderhaeghen.\r\n\r\n= 1.2.11 =\r\n\r\n- When the admin's browser cannot get the picture selected from the Media Library, the UI fails gracefully.\r\n- Favicon package unzipping is more robust.\r\n- Notice to ask users to rank the plugin on WordPress.org.\r\n\r\n= 1.2.10 =\r\n\r\n- Warning fix when used with BuddyPress (bp_setup_current_user). See https://wordpress.org/support/topic/wp_debug-notice-for-bp_setup_current_user.\r\n\r\n= 1.2.9 =\r\n\r\n- When selected from the Media Library, the master picture is now retrieved by WP administrator's browser to prevent several issues (locally hosted blogs, blogs protected in a way or another, etc.).\r\n\r\n= 1.2.8 =\r\n\r\n- Plugin successfully tested against WordPress 4.1.\r\n\r\n= 1.2.7 =\r\n\r\n- Fix for WordPress sites hosted on Windows.\r\n\r\n= 1.2.6 =\r\n\r\n- The plugin is now compatible with multisite.\r\n\r\n= 1.2.5 =\r\n\r\n- Fix for login page: favicon code was not injected in this particular page.\r\n\r\n= 1.2.4 =\r\n\r\n- Remove debug messages to avoid false positives in error log.\r\n\r\n= 1.2.3 =\r\n\r\n- Update notifications can be dismissed once for all.\r\n- New Settings page to enable/disable update notifications.\r\n\r\n= 1.2.2 =\r\n\r\n- Fix for the 403 issue with HostGator hosting service (http://wordpress.org/support/topic/403-error-when-generating-favicon).\r\n\r\n= 1.2.1 =\r\n\r\n- Fix in plugin removal and update checking.\r\n\r\n= 1.2.0 =\r\n\r\n- The plugin now warns the user when RealFaviconGenerator was updated and the favicon should be generated again.\r\n\r\n= 1.1.1 =\r\n\r\n- Rewrite API usage disabled. Favicon files do not appear to be in the root directory of the blog anymore.\r\n\r\n= 1.1.0 =\r\n\r\n- Run RealFaviconGenerator's favicon checker from the admin interface.\r\n\r\n= 1.0.7 =\r\n\r\n- Deactivate default Genesis favicon when one is configured in FbRFG.\r\n\r\n= 1.0.6 =\r\n\r\n- Error management improved during favicon install.\r\n\r\n= 1.0.5 =\r\n\r\n- Do not try to rewrite the favicon files URL when .htaccess is not writable.\r\n\r\n= 1.0.4 =\r\n\r\n- Option to not rewrite the favicon files URL, even when this is possible.\r\n\r\n= 1.0.3 =\r\n\r\n- Plugin code syntax changed to fit older versions of PHP.\r\n\r\n= 1.0.2 =\r\n\r\n- Callback URL was too long for some servers. It has been shorten.\r\n\r\n= 1.0.1 =\r\n\r\n- Favicon admin settings are now in the Appearance menu.\r\n- Fix in favicon package download.\r\n- Fix in error management during favicon installation. \r\n\r\n= 1.0 =\r\n\r\nInitial version.\r\n", "<?php\r\n// Copyright 2014 RealFaviconGenerator\r\n\r\nrequire_once plugin_dir_path( __FILE__ ) . '../public/class-favicon-by-realfavicongenerator-common.php';\r\nrequire_once plugin_dir_path( __FILE__ ) . 'class-favicon-by-realfavicongenerator-api-response.php';\r\n\r\nclass Favicon_By_RealFaviconGenerator_Admin extends Favicon_By_RealFaviconGenerator_Common {\r\n\r\n\tconst DISMISS_UPDATE_NOTIICATION = 'fbrfg_dismiss_update_notification';\r\n\tconst DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS = 'fbrfg_dismiss_all_update_notifications';\r\n\tconst SETTINGS_FORM = 'fbrfg_settings_form';\r\n\r\n\tprotected static $instance = null;\r\n\r\n\tprivate function __construct() {\r\n\t\tadd_action( 'init', array( $this, 'load_plugin_textdomain' ) );\r\n\r\n\t\tadd_action( 'admin_head', array( $this, 'add_favicon_markups' ) );\r\n\r\n\t\t// Deactivate Genesis default favicon\r\n\t\tadd_filter( 'genesis_pre_load_favicon', array( $this, 'return_empty_favicon_for_genesis' ) );\r\n\r\n\t\t// See\r\n\t\t// - https://wordpress.org/support/topic/wp_debug-notice-for-bp_setup_current_user\r\n\t\t// - https://buddypress.org/support/topic/wp_debug-notice-for-bp_setup_current_user\r\n\t\t// The idea: is_super_admin must not be called too soon.\r\n\t\tadd_action( 'init', array( $this, 'register_admin_actions' ) );\r\n\r\n\t\t// Check for updates\r\n\t\tadd_action( Favicon_By_RealFaviconGenerator_Common::ACTION_CHECK_FOR_UPDATE, array( $this, 'check_for_updates' )  );\r\n\t}\r\n\r\n\t/**\r\n\t * Return an instance of this class.\r\n\t *\r\n\t * @since     1.0\r\n\t *\r\n\t * @return    object    A single instance of this class.\r\n\t */\r\n\tpublic static function get_instance() {\r\n\r\n\t\t// If the single instance hasn't been set, set it now.\r\n\t\tif ( null == self::$instance ) {\r\n\t\t\tself::$instance = new self;\r\n\t\t}\r\n\r\n\t\treturn self::$instance;\r\n\t}\r\n\r\n\tpublic function register_admin_actions() {\r\n\t\t// Except for the headers, everything is accessible only to the admin\r\n\t\tif ( ! is_super_admin() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tadd_action( 'admin_menu',\r\n\t\t\tarray( $this, 'create_favicon_settings_menu' ) );\r\n\r\n\t\tadd_action('wp_ajax_' . Favicon_By_RealFaviconGenerator_Common::PLUGIN_PREFIX . '_install_new_favicon',\r\n\t\t\tarray( $this, 'install_new_favicon' ) );\r\n\t\tadd_action('wp_ajax_nopriv_' . Favicon_By_RealFaviconGenerator_Common::PLUGIN_PREFIX . '_install_new_favicon',\r\n\t\t\tarray( $this, 'install_new_favicon' ) );\r\n\r\n\t\t// Update notice\r\n\t\tadd_action('admin_notices', array( $this, 'display_update_notice' ) );\r\n\t\tadd_action('admin_init',    array( $this, 'process_ignored_notice' ) );\r\n\r\n\t\t// Schedule update check\r\n\t\tif ( ! wp_next_scheduled( Favicon_By_RealFaviconGenerator_Common::ACTION_CHECK_FOR_UPDATE ) ) {\r\n\t\t\twp_schedule_event( time(), 'daily', Favicon_By_RealFaviconGenerator_Common::ACTION_CHECK_FOR_UPDATE );\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function create_favicon_settings_menu() {\r\n\t\tadd_theme_page( __( 'Favicon', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), \r\n\t\t\t__( 'Favicon', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), 'manage_options', __FILE__ . 'favicon_appearance_menu', \r\n\t\t\tarray( $this, 'create_favicon_appearance_page' ) );\r\n\r\n\t\tadd_options_page( __( 'Favicon Settings', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), \r\n\t\t\t__( 'Favicon', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), 'manage_options', __FILE__ . 'favicon_settings_menu', \r\n\t\t\tarray( $this, 'create_favicon_settings_page' ) );\r\n\t}\r\n\r\n\tpublic function create_favicon_settings_page() {\r\n\t\tglobal $current_user;\r\n\r\n\t\t$user_id = $current_user->ID;\r\n\r\n\t\t// Prepare variables\r\n\t\t$favicon_appearance_url = admin_url( 'themes.php?page=' . __FILE__ . 'favicon_appearance_menu' );\r\n\t\t$favicon_admin_url = admin_url( 'options-general.php?page=' . __FILE__ . 'favicon_settings_menu' );\r\n\t\t$display_update_notifications = ! $this->get_boolean_user_option(\r\n\t\t\tFavicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE );\r\n\r\n\t\t// Template time!\r\n\t\tinclude_once( plugin_dir_path(__FILE__) . 'views/settings.php' );\t\t\r\n\t}\r\n\r\n\tpublic function create_favicon_appearance_page() {\r\n\t\t$result = NULL;\r\n\r\n\t\t// Prepare settings page\r\n\r\n\t\t// Option to allow user to not use the Rewrite API: display it only when the Rewrite API is available\r\n\t\t// Due to too many problems with the rewrite API (for example, http://wordpress.org/support/topic/do-not-work-8),\r\n\t\t// it was deciced to turn the feature off once for all\r\n\t\t$can_rewrite = false;\r\n\r\n\t\t$pic_path = $this->get_full_picture_path();\r\n\r\n\t\t$favicon_configured = $this->is_favicon_configured();\r\n\t\t$favicon_in_root = $this->is_favicon_in_root();\r\n\r\n\t\t$preview_url = $this->is_preview_available() ? $this->get_preview_url() : NULL;\r\n\r\n\t\tif ( isset( $_REQUEST['json_result_url'] ) ) {\r\n\t\t\t// New favicon to install:\r\n\t\t\t// Parameters will be processed with an Ajax call\r\n\r\n\t\t\t$new_favicon_params_url = 'http://realfavicongenerator.net' . $_REQUEST['json_result_url'];\r\n\t\t\t$ajax_url = admin_url( 'admin-ajax.php', isset( $_SERVER['HTTPS'] ) ? 'https://' : 'http://' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No new favicon, simply display the settings page\r\n\t\t\t$new_favicon_params_url = NULL;\r\n\t\t}\r\n\r\n\t\t// External files\r\n\t\twp_enqueue_script( 'jquery' );\r\n\t\twp_enqueue_script( 'jquery-ui' );\r\n\t\twp_enqueue_script( 'jquery-effects-pulsate' );\r\n\t\twp_enqueue_media();\r\n\t\twp_enqueue_style( 'fbrfg_admin_style', plugins_url( 'assets/css/admin.css', __FILE__ ) );\r\n\r\n\t\t// Template time!\r\n\t\tinclude_once( plugin_dir_path(__FILE__) . 'views/appearance.php' );\r\n\t}\r\n\r\n\tprivate function download_result_json( $url ) {\r\n\t\t$resp = wp_remote_get( $url );\r\n\t\tif ( is_wp_error( $resp )) {\r\n\t\t\tthrow new InvalidArgumentException( \"Cannot download JSON file at \" . $url . \": \" . $resp->get_error_message() );\r\n\t\t}\r\n\r\n\t\t$json = wp_remote_retrieve_body( $resp );\r\n\t\tif ( empty( $json ) ) {\r\n\t\t\tthrow new InvalidArgumentException( \"Empty JSON document at \" . $url );\r\n\t\t}\r\n\r\n\t\treturn $json;\r\n\t}\r\n\r\n\tpublic function install_new_favicon() {\r\n\t\theader(\"Content-type: application/json\");\r\n\r\n\t\ttry {\r\n\t\t\t// URL is explicitely decoded to compensate the extra encoding performed while generating the settings page\r\n\t\t\t$url = $_REQUEST['json_result_url'];\r\n\r\n\t\t\t$result = $this->download_result_json( $url );\r\n\r\n\t\t\t$response = new Favicon_By_RealFaviconGenerator_Api_Response( $result );\r\n\r\n\t\t\t$zip_path = Favicon_By_RealFaviconGenerator_Common::get_tmp_dir();\r\n\t\t\tif ( ! file_exists( $zip_path ) ) {\r\n\t\t\t\tmkdir( $zip_path, 0755, true );\r\n\t\t\t}\r\n\t\t\t$response->downloadAndUnpack( $zip_path );\r\n\r\n\t\t\t$this->store_pictures( $response );\r\n\r\n\t\t\t$this->store_preview( $response->getPreviewPath() );\r\n\r\n\t\t\tFavicon_By_RealFaviconGenerator_Common::remove_directory( $zip_path );\r\n\r\n\t\t\tupdate_option( Favicon_By_RealFaviconGenerator_Common::OPTION_HTML_CODE, $response->getHtmlCode() );\r\n\t\t\t\r\n\t\t\t$this->set_favicon_configured( true, $response->isFilesInRoot(), $response->getVersion() );\r\n?>\r\n{\r\n\t\"status\": \"success\",\r\n\t\"preview_url\": <?php echo json_encode( $this->get_preview_url() ) ?>,\r\n\t\"favicon_in_root\": <?php echo json_encode( $this->is_favicon_in_root() ) ?>\r\n}\r\n<?php\r\n\t\t}\r\n\t\tcatch(Exception $e) {\r\n?>\r\n{\r\n\t\"status\": \"error\",\r\n\t\"message\": <?php echo json_encode( $e->getMessage() ) ?>\r\n}\r\n<?php\r\n\t\t}\r\n\r\n\t\tdie();\r\n\t}\r\n\r\n\tpublic function get_picture_dir() {\r\n\t\treturn Favicon_By_RealFaviconGenerator_Common::get_files_dir();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns http//somesite.com/blog/wp-content/upload/fbrfg/\r\n\t */\r\n\tpublic function get_picture_url() {\r\n\t\treturn Favicon_By_RealFaviconGenerator_Common::get_files_url();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns /blog/wp-content/upload/fbrfg/\r\n\t */\r\n\tpublic function get_full_picture_path() {\r\n\t\treturn parse_url( $this->get_picture_url(), PHP_URL_PATH );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns wp-content/upload/fbrfg/\r\n\t */\r\n\tpublic function get_picture_path() {\r\n\t\treturn substr( $this->get_picture_url(), strlen( home_url() ) );\r\n\t}\r\n\r\n\tpublic function get_preview_path( $preview_file_name = NULL ) {\r\n\t\tif ( ! $preview_file_name ) {\r\n\t\t\t$preview_file_name = $this->get_preview_file_name();\r\n\t\t}\r\n\t\treturn $this->get_picture_dir() . 'preview/' . $preview_file_name;\r\n\t}\r\n\r\n\tpublic function get_preview_url( $preview_file_name = NULL ) {\r\n\t\tif ( ! $preview_file_name ) {\r\n\t\t\t$preview_file_name = $this->get_preview_file_name();\r\n\t\t}\r\n\t\treturn $this->get_picture_url() . '/preview/' . $preview_file_name;\r\n\t}\r\n\r\n\tpublic function store_preview( $preview_path ) {\r\n\t\t// Remove previous preview, if any\r\n\t\t$previous_preview = $this->get_preview_file_name();\r\n\t\tif ( $previous_preview != NULL && ( file_exists( $this->get_preview_path( $previous_preview ) ) ) ) {\r\n\t\t\tunlink( $this->get_preview_path( $previous_preview ) );\r\n\t\t}\r\n\r\n\t\tif ( $preview_path == NULL ) {\r\n\t\t\t// \"Unregister\" previous preview, if any\r\n\t\t\t$this->set_preview_file_name( NULL );\r\n\t\t\treturn NULL;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$preview_file_name = 'preview_' . md5( 'RFB stuff here ' . rand() . microtime() ) . '.png';\r\n\t\t}\r\n\r\n\t\tif ( ! file_exists( dirname( $this->get_preview_path( $preview_file_name ) ) ) ) {\r\n\t\t\tmkdir( dirname( $this->get_preview_path( $preview_file_name ) ), 0755 );\r\n\t\t}\r\n\r\n\t\trename( $preview_path, $this->get_preview_path( $preview_file_name ) );\r\n\r\n\t\t$this->set_preview_file_name( $preview_file_name );\r\n\t}\r\n\r\n\tpublic function store_pictures( $rfg_response ) {\r\n\t\t$working_dir = $this->get_picture_dir();\r\n\r\n\t\t// Move pictures to production directory\r\n\t\t$files = glob( $working_dir . '*' );\r\n\t\tforeach( $files as $file ) {\r\n\t\t\tif ( is_file( $file ) ) {\r\n\t\t\t    unlink( $file );\r\n\t\t\t}\r\n\t\t}\r\n\t\t$files = glob( $rfg_response->getProductionPackagePath() . '/*' );\r\n\t\tforeach( $files as $file ) {\r\n\t\t\tif ( is_file( $file ) ) {\r\n\t\t\t    rename( $file, $working_dir . basename( $file ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Even if the package was not supposed to be put in root, make the files (also) appear at the root of the site\r\n\t\t// So /favicon.ico works, for example.\r\n\t\t// See https://wordpress.org/support/topic/choose-between-rewrite-api-and-dedicated-directory\r\n\t\tif ( $this->can_access_pics_with_url_rewrite() ) {\r\n\t\t\t$this->rewrite_pictures_url( $working_dir );\r\n\t\t\tflush_rewrite_rules();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function rewrite_pictures_url( $pic_dir ) {\r\n\t\tforeach ( scandir($pic_dir) as $file ) {\r\n\t\t\tif ( ! is_dir( $pic_dir . '/' . $file ) ) {\r\n\t\t\t\tadd_rewrite_rule( str_replace( '.', '\\.', $file ), \r\n\t\t\t\t\ttrim( $this->get_picture_path(), '/') . '/' . $file );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicate if it is possible to create URLs such as /favicon.ico\r\n\t */\r\n\tpublic function can_access_pics_with_url_rewrite() {\r\n\t\tglobal $wp_rewrite;\r\n\r\n\t\t// If blog is in root AND rewriting is available (http://wordpress.stackexchange.com/questions/142273/checking-that-the-rewrite-api-is-available),\r\n\t\t// we can produce URLs such as /favicon.ico\r\n\t\t$rewrite = ( $this->wp_in_root() && $wp_rewrite->using_permalinks() );\r\n\t\tif ( ! $rewrite ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// See http://wordpress.org/support/topic/fbrfg-not-updating-htaccess-rewrite-rules\r\n\t\t$htaccess = get_home_path() . '/.htaccess';\r\n\t\t// Two cases:\r\n\t\t//   - There is no .htaccess. Either we are not using Apache (so the Rewrite API is supposed to handle\r\n\t\t//     the rewriting differently) or there is a problem with Apache/WordPress config, but this is not our job.\r\n\t\t//   - .htaccess is present. If so, it should be writable.\r\n\t\treturn ( ( ! file_exists( $htaccess ) ) || is_writable( $htaccess ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Indicate if WP is installed in the root of the web site (eg. http://mysite.com) or not (eg. http://mysite.com/blog).\r\n\t */\r\n\tpublic function wp_in_root() {\r\n\t\t$path = parse_url( home_url(), PHP_URL_PATH );\r\n\t\treturn ( ($path == NULL) || (strlen( $path ) == 0) );\r\n\t}\r\n\r\n\tpublic function set_boolean_user_option( $option_name, $option_value ) {\r\n\t\tglobal $current_user;\r\n\t\t$user_id = $current_user->ID;\r\n\r\n\t\tupdate_user_option( $user_id, $option_name, $option_value );\r\n\t}\r\n\r\n\tpublic function get_boolean_user_option( $option_name ) {\r\n\t\tglobal $current_user;\r\n\t\t$user_id = $current_user->ID;\r\n\r\n\t\treturn get_user_option( $option_name );\r\n\t}\r\n\r\n\tpublic function is_update_notice_to_be_displayed() {\r\n\t\t// No update? No notice\r\n\t\tif ( ! $this->is_update_available() ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Did the user prevent all notices?\r\n\t\tif ( $this->get_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE_FOR_VERSION . $this->get_latest_version_available() ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Did the user prevent the notice for this particular version?\r\n\t\tif ( $this->get_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function display_update_notice() {\r\n\t\tif ( $this->is_update_notice_to_be_displayed() ) {\r\n\t\t\techo '<div class=\"update-nag\">';\r\n\t\t\tprintf( __( '<a href=\"%s\" target=\"_blank\">An update is available</a> on RealFaviconGenerator. You might want to <a href=\"%s\">generate your favicon again</a>.', FBRFG_PLUGIN_SLUG ),\r\n\t\t\t\t\t'http://realfavicongenerator.net/change_log?since='. $this->get_favicon_version(),\r\n\t\t\t\t\tadmin_url( 'themes.php?page=' . __FILE__ . 'favicon_appearance_menu') );\r\n\t\t\tprintf( __( ' | <a href=\"%s\">Hide this notice</a>', FBRFG_PLUGIN_SLUG), \r\n\t\t\t\t$this->add_parameter_to_current_url( Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_NOTIICATION . '=0' ) );\r\n\t\t\tprintf( __( ' | <a href=\"%s\">Do not warn me again in case of update</a>', FBRFG_PLUGIN_SLUG), \r\n\t\t\t\t$this->add_parameter_to_current_url( Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS . '=0' ) );\r\n\t\t\techo '</div>';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function process_ignored_notice() {\r\n\t    global $current_user;\r\n        $user_id = $current_user->ID;\r\n\r\n        if ( isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_NOTIICATION] ) && \r\n        \t\t'0' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_NOTIICATION] ) {\r\n             $this->set_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE_FOR_VERSION . $this->get_latest_version_available(), true );\r\n\t    }\r\n\r\n\t    $no_notices = NULL;\r\n        if ( ( isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) && \r\n        \t\t'0' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) ) {\r\n        \t// The \"no more notifications\" link was clicked in the notification itself\r\n\t\t    $no_notices = true;\r\n        }\r\n        if ( isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::SETTINGS_FORM] ) && \r\n        \t\t'1' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::SETTINGS_FORM] ) {\r\n        \t// The settings form was validated\r\n        \t$no_notices = ( ! isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) || \r\n        \t\t( '0' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) );\r\n\t    }\r\n\t\tif ( $no_notices !== NULL ) {\r\n\t\t\t$this->set_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE, $no_notices );\r\n\t\t}\r\n\t}\r\n}\r\n?>", "<?php\r\n// Copyright 2014 RealFaviconGenerator\r\n?>\r\n\r\n<div class=\"wrap\">\r\n\r\n\t<h2><?php echo esc_html( get_admin_page_title() ); ?></h2>\r\n\r\n<?php if ( $new_favicon_params_url ) { ?>\r\n\t<div id=\"install_in_progress_message\" class=\"updated\">\r\n\t\t<p><?php _e( 'Favicon installation in progress. Please wait...', FBRFG_PLUGIN_SLUG ) ?></p>\r\n\t</div>\r\n\r\n\t<div id=\"install_completed_message\" class=\"updated\" style=\"display:none\">\r\n\t\t<p>\r\n\t\t\t<?php _e( 'Favicon installed!', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t<span id=\"rank_notice\" style=\"display:none\">\r\n\t\t\t\t<?php printf( __( 'Do you like the result? If so, would you like to <a %s>rate the plugin</a>?', FBRFG_PLUGIN_SLUG ), \r\n\t\t\t\t\t'target=\"_blank\" href=\"https://wordpress.org/support/view/plugin-reviews/favicon-by-realfavicongenerator\"' ) ?>\r\n\t\t\t</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<div id=\"install_error_message\" class=\"error\" style=\"display:none\"><p></p></div>\r\n\r\n\t<div id=\"install_completed_container\" style=\"display:none\">\r\n\t\t<h3><?php _e( 'Current favicon', FBRFG_PLUGIN_SLUG ) ?></h3>\r\n\t\t<p><?php _e( 'The favicon is up and ready.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n\t\t<img id=\"preview_image\">\r\n\r\n\t\t<p>\r\n\t\t\t<?php printf( __( '<a %s>Check your favicon</a> with RealFaviconGenerator\\'s favicon checker.', FBRFG_PLUGIN_SLUG ), \r\n\t\t\t\t'id=\"checker_link\" class=\"button-primary\" href=\"#\"' ) ?>\r\n\t\t\t<?php _e( 'This option works only if your site is accessible from the outside.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t</p>\r\n\t</div>\r\n<?php } else { ?>\r\n\t<h3><?php _e( 'Current favicon', FBRFG_PLUGIN_SLUG ) ?></h3>\r\n\r\n<?php \tif ( $favicon_configured) { ?>\r\n\t<p><?php _e( 'The favicon is up and ready.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n<?php \t} else { ?>\r\n\t<p><?php _e( 'No favicon has been configured yet.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n<?php \t} ?>\r\n\t\r\n<?php \tif ( $favicon_configured ) {\r\n\t\t\tif ( $preview_url ) { ?>\r\n\r\n\t<img src=\"<?php echo $preview_url ?>\">\r\n\r\n<?php \t\t} ?>\r\n\t<p>\r\n\t\t<?php printf( __( '<a %s>Check your favicon</a> with RealFaviconGenerator\\'s favicon checker.', FBRFG_PLUGIN_SLUG ),\r\n\t\t\t'class=\"button-primary\" ' .\r\n\t\t\t'href=\"http://realfavicongenerator.net/favicon_checker?site=' . urlencode( home_url() ) . ($favicon_in_root ? '' : '&ignore_root_issues=on') . '\"' ) ?>\r\n\t\t<?php _e( 'This option works only if your site is accessible from the outside.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t</p>\r\n<?php\r\n\t\t}\r\n\t  } ?>\r\n\r\n\t<div id=\"favicon_form_container\" <?php echo $new_favicon_params_url ? 'style=\"display:none\"' : '' ?>>\r\n\t\t<h3><?php _e( 'Favicon generation', FBRFG_PLUGIN_SLUG ) ?></h3>\r\n<?php if ( $favicon_configured || $new_favicon_params_url ) { ?>\r\n\t<p><?php _e( 'You can replace the existing favicon.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n<?php } ?>\r\n\t\t<form role=\"form\" method=\"post\" action=\"http://realfavicongenerator.net/api/favicon_generator\" id=\"favicon_form\">\r\n\t\t\t<input type=\"hidden\" name=\"json_params\" id=\"json_params\"/>\r\n\t\t\t<table class=\"form-table\"><tbody>\r\n\t\t\t\t<tr valign=\"top\">\r\n\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t<label for=\"master_picture_url\"><?php _e( 'Master picture URL', FBRFG_PLUGIN_SLUG ) ?></label>\r\n\t\t\t\t\t</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input id=\"master_picture_url\" name=\"master_picture_url\" size=\"55\">\r\n\t\t\t\t\t\t<button id=\"upload_image_button\" value=\"<?php _e( 'Select from the Media Library', FBRFG_PLUGIN_SLUG ) ?>\">\r\n\t\t\t\t\t\t\t<?php _e( 'Select from the Media Library', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<p class=\"description\">\r\n\t\t\t\t\t\t\t<?php _e( 'Submit a square picture, at least 70x70 (recommended: 260x260 or more)', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t<?php _e( 'If the picture is on your hard drive, you can leave this field blank and upload the picture from RealFaviconGenerator.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\r\n<?php if ( $can_rewrite ) { ?>\r\n\t\t\t\t<tr valign=\"top\">\r\n\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t<label for=\"rewrite\"><?php _e( 'Favicon files in root directory', FBRFG_PLUGIN_SLUG ) ?></label>\r\n\t\t\t\t\t</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"rewrite\" id=\"rewrite\" checked=\"true\">\r\n\t\t\t\t\t\t<p class=\"description\">\r\n\t\t\t\t\t\t\t<?php _e( 'The plugin always stores the favicon files in a dedicated directory.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t<?php _e( 'However, if this option is enabled, the plugin takes advantage of the permalink feature and the favicon files appear to be in the root directory', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t\t(<a href=\"http://realfavicongenerator.net/faq#why_icons_in_root\"><?php _e( 'recommended', FBRFG_PLUGIN_SLUG ) ?></a>)\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n<?php } ?>\r\n\t\t\t</tbody></table>\r\n\r\n\t\t\t<p class=\"submit\">\r\n\t\t\t\t<input type=\"submit\" name=\"Generate favicon\" id=\"generate_favicon_button\" class=\"button-primary\"\r\n\t\t\t\t\tvalue=\"<?php _e( 'Generate favicon', FBRFG_PLUGIN_SLUG ) ?>\">\r\n\t\t\t</p>\r\n\t\t</form>\r\n\t</div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n\tvar picData = null;\r\n\t\r\n\tfunction urlToBase64(url, callback) {\r\n\t\tvar img = new Image();\r\n\t\timg.onload = function() {\r\n\t\t\tcallback(getBase64Image(img));\r\n\t\t}\r\n\t\timg.onerror = function() {\r\n\t\t\tcallback(null);\r\n\t\t}\r\n\t\timg.src = url;\r\n\t}\r\n\r\n\t// See http://stackoverflow.com/questions/934012/get-image-data-in-javascript\r\n\t// Credits: Matthew Crumley\r\n\tfunction getBase64Image(img) {\r\n\t\ttry {\r\n\t\t\tvar canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\r\n\t\t\tvar ctx = canvas.getContext(\"2d\");\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t\tvar dataURL = canvas.toDataURL(\"image/png\");\r\n\r\n\t\t\treturn dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tconsole.log(\"Cannot get the picture from the Media Library: \" + err);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction computeJson() {\r\n\t\tvar params = { favicon_generation: { \r\n\t\t\tcallback: {},\r\n\t\t\tmaster_picture: {},\r\n\t\t\tfiles_location: {},\r\n\t\t\tapi_key: \"87d5cd739b05c00416c4a19cd14a8bb5632ea563\"\r\n\t\t}};\r\n\t\t\r\n\t\tif (jQuery('#master_picture_url').val().length <= 0) {\r\n\t\t\tparams.favicon_generation.master_picture.type = \"no_picture\";\r\n\t\t\tparams.favicon_generation.master_picture.demo = true;\r\n\t\t}\r\n\t\telse if (pictureContent != null) {\r\n\t\t\tparams.favicon_generation.master_picture.type = \"inline\";\r\n\t\t\tparams.favicon_generation.master_picture.content = pictureContent;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tparams.favicon_generation.master_picture.type = \"url\";\r\n\t\t\tparams.favicon_generation.master_picture.url = jQuery('#master_picture_url').val();\r\n\t\t}\r\n\r\n<?php if ( $can_rewrite ) { ?>\r\n\t\tif ( jQuery(\"#rewrite\").is(':checked') ) {\r\n\t\t\tparams.favicon_generation.files_location.type = 'root';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tparams.favicon_generation.files_location.type = 'path';\r\n\t\t\tparams.favicon_generation.files_location.path = '<?php echo $pic_path ?>';\r\n\t\t}\r\n<?php } else { ?>\r\n\t\tparams.favicon_generation.files_location.type = 'path';\r\n\t\tparams.favicon_generation.files_location.path = '<?php echo $pic_path ?>';\r\n<?php } ?>\r\n\r\n\t\tparams.favicon_generation.callback.type = 'url';\r\n\t\tparams.favicon_generation.callback.url = \"<?php echo admin_url('themes.php?page=' . ( ( isset( $_REQUEST['page'] ) ) \r\n\t\t\t? $_REQUEST['page']\r\n\t\t\t: 'favicon-by-realfavicongenerator/admin/class-favicon-by-realfavicongenerator-admin.phpfavicon_appearance_menu' ) ) ?>\";\r\n\t\tparams.favicon_generation.callback.short_url = 'true';\r\n\t\tparams.favicon_generation.callback.path_only = 'true';\r\n\r\n\t\treturn params;\r\n\t}\r\n\r\n\tvar pictureContent = null;\r\n\tvar pictureContentTimestamp = null;\r\n\r\n\tfunction prepareInlinePicture(pictureUrl) {\r\n\t\tvar timestamp = new Date().getTime();\r\n\t\tpictureContentTimestamp\t= timestamp;\r\n\r\n\t\tjQuery('#generate_favicon_button').attr('disabled', 'disabled');\r\n\t\tjQuery('#generate_favicon_button').val(\"<?php _e( 'Preparing master picture...', FBRFG_PLUGIN_SLUG ) ?>\");\r\n\r\n\t\tpictureContent = null;\r\n\r\n\t\turlToBase64(pictureUrl, function(content) {\r\n\t\t\tif (content != null) {\r\n\t\t\t\tpictureContent = content;\r\n\t\t\t}\r\n\t\t\trestoreGenerateFaviconButton();\r\n\t\t});\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\tif (pictureContentTimestamp == timestamp) {\r\n\t\t\t\trestoreGenerateFaviconButton();\r\n\t\t\t}\r\n\t\t}, 3000);\r\n\t}\r\n\r\n\tfunction restoreGenerateFaviconButton() {\r\n\t\tjQuery('#generate_favicon_button').removeAttr('disabled');\r\n\t\tjQuery('#generate_favicon_button').val(\"<?php _e( 'Generate favicon', FBRFG_PLUGIN_SLUG ) ?>\");\r\n\t}\r\n\r\n<?php if ( $new_favicon_params_url ) { ?>\r\n\tvar data = {\r\n\t\taction: '<?php echo Favicon_By_RealFaviconGenerator_Common::PLUGIN_PREFIX . '_install_new_favicon' ?>',\r\n\t\tjson_result_url: '<?php echo $new_favicon_params_url ?>'\r\n\t};\r\n<?php } ?>\r\n\t\r\n\tjQuery(document).ready(function() {\r\n\t\tjQuery('#favicon_form').submit(function(e) {\r\n\t\t\tjQuery('#json_params').val(JSON.stringify(computeJson()));\r\n\t\t});\r\n\r\n<?php if ( $new_favicon_params_url ) { ?>\r\n\t\tjQuery.get('<?php echo $ajax_url ?>', data)\r\n\t\t\t.done(function(response) {\r\n\t\t\t\tif (response.status == 'success') {\r\n\t\t\t\t\tjQuery('#preview_image').attr('src', response.preview_url);\r\n\t\t\t\t\tvar checkerUrl = \"http://realfavicongenerator.net/favicon_checker?site=<?php echo urlencode( home_url() ) ?>\" + \r\n\t\t\t\t\t\t(response.favicon_in_root ? '' : '&ignore_root_issues=on');\r\n\t\t\t\t\tjQuery('#checker_link').attr('href', checkerUrl);\r\n\t\t\t\t\tjQuery('#install_in_progress_message').fadeOut(function() {\r\n\t\t\t\t\t\tjQuery('#install_completed_message').fadeIn(function() {\r\n\t\t\t\t\t\t\tjQuery('#rank_notice').fadeIn(function() {\r\n\t\t\t\t\t\t\t\tjQuery('#rank_notice').effect('pulsate', {\r\n\t\t\t\t\t\t\t\t\ttimes: 3,\r\n\t\t\t\t\t\t\t\t\tduration: 2000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tjQuery('#install_completed_container').fadeIn();\r\n\t\t\t\t\t\tjQuery('#favicon_form_container').fadeIn();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar msg = \"<?php _e( \"An error occured\", FBRFG_PLUGIN_SLUG ) ?>\";\r\n\t\t\t\t\tif (response.message != null) {\r\n\t\t\t\t\t\tmsg += \": \" + response.message;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tjQuery('#install_error_message p').html(msg);\r\n\t\t\t\t\tjQuery('#install_in_progress_message').fadeOut(function() {\r\n\t\t\t\t\t\tjQuery('#install_error_message').fadeIn();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.fail(function() {\r\n\t\t\t\tvar msg = \"<?php _e( \"An internal error occurred\", FBRFG_PLUGIN_SLUG ) ?>\";\r\n\t\t\t\tjQuery('#install_error_message p').html(msg);\r\n\t\t\t\tjQuery('#install_in_progress_message').fadeOut(function() {\r\n\t\t\t\t\tjQuery('#install_error_message').fadeIn();\r\n\t\t\t\t});\r\n\t\t\t});\r\n<?php } ?>\r\n\r\n\t\tvar fileFrame;\r\n\t \r\n\t\tjQuery('#upload_image_button').live('click', function(event) {\r\n\t\t\tevent.preventDefault();\r\n\t \r\n\t\t\tif (fileFrame) {\r\n\t\t\t\tfileFrame.open();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t \r\n\t\t\t// Create the media frame.\r\n\t\t\tfileFrame = wp.media.frames.file_frame = wp.media({\r\n\t\t\t\ttitle: jQuery(this).data('uploader_title'),\r\n\t\t\t\tbutton: {\r\n\t\t\t\t\ttext: jQuery(this).data('uploader_button_text'),\r\n\t\t\t\t},\r\n\t\t\t\tmultiple: false\r\n\t\t\t});\r\n\t\t \r\n\t\t\tfileFrame.on('select', function() {\r\n\t\t\t\tattachment = fileFrame.state().get('selection').first().toJSON();\r\n\t\t\t\tjQuery('#master_picture_url').val(attachment.url);\r\n\t\t\t\tprepareInlinePicture(attachment.url);\r\n\t\t\t});\r\n\t\t \r\n\t\t\tfileFrame.open();\r\n\t\t});\r\n\r\n\r\n\t\tjQuery('#master_picture_url').change(function() {\r\n\t\t\t// Whatever the previous content of the field, forget its cached data\r\n\t\t\tpictureContent = null;\r\n\t\t\trestoreGenerateFaviconButton();\r\n\t\t});\r\n\t});\r\n</script>\r\n", "<?php\r\n/**\r\n * Favicon by RealFaviconGenerator.\r\n *\r\n * @package   favicon-by-realfavicongenerator\r\n * @author    Philippe Bernard <philippe@realfavicongenerator.net>\r\n * @license   GPLv2\r\n * @link      http://www.gnu.org/licenses/gpl-2.0.html\r\n * @copyright 2014 RealFaviconGenerator\r\n *\r\n * @wordpress-plugin\r\n * Plugin Name:       Favicon by RealFaviconGenerator\r\n * Plugin URI:        http://realfavicongenerator.net/extensions/wordpress\r\n * Description:       Create and install your favicon for all platforms: PC/Mac of course, but also iPhone/iPad, Android devices, Windows 8 tablets, etc. \r\n * Version:           1.2.12\r\n * Author:            Philippe Bernard\r\n * Author URI:        http://realfavicongenerator.net/\r\n * License:           GPLv2\r\n * License URI:       http://www.gnu.org/licenses/gpl-2.0.html\r\n */\r\n\r\n// If this file is called directly, abort.\r\nif ( ! defined( 'WPINC' ) ) {\r\n\tdie;\r\n}\r\n\r\n/*----------------------------------------------------------------------------*\r\n * Public-Facing Functionality\r\n *----------------------------------------------------------------------------*/\r\n\r\nrequire_once( plugin_dir_path( __FILE__ ) . 'public/class-favicon-by-realfavicongenerator.php' );\r\n\r\nregister_activation_hook( __FILE__, array( 'Favicon_By_RealFaviconGenerator', 'activate' ) );\r\nregister_deactivation_hook( __FILE__, array( 'Favicon_By_RealFaviconGenerator', 'deactivate' ) );\r\n\r\nadd_action( 'plugins_loaded', array( 'Favicon_By_RealFaviconGenerator', 'get_instance' ) );\r\n\r\n/*----------------------------------------------------------------------------*\r\n * Dashboard and Administrative Functionality\r\n *----------------------------------------------------------------------------*/\r\n\r\nif ( is_admin() ) {\r\n\r\n\trequire_once( plugin_dir_path( __FILE__ ) . 'admin/class-favicon-by-realfavicongenerator-admin.php' );\r\n\tadd_action( 'plugins_loaded', array( 'Favicon_By_RealFaviconGenerator_Admin', 'get_instance' ) );\r\n\r\n}\r\n"], "fixing_code": ["=== Favicon by RealFaviconGenerator ===\r\nContributors: phbernard\r\nTags: favicon, apple-touch-icon, realfavicongenerator\r\nRequires at least: 3.5\r\nTested up to: 4.1.1\r\nStable tag: 1.2.13\r\nLicense: GPLv2\r\nLicense URI: http://www.gnu.org/licenses/gpl-2.0.html\r\n\r\nCreate and install your favicon for all platforms: PC/Mac, iPhone/iPad, Android devices, Windows 8 tablets...\r\n\r\n== Description ==\r\n\r\nGenerate and setup a favicon for desktop browsers, iPhone/iPad, Android devices, Windows 8 tablets and more. In a matter of seconds, design an icon that looks great on all major platforms.\r\n\r\nFavicon is not just a single `favicon.ico` file dropped in the middle of your site. Nowadays, with so many different platforms and devices, you need a bunch of pictures to get the job done. With RealFaviconGenerator, generate all the icons you need for desktop browsers, iPhone/iPad, Android devices, Windows 8 devices, and more.\r\n\r\niOS devices use a high resolution Apple touch icon to illustrate bookmarks and home screen shortcuts. A first generation iPhone needs a 57x57 picture, whereas a brand new iPad with Retina screen looks for a 152x152 picture. Android Chrome also use these pictures if it finds them. Windows 8 takes another route with a dedicated set of icons and HTML declarations.\r\n\r\nFavicon is not only a matter of pictures with different resolutions. The various platforms coms with different UI guidelines. For example, the classic desktop favicons often use transparency. But iOS requires opaque icons. And Windows 8 has its own recommendations.\r\n\r\nSave hours of research and image edition with RealFaviconGenerator and its companion plugin. In a matter of seconds, you setup a favicon compatible with:\r\n\r\n-  Windows (IE, Chrome, Firefox, Opera, Safari)\r\n-  Mac (Safari, Chrome, Firefox, Opera, Camino)\r\n-  iOS (Safari, Chrome, Coast)\r\n-  Android (Chrome, Firefox)\r\n-  Surface (IE)\r\n-  And more\r\n\r\nWe take compatibility very seriously. See http://realfavicongenerator.net/favicon_compatibility for the full list.\r\n\r\n** Localization **\r\n\r\n* English (`en_EN`) by [Philippe Bernard](http://realfavicongenerator.net/)\r\n* French (`fr_FR`) by [Philippe Bernard](http://realfavicongenerator.net/)\r\n* Swedish (`sv_SE`) by [Linus Wileryd](https://twitter.com/wileryd)\r\n* Brazilian Portuguese (`pt_BR`) by Marcelo Volgarini, [Cria\u00e7\u00e3o de Sites](http://www.techload.com.br/criacao-de-sites-ribeirao-preto)\r\n* Dutch (`nl_NL`) by [Axel Vanderhaeghen](https://eco13.eu)\r\n\r\n== Installation ==\r\n\r\n= Using The WordPress Dashboard =\r\n\r\n1. Navigate to the 'Add New' in the plugins dashboard\r\n2. Search for 'Favicon by RealFaviconGenerator'\r\n3. Click 'Install Now'\r\n4. Activate the plugin on the Plugin dashboard\r\n5. Navigate to the 'Favicon' entry in the Appearance menu\r\n6. Select a master picture from the Media Library (optional)\r\n7. Click the 'Generate Favicon' button and follow the instructions.\r\n\r\n= Using FTP =\r\n\r\n1. Download `favicon-by-realfavicongenerator.zip`\r\n2. Extract the `favicon-by-realfavicongenerator` directory to your computer\r\n3. Upload the `favicon-by-realfavicongenerator` directory to the `/wp-content/plugins/` directory\r\n4. Activate the plugin on the Plugin dashboard\r\n5. Navigate to the 'Favicon' entry in the Appearance menu\r\n6. Select a master picture from the Media Library (optional)\r\n7. Click the 'Generate Favicon' button and follow the instructions.\r\n\r\n== Screenshots ==\r\n\r\n1. Initial favicon setup screen. You are invited to setup your favicon.\r\n2. Select a master picture from the Media Library (optional)\r\n3. Once you hit the Generate Favicon button, you are redirected to <a href=\"http://realfavicongenerator.net/\">RealFaviconGenerator</a>, \r\nwhere you can design your favicon: adding a background to your iOS picture, using a saturated version of your master picture for Windows 8...\r\n4. When you are done with the favicon editor, you are redirected to the WordPress Dashboard. The favicon is installed automatically.\r\nThis screen presents you a preview of the favicon you various platforms, so you know how your blog looks like on various platforms.\r\n5. You can also trigger RealFaviconGenerator's favicon checker, to make sure your favicon is correctly setup.\r\n\r\n== Changelog ==\r\n\r\n= 1.2.13 =\r\n\r\n- XSS vulnerability fixed, reported by [Kacper Szurek](http://security.szurek.pl/)\r\n\r\n= 1.2.12 =\r\n\r\n- Performance improvements: favicon update checking is now done in the Admin section (not the Public section), locales are not loaded in the Public section anymore.\r\n- Take advantage of the Rewrite API (when available) to make the files appear to be in the root directory. So http://example.com/favicon.ico works (eg. when requested by Yandex).\r\n- nl/NL translation added, thanks to Axel Vanderhaeghen.\r\n\r\n= 1.2.11 =\r\n\r\n- When the admin's browser cannot get the picture selected from the Media Library, the UI fails gracefully.\r\n- Favicon package unzipping is more robust.\r\n- Notice to ask users to rank the plugin on WordPress.org.\r\n\r\n= 1.2.10 =\r\n\r\n- Warning fix when used with BuddyPress (bp_setup_current_user). See https://wordpress.org/support/topic/wp_debug-notice-for-bp_setup_current_user.\r\n\r\n= 1.2.9 =\r\n\r\n- When selected from the Media Library, the master picture is now retrieved by WP administrator's browser to prevent several issues (locally hosted blogs, blogs protected in a way or another, etc.).\r\n\r\n= 1.2.8 =\r\n\r\n- Plugin successfully tested against WordPress 4.1.\r\n\r\n= 1.2.7 =\r\n\r\n- Fix for WordPress sites hosted on Windows.\r\n\r\n= 1.2.6 =\r\n\r\n- The plugin is now compatible with multisite.\r\n\r\n= 1.2.5 =\r\n\r\n- Fix for login page: favicon code was not injected in this particular page.\r\n\r\n= 1.2.4 =\r\n\r\n- Remove debug messages to avoid false positives in error log.\r\n\r\n= 1.2.3 =\r\n\r\n- Update notifications can be dismissed once for all.\r\n- New Settings page to enable/disable update notifications.\r\n\r\n= 1.2.2 =\r\n\r\n- Fix for the 403 issue with HostGator hosting service (http://wordpress.org/support/topic/403-error-when-generating-favicon).\r\n\r\n= 1.2.1 =\r\n\r\n- Fix in plugin removal and update checking.\r\n\r\n= 1.2.0 =\r\n\r\n- The plugin now warns the user when RealFaviconGenerator was updated and the favicon should be generated again.\r\n\r\n= 1.1.1 =\r\n\r\n- Rewrite API usage disabled. Favicon files do not appear to be in the root directory of the blog anymore.\r\n\r\n= 1.1.0 =\r\n\r\n- Run RealFaviconGenerator's favicon checker from the admin interface.\r\n\r\n= 1.0.7 =\r\n\r\n- Deactivate default Genesis favicon when one is configured in FbRFG.\r\n\r\n= 1.0.6 =\r\n\r\n- Error management improved during favicon install.\r\n\r\n= 1.0.5 =\r\n\r\n- Do not try to rewrite the favicon files URL when .htaccess is not writable.\r\n\r\n= 1.0.4 =\r\n\r\n- Option to not rewrite the favicon files URL, even when this is possible.\r\n\r\n= 1.0.3 =\r\n\r\n- Plugin code syntax changed to fit older versions of PHP.\r\n\r\n= 1.0.2 =\r\n\r\n- Callback URL was too long for some servers. It has been shorten.\r\n\r\n= 1.0.1 =\r\n\r\n- Favicon admin settings are now in the Appearance menu.\r\n- Fix in favicon package download.\r\n- Fix in error management during favicon installation. \r\n\r\n= 1.0 =\r\n\r\nInitial version.\r\n", "<?php\r\n// Copyright 2014 RealFaviconGenerator\r\n\r\nrequire_once plugin_dir_path( __FILE__ ) . '../public/class-favicon-by-realfavicongenerator-common.php';\r\nrequire_once plugin_dir_path( __FILE__ ) . 'class-favicon-by-realfavicongenerator-api-response.php';\r\n\r\nclass Favicon_By_RealFaviconGenerator_Admin extends Favicon_By_RealFaviconGenerator_Common {\r\n\r\n\tconst DISMISS_UPDATE_NOTIICATION = 'fbrfg_dismiss_update_notification';\r\n\tconst DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS = 'fbrfg_dismiss_all_update_notifications';\r\n\tconst SETTINGS_FORM = 'fbrfg_settings_form';\r\n\tconst NONCE_ACTION_NAME = 'favicon_generation';\r\n\r\n\tprotected static $instance = null;\r\n\r\n\tprivate function __construct() {\r\n\t\tadd_action( 'init', array( $this, 'load_plugin_textdomain' ) );\r\n\r\n\t\tadd_action( 'admin_head', array( $this, 'add_favicon_markups' ) );\r\n\r\n\t\t// Deactivate Genesis default favicon\r\n\t\tadd_filter( 'genesis_pre_load_favicon', array( $this, 'return_empty_favicon_for_genesis' ) );\r\n\r\n\t\t// See\r\n\t\t// - https://wordpress.org/support/topic/wp_debug-notice-for-bp_setup_current_user\r\n\t\t// - https://buddypress.org/support/topic/wp_debug-notice-for-bp_setup_current_user\r\n\t\t// The idea: is_super_admin must not be called too soon.\r\n\t\tadd_action( 'init', array( $this, 'register_admin_actions' ) );\r\n\r\n\t\t// Check for updates\r\n\t\tadd_action( Favicon_By_RealFaviconGenerator_Common::ACTION_CHECK_FOR_UPDATE, array( $this, 'check_for_updates' )  );\r\n\t}\r\n\r\n\t/**\r\n\t * Return an instance of this class.\r\n\t *\r\n\t * @since     1.0\r\n\t *\r\n\t * @return    object    A single instance of this class.\r\n\t */\r\n\tpublic static function get_instance() {\r\n\r\n\t\t// If the single instance hasn't been set, set it now.\r\n\t\tif ( null == self::$instance ) {\r\n\t\t\tself::$instance = new self;\r\n\t\t}\r\n\r\n\t\treturn self::$instance;\r\n\t}\r\n\r\n\tpublic function register_admin_actions() {\r\n\t\t// Except for the headers, everything is accessible only to the admin\r\n\t\tif ( ! is_super_admin() ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tadd_action( 'admin_menu',\r\n\t\t\tarray( $this, 'create_favicon_settings_menu' ) );\r\n\r\n\t\tadd_action('wp_ajax_' . Favicon_By_RealFaviconGenerator_Common::PLUGIN_PREFIX . '_install_new_favicon',\r\n\t\t\tarray( $this, 'install_new_favicon' ) );\r\n\t\tadd_action('wp_ajax_nopriv_' . Favicon_By_RealFaviconGenerator_Common::PLUGIN_PREFIX . '_install_new_favicon',\r\n\t\t\tarray( $this, 'install_new_favicon' ) );\r\n\r\n\t\t// Update notice\r\n\t\tadd_action('admin_notices', array( $this, 'display_update_notice' ) );\r\n\t\tadd_action('admin_init',    array( $this, 'process_ignored_notice' ) );\r\n\r\n\t\t// Schedule update check\r\n\t\tif ( ! wp_next_scheduled( Favicon_By_RealFaviconGenerator_Common::ACTION_CHECK_FOR_UPDATE ) ) {\r\n\t\t\twp_schedule_event( time(), 'daily', Favicon_By_RealFaviconGenerator_Common::ACTION_CHECK_FOR_UPDATE );\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function create_favicon_settings_menu() {\r\n\t\tadd_theme_page( __( 'Favicon', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), \r\n\t\t\t__( 'Favicon', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), 'manage_options', __FILE__ . 'favicon_appearance_menu', \r\n\t\t\tarray( $this, 'create_favicon_appearance_page' ) );\r\n\r\n\t\tadd_options_page( __( 'Favicon Settings', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), \r\n\t\t\t__( 'Favicon', Favicon_By_RealFaviconGenerator_Common::PLUGIN_SLUG ), 'manage_options', __FILE__ . 'favicon_settings_menu', \r\n\t\t\tarray( $this, 'create_favicon_settings_page' ) );\r\n\t}\r\n\r\n\tpublic function create_favicon_settings_page() {\r\n\t\tglobal $current_user;\r\n\r\n\t\t$user_id = $current_user->ID;\r\n\r\n\t\t// Prepare variables\r\n\t\t$favicon_appearance_url = admin_url( 'themes.php?page=' . __FILE__ . 'favicon_appearance_menu' );\r\n\t\t$favicon_admin_url = admin_url( 'options-general.php?page=' . __FILE__ . 'favicon_settings_menu' );\r\n\t\t$display_update_notifications = ! $this->get_boolean_user_option(\r\n\t\t\tFavicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE );\r\n\r\n\t\t// Template time!\r\n\t\tinclude_once( plugin_dir_path(__FILE__) . 'views/settings.php' );\t\t\r\n\t}\r\n\r\n\tpublic function create_favicon_appearance_page() {\r\n\t\t$result = NULL;\r\n\r\n\t\t// Prepare settings page\r\n\r\n\t\t// Option to allow user to not use the Rewrite API: display it only when the Rewrite API is available\r\n\t\t// Due to too many problems with the rewrite API (for example, http://wordpress.org/support/topic/do-not-work-8),\r\n\t\t// it was deciced to turn the feature off once for all\r\n\t\t$can_rewrite = false;\r\n\r\n\t\t$pic_path = $this->get_full_picture_path();\r\n\r\n\t\t$favicon_configured = $this->is_favicon_configured();\r\n\t\t$favicon_in_root = $this->is_favicon_in_root();\r\n\r\n\t\t$preview_url = $this->is_preview_available() ? $this->get_preview_url() : NULL;\r\n\r\n\t\tif ( isset( $_REQUEST['json_result_url'] ) ) {\r\n\t\t\t// New favicon to install:\r\n\t\t\t// Parameters will be processed with an Ajax call\r\n\r\n\t\t\t$new_favicon_params_url = 'http://realfavicongenerator.net' . $_REQUEST['json_result_url'];\r\n\t\t\t$ajax_url = admin_url( 'admin-ajax.php', isset( $_SERVER['HTTPS'] ) ? 'https://' : 'http://' );\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No new favicon, simply display the settings page\r\n\t\t\t$new_favicon_params_url = NULL;\r\n\t\t}\r\n\r\n\t\t// Nonce\r\n\t\t$nonce = wp_create_nonce( NONCE_ACTION_NAME );\r\n\r\n\t\t// External files\r\n\t\twp_enqueue_script( 'jquery' );\r\n\t\twp_enqueue_script( 'jquery-ui' );\r\n\t\twp_enqueue_script( 'jquery-effects-pulsate' );\r\n\t\twp_enqueue_media();\r\n\t\twp_enqueue_style( 'fbrfg_admin_style', plugins_url( 'assets/css/admin.css', __FILE__ ) );\r\n\r\n\t\t// Template time!\r\n\t\tinclude_once( plugin_dir_path(__FILE__) . 'views/appearance.php' );\r\n\t}\r\n\r\n\tprivate function download_result_json( $url ) {\r\n\t\t$resp = wp_remote_get( $url );\r\n\t\tif ( is_wp_error( $resp )) {\r\n\t\t\tthrow new InvalidArgumentException( \"Cannot download JSON file at \" . $url . \": \" . $resp->get_error_message() );\r\n\t\t}\r\n\r\n\t\t$json = wp_remote_retrieve_body( $resp );\r\n\t\tif ( empty( $json ) ) {\r\n\t\t\tthrow new InvalidArgumentException( \"Empty JSON document at \" . $url );\r\n\t\t}\r\n\r\n\t\treturn $json;\r\n\t}\r\n\r\n\tpublic function install_new_favicon() {\r\n\t\theader(\"Content-type: application/json\");\r\n\r\n\t\ttry {\r\n\t\t\t// URL is explicitely decoded to compensate the extra encoding performed while generating the settings page\r\n\t\t\t$url = $_REQUEST['json_result_url'];\r\n\r\n\t\t\t$result = $this->download_result_json( $url );\r\n\r\n\t\t\t$response = new Favicon_By_RealFaviconGenerator_Api_Response( $result );\r\n\r\n\t\t\tif ( ! wp_verify_nonce( $response->getCustomParameter(), NONCE_ACTION_NAME ) ) {\r\n\t\t\t\t// Attack in progress?\r\n?>\r\n{\r\n\t\"status\": \"error\",\r\n\t\"message\": \"<?php _e( 'Nonce was not recognized. This case is supposed to happen only in case of XSS attack. If you feel like something is wrong, please <a href=\\\"mailto:contact@realfavicongenerator.net\\\">contact us</a>.', FBRFG_PLUGIN_SLUG ) ?>\"\r\n}\r\n<?php\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$zip_path = Favicon_By_RealFaviconGenerator_Common::get_tmp_dir();\r\n\t\t\t\tif ( ! file_exists( $zip_path ) ) {\r\n\t\t\t\t\tmkdir( $zip_path, 0755, true );\r\n\t\t\t\t}\r\n\t\t\t\t$response->downloadAndUnpack( $zip_path );\r\n\r\n\t\t\t\t$this->store_pictures( $response );\r\n\r\n\t\t\t\t$this->store_preview( $response->getPreviewPath() );\r\n\r\n\t\t\t\tFavicon_By_RealFaviconGenerator_Common::remove_directory( $zip_path );\r\n\r\n\t\t\t\tupdate_option( Favicon_By_RealFaviconGenerator_Common::OPTION_HTML_CODE, $response->getHtmlCode() );\r\n\t\t\t\t\r\n\t\t\t\t$this->set_favicon_configured( true, $response->isFilesInRoot(), $response->getVersion() );\r\n?>\r\n{\r\n\t\"status\": \"success\",\r\n\t\"preview_url\": <?php echo json_encode( $this->get_preview_url() ) ?>,\r\n\t\"favicon_in_root\": <?php echo json_encode( $this->is_favicon_in_root() ) ?>\r\n}\r\n<?php\r\n\t\t\t}\r\n\t\t}\r\n\t\tcatch(Exception $e) {\r\n?>\r\n{\r\n\t\"status\": \"error\",\r\n\t\"message\": <?php echo json_encode( $e->getMessage() ) ?>\r\n}\r\n<?php\r\n\t\t}\r\n\r\n\t\tdie();\r\n\t}\r\n\r\n\tpublic function get_picture_dir() {\r\n\t\treturn Favicon_By_RealFaviconGenerator_Common::get_files_dir();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns http//somesite.com/blog/wp-content/upload/fbrfg/\r\n\t */\r\n\tpublic function get_picture_url() {\r\n\t\treturn Favicon_By_RealFaviconGenerator_Common::get_files_url();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns /blog/wp-content/upload/fbrfg/\r\n\t */\r\n\tpublic function get_full_picture_path() {\r\n\t\treturn parse_url( $this->get_picture_url(), PHP_URL_PATH );\r\n\t}\r\n\r\n\t/**\r\n\t * Returns wp-content/upload/fbrfg/\r\n\t */\r\n\tpublic function get_picture_path() {\r\n\t\treturn substr( $this->get_picture_url(), strlen( home_url() ) );\r\n\t}\r\n\r\n\tpublic function get_preview_path( $preview_file_name = NULL ) {\r\n\t\tif ( ! $preview_file_name ) {\r\n\t\t\t$preview_file_name = $this->get_preview_file_name();\r\n\t\t}\r\n\t\treturn $this->get_picture_dir() . 'preview/' . $preview_file_name;\r\n\t}\r\n\r\n\tpublic function get_preview_url( $preview_file_name = NULL ) {\r\n\t\tif ( ! $preview_file_name ) {\r\n\t\t\t$preview_file_name = $this->get_preview_file_name();\r\n\t\t}\r\n\t\treturn $this->get_picture_url() . '/preview/' . $preview_file_name;\r\n\t}\r\n\r\n\tpublic function store_preview( $preview_path ) {\r\n\t\t// Remove previous preview, if any\r\n\t\t$previous_preview = $this->get_preview_file_name();\r\n\t\tif ( $previous_preview != NULL && ( file_exists( $this->get_preview_path( $previous_preview ) ) ) ) {\r\n\t\t\tunlink( $this->get_preview_path( $previous_preview ) );\r\n\t\t}\r\n\r\n\t\tif ( $preview_path == NULL ) {\r\n\t\t\t// \"Unregister\" previous preview, if any\r\n\t\t\t$this->set_preview_file_name( NULL );\r\n\t\t\treturn NULL;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$preview_file_name = 'preview_' . md5( 'RFB stuff here ' . rand() . microtime() ) . '.png';\r\n\t\t}\r\n\r\n\t\tif ( ! file_exists( dirname( $this->get_preview_path( $preview_file_name ) ) ) ) {\r\n\t\t\tmkdir( dirname( $this->get_preview_path( $preview_file_name ) ), 0755 );\r\n\t\t}\r\n\r\n\t\trename( $preview_path, $this->get_preview_path( $preview_file_name ) );\r\n\r\n\t\t$this->set_preview_file_name( $preview_file_name );\r\n\t}\r\n\r\n\tpublic function store_pictures( $rfg_response ) {\r\n\t\t$working_dir = $this->get_picture_dir();\r\n\r\n\t\t// Move pictures to production directory\r\n\t\t$files = glob( $working_dir . '*' );\r\n\t\tforeach( $files as $file ) {\r\n\t\t\tif ( is_file( $file ) ) {\r\n\t\t\t    unlink( $file );\r\n\t\t\t}\r\n\t\t}\r\n\t\t$files = glob( $rfg_response->getProductionPackagePath() . '/*' );\r\n\t\tforeach( $files as $file ) {\r\n\t\t\tif ( is_file( $file ) ) {\r\n\t\t\t    rename( $file, $working_dir . basename( $file ) );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Even if the package was not supposed to be put in root, make the files (also) appear at the root of the site\r\n\t\t// So /favicon.ico works, for example.\r\n\t\t// See https://wordpress.org/support/topic/choose-between-rewrite-api-and-dedicated-directory\r\n\t\tif ( $this->can_access_pics_with_url_rewrite() ) {\r\n\t\t\t$this->rewrite_pictures_url( $working_dir );\r\n\t\t\tflush_rewrite_rules();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function rewrite_pictures_url( $pic_dir ) {\r\n\t\tforeach ( scandir($pic_dir) as $file ) {\r\n\t\t\tif ( ! is_dir( $pic_dir . '/' . $file ) ) {\r\n\t\t\t\tadd_rewrite_rule( str_replace( '.', '\\.', $file ), \r\n\t\t\t\t\ttrim( $this->get_picture_path(), '/') . '/' . $file );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicate if it is possible to create URLs such as /favicon.ico\r\n\t */\r\n\tpublic function can_access_pics_with_url_rewrite() {\r\n\t\tglobal $wp_rewrite;\r\n\r\n\t\t// If blog is in root AND rewriting is available (http://wordpress.stackexchange.com/questions/142273/checking-that-the-rewrite-api-is-available),\r\n\t\t// we can produce URLs such as /favicon.ico\r\n\t\t$rewrite = ( $this->wp_in_root() && $wp_rewrite->using_permalinks() );\r\n\t\tif ( ! $rewrite ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// See http://wordpress.org/support/topic/fbrfg-not-updating-htaccess-rewrite-rules\r\n\t\t$htaccess = get_home_path() . '/.htaccess';\r\n\t\t// Two cases:\r\n\t\t//   - There is no .htaccess. Either we are not using Apache (so the Rewrite API is supposed to handle\r\n\t\t//     the rewriting differently) or there is a problem with Apache/WordPress config, but this is not our job.\r\n\t\t//   - .htaccess is present. If so, it should be writable.\r\n\t\treturn ( ( ! file_exists( $htaccess ) ) || is_writable( $htaccess ) );\r\n\t}\r\n\r\n\t/**\r\n\t * Indicate if WP is installed in the root of the web site (eg. http://mysite.com) or not (eg. http://mysite.com/blog).\r\n\t */\r\n\tpublic function wp_in_root() {\r\n\t\t$path = parse_url( home_url(), PHP_URL_PATH );\r\n\t\treturn ( ($path == NULL) || (strlen( $path ) == 0) );\r\n\t}\r\n\r\n\tpublic function set_boolean_user_option( $option_name, $option_value ) {\r\n\t\tglobal $current_user;\r\n\t\t$user_id = $current_user->ID;\r\n\r\n\t\tupdate_user_option( $user_id, $option_name, $option_value );\r\n\t}\r\n\r\n\tpublic function get_boolean_user_option( $option_name ) {\r\n\t\tglobal $current_user;\r\n\t\t$user_id = $current_user->ID;\r\n\r\n\t\treturn get_user_option( $option_name );\r\n\t}\r\n\r\n\tpublic function is_update_notice_to_be_displayed() {\r\n\t\t// No update? No notice\r\n\t\tif ( ! $this->is_update_available() ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Did the user prevent all notices?\r\n\t\tif ( $this->get_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE_FOR_VERSION . $this->get_latest_version_available() ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Did the user prevent the notice for this particular version?\r\n\t\tif ( $this->get_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE ) ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic function display_update_notice() {\r\n\t\tif ( $this->is_update_notice_to_be_displayed() ) {\r\n\t\t\techo '<div class=\"update-nag\">';\r\n\t\t\tprintf( __( '<a href=\"%s\" target=\"_blank\">An update is available</a> on RealFaviconGenerator. You might want to <a href=\"%s\">generate your favicon again</a>.', FBRFG_PLUGIN_SLUG ),\r\n\t\t\t\t\t'http://realfavicongenerator.net/change_log?since='. $this->get_favicon_version(),\r\n\t\t\t\t\tadmin_url( 'themes.php?page=' . __FILE__ . 'favicon_appearance_menu') );\r\n\t\t\tprintf( __( ' | <a href=\"%s\">Hide this notice</a>', FBRFG_PLUGIN_SLUG), \r\n\t\t\t\t$this->add_parameter_to_current_url( Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_NOTIICATION . '=0' ) );\r\n\t\t\tprintf( __( ' | <a href=\"%s\">Do not warn me again in case of update</a>', FBRFG_PLUGIN_SLUG), \r\n\t\t\t\t$this->add_parameter_to_current_url( Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS . '=0' ) );\r\n\t\t\techo '</div>';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function process_ignored_notice() {\r\n\t    global $current_user;\r\n        $user_id = $current_user->ID;\r\n\r\n        if ( isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_NOTIICATION] ) && \r\n        \t\t'0' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_NOTIICATION] ) {\r\n             $this->set_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE_FOR_VERSION . $this->get_latest_version_available(), true );\r\n\t    }\r\n\r\n\t    $no_notices = NULL;\r\n        if ( ( isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) && \r\n        \t\t'0' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) ) {\r\n        \t// The \"no more notifications\" link was clicked in the notification itself\r\n\t\t    $no_notices = true;\r\n        }\r\n        if ( isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::SETTINGS_FORM] ) && \r\n        \t\t'1' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::SETTINGS_FORM] ) {\r\n        \t// The settings form was validated\r\n        \t$no_notices = ( ! isset( $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) || \r\n        \t\t( '0' == $_REQUEST[Favicon_By_RealFaviconGenerator_Admin::DISMISS_UPDATE_ALL_UPDATE_NOTIICATIONS] ) );\r\n\t    }\r\n\t\tif ( $no_notices !== NULL ) {\r\n\t\t\t$this->set_boolean_user_option( Favicon_By_RealFaviconGenerator_Common::META_NO_UPDATE_NOTICE, $no_notices );\r\n\t\t}\r\n\t}\r\n}\r\n?>", "<?php\r\n// Copyright 2014 RealFaviconGenerator\r\n?>\r\n\r\n<div class=\"wrap\">\r\n\r\n\t<h2><?php echo esc_html( get_admin_page_title() ); ?></h2>\r\n\r\n<?php if ( $new_favicon_params_url ) { ?>\r\n\t<div id=\"install_in_progress_message\" class=\"updated\">\r\n\t\t<p><?php _e( 'Favicon installation in progress. Please wait...', FBRFG_PLUGIN_SLUG ) ?></p>\r\n\t</div>\r\n\r\n\t<div id=\"install_completed_message\" class=\"updated\" style=\"display:none\">\r\n\t\t<p>\r\n\t\t\t<?php _e( 'Favicon installed!', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t<span id=\"rank_notice\" style=\"display:none\">\r\n\t\t\t\t<?php printf( __( 'Do you like the result? If so, would you like to <a %s>rate the plugin</a>?', FBRFG_PLUGIN_SLUG ), \r\n\t\t\t\t\t'target=\"_blank\" href=\"https://wordpress.org/support/view/plugin-reviews/favicon-by-realfavicongenerator\"' ) ?>\r\n\t\t\t</span>\r\n\t\t</p>\r\n\t</div>\r\n\t<div id=\"install_error_message\" class=\"error\" style=\"display:none\"><p></p></div>\r\n\r\n\t<div id=\"install_completed_container\" style=\"display:none\">\r\n\t\t<h3><?php _e( 'Current favicon', FBRFG_PLUGIN_SLUG ) ?></h3>\r\n\t\t<p><?php _e( 'The favicon is up and ready.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n\t\t<img id=\"preview_image\">\r\n\r\n\t\t<p>\r\n\t\t\t<?php printf( __( '<a %s>Check your favicon</a> with RealFaviconGenerator\\'s favicon checker.', FBRFG_PLUGIN_SLUG ), \r\n\t\t\t\t'id=\"checker_link\" class=\"button-primary\" href=\"#\"' ) ?>\r\n\t\t\t<?php _e( 'This option works only if your site is accessible from the outside.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t</p>\r\n\t</div>\r\n<?php } else { ?>\r\n\t<h3><?php _e( 'Current favicon', FBRFG_PLUGIN_SLUG ) ?></h3>\r\n\r\n<?php \tif ( $favicon_configured) { ?>\r\n\t<p><?php _e( 'The favicon is up and ready.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n<?php \t} else { ?>\r\n\t<p><?php _e( 'No favicon has been configured yet.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n<?php \t} ?>\r\n\t\r\n<?php \tif ( $favicon_configured ) {\r\n\t\t\tif ( $preview_url ) { ?>\r\n\r\n\t<img src=\"<?php echo $preview_url ?>\">\r\n\r\n<?php \t\t} ?>\r\n\t<p>\r\n\t\t<?php printf( __( '<a %s>Check your favicon</a> with RealFaviconGenerator\\'s favicon checker.', FBRFG_PLUGIN_SLUG ),\r\n\t\t\t'class=\"button-primary\" ' .\r\n\t\t\t'href=\"http://realfavicongenerator.net/favicon_checker?site=' . urlencode( home_url() ) . ($favicon_in_root ? '' : '&ignore_root_issues=on') . '\"' ) ?>\r\n\t\t<?php _e( 'This option works only if your site is accessible from the outside.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t</p>\r\n<?php\r\n\t\t}\r\n\t  } ?>\r\n\r\n\t<div id=\"favicon_form_container\" <?php echo $new_favicon_params_url ? 'style=\"display:none\"' : '' ?>>\r\n\t\t<h3><?php _e( 'Favicon generation', FBRFG_PLUGIN_SLUG ) ?></h3>\r\n<?php if ( $favicon_configured || $new_favicon_params_url ) { ?>\r\n\t<p><?php _e( 'You can replace the existing favicon.', FBRFG_PLUGIN_SLUG ) ?></p>\r\n<?php } ?>\r\n\t\t<form role=\"form\" method=\"post\" action=\"http://realfavicongenerator.net/api/favicon_generator\" id=\"favicon_form\">\r\n\t\t\t<input type=\"hidden\" name=\"json_params\" id=\"json_params\"/>\r\n\t\t\t<table class=\"form-table\"><tbody>\r\n\t\t\t\t<tr valign=\"top\">\r\n\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t<label for=\"master_picture_url\"><?php _e( 'Master picture URL', FBRFG_PLUGIN_SLUG ) ?></label>\r\n\t\t\t\t\t</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input id=\"master_picture_url\" name=\"master_picture_url\" size=\"55\">\r\n\t\t\t\t\t\t<button id=\"upload_image_button\" value=\"<?php _e( 'Select from the Media Library', FBRFG_PLUGIN_SLUG ) ?>\">\r\n\t\t\t\t\t\t\t<?php _e( 'Select from the Media Library', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<p class=\"description\">\r\n\t\t\t\t\t\t\t<?php _e( 'Submit a square picture, at least 70x70 (recommended: 260x260 or more)', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t<?php _e( 'If the picture is on your hard drive, you can leave this field blank and upload the picture from RealFaviconGenerator.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\r\n<?php if ( $can_rewrite ) { ?>\r\n\t\t\t\t<tr valign=\"top\">\r\n\t\t\t\t\t<th scope=\"row\">\r\n\t\t\t\t\t\t<label for=\"rewrite\"><?php _e( 'Favicon files in root directory', FBRFG_PLUGIN_SLUG ) ?></label>\r\n\t\t\t\t\t</th>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input type=\"checkbox\" name=\"rewrite\" id=\"rewrite\" checked=\"true\">\r\n\t\t\t\t\t\t<p class=\"description\">\r\n\t\t\t\t\t\t\t<?php _e( 'The plugin always stores the favicon files in a dedicated directory.', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t\t<br>\r\n\t\t\t\t\t\t\t<?php _e( 'However, if this option is enabled, the plugin takes advantage of the permalink feature and the favicon files appear to be in the root directory', FBRFG_PLUGIN_SLUG ) ?>\r\n\t\t\t\t\t\t\t(<a href=\"http://realfavicongenerator.net/faq#why_icons_in_root\"><?php _e( 'recommended', FBRFG_PLUGIN_SLUG ) ?></a>)\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n<?php } ?>\r\n\t\t\t</tbody></table>\r\n\r\n\t\t\t<p class=\"submit\">\r\n\t\t\t\t<input type=\"submit\" name=\"Generate favicon\" id=\"generate_favicon_button\" class=\"button-primary\"\r\n\t\t\t\t\tvalue=\"<?php _e( 'Generate favicon', FBRFG_PLUGIN_SLUG ) ?>\">\r\n\t\t\t</p>\r\n\t\t</form>\r\n\t</div>\r\n</div>\r\n\r\n<script type=\"text/javascript\">\r\n\tvar picData = null;\r\n\t\r\n\tfunction urlToBase64(url, callback) {\r\n\t\tvar img = new Image();\r\n\t\timg.onload = function() {\r\n\t\t\tcallback(getBase64Image(img));\r\n\t\t}\r\n\t\timg.onerror = function() {\r\n\t\t\tcallback(null);\r\n\t\t}\r\n\t\timg.src = url;\r\n\t}\r\n\r\n\t// See http://stackoverflow.com/questions/934012/get-image-data-in-javascript\r\n\t// Credits: Matthew Crumley\r\n\tfunction getBase64Image(img) {\r\n\t\ttry {\r\n\t\t\tvar canvas = document.createElement(\"canvas\");\r\n\t\t\tcanvas.width = img.width;\r\n\t\t\tcanvas.height = img.height;\r\n\r\n\t\t\tvar ctx = canvas.getContext(\"2d\");\r\n\t\t\tctx.drawImage(img, 0, 0);\r\n\r\n\t\t\tvar dataURL = canvas.toDataURL(\"image/png\");\r\n\r\n\t\t\treturn dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n\t\t}\r\n\t\tcatch(err) {\r\n\t\t\tconsole.log(\"Cannot get the picture from the Media Library: \" + err);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction computeJson() {\r\n\t\tvar params = { favicon_generation: { \r\n\t\t\tcallback: {},\r\n\t\t\tmaster_picture: {},\r\n\t\t\tfiles_location: {},\r\n\t\t\tapi_key: \"87d5cd739b05c00416c4a19cd14a8bb5632ea563\"\r\n\t\t}};\r\n\t\t\r\n\t\tif (jQuery('#master_picture_url').val().length <= 0) {\r\n\t\t\tparams.favicon_generation.master_picture.type = \"no_picture\";\r\n\t\t\tparams.favicon_generation.master_picture.demo = true;\r\n\t\t}\r\n\t\telse if (pictureContent != null) {\r\n\t\t\tparams.favicon_generation.master_picture.type = \"inline\";\r\n\t\t\tparams.favicon_generation.master_picture.content = pictureContent;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tparams.favicon_generation.master_picture.type = \"url\";\r\n\t\t\tparams.favicon_generation.master_picture.url = jQuery('#master_picture_url').val();\r\n\t\t}\r\n\r\n<?php if ( $can_rewrite ) { ?>\r\n\t\tif ( jQuery(\"#rewrite\").is(':checked') ) {\r\n\t\t\tparams.favicon_generation.files_location.type = 'root';\r\n\t\t}\r\n\t\telse {\r\n\t\t\tparams.favicon_generation.files_location.type = 'path';\r\n\t\t\tparams.favicon_generation.files_location.path = '<?php echo $pic_path ?>';\r\n\t\t}\r\n<?php } else { ?>\r\n\t\tparams.favicon_generation.files_location.type = 'path';\r\n\t\tparams.favicon_generation.files_location.path = '<?php echo $pic_path ?>';\r\n<?php } ?>\r\n\r\n\t\tparams.favicon_generation.callback.type = 'url';\r\n\t\tparams.favicon_generation.callback.url = \"<?php echo admin_url('themes.php?page=' . ( ( isset( $_REQUEST['page'] ) ) \r\n\t\t\t? $_REQUEST['page']\r\n\t\t\t: 'favicon-by-realfavicongenerator/admin/class-favicon-by-realfavicongenerator-admin.phpfavicon_appearance_menu' ) ) ?>\";\r\n\t\tparams.favicon_generation.callback.short_url = 'true';\r\n\t\tparams.favicon_generation.callback.path_only = 'true';\r\n\t\tparams.favicon_generation.callback.custom_parameter = \"<?php echo $nonce ?>\";\r\n\r\n\t\treturn params;\r\n\t}\r\n\r\n\tvar pictureContent = null;\r\n\tvar pictureContentTimestamp = null;\r\n\r\n\tfunction prepareInlinePicture(pictureUrl) {\r\n\t\tvar timestamp = new Date().getTime();\r\n\t\tpictureContentTimestamp\t= timestamp;\r\n\r\n\t\tjQuery('#generate_favicon_button').attr('disabled', 'disabled');\r\n\t\tjQuery('#generate_favicon_button').val(\"<?php _e( 'Preparing master picture...', FBRFG_PLUGIN_SLUG ) ?>\");\r\n\r\n\t\tpictureContent = null;\r\n\r\n\t\turlToBase64(pictureUrl, function(content) {\r\n\t\t\tif (content != null) {\r\n\t\t\t\tpictureContent = content;\r\n\t\t\t}\r\n\t\t\trestoreGenerateFaviconButton();\r\n\t\t});\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\tif (pictureContentTimestamp == timestamp) {\r\n\t\t\t\trestoreGenerateFaviconButton();\r\n\t\t\t}\r\n\t\t}, 3000);\r\n\t}\r\n\r\n\tfunction restoreGenerateFaviconButton() {\r\n\t\tjQuery('#generate_favicon_button').removeAttr('disabled');\r\n\t\tjQuery('#generate_favicon_button').val(\"<?php _e( 'Generate favicon', FBRFG_PLUGIN_SLUG ) ?>\");\r\n\t}\r\n\r\n<?php if ( $new_favicon_params_url ) { ?>\r\n\tvar data = {\r\n\t\taction: '<?php echo Favicon_By_RealFaviconGenerator_Common::PLUGIN_PREFIX . '_install_new_favicon' ?>',\r\n\t\tjson_result_url: '<?php echo $new_favicon_params_url ?>'\r\n\t};\r\n<?php } ?>\r\n\t\r\n\tjQuery(document).ready(function() {\r\n\t\tjQuery('#favicon_form').submit(function(e) {\r\n\t\t\tjQuery('#json_params').val(JSON.stringify(computeJson()));\r\n\t\t});\r\n\r\n<?php if ( $new_favicon_params_url ) { ?>\r\n\t\tjQuery.get('<?php echo $ajax_url ?>', data)\r\n\t\t\t.done(function(response) {\r\n\t\t\t\tif (response.status == 'success') {\r\n\t\t\t\t\tjQuery('#preview_image').attr('src', response.preview_url);\r\n\t\t\t\t\tvar checkerUrl = \"http://realfavicongenerator.net/favicon_checker?site=<?php echo urlencode( home_url() ) ?>\" + \r\n\t\t\t\t\t\t(response.favicon_in_root ? '' : '&ignore_root_issues=on');\r\n\t\t\t\t\tjQuery('#checker_link').attr('href', checkerUrl);\r\n\t\t\t\t\tjQuery('#install_in_progress_message').fadeOut(function() {\r\n\t\t\t\t\t\tjQuery('#install_completed_message').fadeIn(function() {\r\n\t\t\t\t\t\t\tjQuery('#rank_notice').fadeIn(function() {\r\n\t\t\t\t\t\t\t\tjQuery('#rank_notice').effect('pulsate', {\r\n\t\t\t\t\t\t\t\t\ttimes: 3,\r\n\t\t\t\t\t\t\t\t\tduration: 2000\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tjQuery('#install_completed_container').fadeIn();\r\n\t\t\t\t\t\tjQuery('#favicon_form_container').fadeIn();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar msg = \"<?php _e( \"An error occured\", FBRFG_PLUGIN_SLUG ) ?>\";\r\n\t\t\t\t\tif (response.message != null) {\r\n\t\t\t\t\t\tmsg += \": \" + response.message;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tjQuery('#install_error_message p').html(msg);\r\n\t\t\t\t\tjQuery('#install_in_progress_message').fadeOut(function() {\r\n\t\t\t\t\t\tjQuery('#install_error_message').fadeIn();\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.fail(function() {\r\n\t\t\t\tvar msg = \"<?php _e( \"An internal error occurred\", FBRFG_PLUGIN_SLUG ) ?>\";\r\n\t\t\t\tjQuery('#install_error_message p').html(msg);\r\n\t\t\t\tjQuery('#install_in_progress_message').fadeOut(function() {\r\n\t\t\t\t\tjQuery('#install_error_message').fadeIn();\r\n\t\t\t\t});\r\n\t\t\t});\r\n<?php } ?>\r\n\r\n\t\tvar fileFrame;\r\n\t \r\n\t\tjQuery('#upload_image_button').live('click', function(event) {\r\n\t\t\tevent.preventDefault();\r\n\t \r\n\t\t\tif (fileFrame) {\r\n\t\t\t\tfileFrame.open();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t \r\n\t\t\t// Create the media frame.\r\n\t\t\tfileFrame = wp.media.frames.file_frame = wp.media({\r\n\t\t\t\ttitle: jQuery(this).data('uploader_title'),\r\n\t\t\t\tbutton: {\r\n\t\t\t\t\ttext: jQuery(this).data('uploader_button_text'),\r\n\t\t\t\t},\r\n\t\t\t\tmultiple: false\r\n\t\t\t});\r\n\t\t \r\n\t\t\tfileFrame.on('select', function() {\r\n\t\t\t\tattachment = fileFrame.state().get('selection').first().toJSON();\r\n\t\t\t\tjQuery('#master_picture_url').val(attachment.url);\r\n\t\t\t\tprepareInlinePicture(attachment.url);\r\n\t\t\t});\r\n\t\t \r\n\t\t\tfileFrame.open();\r\n\t\t});\r\n\r\n\r\n\t\tjQuery('#master_picture_url').change(function() {\r\n\t\t\t// Whatever the previous content of the field, forget its cached data\r\n\t\t\tpictureContent = null;\r\n\t\t\trestoreGenerateFaviconButton();\r\n\t\t});\r\n\t});\r\n</script>\r\n", "<?php\r\n/**\r\n * Favicon by RealFaviconGenerator.\r\n *\r\n * @package   favicon-by-realfavicongenerator\r\n * @author    Philippe Bernard <philippe@realfavicongenerator.net>\r\n * @license   GPLv2\r\n * @link      http://www.gnu.org/licenses/gpl-2.0.html\r\n * @copyright 2014 RealFaviconGenerator\r\n *\r\n * @wordpress-plugin\r\n * Plugin Name:       Favicon by RealFaviconGenerator\r\n * Plugin URI:        http://realfavicongenerator.net/extensions/wordpress\r\n * Description:       Create and install your favicon for all platforms: PC/Mac of course, but also iPhone/iPad, Android devices, Windows 8 tablets, etc. \r\n * Version:           1.2.13\r\n * Author:            Philippe Bernard\r\n * Author URI:        http://realfavicongenerator.net/\r\n * License:           GPLv2\r\n * License URI:       http://www.gnu.org/licenses/gpl-2.0.html\r\n */\r\n\r\n// If this file is called directly, abort.\r\nif ( ! defined( 'WPINC' ) ) {\r\n\tdie;\r\n}\r\n\r\n/*----------------------------------------------------------------------------*\r\n * Public-Facing Functionality\r\n *----------------------------------------------------------------------------*/\r\n\r\nrequire_once( plugin_dir_path( __FILE__ ) . 'public/class-favicon-by-realfavicongenerator.php' );\r\n\r\nregister_activation_hook( __FILE__, array( 'Favicon_By_RealFaviconGenerator', 'activate' ) );\r\nregister_deactivation_hook( __FILE__, array( 'Favicon_By_RealFaviconGenerator', 'deactivate' ) );\r\n\r\nadd_action( 'plugins_loaded', array( 'Favicon_By_RealFaviconGenerator', 'get_instance' ) );\r\n\r\n/*----------------------------------------------------------------------------*\r\n * Dashboard and Administrative Functionality\r\n *----------------------------------------------------------------------------*/\r\n\r\nif ( is_admin() ) {\r\n\r\n\trequire_once( plugin_dir_path( __FILE__ ) . 'admin/class-favicon-by-realfavicongenerator-admin.php' );\r\n\tadd_action( 'plugins_loaded', array( 'Favicon_By_RealFaviconGenerator_Admin', 'get_instance' ) );\r\n\r\n}\r\n"], "filenames": ["README.txt", "admin/class-favicon-by-realfavicongenerator-admin.php", "admin/views/appearance.php", "favicon-by-realfavicongenerator.php"], "buggy_code_start_loc": [6, 11, 186, 15], "buggy_code_end_loc": [73, 185, 186, 16], "fixing_code_start_loc": [6, 12, 187, 15], "fixing_code_end_loc": [78, 201, 188, 16], "type": "CWE-352", "message": "A vulnerability classified as problematic has been found in RealFaviconGenerator Favicon Plugin up to 1.2.12 on WordPress. This affects the function install_new_favicon of the file admin/class-favicon-by-realfavicongenerator-admin.php. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. Upgrading to version 1.2.13 is able to address this issue. The identifier of the patch is 949a1ae7216216350458844f50a72f100b56d4e7. It is recommended to upgrade the affected component. The identifier VDB-230661 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2015-10116", "sourceIdentifier": "cna@vuldb.com", "published": "2023-06-06T01:15:40.430", "lastModified": "2024-02-29T01:16:11.813", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic has been found in RealFaviconGenerator Favicon Plugin up to 1.2.12 on WordPress. This affects the function install_new_favicon of the file admin/class-favicon-by-realfavicongenerator-admin.php. The manipulation leads to cross-site request forgery. It is possible to initiate the attack remotely. Upgrading to version 1.2.13 is able to address this issue. The identifier of the patch is 949a1ae7216216350458844f50a72f100b56d4e7. It is recommended to upgrade the affected component. The identifier VDB-230661 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 5.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 10.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-352"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:realfavicongenerator:favicon_by_realfavicongenerator:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "1.2.12", "matchCriteriaId": "9C64FC32-ED6F-4D51-BB64-899C0D185F6B"}]}]}], "references": [{"url": "https://github.com/wp-plugins/favicon-by-realfavicongenerator/commit/949a1ae7216216350458844f50a72f100b56d4e7", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.230661", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}, {"url": "https://vuldb.com/?id.230661", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory", "VDB Entry"]}]}, "github_commit_url": "https://github.com/wp-plugins/favicon-by-realfavicongenerator/commit/949a1ae7216216350458844f50a72f100b56d4e7"}}