{"buggy_code": ["<?php\n\nnamespace Tests\\Browser\\Components;\n\nuse Facebook\\WebDriver\\WebDriverBy;\nuse Laravel\\Dusk\\Browser;\nuse Laravel\\Dusk\\Component as BaseComponent;\nuse PHPUnit\\Framework\\Assert as PHPUnit;\n\nclass AdminMakeInstall extends BaseComponent\n{\n    /**\n     * Get the root selector for the component.\n     *\n     * @return string\n     */\n    public function selector()\n    {\n        return '';\n    }\n\n    /**\n     * Assert that the browser page contains the component.\n     *\n     * @param  Browser  $browser\n     * @return void\n     */\n    public function assert(Browser $browser)\n    {\n\n    }\n\n    /**\n     * Get the element shortcuts for the component.\n     *\n     * @return array\n     */\n    public function elements()\n    {\n        return [];\n    }\n\n    public function makeInstallation(Browser $browser)\n    {\n        $siteUrl = site_url();\n\n        if (mw_is_installed()) {\n            PHPUnit::assertTrue(true);\n            return true;\n        }\n\n        /* $deleteDbFiles = [];\n         $deleteDbFiles[] = dirname(dirname(__DIR__)) . DS . 'config/microweber.php';\n         $deleteDbFiles[] = dirname(dirname(__DIR__)) . DS . 'storage/127_0_0_1.sqlite';\n         foreach ($deleteDbFiles as $file) {\n             if (is_file($file)) {\n                 unlink($file);\n             }\n         }*/\n\n        $browser->visit($siteUrl)->assertSee('install');\n\n        $browser->within(new ChekForJavascriptErrors(), function ($browser) {\n            $browser->validate();\n        });\n\n\n        // Fill the install fields\n        $browser->type('admin_username', '1');\n        $browser->type('admin_password', '1');\n        $browser->type('admin_password2', '1');\n        $browser->type('admin_email', 'bobi@microweber.com');\n\n        $browser->pause(300);\n        $browser->select('#default_template', 'new-world');\n\n        $browser->pause(100);\n        $browser->click('@install-button');\n\n        $browser->pause(20000);\n\n        clearcache();\n\n    }\n}\n"], "fixing_code": ["<?php\n\nnamespace Tests\\Browser\\Components;\n\nuse Facebook\\WebDriver\\WebDriverBy;\nuse Laravel\\Dusk\\Browser;\nuse Laravel\\Dusk\\Component as BaseComponent;\nuse PHPUnit\\Framework\\Assert as PHPUnit;\n\nclass AdminMakeInstall extends BaseComponent\n{\n    /**\n     * Get the root selector for the component.\n     *\n     * @return string\n     */\n    public function selector()\n    {\n        return '';\n    }\n\n    /**\n     * Assert that the browser page contains the component.\n     *\n     * @param  Browser  $browser\n     * @return void\n     */\n    public function assert(Browser $browser)\n    {\n\n    }\n\n    /**\n     * Get the element shortcuts for the component.\n     *\n     * @return array\n     */\n    public function elements()\n    {\n        return [];\n    }\n\n    public function makeInstallation(Browser $browser)\n    {\n        $siteUrl = 'http://127.0.0.1:8000/';\n\n        if (mw_is_installed()) {\n            PHPUnit::assertTrue(true);\n            return true;\n        }\n\n        /* $deleteDbFiles = [];\n         $deleteDbFiles[] = dirname(dirname(__DIR__)) . DS . 'config/microweber.php';\n         $deleteDbFiles[] = dirname(dirname(__DIR__)) . DS . 'storage/127_0_0_1.sqlite';\n         foreach ($deleteDbFiles as $file) {\n             if (is_file($file)) {\n                 unlink($file);\n             }\n         }*/\n\n        $browser->visit($siteUrl)->assertSee('install');\n\n        $browser->within(new ChekForJavascriptErrors(), function ($browser) {\n            $browser->validate();\n        });\n\n\n        // Fill the install fields\n        $browser->type('admin_username', '1');\n        $browser->type('admin_password', '1');\n        $browser->type('admin_password2', '1');\n        $browser->type('admin_email', 'bobi@microweber.com');\n\n        $browser->pause(300);\n        $browser->select('#default_template', 'new-world');\n\n        $browser->pause(100);\n        $browser->click('@install-button');\n\n        $browser->pause(20000);\n\n        clearcache();\n\n    }\n}\n"], "filenames": ["tests/Browser/Components/AdminMakeInstall.php"], "buggy_code_start_loc": [45], "buggy_code_end_loc": [46], "fixing_code_start_loc": [45], "fixing_code_end_loc": [46], "type": "CWE-840", "message": "Business Logic Errors in Packagist microweber/microweber prior to 1.2.11.", "other": {"cve": {"id": "CVE-2022-0596", "sourceIdentifier": "security@huntr.dev", "published": "2022-02-15T14:15:08.057", "lastModified": "2022-02-23T15:59:07.870", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Business Logic Errors in Packagist microweber/microweber prior to 1.2.11."}, {"lang": "es", "value": "Unos Errores de L\u00f3gica de Negocio en Packagist microweber/microweber versiones anteriores a 1.2.11"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 4.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 1.4}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.5}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-840"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:microweber:microweber:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.2.11", "matchCriteriaId": "52D59B39-B1A3-45D1-B4C4-65BEF86F2D85"}]}]}], "references": [{"url": "https://github.com/microweber/microweber/commit/91a9d899741557c75050614ff7adb8c0e3feb005", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/f68b994e-2b8b-49f5-af2a-8cd99e8048a5", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/microweber/microweber/commit/91a9d899741557c75050614ff7adb8c0e3feb005"}}