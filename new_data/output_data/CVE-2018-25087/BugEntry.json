{"buggy_code": ["#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n####\n# Copyright (C) 2009-2016 Kim Gerdes\n# kim AT gerdes. fr\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version.\n#\n# This script is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\n# See the GNU General Public License (www.gnu.org) for more details.\n#\n# You can retrieve a copy of the GNU General Public License\n# from http://www.gnu.org/.  For a copy via US Mail, write to the\n#     Free Software Foundation, Inc.\n#     59 Temple Place - Suite 330,\n#     Boston, MA  02111-1307\n#     USA\n####\n\nimport os, cgitb, cgi,time, sys, glob\nfrom time import asctime, localtime\nsys.path.append('modules')\nfrom logintools import login\nfrom logintools import isloggedin\nfrom logintools import logout\nfrom lib import config, database\ncgitb.enable()\n\n\n##############################################################################################\"\n\ndef start():\n\tform = cgi.FieldStorage()\n\tthisfile = os.environ.get('SCRIPT_NAME',\".\")\n\tuserdir = 'users/'\n\n\tlogint = form.getvalue(\"login\",None)\n\tif logint == \"logout\":\n\t\tprint logout(userdir) # printing cookie header. important!\n\t\tprint \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\tprint '<script type=\"text/javascript\">window.location.href=\".\";</script>'\n\t\n\tproject = (form.getvalue(\"project\",None))\n\tif project: project =project.decode(\"utf-8\")\n\tproject = project.replace(\"(\",\"\").replace(\")\",\"\").replace(\"<\",\"\").replace(\">\",\"\")  # May not contain <>() to avoid XSS attacks\n\t\n\taction = form.getvalue(\"action\",None)\n\tif action: action =action.decode(\"utf-8\")\n\tif action:\n\t\tif action.startswith(\"project_\"):project=action[8:]\n\tif project: action=u\"project_\"+project\n\tif action:\n\t\t#action, userconfig = login(form, userdir, thisfile, action.encode(\"utf-8\"))\n\t\t#action, userconfig = login(form, userdir, thisfile, action)\n\t\ttry: \n\t\t\taction, userconfig = login(form, userdir, thisfile, action)\n\t\texcept Exception,e:\n\t\t\tprint \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\t\tprint \"Error in project.cgi! Can't read the user config files. Please check that the user files are readible and writable by the apache user \"+action.encode(\"utf-8\")\n\t\t\timport traceback\n\t\t\tprint \"traceback:\",traceback.print_exc()\n\t\t\tprint \"Exception:\",str(e)\n\t\t\tsys.exit(\"something's wrong\")\n\telse:\n\t\taction, userconfig = login(form, userdir, thisfile, action)\n\tadminLevel, username, realname = int(userconfig[\"admin\"]),userconfig[\"username\"].decode(\"utf-8\"),userconfig[\"realname\"].decode(\"utf-8\")\n\t\n\tprint \"Content-Type: text/html\\n\" # blank line: end of headers\n\tprojectconfig=None\n\tif logint == \"confirm\":\n\t\tprint \"Your account has been confirmed. You can log on now.\" # blank line: end of headers\n\t\tprint '<script type=\"text/javascript\">setTimeout(window.location.href=\".\",10000);</script>'\n\ttry:\t\n\t\tprojectconfig = config.configProject(project) # read in the settings of the current project\n\texcept:\n\t\tprint \"Error! Can't read the configuration files. Please check that the files project.cfg, functions.cfg, and categories.cfg are present in the project folder\t\"\n\t\tsys.exit(\"something's wrong\")\n\tif not projectconfig:\n\t\t##print \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\tprint \"something went seriously wrong: can't read the configuration of the project\"\n\t\tif project: print project.encode(\"utf-8\")\n\t\t##print \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\tprint '<script type=\"text/javascript\">window.location.href=\".\";</script>'\n\t\tsys.exit(\"something's wrong\")\n\t#sql=database.SQL(project)\n\t#userid = sql.userid(username, realname)\n\ttry:\n\t\tsql=database.SQL(project)\n\t\tuserid = sql.userid(username, realname)\n\texcept Exception , e:\n\t\tfrom sqlite3 import OperationalError\n\t\tif isinstance(e, OperationalError) and str(e)in[\"attempt to write a readonly database\",\"unable to open database file\"]:\n\t\t\tprint \"Error! Make your database and the path leading there from the arborator base modifiable by the apache user!\"\n\t\tif isinstance(e, KeyError):\n\t\t\tprint \"Error! the configuration file does not contain all the necessary keys:\",str(e)\n\t\telse:\n\t\t\tprint \"strange error accessing the database.<br>\",str(e)\n\t\t\timport traceback\n\t\t\t\n\t\t\ttraceback.print_exc()\n\t\tsys.exit(\"something's wrong\")\n\t\n\tif (not projectconfig) and (not action):\n\t\tprint \"something went seriously wrong: can't read the configuration of the project\",project.encode(\"utf-8\")\n\t\t#print '<script type=\"text/javascript\">window.location.href=\".\";</script>'\n\t\tsys.exit(\"something's wrong\")\n\t\n\n\t\n\treturn project,projectconfig,sql,thisfile,username,userid,adminLevel,form\n\n\t\n\t\ndef export(textname, exportNumber, exportType, project):\n\t#textname=textname.encode(\"utf-8\")\n\tprint \"<h2>Exporting\",textname.encode(\"utf-8\"),\"(text number\",exportNumber,\")</h2>\"\n\t\n\tif textname:\n\t\tfc,users,sc,doublegovs=sql.exportAnnotations(int(exportNumber), textname, exportType )\n\t\tif fc==0: \tprint \"<div style='padding:10;' class='ui-state-error ui-corner-all'>No files were exported, probably because the file is assigned to nobody.</div><br/>\"\n\t\telse:\t\t\n\t\t\tprint \"Exported\",fc,\"files and a total of\",sc,\"sentences.<br/><br/>\"\n\t\t\tif exportType in [\"allconll\",\"allxml\"]:\n\t\t\t\tprint \"Exported all existing annotated trees into\",\n\t\t\t\tif exportType ==\"allconll\": print textname.encode(\"utf-8\")+\".user.trees.conll files.<br/>\"\n\t\t\t\telse: print textname.encode(\"utf-8\")+\".user.trees.rhaps.xml files.<br/>\"\n\t\t\telse: \n\t\t\t\tprint \"Exported complete files for each assignment into\"\n\t\t\t\tif exportType ==\"todoconll\": print textname.encode(\"utf-8\")+\".user.complete.conll10 files.<br/>\"\n\t\t\t\telse: print textname.encode(\"utf-8\")+\".user.complete.rhaps.xml files.<br/>\"\n\t\tprint \"<br/><div style='padding:10;'  class='ui-state-highlight ui-corner-all'>\",\n\t\tif fc==1:print \"The export file for\",users[0],\"is\"\n\t\telse: print \"All the\",fc,\"export files (for\",(\", \".join(users)).encode(\"utf-8\")+\") are\"\n\t\tprint \" in the export folder <strong style='color:#DD137B'><a href='projects/{project}/export' target='_blank'>inside the project folder</a></strong> on the server.</div><br/>\".format(project=project.replace(\"'\",\"\\\\'\").replace('\"','\\\\\"').encode(\"utf-8\"))\n\t\tif doublegovs: print \"<div style='padding:10;' class='ui-state-error ui-corner-all'>Achtung!<br/> The annotation contains multiple governors for one or more nodes. The lines have been doubled, and thus this is not a common Conll format!</div>\"\n\telse:\n\t\tprint \"problem: no textname\"\n\t\ndef reaction(project,projectconfig,sql,userid,form,query):\n\t\"\"\"\n\tcontains reaction to actions, eg. uploading, erasing, exporting, ...\n\t\"\"\"\n\tfilename = form.getvalue(\"filename\",None)\n\tif filename: # upload file\t\n\t\tfrom lib.treebankfiles import uploadConll\n\t\tfiletype = form.getvalue(\"filetype\",None)\n\t\tprint \"trying to upload\",filename,filetype,\"into the database of the project\",project.encode(\"utf-8\")\n\t\tif filetype in [\"conll4\",\"conll10\",\"conll14\"]:\n\t\t\tprint \"---------- here we go\"\n\t\t\tnrsentences = uploadConll(sql,filename)\n\t\t\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\">I added {nrsentences} sentences from {filename}.</div>\"\"\".format(nrsentences=nrsentences,filename=filename)\n\t\telse:\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\">Strange filetype: {filename}.</div>\"\"\".format(filename=filename)\n\n\teraseNumber = form.getvalue(\"eraseNumber\",None)\n\tif eraseNumber: # erase text\n\t\tprint \"erasing text number \",eraseNumber,\"<br/>\"\n\t\tsc=sql.removeText(int(eraseNumber))\n\t\tprint \"erased\",sc,\"sentences.\"\n\n\t#statustextid = form.getvalue(\"statustextid\",None)\n\t#if statustextid: # erase text\n\t\t##print \"statustextid, text number:\",statustextid,\"<br/>\"\n\t\t#sql.statustext(int(statustextid),userid)\n\n\texportNumber = form.getvalue(\"exportNumber\",None)\n\ttextname=None\n\tif exportNumber: # export text\n\t\tprint '<div class=\"ui-widget ui-widget-content ui-corner-all box\" >'\n\t\t\n\t\ttextname = form.getvalue(\"textname\",None)\n\t\texportType = form.getvalue(\"exportType\",None)\n\t\t#print exportNumber,type(exportNumber)\n\t\texportNumber=int(exportNumber)\n\t\tif exportNumber==-1 :\n\t\t\tfor t,tid in sorted( [(t,tid) for tid,t,nrtokens in sql.getall(None, \"texts\", None, None)]):\n\t\t\t\texport(t, tid, exportType, project)\n\t\t\t\n\t\telse: export(textname, exportNumber, exportType, project)\n\t\t\n\t\tprint '</div>'\n\n\t\t\n\tuserchoice = form.getlist('userchoice')\n\ttextid = form.getvalue(\"textid\",None)\n\n\tif userchoice and textid: # change todos\n\t\tremoveid = int(form.getvalue(\"removeid\",0))\n\t\tvalidator = int(form.getvalue(\"validator\",0))\n\t\tif removeid:\n\t\t\tsql.removetextfromuser(int(textid),removeid)\n\t\telse:\n\t\t\tu=userchoice[0].split(\"(\")[-1][:-1]\n\t\t\tsql.addtext2user(textid,u,validator)\n\t\t\t\n\t\n\texochoice = form.getvalue(\"exochoice\",None)\n\tif exochoice:\n\t\t\n\t\ttextid = form.getvalue(\"textid\",None)\n\t\texotoknum = form.getvalue(\"exotoknum\",None)\n\t\t\n\t\tprint \"changing exostatus of text id\",textid,\"to\",exochoice\n\t\tsql.setExo(textid, exochoice, exotoknum)\n\t\t\n\t\n\tif query: # search results\t\n\t\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\"\"\"\n\t\t\n\t\tres = sql.snippetSearch(query)\n\t\tif res: \n\t\t\tprint \"<h2>Search results for {query}:</h2>\".format(query=query)\n\t\t\tprint res.encode(\"utf-8\")\n\t\telse: print \"no results for {query}</h2>\".format(query=query)\n\t\tprint \"\"\"</div>\"\"\"\n\t\t\n\t\n\n\n\n\ndef printhtmlheader(project):\n\t\n\tprint \"\"\"<html>\n\t\t\t<head>\n\t\t\t<title>Arborator - {project} Project</title>\n\t<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=UTF-8\">\n\t<script type=\"text/javascript\" src=\"script/jquery.js\"></script>\n\t<script type=\"text/javascript\" src=\"script/jquery-ui-1.8.18.custom.min.js\"></script>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery-ui-1.8.18.custom.css\" media=\"screen\"/>\n\t<link href=\"css/arborator.css\" rel=\"stylesheet\" type=\"text/css\">\n\t<script type=\"text/javascript\">\t\n\tproject=\"{project}\";\n\tuserid=\"{userid}\";\n\tusername=\"{username}\";\n\t\"\"\".format(project=project,userid=userid,username=username.encode(\"utf-8\"))\n\t\n\tprint \"\"\"\n\t$('html').click(function() {\n\t\t$(\"#exportdiv\").css({ display: 'none' } );\t\n\t\t$(\"#userform\").css({ display: 'none' } );\t\n\t\t$(\"#exoform\").css({ display: 'none' } );\t\n\t\t});\n\n\tedit = function(textid,opensentence) {\n\t\t$(\"#textid\").attr(\"value\", textid );\n\t\t$(\"#opensentence\").attr(\"value\", opensentence );\n\t\t$(\"#editorform\").submit();\n\t}\n\tremoveSample = function(textid, text) {\n\t\t$(\"#eraseNumber\").attr(\"value\",textid);\n\t\t$(\"#question\").html(\"Are you sure that you want to erase the text \"+text+\" from the database?\")\n\t\t$('#dialog').dialog('open');\n\t\t}\n\texportAnnos = function(textid, text, offset) {\n\t\t$(\"#exportNumber\").attr(\"value\",textid);\n\t\t$(\"#textname\").attr(\"value\",text);\n\t\toffset.left=offset.left-280;\n\t\t$(\"#exportdiv\").offset(offset).css({ display: 'inline' } );\n\t\t}\t\n\texportGo = function(type) {\n\t\t$(\"#exportType\").attr(\"value\",type);\n\t\tconsole.log($(\"#export\"))\n\t\t$(\"#export\").submit();\n\t\t$(\"#dialog\").html(\"<img src='images/loading.gif'>\");\n\t\t$(\"#dialog\").dialog({\n\t\t\theight: 230,\n \t\t\twidth:150,\n\t\t\tmodal: true,\n\t\t\ttitle:\"Please wait!!!<br>This can be long.\",\n\t\t\tbuttons: {}\n\t\t\t});\n\t\t$('#dialog').dialog('open');\n\t}\n\tadduser = function(textid, text, offset) {\n\t\t$(\"#utextid\").attr(\"value\",textid);\n\t\t$(\"#uremove\").attr(\"value\",0);\n\t\t$(\"#userform\").css({ display: 'block',top: offset.top, left: offset.left } );\n\t\t}\n\t\t\n\tuserchoice = function(v) {\n\t\t$(\"#validator\").attr(\"value\",v);\n\t\t$(\"#uremove\").attr(\"value\",0);\n\t\t\t\t\n\t\t$(\"#useraddremove\").submit();\t\n\t\t}\n\t\n\tuserremove = function(tid,uid) {\t\n\t\t$(\"#utextid\").attr(\"value\",tid);\n\t\t$(\"#uremove\").attr(\"value\",uid);\n\t\t$(\"#useraddremove\").submit();\n\t\t}\n\tnextstatus = function(tid) {\n\t\t//console.log(\"nextstatus\",tid)\t\n\t\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: \"statusChange.cgi\",\n\t\t\tdata: {\"project\":project,\"userid\":userid,\"username\":username,\"textid\":tid}, \n\t\t\tsuccess: function(answer){\n\t\t\t\t\t$(\"#textStatus\"+tid).html(answer.status);\n\t\t\t\t\t//console.log(\"changed!\",answer);\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\terror: function(XMLHttpRequest, textStatus, errorThrown){\n\t\t\t\tconsole.log(\"error\",project,erasetreeid)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t}\t\n\t\n\t\n\t\n\tnl2br = function(str) {   \n\t\treturn (str + '').replace(/([^>\\\\r\\\\n]?)(\\\\r\\\\n|\\\\n\\\\r|\\\\r|\\\\n)/g, '$1'+ '<br>' +'$2');\n\t}\n\n\tstartmate = function() {\n\t\t//$(\"#startmateform :input\").prop('disabled', true);\n\t\t//checkMate();\n\t\t$(\"#parseStatus\").css('background-image', 'url(\"images/ajax-loader.gif\")');  \n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: \"mate.cgi\",\n\t\t\tdata: {\"project\":project,\"parserType\":$( \"#parserType\" ).val(), \"whoseTrees\":$( \"#whoseTrees\" ).val(), \"evaluationPercent\":$( \"#evaluationPercent\" ).val(), \"additionnalLexicon\":$( \"#additionnalLexicon\" ).val(), \"resultAnnotator\":$( \"#resultAnnotator\" ).val()}, \n\t\t\tsuccess: function(answer){\n\t\t\t\t\t$(\"#parseStatus\").html(answer);\n\t\t\t\t\tconsole.log(\"finished!\",answer);\n\t\t\t\t\t//clearInterval(timer);\n\t\t\t\t},\n\t\t\terror: function(XMLHttpRequest, textStatus, errorThrown){\n\t\t\t\tconsole.log(\"mate error\",project)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\t\n\t\ttimer = setInterval(checkMate, 5000);\n\t\t}\n\t\n\tcheckMate = function() {\n\t\t$.ajax({\n\t\t\turl : \"mate/parse.log\",\n\t\t\tdataType: \"text\",\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tsuccess : function (data) {\n\t\t\t\t$(\"#parseStatus\").html(nl2br(data));\n\t\t\t\tif (data.match(\"^Ready\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Done\");\n\t\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\t\t$(\"#parseStatus\").css('background-image', 'none'); \n\t\t\t\t\t\t//$(\"#startmateform :input\").prop('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\n\t\t\t\n\t\t}\n\t\n\t\n\t$(function () {\n\t\t$(\"#dialog\").dialog({\n\t\t\tbgiframe: true,\n\t\t\tautoOpen: false,\n\t\t\theight: 350,\n \t\t\twidth:400,\n\t\t\tmodal: true,\n\t\t\tbuttons: {\n\t\t\t\t\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t},\n\t\t\t\t\"OK\": function() {\n\t\t\t\t\t$(this).dialog('close');\t\t\t\t\t\n\t\t\t\t\t$(\"#erase\").submit();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t$('#exochoice').change(function ()\n\t\t\t{\n\t\t\t\t$('#exochange').submit();\n\t\t\t});\t\n\t\t\t\n\t\t\n\n\t})\n\t\n\n\tgetEvaluation = function(project,uid) {\n\t\t$(\"#evalubutton\"+uid).replaceWith(\"<img id='evalubutton\"+uid+\"' src='images/ajax-loader.gif'>\");\n\t\t$.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: \"getEvaluation.cgi\",\n\t\t\tdata: {\"project\":project,\"uid\":uid}, \n\t\t\tsuccess: function(answer){\n\t\t\t\t\t$(\"#evalubutton\"+uid).replaceWith(answer);\n\t\t\t\t\t//console.log(\"got!\"+answer);\n\t\t\t\n\t\t\t\t},\n\t\t\terror: function(XMLHttpRequest, textStatus, errorThrown){\n\t\t\t\tconsole.log(\"error\",project)\n\t\t\t\talert(\"error erasing\"+XMLHttpRequest+ '\\\\n'+textStatus+ \"\\\\n\"+errorThrown);\n\t\t\t\t}\n\t\t\t});\n\t\t\n\t}\n\t\n\t</script>\n\t\n\t</head>\n\t\"\"\"\n\t\n\t\n\t\ndef printheadline(project):\n\tproject = project.replace(\"(\",\"\").replace(\")\",\"\").replace(\"<\",\"\").replace(\">\",\"\")\n\tif os.path.exists(\"projects/\"+project+\"/\"+project+\".png\"):img=\"<img src='projects/\"+project+\"/\"+project+\".png' align='top' height='18'>\"\n\telse: img=\"\"\n\tquery = form.getvalue(\"searchtext\",\"\")\n\tprint \t\"\"\"<body id=\"body\">\n\t\t\t<div id=\"center\" class=\"center\" style=\"width:100%\">\n\t\t\t\t<div id=\"navigation\" style=\"width:100%;margin:0px;border:0px;\" class=\"arbortitle  ui-widget-header ui-helper-clearfix\">\n\t\t\t\t<a href='.' style='position: fixed;left:1px;top:1px'><img src=\"images/arboratorNano.png\" border=\"0\"></a>\n\t\t\t\t<a href=\"project.cgi?project={project}\" style='position: fixed;left:120px;top:5px;color:white;' title=\"project overview\">{img} {project} Annotation Project</a>\n\t\t\t\t<div style='margin:5 auto;' id='sentinfo'>Project Overview</div>\n\t\t\t\t\t<form method=\"get\" action=\"project.cgi\"  id=\"searchform\"  style='position: fixed;right:1px;top:1px'>\n\t\t\t\t\t\t<input type=\"text\" id=\"searchtext\" name=\"searchtext\" value=\"{query}\"/>\n\t\t\t\t\t\t<input type=\"hidden\" id=\"project\" name=\"project\" value=\"{project}\">\n\t\t\t\t\t\t<span title=\"search\" onClick=\"$('#searchform').submit();\" style=\"cursor:pointer;\" class=\"ui-button-icon-primary ui-icon ui-icon-search\"></span>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\"\"\".format(project=project,img=img,query=query)\n\tif os.path.exists(\"sitemessage.html\"):print open(\"sitemessage.html\").read()\n\treturn query\n\n\n\t\t\n\ndef printmyassignments(project,sql,projectconfig,userid): # assigned texts\n\t\n\ttxt = u\"\"\"\n\t\n\t<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\n\tYou have been assigned the following texts of the <b>{project}</b> Project<br/>\n\t\"\"\".format(project=project)\n\n\ttxt += u\"\"\"Please select the text to annotate:<br/><br/><table class=\"whitable\">\"\"\"\n\ttxt += u\"\t<tr><td>text name</td><td>number of sentences</td><td>number of tokens</td><td>trees modified by you</td><td>status</td></tr>\"\n\tscount,mcount,tcount=0,0,0\n\tfor _,_,tid,todotype,status,comment in sql.getall(None, \"todos\",[\"userid\"], [userid]):\n\t\ttry:\n\t\t\ttid,t,nrtokens = sql.getall(None, \"texts\",[\"rowid\"],[tid])[0]\n\t\texcept:\n\t\t\tsql.removeText(tid)\n\t\t\tprint \"we found a todo for a non existing text and removed it.\"\n\t\t\tcontinue\n\t\ttry: todotype=int(todotype)\n\t\texcept: todotype=0\n\t\t\n\t\t\n\t\tif todotype:txt += u\"\t<tr><td><b><span class='val'>validation of <br></span><a  style='cursor:pointer;' onclick=edit('\"+str(tid)+\"',1)>\"+ t +\"</a></b></td>\"\n\t\telse:\ttxt += u\"\t<tr><td><b><a  style='cursor:pointer;' onclick=edit('\"+str(tid)+\"',1)>\"+ t +\"</a></b></td>\"\n\t\tsn=sql.getnumber(None, \"sentences\", [\"textid\"], [tid])\n\t\tscount+=sn\n\t\ttxt += u\"\t\t<td>\"+str(sn)+\"</td>\"\n\t\ttn=sql.getNumberTokensPerText(tid)\n\t\ttcount+=tn\n\t\ttxt += u\"\t\t<td>\"+str(tn)+\"</td>\"\n\t\ttxt += u\"\t\t<td>&nbsp;\"\n\t\tmc = sql.getNumberTreesPerUserAndText(userid,tid)\n\t\tmcount+=mc\n\t\ttxt += str(mc)\n\t\ttxt += u\"</td>\"\n\t\ttxt += u\"\t\t<td><a  style='cursor:pointer;dispay:block' id='textStatus\"+str(tid)+\"' \"\n\t\ttxt+= \"onclick=nextstatus('\"+str(tid)+\"')>\"+ projectconfig[\"text status\"].get(status,\"ooooo\") +\"</a></td>\" \n\t\ttxt += u\"</tr>\"\n\ttxt += u\"\t<tr> </tr><tr><td>a total of:</td><td>{scount}</td><td>{tcount}</td><td>{mcount}</td></tr>\".format(scount=scount,mcount=mcount,tcount=tcount)\n\ttxt += u\"</table></div>\"\n\n\tif scount: print txt.encode(\"utf-8\")\n\t#else: print u\"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\n\t#You have not been assigned any text of the <b>{project}</b> Project<br/></div>\n\t#\"\"\".format(project=project).encode(\"utf-8\")\n\n\ndef printalltexts(project,sql,adminLevel):############################# all texts of the project\n\tnrt,stotal,ttotal,tanno,tvali=sql.getNumberTexts(),0,0,0,0\n\tproject = project.replace(\"(\",\"\").replace(\")\",\"\").replace(\"<\",\"\").replace(\">\",\"\")\n\tprint \"\"\"\n\t<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\" id='projectbox'>\n\tThe <b>{project}</b> Project has {nrt} texts and {nrs} sentences. <br/>\n\t<br/>\n\t<table class='whitable'>\n\t<thead><tr><th>text name</th><th>number of sentences</th><th>number of tokens</th><th>sentence length</th><th >annotators</th><th>validator</th><th title='non sollicitated trees by users not assigned to this text are listed here.'>other trees</th><th>exo</th><th>&nbsp;</th><th>&nbsp;</th><th>&nbsp;</th></tr></thead>\n\t\"\"\".format(project=project,nrt=nrt,nrs=sql.getNumberSentences())\n\t\n\ttuples=[]\n\tfor t,tid,nrtokens in sorted( [(t,tid,nrtokens) for tid,t,nrtokens in sql.getall(None, \"texts\",None,None)]): # got to get it in alphabetical order .decode(\"utf-8\")\n\t\t\n\t\tc1= u\"<b><a  style='cursor:pointer;dispay:block'  onclick=edit('{tid}',1)>{t}</a></b></td>\".format(tid=tid, t=t)\n\t\tsn=sql.getnumber(None, \"sentences\", [\"textid\"], [tid])\n\t\t\n\t\tstotal+=sn\n\t\tc2=str(sn)\n\t\tif not nrtokens:\tnrtokens=sql.getNumberTokensPerText(tid) # ,recompute=True\n\t\t#nrtokens=sql.getNumberTokensPerText(tid,recompute=True) # recomputes the token number\n\t\tttotal+=nrtokens\n\t\tc3=str(nrtokens)\n\t\tif sn: c4=str(round(float(nrtokens)/sn,2))\n\t\telse: c4=\"0\"\n\t\ta,v = \"\",\"\"\n\t\ttannot,tvalit=0,0\n\t\treals=[]\n\t\tfor _,uid,tid,todotype,status,comment in sql.getall(None, \"todos\",[\"textid\"], [tid], orderby=\"order by userid\"):\n\t\t\ttry: todotype=int(todotype)\n\t\t\texcept: todotype=0\n\t\t\tres= sql.getall(None, \"users\",[\"rowid\"], [uid])\n\t\t\tif res :\n\t\t\t\tuid,user,realname = res[0]\n\t\t\t\tif not realname:\trealname=sql.realname(user)\n\t\t\t\tav=u\"<div  style='float:left;margin-right:10px;'>\"+realname\n\t\t\t\tif status!=\"0\": \tav+= \"<i><sub>\"+ projectconfig[\"text status\"].get(status,\"ooo\")+ \"</i></sub>\"\n\t\t\t\tif adminLevel:\tav+= \"<div class='ui-button-icon-primary ui-icon ui-icon-circle-minus' style='float:right;cursor:pointer;margin-right:15px;'  onclick='var e=arguments[0];e.stopPropagation();userremove({tid},{uid});'></div>\".format(tid=tid,uid=uid)\n\t\t\t\tav+=\"</div>\"\n\t\t\t\treals+=[realname]\n\t\t\t\tif todotype: # validators\n\t\t\t\t\tv+=av\n\t\t\t\t\ttvalit+=1\n\t\t\t\telse: # annotators\n\t\t\t\t\ta+=av\n\t\t\t\t\ttannot+=1\t\t\n\t\tif not a: a=\"<div style='float:left;margin-right:15px;'>nobody yet</div>\"\n\t\tif not v: v=\"<div style='float:left;margin-right:15px;'>nobody yet</div>\" \n\t\ttanno+=tannot\n\t\ttvali+=tvalit\t\t\n\t\tc5,c6=a,v\n\t\t\n\t\totherreals=[r for r, in sql.treesForText(tid) if r and r not in reals]\n\t\t#print \"otherreals\",otherreals, tid\n\t\tif otherreals:\tc7=\" \".join(otherreals)\n\t\telse:\t\tc7=\"&nbsp;\"\n\t\tif adminLevel:\n\t\t\t# exo stuff:\n\t\t\tet,esn = sql.getExo(tid)\n\t\t\tet = sql.exotypes[et] # transform exotypenumber into text\n\t\t\tif not esn: esns=\"\"\n\t\t\telse: esns=esn\n\t\t\tc8= \"\"\"<a style='cursor:pointer;' onclick='$(\"#exoform\").val(\"{et}\").css({{ top: $(this).offset().top-5, left: $(this).offset().left-5 }}).toggle();$(\"#exoform select\").val(\"{et}\");$(\"#exotoknum\").val(\"{esn}\");var e=arguments[0];e.stopPropagation();$(\"#etextid\").val({tid})'>{et} {esns}</a>\"\"\".format(tid=tid,et=et,esn=esn,esns=esns)\n\t\t\t# user assignment:\n\t\t\tc9 = u\"\"\"<div style='float:left;cursor:pointer;' title='asign this text to a user' onclick=\"var e=arguments[0];e.stopPropagation();adduser({tid},'{t}',{{ top: e.pageY, left: e.pageX }}); \">asign<div style='float:right;cursor:pointer;' class='ui-button-icon-primary ui-icon ui-icon-person' ></div></div>&nbsp;&nbsp;&nbsp; \"\"\".format(tid=tid,t=t)\n\t\t\t# export\n\t\t\tc10 = u\"\"\"\t\t<span style='cursor:pointer;'onclick=\"var e=arguments[0];e.stopPropagation();exportAnnos({tid},'{t}',$(this).offset());\"  title='export annotations of this text' ><img src=\"images/dbexport.bw.png\" border=\"0\"></span>\"\"\".format(tid=tid,t=t)\n\t\telse:\n\t\t\tc8= sql.exotypes[sql.getExo(tid)[0]] # only exotype is shown\n\t\t\tc9= \"&nbsp;\"\t\t\t\n\t\t\tc10 = \"\"\"&nbsp;\"\"\"\n\t\t\t\n\t\tif adminLevel>1:\tc11= u\"\"\"\t\t<span class='ui-button-icon-primary ui-icon ui-icon-trash' style='cursor:pointer;' onclick=\"var e=arguments[0]; e.stopPropagation(); removeSample({tid},'{t}');\"  title='remove all sentences from this file from database' ></span>\"\"\".format(tid=tid,t=t)\n\t\telse: \t\tc11= \"&nbsp;\"\n\n\t\ttuples+=[(c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11)]\n\t\n\tfor tup in tuples:\n\t\tprint ('<tr><td>' + u\"</td><td>\".join(tup) + \"</td></tr>\").encode('utf-8')\n\t\n\t\n\tif adminLevel:allexport=\"\"\"<span style='cursor:pointer;'onclick=\"var e=arguments[0];e.stopPropagation();exportAnnos(-1,'all',$(this).offset());\"  title='export all annotations - very slow! blocks the database!' ><img src=\"images/dbexport.bw.png\" border=\"0\"></span>\"\"\"\n\telse:allexport=\"\"\n\tevallinkhtml = '<a href=\"getEvaluation.cgi?project='+project+'\">evaluation</a>'+' <a href=\"getEvaluation.cgi?project='+project+'&csv=csv\">csv</a>'\n\tnvs=sql.getNumberValidatedSentences()\n\tnvt=sql.getNumberValidatedTokens()\n\t\n\tif nrt: # at least some texts exist\n\t\tif tanno: annota=\"{tanno} annotation assignments<br> (an average of {ava:.2f} assignments per text)\".format(tanno=tanno,ava=float(tanno)/nrt)\n\t\telse: annota=\"&nbsp;\"\n\t\tif tvali:\tvalidata=\"{tvali} validation assignments <br> (an average of {avv:.2f} validators per text)\".format(tvali=tvali,avv=float(tvali)/nrt)\n\t\telse:\tvalidata=\"&nbsp;\"\n\t\t\n\t\tif stotal:\tavsentlen=round(float(ttotal)/stotal,2)\n\t\telse:\t\tavsentlen=\"n/a\"\n\t\tif nvs:\t\tavsentlenval=round(float(nvt)/nvs,2)\n\t\telse:\t\tavsentlenval=\"n/a\"\n\t\t\n\t\tprint \"\"\"<TFOOT>\t<tr style='padding-top:20;'><td>{nrt} texts</td><td>{stotal} sentences<br>{nvs} validated</td><td>{ttotal} tokens<br>{nvt} validated</td><td>{avsentlen}<br>{avsentlenval} validated</td><td>{annota}</td><td>{validata}</td><td>&nbsp;</td><td>{evallinkhtml}</td><td>&nbsp;</td><td>{allexport}&nbsp;</td><td>&nbsp;</td></tr> \t</TFOOT>\"\"\".format(stotal=stotal, nvs=nvs, nvt=nvt, nrt=nrt, ttotal=ttotal,avsentlen=avsentlen, avsentlenval=avsentlenval, annota=annota,validata=validata,evallinkhtml=evallinkhtml if adminLevel else \"&nbsp;\", allexport=allexport)\n\tprint \"</table></div>\"\n\n\n\t\ndef printuserassignments(project,projectconfig,sql,adminLevel, lastseens):\n\tparser=projectconfig[\"configuration\"][\"importAnnotatorName\"]\n\tteacher=projectconfig[\"configuration\"].get(\"teacher\",None)\n\tif teacher:\n\t\tteacherid=sql.userid(teacher)\n\t\n\t#scount,tcount=0,0\n\t\n\t\n\ttablecontent=\"\"\n\tsomething=False\n\tfor uid,u,rea in sql.getall(None, \"users\",None,None, orderby=\"order by realname\"):\n\t\tif u!=parser:\n\t\t\ttextids=[]\n\t\t\ttreeidlists=[]\n\t\t\ttotaltokens=[]\n\t\t\ttitles=[]\n\t\t\t#sentenceidlists=[]\n\t\t\ttxt=\"\"\n\t\t\t\n\t\t\tsc,tc,tnrtrees,lastmodif=0,0,0,[]\n\t\t\tfor _,uid,tid,todotype,status,comment in sql.getall(None, \"todos\",[\"userid\"], [uid]): # for all the assignments (texts) for the given user\n\t\t\t\ttry:\ttodotype=int(todotype)\n\t\t\t\texcept: \ttodotype=0\n\t\t\t\ttextids+=[tid]\n\t\t\t\tstatus=projectconfig[\"text status\"].get(status,\"?\")\n\t\t\t\ttid,t,nrtokens = sql.getall(None, \"texts\",[\"rowid\"],[tid])[0]\n\t\t\t\tsn=sql.getnumber(None, \"sentences\", [\"textid\"], [tid])\n\t\t\t\t\n\t\t\t\ttreenrs=sql.treeNrsForUserAndText(uid,tid)\n\t\t\t\ttrees=sorted([(int(n),asctime(localtime(o))) for (sid,n,o,trid,) in treenrs])\n\t\t\t\ttreeidlists+=[ [ (trid,sid) for (sid,n,o,trid,) in treenrs] ]\n\t\t\t\tnrtrees=len(treenrs)\n\t\t\t\tlastmodif+=[o for (sid,n,o,trid,) in treenrs]\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif sn==nrtrees:\ttrees=\"All\"\n\t\t\t\telse:\t\ttrees=str(trees).replace(\"(\",\"\\n\").replace(\"),\",\"\").replace(\"'\",\"\").replace(\",\",\":\").replace(\")\",\"\")[1:-1] or \"None\"\n\t\t\t\t\n\t\t\t\ttn=nrtokens\n\t\t\t\tsc+=sn\n\t\t\t\ttc+=tn\n\t\t\t\ttotaltokens+=[tn]\n\t\t\t\ttitles+=[t]\n\t\t\t\ttnrtrees+=nrtrees\n\t\t\t\tif todotype:\ttxt+= \"<span class='val'>\"\n\t\t\t\ttxt+= \"\"\"\t\t\t<span title=\"modified trees: {trees}\">{t} (<span class='val'>{nrtrees}</span>/{sn}/{tn}/{status})</span>&nbsp;&nbsp;\"\"\".format(t=t.encode(\"utf-8\"),sn=sn,tn=tn,status=status,nrtrees=nrtrees,trees=trees)\n\t\t\t\tif todotype:\ttxt+= \"</span>  \"\n\t\t\t\tsomething=True\n\t\t\tif sc:\t\n\t\t\t\ttablecontent+= \"\t<tr ><td><b>{u}</b></td><td>\".format(u=u)\n\t\t\t\ttablecontent+= txt\n\t\t\t\tavt=\"<span class='val'>{tnrtrees} ({avt:.1f}%)</span>\".format(tnrtrees=tnrtrees,avt=float(tnrtrees)/sc*100)\n\t\t\telse:\t\n\t\t\t\tcontinue\n\t\t\t\ttablecontent+= \"uuu\"\n\t\t\t\tavt=\" 0\"\n\t\t\tif lastmodif:\t\tlastmodif=asctime(localtime(sorted(lastmodif)[-1]))\n\t\t\tif sc:\t\t\tlastseen=asctime(localtime(lastseens.get(u,(0,0))[0]))\n\t\t\telse:\t\t\tlastseen= \"&nbsp;\"\n\t\t\ttablecontent+= \"\t\t\t&nbsp;</td><td><b>{avt}</td><td>{sc}/{tc}<td>{lastseen}</td><td>{lastmodif}</td></b></td></tr>\".format(tnrtrees=tnrtrees,avt=avt  ,sc=sc,tc=tc, lastseen=lastseen, lastmodif=lastmodif or \"&nbsp;\")\t\n\t\t\t\n\t\t\tif teacher:\n\t\t\t\t\n\t\t\t\ttablecontent+= \"<tr><td>{rea} </td><td colspan=5>\".format(rea=rea.encode(\"utf-8\"))\n\t\t\t\n\t\t\t\ttablecontent+= '''<input type=\"button\" onclick=\"getEvaluation('{project}',{uid});\" class=\"fg-button ui-state-default ui-corner-all\" style=\"width:155px;z-index:33;\" value=\"get {rea}'s evaluation\" name=\"evalubutton{uid}\" id=\"evalubutton{uid}\" cursor=\"pointer\">'''.format(project=project,uid=uid, rea=rea.encode(\"utf-8\"))\n\t\t\t\ttablecontent+= \"</td></tr>\"\n\t\t\t\ttablecontent+= \"<tr><td colspan=6 style='padding-bottom:20;'></td></tr>\"\n\t\t\t\t#break\n\tif something:\n\t\tprint \"\"\"\n\t\t<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\n\t\tThe assignments of the <b>{project}</b> Project<br/>\n\t\t\"\"\".format(project=project)\n\t\tprint \"\"\"<br/><table class='whitable'>\"\"\"\n\t\tprint \"\"\"\t<tr>\n\t\t\t<td>user name</td>\n\t\t\t<td>assigned texts: <br> text name (trees modified by user, total number of sentences, total number of tokens, status)</td>\n\t\t\t<td>total number of modified trees</td>\n\t\t\t<td>total number of sentences / <br>  total number of tokens</td> \n\t\t\t<td>last seen</td> <td>last modification</td> \"\"\"\n\t\t#if teacher: print \"<td>result</td>\"\n\t\tprint \"\t</tr>\"\n\t\tprint tablecontent\n\t\t\n\t\tprint \"</table></div>\"\n\t\t\n\tif adminLevel>1:\n\t\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\">\n\t<a href=\"uploader.cgi?project={project}\"><span class='ui-button-icon-primary ui-icon ui-icon-folder-open' style='' title='Add Conll or XML files containing annotations to the database' ></span>Add files to the database</a>\n\t</div></div></div></div></div></div>&nbsp;\"\"\".format(project=project)\n\t\n\treturn now\n\n\n\t\ndef printmenues(project,sql):\n\t\n\tparser=projectconfig[\"configuration\"][\"importAnnotatorName\"]\n\tprint \"\"\"<form method=\"get\" action=\"editor.cgi\" style=\"display: none;\" id=\"editorform\" >\n\t\t\t<input type=\"hidden\" id=\"project\" name=\"project\" value=\"{project}\">\n\t\t\t<input type=\"hidden\" id=\"textid\" name=\"textid\" value=\"\">\n\t\t\t<input type=\"hidden\" id=\"opensentence\" name=\"opensentence\" value=\"1\">\n\t\t\t\n\t\t\t<img src=\"images/ajax-loader.gif\" border=\"0\">\n\t\t\t<img src=\"images/loading.gif\" border=\"0\">\n\t\t</form>\n\t\"\"\".format(project=project)\n\n\tprint \"\"\"<form method=\"post\" action=\"project.cgi?project={project}\" style=\"display: none;\" id=\"nextstatusform\" >\n\t\t\t<input type=\"hidden\" id=\"statustextid\" name=\"statustextid\" value=\"\">\n\t\t</form>\n\t\"\"\".format(project=project)\n\t#<input type=\"hidden\" id=\"project\" name=\"project\" value=\"{project}\">\n\t\n\tprint \"\"\"<div id=\"exoform\" style=\" position:absolute;display: none;\" onclick=\"var e=arguments[0];e.stopPropagation();\">\n\t\t\t<form  method=\"post\" action=\"project.cgi?project={project}\" id=\"exochange\" name=\"exochange\">\n\t\t\t\t<input type=\"hidden\" id=\"etextid\" name=\"textid\" value=\"\">\n\t\t\t\t<select id=\"exochoice\" name=\"exochoice\" style=\"width:180px;\"  >\n\t\t\t\t\t{options}\n\t\t\t\t</select>\n\t\t\t\t<input id=\"exotoknum\" type=\"text\" value=\"0\" name=\"exotoknum\" title=\"number of sentences per student (0=all)\" style=\"width:20px;\">\n\t\t\t</form>\n\t\t</div>\t\t\"\"\".format(project=project, options=\"\\n\".join([\"<option>\"+ty+\"</option>\" for ty in sql.exotypes]))\n\t\n\t\n\tprint \"\"\"<div id=\"userform\" style=\"position:absolute; display:none;\" onclick=\"var e=arguments[0];e.stopPropagation();\">\n\t\t\t<form  method=\"post\" action=\"project.cgi?project={project}\" id=\"useraddremove\" name=\"useradd\">\n\t\t\t\t<select id=\"userchoice\" name=\"userchoice\" style=\"width:180px;\"  >\"\"\".format(project=project)\n\n\tuser_rows = sorted(sql.getall(None, \"users\",None,None), key=lambda x: x[2].lower() if x[2] is not None else \"\")\n\n\tfor uid,user,realname in user_rows:\n\t\t\tif user!=parser:\n\t\t\t\t#print [user]\n\t\t\t\tprint \"\t\t\t<option>\",\n\t\t\t\tif realname: print realname.encode('utf-8'),\n\t\t\t\tprint \" (\"+user+\")</option>\"\n\n\t\t\n\tprint \"\"\"\t\t</select>\n\t\t\t\t<div class='ui-button-icon-primary ui-icon ui-icon-circle-check' style='cursor:pointer; float:right;' onclick=\"var e=arguments[0];e.stopPropagation();userchoice(1);\"  title='asign this user as validatator' ></div>\n\t\t\t\t<div class='ui-button-icon-primary ui-icon ui-icon-circle-plus' style='cursor:pointer; float:right;' onclick=\"var e=arguments[0];e.stopPropagation();userchoice(0);\"  title='asign this user as annotator' ></div>\n\t\t\t\t<input type=\"hidden\" id=\"utextid\" name=\"textid\" value=\"\">\n\t\t\t\t<input type=\"hidden\" id=\"uremove\" name=\"removeid\" value=\"false\">\n\t\t\t\t<input type=\"hidden\" id=\"validator\" name=\"validator\" value=\"0\">\n\t\t\t</form>\n\t\t</div>\"\"\"\n\n\t\t\n\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all\" style=\"position: absolute; padding: 5px;z-index:20;display:none;font-size:.8em;\" id=\"exportdiv\">\n\t\t\t<form id=\"export\" name=\"export\" method=\"POST\"  action=\"project.cgi?project={project}\" >\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<div id=\"radioset\" class=\"ui-buttonset\" style=\"margin-left:15px\">\n\t\t\t\texport complete files per assignment as<br>\n\t\t\t\t\t<label for=\"radio1\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only ui-corner-left\" onclick='exportGo(\"todosconll\")' title=\"All assignments are exported as complete CoNLL files, independently of whether the annotator has actually changed the tree or not from the original parse tree. CoNLL files only contain the form, the lemma, the category, and the dependency.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\tCoNLL file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label><label for=\"radio2\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only  ui-corner-right\" onclick='exportGo(\"todosxml\")' title=\"All assignments are exported as complete XML files, independently of whether the annotator has actually changed the tree or not from the original parse tree.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\t\tXML file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div id=\"radioset\" class=\"ui-buttonset\" style=\"margin-left:15px\">\n\t\t\t\texport all trees by any annotator as<br>\n\t\t\t\t\t<label for=\"radio1\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only ui-corner-left\"  onclick='exportGo(\"allconll\")' title=\"All trees that any annotator has saved are exported, including the original parse trees. The resulting CoNLL files don't necessarily contain all sentences.  CoNLL files only contain the form, the lemma, the category, and the dependency.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\tCoNLL file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label><label for=\"radio2\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only  ui-corner-right\" onclick='exportGo(\"allxml\")' title=\"All trees that any annotator has saved are exported, including the original parse trees. The resulting XML files don't necessarily contain all sentences.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\t\tXML file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div id=\"radioset\" class=\"ui-buttonset\" style=\"margin-left:15px\">\n\t\t\t\texport most recent trees by any annotator as<br>\n\t\t\t\t\t<label for=\"radio1\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only ui-corner-left\"  onclick='exportGo(\"lastconll\")' title=\"The most recent tree for every sentence is exported, this may be the original parse trees. CoNLL files only contain the form, the lemma, the category, and the dependency.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\tCoNLL file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label><label for=\"radio2\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only  ui-corner-right\" onclick='exportGo(\"lastxml\")' title=\"The most recent tree for every sentence is exported, this may be the original parse trees.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\t\tXML file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t<input type=\"hidden\" id=\"exportNumber\" name=\"exportNumber\" value=\"\">\n\t\t\t<input type=\"hidden\" id=\"exportType\" name=\"exportType\" value=\"\">\n\t\t\t<input type=\"hidden\" id=\"textname\" name=\"textname\" value=\"\">\n\t\t\t</form>\n\t\t</div>\n\t\t\n\t\t<div id=\"dialog\" title=\"Confirmation\" style=\"display: none;\" >\n\t\t\t<div class=\"ui-state-error ui-corner-all\" style=\"margin: 40px;padding: 10pt 0.7em;\">\n\t\t\t\t<h2 id=\"question\">Are you sure that you want to erase the text?</h2>\n\t\t\t</div>\n\t\t</div>\n\t\t<form method=\"post\" action=\"project.cgi?project={project}\" style=\"display: none;\" id=\"erase\" >\n\t\t\t<input type=\"hidden\" id=\"eraseNumber\" name=\"eraseNumber\" value=\"\">\n\t\t\t\n\t\t</form>\n\t\t\n\t\t\"\"\".format(project=project)\n\ndef printmate(project,projectconfig, sql, adminlevel):\n\tif projectconfig.get(\"configuration\",{}).get(\"mate\",{}):\n\t\n\t\tprint \"\"\"\n\t<div class=\"ui-widget ui-widget-content ui-corner-all box\" style=\"text-align:-moz-center;\">Mate:\n\t\n\t\t<form  method=\"post\" id=\"startmateform\" name=\"startmateform\">\n\t\t\tFor the <input type=\"hidden\" id=\"etextid\" name=\"textid\" value=\"\">\n\t\t\t\t<select id=\"parserType\" name=\"parserType\" style=\"width:100px;height:25px;\"  >\n\t\t\t\t\t{parsertypeoptions}\n\t\t\t\t</select>-based parser, take\n\t\t\t<input type=\"radio\" name=\"whoseTrees\" value=\"v\" checked>the validators' trees <input type=\"radio\" name=\"whoseTrees\">all validated trees,\n\t\t\tand use <input id=\"evaluationPercent\" type=\"text\" value=\"10\" name=\"evaluationPercent\" title=\"percentage of training data used for evaluation\" style=\"width:33px;\">% for evaluation.\n\t\t\t<br/>\n\t\t\tUse <input id=\"additionnalLexicon\" type=\"text\" value=\"\" name=\"additionnalLexicon\" title=\"name of additional lexicon to use\" style=\"width:93px;\"> as additional lexicon and store the parse results under\n\t\t\t<input id=\"resultAnnotator\" type=\"text\" value=\"mate\" name=\"resultAnnotator\" title=\"username for resulting trees\" style=\"width:63px;\">.\n\t\t\t<br/>\n\t\t\t<input type=\"button\" cursor=\"pointer\" id=\"buttonstartmate\" name=\"buttonstartmate\" value=\"start Mate\" style=\"width:155px;z-index:33;\" class=\"fg-button ui-state-default ui-corner-all\" onclick=\"startmate();\">\n\t\t\t\n\t\t</form>\n\t\t<div id=\"parseStatus\" class=\"ui-widget ui-widget-content ui-corner-all box\" style=\"background-position: center center;background-repeat:no-repeat;\">\t\t\t\n\t\t</div>\n\t\n\t</div>&nbsp;<br/>&nbsp;\"\"\".format(project=projectconfig.get(\"mate\",None),parsertypeoptions=\"\\n\".join([\"<option>\"+ty+\"</option>\" for ty in [\"graph\",\"transition\"]]))\n\n#parserType\n#whoseTrees\n#evaluationPercent\n#additionnalLexicon\n#resultAnnotator\n\n\t\ndef printfooter(project,username,thisfile, now):\n\t\"\"\"\n\t\"now\" contains a list of all users currently online\n\t\"\"\"\n\ta=u\"\"\"<div class=\"arborfoot fg-toolbar ui-widget-header ui-helper-clearfix\">logged in as {username}&nbsp;&nbsp;&nbsp;\n\t<a href=\"{thisfile}?login=logout&project={project}\">logout</a>\"\"\".format(username=username,project=project,thisfile=thisfile)\n\tprint (u\"\"\"<div class=\"arborfoot fg-toolbar ui-widget-header ui-helper-clearfix\">logged in as {username}&nbsp;&nbsp;&nbsp;\n\t<a href=\"{thisfile}?login=logout&project={project}\">logout</a>\"\"\".format(username=username,project=project,thisfile=thisfile)).encode(\"utf-8\")\n\tif username!=\"guest\": print (u'&nbsp;&nbsp;&nbsp;<a href=\"{thisfile}?login=editaccount&project={project}\">edit the account {username}</a>'.format(username=username,project=project,thisfile=thisfile)).encode(\"utf-8\")\n\tif adminLevel > 1: print (u'&nbsp;&nbsp;&nbsp;<a href=\"{thisfile}?login=admin&project={project}\">User Administration</a>'.format(project=project,thisfile=thisfile)).encode(\"utf-8\")\n\tif adminLevel: print (u'&nbsp;&nbsp;&nbsp;<a href=\"configedit.cgi?project={project}\">Edit Configuration</a>'.format(project=project)).encode(\"utf-8\")\n\tnowstring=u'<a  title=\"Ask questions or share your feelings with {r}...\" href=\"mailto:{email}?subject=The%20Arborator%20is%20driving%20me%20crazy!\">{r} ({u})</a>'\n\tnow = [nowstring.format(u=u,r=unicode(r),email=email) for (u,r,email) in now if u!= username]\n\tif len(now)==1: print (u'&nbsp;&nbsp;&nbsp;You are not alone! This other user is online now: '+now[0]).encode(\"utf-8\")\n\telif len(now)>1: print (u'&nbsp;&nbsp;&nbsp;You are not alone! These other users are online now: '+u\", \".join(now)).encode(\"utf-8\")\n\tprint \"</div>\"\n\tprint '</body></html>'\n\t#&nbsp;&nbsp;&nbsp;<a href=\"admin.cgi?project={project}\">Corpus Administration</a>\n\t\n\n\t\t\nif __name__ == \"__main__\":\n\t\n\t\n\tproject,projectconfig,sql,thisfile,username,userid,adminLevel,form = start()\n\t\n\tprinthtmlheader(project.encode(\"utf-8\"))\n\tquery=printheadline(project.encode(\"utf-8\"))\n\t\n\treaction(project,projectconfig,sql,userid,form,query)\n\tprintmyassignments(project,sql,projectconfig,userid)\n\tprintalltexts(project.encode(\"utf-8\"),sql,adminLevel)\n\tlastseens,now=sql.usersLastSeen()\n\tif adminLevel:\t\n\t\tprintuserassignments(project.encode(\"utf-8\"),projectconfig,sql,adminLevel, lastseens)\n\t\tprintmate(project.encode(\"utf-8\"),projectconfig,sql,adminLevel)\n\t\n\tprintmenues(project.encode(\"utf-8\"),sql)\n\tprintfooter(project,username,thisfile,now)\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n"], "fixing_code": ["#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n####\n# Copyright (C) 2009-2016 Kim Gerdes\n# kim AT gerdes. fr\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version.\n#\n# This script is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\n# See the GNU General Public License (www.gnu.org) for more details.\n#\n# You can retrieve a copy of the GNU General Public License\n# from http://www.gnu.org/.  For a copy via US Mail, write to the\n#     Free Software Foundation, Inc.\n#     59 Temple Place - Suite 330,\n#     Boston, MA  02111-1307\n#     USA\n####\n\nimport os, cgitb, cgi,time, sys, glob\nfrom time import asctime, localtime\nsys.path.append('modules')\nfrom logintools import login\nfrom logintools import isloggedin\nfrom logintools import logout\nfrom lib import config, database\ncgitb.enable()\n\n\n##############################################################################################\"\n\ndef start():\n\tform = cgi.FieldStorage()\n\tthisfile = os.environ.get('SCRIPT_NAME',\".\")\n\tuserdir = 'users/'\n\n\tlogint = form.getvalue(\"login\",None)\n\tif logint == \"logout\":\n\t\tprint logout(userdir) # printing cookie header. important!\n\t\tprint \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\tprint '<script type=\"text/javascript\">window.location.href=\".\";</script>'\n\t\n\tproject = (form.getvalue(\"project\",None))\n\tif project: project =project.decode(\"utf-8\")\n\t\n\taction = form.getvalue(\"action\",None)\n\tif action: action =action.decode(\"utf-8\")\n\tif action:\n\t\tif action.startswith(\"project_\"):project=action[8:]\n\tproject = project.replace(\"(\",\"\").replace(\")\",\"\").replace(\"<\",\"\").replace(\">\",\"\")  # May not contain <>() to avoid XSS attacks\n\tif project: action=u\"project_\"+project\n\tif action:\n\t\t#action, userconfig = login(form, userdir, thisfile, action.encode(\"utf-8\"))\n\t\t#action, userconfig = login(form, userdir, thisfile, action)\n\t\ttry: \n\t\t\taction, userconfig = login(form, userdir, thisfile, action)\n\t\texcept Exception,e:\n\t\t\tprint \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\t\tprint \"Error in project.cgi! Can't read the user config files. Please check that the user files are readible and writable by the apache user \"+action.encode(\"utf-8\")\n\t\t\timport traceback\n\t\t\tprint \"traceback:\",traceback.print_exc()\n\t\t\tprint \"Exception:\",str(e)\n\t\t\tsys.exit(\"something's wrong\")\n\telse:\n\t\taction, userconfig = login(form, userdir, thisfile, action)\n\tadminLevel, username, realname = int(userconfig[\"admin\"]),userconfig[\"username\"].decode(\"utf-8\"),userconfig[\"realname\"].decode(\"utf-8\")\n\t\n\tprint \"Content-Type: text/html\\n\" # blank line: end of headers\n\tprojectconfig=None\n\tif logint == \"confirm\":\n\t\tprint \"Your account has been confirmed. You can log on now.\" # blank line: end of headers\n\t\tprint '<script type=\"text/javascript\">setTimeout(window.location.href=\".\",10000);</script>'\n\ttry:\t\n\t\tprojectconfig = config.configProject(project) # read in the settings of the current project\n\texcept:\n\t\tprint \"Error! Can't read the configuration files. Please check that the files project.cfg, functions.cfg, and categories.cfg are present in the project folder\t\"\n\t\tsys.exit(\"something's wrong\")\n\tif not projectconfig:\n\t\t##print \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\tprint \"something went seriously wrong: can't read the configuration of the project\"\n\t\tif project: print project.encode(\"utf-8\")\n\t\t##print \"Content-Type: text/html\\n\" # blank line: end of headers\n\t\tprint '<script type=\"text/javascript\">window.location.href=\".\";</script>'\n\t\tsys.exit(\"something's wrong\")\n\t#sql=database.SQL(project)\n\t#userid = sql.userid(username, realname)\n\ttry:\n\t\tsql=database.SQL(project)\n\t\tuserid = sql.userid(username, realname)\n\texcept Exception , e:\n\t\tfrom sqlite3 import OperationalError\n\t\tif isinstance(e, OperationalError) and str(e)in[\"attempt to write a readonly database\",\"unable to open database file\"]:\n\t\t\tprint \"Error! Make your database and the path leading there from the arborator base modifiable by the apache user!\"\n\t\tif isinstance(e, KeyError):\n\t\t\tprint \"Error! the configuration file does not contain all the necessary keys:\",str(e)\n\t\telse:\n\t\t\tprint \"strange error accessing the database.<br>\",str(e)\n\t\t\timport traceback\n\t\t\t\n\t\t\ttraceback.print_exc()\n\t\tsys.exit(\"something's wrong\")\n\t\n\tif (not projectconfig) and (not action):\n\t\tprint \"something went seriously wrong: can't read the configuration of the project\",project.encode(\"utf-8\")\n\t\t#print '<script type=\"text/javascript\">window.location.href=\".\";</script>'\n\t\tsys.exit(\"something's wrong\")\n\t\n\n\t\n\treturn project,projectconfig,sql,thisfile,username,userid,adminLevel,form\n\n\t\n\t\ndef export(textname, exportNumber, exportType, project):\n\t#textname=textname.encode(\"utf-8\")\n\tprint \"<h2>Exporting\",textname.encode(\"utf-8\"),\"(text number\",exportNumber,\")</h2>\"\n\t\n\tif textname:\n\t\tfc,users,sc,doublegovs=sql.exportAnnotations(int(exportNumber), textname, exportType )\n\t\tif fc==0: \tprint \"<div style='padding:10;' class='ui-state-error ui-corner-all'>No files were exported, probably because the file is assigned to nobody.</div><br/>\"\n\t\telse:\t\t\n\t\t\tprint \"Exported\",fc,\"files and a total of\",sc,\"sentences.<br/><br/>\"\n\t\t\tif exportType in [\"allconll\",\"allxml\"]:\n\t\t\t\tprint \"Exported all existing annotated trees into\",\n\t\t\t\tif exportType ==\"allconll\": print textname.encode(\"utf-8\")+\".user.trees.conll files.<br/>\"\n\t\t\t\telse: print textname.encode(\"utf-8\")+\".user.trees.rhaps.xml files.<br/>\"\n\t\t\telse: \n\t\t\t\tprint \"Exported complete files for each assignment into\"\n\t\t\t\tif exportType ==\"todoconll\": print textname.encode(\"utf-8\")+\".user.complete.conll10 files.<br/>\"\n\t\t\t\telse: print textname.encode(\"utf-8\")+\".user.complete.rhaps.xml files.<br/>\"\n\t\tprint \"<br/><div style='padding:10;'  class='ui-state-highlight ui-corner-all'>\",\n\t\tif fc==1:print \"The export file for\",users[0],\"is\"\n\t\telse: print \"All the\",fc,\"export files (for\",(\", \".join(users)).encode(\"utf-8\")+\") are\"\n\t\tprint \" in the export folder <strong style='color:#DD137B'><a href='projects/{project}/export' target='_blank'>inside the project folder</a></strong> on the server.</div><br/>\".format(project=project.replace(\"'\",\"\\\\'\").replace('\"','\\\\\"').encode(\"utf-8\"))\n\t\tif doublegovs: print \"<div style='padding:10;' class='ui-state-error ui-corner-all'>Achtung!<br/> The annotation contains multiple governors for one or more nodes. The lines have been doubled, and thus this is not a common Conll format!</div>\"\n\telse:\n\t\tprint \"problem: no textname\"\n\t\ndef reaction(project,projectconfig,sql,userid,form,query):\n\t\"\"\"\n\tcontains reaction to actions, eg. uploading, erasing, exporting, ...\n\t\"\"\"\n\tfilename = form.getvalue(\"filename\",None)\n\tif filename: # upload file\t\n\t\tfrom lib.treebankfiles import uploadConll\n\t\tfiletype = form.getvalue(\"filetype\",None)\n\t\tprint \"trying to upload\",filename,filetype,\"into the database of the project\",project.encode(\"utf-8\")\n\t\tif filetype in [\"conll4\",\"conll10\",\"conll14\"]:\n\t\t\tprint \"---------- here we go\"\n\t\t\tnrsentences = uploadConll(sql,filename)\n\t\t\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\">I added {nrsentences} sentences from {filename}.</div>\"\"\".format(nrsentences=nrsentences,filename=filename)\n\t\telse:\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\">Strange filetype: {filename}.</div>\"\"\".format(filename=filename)\n\n\teraseNumber = form.getvalue(\"eraseNumber\",None)\n\tif eraseNumber: # erase text\n\t\tprint \"erasing text number \",eraseNumber,\"<br/>\"\n\t\tsc=sql.removeText(int(eraseNumber))\n\t\tprint \"erased\",sc,\"sentences.\"\n\n\t#statustextid = form.getvalue(\"statustextid\",None)\n\t#if statustextid: # erase text\n\t\t##print \"statustextid, text number:\",statustextid,\"<br/>\"\n\t\t#sql.statustext(int(statustextid),userid)\n\n\texportNumber = form.getvalue(\"exportNumber\",None)\n\ttextname=None\n\tif exportNumber: # export text\n\t\tprint '<div class=\"ui-widget ui-widget-content ui-corner-all box\" >'\n\t\t\n\t\ttextname = form.getvalue(\"textname\",None)\n\t\texportType = form.getvalue(\"exportType\",None)\n\t\t#print exportNumber,type(exportNumber)\n\t\texportNumber=int(exportNumber)\n\t\tif exportNumber==-1 :\n\t\t\tfor t,tid in sorted( [(t,tid) for tid,t,nrtokens in sql.getall(None, \"texts\", None, None)]):\n\t\t\t\texport(t, tid, exportType, project)\n\t\t\t\n\t\telse: export(textname, exportNumber, exportType, project)\n\t\t\n\t\tprint '</div>'\n\n\t\t\n\tuserchoice = form.getlist('userchoice')\n\ttextid = form.getvalue(\"textid\",None)\n\n\tif userchoice and textid: # change todos\n\t\tremoveid = int(form.getvalue(\"removeid\",0))\n\t\tvalidator = int(form.getvalue(\"validator\",0))\n\t\tif removeid:\n\t\t\tsql.removetextfromuser(int(textid),removeid)\n\t\telse:\n\t\t\tu=userchoice[0].split(\"(\")[-1][:-1]\n\t\t\tsql.addtext2user(textid,u,validator)\n\t\t\t\n\t\n\texochoice = form.getvalue(\"exochoice\",None)\n\tif exochoice:\n\t\t\n\t\ttextid = form.getvalue(\"textid\",None)\n\t\texotoknum = form.getvalue(\"exotoknum\",None)\n\t\t\n\t\tprint \"changing exostatus of text id\",textid,\"to\",exochoice\n\t\tsql.setExo(textid, exochoice, exotoknum)\n\t\t\n\t\n\tif query: # search results\t\n\t\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\"\"\"\n\t\t\n\t\tres = sql.snippetSearch(query)\n\t\tif res: \n\t\t\tprint \"<h2>Search results for {query}:</h2>\".format(query=query)\n\t\t\tprint res.encode(\"utf-8\")\n\t\telse: print \"no results for {query}</h2>\".format(query=query)\n\t\tprint \"\"\"</div>\"\"\"\n\t\t\n\t\n\n\n\n\ndef printhtmlheader(project):\n\t\n\tprint \"\"\"<html>\n\t\t\t<head>\n\t\t\t<title>Arborator - {project} Project</title>\n\t<META HTTP-EQUIV=\"Content-Type\" CONTENT=\"text/html; charset=UTF-8\">\n\t<script type=\"text/javascript\" src=\"script/jquery.js\"></script>\n\t<script type=\"text/javascript\" src=\"script/jquery-ui-1.8.18.custom.min.js\"></script>\n\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery-ui-1.8.18.custom.css\" media=\"screen\"/>\n\t<link href=\"css/arborator.css\" rel=\"stylesheet\" type=\"text/css\">\n\t<script type=\"text/javascript\">\t\n\tproject=\"{project}\";\n\tuserid=\"{userid}\";\n\tusername=\"{username}\";\n\t\"\"\".format(project=project,userid=userid,username=username.encode(\"utf-8\"))\n\t\n\tprint \"\"\"\n\t$('html').click(function() {\n\t\t$(\"#exportdiv\").css({ display: 'none' } );\t\n\t\t$(\"#userform\").css({ display: 'none' } );\t\n\t\t$(\"#exoform\").css({ display: 'none' } );\t\n\t\t});\n\n\tedit = function(textid,opensentence) {\n\t\t$(\"#textid\").attr(\"value\", textid );\n\t\t$(\"#opensentence\").attr(\"value\", opensentence );\n\t\t$(\"#editorform\").submit();\n\t}\n\tremoveSample = function(textid, text) {\n\t\t$(\"#eraseNumber\").attr(\"value\",textid);\n\t\t$(\"#question\").html(\"Are you sure that you want to erase the text \"+text+\" from the database?\")\n\t\t$('#dialog').dialog('open');\n\t\t}\n\texportAnnos = function(textid, text, offset) {\n\t\t$(\"#exportNumber\").attr(\"value\",textid);\n\t\t$(\"#textname\").attr(\"value\",text);\n\t\toffset.left=offset.left-280;\n\t\t$(\"#exportdiv\").offset(offset).css({ display: 'inline' } );\n\t\t}\t\n\texportGo = function(type) {\n\t\t$(\"#exportType\").attr(\"value\",type);\n\t\tconsole.log($(\"#export\"))\n\t\t$(\"#export\").submit();\n\t\t$(\"#dialog\").html(\"<img src='images/loading.gif'>\");\n\t\t$(\"#dialog\").dialog({\n\t\t\theight: 230,\n \t\t\twidth:150,\n\t\t\tmodal: true,\n\t\t\ttitle:\"Please wait!!!<br>This can be long.\",\n\t\t\tbuttons: {}\n\t\t\t});\n\t\t$('#dialog').dialog('open');\n\t}\n\tadduser = function(textid, text, offset) {\n\t\t$(\"#utextid\").attr(\"value\",textid);\n\t\t$(\"#uremove\").attr(\"value\",0);\n\t\t$(\"#userform\").css({ display: 'block',top: offset.top, left: offset.left } );\n\t\t}\n\t\t\n\tuserchoice = function(v) {\n\t\t$(\"#validator\").attr(\"value\",v);\n\t\t$(\"#uremove\").attr(\"value\",0);\n\t\t\t\t\n\t\t$(\"#useraddremove\").submit();\t\n\t\t}\n\t\n\tuserremove = function(tid,uid) {\t\n\t\t$(\"#utextid\").attr(\"value\",tid);\n\t\t$(\"#uremove\").attr(\"value\",uid);\n\t\t$(\"#useraddremove\").submit();\n\t\t}\n\tnextstatus = function(tid) {\n\t\t//console.log(\"nextstatus\",tid)\t\n\t\n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: \"statusChange.cgi\",\n\t\t\tdata: {\"project\":project,\"userid\":userid,\"username\":username,\"textid\":tid}, \n\t\t\tsuccess: function(answer){\n\t\t\t\t\t$(\"#textStatus\"+tid).html(answer.status);\n\t\t\t\t\t//console.log(\"changed!\",answer);\n\t\t\t\t\t\n\t\t\t\t},\n\t\t\terror: function(XMLHttpRequest, textStatus, errorThrown){\n\t\t\t\tconsole.log(\"error\",project,erasetreeid)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t}\t\n\t\n\t\n\t\n\tnl2br = function(str) {   \n\t\treturn (str + '').replace(/([^>\\\\r\\\\n]?)(\\\\r\\\\n|\\\\n\\\\r|\\\\r|\\\\n)/g, '$1'+ '<br>' +'$2');\n\t}\n\n\tstartmate = function() {\n\t\t//$(\"#startmateform :input\").prop('disabled', true);\n\t\t//checkMate();\n\t\t$(\"#parseStatus\").css('background-image', 'url(\"images/ajax-loader.gif\")');  \n\t\t$.ajax({\n\t\t\ttype: \"POST\",\n\t\t\turl: \"mate.cgi\",\n\t\t\tdata: {\"project\":project,\"parserType\":$( \"#parserType\" ).val(), \"whoseTrees\":$( \"#whoseTrees\" ).val(), \"evaluationPercent\":$( \"#evaluationPercent\" ).val(), \"additionnalLexicon\":$( \"#additionnalLexicon\" ).val(), \"resultAnnotator\":$( \"#resultAnnotator\" ).val()}, \n\t\t\tsuccess: function(answer){\n\t\t\t\t\t$(\"#parseStatus\").html(answer);\n\t\t\t\t\tconsole.log(\"finished!\",answer);\n\t\t\t\t\t//clearInterval(timer);\n\t\t\t\t},\n\t\t\terror: function(XMLHttpRequest, textStatus, errorThrown){\n\t\t\t\tconsole.log(\"mate error\",project)\n\t\t\t\t\n\t\t\t\t}\n\t\t\t});\n\t\n\t\ttimer = setInterval(checkMate, 5000);\n\t\t}\n\t\n\tcheckMate = function() {\n\t\t$.ajax({\n\t\t\turl : \"mate/parse.log\",\n\t\t\tdataType: \"text\",\n\t\t\tcache: false,\n\t\t\tprocessData: false,\n\t\t\tsuccess : function (data) {\n\t\t\t\t$(\"#parseStatus\").html(nl2br(data));\n\t\t\t\tif (data.match(\"^Ready\"))\n\t\t\t\t\t{\n\t\t\t\t\t\tconsole.log(\"Done\");\n\t\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\t\t$(\"#parseStatus\").css('background-image', 'none'); \n\t\t\t\t\t\t//$(\"#startmateform :input\").prop('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\n\t\t\t\n\t\t}\n\t\n\t\n\t$(function () {\n\t\t$(\"#dialog\").dialog({\n\t\t\tbgiframe: true,\n\t\t\tautoOpen: false,\n\t\t\theight: 350,\n \t\t\twidth:400,\n\t\t\tmodal: true,\n\t\t\tbuttons: {\n\t\t\t\t\n\t\t\t\tCancel: function() {\n\t\t\t\t\t$(this).dialog('close');\n\t\t\t\t},\n\t\t\t\t\"OK\": function() {\n\t\t\t\t\t$(this).dialog('close');\t\t\t\t\t\n\t\t\t\t\t$(\"#erase\").submit();\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t$('#exochoice').change(function ()\n\t\t\t{\n\t\t\t\t$('#exochange').submit();\n\t\t\t});\t\n\t\t\t\n\t\t\n\n\t})\n\t\n\n\tgetEvaluation = function(project,uid) {\n\t\t$(\"#evalubutton\"+uid).replaceWith(\"<img id='evalubutton\"+uid+\"' src='images/ajax-loader.gif'>\");\n\t\t$.ajax({\n\t\t\ttype: \"GET\",\n\t\t\turl: \"getEvaluation.cgi\",\n\t\t\tdata: {\"project\":project,\"uid\":uid}, \n\t\t\tsuccess: function(answer){\n\t\t\t\t\t$(\"#evalubutton\"+uid).replaceWith(answer);\n\t\t\t\t\t//console.log(\"got!\"+answer);\n\t\t\t\n\t\t\t\t},\n\t\t\terror: function(XMLHttpRequest, textStatus, errorThrown){\n\t\t\t\tconsole.log(\"error\",project)\n\t\t\t\talert(\"error erasing\"+XMLHttpRequest+ '\\\\n'+textStatus+ \"\\\\n\"+errorThrown);\n\t\t\t\t}\n\t\t\t});\n\t\t\n\t}\n\t\n\t</script>\n\t\n\t</head>\n\t\"\"\"\n\t\n\t\n\t\ndef printheadline(project):\n\tproject = project.replace(\"(\",\"\").replace(\")\",\"\").replace(\"<\",\"\").replace(\">\",\"\")\n\tif os.path.exists(\"projects/\"+project+\"/\"+project+\".png\"):img=\"<img src='projects/\"+project+\"/\"+project+\".png' align='top' height='18'>\"\n\telse: img=\"\"\n\tquery = form.getvalue(\"searchtext\",\"\")\n\tprint \t\"\"\"<body id=\"body\">\n\t\t\t<div id=\"center\" class=\"center\" style=\"width:100%\">\n\t\t\t\t<div id=\"navigation\" style=\"width:100%;margin:0px;border:0px;\" class=\"arbortitle  ui-widget-header ui-helper-clearfix\">\n\t\t\t\t<a href='.' style='position: fixed;left:1px;top:1px'><img src=\"images/arboratorNano.png\" border=\"0\"></a>\n\t\t\t\t<a href=\"project.cgi?project={project}\" style='position: fixed;left:120px;top:5px;color:white;' title=\"project overview\">{img} {project} Annotation Project</a>\n\t\t\t\t<div style='margin:5 auto;' id='sentinfo'>Project Overview</div>\n\t\t\t\t\t<form method=\"get\" action=\"project.cgi\"  id=\"searchform\"  style='position: fixed;right:1px;top:1px'>\n\t\t\t\t\t\t<input type=\"text\" id=\"searchtext\" name=\"searchtext\" value=\"{query}\"/>\n\t\t\t\t\t\t<input type=\"hidden\" id=\"project\" name=\"project\" value=\"{project}\">\n\t\t\t\t\t\t<span title=\"search\" onClick=\"$('#searchform').submit();\" style=\"cursor:pointer;\" class=\"ui-button-icon-primary ui-icon ui-icon-search\"></span>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\"\"\".format(project=project,img=img,query=query)\n\tif os.path.exists(\"sitemessage.html\"):print open(\"sitemessage.html\").read()\n\treturn query\n\n\n\t\t\n\ndef printmyassignments(project,sql,projectconfig,userid): # assigned texts\n\t\n\ttxt = u\"\"\"\n\t\n\t<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\n\tYou have been assigned the following texts of the <b>{project}</b> Project<br/>\n\t\"\"\".format(project=project)\n\n\ttxt += u\"\"\"Please select the text to annotate:<br/><br/><table class=\"whitable\">\"\"\"\n\ttxt += u\"\t<tr><td>text name</td><td>number of sentences</td><td>number of tokens</td><td>trees modified by you</td><td>status</td></tr>\"\n\tscount,mcount,tcount=0,0,0\n\tfor _,_,tid,todotype,status,comment in sql.getall(None, \"todos\",[\"userid\"], [userid]):\n\t\ttry:\n\t\t\ttid,t,nrtokens = sql.getall(None, \"texts\",[\"rowid\"],[tid])[0]\n\t\texcept:\n\t\t\tsql.removeText(tid)\n\t\t\tprint \"we found a todo for a non existing text and removed it.\"\n\t\t\tcontinue\n\t\ttry: todotype=int(todotype)\n\t\texcept: todotype=0\n\t\t\n\t\t\n\t\tif todotype:txt += u\"\t<tr><td><b><span class='val'>validation of <br></span><a  style='cursor:pointer;' onclick=edit('\"+str(tid)+\"',1)>\"+ t +\"</a></b></td>\"\n\t\telse:\ttxt += u\"\t<tr><td><b><a  style='cursor:pointer;' onclick=edit('\"+str(tid)+\"',1)>\"+ t +\"</a></b></td>\"\n\t\tsn=sql.getnumber(None, \"sentences\", [\"textid\"], [tid])\n\t\tscount+=sn\n\t\ttxt += u\"\t\t<td>\"+str(sn)+\"</td>\"\n\t\ttn=sql.getNumberTokensPerText(tid)\n\t\ttcount+=tn\n\t\ttxt += u\"\t\t<td>\"+str(tn)+\"</td>\"\n\t\ttxt += u\"\t\t<td>&nbsp;\"\n\t\tmc = sql.getNumberTreesPerUserAndText(userid,tid)\n\t\tmcount+=mc\n\t\ttxt += str(mc)\n\t\ttxt += u\"</td>\"\n\t\ttxt += u\"\t\t<td><a  style='cursor:pointer;dispay:block' id='textStatus\"+str(tid)+\"' \"\n\t\ttxt+= \"onclick=nextstatus('\"+str(tid)+\"')>\"+ projectconfig[\"text status\"].get(status,\"ooooo\") +\"</a></td>\" \n\t\ttxt += u\"</tr>\"\n\ttxt += u\"\t<tr> </tr><tr><td>a total of:</td><td>{scount}</td><td>{tcount}</td><td>{mcount}</td></tr>\".format(scount=scount,mcount=mcount,tcount=tcount)\n\ttxt += u\"</table></div>\"\n\n\tif scount: print txt.encode(\"utf-8\")\n\t#else: print u\"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\n\t#You have not been assigned any text of the <b>{project}</b> Project<br/></div>\n\t#\"\"\".format(project=project).encode(\"utf-8\")\n\n\ndef printalltexts(project,sql,adminLevel):############################# all texts of the project\n\tnrt,stotal,ttotal,tanno,tvali=sql.getNumberTexts(),0,0,0,0\n\tproject = project.replace(\"(\",\"\").replace(\")\",\"\").replace(\"<\",\"\").replace(\">\",\"\")\n\tprint \"\"\"\n\t<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\" id='projectbox'>\n\tThe <b>{project}</b> Project has {nrt} texts and {nrs} sentences. <br/>\n\t<br/>\n\t<table class='whitable'>\n\t<thead><tr><th>text name</th><th>number of sentences</th><th>number of tokens</th><th>sentence length</th><th >annotators</th><th>validator</th><th title='non sollicitated trees by users not assigned to this text are listed here.'>other trees</th><th>exo</th><th>&nbsp;</th><th>&nbsp;</th><th>&nbsp;</th></tr></thead>\n\t\"\"\".format(project=project,nrt=nrt,nrs=sql.getNumberSentences())\n\t\n\ttuples=[]\n\tfor t,tid,nrtokens in sorted( [(t,tid,nrtokens) for tid,t,nrtokens in sql.getall(None, \"texts\",None,None)]): # got to get it in alphabetical order .decode(\"utf-8\")\n\t\t\n\t\tc1= u\"<b><a  style='cursor:pointer;dispay:block'  onclick=edit('{tid}',1)>{t}</a></b></td>\".format(tid=tid, t=t)\n\t\tsn=sql.getnumber(None, \"sentences\", [\"textid\"], [tid])\n\t\t\n\t\tstotal+=sn\n\t\tc2=str(sn)\n\t\tif not nrtokens:\tnrtokens=sql.getNumberTokensPerText(tid) # ,recompute=True\n\t\t#nrtokens=sql.getNumberTokensPerText(tid,recompute=True) # recomputes the token number\n\t\tttotal+=nrtokens\n\t\tc3=str(nrtokens)\n\t\tif sn: c4=str(round(float(nrtokens)/sn,2))\n\t\telse: c4=\"0\"\n\t\ta,v = \"\",\"\"\n\t\ttannot,tvalit=0,0\n\t\treals=[]\n\t\tfor _,uid,tid,todotype,status,comment in sql.getall(None, \"todos\",[\"textid\"], [tid], orderby=\"order by userid\"):\n\t\t\ttry: todotype=int(todotype)\n\t\t\texcept: todotype=0\n\t\t\tres= sql.getall(None, \"users\",[\"rowid\"], [uid])\n\t\t\tif res :\n\t\t\t\tuid,user,realname = res[0]\n\t\t\t\tif not realname:\trealname=sql.realname(user)\n\t\t\t\tav=u\"<div  style='float:left;margin-right:10px;'>\"+realname\n\t\t\t\tif status!=\"0\": \tav+= \"<i><sub>\"+ projectconfig[\"text status\"].get(status,\"ooo\")+ \"</i></sub>\"\n\t\t\t\tif adminLevel:\tav+= \"<div class='ui-button-icon-primary ui-icon ui-icon-circle-minus' style='float:right;cursor:pointer;margin-right:15px;'  onclick='var e=arguments[0];e.stopPropagation();userremove({tid},{uid});'></div>\".format(tid=tid,uid=uid)\n\t\t\t\tav+=\"</div>\"\n\t\t\t\treals+=[realname]\n\t\t\t\tif todotype: # validators\n\t\t\t\t\tv+=av\n\t\t\t\t\ttvalit+=1\n\t\t\t\telse: # annotators\n\t\t\t\t\ta+=av\n\t\t\t\t\ttannot+=1\t\t\n\t\tif not a: a=\"<div style='float:left;margin-right:15px;'>nobody yet</div>\"\n\t\tif not v: v=\"<div style='float:left;margin-right:15px;'>nobody yet</div>\" \n\t\ttanno+=tannot\n\t\ttvali+=tvalit\t\t\n\t\tc5,c6=a,v\n\t\t\n\t\totherreals=[r for r, in sql.treesForText(tid) if r and r not in reals]\n\t\t#print \"otherreals\",otherreals, tid\n\t\tif otherreals:\tc7=\" \".join(otherreals)\n\t\telse:\t\tc7=\"&nbsp;\"\n\t\tif adminLevel:\n\t\t\t# exo stuff:\n\t\t\tet,esn = sql.getExo(tid)\n\t\t\tet = sql.exotypes[et] # transform exotypenumber into text\n\t\t\tif not esn: esns=\"\"\n\t\t\telse: esns=esn\n\t\t\tc8= \"\"\"<a style='cursor:pointer;' onclick='$(\"#exoform\").val(\"{et}\").css({{ top: $(this).offset().top-5, left: $(this).offset().left-5 }}).toggle();$(\"#exoform select\").val(\"{et}\");$(\"#exotoknum\").val(\"{esn}\");var e=arguments[0];e.stopPropagation();$(\"#etextid\").val({tid})'>{et} {esns}</a>\"\"\".format(tid=tid,et=et,esn=esn,esns=esns)\n\t\t\t# user assignment:\n\t\t\tc9 = u\"\"\"<div style='float:left;cursor:pointer;' title='asign this text to a user' onclick=\"var e=arguments[0];e.stopPropagation();adduser({tid},'{t}',{{ top: e.pageY, left: e.pageX }}); \">asign<div style='float:right;cursor:pointer;' class='ui-button-icon-primary ui-icon ui-icon-person' ></div></div>&nbsp;&nbsp;&nbsp; \"\"\".format(tid=tid,t=t)\n\t\t\t# export\n\t\t\tc10 = u\"\"\"\t\t<span style='cursor:pointer;'onclick=\"var e=arguments[0];e.stopPropagation();exportAnnos({tid},'{t}',$(this).offset());\"  title='export annotations of this text' ><img src=\"images/dbexport.bw.png\" border=\"0\"></span>\"\"\".format(tid=tid,t=t)\n\t\telse:\n\t\t\tc8= sql.exotypes[sql.getExo(tid)[0]] # only exotype is shown\n\t\t\tc9= \"&nbsp;\"\t\t\t\n\t\t\tc10 = \"\"\"&nbsp;\"\"\"\n\t\t\t\n\t\tif adminLevel>1:\tc11= u\"\"\"\t\t<span class='ui-button-icon-primary ui-icon ui-icon-trash' style='cursor:pointer;' onclick=\"var e=arguments[0]; e.stopPropagation(); removeSample({tid},'{t}');\"  title='remove all sentences from this file from database' ></span>\"\"\".format(tid=tid,t=t)\n\t\telse: \t\tc11= \"&nbsp;\"\n\n\t\ttuples+=[(c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11)]\n\t\n\tfor tup in tuples:\n\t\tprint ('<tr><td>' + u\"</td><td>\".join(tup) + \"</td></tr>\").encode('utf-8')\n\t\n\t\n\tif adminLevel:allexport=\"\"\"<span style='cursor:pointer;'onclick=\"var e=arguments[0];e.stopPropagation();exportAnnos(-1,'all',$(this).offset());\"  title='export all annotations - very slow! blocks the database!' ><img src=\"images/dbexport.bw.png\" border=\"0\"></span>\"\"\"\n\telse:allexport=\"\"\n\tevallinkhtml = '<a href=\"getEvaluation.cgi?project='+project+'\">evaluation</a>'+' <a href=\"getEvaluation.cgi?project='+project+'&csv=csv\">csv</a>'\n\tnvs=sql.getNumberValidatedSentences()\n\tnvt=sql.getNumberValidatedTokens()\n\t\n\tif nrt: # at least some texts exist\n\t\tif tanno: annota=\"{tanno} annotation assignments<br> (an average of {ava:.2f} assignments per text)\".format(tanno=tanno,ava=float(tanno)/nrt)\n\t\telse: annota=\"&nbsp;\"\n\t\tif tvali:\tvalidata=\"{tvali} validation assignments <br> (an average of {avv:.2f} validators per text)\".format(tvali=tvali,avv=float(tvali)/nrt)\n\t\telse:\tvalidata=\"&nbsp;\"\n\t\t\n\t\tif stotal:\tavsentlen=round(float(ttotal)/stotal,2)\n\t\telse:\t\tavsentlen=\"n/a\"\n\t\tif nvs:\t\tavsentlenval=round(float(nvt)/nvs,2)\n\t\telse:\t\tavsentlenval=\"n/a\"\n\t\t\n\t\tprint \"\"\"<TFOOT>\t<tr style='padding-top:20;'><td>{nrt} texts</td><td>{stotal} sentences<br>{nvs} validated</td><td>{ttotal} tokens<br>{nvt} validated</td><td>{avsentlen}<br>{avsentlenval} validated</td><td>{annota}</td><td>{validata}</td><td>&nbsp;</td><td>{evallinkhtml}</td><td>&nbsp;</td><td>{allexport}&nbsp;</td><td>&nbsp;</td></tr> \t</TFOOT>\"\"\".format(stotal=stotal, nvs=nvs, nvt=nvt, nrt=nrt, ttotal=ttotal,avsentlen=avsentlen, avsentlenval=avsentlenval, annota=annota,validata=validata,evallinkhtml=evallinkhtml if adminLevel else \"&nbsp;\", allexport=allexport)\n\tprint \"</table></div>\"\n\n\n\t\ndef printuserassignments(project,projectconfig,sql,adminLevel, lastseens):\n\tparser=projectconfig[\"configuration\"][\"importAnnotatorName\"]\n\tteacher=projectconfig[\"configuration\"].get(\"teacher\",None)\n\tif teacher:\n\t\tteacherid=sql.userid(teacher)\n\t\n\t#scount,tcount=0,0\n\t\n\t\n\ttablecontent=\"\"\n\tsomething=False\n\tfor uid,u,rea in sql.getall(None, \"users\",None,None, orderby=\"order by realname\"):\n\t\tif u!=parser:\n\t\t\ttextids=[]\n\t\t\ttreeidlists=[]\n\t\t\ttotaltokens=[]\n\t\t\ttitles=[]\n\t\t\t#sentenceidlists=[]\n\t\t\ttxt=\"\"\n\t\t\t\n\t\t\tsc,tc,tnrtrees,lastmodif=0,0,0,[]\n\t\t\tfor _,uid,tid,todotype,status,comment in sql.getall(None, \"todos\",[\"userid\"], [uid]): # for all the assignments (texts) for the given user\n\t\t\t\ttry:\ttodotype=int(todotype)\n\t\t\t\texcept: \ttodotype=0\n\t\t\t\ttextids+=[tid]\n\t\t\t\tstatus=projectconfig[\"text status\"].get(status,\"?\")\n\t\t\t\ttid,t,nrtokens = sql.getall(None, \"texts\",[\"rowid\"],[tid])[0]\n\t\t\t\tsn=sql.getnumber(None, \"sentences\", [\"textid\"], [tid])\n\t\t\t\t\n\t\t\t\ttreenrs=sql.treeNrsForUserAndText(uid,tid)\n\t\t\t\ttrees=sorted([(int(n),asctime(localtime(o))) for (sid,n,o,trid,) in treenrs])\n\t\t\t\ttreeidlists+=[ [ (trid,sid) for (sid,n,o,trid,) in treenrs] ]\n\t\t\t\tnrtrees=len(treenrs)\n\t\t\t\tlastmodif+=[o for (sid,n,o,trid,) in treenrs]\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif sn==nrtrees:\ttrees=\"All\"\n\t\t\t\telse:\t\ttrees=str(trees).replace(\"(\",\"\\n\").replace(\"),\",\"\").replace(\"'\",\"\").replace(\",\",\":\").replace(\")\",\"\")[1:-1] or \"None\"\n\t\t\t\t\n\t\t\t\ttn=nrtokens\n\t\t\t\tsc+=sn\n\t\t\t\ttc+=tn\n\t\t\t\ttotaltokens+=[tn]\n\t\t\t\ttitles+=[t]\n\t\t\t\ttnrtrees+=nrtrees\n\t\t\t\tif todotype:\ttxt+= \"<span class='val'>\"\n\t\t\t\ttxt+= \"\"\"\t\t\t<span title=\"modified trees: {trees}\">{t} (<span class='val'>{nrtrees}</span>/{sn}/{tn}/{status})</span>&nbsp;&nbsp;\"\"\".format(t=t.encode(\"utf-8\"),sn=sn,tn=tn,status=status,nrtrees=nrtrees,trees=trees)\n\t\t\t\tif todotype:\ttxt+= \"</span>  \"\n\t\t\t\tsomething=True\n\t\t\tif sc:\t\n\t\t\t\ttablecontent+= \"\t<tr ><td><b>{u}</b></td><td>\".format(u=u)\n\t\t\t\ttablecontent+= txt\n\t\t\t\tavt=\"<span class='val'>{tnrtrees} ({avt:.1f}%)</span>\".format(tnrtrees=tnrtrees,avt=float(tnrtrees)/sc*100)\n\t\t\telse:\t\n\t\t\t\tcontinue\n\t\t\t\ttablecontent+= \"uuu\"\n\t\t\t\tavt=\" 0\"\n\t\t\tif lastmodif:\t\tlastmodif=asctime(localtime(sorted(lastmodif)[-1]))\n\t\t\tif sc:\t\t\tlastseen=asctime(localtime(lastseens.get(u,(0,0))[0]))\n\t\t\telse:\t\t\tlastseen= \"&nbsp;\"\n\t\t\ttablecontent+= \"\t\t\t&nbsp;</td><td><b>{avt}</td><td>{sc}/{tc}<td>{lastseen}</td><td>{lastmodif}</td></b></td></tr>\".format(tnrtrees=tnrtrees,avt=avt  ,sc=sc,tc=tc, lastseen=lastseen, lastmodif=lastmodif or \"&nbsp;\")\t\n\t\t\t\n\t\t\tif teacher:\n\t\t\t\t\n\t\t\t\ttablecontent+= \"<tr><td>{rea} </td><td colspan=5>\".format(rea=rea.encode(\"utf-8\"))\n\t\t\t\n\t\t\t\ttablecontent+= '''<input type=\"button\" onclick=\"getEvaluation('{project}',{uid});\" class=\"fg-button ui-state-default ui-corner-all\" style=\"width:155px;z-index:33;\" value=\"get {rea}'s evaluation\" name=\"evalubutton{uid}\" id=\"evalubutton{uid}\" cursor=\"pointer\">'''.format(project=project,uid=uid, rea=rea.encode(\"utf-8\"))\n\t\t\t\ttablecontent+= \"</td></tr>\"\n\t\t\t\ttablecontent+= \"<tr><td colspan=6 style='padding-bottom:20;'></td></tr>\"\n\t\t\t\t#break\n\tif something:\n\t\tprint \"\"\"\n\t\t<div class=\"ui-widget ui-widget-content ui-corner-all box\"  style=\"text-align:-moz-center;\">\n\t\tThe assignments of the <b>{project}</b> Project<br/>\n\t\t\"\"\".format(project=project)\n\t\tprint \"\"\"<br/><table class='whitable'>\"\"\"\n\t\tprint \"\"\"\t<tr>\n\t\t\t<td>user name</td>\n\t\t\t<td>assigned texts: <br> text name (trees modified by user, total number of sentences, total number of tokens, status)</td>\n\t\t\t<td>total number of modified trees</td>\n\t\t\t<td>total number of sentences / <br>  total number of tokens</td> \n\t\t\t<td>last seen</td> <td>last modification</td> \"\"\"\n\t\t#if teacher: print \"<td>result</td>\"\n\t\tprint \"\t</tr>\"\n\t\tprint tablecontent\n\t\t\n\t\tprint \"</table></div>\"\n\t\t\n\tif adminLevel>1:\n\t\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all box\">\n\t<a href=\"uploader.cgi?project={project}\"><span class='ui-button-icon-primary ui-icon ui-icon-folder-open' style='' title='Add Conll or XML files containing annotations to the database' ></span>Add files to the database</a>\n\t</div></div></div></div></div></div>&nbsp;\"\"\".format(project=project)\n\t\n\treturn now\n\n\n\t\ndef printmenues(project,sql):\n\t\n\tparser=projectconfig[\"configuration\"][\"importAnnotatorName\"]\n\tprint \"\"\"<form method=\"get\" action=\"editor.cgi\" style=\"display: none;\" id=\"editorform\" >\n\t\t\t<input type=\"hidden\" id=\"project\" name=\"project\" value=\"{project}\">\n\t\t\t<input type=\"hidden\" id=\"textid\" name=\"textid\" value=\"\">\n\t\t\t<input type=\"hidden\" id=\"opensentence\" name=\"opensentence\" value=\"1\">\n\t\t\t\n\t\t\t<img src=\"images/ajax-loader.gif\" border=\"0\">\n\t\t\t<img src=\"images/loading.gif\" border=\"0\">\n\t\t</form>\n\t\"\"\".format(project=project)\n\n\tprint \"\"\"<form method=\"post\" action=\"project.cgi?project={project}\" style=\"display: none;\" id=\"nextstatusform\" >\n\t\t\t<input type=\"hidden\" id=\"statustextid\" name=\"statustextid\" value=\"\">\n\t\t</form>\n\t\"\"\".format(project=project)\n\t#<input type=\"hidden\" id=\"project\" name=\"project\" value=\"{project}\">\n\t\n\tprint \"\"\"<div id=\"exoform\" style=\" position:absolute;display: none;\" onclick=\"var e=arguments[0];e.stopPropagation();\">\n\t\t\t<form  method=\"post\" action=\"project.cgi?project={project}\" id=\"exochange\" name=\"exochange\">\n\t\t\t\t<input type=\"hidden\" id=\"etextid\" name=\"textid\" value=\"\">\n\t\t\t\t<select id=\"exochoice\" name=\"exochoice\" style=\"width:180px;\"  >\n\t\t\t\t\t{options}\n\t\t\t\t</select>\n\t\t\t\t<input id=\"exotoknum\" type=\"text\" value=\"0\" name=\"exotoknum\" title=\"number of sentences per student (0=all)\" style=\"width:20px;\">\n\t\t\t</form>\n\t\t</div>\t\t\"\"\".format(project=project, options=\"\\n\".join([\"<option>\"+ty+\"</option>\" for ty in sql.exotypes]))\n\t\n\t\n\tprint \"\"\"<div id=\"userform\" style=\"position:absolute; display:none;\" onclick=\"var e=arguments[0];e.stopPropagation();\">\n\t\t\t<form  method=\"post\" action=\"project.cgi?project={project}\" id=\"useraddremove\" name=\"useradd\">\n\t\t\t\t<select id=\"userchoice\" name=\"userchoice\" style=\"width:180px;\"  >\"\"\".format(project=project)\n\n\tuser_rows = sorted(sql.getall(None, \"users\",None,None), key=lambda x: x[2].lower() if x[2] is not None else \"\")\n\n\tfor uid,user,realname in user_rows:\n\t\t\tif user!=parser:\n\t\t\t\t#print [user]\n\t\t\t\tprint \"\t\t\t<option>\",\n\t\t\t\tif realname: print realname.encode('utf-8'),\n\t\t\t\tprint \" (\"+user+\")</option>\"\n\n\t\t\n\tprint \"\"\"\t\t</select>\n\t\t\t\t<div class='ui-button-icon-primary ui-icon ui-icon-circle-check' style='cursor:pointer; float:right;' onclick=\"var e=arguments[0];e.stopPropagation();userchoice(1);\"  title='asign this user as validatator' ></div>\n\t\t\t\t<div class='ui-button-icon-primary ui-icon ui-icon-circle-plus' style='cursor:pointer; float:right;' onclick=\"var e=arguments[0];e.stopPropagation();userchoice(0);\"  title='asign this user as annotator' ></div>\n\t\t\t\t<input type=\"hidden\" id=\"utextid\" name=\"textid\" value=\"\">\n\t\t\t\t<input type=\"hidden\" id=\"uremove\" name=\"removeid\" value=\"false\">\n\t\t\t\t<input type=\"hidden\" id=\"validator\" name=\"validator\" value=\"0\">\n\t\t\t</form>\n\t\t</div>\"\"\"\n\n\t\t\n\tprint \"\"\"<div class=\"ui-widget ui-widget-content ui-corner-all\" style=\"position: absolute; padding: 5px;z-index:20;display:none;font-size:.8em;\" id=\"exportdiv\">\n\t\t\t<form id=\"export\" name=\"export\" method=\"POST\"  action=\"project.cgi?project={project}\" >\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t<div id=\"radioset\" class=\"ui-buttonset\" style=\"margin-left:15px\">\n\t\t\t\texport complete files per assignment as<br>\n\t\t\t\t\t<label for=\"radio1\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only ui-corner-left\" onclick='exportGo(\"todosconll\")' title=\"All assignments are exported as complete CoNLL files, independently of whether the annotator has actually changed the tree or not from the original parse tree. CoNLL files only contain the form, the lemma, the category, and the dependency.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\tCoNLL file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label><label for=\"radio2\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only  ui-corner-right\" onclick='exportGo(\"todosxml\")' title=\"All assignments are exported as complete XML files, independently of whether the annotator has actually changed the tree or not from the original parse tree.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\t\tXML file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div id=\"radioset\" class=\"ui-buttonset\" style=\"margin-left:15px\">\n\t\t\t\texport all trees by any annotator as<br>\n\t\t\t\t\t<label for=\"radio1\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only ui-corner-left\"  onclick='exportGo(\"allconll\")' title=\"All trees that any annotator has saved are exported, including the original parse trees. The resulting CoNLL files don't necessarily contain all sentences.  CoNLL files only contain the form, the lemma, the category, and the dependency.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\tCoNLL file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label><label for=\"radio2\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only  ui-corner-right\" onclick='exportGo(\"allxml\")' title=\"All trees that any annotator has saved are exported, including the original parse trees. The resulting XML files don't necessarily contain all sentences.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\t\tXML file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t<br>\n\t\t\t<div id=\"radioset\" class=\"ui-buttonset\" style=\"margin-left:15px\">\n\t\t\t\texport most recent trees by any annotator as<br>\n\t\t\t\t\t<label for=\"radio1\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only ui-corner-left\"  onclick='exportGo(\"lastconll\")' title=\"The most recent tree for every sentence is exported, this may be the original parse trees. CoNLL files only contain the form, the lemma, the category, and the dependency.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\tCoNLL file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label><label for=\"radio2\" class=\"ui-state-active ui-button ui-widget ui-state-default ui-button-text-only  ui-corner-right\" onclick='exportGo(\"lastxml\")' title=\"The most recent tree for every sentence is exported, this may be the original parse trees.\">\n\t\t\t\t\t\t<span class=\"ui-button-text\">\n\t\t\t\t\t\t\t\tXML file\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t</div>\n\t\t\t<input type=\"hidden\" id=\"exportNumber\" name=\"exportNumber\" value=\"\">\n\t\t\t<input type=\"hidden\" id=\"exportType\" name=\"exportType\" value=\"\">\n\t\t\t<input type=\"hidden\" id=\"textname\" name=\"textname\" value=\"\">\n\t\t\t</form>\n\t\t</div>\n\t\t\n\t\t<div id=\"dialog\" title=\"Confirmation\" style=\"display: none;\" >\n\t\t\t<div class=\"ui-state-error ui-corner-all\" style=\"margin: 40px;padding: 10pt 0.7em;\">\n\t\t\t\t<h2 id=\"question\">Are you sure that you want to erase the text?</h2>\n\t\t\t</div>\n\t\t</div>\n\t\t<form method=\"post\" action=\"project.cgi?project={project}\" style=\"display: none;\" id=\"erase\" >\n\t\t\t<input type=\"hidden\" id=\"eraseNumber\" name=\"eraseNumber\" value=\"\">\n\t\t\t\n\t\t</form>\n\t\t\n\t\t\"\"\".format(project=project)\n\ndef printmate(project,projectconfig, sql, adminlevel):\n\tif projectconfig.get(\"configuration\",{}).get(\"mate\",{}):\n\t\n\t\tprint \"\"\"\n\t<div class=\"ui-widget ui-widget-content ui-corner-all box\" style=\"text-align:-moz-center;\">Mate:\n\t\n\t\t<form  method=\"post\" id=\"startmateform\" name=\"startmateform\">\n\t\t\tFor the <input type=\"hidden\" id=\"etextid\" name=\"textid\" value=\"\">\n\t\t\t\t<select id=\"parserType\" name=\"parserType\" style=\"width:100px;height:25px;\"  >\n\t\t\t\t\t{parsertypeoptions}\n\t\t\t\t</select>-based parser, take\n\t\t\t<input type=\"radio\" name=\"whoseTrees\" value=\"v\" checked>the validators' trees <input type=\"radio\" name=\"whoseTrees\">all validated trees,\n\t\t\tand use <input id=\"evaluationPercent\" type=\"text\" value=\"10\" name=\"evaluationPercent\" title=\"percentage of training data used for evaluation\" style=\"width:33px;\">% for evaluation.\n\t\t\t<br/>\n\t\t\tUse <input id=\"additionnalLexicon\" type=\"text\" value=\"\" name=\"additionnalLexicon\" title=\"name of additional lexicon to use\" style=\"width:93px;\"> as additional lexicon and store the parse results under\n\t\t\t<input id=\"resultAnnotator\" type=\"text\" value=\"mate\" name=\"resultAnnotator\" title=\"username for resulting trees\" style=\"width:63px;\">.\n\t\t\t<br/>\n\t\t\t<input type=\"button\" cursor=\"pointer\" id=\"buttonstartmate\" name=\"buttonstartmate\" value=\"start Mate\" style=\"width:155px;z-index:33;\" class=\"fg-button ui-state-default ui-corner-all\" onclick=\"startmate();\">\n\t\t\t\n\t\t</form>\n\t\t<div id=\"parseStatus\" class=\"ui-widget ui-widget-content ui-corner-all box\" style=\"background-position: center center;background-repeat:no-repeat;\">\t\t\t\n\t\t</div>\n\t\n\t</div>&nbsp;<br/>&nbsp;\"\"\".format(project=projectconfig.get(\"mate\",None),parsertypeoptions=\"\\n\".join([\"<option>\"+ty+\"</option>\" for ty in [\"graph\",\"transition\"]]))\n\n#parserType\n#whoseTrees\n#evaluationPercent\n#additionnalLexicon\n#resultAnnotator\n\n\t\ndef printfooter(project,username,thisfile, now):\n\t\"\"\"\n\t\"now\" contains a list of all users currently online\n\t\"\"\"\n\ta=u\"\"\"<div class=\"arborfoot fg-toolbar ui-widget-header ui-helper-clearfix\">logged in as {username}&nbsp;&nbsp;&nbsp;\n\t<a href=\"{thisfile}?login=logout&project={project}\">logout</a>\"\"\".format(username=username,project=project,thisfile=thisfile)\n\tprint (u\"\"\"<div class=\"arborfoot fg-toolbar ui-widget-header ui-helper-clearfix\">logged in as {username}&nbsp;&nbsp;&nbsp;\n\t<a href=\"{thisfile}?login=logout&project={project}\">logout</a>\"\"\".format(username=username,project=project,thisfile=thisfile)).encode(\"utf-8\")\n\tif username!=\"guest\": print (u'&nbsp;&nbsp;&nbsp;<a href=\"{thisfile}?login=editaccount&project={project}\">edit the account {username}</a>'.format(username=username,project=project,thisfile=thisfile)).encode(\"utf-8\")\n\tif adminLevel > 1: print (u'&nbsp;&nbsp;&nbsp;<a href=\"{thisfile}?login=admin&project={project}\">User Administration</a>'.format(project=project,thisfile=thisfile)).encode(\"utf-8\")\n\tif adminLevel: print (u'&nbsp;&nbsp;&nbsp;<a href=\"configedit.cgi?project={project}\">Edit Configuration</a>'.format(project=project)).encode(\"utf-8\")\n\tnowstring=u'<a  title=\"Ask questions or share your feelings with {r}...\" href=\"mailto:{email}?subject=The%20Arborator%20is%20driving%20me%20crazy!\">{r} ({u})</a>'\n\tnow = [nowstring.format(u=u,r=unicode(r),email=email) for (u,r,email) in now if u!= username]\n\tif len(now)==1: print (u'&nbsp;&nbsp;&nbsp;You are not alone! This other user is online now: '+now[0]).encode(\"utf-8\")\n\telif len(now)>1: print (u'&nbsp;&nbsp;&nbsp;You are not alone! These other users are online now: '+u\", \".join(now)).encode(\"utf-8\")\n\tprint \"</div>\"\n\tprint '</body></html>'\n\t#&nbsp;&nbsp;&nbsp;<a href=\"admin.cgi?project={project}\">Corpus Administration</a>\n\t\n\n\t\t\nif __name__ == \"__main__\":\n\t\n\t\n\tproject,projectconfig,sql,thisfile,username,userid,adminLevel,form = start()\n\t\n\tprinthtmlheader(project.encode(\"utf-8\"))\n\tquery=printheadline(project.encode(\"utf-8\"))\n\t\n\treaction(project,projectconfig,sql,userid,form,query)\n\tprintmyassignments(project,sql,projectconfig,userid)\n\tprintalltexts(project.encode(\"utf-8\"),sql,adminLevel)\n\tlastseens,now=sql.usersLastSeen()\n\tif adminLevel:\t\n\t\tprintuserassignments(project.encode(\"utf-8\"),projectconfig,sql,adminLevel, lastseens)\n\t\tprintmate(project.encode(\"utf-8\"),projectconfig,sql,adminLevel)\n\t\n\tprintmenues(project.encode(\"utf-8\"),sql)\n\tprintfooter(project,username,thisfile,now)\n\t\n\t\n\n\n\n\n\n\n\n\n\n\n"], "filenames": ["project.cgi"], "buggy_code_start_loc": [51], "buggy_code_end_loc": [56], "fixing_code_start_loc": [50], "fixing_code_end_loc": [57], "type": "CWE-404", "message": "A vulnerability classified as problematic was found in Arborator Server. This vulnerability affects the function start of the file project.cgi. The manipulation of the argument project leads to denial of service. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The patch is identified as cdbdbcbd491db65e9d697ab4365605fdfab1a604. It is recommended to apply a patch to fix this issue. VDB-230662 is the identifier assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2018-25087", "sourceIdentifier": "cna@vuldb.com", "published": "2023-06-06T03:15:08.947", "lastModified": "2024-02-29T01:23:14.767", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "A vulnerability classified as problematic was found in Arborator Server. This vulnerability affects the function start of the file project.cgi. The manipulation of the argument project leads to denial of service. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The patch is identified as cdbdbcbd491db65e9d697ab4365605fdfab1a604. It is recommended to apply a patch to fix this issue. VDB-230662 is the identifier assigned to this vulnerability."}, {"lang": "es", "value": "Esta vulnerabilidad afecta a la funci\u00f3n de inicio del archivo project.cgi de Arborator Server. La manipulaci\u00f3n de los argumentos del archivo project provoca una denegaci\u00f3n de servicio. Este producto utiliza un ciclo de actualizaciones continua, por lo tanto no hay detalles de la versi\u00f3n afectada ni actualizadas. El parche es identificado como cdbdbcbd491db65e9d697ab4365605fdfab1a604. Es recomendable aplicar un parche para solucionar este problema. El identificador asignado a esta vulnerabilidad es VDB-230662."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "HIGH", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}, {"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:A/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "LOW", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:A/AC:L/Au:S/C:N/I:N/A:P", "accessVector": "ADJACENT_NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "NONE", "availabilityImpact": "PARTIAL", "baseScore": 2.7}, "baseSeverity": "LOW", "exploitabilityScore": 5.1, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-404"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:arborator_server_project:arborator_server:*:*:*:*:*:*:*:*", "versionEndExcluding": "2018-10-20", "matchCriteriaId": "B3B17EC1-334A-4894-B45B-B403BF3E7819"}]}]}], "references": [{"url": "https://github.com/Arborator/arborator-server/commit/cdbdbcbd491db65e9d697ab4365605fdfab1a604", "source": "cna@vuldb.com", "tags": ["Patch"]}, {"url": "https://vuldb.com/?ctiid.230662", "source": "cna@vuldb.com", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.230662", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/Arborator/arborator-server/commit/cdbdbcbd491db65e9d697ab4365605fdfab1a604"}}