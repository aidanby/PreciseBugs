{"buggy_code": ["<?php\n/*\n * picture.widget.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2019 Rubicon Communications, LLC (Netgate)\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pfsense-utils.inc\");\nrequire_once(\"functions.inc\");\n\n\nif ($_GET['getpic']==\"true\") {\n\t$pic_type_s = explode(\".\", $user_settings['widgets'][$_GET['widgetkey']]['picturewidget_filename']);\n\t$pic_type = $pic_type_s[1];\n\n\tif ($user_settings['widgets'][$_GET['widgetkey']]['picturewidget']) {\n\t\tif (file_exists(\"/conf/widget_image.\" . $_GET['widgetkey'])) {\n\t\t\t$data = file_get_contents(\"/conf/widget_image.\" . $_GET['widgetkey']);\n\t\t} else {\n\t\t\t$data = \"\";\n\t\t}\n\t}\n\n\theader(\"Content-Disposition: inline; filename=\\\"{$user_settings['widgets'][$_GET['widgetkey']]['picturewidget_filename']}\\\"\");\n\theader(\"Content-Type: image/{$pic_type}\");\n\theader(\"Content-Length: \" . strlen($data));\n\techo $data;\n\texit;\n}\n\nif ($_POST['widgetkey']) {\n\tset_customwidgettitle($user_settings);\n\tif (is_uploaded_file($_FILES['pictfile']['tmp_name'])) {\n\t\t/* read the file contents */\n\t\t$fd_pic = fopen($_FILES['pictfile']['tmp_name'], \"rb\");\n\t\twhile (($buf=fread($fd_pic, 8192)) != '') {\n\t\t    // Here, $buf is guaranteed to contain data\n\t\t    $data .= $buf;\n\t\t}\n\t\tfclose($fd_pic);\n\t\tif (!$data) {\n\t\t\tlog_error(\"Warning, could not read file \" . $_FILES['pictfile']['tmp_name']);\n\t\t\tdie(\"Could not read temporary file\");\n\t\t} else {\n\t\t\t// Make sure they upload an image and not some other file\n\t\t\t$img_info =getimagesize($_FILES['pictfile']['tmp_name']);\n\t\t\tif($img_info === FALSE){\n\t\t\t\tdie(\"Unable to determine image type of uploaded file\");\n\t\t\t}\n\t\t\tif(($img_info[2] !== IMAGETYPE_GIF) && ($img_info[2] !== IMAGETYPE_JPEG) && ($img_info[2] !== IMAGETYPE_PNG)){\n\t\t\t\tdie(\"Not a gif/jpg/png\");\n\t\t\t}\n\t\t\t$picname = basename($_FILES['uploadedfile']['name']);\n\t\t\t$user_settings['widgets'][$_POST['widgetkey']]['picturewidget'] = \"/conf/widget_image\";\n\t\t\tfile_put_contents(\"/conf/widget_image.\" . $_POST['widgetkey'], $data);\n\t\t\t$user_settings['widgets'][$_POST['widgetkey']]['picturewidget_filename'] = $_FILES['pictfile']['name'];\n\t\t}\n\t}\n\n\tsave_widget_settings($_SESSION['Username'], $user_settings[\"widgets\"], gettext(\"Picture widget saved via Dashboard.\"));\n\theader(\"Location: /index.php\");\n\texit;\n}\n\n?>\n<?php\nif($user_settings['widgets'][$widgetkey][\"picturewidget\"] != null){?>\n<a href=\"/widgets/widgets/picture.widget.php?getpic=true&widgetkey=<?=htmlspecialchars($widgetkey)?>\" target=\"_blank\">\n\t<img style=\"width:100%; height:100%\" src=\"/widgets/widgets/picture.widget.php?getpic=true&widgetkey=<?=htmlspecialchars($widgetkey)?>\" alt=\"picture\" />\n</a>\n<?php } ?>\n<!-- close the body we're wrapped in and add a configuration-panel -->\n</div><div id=\"<?=$widget_panel_footer_id?>\"\n\t<?php echo \"class= \" . \"'\" . \"panel-footer\". ($user_settings['widgets'][$widgetkey][\"picturewidget\"] != null ? \" collapse\": \"\"). \"'\";  ?>>\n\n<form action=\"/widgets/widgets/picture.widget.php\" method=\"post\" enctype=\"multipart/form-data\" class=\"form-horizontal\">\n\t<input type=\"hidden\" name=\"widgetkey\" value=\"<?=htmlspecialchars($widgetkey); ?>\">\n\t<?=gen_customwidgettitle_div($widgetconfig['title']); ?>\n\t<div class=\"form-group\">\n\t\t<label for=\"pictfile\" class=\"col-sm-4 control-label\"><?=gettext('New pictures:')?> </label>\n\t\t<div class=\"col-sm-6\">\n\t\t\t<input id=\"pictfile\" name=\"pictfile\" type=\"file\" class=\"form-control\" accept=\"image/*\"/>\n\t\t</div>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-offset-3 col-sm-6\">\n\t\t\t<button type=\"submit\" class=\"btn btn-primary\"><i class=\"fa fa-save icon-embed-btn\"></i><?=gettext('Save')?></button>\n\t\t</div>\n\t</div>\n</form>\n"], "fixing_code": ["<?php\n/*\n * picture.widget.php\n *\n * part of pfSense (https://www.pfsense.org)\n * Copyright (c) 2004-2019 Rubicon Communications, LLC (Netgate)\n * All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire_once(\"guiconfig.inc\");\nrequire_once(\"pfsense-utils.inc\");\nrequire_once(\"functions.inc\");\n\n\nif ($_GET['getpic']==\"true\") {\n\t$wk = basename($_GET['widgetkey']);\n\t$image_filename = \"/conf/widget_image.{$wk}\";\n\tif (empty($wk) ||\n\t    !isset($user_settings['widgets'][$wk]) ||\n\t    !is_array($user_settings['widgets'][$wk]) ||\n\t    !file_exists($image_filename)) {\n\t\techo null;\n\t\texit;\n\t}\n\n\t/* Do not rely on filename to determine image type. */\n\t$img_info =getimagesize($image_filename);\n\tswitch ($img_info[2]) {\n\t\tcase IMAGETYPE_GIF:\n\t\t\t$pic_type = \"gif\";\n\t\t\tbreak;\n\t\tcase IMAGETYPE_JPEG:\n\t\t\t$pic_type = \"jpg\";\n\t\t\tbreak;\n\t\tcase IMAGETYPE_PNG:\n\t\t\t$pic_type = \"png\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\techo null;\n\t\t\texit;\n\t}\n\n\tif ($user_settings['widgets'][$wk]['picturewidget']) {\n\t\tif (file_exists($image_filename)) {\n\t\t\t$data = file_get_contents($image_filename);\n\t\t} else {\n\t\t\t$data = \"\";\n\t\t}\n\t}\n\n\theader(\"Content-Disposition: inline; filename=\\\"\" . basename($image_filename) . \"\\\"\");\n\theader(\"Content-Type: image/{$pic_type}\");\n\theader(\"Content-Length: \" . strlen($data));\n\techo $data;\n\texit;\n}\n\nif ($_POST['widgetkey']) {\n\t$wk = basename($_POST['widgetkey']);\n\tset_customwidgettitle($user_settings);\n\tif (is_uploaded_file($_FILES['pictfile']['tmp_name'])) {\n\t\t/* read the file contents */\n\t\t$fd_pic = fopen($_FILES['pictfile']['tmp_name'], \"rb\");\n\t\twhile (($buf=fread($fd_pic, 8192)) != '') {\n\t\t    // Here, $buf is guaranteed to contain data\n\t\t    $data .= $buf;\n\t\t}\n\t\tfclose($fd_pic);\n\t\tif (!$data) {\n\t\t\tlog_error(\"Warning, could not read file \" . $_FILES['pictfile']['tmp_name']);\n\t\t\tdie(\"Could not read temporary file\");\n\t\t} else {\n\t\t\t// Make sure they upload an image and not some other file\n\t\t\t$img_info =getimagesize($_FILES['pictfile']['tmp_name']);\n\t\t\tif($img_info === FALSE){\n\t\t\t\tdie(\"Unable to determine image type of uploaded file\");\n\t\t\t}\n\t\t\tif(($img_info[2] !== IMAGETYPE_GIF) && ($img_info[2] !== IMAGETYPE_JPEG) && ($img_info[2] !== IMAGETYPE_PNG)){\n\t\t\t\tdie(\"Not a gif/jpg/png\");\n\t\t\t}\n\t\t\t$picname = basename($_FILES['uploadedfile']['name']);\n\t\t\t$user_settings['widgets'][$wk]['picturewidget'] = \"/conf/widget_image\";\n\t\t\tfile_put_contents(\"/conf/widget_image.{$wk}\", $data);\n\t\t\t$user_settings['widgets'][$wk]['picturewidget_filename'] = $_FILES['pictfile']['name'];\n\t\t}\n\t}\n\n\tsave_widget_settings($_SESSION['Username'], $user_settings[\"widgets\"], gettext(\"Picture widget saved via Dashboard.\"));\n\theader(\"Location: /index.php\");\n\texit;\n}\n\n?>\n<?php\nif($user_settings['widgets'][$widgetkey][\"picturewidget\"] != null){?>\n<a href=\"/widgets/widgets/picture.widget.php?getpic=true&widgetkey=<?=htmlspecialchars($widgetkey)?>\" target=\"_blank\">\n\t<img style=\"width:100%; height:100%\" src=\"/widgets/widgets/picture.widget.php?getpic=true&widgetkey=<?=htmlspecialchars($widgetkey)?>\" alt=\"picture\" />\n</a>\n<?php } ?>\n<!-- close the body we're wrapped in and add a configuration-panel -->\n</div><div id=\"<?=$widget_panel_footer_id?>\"\n\t<?php echo \"class= \" . \"'\" . \"panel-footer\". ($user_settings['widgets'][$widgetkey][\"picturewidget\"] != null ? \" collapse\": \"\"). \"'\";  ?>>\n\n<form action=\"/widgets/widgets/picture.widget.php\" method=\"post\" enctype=\"multipart/form-data\" class=\"form-horizontal\">\n\t<input type=\"hidden\" name=\"widgetkey\" value=\"<?=htmlspecialchars($widgetkey); ?>\">\n\t<?=gen_customwidgettitle_div($widgetconfig['title']); ?>\n\t<div class=\"form-group\">\n\t\t<label for=\"pictfile\" class=\"col-sm-4 control-label\"><?=gettext('New pictures:')?> </label>\n\t\t<div class=\"col-sm-6\">\n\t\t\t<input id=\"pictfile\" name=\"pictfile\" type=\"file\" class=\"form-control\" accept=\"image/*\"/>\n\t\t</div>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<div class=\"col-sm-offset-3 col-sm-6\">\n\t\t\t<button type=\"submit\" class=\"btn btn-primary\"><i class=\"fa fa-save icon-embed-btn\"></i><?=gettext('Save')?></button>\n\t\t</div>\n\t</div>\n</form>\n"], "filenames": ["src/usr/local/www/widgets/widgets/picture.widget.php"], "buggy_code_start_loc": [28], "buggy_code_end_loc": [72], "fixing_code_start_loc": [28], "fixing_code_end_loc": [97], "type": "CWE-22", "message": "An issue was discovered in pfSense through 2.4.4-p3. widgets/widgets/picture.widget.php uses the widgetkey parameter directly without sanitization (e.g., a basename call) for a pathname to file_get_contents or file_put_contents.", "other": {"cve": {"id": "CVE-2019-16915", "sourceIdentifier": "cve@mitre.org", "published": "2019-09-26T18:15:10.807", "lastModified": "2021-07-21T11:39:23.747", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "An issue was discovered in pfSense through 2.4.4-p3. widgets/widgets/picture.widget.php uses the widgetkey parameter directly without sanitization (e.g., a basename call) for a pathname to file_get_contents or file_put_contents."}, {"lang": "es", "value": "Se descubri\u00f3 un problema en pfSense versiones hasta 2.4.4-p3. El archivo widgets/widgets/picture.widget.php utiliza el par\u00e1metro widgetkey directamente sin saneamiento (por ejemplo, una llamada basename) para un nombre de ruta en file_get_contents o file_put_contents."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netgate:pfsense:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.4.4", "matchCriteriaId": "2829D9BD-28CA-4E27-997A-25A96ED9B868"}, {"vulnerable": true, "criteria": "cpe:2.3:a:netgate:pfsense:2.4.4:-:*:*:*:*:*:*", "matchCriteriaId": "9A0A896A-691F-442E-9CDE-0EC1393C0C1C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:netgate:pfsense:2.4.4:p1:*:*:*:*:*:*", "matchCriteriaId": "E6256A47-F8C7-4097-88D8-170E8E9AE45C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:netgate:pfsense:2.4.4:p2:*:*:*:*:*:*", "matchCriteriaId": "7F038B4C-BC0C-40A8-B547-36F0420CD800"}, {"vulnerable": true, "criteria": "cpe:2.3:a:netgate:pfsense:2.4.4:p3:*:*:*:*:*:*", "matchCriteriaId": "2FC53B2F-94B4-4985-B49E-652C6D3A9940"}]}]}], "references": [{"url": "https://github.com/pfsense/pfsense/commit/2c544ac61ce98f716d50b8e5961d7dfba66804b5", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://redmine.pfsense.org/issues/9610", "source": "cve@mitre.org", "tags": ["Permissions Required", "Third Party Advisory"]}, {"url": "https://www.seebug.org/vuldb/ssvid-98024", "source": "cve@mitre.org", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/pfsense/pfsense/commit/2c544ac61ce98f716d50b8e5961d7dfba66804b5"}}