{"buggy_code": ["/*\n * (C) 1999-2001 Paul `Rusty' Russell\n * (C) 2002-2006 Netfilter Core Team <coreteam@netfilter.org>\n * Copyright (c) 2011 Patrick McHardy <kaber@trash.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * Based on Rusty Russell's IPv4 REDIRECT target. Development of IPv6\n * NAT funded by Astaro.\n */\n\n#include <linux/if.h>\n#include <linux/inetdevice.h>\n#include <linux/ip.h>\n#include <linux/kernel.h>\n#include <linux/module.h>\n#include <linux/netdevice.h>\n#include <linux/netfilter.h>\n#include <linux/types.h>\n#include <linux/netfilter_ipv4.h>\n#include <linux/netfilter_ipv6.h>\n#include <linux/netfilter/x_tables.h>\n#include <net/addrconf.h>\n#include <net/checksum.h>\n#include <net/protocol.h>\n#include <net/netfilter/nf_nat.h>\n#include <net/netfilter/nf_nat_redirect.h>\n\nunsigned int\nnf_nat_redirect_ipv4(struct sk_buff *skb,\n\t\t     const struct nf_nat_ipv4_multi_range_compat *mr,\n\t\t     unsigned int hooknum)\n{\n\tstruct nf_conn *ct;\n\tenum ip_conntrack_info ctinfo;\n\t__be32 newdst;\n\tstruct nf_nat_range newrange;\n\n\tNF_CT_ASSERT(hooknum == NF_INET_PRE_ROUTING ||\n\t\t     hooknum == NF_INET_LOCAL_OUT);\n\n\tct = nf_ct_get(skb, &ctinfo);\n\tNF_CT_ASSERT(ct && (ctinfo == IP_CT_NEW || ctinfo == IP_CT_RELATED));\n\n\t/* Local packets: make them go to loopback */\n\tif (hooknum == NF_INET_LOCAL_OUT) {\n\t\tnewdst = htonl(0x7F000001);\n\t} else {\n\t\tstruct in_device *indev;\n\t\tstruct in_ifaddr *ifa;\n\n\t\tnewdst = 0;\n\n\t\trcu_read_lock();\n\t\tindev = __in_dev_get_rcu(skb->dev);\n\t\tif (indev != NULL) {\n\t\t\tifa = indev->ifa_list;\n\t\t\tnewdst = ifa->ifa_local;\n\t\t}\n\t\trcu_read_unlock();\n\n\t\tif (!newdst)\n\t\t\treturn NF_DROP;\n\t}\n\n\t/* Transfer from original range. */\n\tmemset(&newrange.min_addr, 0, sizeof(newrange.min_addr));\n\tmemset(&newrange.max_addr, 0, sizeof(newrange.max_addr));\n\tnewrange.flags\t     = mr->range[0].flags | NF_NAT_RANGE_MAP_IPS;\n\tnewrange.min_addr.ip = newdst;\n\tnewrange.max_addr.ip = newdst;\n\tnewrange.min_proto   = mr->range[0].min;\n\tnewrange.max_proto   = mr->range[0].max;\n\n\t/* Hand modified range to generic setup. */\n\treturn nf_nat_setup_info(ct, &newrange, NF_NAT_MANIP_DST);\n}\nEXPORT_SYMBOL_GPL(nf_nat_redirect_ipv4);\n\nstatic const struct in6_addr loopback_addr = IN6ADDR_LOOPBACK_INIT;\n\nunsigned int\nnf_nat_redirect_ipv6(struct sk_buff *skb, const struct nf_nat_range *range,\n\t\t     unsigned int hooknum)\n{\n\tstruct nf_nat_range newrange;\n\tstruct in6_addr newdst;\n\tenum ip_conntrack_info ctinfo;\n\tstruct nf_conn *ct;\n\n\tct = nf_ct_get(skb, &ctinfo);\n\tif (hooknum == NF_INET_LOCAL_OUT) {\n\t\tnewdst = loopback_addr;\n\t} else {\n\t\tstruct inet6_dev *idev;\n\t\tstruct inet6_ifaddr *ifa;\n\t\tbool addr = false;\n\n\t\trcu_read_lock();\n\t\tidev = __in6_dev_get(skb->dev);\n\t\tif (idev != NULL) {\n\t\t\tlist_for_each_entry(ifa, &idev->addr_list, if_list) {\n\t\t\t\tnewdst = ifa->addr;\n\t\t\t\taddr = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\trcu_read_unlock();\n\n\t\tif (!addr)\n\t\t\treturn NF_DROP;\n\t}\n\n\tnewrange.flags\t\t= range->flags | NF_NAT_RANGE_MAP_IPS;\n\tnewrange.min_addr.in6\t= newdst;\n\tnewrange.max_addr.in6\t= newdst;\n\tnewrange.min_proto\t= range->min_proto;\n\tnewrange.max_proto\t= range->max_proto;\n\n\treturn nf_nat_setup_info(ct, &newrange, NF_NAT_MANIP_DST);\n}\nEXPORT_SYMBOL_GPL(nf_nat_redirect_ipv6);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Patrick McHardy <kaber@trash.net>\");\n"], "fixing_code": ["/*\n * (C) 1999-2001 Paul `Rusty' Russell\n * (C) 2002-2006 Netfilter Core Team <coreteam@netfilter.org>\n * Copyright (c) 2011 Patrick McHardy <kaber@trash.net>\n *\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 2 as\n * published by the Free Software Foundation.\n *\n * Based on Rusty Russell's IPv4 REDIRECT target. Development of IPv6\n * NAT funded by Astaro.\n */\n\n#include <linux/if.h>\n#include <linux/inetdevice.h>\n#include <linux/ip.h>\n#include <linux/kernel.h>\n#include <linux/module.h>\n#include <linux/netdevice.h>\n#include <linux/netfilter.h>\n#include <linux/types.h>\n#include <linux/netfilter_ipv4.h>\n#include <linux/netfilter_ipv6.h>\n#include <linux/netfilter/x_tables.h>\n#include <net/addrconf.h>\n#include <net/checksum.h>\n#include <net/protocol.h>\n#include <net/netfilter/nf_nat.h>\n#include <net/netfilter/nf_nat_redirect.h>\n\nunsigned int\nnf_nat_redirect_ipv4(struct sk_buff *skb,\n\t\t     const struct nf_nat_ipv4_multi_range_compat *mr,\n\t\t     unsigned int hooknum)\n{\n\tstruct nf_conn *ct;\n\tenum ip_conntrack_info ctinfo;\n\t__be32 newdst;\n\tstruct nf_nat_range newrange;\n\n\tNF_CT_ASSERT(hooknum == NF_INET_PRE_ROUTING ||\n\t\t     hooknum == NF_INET_LOCAL_OUT);\n\n\tct = nf_ct_get(skb, &ctinfo);\n\tNF_CT_ASSERT(ct && (ctinfo == IP_CT_NEW || ctinfo == IP_CT_RELATED));\n\n\t/* Local packets: make them go to loopback */\n\tif (hooknum == NF_INET_LOCAL_OUT) {\n\t\tnewdst = htonl(0x7F000001);\n\t} else {\n\t\tstruct in_device *indev;\n\t\tstruct in_ifaddr *ifa;\n\n\t\tnewdst = 0;\n\n\t\trcu_read_lock();\n\t\tindev = __in_dev_get_rcu(skb->dev);\n\t\tif (indev && indev->ifa_list) {\n\t\t\tifa = indev->ifa_list;\n\t\t\tnewdst = ifa->ifa_local;\n\t\t}\n\t\trcu_read_unlock();\n\n\t\tif (!newdst)\n\t\t\treturn NF_DROP;\n\t}\n\n\t/* Transfer from original range. */\n\tmemset(&newrange.min_addr, 0, sizeof(newrange.min_addr));\n\tmemset(&newrange.max_addr, 0, sizeof(newrange.max_addr));\n\tnewrange.flags\t     = mr->range[0].flags | NF_NAT_RANGE_MAP_IPS;\n\tnewrange.min_addr.ip = newdst;\n\tnewrange.max_addr.ip = newdst;\n\tnewrange.min_proto   = mr->range[0].min;\n\tnewrange.max_proto   = mr->range[0].max;\n\n\t/* Hand modified range to generic setup. */\n\treturn nf_nat_setup_info(ct, &newrange, NF_NAT_MANIP_DST);\n}\nEXPORT_SYMBOL_GPL(nf_nat_redirect_ipv4);\n\nstatic const struct in6_addr loopback_addr = IN6ADDR_LOOPBACK_INIT;\n\nunsigned int\nnf_nat_redirect_ipv6(struct sk_buff *skb, const struct nf_nat_range *range,\n\t\t     unsigned int hooknum)\n{\n\tstruct nf_nat_range newrange;\n\tstruct in6_addr newdst;\n\tenum ip_conntrack_info ctinfo;\n\tstruct nf_conn *ct;\n\n\tct = nf_ct_get(skb, &ctinfo);\n\tif (hooknum == NF_INET_LOCAL_OUT) {\n\t\tnewdst = loopback_addr;\n\t} else {\n\t\tstruct inet6_dev *idev;\n\t\tstruct inet6_ifaddr *ifa;\n\t\tbool addr = false;\n\n\t\trcu_read_lock();\n\t\tidev = __in6_dev_get(skb->dev);\n\t\tif (idev != NULL) {\n\t\t\tlist_for_each_entry(ifa, &idev->addr_list, if_list) {\n\t\t\t\tnewdst = ifa->addr;\n\t\t\t\taddr = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\trcu_read_unlock();\n\n\t\tif (!addr)\n\t\t\treturn NF_DROP;\n\t}\n\n\tnewrange.flags\t\t= range->flags | NF_NAT_RANGE_MAP_IPS;\n\tnewrange.min_addr.in6\t= newdst;\n\tnewrange.max_addr.in6\t= newdst;\n\tnewrange.min_proto\t= range->min_proto;\n\tnewrange.max_proto\t= range->max_proto;\n\n\treturn nf_nat_setup_info(ct, &newrange, NF_NAT_MANIP_DST);\n}\nEXPORT_SYMBOL_GPL(nf_nat_redirect_ipv6);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Patrick McHardy <kaber@trash.net>\");\n"], "filenames": ["net/netfilter/nf_nat_redirect.c"], "buggy_code_start_loc": [58], "buggy_code_end_loc": [59], "fixing_code_start_loc": [58], "fixing_code_end_loc": [59], "type": "CWE-476", "message": "The nf_nat_redirect_ipv4 function in net/netfilter/nf_nat_redirect.c in the Linux kernel before 4.4 allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by sending certain IPv4 packets to an incompletely configured interface, a related issue to CVE-2003-1604.", "other": {"cve": {"id": "CVE-2015-8787", "sourceIdentifier": "security@debian.org", "published": "2016-02-08T03:59:08.807", "lastModified": "2023-01-19T16:26:32.043", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The nf_nat_redirect_ipv4 function in net/netfilter/nf_nat_redirect.c in the Linux kernel before 4.4 allows remote attackers to cause a denial of service (NULL pointer dereference and system crash) or possibly have unspecified other impact by sending certain IPv4 packets to an incompletely configured interface, a related issue to CVE-2003-1604."}, {"lang": "es", "value": "La funci\u00f3n nf_nat_redirect_ipv4 en net/netfilter/nf_nat_redirect.c en el kernel de Linux en versiones anteriores a 4.4 permite a atacantes remotos provocar una denegaci\u00f3n de servicio (referencia a puntero NULL y ca\u00edda del sistema) o posiblemente tener otro impacto no especificado enviando ciertos paquetes IPv4 a una interfaz configurada incompletamente, un caso relacionado con CVE-2003-1604."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:C/I:C/A:C", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "COMPLETE", "integrityImpact": "COMPLETE", "availabilityImpact": "COMPLETE", "baseScore": 10.0}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 10.0, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-476"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "3.19", "versionEndExcluding": "4.1.31", "matchCriteriaId": "A9D6D603-71C1-43F3-8A78-D5942BB88069"}, {"vulnerable": true, "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*", "versionStartIncluding": "4.2", "versionEndExcluding": "4.4", "matchCriteriaId": "8F38C207-7F29-43E1-BB0B-F202DD2CFCF7"}]}]}], "references": [{"url": "http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=94f9cd81436c85d8c3a318ba92e236ede73752fc", "source": "security@debian.org", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}, {"url": "http://lists.fedoraproject.org/pipermail/package-announce/2016-February/176464.html", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://lists.fedoraproject.org/pipermail/package-announce/2016-February/176484.html", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://lists.opensuse.org/opensuse-security-announce/2016-04/msg00015.html", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.openwall.com/lists/oss-security/2016/01/27/6", "source": "security@debian.org", "tags": ["Mailing List"]}, {"url": "http://www.oracle.com/technetwork/topics/security/linuxbulletinjul2016-3090544.html", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.oracle.com/technetwork/topics/security/ovmbulletinoct2016-3090547.html", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2889-1", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2889-2", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2890-1", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2890-2", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "http://www.ubuntu.com/usn/USN-2890-3", "source": "security@debian.org", "tags": ["Third Party Advisory"]}, {"url": "https://bugzilla.redhat.com/show_bug.cgi?id=1300731", "source": "security@debian.org", "tags": ["Issue Tracking"]}, {"url": "https://github.com/torvalds/linux/commit/94f9cd81436c85d8c3a318ba92e236ede73752fc", "source": "security@debian.org", "tags": ["Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/torvalds/linux/commit/94f9cd81436c85d8c3a318ba92e236ede73752fc"}}