{"buggy_code": ["<?php\n/************************************************************************/\n/* ATutor\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n/************************************************************************/\n/* Copyright (c) 2002-2010                                              */\n/* Inclusive Design Institute                                           */\n/* http://atutor.ca                                                     */\n/* This program is free software. You can redistribute it and/or        */\n/* modify it under the terms of the GNU General Public License          */\n/* as published by the Free Software Foundation.                        */\n/************************************************************************/\n// $Id$\n//http://localhost/atutorgit/confirm.php?id=18&m=3a4f4d38ba \n$_user_location = 'public';\n\ndefine('AT_INCLUDE_PATH', 'include/');\nrequire(AT_INCLUDE_PATH.'vitals.inc.php');\n\nif (isset($_POST['cancel'])) {\n\t$msg->addFeedback('CANCELLED');\n\theader('Location: '.$_base_href.'login.php');\n\texit;\n}\n\nif (isset($_GET['e'], $_GET['id'], $_GET['m'])) {\n\t$id = intval($_GET['id']);\n\t$m  = $_GET['m'];\n\t$e  = $addslashes($_GET['e']);\n \n    $sql    = \"SELECT creation_date FROM %smembers WHERE member_id=%d\";\n\t$row = queryDB($sql, array(TABLE_PREFIX, $id), TRUE);\n\t\n\tif ($row['creation_date'] != '') {\n\t\t$code = substr(md5($e . $row['creation_date'] . $id), 0, 10);\n\n\t\tif ($code == $m) {\n\t\t\t$sql = \"UPDATE %smembers SET email='%s', last_login=NOW(), creation_date=creation_date WHERE member_id=%d\";\n\t\t\t$result = queryDB($sql, array(TABLE_PREFIX, $e, $id));\n\t\t\t$msg->addFeedback('CONFIRM_GOOD');\n\n\t\t\theader('Location: '.$_base_href.'users/index.php');\n\t\t\texit;\n\t\t} else {\n\t\t\t$msg->addError('CONFIRM_BAD');\n\t\t}\n\t} else {\n\t\t$msg->addError('CONFIRM_BAD');\n\t}\n\n} else if (isset($_GET['id'], $_GET['m'])) {\n\t$id = intval($_GET['id']);\n\t$m  = $_GET['m'];\n\t\n\t$sql    = \"SELECT email, creation_date FROM %smembers WHERE member_id=%d AND status=\".AT_STATUS_UNCONFIRMED;\n\t$row = queryDB($sql, array(TABLE_PREFIX, $id), TRUE);\t\n\n\tif ($row['creation_date'] != '') {\n\t\t$code = substr(md5($row['email'] . $row['creation_date'] . $id), 0, 10);\n\n\t\tif ($code == $m) {\n\t\t\tif (defined('AUTO_APPROVE_INSTRUCTORS') && AUTO_APPROVE_INSTRUCTORS) {\n\t\t\t\t$sql = \"UPDATE %smembers SET status=\".AT_STATUS_INSTRUCTOR.\", creation_date=creation_date, last_login=NOW() WHERE member_id=%d\";\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\t$sql = \"UPDATE %smembers SET status=\".AT_STATUS_STUDENT.\", creation_date=creation_date, last_login=NOW() WHERE member_id=%d\";\n\t\t\t}\n\t\t\t$result = queryDB($sql, array(TABLE_PREFIX, $id));\n\n\t\t\tif (isset($_REQUEST[\"en_id\"]) && $_REQUEST[\"en_id\"] <> \"\")\n\t\t\t{\n\t\t\t\t$msg->addFeedback('CONFIRM_GOOD');\n\n\t\t\t\t$member_id\t= $id;\n\t\t\t\trequire (AT_INCLUDE_PATH.'html/auto_enroll_courses.inc.php');\n\t\t\t\tunset($_SESSION['valid_user']);\n\t\t\t\tunset($_SESSION['member_id']);\n\t\t\t\t\n\t\t\t\t$table_title=\"\n\t\t\t\t<div class=\\\"row\\\">\n\t\t\t\t\t<h3>\" . _AT('auto_enrolled_msg'). \"<br /></h3>\n\t\t\t\t</div>\";\n\t\t\n\t\t\t\trequire(AT_INCLUDE_PATH.'header.inc.php');\n\t\t\t\techo \"<div class=\\\"input-form\\\">\";\n\t\t\t\trequire(AT_INCLUDE_PATH.'html/auto_enroll_list_courses.inc.php');\n\t\t\t\techo '<p style=\"text-align:center\"><a href=\"'. $_SERVER['PHP_SELF'] . '?auto_login=1&member_id='. $id .'\">' . _AT(\"go_to_my_start_page\") . '</a></p>';\n\t\t\t\techo \"</div>\";\n\t\t\t\trequire(AT_INCLUDE_PATH.'footer.inc.php');\n\t\t\t\texit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg->addFeedback('CONFIRM_GOOD');\n\t\t\t\t\n\t\t\t\t// enable auto login student into \"my start page\"\n\t\t\t\t$_REQUEST[\"auto_login\"] = 1;\n\t\t\t\t$_REQUEST[\"member_id\"] = $id;\n\t\t\t}\n\t\t} else {\n\t\t\t$msg->addError('CONFIRM_BAD');\n\t\t}\n\t} else {\n\t\t$msg->addError('CONFIRM_BAD');\n\t}\n} else if (isset($_POST['submit'])) {\n\t$_POST['email'] = $addslashes($_POST['email']);\n\n\t$sql    = \"SELECT member_id, email, creation_date, status FROM %smembers WHERE email='%s'\";\n\t$row = queryDB($sql, array(TABLE_PREFIX, $_POST['email']), TRUE);\n\tif ($row['creation_date'] != '') {\n\t\tif ($row['status'] == AT_STATUS_UNCONFIRMED) {\n\t\t\t$code = substr(md5($row['email'] . $row['creation_date']. $row['member_id']), 0, 10);\n\t\t\t\n\t\t\tif ($_POST[\"en_id\"] <> \"\")\n\t\t\t\t$confirmation_link = $_base_href . 'confirm.php?id='.$row['member_id'].SEP.'m='.$code.'&en_id='.$_POST[\"en_id\"];\n\t\t\telse\n\t\t\t\t$confirmation_link = $_base_href . 'confirm.php?id='.$row['member_id'].SEP.'m='.$code;\n\n\t\t\t/* send the email confirmation message: */\n\t\t\trequire(AT_INCLUDE_PATH . 'classes/phpmailer/atutormailer.class.php');\n\t\t\t$mail = new ATutorMailer();\n\n\t\t\t$mail->From     = $_config['contact_email'];\n\t\t\t$mail->AddAddress($row['email']);\n\t\t\t$mail->Subject = SITE_NAME . ': ' . _AT('email_confirmation_subject');\n\t\t\t$mail->Body    = _AT('email_confirmation_message', $_base_href, $confirmation_link).\"\\n\\n\";\n\t\t\t$mail->Send();\n\n\t\t\t$msg->addFeedback('CONFIRMATION_SENT');\n\t\t} else {\n\t\t\t$msg->addFeedback('ACCOUNT_CONFIRMED');\n\t\t}\n\n\t\theader('Location: '.$_base_href.'login.php');\n\t\texit;\n\t} else {\n\t\t$msg->addError('EMAIL_NOT_FOUND');\n\t}\n}\n\nif (isset($_REQUEST['auto_login']))\n{\n\t\n\t$sql = \"SELECT M.member_id, M.login, M.preferences, M.language FROM %smembers M WHERE M.member_id=%d\";\n\t$row = queryDB($sql, array(TABLE_PREFIX, $_REQUEST[\"member_id\"]), TRUE);\n\t\n\tif ($row['member_id'] != '') \n\t{\n\t\t$_SESSION['valid_user'] = true;\n\t\t$_SESSION['member_id']\t= $_REQUEST[\"member_id\"];\n\t\t$_SESSION['course_id']  = 0;\n\t\t$_SESSION['login']\t\t= $row[login];\n\t\tif ($row['preferences'] == \"\")\n\t\t\tassign_session_prefs(unserialize(stripslashes($_config[\"pref_defaults\"])), 1);\n\t\telse\n\t\t\tassign_session_prefs(unserialize(stripslashes($row['preferences'])), 1);\n\t\t$_SESSION['is_guest']\t= 0;\n\t\t$_SESSION['lang']\t\t= $row[lang];\n\t\tsession_write_close();\n\n\t\theader('Location: '.AT_BASE_HREF.'bounce.php?course='.$_POST['course']);\n\t\texit;\n\t}\n}\n\nrequire(AT_INCLUDE_PATH.'header.inc.php'); \n\n$savant->display('confirm.tmpl.php');\n\nrequire(AT_INCLUDE_PATH.'footer.inc.php'); \n?>"], "fixing_code": ["<?php\n/************************************************************************/\n/* ATutor\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*/\n/************************************************************************/\n/* Copyright (c) 2002-2010                                              */\n/* Inclusive Design Institute                                           */\n/* http://atutor.ca                                                     */\n/* This program is free software. You can redistribute it and/or        */\n/* modify it under the terms of the GNU General Public License          */\n/* as published by the Free Software Foundation.                        */\n/************************************************************************/\n// $Id$\n//http://localhost/atutorgit/confirm.php?id=18&m=3a4f4d38ba \n$_user_location = 'public';\n\ndefine('AT_INCLUDE_PATH', 'include/');\nrequire(AT_INCLUDE_PATH.'vitals.inc.php');\n\nif (isset($_POST['cancel'])) {\n\t$msg->addFeedback('CANCELLED');\n\theader('Location: '.$_base_href.'login.php');\n\texit;\n}\n\nif (isset($_GET['e'], $_GET['id'], $_GET['m'])) {\n\t$id = intval($_GET['id']);\n\t$m  = $_GET['m'];\n\t$e  = $addslashes($_GET['e']);\n \n    $sql    = \"SELECT creation_date FROM %smembers WHERE member_id=%d\";\n\t$row = queryDB($sql, array(TABLE_PREFIX, $id), TRUE);\n\t\n\tif ($row['creation_date'] != '') {\n\t\t$code = substr(md5($e . $row['creation_date'] . $id), 0, 10);\n\n\t\tif ($code == $m) {\n\t\t\t$sql = \"UPDATE %smembers SET email='%s', last_login=NOW(), creation_date=creation_date WHERE member_id=%d\";\n\t\t\t$result = queryDB($sql, array(TABLE_PREFIX, $e, $id));\n\t\t\t$msg->addFeedback('CONFIRM_GOOD');\n\n\t\t\theader('Location: '.$_base_href.'users/index.php');\n\t\t\texit;\n\t\t} else {\n\t\t\t$msg->addError('CONFIRM_BAD');\n\t\t}\n\t} else {\n\t\t$msg->addError('CONFIRM_BAD');\n\t}\n\n} else if (isset($_GET['id'], $_GET['m'])) {\n\t$id = intval($_GET['id']);\n\t$m  = $_GET['m'];\n\t\n\t$sql    = \"SELECT email, creation_date FROM %smembers WHERE member_id=%d AND status=\".AT_STATUS_UNCONFIRMED;\n\t$row = queryDB($sql, array(TABLE_PREFIX, $id), TRUE);\t\n\n\tif ($row['creation_date'] != '') {\n\t\t$code = substr(md5($row['email'] . $row['creation_date'] . $id), 0, 10);\n\n\t\tif ($code == $m) {\n\t\t\tif (defined('AUTO_APPROVE_INSTRUCTORS') && AUTO_APPROVE_INSTRUCTORS) {\n\t\t\t\t$sql = \"UPDATE %smembers SET status=\".AT_STATUS_INSTRUCTOR.\", creation_date=creation_date, last_login=NOW() WHERE member_id=%d\";\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\t$sql = \"UPDATE %smembers SET status=\".AT_STATUS_STUDENT.\", creation_date=creation_date, last_login=NOW() WHERE member_id=%d\";\n\t\t\t}\n\t\t\t$result = queryDB($sql, array(TABLE_PREFIX, $id));\n\n\t\t\tif (isset($_REQUEST[\"en_id\"]) && $_REQUEST[\"en_id\"] <> \"\")\n\t\t\t{\n\t\t\t\t$msg->addFeedback('CONFIRM_GOOD');\n\n\t\t\t\t$member_id\t= $id;\n\t\t\t\trequire (AT_INCLUDE_PATH.'html/auto_enroll_courses.inc.php');\n\t\t\t\tunset($_SESSION['valid_user']);\n\t\t\t\tunset($_SESSION['member_id']);\n\t\t\t\t\n\t\t\t\t$table_title=\"\n\t\t\t\t<div class=\\\"row\\\">\n\t\t\t\t\t<h3>\" . _AT('auto_enrolled_msg'). \"<br /></h3>\n\t\t\t\t</div>\";\n\t\t\n\t\t\t\trequire(AT_INCLUDE_PATH.'header.inc.php');\n\t\t\t\techo \"<div class=\\\"input-form\\\">\";\n\t\t\t\trequire(AT_INCLUDE_PATH.'html/auto_enroll_list_courses.inc.php');\n\t\t\t\techo '<p style=\"text-align:center\"><a href=\"'. $_SERVER['PHP_SELF'] . '?auto_login=1&member_id='. $id .'&code=' . $code .'\">' . _AT(\"go_to_my_start_page\") . '</a></p>';\n\t\t\t\techo \"</div>\";\n\t\t\t\trequire(AT_INCLUDE_PATH.'footer.inc.php');\n\t\t\t\texit;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t$msg->addFeedback('CONFIRM_GOOD');\n\t\t\t\t\n\t\t\t\t// enable auto login student into \"my start page\"\n\t\t\t\t$_REQUEST[\"auto_login\"] = 1;\n\t\t\t\t$_REQUEST[\"member_id\"] = $id;\n\t\t\t\t$_REQUEST[\"code\"] = $code;\n\t\t\t}\n\t\t} else {\n\t\t\t$msg->addError('CONFIRM_BAD');\n\t\t}\n\t} else {\n\t\t$msg->addError('CONFIRM_BAD');\n\t}\n} else if (isset($_POST['submit'])) {\n\t$_POST['email'] = $addslashes($_POST['email']);\n\n\t$sql    = \"SELECT member_id, email, creation_date, status FROM %smembers WHERE email='%s'\";\n\t$row = queryDB($sql, array(TABLE_PREFIX, $_POST['email']), TRUE);\n\tif ($row['creation_date'] != '') {\n\t\tif ($row['status'] == AT_STATUS_UNCONFIRMED) {\n\t\t\t$code = substr(md5($row['email'] . $row['creation_date']. $row['member_id']), 0, 10);\n\t\t\t\n\t\t\tif ($_POST[\"en_id\"] <> \"\")\n\t\t\t\t$confirmation_link = $_base_href . 'confirm.php?id='.$row['member_id'].SEP.'m='.$code.'&en_id='.$_POST[\"en_id\"];\n\t\t\telse\n\t\t\t\t$confirmation_link = $_base_href . 'confirm.php?id='.$row['member_id'].SEP.'m='.$code;\n\n\t\t\t/* send the email confirmation message: */\n\t\t\trequire(AT_INCLUDE_PATH . 'classes/phpmailer/atutormailer.class.php');\n\t\t\t$mail = new ATutorMailer();\n\n\t\t\t$mail->From     = $_config['contact_email'];\n\t\t\t$mail->AddAddress($row['email']);\n\t\t\t$mail->Subject = SITE_NAME . ': ' . _AT('email_confirmation_subject');\n\t\t\t$mail->Body    = _AT('email_confirmation_message', $_base_href, $confirmation_link).\"\\n\\n\";\n\t\t\t$mail->Send();\n\n\t\t\t$msg->addFeedback('CONFIRMATION_SENT');\n\t\t} else {\n\t\t\t$msg->addFeedback('ACCOUNT_CONFIRMED');\n\t\t}\n\n\t\theader('Location: '.$_base_href.'login.php');\n\t\texit;\n\t} else {\n\t\t$msg->addError('EMAIL_NOT_FOUND');\n\t}\n}\n\nif (isset($_REQUEST['auto_login']))\n{\n\t\n\t$sql = \"SELECT M.member_id, M.login, M.preferences, M.language FROM %smembers M WHERE M.member_id=%d\";\n\t$row = queryDB($sql, array(TABLE_PREFIX, $_REQUEST[\"member_id\"]), TRUE);\n\n\t$code = substr(md5($e . $row['creation_date'] . $id), 0, 10);\n\t\n\tif ($row['member_id'] != '' && isset($_REQUEST['code']) && $_REQUEST['code'] == $code) \n\t{\n\t\t$_SESSION['valid_user'] = true;\n\t\t$_SESSION['member_id']\t= $_REQUEST[\"member_id\"];\n\t\t$_SESSION['course_id']  = 0;\n\t\t$_SESSION['login']\t\t= $row[login];\n\t\tif ($row['preferences'] == \"\")\n\t\t\tassign_session_prefs(unserialize(stripslashes($_config[\"pref_defaults\"])), 1);\n\t\telse\n\t\t\tassign_session_prefs(unserialize(stripslashes($row['preferences'])), 1);\n\t\t$_SESSION['is_guest']\t= 0;\n\t\t$_SESSION['lang']\t\t= $row[lang];\n\t\tsession_write_close();\n\n\t\theader('Location: '.AT_BASE_HREF.'bounce.php?course='.$_POST['course']);\n\t\texit;\n\t}\n}\n\nrequire(AT_INCLUDE_PATH.'header.inc.php'); \n\n$savant->display('confirm.tmpl.php');\n\nrequire(AT_INCLUDE_PATH.'footer.inc.php'); \n?>"], "filenames": ["confirm.php"], "buggy_code_start_loc": [85], "buggy_code_end_loc": [147], "fixing_code_start_loc": [85], "fixing_code_end_loc": [150], "type": "CWE-287", "message": "confirm.php in ATutor 2.2 and earlier allows remote attackers to bypass authentication and gain access as an existing user via the auto_login parameter.", "other": {"cve": {"id": "CVE-2014-9753", "sourceIdentifier": "cve@mitre.org", "published": "2020-02-11T18:15:16.277", "lastModified": "2020-02-12T21:31:04.690", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "confirm.php in ATutor 2.2 and earlier allows remote attackers to bypass authentication and gain access as an existing user via the auto_login parameter."}, {"lang": "es", "value": "El archivo confirm.php en ATutor versiones 2.2 y anteriores, permite a atacantes remotos omitir la autenticaci\u00f3n y conseguir acceso como un usuario existente por medio del par\u00e1metro auto_login."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-287"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:atutor:atutor:*:*:*:*:*:*:*:*", "versionEndIncluding": "2.2", "matchCriteriaId": "6EAF9407-F583-4071-939E-6F65F744452C"}]}]}], "references": [{"url": "http://karmainsecurity.com/KIS-2015-06", "source": "cve@mitre.org", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "http://seclists.org/fulldisclosure/2015/Nov/11", "source": "cve@mitre.org", "tags": ["Exploit", "Mailing List", "Third Party Advisory"]}, {"url": "https://github.com/atutor/ATutor/commit/950a0299954e69b8742cc1f1a632f564435d4d7d", "source": "cve@mitre.org", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/atutor/ATutor/commit/950a0299954e69b8742cc1f1a632f564435d4d7d"}}