{"buggy_code": ["/*! git-pull-or-clone. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = gitPullOrClone\n\nconst crossSpawn = require('cross-spawn')\nconst debug = require('debug')('git-pull-or-clone')\nconst fs = require('fs')\n\nfunction gitPullOrClone (url, outPath, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  const depth = opts.depth == null ? 1 : opts.depth\n\n  if (depth <= 0) {\n    throw new RangeError('The \"depth\" option must be greater than 0')\n  }\n\n  fs.access(outPath, fs.R_OK | fs.W_OK, function (err) {\n    if (err) {\n      gitClone()\n    } else {\n      gitPull()\n    }\n  })\n\n  function gitClone () {\n    // --depth implies --single-branch\n    const flag = depth < Infinity ? '--depth=' + depth : '--single-branch'\n    const args = ['clone', flag, url, outPath]\n    debug('git ' + args.join(' '))\n    spawn('git', args, {}, function (err) {\n      if (err) err.message += ' (git clone) (' + url + ')'\n      cb(err)\n    })\n  }\n\n  function gitPull () {\n    const args = depth < Infinity ? ['pull', '--depth=' + depth] : ['pull']\n    debug('git ' + args.join(' '))\n    spawn('git', args, { cwd: outPath }, function (err) {\n      if (err) err.message += ' (git pull) (' + url + ')'\n      cb(err)\n    })\n  }\n}\n\nfunction spawn (command, args, opts, cb) {\n  opts.stdio = debug.enabled ? 'inherit' : 'ignore'\n\n  const child = crossSpawn(command, args, opts)\n  child.on('error', cb)\n  child.on('close', function (code) {\n    if (code !== 0) return cb(new Error('Non-zero exit code: ' + code))\n    cb(null)\n  })\n  return child\n}\n"], "fixing_code": ["/*! git-pull-or-clone. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = gitPullOrClone\n\nconst crossSpawn = require('cross-spawn')\nconst debug = require('debug')('git-pull-or-clone')\nconst fs = require('fs')\n\nfunction gitPullOrClone (url, outPath, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  const depth = opts.depth == null ? 1 : opts.depth\n\n  if (depth <= 0) {\n    throw new RangeError('The \"depth\" option must be greater than 0')\n  }\n\n  fs.access(outPath, fs.R_OK | fs.W_OK, function (err) {\n    if (err) {\n      gitClone()\n    } else {\n      gitPull()\n    }\n  })\n\n  function gitClone () {\n    // --depth implies --single-branch\n    const flag = depth < Infinity ? '--depth=' + depth : '--single-branch'\n    const args = ['clone', flag, '--', url, outPath]\n    debug('git ' + args.join(' '))\n    spawn('git', args, {}, function (err) {\n      if (err) err.message += ' (git clone) (' + url + ')'\n      cb(err)\n    })\n  }\n\n  function gitPull () {\n    const args = depth < Infinity ? ['pull', '--depth=' + depth] : ['pull']\n    debug('git ' + args.join(' '))\n    spawn('git', args, { cwd: outPath }, function (err) {\n      if (err) err.message += ' (git pull) (' + url + ')'\n      cb(err)\n    })\n  }\n}\n\nfunction spawn (command, args, opts, cb) {\n  opts.stdio = debug.enabled ? 'inherit' : 'ignore'\n\n  const child = crossSpawn(command, args, opts)\n  child.on('error', cb)\n  child.on('close', function (code) {\n    if (code !== 0) return cb(new Error('Non-zero exit code: ' + code))\n    cb(null)\n  })\n  return child\n}\n"], "filenames": ["index.js"], "buggy_code_start_loc": [31], "buggy_code_end_loc": [32], "fixing_code_start_loc": [31], "fixing_code_end_loc": [32], "type": "CWE-77", "message": "The package git-pull-or-clone before 2.0.2 are vulnerable to Command Injection due to the use of the --upload-pack feature of git which is also supported for git clone. The source includes the use of the secure child process API spawn(). However, the outpath parameter passed to it may be a command-line argument to the git clone command and result in arbitrary command injection.", "other": {"cve": {"id": "CVE-2022-24437", "sourceIdentifier": "report@snyk.io", "published": "2022-05-01T16:15:08.423", "lastModified": "2022-05-11T15:53:00.647", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The package git-pull-or-clone before 2.0.2 are vulnerable to Command Injection due to the use of the --upload-pack feature of git which is also supported for git clone. The source includes the use of the secure child process API spawn(). However, the outpath parameter passed to it may be a command-line argument to the git clone command and result in arbitrary command injection."}, {"lang": "es", "value": "El paquete git-pull-or-clone versiones anteriores a 2.0.2, es vulnerable a una inyecci\u00f3n de comandos debido al uso de la funci\u00f3n --upload-pack de git, que tambi\u00e9n es compatible con git clone. La fuente incluye el uso de la API spawn() del proceso hijo seguro. Sin embargo, el par\u00e1metro outpath que le es pasado puede ser un argumento de la l\u00ednea de comandos del comando git clone y resultar en una inyecci\u00f3n arbitraria de comandos"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}, {"source": "report@snyk.io", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.8, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.9, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:N/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "NONE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 7.5}, "baseSeverity": "HIGH", "exploitabilityScore": 10.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-77"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:git-pull-or-clone_project:git-pull-or-clone:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "2.0.2", "matchCriteriaId": "D276D621-9F16-483B-B40B-48C6CB75F043"}]}]}], "references": [{"url": "https://gist.github.com/lirantal/327e9dd32686991b5a1fa6341aac2e7b", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/feross/git-pull-or-clone/commit/f9ce092be13cc32e685dfa26e7705e9c6e3108a3", "source": "report@snyk.io", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://snyk.io/vuln/SNYK-JS-GITPULLORCLONE-2434307", "source": "report@snyk.io", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/feross/git-pull-or-clone/commit/f9ce092be13cc32e685dfa26e7705e9c6e3108a3"}}