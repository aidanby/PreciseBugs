{"buggy_code": ["Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: %(subject_header_value)s\nMIME-Version: 1.0\nContent-Type: multipart/alternative; \n\tboundary=\"7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\"\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHi,\n\n%(sender_display_name)s has invited you into a room %(bracketed_room_name)s on\nMatrix. To join the conversation, either pick a Matrix client from\nhttps://matrix.org/docs/projects/try-matrix-now.html or use the single-click\nlink below to join via Element (requires Chrome, Firefox, Safari, iOS or Android)\n\n%(web_client_location)/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fmatrix.org%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\n\n\nAbout Matrix:\n\nMatrix.org is an open standard for interoperable, decentralised, real-time communication\nover IP, supporting group chat, file transfer, voice and video calling, integrations to\nother apps, bridges to other communication systems and much more. It can be used to power\nInstant Messaging, VoIP/WebRTC signalling, Internet of Things communication - or anywhere\nyou need a standard HTTP API for publishing and subscribing to data whilst tracking the\nconversation history.\n\nMatrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.\n\nThanks,\n\nMatrix\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: multipart/related;\n\tboundary=\"M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR\";\n\ttype=\"text/html\"\n\n--M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <style type=\"text/css\">\nbody {\n    margin: 0px;\n}\n\npre, code {\n    word-break: break-word;\n    white-space: pre-wrap;\n}\n\n#page {\n    font-family: 'Open Sans', Helvetica, Arial, Sans-Serif;\n    font-color: #454545;\n    font-size: 12pt;\n    width: 100%%;\n    padding: 20px;\n}\n\n#inner {\n    width: 640px;\n}\n\n.header {\n    width: 100%%;\n    height: 87px;\n    color: #454545;\n    border-bottom: 4px solid #e5e5e5;\n}\n\n.logo {\n    text-align: right;\n    margin-left: 20px;\n}\n        </style>\n    </head>\n    <body>\n        <table id=\"page\">\n            <tr>\n                <td> </td>\n                <td id=\"inner\">\n                    <table class=\"header\">\n                        <tr>\n                            <td>\n                            </td>\n                            <td class=\"logo\">\n                                    <img src=\"http://matrix.org/img/matrix-120x51.png\" width=\"120\" height=\"51\" alt=\"[matrix]\"/>\n                            </td>\n                        </tr>\n                    </table>\n\n<p>Hi,</p>\n\n<p>%(sender_display_name_forhtml)s has invited you into a room %(bracketed_room_name_forhtml)s on\nMatrix. To join the conversation, either <a href=\"https://matrix.org/docs/projects/try-matrix-now.html\">pick a Matrix client</a> or use the single-click\nlink below to join via Element (requires\n<a href=\"https://www.google.com/chrome\">Chrome</a>,\n<a href=\"https://www.getfirefox.com\">Firefox</a> or\n<a href=\"https://www.apple.com/safari\">Safari</a> on the web,\nor iOS or Android on mobile.)</p>\n</p>\n\n<p>\n    <a\n    href=\"https://app.element.io/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fmatrix.org%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\">Join the conversation.</a>\n</p>\n\n<br>\n<p>About Matrix:</p>\n\n<p>Matrix.org is an open standard for interoperable, decentralised, real-time communication\nover IP, supporting group chat, file transfer, voice and video calling, integrations to\nother apps, bridges to other communication systems and much more. It can be used to power\nInstant Messaging, VoIP/WebRTC signalling, Internet of Things communication - or anywhere\nyou need a standard HTTP API for publishing and subscribing to data whilst tracking the\nconversation history.</p>\n\n<p>Matrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.</p>\n\n<p>Thanks,</p>\n\n<p>Matrix</p>\n                </td>\n                <td> </td>\n            </tr>\n        </table>\n    </body>\n</html>\n--M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR--\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ--\n", "Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: Confirm your email address for Matrix\nMIME-Version: 1.0\nContent-Type: multipart/alternative; \n\tboundary=\"7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\"\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHello,\n\nWe have received a request to use this email address with a matrix.org identity\nserver. If this was you who made this request, you may use the following link\nto complete the verification of your email address:\n\n%(link)s\n\nIf your client requires a code, the code is %(token)s\n\nIf you aren't aware of making such a request, please disregard this email.\n\n\nAbout Matrix:\n\nMatrix is an open standard for interoperable, decentralised, real-time communication\nover IP. It can be used to power Instant Messaging, VoIP/WebRTC signalling, Internet\nof Things communication - or anywhere you need a standard HTTP API for publishing and\nsubscribing to data whilst tracking the conversation history.\n\nMatrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\" />\n<title></title>\n<style>\nbody {\n    font-family: \"Myriad Pro\", \"Myriad\", Helvetica, Arial, sans-serif;\n    font-size: 12pt;\n    margin: 0px;\n}\n</style>\n</head>\n<body>\n<p>Hello,</p>\n\n<p>We have received a request to use this email address with a matrix.org\nidentity server. If this was you who made this request, you may use the\nfollowing link to complete the verification of your email address:</p>\n\n<p><a href=\"%(link)s\">Complete email verification</a></p>\n\n<p>...or copy this link into your web browser:</p>\n\n<p>%(link)s</p>\n\n<p>If your client requires a code, the code is %(token)s</p>\n\n<p>If you aren't aware of making such a request, please disregard this\nemail.</p>\n\n<br>\n<p>About Matrix:</p>\n\n<p>Matrix is an open standard for interoperable, decentralised, real-time communication\nover IP. It can be used to power Instant Messaging, VoIP/WebRTC signalling, Internet\nof Things communication - or anywhere you need a standard HTTP API for publishing and\nsubscribing to data whilst tracking the conversation history.</p>\n\n<p>Matrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.</p>\n\n</body>\n</html>\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ--\n", "Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: %(subject_header_value)s\nMIME-Version: 1.0\nContent-Type: multipart/alternative; \n\tboundary=\"7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\"\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHi,\n\n%(sender_display_name)s has invited you into a room %(bracketed_room_name)s on\nElement. To join the conversation please follow the link below.\n\n%(web_client_location)/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fvector.im%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\n\nElement is an open source collaboration app built on the Matrix.org\nopen standard for interoperable communication: supporting group chat,\nfile transfer, voice and video calling, integrations to other apps, bridges\nto other communication systems and much more.\n\nPlease note that you will need to use Chrome, Firefox or Safari on the web, or\niOS or Android on mobile.\n\nThanks,\n\nElement\n\n\nAbout Element:\n\nBreak through - Element allows teams to communicate across a wide range of collaboration\napps. If some team members use Element while others use IRC, Slack or Gitter, Element will\nallow these team members to seamlessly work together. Element offers the richest\nnetwork of communication bridges.\n\nOwn Your Own Data - No one should control your communication and data but you. Element\nlets you run your own server, and provides users and teams with the most advanced\ncrypto ratchet technology available today for a decentralized secure Internet.\n\nOpen Source - Element is entirely open source: all the code is published on GitHub\n(Apache License) for anyone to see and extend. This means teams can customize or\ncontribute to the code and everyone can benefit from the speed of community innovation.\n\nMade on Matrix - Element is built on top of Matrix. Matrix is an open network for secure,\ndecentralized communication delivering a community of users, bridged networks,\nintegrated bots and applications plus full end-to-end encryption. To learn more about\nMatrix visit https://matrix.org.\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: multipart/related;\n\tboundary=\"M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR\";\n\ttype=\"text/html\"\n\n--M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <style type=\"text/css\">\nbody {\n    margin: 0px;\n}\n\npre, code {\n    word-break: break-word;\n    white-space: pre-wrap;\n}\n\n#page {\n    font-family: 'Open Sans', Helvetica, Arial, Sans-Serif;\n    font-color: #454545;\n    font-size: 12pt;\n    width: 100%%;\n    padding: 20px;\n}\n\n#inner {\n    width: 640px;\n}\n\n.header {\n    width: 100%%;\n    height: 87px;\n    color: #454545;\n    border-bottom: 4px solid #e5e5e5;\n}\n\n.logo {\n    text-align: right;\n    margin-left: 20px;\n}\n\n.header {\n    border-bottom: 4px solid #e4f7ed ! important;\n}\n\n.notif_link a, .footer a {\n    color: #76CFA6 ! important;\n}\n        </style>\n    </head>\n    <body>\n        <table id=\"page\">\n            <tr>\n                <td> </td>\n                <td id=\"inner\">\n                    <table class=\"header\">\n                        <tr>\n                            <td>\n                            </td>\n                            <td class=\"logo\">\n                                    <img src=\"https://static.element.io/images/email-logo.png\" width=\"64\" height=\"64\" alt=\"Element\"/>\n                            </td>\n                        </tr>\n                    </table>\n\n<p>Hi,</p>\n\n<p>%(sender_display_name_forhtml)s has invited you into a room %(bracketed_room_name_forhtml)s on\nElement.</p>\n\n<p>\n    <a\n    href=\"https://app.element.io/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fvector.im%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\">Join the conversation.</a>\n</p>\n\n<p>Element is an open source collaboration app built on the Matrix.org\nopen standard for interoperable communication: supporting group chat, file\ntransfer, voice and video calling, integrations to other apps, bridges\nto other communication systems and much more.</p>\n\n<p>Please note that Element requires\n<a href=\"https://www.google.com/chrome\">Chrome</a>,\n<a href=\"https://www.getfirefox.com\">Firefox</a> or\n<a href=\"https://www.apple.com/safari\">Safari</a> on the web,\nor iOS or Android on mobile.</p>\n\n<p>Thanks,</p>\n\n<p>Element</p>\n\n<br>\n<p>About Element:</p>\n\n<p><em>Break through</em> - Element allows teams to communicate across a wide range of collaboration\napps. If some team members use Element while others use IRC, Slack or Gitter, Element will\nallow these team members to seamlessly work together. Element offers the richest\nnetwork of communication bridges.</p>\n\n<p><em>Own Your Own Data</em> - No one should control your communication and data but you. Element\nlets you run your own server, and provides users and teams with the most advanced\ncrypto ratchet technology available today for a decentralized secure Internet.</p>\n\n<p><em>Open Source</em> - Element is entirely open source: all the code is published on GitHub\n(Apache License) for anyone to see and extend. This means teams can customize or\ncontribute to the code and everyone can benefit from the speed of community innovation.</p>\n\n<p><em>Made on Matrix</em> - Element is built on top of Matrix. Matrix is an open network for secure,\ndecentralized communication delivering a community of users, bridged networks,\nintegrated bots and applications plus full end-to-end encryption. To learn more about\nMatrix visit https://matrix.org.</p>\n\n                </td>\n                <td> </td>\n            </tr>\n        </table>\n    </body>\n</html>\n--M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR--\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ--\n", "Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: Confirm your email address for Element\nMIME-Version: 1.0\nContent-Type: multipart/alternative; \n\tboundary=\"7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\"\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHello there!\n\nYou have asked us to register this email address with element.io - the open source,\ndistributed and secure shared workspace for the web that's built on Matrix.\n\nIf it was really you who made this request, you can click on the following link to\ncomplete the verification of your email address:\n\n%(link)s\n\nPlease note that you will need to use Chrome, Firefox or Safari on the web, or\niOS or Android on mobile.\n\nIf you didn't make this request, you can safely disregard this email.\n\nThanks!\n\nElement\n\n\nAbout Element:\n\nBreak through - Element allows teams to communicate across a wide range of collaboration\napps. If some team members use Element while others use IRC, Slack or Gitter, Element will\nallow these team members to seamlessly work together. Element offers the richest\nnetwork of communication bridges.\n\nOwn Your Own Data - No one should control your communication and data but you. Element\nlets you run your own server, and provides users and teams with the most advanced\ncrypto ratchet technology available today for a decentralized secure Internet.\n\nOpen Source - Element is entirely open source: all the code is published on GitHub\n(Apache License) for anyone to see and extend. This means teams can customize or\ncontribute to the code and everyone can benefit from the speed of community innovation.\n\nMade on Matrix - Element is built on top of Matrix. Matrix is an open network for secure,\ndecentralized communication delivering a community of users, bridged networks,\nintegrated bots and applications plus full end-to-end encryption. To learn more about\nMatrix visit https://matrix.org.\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ\nContent-Type: multipart/related;\n\tboundary=\"M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR\";\n\ttype=\"text/html\"\n\n--M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <style type=\"text/css\">\nbody {\n    margin: 0px;\n}\n\npre, code {\n    word-break: break-word;\n    white-space: pre-wrap;\n}\n\n#page {\n    font-family: 'Open Sans', Helvetica, Arial, Sans-Serif;\n    font-color: #454545;\n    font-size: 12pt;\n    width: 100%%;\n    padding: 20px;\n}\n\n#inner {\n    width: 640px;\n}\n\n.header {\n    width: 100%%;\n    height: 87px;\n    color: #454545;\n    border-bottom: 4px solid #e5e5e5;\n}\n\n.logo {\n    text-align: right;\n    margin-left: 20px;\n}\n\n.header {\n    border-bottom: 4px solid #e4f7ed ! important;\n}\n\n\n.notif_link a, .footer a {\n    color: #76CFA6 ! important;\n}\n        </style>\n    </head>\n    <body>\n        <table id=\"page\">\n            <tr>\n                <td> </td>\n                <td id=\"inner\">\n                    <table class=\"header\">\n                        <tr>\n                            <td>\n                            </td>\n                            <td class=\"logo\">\n                                    <img src=\"https://static.element.io/images/email-logo.png\" width=\"64\" height=\"64\" alt=\"Element\"/>\n                            </td>\n                        </tr>\n                    </table>\n\n                    <p>Hello there!</p>\n\n                    <p>You have asked us to register this email address with element.io - the open source,\n                    distributed and secure shared workspace for the web that's built on Matrix.</p>\n\n                    <p>If it was really you who made this request, you can click on the following link to\n                    complete the verification of your email address:</p>\n\n                    <p><a href=\"%(link)s\">Complete email verification</a></p>\n\n                    <p>Please note that Element requires\n                    <a href=\"https://www.google.com/chrome\">Chrome</a>,\n                    <a href=\"https://www.getfirefox.com\">Firefox</a> or\n                    <a href=\"https://www.apple.com/safari\">Safari</a> on the web,\n                    or iOS or Android on mobile.</p>\n\n                    <p>If you didn't make this request, you can safely disregard this email.</p>\n\n                    <p>Thanks!</p>\n\n                    <p>Element</p>\n\n                    <br>\n                    <p>About Element:</p>\n\n                    <p><em>Break through</em> - Element allows teams to communicate across a wide range of collaboration\n                    apps. If some team members use Element while others use IRC, Slack or Gitter, Element will\n                    allow these team members to seamlessly work together. Element offers the richest\n                    network of communication bridges.</p>\n\n                    <p><em>Own Your Own Data</em> - No one should control your communication and data but you. Element\n                    lets you run your own server, and provides users and teams with the most advanced\n                    crypto ratchet technology available today for a decentralized secure Internet.</p>\n\n                    <p><em>Open Source</em> - Element is entirely open source: all the code is published on GitHub\n                    (Apache License) for anyone to see and extend. This means teams can customize or\n                    contribute to the code and everyone can benefit from the speed of community innovation.</p>\n\n                    <p><em>Made on Matrix</em> - Element is built on top of Matrix. Matrix is an open network for secure,\n                    decentralized communication delivering a community of users, bridged networks,\n                    integrated bots and applications plus full end-to-end encryption. To learn more about\n                    Matrix visit https://matrix.org.</p>\n\n                </td>\n                <td> </td>\n            </tr>\n        </table>\n    </body>\n</html>\n--M3yzHl5YZehm9v4bAM8sKEdcOoVnRnKR--\n\n--7REaIwWQCioQ6NaBlAQlg8ztbUQj6PKJ--\n", "# -*- coding: utf-8 -*-\n\n# Copyright 2015 OpenMarket Ltd\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nfrom __future__ import absolute_import\n\nimport nacl.signing\nimport random\nimport string\nfrom email.header import Header\n\nfrom six import string_types\nfrom twisted.web.resource import Resource\nfrom unpaddedbase64 import encode_base64\n\nfrom sydent.db.invite_tokens import JoinTokenStore\nfrom sydent.db.threepid_associations import GlobalAssociationStore\n\nfrom sydent.http.servlets import get_args, send_cors, jsonwrap\nfrom sydent.http.auth import authV2\nfrom sydent.util.emailutils import sendEmail\n\n\nclass StoreInviteServlet(Resource):\n    def __init__(self, syd, require_auth=False):\n        self.sydent = syd\n        self.random = random.SystemRandom()\n        self.require_auth = require_auth\n\n    @jsonwrap\n    def render_POST(self, request):\n        send_cors(request)\n\n        if self.require_auth:\n            authV2(self.sydent, request)\n\n        args = get_args(request, (\"medium\", \"address\", \"room_id\", \"sender\",))\n        medium = args[\"medium\"]\n        address = args[\"address\"]\n        roomId = args[\"room_id\"]\n        sender = args[\"sender\"]\n\n        globalAssocStore = GlobalAssociationStore(self.sydent)\n        mxid = globalAssocStore.getMxid(medium, address)\n        if mxid:\n            request.setResponseCode(400)\n            return {\n                \"errcode\": \"M_THREEPID_IN_USE\",\n                \"error\": \"Binding already known\",\n                \"mxid\": mxid,\n            }\n\n        if medium != \"email\":\n            request.setResponseCode(400)\n            return {\n                \"errcode\": \"M_UNRECOGNIZED\",\n                \"error\": \"Didn't understand medium '%s'\" % (medium,),\n            }\n\n        token = self._randomString(128)\n\n        tokenStore = JoinTokenStore(self.sydent)\n\n        ephemeralPrivateKey = nacl.signing.SigningKey.generate()\n        ephemeralPublicKey = ephemeralPrivateKey.verify_key\n\n        ephemeralPrivateKeyBase64 = encode_base64(ephemeralPrivateKey.encode(), True)\n        ephemeralPublicKeyBase64 = encode_base64(ephemeralPublicKey.encode(), True)\n\n        tokenStore.storeEphemeralPublicKey(ephemeralPublicKeyBase64)\n        tokenStore.storeToken(medium, address, roomId, sender, token)\n\n        # Variables to substitute in the template.\n        substitutions = {}\n        # Include all arguments sent via the request.\n        for k, v in args.items():\n            if isinstance(v, string_types):\n                substitutions[k] = v\n        substitutions[\"token\"] = token\n\n        # Substitutions that the template requires, but are optional to provide\n        # to the API.\n        extra_substitutions = [\n            'sender_display_name',\n            'token',\n            'room_name',\n            'bracketed_room_name',\n            'room_avatar_url',\n            'sender_avatar_url',\n            'guest_user_id',\n            'guest_access_token',\n        ]\n        for k in extra_substitutions:\n            substitutions.setdefault(k, '')\n\n        substitutions[\"ephemeral_private_key\"] = ephemeralPrivateKeyBase64\n        if substitutions[\"room_name\"] != '':\n            substitutions[\"bracketed_room_name\"] = \"(%s)\" % substitutions[\"room_name\"]\n\n        substitutions[\"web_client_location\"] = self.sydent.default_web_client_location\n        if 'org.matrix.web_client_location' in substitutions:\n            substitutions[\"web_client_location\"] = substitutions.pop(\"org.matrix.web_client_location\")\n\n        subject_header = Header(self.sydent.cfg.get('email', 'email.invite.subject', raw=True) % substitutions, 'utf8')\n        substitutions[\"subject_header_value\"] = subject_header.encode()\n\n        brand = self.sydent.brand_from_request(request)\n        templateFile = self.sydent.get_branded_template(\n            brand,\n            \"invite_template.eml\",\n            ('email', 'email.invite_template'),\n        )\n\n        sendEmail(self.sydent, templateFile, address, substitutions)\n\n        pubKey = self.sydent.keyring.ed25519.verify_key\n        pubKeyBase64 = encode_base64(pubKey.encode())\n\n        baseUrl = \"%s/_matrix/identity/api/v1\" % (self.sydent.cfg.get('http', 'client_http_base'),)\n\n        keysToReturn = []\n        keysToReturn.append({\n            \"public_key\": pubKeyBase64,\n            \"key_validity_url\": baseUrl + \"/pubkey/isvalid\",\n        })\n        keysToReturn.append({\n            \"public_key\": ephemeralPublicKeyBase64,\n            \"key_validity_url\": baseUrl + \"/pubkey/ephemeral/isvalid\",\n        })\n\n        resp = {\n            \"token\": token,\n            \"public_key\": pubKeyBase64,\n            \"public_keys\": keysToReturn,\n            \"display_name\": self.redact_email_address(address),\n        }\n\n        return resp\n\n    def redact_email_address(self, address):\n        \"\"\"\n        Redacts the content of a 3PID address. Redacts both the email's username and\n        domain independently.\n\n        :param address: The address to redact.\n        :type address: unicode\n\n        :return: The redacted address.\n        :rtype: unicode\n        \"\"\"\n        # Extract strings from the address\n        username, domain = address.split(u\"@\", 1)\n\n        # Obfuscate strings\n        redacted_username = self._redact(username, self.sydent.username_obfuscate_characters)\n        redacted_domain = self._redact(domain, self.sydent.domain_obfuscate_characters)\n\n        return redacted_username + u\"@\" + redacted_domain\n\n    def _redact(self, s, characters_to_reveal):\n        \"\"\"\n        Redacts the content of a string, using a given amount of characters to reveal.\n        If the string is shorter than the given threshold, redact it based on length.\n\n        :param s: The string to redact.\n        :type s: unicode\n\n        :param characters_to_reveal: How many characters of the string to leave before\n            the '...'\n        :type characters_to_reveal: int\n\n        :return: The redacted string.\n        :rtype: unicode\n        \"\"\"\n        # If the string is shorter than the defined threshold, redact based on length\n        if len(s) <= characters_to_reveal:\n            if len(s) > 5:\n                return s[:3] + u\"...\"\n            if len(s) > 1:\n                return s[0] + u\"...\"\n            return u\"...\"\n\n        # Otherwise truncate it and add an ellipses\n        return s[:characters_to_reveal] + u\"...\"\n\n    def _randomString(self, length):\n        \"\"\"\n        Generate a random string of the given length.\n\n        :param length: The length of the string to generate.\n        :type length: int\n\n        :return: The generated string.\n        :rtype: unicode\n        \"\"\"\n        return u''.join(self.random.choice(string.ascii_letters) for _ in range(length))\n", "# -*- coding: utf-8 -*-\n\n# Copyright 2014-2015 OpenMarket Ltd\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nfrom __future__ import absolute_import\n\nimport logging\nimport socket\nimport random\nimport smtplib\nimport email.utils\nimport string\nimport twisted.python.log\nimport six\nfrom six.moves import urllib\nfrom six.moves import range\n\nif six.PY2:\n    from cgi import escape\nelse:\n    from html import escape\n\nimport email.utils\n\nfrom sydent.util import time_msec\n\nlogger = logging.getLogger(__name__)\n\n\ndef sendEmail(sydent, templateFile, mailTo, substitutions):\n    \"\"\"\n    Sends an email with the given parameters.\n\n    :param sydent: The Sydent instance to use when building the configuration to send the\n        email with.\n    :type sydent: sydent.sydent.Sydent\n    :param templateFile: The filename of the template to use when building the body of the\n        email.\n    :type templateFile: str\n    :param mailTo: The email address to send the email to.\n    :type mailTo: unicode\n    :param substitutions: The substitutions to use with the template.\n    :type substitutions: dict[str, str]\n    \"\"\"\n    mailFrom = sydent.cfg.get('email', 'email.from')\n\n    myHostname = sydent.cfg.get('email', 'email.hostname')\n    if myHostname == '':\n        myHostname = socket.getfqdn()\n    midRandom = \"\".join([random.choice(string.ascii_letters) for _ in range(16)])\n    messageid = \"<%d%s@%s>\" % (time_msec(), midRandom, myHostname)\n\n    substitutions.update({\n        'messageid': messageid,\n        'date': email.utils.formatdate(localtime=False),\n        'to': mailTo,\n        'from': mailFrom,\n    })\n\n    allSubstitutions = {}\n    for k, v in substitutions.items():\n        allSubstitutions[k] = v\n        allSubstitutions[k+\"_forhtml\"] = escape(v)\n        allSubstitutions[k+\"_forurl\"] = urllib.parse.quote(v)\n\n    mailString = open(templateFile).read() % allSubstitutions\n    parsedFrom = email.utils.parseaddr(mailFrom)[1]\n    parsedTo = email.utils.parseaddr(mailTo)[1]\n    if parsedFrom == '' or parsedTo == '':\n        logger.info(\"Couldn't parse from / to address %s / %s\", mailFrom, mailTo)\n        raise EmailAddressException()\n\n    if parsedTo != mailTo:\n        logger.info(\"Parsed to address changed the address: %s -> %s\", mailTo, parsedTo)\n        raise EmailAddressException()\n\n    mailServer = sydent.cfg.get('email', 'email.smtphost')\n    mailPort = sydent.cfg.get('email', 'email.smtpport')\n    mailUsername = sydent.cfg.get('email', 'email.smtpusername')\n    mailPassword = sydent.cfg.get('email', 'email.smtppassword')\n    mailTLSMode = sydent.cfg.get('email', 'email.tlsmode')\n    logger.info(\"Sending mail to %s with mail server: %s\" % (mailTo, mailServer,))\n    try:\n        if mailTLSMode == 'SSL' or mailTLSMode == 'TLS':\n            smtp = smtplib.SMTP_SSL(mailServer, mailPort, myHostname)\n        elif mailTLSMode == 'STARTTLS':\n            smtp = smtplib.SMTP(mailServer, mailPort, myHostname)\n            smtp.starttls()\n        else:\n            smtp = smtplib.SMTP(mailServer, mailPort, myHostname)\n        if mailUsername != '':\n            smtp.login(mailUsername, mailPassword)\n\n        # We're using the parsing above to do basic validation, but instead of\n        # failing it may munge the address it returns. So we should *not* use\n        # that parsed address, as it may not match any validation done\n        # elsewhere.\n        smtp.sendmail(mailFrom, mailTo, mailString.encode('utf-8'))\n        smtp.quit()\n    except Exception as origException:\n        twisted.python.log.err()\n        ese = EmailSendException()\n        ese.cause = origException\n        raise ese\n\n\nclass EmailAddressException(Exception):\n    pass\n\n\nclass EmailSendException(Exception):\n    pass\n"], "fixing_code": ["Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: %(subject_header_value)s\nMIME-Version: 1.0\nContent-Type: multipart/alternative;\n\tboundary=\"%(multipart_boundary)s\"\n\n--%(multipart_boundary)s\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHi,\n\n%(sender_display_name)s %(bracketed_verified_sender)shas invited you into a room\n%(bracketed_room_name)son Matrix. To join the conversation, either pick a\nMatrix client from https://matrix.org/docs/projects/try-matrix-now.html or use\nthe single-click link below to join via Element (requires Chrome, Firefox,\nSafari, iOS or Android)\n\n%(web_client_location)/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fmatrix.org%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\n\n\nAbout Matrix:\n\nMatrix.org is an open standard for interoperable, decentralised, real-time communication\nover IP, supporting group chat, file transfer, voice and video calling, integrations to\nother apps, bridges to other communication systems and much more. It can be used to power\nInstant Messaging, VoIP/WebRTC signalling, Internet of Things communication - or anywhere\nyou need a standard HTTP API for publishing and subscribing to data whilst tracking the\nconversation history.\n\nMatrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.\n\nThanks,\n\nMatrix\n\n--%(multipart_boundary)s\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <style type=\"text/css\">\nbody {\n    margin: 0px;\n}\n\npre, code {\n    word-break: break-word;\n    white-space: pre-wrap;\n}\n\n#page {\n    font-family: 'Open Sans', Helvetica, Arial, Sans-Serif;\n    font-color: #454545;\n    font-size: 12pt;\n    width: 100%%;\n    padding: 20px;\n}\n\n#low-contrast {\n    color: #666666\n}\n\n#inner {\n    width: 640px;\n}\n\n.header {\n    width: 100%%;\n    height: 87px;\n    color: #454545;\n    border-bottom: 4px solid #e5e5e5;\n}\n\n.logo {\n    text-align: right;\n    margin-left: 20px;\n}\n        </style>\n    </head>\n    <body>\n        <table id=\"page\">\n            <tr>\n                <td> </td>\n                <td id=\"inner\">\n                    <table class=\"header\">\n                        <tr>\n                            <td>\n                            </td>\n                            <td class=\"logo\">\n                                    <img src=\"http://matrix.org/img/matrix-120x51.png\" width=\"120\" height=\"51\" alt=\"[matrix]\"/>\n                            </td>\n                        </tr>\n                    </table>\n\n<p>Hi,</p>\n\n<p>%(sender_display_name_forhtml)s <span class=\"low-contrast\">%(bracketed_verified_sender_for_html)s</span> has invited you into a room %(bracketed_room_name_forhtml)s on\nMatrix. To join the conversation, either <a href=\"https://matrix.org/docs/projects/try-matrix-now.html\">pick a Matrix client</a> or use the single-click\nlink below to join via Element (requires\n<a href=\"https://www.google.com/chrome\">Chrome</a>,\n<a href=\"https://www.getfirefox.com\">Firefox</a> or\n<a href=\"https://www.apple.com/safari\">Safari</a> on the web,\nor iOS or Android on mobile.)</p>\n</p>\n\n<p>\n    <a\n    href=\"https://app.element.io/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fmatrix.org%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\">Join the conversation.</a>\n</p>\n\n<br>\n<p>About Matrix:</p>\n\n<p>Matrix.org is an open standard for interoperable, decentralised, real-time communication\nover IP, supporting group chat, file transfer, voice and video calling, integrations to\nother apps, bridges to other communication systems and much more. It can be used to power\nInstant Messaging, VoIP/WebRTC signalling, Internet of Things communication - or anywhere\nyou need a standard HTTP API for publishing and subscribing to data whilst tracking the\nconversation history.</p>\n\n<p>Matrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.</p>\n\n<p>Thanks,</p>\n\n<p>Matrix</p>\n                </td>\n                <td> </td>\n            </tr>\n        </table>\n    </body>\n</html>\n\n--%(multipart_boundary)s--\n", "Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: Confirm your email address for Matrix\nMIME-Version: 1.0\nContent-Type: multipart/alternative;\n\tboundary=\"%(multipart_boundary)s\"\n\n--%(multipart_boundary)s\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHello,\n\nWe have received a request to use this email address with a matrix.org identity\nserver. If this was you who made this request, you may use the following link\nto complete the verification of your email address:\n\n%(link)s\n\nIf your client requires a code, the code is %(token)s\n\nIf you aren't aware of making such a request, please disregard this email.\n\n\nAbout Matrix:\n\nMatrix is an open standard for interoperable, decentralised, real-time communication\nover IP. It can be used to power Instant Messaging, VoIP/WebRTC signalling, Internet\nof Things communication - or anywhere you need a standard HTTP API for publishing and\nsubscribing to data whilst tracking the conversation history.\n\nMatrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.\n\n--%(multipart_boundary)s\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\" />\n<title></title>\n<style>\nbody {\n    font-family: \"Myriad Pro\", \"Myriad\", Helvetica, Arial, sans-serif;\n    font-size: 12pt;\n    margin: 0px;\n}\n</style>\n</head>\n<body>\n<p>Hello,</p>\n\n<p>We have received a request to use this email address with a matrix.org\nidentity server. If this was you who made this request, you may use the\nfollowing link to complete the verification of your email address:</p>\n\n<p><a href=\"%(link)s\">Complete email verification</a></p>\n\n<p>...or copy this link into your web browser:</p>\n\n<p>%(link)s</p>\n\n<p>If your client requires a code, the code is %(token)s</p>\n\n<p>If you aren't aware of making such a request, please disregard this\nemail.</p>\n\n<br>\n<p>About Matrix:</p>\n\n<p>Matrix is an open standard for interoperable, decentralised, real-time communication\nover IP. It can be used to power Instant Messaging, VoIP/WebRTC signalling, Internet\nof Things communication - or anywhere you need a standard HTTP API for publishing and\nsubscribing to data whilst tracking the conversation history.</p>\n\n<p>Matrix defines the standard, and provides open source reference implementations of\nMatrix-compatible Servers, Clients, Client SDKs and Application Services to help you\ncreate new communication solutions or extend the capabilities and reach of existing ones.</p>\n\n</body>\n</html>\n\n--%(multipart_boundary)s--\n", "Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: %(subject_header_value)s\nMIME-Version: 1.0\nContent-Type: multipart/alternative;\n\tboundary=\"%(multipart_boundary)s\"\n\n--%(multipart_boundary)s\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHi,\n\n%(sender_display_name)s %(bracketed_verified_sender)shas invited you into a room\n%(bracketed_room_name)son Element. To join the conversation please follow the\nlink below.\n\n%(web_client_location)/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fvector.im%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\n\nElement is an open source collaboration app built on the Matrix.org\nopen standard for interoperable communication: supporting group chat,\nfile transfer, voice and video calling, integrations to other apps, bridges\nto other communication systems and much more.\n\nPlease note that you will need to use Chrome, Firefox or Safari on the web, or\niOS or Android on mobile.\n\nThanks,\n\nElement\n\n\nAbout Element:\n\nBreak through - Element allows teams to communicate across a wide range of collaboration\napps. If some team members use Element while others use IRC, Slack or Gitter, Element will\nallow these team members to seamlessly work together. Element offers the richest\nnetwork of communication bridges.\n\nOwn Your Own Data - No one should control your communication and data but you. Element\nlets you run your own server, and provides users and teams with the most advanced\ncrypto ratchet technology available today for a decentralized secure Internet.\n\nOpen Source - Element is entirely open source: all the code is published on GitHub\n(Apache License) for anyone to see and extend. This means teams can customize or\ncontribute to the code and everyone can benefit from the speed of community innovation.\n\nMade on Matrix - Element is built on top of Matrix. Matrix is an open network for secure,\ndecentralized communication delivering a community of users, bridged networks,\nintegrated bots and applications plus full end-to-end encryption. To learn more about\nMatrix visit https://matrix.org.\n\n--%(multipart_boundary)s\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <style type=\"text/css\">\nbody {\n    margin: 0px;\n}\n\npre, code {\n    word-break: break-word;\n    white-space: pre-wrap;\n}\n\n#page {\n    font-family: 'Open Sans', Helvetica, Arial, Sans-Serif;\n    font-color: #454545;\n    font-size: 12pt;\n    width: 100%%;\n    padding: 20px;\n}\n\n#low-contrast {\n    color: #666666\n}\n\n#inner {\n    width: 640px;\n}\n\n.header {\n    width: 100%%;\n    height: 87px;\n    color: #454545;\n    border-bottom: 4px solid #e5e5e5;\n}\n\n.logo {\n    text-align: right;\n    margin-left: 20px;\n}\n\n.header {\n    border-bottom: 4px solid #e4f7ed ! important;\n}\n\n.notif_link a, .footer a {\n    color: #76CFA6 ! important;\n}\n        </style>\n    </head>\n    <body>\n        <table id=\"page\">\n            <tr>\n                <td> </td>\n                <td id=\"inner\">\n                    <table class=\"header\">\n                        <tr>\n                            <td>\n                            </td>\n                            <td class=\"logo\">\n                                    <img src=\"https://static.element.io/images/email-logo.png\" width=\"64\" height=\"64\" alt=\"Element\"/>\n                            </td>\n                        </tr>\n                    </table>\n\n<p>Hi,</p>\n\n<p>%(sender_display_name_forhtml)s <span class=\"low-contrast\">%(bracketed_verified_sender_for_html)s</span> has invited you into a\nroom %(bracketed_room_name_forhtml)s on Element.</p>\n\n<p>\n    <a\n    href=\"https://app.element.io/#/room/%(room_id_forurl)s?email=%(to_forurl)s&signurl=https%%3A%%2F%%2Fvector.im%%2F_matrix%%2Fidentity%%2Fapi%%2Fv1%%2Fsign-ed25519%%3Ftoken%%3D%(token)s%%26private_key%%3D%(ephemeral_private_key)s&room_name=%(room_name_forurl)s&room_avatar_url=%(room_avatar_url_forurl)s&inviter_name=%(sender_display_name_forurl)s&guest_access_token=%(guest_access_token_forurl)s&guest_user_id=%(guest_user_id_forurl)s\">Join the conversation.</a>\n</p>\n\n<p>Element is an open source collaboration app built on the Matrix.org\nopen standard for interoperable communication: supporting group chat, file\ntransfer, voice and video calling, integrations to other apps, bridges\nto other communication systems and much more.</p>\n\n<p>Please note that Element requires\n<a href=\"https://www.google.com/chrome\">Chrome</a>,\n<a href=\"https://www.getfirefox.com\">Firefox</a> or\n<a href=\"https://www.apple.com/safari\">Safari</a> on the web,\nor iOS or Android on mobile.</p>\n\n<p>Thanks,</p>\n\n<p>Element</p>\n\n<br>\n<p>About Element:</p>\n\n<p><em>Break through</em> - Element allows teams to communicate across a wide range of collaboration\napps. If some team members use Element while others use IRC, Slack or Gitter, Element will\nallow these team members to seamlessly work together. Element offers the richest\nnetwork of communication bridges.</p>\n\n<p><em>Own Your Own Data</em> - No one should control your communication and data but you. Element\nlets you run your own server, and provides users and teams with the most advanced\ncrypto ratchet technology available today for a decentralized secure Internet.</p>\n\n<p><em>Open Source</em> - Element is entirely open source: all the code is published on GitHub\n(Apache License) for anyone to see and extend. This means teams can customize or\ncontribute to the code and everyone can benefit from the speed of community innovation.</p>\n\n<p><em>Made on Matrix</em> - Element is built on top of Matrix. Matrix is an open network for secure,\ndecentralized communication delivering a community of users, bridged networks,\nintegrated bots and applications plus full end-to-end encryption. To learn more about\nMatrix visit https://matrix.org.</p>\n\n                </td>\n                <td> </td>\n            </tr>\n        </table>\n    </body>\n</html>\n\n--%(multipart_boundary)s--\n", "Date: %(date)s\nFrom: %(from)s\nTo: %(to)s\nMessage-ID: %(messageid)s\nSubject: Confirm your email address for Element\nMIME-Version: 1.0\nContent-Type: multipart/alternative;\n\tboundary=\"%(multipart_boundary)s\"\n\n--%(multipart_boundary)s\nContent-Type: text/plain; charset=UTF-8\nContent-Disposition: inline\n\nHello there!\n\nYou have asked us to register this email address with element.io - the open source,\ndistributed and secure shared workspace for the web that's built on Matrix.\n\nIf it was really you who made this request, you can click on the following link to\ncomplete the verification of your email address:\n\n%(link)s\n\nPlease note that you will need to use Chrome, Firefox or Safari on the web, or\niOS or Android on mobile.\n\nIf you didn't make this request, you can safely disregard this email.\n\nThanks!\n\nElement\n\n\nAbout Element:\n\nBreak through - Element allows teams to communicate across a wide range of collaboration\napps. If some team members use Element while others use IRC, Slack or Gitter, Element will\nallow these team members to seamlessly work together. Element offers the richest\nnetwork of communication bridges.\n\nOwn Your Own Data - No one should control your communication and data but you. Element\nlets you run your own server, and provides users and teams with the most advanced\ncrypto ratchet technology available today for a decentralized secure Internet.\n\nOpen Source - Element is entirely open source: all the code is published on GitHub\n(Apache License) for anyone to see and extend. This means teams can customize or\ncontribute to the code and everyone can benefit from the speed of community innovation.\n\nMade on Matrix - Element is built on top of Matrix. Matrix is an open network for secure,\ndecentralized communication delivering a community of users, bridged networks,\nintegrated bots and applications plus full end-to-end encryption. To learn more about\nMatrix visit https://matrix.org.\n\n--%(multipart_boundary)s\nContent-Type: text/html; charset=UTF-8\nContent-Disposition: inline\n\n<!doctype html>\n<html lang=\"en\">\n    <head>\n        <style type=\"text/css\">\nbody {\n    margin: 0px;\n}\n\npre, code {\n    word-break: break-word;\n    white-space: pre-wrap;\n}\n\n#page {\n    font-family: 'Open Sans', Helvetica, Arial, Sans-Serif;\n    font-color: #454545;\n    font-size: 12pt;\n    width: 100%%;\n    padding: 20px;\n}\n\n#inner {\n    width: 640px;\n}\n\n.header {\n    width: 100%%;\n    height: 87px;\n    color: #454545;\n    border-bottom: 4px solid #e5e5e5;\n}\n\n.logo {\n    text-align: right;\n    margin-left: 20px;\n}\n\n.header {\n    border-bottom: 4px solid #e4f7ed ! important;\n}\n\n\n.notif_link a, .footer a {\n    color: #76CFA6 ! important;\n}\n        </style>\n    </head>\n    <body>\n        <table id=\"page\">\n            <tr>\n                <td> </td>\n                <td id=\"inner\">\n                    <table class=\"header\">\n                        <tr>\n                            <td>\n                            </td>\n                            <td class=\"logo\">\n                                    <img src=\"https://static.element.io/images/email-logo.png\" width=\"64\" height=\"64\" alt=\"Element\"/>\n                            </td>\n                        </tr>\n                    </table>\n\n                    <p>Hello there!</p>\n\n                    <p>You have asked us to register this email address with element.io - the open source,\n                    distributed and secure shared workspace for the web that's built on Matrix.</p>\n\n                    <p>If it was really you who made this request, you can click on the following link to\n                    complete the verification of your email address:</p>\n\n                    <p><a href=\"%(link)s\">Complete email verification</a></p>\n\n                    <p>Please note that Element requires\n                    <a href=\"https://www.google.com/chrome\">Chrome</a>,\n                    <a href=\"https://www.getfirefox.com\">Firefox</a> or\n                    <a href=\"https://www.apple.com/safari\">Safari</a> on the web,\n                    or iOS or Android on mobile.</p>\n\n                    <p>If you didn't make this request, you can safely disregard this email.</p>\n\n                    <p>Thanks!</p>\n\n                    <p>Element</p>\n\n                    <br>\n                    <p>About Element:</p>\n\n                    <p><em>Break through</em> - Element allows teams to communicate across a wide range of collaboration\n                    apps. If some team members use Element while others use IRC, Slack or Gitter, Element will\n                    allow these team members to seamlessly work together. Element offers the richest\n                    network of communication bridges.</p>\n\n                    <p><em>Own Your Own Data</em> - No one should control your communication and data but you. Element\n                    lets you run your own server, and provides users and teams with the most advanced\n                    crypto ratchet technology available today for a decentralized secure Internet.</p>\n\n                    <p><em>Open Source</em> - Element is entirely open source: all the code is published on GitHub\n                    (Apache License) for anyone to see and extend. This means teams can customize or\n                    contribute to the code and everyone can benefit from the speed of community innovation.</p>\n\n                    <p><em>Made on Matrix</em> - Element is built on top of Matrix. Matrix is an open network for secure,\n                    decentralized communication delivering a community of users, bridged networks,\n                    integrated bots and applications plus full end-to-end encryption. To learn more about\n                    Matrix visit https://matrix.org.</p>\n\n                </td>\n                <td> </td>\n            </tr>\n        </table>\n    </body>\n</html>\n\n--%(multipart_boundary)s--\n", "# -*- coding: utf-8 -*-\n\n# Copyright 2015 OpenMarket Ltd\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nfrom __future__ import absolute_import\n\nimport nacl.signing\nimport random\nimport string\nfrom email.header import Header\n\nfrom six import string_types\nfrom twisted.web.resource import Resource\nfrom unpaddedbase64 import encode_base64\n\nfrom sydent.db.invite_tokens import JoinTokenStore\nfrom sydent.db.threepid_associations import GlobalAssociationStore\n\nfrom sydent.http.servlets import get_args, send_cors, jsonwrap, MatrixRestError\nfrom sydent.http.auth import authV2\nfrom sydent.util.emailutils import sendEmail\n\nclass StoreInviteServlet(Resource):\n    def __init__(self, syd, require_auth=False):\n        self.sydent = syd\n        self.random = random.SystemRandom()\n        self.require_auth = require_auth\n\n    @jsonwrap\n    def render_POST(self, request):\n        send_cors(request)\n\n        args = get_args(request, (\"medium\", \"address\", \"room_id\", \"sender\",))\n        medium = args[\"medium\"]\n        address = args[\"address\"]\n        roomId = args[\"room_id\"]\n        sender = args[\"sender\"]\n\n        verified_sender = None\n        if self.require_auth:\n            account = authV2(self.sydent, request)\n            verified_sender = sender\n            if account.userId != sender:\n                raise MatrixRestError(403, \"M_UNAUTHORIZED\", \"'sender' doesn't match\")\n\n        globalAssocStore = GlobalAssociationStore(self.sydent)\n        mxid = globalAssocStore.getMxid(medium, address)\n        if mxid:\n            request.setResponseCode(400)\n            return {\n                \"errcode\": \"M_THREEPID_IN_USE\",\n                \"error\": \"Binding already known\",\n                \"mxid\": mxid,\n            }\n\n        if medium != \"email\":\n            request.setResponseCode(400)\n            return {\n                \"errcode\": \"M_UNRECOGNIZED\",\n                \"error\": \"Didn't understand medium '%s'\" % (medium,),\n            }\n\n        token = self._randomString(128)\n\n        tokenStore = JoinTokenStore(self.sydent)\n\n        ephemeralPrivateKey = nacl.signing.SigningKey.generate()\n        ephemeralPublicKey = ephemeralPrivateKey.verify_key\n\n        ephemeralPrivateKeyBase64 = encode_base64(ephemeralPrivateKey.encode(), True)\n        ephemeralPublicKeyBase64 = encode_base64(ephemeralPublicKey.encode(), True)\n\n        tokenStore.storeEphemeralPublicKey(ephemeralPublicKeyBase64)\n        tokenStore.storeToken(medium, address, roomId, sender, token)\n\n        # Variables to substitute in the template.\n        substitutions = {}\n        # Include all arguments sent via the request.\n        for k, v in args.items():\n            if isinstance(v, string_types):\n                substitutions[k] = v\n        substitutions[\"token\"] = token\n\n        # Substitutions that the template requires, but are optional to provide\n        # to the API.\n        extra_substitutions = [\n            'sender_display_name',\n            'token',\n            'room_name',\n            'bracketed_room_name',\n            'room_avatar_url',\n            'sender_avatar_url',\n            'guest_user_id',\n            'guest_access_token',\n        ]\n        for k in extra_substitutions:\n            substitutions.setdefault(k, '')\n\n        substitutions[\"bracketed_verified_sender\"] = \"\"\n        if verified_sender:\n            substitutions[\"bracketed_verified_sender\"] = \"(%s) \" % (verified_sender,)\n\n        substitutions[\"ephemeral_private_key\"] = ephemeralPrivateKeyBase64\n        if substitutions[\"room_name\"] != '':\n            substitutions[\"bracketed_room_name\"] = \"(%s) \" % substitutions[\"room_name\"]\n\n        substitutions[\"web_client_location\"] = self.sydent.default_web_client_location\n        if 'org.matrix.web_client_location' in substitutions:\n            substitutions[\"web_client_location\"] = substitutions.pop(\"org.matrix.web_client_location\")\n\n        subject_header = Header(self.sydent.cfg.get('email', 'email.invite.subject', raw=True) % substitutions, 'utf8')\n        substitutions[\"subject_header_value\"] = subject_header.encode()\n\n        brand = self.sydent.brand_from_request(request)\n        templateFile = self.sydent.get_branded_template(\n            brand,\n            \"invite_template.eml\",\n            ('email', 'email.invite_template'),\n        )\n\n        sendEmail(self.sydent, templateFile, address, substitutions)\n\n        pubKey = self.sydent.keyring.ed25519.verify_key\n        pubKeyBase64 = encode_base64(pubKey.encode())\n\n        baseUrl = \"%s/_matrix/identity/api/v1\" % (self.sydent.cfg.get('http', 'client_http_base'),)\n\n        keysToReturn = []\n        keysToReturn.append({\n            \"public_key\": pubKeyBase64,\n            \"key_validity_url\": baseUrl + \"/pubkey/isvalid\",\n        })\n        keysToReturn.append({\n            \"public_key\": ephemeralPublicKeyBase64,\n            \"key_validity_url\": baseUrl + \"/pubkey/ephemeral/isvalid\",\n        })\n\n        resp = {\n            \"token\": token,\n            \"public_key\": pubKeyBase64,\n            \"public_keys\": keysToReturn,\n            \"display_name\": self.redact_email_address(address),\n        }\n\n        return resp\n\n    def redact_email_address(self, address):\n        \"\"\"\n        Redacts the content of a 3PID address. Redacts both the email's username and\n        domain independently.\n\n        :param address: The address to redact.\n        :type address: unicode\n\n        :return: The redacted address.\n        :rtype: unicode\n        \"\"\"\n        # Extract strings from the address\n        username, domain = address.split(u\"@\", 1)\n\n        # Obfuscate strings\n        redacted_username = self._redact(username, self.sydent.username_obfuscate_characters)\n        redacted_domain = self._redact(domain, self.sydent.domain_obfuscate_characters)\n\n        return redacted_username + u\"@\" + redacted_domain\n\n    def _redact(self, s, characters_to_reveal):\n        \"\"\"\n        Redacts the content of a string, using a given amount of characters to reveal.\n        If the string is shorter than the given threshold, redact it based on length.\n\n        :param s: The string to redact.\n        :type s: unicode\n\n        :param characters_to_reveal: How many characters of the string to leave before\n            the '...'\n        :type characters_to_reveal: int\n\n        :return: The redacted string.\n        :rtype: unicode\n        \"\"\"\n        # If the string is shorter than the defined threshold, redact based on length\n        if len(s) <= characters_to_reveal:\n            if len(s) > 5:\n                return s[:3] + u\"...\"\n            if len(s) > 1:\n                return s[0] + u\"...\"\n            return u\"...\"\n\n        # Otherwise truncate it and add an ellipses\n        return s[:characters_to_reveal] + u\"...\"\n\n    def _randomString(self, length):\n        \"\"\"\n        Generate a random string of the given length.\n\n        :param length: The length of the string to generate.\n        :type length: int\n\n        :return: The generated string.\n        :rtype: unicode\n        \"\"\"\n        return u''.join(self.random.choice(string.ascii_letters) for _ in range(length))\n", "# -*- coding: utf-8 -*-\n\n# Copyright 2014-2015 OpenMarket Ltd\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nfrom __future__ import absolute_import\n\nimport logging\nimport socket\nimport random\nimport smtplib\nimport email.utils\nimport string\nimport twisted.python.log\nimport six\nfrom six.moves import urllib\nfrom six.moves import range\n\nif six.PY2:\n    from cgi import escape\nelse:\n    from html import escape\n\nimport email.utils\n\nfrom sydent.util import time_msec\nfrom sydent.util.tokenutils import generateAlphanumericTokenOfLength\n\nlogger = logging.getLogger(__name__)\n\n\ndef sendEmail(sydent, templateFile, mailTo, substitutions):\n    \"\"\"\n    Sends an email with the given parameters.\n\n    :param sydent: The Sydent instance to use when building the configuration to send the\n        email with.\n    :type sydent: sydent.sydent.Sydent\n    :param templateFile: The filename of the template to use when building the body of the\n        email.\n    :type templateFile: str\n    :param mailTo: The email address to send the email to.\n    :type mailTo: unicode\n    :param substitutions: The substitutions to use with the template.\n    :type substitutions: dict[str, str]\n    \"\"\"\n    mailFrom = sydent.cfg.get('email', 'email.from')\n\n    myHostname = sydent.cfg.get('email', 'email.hostname')\n    if myHostname == '':\n        myHostname = socket.getfqdn()\n    midRandom = \"\".join([random.choice(string.ascii_letters) for _ in range(16)])\n    messageid = \"<%d%s@%s>\" % (time_msec(), midRandom, myHostname)\n\n    substitutions.update({\n        'messageid': messageid,\n        'date': email.utils.formatdate(localtime=False),\n        'to': mailTo,\n        'from': mailFrom,\n    })\n\n    allSubstitutions = {}\n    for k, v in substitutions.items():\n        allSubstitutions[k] = v\n        allSubstitutions[k+\"_forhtml\"] = escape(v)\n        allSubstitutions[k+\"_forurl\"] = urllib.parse.quote(v)\n\n    # We add randomize the multipart boundary to stop user input from\n    # conflicting with it.\n    allSubstitutions[\"multipart_boundary\"] = generateAlphanumericTokenOfLength(32)\n\n    mailString = open(templateFile).read() % allSubstitutions\n    parsedFrom = email.utils.parseaddr(mailFrom)[1]\n    parsedTo = email.utils.parseaddr(mailTo)[1]\n    if parsedFrom == '' or parsedTo == '':\n        logger.info(\"Couldn't parse from / to address %s / %s\", mailFrom, mailTo)\n        raise EmailAddressException()\n\n    if parsedTo != mailTo:\n        logger.info(\"Parsed to address changed the address: %s -> %s\", mailTo, parsedTo)\n        raise EmailAddressException()\n\n    mailServer = sydent.cfg.get('email', 'email.smtphost')\n    mailPort = sydent.cfg.get('email', 'email.smtpport')\n    mailUsername = sydent.cfg.get('email', 'email.smtpusername')\n    mailPassword = sydent.cfg.get('email', 'email.smtppassword')\n    mailTLSMode = sydent.cfg.get('email', 'email.tlsmode')\n    logger.info(\"Sending mail to %s with mail server: %s\" % (mailTo, mailServer,))\n    try:\n        if mailTLSMode == 'SSL' or mailTLSMode == 'TLS':\n            smtp = smtplib.SMTP_SSL(mailServer, mailPort, myHostname)\n        elif mailTLSMode == 'STARTTLS':\n            smtp = smtplib.SMTP(mailServer, mailPort, myHostname)\n            smtp.starttls()\n        else:\n            smtp = smtplib.SMTP(mailServer, mailPort, myHostname)\n        if mailUsername != '':\n            smtp.login(mailUsername, mailPassword)\n\n        # We're using the parsing above to do basic validation, but instead of\n        # failing it may munge the address it returns. So we should *not* use\n        # that parsed address, as it may not match any validation done\n        # elsewhere.\n        smtp.sendmail(mailFrom, mailTo, mailString.encode('utf-8'))\n        smtp.quit()\n    except Exception as origException:\n        twisted.python.log.err()\n        ese = EmailSendException()\n        ese.cause = origException\n        raise ese\n\n\nclass EmailAddressException(Exception):\n    pass\n\n\nclass EmailSendException(Exception):\n    pass\n"], "filenames": ["res/matrix-org/invite_template.eml", "res/matrix-org/verification_template.eml", "res/vector-im/invite_template.eml", "res/vector-im/verification_template.eml", "sydent/http/servlets/store_invite_servlet.py", "sydent/util/emailutils.py"], "buggy_code_start_loc": [7, 7, 7, 7, 30, 36], "buggy_code_end_loc": [145, 89, 179, 177, 110, 75], "fixing_code_start_loc": [7, 7, 7, 7, 30, 37], "fixing_code_end_loc": [144, 89, 178, 171, 117, 81], "type": "NVD-CWE-noinfo", "message": "Sydent is a reference matrix identity server. A malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example. This issue has been fixed in 4469d1d.", "other": {"cve": {"id": "CVE-2021-29432", "sourceIdentifier": "security-advisories@github.com", "published": "2021-04-15T21:15:17.630", "lastModified": "2022-08-03T10:17:27.247", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Sydent is a reference matrix identity server. A malicious user could abuse Sydent to send out arbitrary emails from the Sydent email address. This could be used to construct plausible phishing emails, for example. This issue has been fixed in 4469d1d."}, {"lang": "es", "value": "Sydent es un servidor de identidad de matriz de referencia.&#xa0;Un usuario malicioso podr\u00eda abusar de Sydent para enviar correos electr\u00f3nicos arbitrarios desde la direcci\u00f3n de correo electr\u00f3nico de Sydent.&#xa0;Esto podr\u00eda ser usado para construir correos electr\u00f3nicos de phishing plausibles, por ejemplo.&#xa0;Este problema ha sido corregido en versi\u00f3n 4469d1d"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 5.7, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.6}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "NVD-CWE-noinfo"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:matrix:sydent:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.3.0", "matchCriteriaId": "C77C5A80-7302-49F8-8DAA-37B269691C9C"}]}]}], "references": [{"url": "https://github.com/matrix-org/sydent/commit/4469d1d42b2b1612b70638224c07e19623039c42", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/matrix-org/sydent/releases/tag/v2.3.0", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/matrix-org/sydent/security/advisories/GHSA-mh74-4m5g-fcjx", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://pypi.org/project/matrix-sydent/", "source": "security-advisories@github.com", "tags": ["Product", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/matrix-org/sydent/commit/4469d1d42b2b1612b70638224c07e19623039c42"}}