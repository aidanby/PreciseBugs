{"buggy_code": ["/**\n * @file \u5386\u53f2\u8bb0\u5f55\n * @author  life\n * \n */\ndefine('history', [], function() {\n\n    var tpl = ['<div class=\"modal fade history-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">',\n            '<div class=\"modal-dialog modal-lg \">',\n                '<div class=\"modal-content\">',\n                    '<div class=\"modal-header\">',\n                        '<h4 class=\"modal-title\" class=\"modalTitle\">' + + '</h4>',\n                    '</div>',\n                    '<div class=\"modal-body clearfix\">',\n                        '<div class=\"history-list-wrap pull-left\">',\n                            '<div class=\"history-list-header\">' + getMsg('history') +' (<span class=\"history-num\"></span>)</div>',\n                            '<div class=\"history-list list-group\"></div>',\n                        '</div>',\n                        '<div class=\"history-content-wrap pull-left\">',\n                            '<div class=\"history-content-header\">',\n                                '<a class=\"btn btn-primary back\">' + getMsg('restoreFromThisVersion') + '</a>',\n                                '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>',\n                            '</div>',\n                            '<div class=\"history-content\"></div>',\n                        '</div>',\n                    '</div>',\n                    '<div class=\"modal-footer hide\">',\n                        '<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">' + getMsg('close') + '</button>',\n                    '</div>',\n                '</div>',\n            '</div>',\n       '</div>'].join('');\n    var $tpl = $(tpl);\n\n    var $historyContent = $tpl.find('.history-content');\n    var $historyList = $tpl.find('.history-list');\n    var $historyNum = $tpl.find('.history-num');\n    var view = {\n        note: null,\n        list: [],\n        curIndex: 0,\n\n        renderContent: function (i) {\n            var content = this.list[i].Content;\n            this.curIndex = i;\n\n            var wrap = '<div>';\n            var wrapEnd = '</div>';\n            if (this.note.IsMarkdown) {\n                wrap = '<pre>';\n                wrapEnd = '</pre>';\n            }\n            $historyContent.html(wrap + content + wrapEnd);\n\n            var as = $historyList.find('a');\n            as.removeClass('active');\n            as.eq(i).addClass('active');\n        },\n        render: function (list) {\n            var navs = '';\n            this.list = list;\n            if (list) {\n                for(var i = 0; i < list.length; ++i) {\n                    var content = list[i];\n                    navs += '<a class=\"list-group-item\" data-index=\"' + i + '\"><span class=\"badge\">#' + (i+1)+ '</span>' + goNowToDatetime(content.UpdatedTime) + '</a>';\n                }\n            }\n            $historyList.html(navs);\n\n            this.renderContent(0);\n            $historyNum.html(list.length);\n            // show\n            $tpl.modal({show: true});\n        },\n\n        bind: function () {\n            var me = this;\n            $(\"#contentHistory\").click(function() {\n                me.getHistories();\n            });\n\n            $historyList.on('click', 'a', function () {\n                var index = $(this).data('index');\n                me.renderContent(index);\n            });\n\n            // \u8fd8\u539f\n            $tpl.find('.back').click(function() {\n                if(confirm(getMsg(\"confirmBackup\"))) {\n                    // \u4fdd\u5b58\u5f53\u524d\u7248\u672c\n                    Note.curChangedSaveIt(true);\n\n                    // \u8bbe\u7f6e\u4e4b\n                    note = Note.cache[Note.curNoteId];\n                    setEditorContent(me.list[me.curIndex].Content, note.IsMarkdown);\n\n                    $tpl.modal('hide');\n                    // \u4fdd\u5b58\n                    Note.curChangedSaveIt(true);\n                }\n            });\n        },\n\n        getHistories: function () {\n            var me = this;\n            var note = Note.getCurNote();\n            me.note = note;\n            ajaxGet(\"/noteContentHistory/listHistories\", {noteId: Note.curNoteId}, function(re) {\n                if(!isArray(re)) {\n                    alert(getMsg('noHistories'));\n                    return;\n                }\n\n                me.render(re);\n\n                return;\n\n                // \u7ec4\u88c5\u6210\u4e00\u4e2atab\n                var str = \"<p>\" + getMsg(\"historiesNum\") + '</p><div id=\"historyList\"><table class=\"table table-hover\">';\n                note = Note.cache[Note.curNoteId];\n                var s = \"div\"\n                if(note.IsMarkdown) {\n                    s = \"pre\";\n                }\n                for (i in re) {\n                    var content = re[i]\n                    content.Ab = Note.genAbstract(content.Content, 200);\n                    // \u4e3a\u4ec0\u4e48\u4e0d\u7528tt(), \u56e0\u4e3acontent\u53ef\u80fd\u542b??\n                    str += '<tr><td seq=\"' +  i + '\">#' + (i+1) +'<' + s + ' class=\"each-content\">' + content.Ab + '</' + s + '> <div class=\"btns\">' + getMsg(\"datetime\") + ': <span class=\"label label-default\">' + goNowToDatetime(content.UpdatedTime) + '</span> <button class=\"btn btn-default all\">' + getMsg(\"unfold\") + '</button> <button class=\"btn btn-primary back\">' + getMsg('restoreFromThisVersion') + '</button></div></td></tr>';\n                }\n                str += \"</table></div>\";\n                $content.html(str);\n                $(\"#historyList .all\").click(function() {\n                    $p = $(this).parent().parent();\n                    var seq = $p.attr(\"seq\");\n                    var $c = $p.find(\".each-content\");\n                    var info = re[seq]; \n                    if(!info.unfold) { // \u9ed8\u8ba4\u662f\u6298\u53e0\u7684\n                        $(this).text(getMsg(\"fold\")); // \u6298\u53e0\n                        $c.html(info.Content);\n                        info.unfold = true;\n                    } else {\n                        $(this).text(getMsg(\"unfold\")); // \u5c55\u5f00\n                        $c.html(info.Ab);\n                        info.unfold = false\n                    }\n                });\n\n               \n            });\n        },\n\n        init: function () {\n            var me = this;\n            this.bind();\n\n        }\n    };\n\n    view.init();\n});"], "fixing_code": ["/**\n * @file \u5386\u53f2\u8bb0\u5f55\n * @author  life\n * \n */\ndefine('history', [], function() {\n\n    var tpl = ['<div class=\"modal fade history-modal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">',\n            '<div class=\"modal-dialog modal-lg \">',\n                '<div class=\"modal-content\">',\n                    '<div class=\"modal-header\">',\n                        '<h4 class=\"modal-title\" class=\"modalTitle\">' + + '</h4>',\n                    '</div>',\n                    '<div class=\"modal-body clearfix\">',\n                        '<div class=\"history-list-wrap pull-left\">',\n                            '<div class=\"history-list-header\">' + getMsg('history') +' (<span class=\"history-num\"></span>)</div>',\n                            '<div class=\"history-list list-group\"></div>',\n                        '</div>',\n                        '<div class=\"history-content-wrap pull-left\">',\n                            '<div class=\"history-content-header\">',\n                                '<a class=\"btn btn-primary back\">' + getMsg('restoreFromThisVersion') + '</a>',\n                                '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>',\n                            '</div>',\n                            '<div class=\"history-content\"></div>',\n                        '</div>',\n                    '</div>',\n                    '<div class=\"modal-footer hide\">',\n                        '<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">' + getMsg('close') + '</button>',\n                    '</div>',\n                '</div>',\n            '</div>',\n       '</div>'].join('');\n    var $tpl = $(tpl);\n\n    var $historyContent = $tpl.find('.history-content');\n    var $historyList = $tpl.find('.history-list');\n    var $historyNum = $tpl.find('.history-num');\n    var view = {\n        note: null,\n        list: [],\n        curIndex: 0,\n\n        renderContent: function (i) {\n            var content = this.list[i].Content;\n            this.curIndex = i;\n\n            var wrap = '<div>';\n            var wrapEnd = '</div>';\n            if (this.note.IsMarkdown) {\n                wrap = '<pre>';\n                wrapEnd = '</pre>';\n                content = trimTitle(content) // for xss\n            }\n            $historyContent.html(wrap + content + wrapEnd);\n\n            var as = $historyList.find('a');\n            as.removeClass('active');\n            as.eq(i).addClass('active');\n        },\n        render: function (list) {\n            var navs = '';\n            this.list = list;\n            if (list) {\n                for(var i = 0; i < list.length; ++i) {\n                    var content = list[i];\n                    navs += '<a class=\"list-group-item\" data-index=\"' + i + '\"><span class=\"badge\">#' + (i+1)+ '</span>' + goNowToDatetime(content.UpdatedTime) + '</a>';\n                }\n            }\n            $historyList.html(navs);\n\n            this.renderContent(0);\n            $historyNum.html(list.length);\n            // show\n            $tpl.modal({show: true});\n        },\n\n        bind: function () {\n            var me = this;\n            $(\"#contentHistory\").click(function() {\n                me.getHistories();\n            });\n\n            $historyList.on('click', 'a', function () {\n                var index = $(this).data('index');\n                me.renderContent(index);\n            });\n\n            // \u8fd8\u539f\n            $tpl.find('.back').click(function() {\n                if(confirm(getMsg(\"confirmBackup\"))) {\n                    // \u4fdd\u5b58\u5f53\u524d\u7248\u672c\n                    Note.curChangedSaveIt(true);\n\n                    // \u8bbe\u7f6e\u4e4b\n                    note = Note.cache[Note.curNoteId];\n                    setEditorContent(me.list[me.curIndex].Content, note.IsMarkdown);\n\n                    $tpl.modal('hide');\n                    // \u4fdd\u5b58\n                    Note.curChangedSaveIt(true);\n                }\n            });\n        },\n\n        getHistories: function () {\n            var me = this;\n            var note = Note.getCurNote();\n            me.note = note;\n            ajaxGet(\"/noteContentHistory/listHistories\", {noteId: Note.curNoteId}, function(re) {\n                if(!isArray(re)) {\n                    alert(getMsg('noHistories'));\n                    return;\n                }\n\n                me.render(re);\n\n                return;\n\n                // \u7ec4\u88c5\u6210\u4e00\u4e2atab\n                var str = \"<p>\" + getMsg(\"historiesNum\") + '</p><div id=\"historyList\"><table class=\"table table-hover\">';\n                note = Note.cache[Note.curNoteId];\n                var s = \"div\"\n                if(note.IsMarkdown) {\n                    s = \"pre\";\n                }\n                for (i in re) {\n                    var content = re[i]\n                    content.Ab = Note.genAbstract(content.Content, 200);\n                    // \u4e3a\u4ec0\u4e48\u4e0d\u7528tt(), \u56e0\u4e3acontent\u53ef\u80fd\u542b??\n                    str += '<tr><td seq=\"' +  i + '\">#' + (i+1) +'<' + s + ' class=\"each-content\">' + content.Ab + '</' + s + '> <div class=\"btns\">' + getMsg(\"datetime\") + ': <span class=\"label label-default\">' + goNowToDatetime(content.UpdatedTime) + '</span> <button class=\"btn btn-default all\">' + getMsg(\"unfold\") + '</button> <button class=\"btn btn-primary back\">' + getMsg('restoreFromThisVersion') + '</button></div></td></tr>';\n                }\n                str += \"</table></div>\";\n                $content.html(str);\n                $(\"#historyList .all\").click(function() {\n                    $p = $(this).parent().parent();\n                    var seq = $p.attr(\"seq\");\n                    var $c = $p.find(\".each-content\");\n                    var info = re[seq]; \n                    if(!info.unfold) { // \u9ed8\u8ba4\u662f\u6298\u53e0\u7684\n                        $(this).text(getMsg(\"fold\")); // \u6298\u53e0\n                        $c.html(info.Content);\n                        info.unfold = true;\n                    } else {\n                        $(this).text(getMsg(\"unfold\")); // \u5c55\u5f00\n                        $c.html(info.Ab);\n                        info.unfold = false\n                    }\n                });\n\n               \n            });\n        },\n\n        init: function () {\n            var me = this;\n            this.bind();\n\n        }\n    };\n\n    view.init();\n});"], "filenames": ["public/js/plugins/history.js"], "buggy_code_start_loc": [51], "buggy_code_end_loc": [51], "fixing_code_start_loc": [52], "fixing_code_end_loc": [53], "type": "CWE-79", "message": "A vulnerability, which was classified as problematic, has been found in leanote 2.6.1. This issue affects the function define of the file public/js/plugins/history.js. The manipulation of the argument content leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 0f9733c890077942150696dcc6d2b1482b7a0a19. It is recommended to apply a patch to fix this issue. The identifier VDB-216461 was assigned to this vulnerability.", "other": {"cve": {"id": "CVE-2021-4263", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-21T19:15:12.350", "lastModified": "2023-03-03T20:15:09.083", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "A vulnerability, which was classified as problematic, has been found in leanote 2.6.1. This issue affects the function define of the file public/js/plugins/history.js. The manipulation of the argument content leads to cross site scripting. The attack may be initiated remotely. The name of the patch is 0f9733c890077942150696dcc6d2b1482b7a0a19. It is recommended to apply a patch to fix this issue. The identifier VDB-216461 was assigned to this vulnerability."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 3.5, "baseSeverity": "LOW"}, "exploitabilityScore": 2.1, "impactScore": 1.4}], "cvssMetricV2": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.0}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:leanote:leanote:*:*:*:*:*:*:*:*", "versionEndExcluding": "2021-03-27", "matchCriteriaId": "B18577CE-6292-4029-92D2-5290BBEDE8CF"}]}]}], "references": [{"url": "https://github.com/leanote/leanote/commit/0f9733c890077942150696dcc6d2b1482b7a0a19", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?ctiid.216461", "source": "cna@vuldb.com"}, {"url": "https://vuldb.com/?id.216461", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/leanote/leanote/commit/0f9733c890077942150696dcc6d2b1482b7a0a19"}}