{"buggy_code": ["<?xml version=\"1.1\" encoding=\"UTF-8\"?>\n\n<!--\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n-->\n\n<xwikidoc version=\"1.1\">\n  <web>WikiManager</web>\n  <name>JoinWiki</name>\n  <language/>\n  <defaultLanguage/>\n  <translation>0</translation>\n  <creator>xwiki:XWiki.Admin</creator>\n  <parent>WikiManager.WebHome</parent>\n  <author>xwiki:XWiki.Admin</author>\n  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>\n  <version>1.1</version>\n  <title>$services.localization.render('platform.wiki.users.join.title')</title>\n  <comment/>\n  <minorEdit>false</minorEdit>\n  <syntaxId>xwiki/2.0</syntaxId>\n  <hidden>true</hidden>\n  <content>{{velocity}}\n#macro (printException $exception)\n  #if($exception.message)\n    {{error}}$services.localization.render('platform.wiki.error.exceptionWithMessage', [$exception.message]){{/error}}\n  #else\n    {{error}}$exception.class{{/error}}\n  #end\n#end\n#set ($wikiId = $request.wikiId)\n#set ($form_token = $request.form_token)\n##\n#if (\"$!wikiId\" == '')\n  {{error}}{{translation key=\"platform.wiki.error.oneParameterNotSpecified\" parameters=\"wikiId\"/}}{{/error}}\n#else\n  ## FIXME: add plugin dependency checks.\n  ##\n  #set ($wiki = $services.wiki.getById($wikiId))\n  #set ($wikiMainPage = $wiki.mainPageReference)\n  #set ($wikiMainPageLinkStart = '')\n  #set ($wikiMainPageLinkEnd = '')\n  #if ($xwiki.exists($wikiMainPage))\n    #set ($wikiMainPageLinkStart = '[[')\n    #set ($wikiMainPageLinkEnd = \"&gt;&gt;${wikiMainPage}]]\")\n  #end\n  ##\n  #if (\"$!wiki\" == '')\n    #if (\"$!{services.wiki.lastError}\" != '')\n      {{error}}$services.localization.render('platform.wiki.error.exceptionWithMessage', [$services.wiki.lastError.message]){{/error}}\n    #else\n      {{error}}$services.localization.render('platform.wiki.error.wikidoesnotexist', [$wikiId]){{/error}}\n    #end\n  #else\n    #set ($wikiName = $wiki.prettyName)\n    #if (\"$!wikiName\" == '')\n      #set ($wikiName = $wikiId)\n    #end\n    #set ($currentUser = $services.model.serialize($xcontext.userReference, 'default'))\n    ##\n    #set ($members = $services.wiki.user.getMembers($wikiId))\n    #if ($members &amp;&amp; $members.contains($currentUser))\n      {{info}}$services.localization.render('platform.wiki.users.userAlreadyMemberOfWiki', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/info}}\n    #elseif ($currentUser == 'xwiki:XWiki.XWikiGuest')\n      #set ($loginDocumentReference = $services.model.createDocumentReference($services.wiki.mainWikiId, 'XWiki', 'XWikiLogin'))\n      #set ($loginDocument = $xwiki.getDocument($loginDocumentReference))\n      #set ($loginUrl = $loginDocument.getExternalURL('login', \"xredirect=$escapetool.url($xwiki.relativeRequestURL)\"))\n      {{error}}$services.localization.render('platform.wiki.users.logInToContinue', ['[[', \"&gt;&gt;$loginUrl]]\"]){{/error}}\n    #else\n      ## The user is not already a member of the wiki\n      ##\n      #set ($browseDocumentReference = $services.model.createDocumentReference($services.wiki.mainWikiId, 'WikiManager', 'WebHome'))\n      #set ($backUrl = $xwiki.getURL($browseDocumentReference))\n      ##\n      #set ($membershipType = $services.wiki.user.getMembershipType($wiki.id))\n      ##\n      ## Determine if, regardless of membership type, an existing invitation exists for the current user.\n      #set ($invitations = $services.wiki.user.getAllInvitations($wikiId))\n      #set ($existingInvitation = false)\n      #if ($invitations &amp;&amp; !$invitations.isEmpty())\n        #foreach($invitation in $invitations)\n          #if ($invitation.userId == $currentUser &amp;&amp; $invitation.status == 'PENDING')\n            #set ($existingInvitation = $invitation)\n          #end\n        #end\n      #end\n      #if ($existingInvitation)\n        ##\n        ## An invitation exists.\n        #if (($request.acceptInvitation || $request.rejectInvitation) &amp;&amp; $services.csrf.isTokenValid($form_token))\n          ##\n          ## The user decided whether to accept or to reject the invitation.\n          #set ($notificationMessage = $services.localization.render('platform.wiki.users.invitation.userAcceptedNotification', [${xwiki.getUserName($currentUser, false)}, $currentUser, ${wikiName}, $wikiId]))\n          ## Accept\n          #if ($request.acceptInvitation)\n            #set ($discard = $services.wiki.user.acceptInvitation($existingInvitation, $request.userComment))\n          #else\n            #set ($discard = $services.wiki.user.refuseInvitation($existingInvitation, $request.userComment))\n          #end          \n          ## Send message to wiki admins. (XWikiAdminGroup)\n          #set ($wikiAdminGroupReference = $services.model.createDocumentReference($wikiId, 'XWiki', 'XWikiAdminGroup'))\n          #set ($discard = $services.messageStream.postMessageToGroup($notificationMessage, $wikiAdminGroupReference))\n          ## Display the proper success info.\n          {{success}}\n          #if ($request.acceptInvitation)\n            $services.localization.render('platform.wiki.users.invitation.userAcceptedSuccess', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n          #else\n            $services.localization.render('platform.wiki.users.invitation.userRejectedSuccess', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n          #end\n          {{/success}}\n        #else\n          #if(\"$!form_token\" != '')\n\n             {{warning}}\n               {{translation key=\"platform.wiki.csrf.error\" /}}\n             {{/warning}}\n\n          #end\n          ##\n          ## User can decide if to accept or reject the invitation.\n          {{html wiki='true'}}\n          $services.localization.render('platform.wiki.users.invitation.title', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n\n          &lt;form class='xform third' method='post'&gt;\n            &lt;dl&gt;\n            #if (\"$!existingInvitation.get('reviewerComment').getValue()\" != '')\n              &lt;dt&gt;\n                &lt;label&gt;{{translation key=\"platform.wiki.users.invitation.message.label\"/}}&lt;/label&gt;\n              &lt;/dt&gt;\n              &lt;dd&gt;\n                $existingInvitation.get('reviewerComment').getValue()\n              &lt;/dd&gt;\n            #end  \n              &lt;dt&gt;\n                &lt;label for='userComment'&gt;{{translation key=\"platform.wiki.users.invitation.reply.title\"/}}&lt;/label&gt;\n                &lt;span class='xHint'&gt;{{translation key=\"platform.wiki.users.invitation.reply.hint\"/}}&lt;/span&gt;\n              &lt;/dt&gt;\n              &lt;dd&gt;&lt;textarea name='userComment' rows='7' cols='45'&gt;&lt;/textarea&gt;&lt;/dd&gt;\n              &lt;span class='buttonwrapper'&gt;\n                &lt;br/&gt;\n                &lt;input type='submit' name='acceptInvitation' value=\"$services.localization.render('platform.wiki.users.invitation.accept.label')\" class='button'/&gt;\n                &lt;input type='submit' name='rejectInvitation' value=\"$services.localization.render('platform.wiki.users.invitation.reject.label')\" class='button'/&gt;\n                &lt;a href=\"$backUrl\" class='button secondary'&gt;{{translation key=\"platform.wiki.users.invitation.postpone.label\"/}}&lt;/a&gt;\n              &lt;/span&gt;\n              &lt;input type=\"hidden\" name=\"wikiId\" value=\"$!escapetool.xml($wikiId)\" /&gt;\n              &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n            &lt;/dl&gt;\n          &lt;/form&gt;\n          {{/html}}\n        #end\n      ##\n      ## The user is not invited to join. Continue based on the current membership type of the wiki.\n      #elseif ($membershipType == 'INVITE')\n        ##\n        ## User does not have an invitation.\n        {{error}}{{translation key=\"platform.wiki.users.join.error.needInvitation\"/}}{{/error}}\n      #elseif ($membershipType == 'REQUEST')\n        ## Determine if a pending request already exists.\n        ##\n        #set ($pendingRequest = false)\n        #set ($existingRequests = $services.wiki.user.getAllRequests($wikiId))\n        #foreach ($existingRequest in $existingRequests)\n          #if ($existingRequest.userId == $currentUser &amp;&amp; $existingRequest.status == 'PENDING')\n            #set ($pendingRequest = $existingRequest)\n          #end\n        #end\n        #if ($pendingRequest)\n          #if (\"$!{request.cancelJoinRequest}\" != '1')\n            ## Request already exists.\n            ##\n            {{info}}$services.localization.render('platform.wiki.users.join.request.pendingRequestExists', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/info}}\n          #elseif (!$services.csrf.isTokenValid($form_token))\n            ## User wants to cancel existing request.\n            ##\n            #if(\"$!form_token\" != '')\n\n              {{warning}}\n               {{translation key=\"platform.wiki.csrf.error\" /}}\n              {{/warning}}\n\n            #end\n            {{box}}\n              $services.localization.render('platform.wiki.users.join.request.cancelConfirmation', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n              ((({{html}}\n                &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\n                  &lt;fieldset&gt;\n                    &lt;input type=\"hidden\" name=\"wikiId\" value=\"$!escapetool.xml($wikiId)\" /&gt;\n                    &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n                    &lt;input type=\"hidden\" name=\"cancelJoinRequest\" value=\"1\" /&gt;\n                    &lt;span class=\"buttonwrapper\"&gt;&lt;button class=\"button\"&gt;$services.localization.render('platform.wiki.users.join.request.cancelYes')&lt;/button&gt; &lt;a class=\"button\" href=\"$backUrl\"&gt;$services.localization.render('platform.wiki.users.join.request.cancelNo')&lt;/a&gt;&lt;/span&gt;\n                  &lt;/fieldset&gt;\n                &lt;/form&gt;\n              {{/html}})))\n            {{/box}}\n          #else\n            ## User confirms the cancel of existing request.\n            ##\n            #set ($result = $services.wiki.user.cancelCandidacy($pendingRequest))\n            #if ($result)\n              {{success}}$services.localization.render('platform.wiki.users.join.request.cancelSuccess',  ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/success}}\n            #else\n              #printException($services.wiki.user.lastError.message)\n            #end\n          #end\n        #elseif (!$services.csrf.isTokenValid($form_token))\n          ## Join request.\n          ##\n          #if(\"$!form_token\" != '')\n\n           {{warning}}\n             {{translation key=\"platform.wiki.csrf.error\" /}}\n           {{/warning}}\n\n          #end\n        \n          {{html wiki='true'}}\n            $services.localization.render('platform.wiki.users.join.request.hint', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n\n            &lt;form class='xform third' method='GET'&gt;\n              &lt;dl&gt;\n                &lt;dt&gt;\n                  &lt;label for='userComment'&gt;{{translation key=\"platform.wiki.users.join.request.message.label\"/}}&lt;/label&gt;\n                  &lt;span class='xHint'&gt;{{translation key=\"platform.wiki.users.join.request.message.hint\"/}}&lt;/span&gt;\n                &lt;/dt&gt;\n                &lt;dd&gt;&lt;textarea name='userComment' rows='7' cols='45'&gt;&lt;/textarea&gt;&lt;/dd&gt;\n                &lt;span class='buttonwrapper'&gt;\n                  &lt;br/&gt;\n                  &lt;input type='submit' name='submit' value=\"$services.localization.render('platform.wiki.users.join.request.send.label')\" class='button'/&gt;\n                  &lt;a href=\"$backUrl\" class='button secondary'&gt;{{translation key=\"platform.wiki.users.join.request.cancel.label\"/}}&lt;/a&gt;\n                &lt;/span&gt;\n                &lt;input type='hidden' name='wikiId' value=\"$!wikiId\"/&gt;\n                &lt;input type='hidden' name='requestJoin' value=\"$!request.requestJoin\"/&gt;\n                &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n              &lt;/dl&gt;\n            &lt;/form&gt;\n          {{/html}}\n        #else\n          ## User confirmed the join request.\n          ##\n          #set ($request = $services.wiki.user.askToJoin($currentUser, $wikiId, $request.userComment))\n          #if ($request)\n            ## Send message to wiki admins. (XWikiAdminGroup)\n            #set ($wikiAdminGroupReference = $services.model.createDocumentReference($wikiId, 'XWiki', 'XWikiAdminGroup'))\n            #set ($notificationMessage = $services.localization.render('platform.wiki.users.join.request.saveNotification', [${xwiki.getUserName($currentUser, false)}, $currentUser, $wikiName, $wikiId]))\n            #set ($discard = $services.messageStream.postMessageToGroup($notificationMessage, $wikiAdminGroupReference))\n            {{success}}$services.localization.render('platform.wiki.users.join.request.success', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/success}}\n          #else\n            #printException($services.wiki.user.lastError.message)\n          #end\n        #end\n      #else\n        ## Open membership as default.\n        ##\n        #if (!$services.csrf.isTokenValid($form_token))\n          ## Open join.\n          ##\n          #if(\"$!form_token\" != '')\n\n           {{warning}}\n             {{translation key=\"platform.wiki.csrf.error\" /}}\n           {{/warning}}\n\n          #end\n          {{box}}\n            $services.localization.render('platform.wiki.users.join.confirmation', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n            ((({{html}}\n              &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\n                &lt;fieldset&gt;\n                  &lt;input type=\"hidden\" name=\"wikiId\" value=\"$!escapetool.xml($wikiId)\" /&gt;\n                  &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n                  &lt;span class=\"buttonwrapper\"&gt;&lt;button class=\"button\"&gt;$services.localization.render('platform.wiki.users.join.yes')&lt;/button&gt; &lt;a class=\"button\" href=\"$backUrl\"&gt;$services.localization.render('platform.wiki.users.join.no')&lt;/a&gt;&lt;/span&gt;\n                &lt;/fieldset&gt;\n              &lt;/form&gt;\n            {{/html}})))\n          {{/box}}\n        #else\n          ## User confirmed to join the wiki.\n          ##\n          #set ($result = $services.wiki.user.join($currentUser, $wikiId))\n          #if ($result)\n            {{success}}$services.localization.render('platform.wiki.users.join.success', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/success}}\n          #else\n            #printException($services.wiki.user.lastError.message)\n          #end\n        #end\n      #end\n    #end\n  #end\n#end\n{{/velocity}}</content>\n</xwikidoc>\n"], "fixing_code": ["<?xml version=\"1.1\" encoding=\"UTF-8\"?>\n\n<!--\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n-->\n\n<xwikidoc version=\"1.1\">\n  <web>WikiManager</web>\n  <name>JoinWiki</name>\n  <language/>\n  <defaultLanguage/>\n  <translation>0</translation>\n  <creator>xwiki:XWiki.Admin</creator>\n  <parent>WikiManager.WebHome</parent>\n  <author>xwiki:XWiki.Admin</author>\n  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>\n  <version>1.1</version>\n  <title>$services.localization.render('platform.wiki.users.join.title')</title>\n  <comment/>\n  <minorEdit>false</minorEdit>\n  <syntaxId>xwiki/2.0</syntaxId>\n  <hidden>true</hidden>\n  <content>{{velocity}}\n#macro (printException $exception)\n  #if($exception.message)\n    {{error}}$services.localization.render('platform.wiki.error.exceptionWithMessage', [$exception.message]){{/error}}\n  #else\n    {{error}}$exception.class{{/error}}\n  #end\n#end\n#set ($wikiId = $request.wikiId)\n#set ($form_token = $request.form_token)\n##\n#if (\"$!wikiId\" == '')\n  {{error}}{{translation key=\"platform.wiki.error.oneParameterNotSpecified\" parameters=\"wikiId\"/}}{{/error}}\n#else\n  ## FIXME: add plugin dependency checks.\n  ##\n  #set ($wiki = $services.wiki.getById($wikiId))\n  #set ($wikiMainPage = $wiki.mainPageReference)\n  #set ($wikiMainPageLinkStart = '')\n  #set ($wikiMainPageLinkEnd = '')\n  #if ($xwiki.exists($wikiMainPage))\n    #set ($wikiMainPageLinkStart = '[[')\n    #set ($wikiMainPageLinkEnd = \"&gt;&gt;${wikiMainPage}]]\")\n  #end\n  ##\n  #if (\"$!wiki\" == '')\n    #if (\"$!{services.wiki.lastError}\" != '')\n      {{error}}$services.localization.render('platform.wiki.error.exceptionWithMessage', [$services.wiki.lastError.message]){{/error}}\n    #else\n      {{error}}$services.localization.render('platform.wiki.error.wikidoesnotexist', [$wikiId]){{/error}}\n    #end\n  #else\n    #set ($wikiName = $wiki.prettyName)\n    #if (\"$!wikiName\" == '')\n      #set ($wikiName = $wikiId)\n    #end\n    #set ($currentUser = $services.model.serialize($xcontext.userReference, 'default'))\n    ##\n    #set ($members = $services.wiki.user.getMembers($wikiId))\n    #if ($members &amp;&amp; $members.contains($currentUser))\n      {{info}}$services.localization.render('platform.wiki.users.userAlreadyMemberOfWiki', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/info}}\n    #elseif ($currentUser == 'xwiki:XWiki.XWikiGuest')\n      #set ($loginDocumentReference = $services.model.createDocumentReference($services.wiki.mainWikiId, 'XWiki', 'XWikiLogin'))\n      #set ($loginDocument = $xwiki.getDocument($loginDocumentReference))\n      #set ($loginUrl = $loginDocument.getExternalURL('login', \"xredirect=$escapetool.url($xwiki.relativeRequestURL)\"))\n      {{error}}$services.localization.render('platform.wiki.users.logInToContinue', ['[[', \"&gt;&gt;$loginUrl]]\"]){{/error}}\n    #else\n      ## The user is not already a member of the wiki\n      ##\n      #set ($browseDocumentReference = $services.model.createDocumentReference($services.wiki.mainWikiId, 'WikiManager', 'WebHome'))\n      #set ($backUrl = $xwiki.getURL($browseDocumentReference))\n      ##\n      #set ($membershipType = $services.wiki.user.getMembershipType($wiki.id))\n      ##\n      ## Determine if, regardless of membership type, an existing invitation exists for the current user.\n      #set ($invitations = $services.wiki.user.getAllInvitations($wikiId))\n      #set ($existingInvitation = false)\n      #if ($invitations &amp;&amp; !$invitations.isEmpty())\n        #foreach($invitation in $invitations)\n          #if ($invitation.userId == $currentUser &amp;&amp; $invitation.status == 'PENDING')\n            #set ($existingInvitation = $invitation)\n          #end\n        #end\n      #end\n      #if ($existingInvitation)\n        ##\n        ## An invitation exists.\n        #if (($request.acceptInvitation || $request.rejectInvitation) &amp;&amp; $services.csrf.isTokenValid($form_token))\n          ##\n          ## The user decided whether to accept or to reject the invitation.\n          #set ($notificationMessage = $services.localization.render('platform.wiki.users.invitation.userAcceptedNotification', [${xwiki.getUserName($currentUser, false)}, $currentUser, ${wikiName}, $wikiId]))\n          ## Accept\n          #if ($request.acceptInvitation)\n            #set ($discard = $services.wiki.user.acceptInvitation($existingInvitation, $request.userComment))\n          #else\n            #set ($discard = $services.wiki.user.refuseInvitation($existingInvitation, $request.userComment))\n          #end          \n          ## Send message to wiki admins. (XWikiAdminGroup)\n          #set ($wikiAdminGroupReference = $services.model.createDocumentReference($wikiId, 'XWiki', 'XWikiAdminGroup'))\n          #set ($discard = $services.messageStream.postMessageToGroup($notificationMessage, $wikiAdminGroupReference))\n          ## Display the proper success info.\n          {{success}}\n          #if ($request.acceptInvitation)\n            $services.localization.render('platform.wiki.users.invitation.userAcceptedSuccess', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n          #else\n            $services.localization.render('platform.wiki.users.invitation.userRejectedSuccess', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n          #end\n          {{/success}}\n        #else\n          #if(\"$!form_token\" != '')\n\n             {{warning}}\n               {{translation key=\"platform.wiki.csrf.error\" /}}\n             {{/warning}}\n\n          #end\n          ##\n          ## User can decide if to accept or reject the invitation.\n          {{html wiki='true'}}\n          $services.localization.render('platform.wiki.users.invitation.title', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n\n          &lt;form class='xform third' method='post'&gt;\n            &lt;dl&gt;\n            #if (\"$!existingInvitation.get('reviewerComment').getValue()\" != '')\n              &lt;dt&gt;\n                &lt;label&gt;{{translation key=\"platform.wiki.users.invitation.message.label\"/}}&lt;/label&gt;\n              &lt;/dt&gt;\n              &lt;dd&gt;\n                $existingInvitation.get('reviewerComment').getValue()\n              &lt;/dd&gt;\n            #end  \n              &lt;dt&gt;\n                &lt;label for='userComment'&gt;{{translation key=\"platform.wiki.users.invitation.reply.title\"/}}&lt;/label&gt;\n                &lt;span class='xHint'&gt;{{translation key=\"platform.wiki.users.invitation.reply.hint\"/}}&lt;/span&gt;\n              &lt;/dt&gt;\n              &lt;dd&gt;&lt;textarea name='userComment' rows='7' cols='45'&gt;&lt;/textarea&gt;&lt;/dd&gt;\n              &lt;span class='buttonwrapper'&gt;\n                &lt;br/&gt;\n                &lt;input type='submit' name='acceptInvitation' value=\"$services.localization.render('platform.wiki.users.invitation.accept.label')\" class='button'/&gt;\n                &lt;input type='submit' name='rejectInvitation' value=\"$services.localization.render('platform.wiki.users.invitation.reject.label')\" class='button'/&gt;\n                &lt;a href=\"$backUrl\" class='button secondary'&gt;{{translation key=\"platform.wiki.users.invitation.postpone.label\"/}}&lt;/a&gt;\n              &lt;/span&gt;\n              &lt;input type=\"hidden\" name=\"wikiId\" value=\"$!escapetool.xml($wikiId)\" /&gt;\n              &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n            &lt;/dl&gt;\n          &lt;/form&gt;\n          {{/html}}\n        #end\n      ##\n      ## The user is not invited to join. Continue based on the current membership type of the wiki.\n      #elseif ($membershipType == 'INVITE')\n        ##\n        ## User does not have an invitation.\n        {{error}}{{translation key=\"platform.wiki.users.join.error.needInvitation\"/}}{{/error}}\n      #elseif ($membershipType == 'REQUEST')\n        ## Determine if a pending request already exists.\n        ##\n        #set ($pendingRequest = false)\n        #set ($existingRequests = $services.wiki.user.getAllRequests($wikiId))\n        #foreach ($existingRequest in $existingRequests)\n          #if ($existingRequest.userId == $currentUser &amp;&amp; $existingRequest.status == 'PENDING')\n            #set ($pendingRequest = $existingRequest)\n          #end\n        #end\n        #if ($pendingRequest)\n          #if (\"$!{request.cancelJoinRequest}\" != '1')\n            ## Request already exists.\n            ##\n            {{info}}$services.localization.render('platform.wiki.users.join.request.pendingRequestExists', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/info}}\n          #elseif (!$services.csrf.isTokenValid($form_token))\n            ## User wants to cancel existing request.\n            ##\n            #if(\"$!form_token\" != '')\n\n              {{warning}}\n               {{translation key=\"platform.wiki.csrf.error\" /}}\n              {{/warning}}\n\n            #end\n            {{box}}\n              $services.localization.render('platform.wiki.users.join.request.cancelConfirmation', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n              ((({{html}}\n                &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\n                  &lt;fieldset&gt;\n                    &lt;input type=\"hidden\" name=\"wikiId\" value=\"$!escapetool.xml($wikiId)\" /&gt;\n                    &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n                    &lt;input type=\"hidden\" name=\"cancelJoinRequest\" value=\"1\" /&gt;\n                    &lt;span class=\"buttonwrapper\"&gt;&lt;button class=\"button\"&gt;$services.localization.render('platform.wiki.users.join.request.cancelYes')&lt;/button&gt; &lt;a class=\"button\" href=\"$backUrl\"&gt;$services.localization.render('platform.wiki.users.join.request.cancelNo')&lt;/a&gt;&lt;/span&gt;\n                  &lt;/fieldset&gt;\n                &lt;/form&gt;\n              {{/html}})))\n            {{/box}}\n          #else\n            ## User confirms the cancel of existing request.\n            ##\n            #set ($result = $services.wiki.user.cancelCandidacy($pendingRequest))\n            #if ($result)\n              {{success}}$services.localization.render('platform.wiki.users.join.request.cancelSuccess',  ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/success}}\n            #else\n              #printException($services.wiki.user.lastError.message)\n            #end\n          #end\n        #elseif (!$services.csrf.isTokenValid($form_token))\n          ## Join request.\n          ##\n          #if(\"$!form_token\" != '')\n\n           {{warning}}\n             {{translation key=\"platform.wiki.csrf.error\" /}}\n           {{/warning}}\n\n          #end\n        \n          {{html wiki='true'}}\n            $services.localization.render('platform.wiki.users.join.request.hint', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n\n            &lt;form class='xform third' method='GET'&gt;\n              &lt;dl&gt;\n                &lt;dt&gt;\n                  &lt;label for='userComment'&gt;{{translation key=\"platform.wiki.users.join.request.message.label\"/}}&lt;/label&gt;\n                  &lt;span class='xHint'&gt;{{translation key=\"platform.wiki.users.join.request.message.hint\"/}}&lt;/span&gt;\n                &lt;/dt&gt;\n                &lt;dd&gt;&lt;textarea name='userComment' rows='7' cols='45'&gt;&lt;/textarea&gt;&lt;/dd&gt;\n                &lt;span class='buttonwrapper'&gt;\n                  &lt;br/&gt;\n                  &lt;input type='submit' name='submit' value=\"$services.localization.render('platform.wiki.users.join.request.send.label')\" class='button'/&gt;\n                  &lt;a href=\"$backUrl\" class='button secondary'&gt;{{translation key=\"platform.wiki.users.join.request.cancel.label\"/}}&lt;/a&gt;\n                &lt;/span&gt;\n                &lt;input type='hidden' name='wikiId' value=\"$!wikiId\"/&gt;\n                &lt;input type='hidden' name='requestJoin' value=\"$escapetool.xml($!request.requestJoin)\"/&gt;\n                &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n              &lt;/dl&gt;\n            &lt;/form&gt;\n          {{/html}}\n        #else\n          ## User confirmed the join request.\n          ##\n          #set ($request = $services.wiki.user.askToJoin($currentUser, $wikiId, $request.userComment))\n          #if ($request)\n            ## Send message to wiki admins. (XWikiAdminGroup)\n            #set ($wikiAdminGroupReference = $services.model.createDocumentReference($wikiId, 'XWiki', 'XWikiAdminGroup'))\n            #set ($notificationMessage = $services.localization.render('platform.wiki.users.join.request.saveNotification', [${xwiki.getUserName($currentUser, false)}, $currentUser, $wikiName, $wikiId]))\n            #set ($discard = $services.messageStream.postMessageToGroup($notificationMessage, $wikiAdminGroupReference))\n            {{success}}$services.localization.render('platform.wiki.users.join.request.success', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/success}}\n          #else\n            #printException($services.wiki.user.lastError.message)\n          #end\n        #end\n      #else\n        ## Open membership as default.\n        ##\n        #if (!$services.csrf.isTokenValid($form_token))\n          ## Open join.\n          ##\n          #if(\"$!form_token\" != '')\n\n           {{warning}}\n             {{translation key=\"platform.wiki.csrf.error\" /}}\n           {{/warning}}\n\n          #end\n          {{box}}\n            $services.localization.render('platform.wiki.users.join.confirmation', [$wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd])\n            ((({{html}}\n              &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\n                &lt;fieldset&gt;\n                  &lt;input type=\"hidden\" name=\"wikiId\" value=\"$!escapetool.xml($wikiId)\" /&gt;\n                  &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" /&gt;\n                  &lt;span class=\"buttonwrapper\"&gt;&lt;button class=\"button\"&gt;$services.localization.render('platform.wiki.users.join.yes')&lt;/button&gt; &lt;a class=\"button\" href=\"$backUrl\"&gt;$services.localization.render('platform.wiki.users.join.no')&lt;/a&gt;&lt;/span&gt;\n                &lt;/fieldset&gt;\n              &lt;/form&gt;\n            {{/html}})))\n          {{/box}}\n        #else\n          ## User confirmed to join the wiki.\n          ##\n          #set ($result = $services.wiki.user.join($currentUser, $wikiId))\n          #if ($result)\n            {{success}}$services.localization.render('platform.wiki.users.join.success', ['[[', $currentUser, \"&gt;&gt;$currentUser]]\", $wikiMainPageLinkStart, $wikiName, $wikiMainPageLinkEnd]){{/success}}\n          #else\n            #printException($services.wiki.user.lastError.message)\n          #end\n        #end\n      #end\n    #end\n  #end\n#end\n{{/velocity}}</content>\n</xwikidoc>\n"], "filenames": ["xwiki-platform-core/xwiki-platform-wiki/xwiki-platform-wiki-ui/xwiki-platform-wiki-ui-mainwiki/src/main/resources/WikiManager/JoinWiki.xml"], "buggy_code_start_loc": [248], "buggy_code_end_loc": [249], "fixing_code_start_loc": [248], "fixing_code_end_loc": [249], "type": "CWE-79", "message": "XWiki Platform Wiki UI Main Wiki is a package for managing subwikis. Starting with version 5.3-milestone-2, XWiki Platform Wiki UI Main Wiki contains a possible cross-site scripting vector in the `WikiManager.JoinWiki ` wiki page related to the \"requestJoin\" field. The issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, and 13.10.3. The easiest available workaround is to edit the wiki page `WikiManager.JoinWiki` (with wiki editor) according to the suggestion provided in the GitHub Security Advisory.", "other": {"cve": {"id": "CVE-2022-29252", "sourceIdentifier": "security-advisories@github.com", "published": "2022-05-25T21:15:08.410", "lastModified": "2022-06-07T18:50:19.087", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XWiki Platform Wiki UI Main Wiki is a package for managing subwikis. Starting with version 5.3-milestone-2, XWiki Platform Wiki UI Main Wiki contains a possible cross-site scripting vector in the `WikiManager.JoinWiki ` wiki page related to the \"requestJoin\" field. The issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, and 13.10.3. The easiest available workaround is to edit the wiki page `WikiManager.JoinWiki` (with wiki editor) according to the suggestion provided in the GitHub Security Advisory."}, {"lang": "es", "value": "XWiki Platform Wiki UI Main Wiki es un paquete para administrar subwikis. A partir de la versi\u00f3n 5.3-milestone-2, XWiki Platform Wiki UI Main Wiki contiene un posible vector de tipo cross-site scripting en la p\u00e1gina wiki \"WikiManager.JoinWiki\" relacionada con el campo \"requestJoin\". El problema est\u00e1 parcheado en versiones 12.10.11, 14.0-rc-1, 13.4.7 y 13.10.3. La mitigaci\u00f3n m\u00e1s f\u00e1cil disponible es editar la p\u00e1gina wiki \"WikiManager.JoinWiki\" (con el editor wiki) de acuerdo con la sugerencia proporcionada en el aviso de seguridad de GitHub"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.4, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 4.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-116"}, {"lang": "en", "value": "CWE-80"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "5.4", "versionEndExcluding": "12.10.11", "matchCriteriaId": "E00D6352-E102-4796-8283-D275F4122D75"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "13.0", "versionEndExcluding": "13.4.7", "matchCriteriaId": "46DEE085-75DA-4505-A874-EB0EBEC70FBE"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "13.5", "versionEndExcluding": "13.10.3", "matchCriteriaId": "14BFEB5B-7E8A-431B-A265-CE9FAE6A2F60"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:5.3:milestone2:*:*:*:*:*:*", "matchCriteriaId": "067AAD11-1AB2-4688-8D81-F2464CD2FA14"}]}]}], "references": [{"url": "https://github.com/xwiki/xwiki-platform/commit/27f839133d41877e538d35fa88274b50a1c00b9b", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-ph5x-h23x-7q5q", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-19292", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/xwiki/xwiki-platform/commit/27f839133d41877e538d35fa88274b50a1c00b9b"}}