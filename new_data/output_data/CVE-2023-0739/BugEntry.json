{"buggy_code": ["// Package docs GENERATED BY SWAG; DO NOT EDIT\n// This file was generated by swaggo/swag\npackage docs\n\nimport \"github.com/swaggo/swag\"\n\nconst docTemplate = `{\n    \"schemes\": {{ marshal .Schemes }},\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"description\": \"{{escape .Description}}\",\n        \"title\": \"{{.Title}}\",\n        \"contact\": {},\n        \"version\": \"{{.Version}}\"\n    },\n    \"host\": \"{{.Host}}\",\n    \"basePath\": \"{{.BasePath}}\",\n    \"paths\": {\n        \"/\": {\n            \"get\": {\n                \"description\": \"if config file not exist try to redirect to install page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"if config file not exist try to redirect to install page\",\n                \"responses\": {}\n            }\n        },\n        \"/answer/admin/api/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"answer id or question title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/answer/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetAnswerStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetAnswerStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetAnswerStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/dashboard\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DashboardInfo\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"DashboardInfo\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"closed\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id or title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetQuestionStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetQuestionStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetQuestionStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/report/\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"handle flag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"handle flag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"flag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReportHandleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reports/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"list report records\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"list report page\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"pending\",\n                            \"completed\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"all\",\n                            \"question\",\n                            \"answer\",\n                            \"comment\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/roles\": {\n            \"get\": {\n                \"description\": \"get role list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get role list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRoleResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/setting/smtp\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetSMTPConfig get smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"GetSMTPConfig get smtp config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSMTPConfigResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update smtp config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"smtp config\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateSMTPConfigReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/branding\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info branding\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info branding\",\n                \"parameters\": [\n                    {\n                        \"description\": \"branding info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteBrandingReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/custom-css-html\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info custom html css config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info custom html css config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/general\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site general information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site general information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteGeneralReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/interface\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info interface\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteInterfaceReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/legal\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Set the legal information for the site\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Set the legal information for the site\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLegalResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site legal info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLegalReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/login\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info login config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info login config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site login\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site login\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLoginReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/seo\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site seo information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteSeoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site seo information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"seo\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/theme\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info theme config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info theme config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteThemeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/write\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteWriteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site write info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site write info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteWriteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/theme/options\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Get theme options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Get theme options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"add user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddUserReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user password\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user password\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserPasswordReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/role\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user role\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user role\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserRoleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserStatusReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/users/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get user page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"search query: email, username or id:[id]\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"staff user\",\n                        \"name\": \"staff\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"suspended\",\n                            \"deleted\",\n                            \"inactive\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"records\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUserPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline\": {\n            \"get\": {\n                \"description\": \"get object timeline\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag slug name\",\n                        \"name\": \"tag_slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"tag\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"is show vote\",\n                        \"name\": \"show_vote\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline/detail\": {\n            \"get\": {\n                \"description\": \"get object timeline detail\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline detail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"revision id\",\n                        \"name\": \"revision_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Update Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Update Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerUpdateReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerUpdateReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Insert Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Insert Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAddReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAddReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"delete answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"answer\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveAnswerReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/acceptance\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Accepted\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Accepted\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAcceptedReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAcceptedReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/info\": {\n            \"get\": {\n                \"description\": \"Get Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Get Answer\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Answer TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"AnswerList \\u003cbr\\u003e \\u003cb\\u003eorder\\u003c/b\\u003e (default or updated)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"AnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page_size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/collection/switch\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add collection\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"add collection\",\n                \"parameters\": [\n                    {\n                        \"description\": \"collection\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CollectionSwitchReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.CollectionSwitchResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment\": {\n            \"get\": {\n                \"description\": \"get comment by id\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment by id\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"update comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"add comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"remove comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"remove comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment/page\": {\n            \"get\": {\n                \"description\": \"get comment page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"vote\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/file\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"upload file\",\n                \"consumes\": [\n                    \"multipart/form-data\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"upload file\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"post\",\n                            \"avatar\",\n                            \"branding\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"identify the source of the file upload\",\n                        \"name\": \"source\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"file\",\n                        \"description\": \"file\",\n                        \"name\": \"file\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"follow object or cancel follow operation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"follow object or cancel follow operation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.FollowReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.FollowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow/tags\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user follow tags\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"update user follow tags\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateFollowTagsReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/config\": {\n            \"get\": {\n                \"description\": \"get language config mapping\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get language config mapping\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"Accept-Language\",\n                        \"name\": \"Accept-Language\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get notification list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"get notification list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"inbox\",\n                            \"achievement\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"type\",\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearIDRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearIDRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state/all\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/status\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"GetRedDot\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DelRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"DelRedDot\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserAnswerList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"UserAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/collection/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserCollectionList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"UserCollectionList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/comment/page\": {\n            \"get\": {\n                \"description\": \"user personal comment list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"user personal comment list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/qa/top\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserTop\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserTop\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/rank/page\": {\n            \"get\": {\n                \"description\": \"user personal rank list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Rank\"\n                ],\n                \"summary\": \"user personal rank list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetRankPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetOtherUserInfoByUsername\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetOtherUserInfoByUsername\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetOtherUserInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/vote/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user's vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"user's votes\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetVoteWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/post/render\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"render post content\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"render post content\",\n                \"parameters\": [\n                    {\n                        \"description\": \"PostRenderReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.PostRenderReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"update question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionUpdate\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionAdd\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"delete question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/closemsglist\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"close question msg list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"close question msg list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get question details\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get question details\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Question TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/page\": {\n            \"get\": {\n                \"description\": \"get questions by page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get questions by page\",\n                \"parameters\": [\n                    {\n                        \"description\": \"QuestionPageReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionPageReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.QuestionPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/reopen\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"reopen question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"reopen question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReopenQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question title like\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question title like\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"title\",\n                        \"name\": \"title\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar/tag\": {\n            \"get\": {\n                \"description\": \"Search Similar Question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Search Similar Question\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Close question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Close question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CloseQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/tags\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag\",\n                        \"name\": \"tag\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add report \\u003cbr\\u003e source (question, answer, comment, user)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"add report\",\n                \"parameters\": [\n                    {\n                        \"description\": \"report\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddReportReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report/type/list\": {\n            \"get\": {\n                \"description\": \"get report type list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"get report type list\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"report source\",\n                        \"name\": \"source\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetReportTypeResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions\": {\n            \"get\": {\n                \"description\": \"get revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/audit\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"revision audit operation:approve or reject\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"revision audit\",\n                \"parameters\": [\n                    {\n                        \"description\": \"audit\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RevisionAuditReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/edit/check\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"check can update revision\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"check can update revision\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/unreviewed\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get unreviewed revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get unreviewed revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page id\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUnreviewedRevisionResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/search\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"search object\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"search object\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"query string\",\n                        \"name\": \"q\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"active\",\n                            \"score\",\n                            \"relevance\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SearchListResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo\": {\n            \"get\": {\n                \"description\": \"get site info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site info\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo/legal\": {\n            \"get\": {\n                \"description\": \"get site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site legal info\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"tos\",\n                            \"privacy\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"legal information type\",\n                        \"name\": \"info_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSiteLegalInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag\": {\n            \"get\": {\n                \"description\": \"get tag one\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag one\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag name\",\n                        \"name\": \"tag_name\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"description\": \"delete tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"delete tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonym\": {\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagSynonymReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonyms\": {\n            \"get\": {\n                \"description\": \"get tag synonyms\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag synonyms\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagSynonymsResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/following\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get following tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get following tag list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetFollowingTagsResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/page\": {\n            \"get\": {\n                \"description\": \"get tag page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"slug_name\",\n                        \"name\": \"slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"popular\",\n                            \"name\",\n                            \"newest\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetTagPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/action/record\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ActionRecord\",\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"ActionRecord\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"login\",\n                            \"e_mail\",\n                            \"find_pass\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.ActionRecordResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user change email verification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user change email verification\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailVerifyReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailVerifyReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/change/code\": {\n            \"post\": {\n                \"description\": \"send email to the user email then change their email\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"send email to the user email then change their email\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailSendCodeReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailSendCodeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/notification\": {\n            \"put\": {\n                \"description\": \"unsubscribe email notification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"unsubscribe email notification\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification\": {\n            \"post\": {\n                \"description\": \"UserVerifyEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"code\",\n                        \"name\": \"code\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification/send\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserVerifyEmailSend\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmailSend\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_id\",\n                        \"name\": \"captcha_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_code\",\n                        \"name\": \"captcha_code\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user info, if user no login response http code is 200, but user info is null\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetUserInfoByUserID\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserToSetShowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInfo update user info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInfo update user info\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateInfoRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/interface\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInterface update user interface config\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInterface update user interface config\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserInterfaceRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/login/email\": {\n            \"post\": {\n                \"description\": \"UserEmailLogin\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserEmailLogin\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserEmailLogin\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserEmailLogin\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/logout\": {\n            \"get\": {\n                \"description\": \"user logout\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user logout\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/notice/set\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserNoticeSet\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserNoticeSet\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserNoticeSetRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserNoticeSetRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserNoticeSetResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserModifyPassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserModifyPassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserModifyPassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserModifyPassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/replacement\": {\n            \"post\": {\n                \"description\": \"UseRePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UseRePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/reset\": {\n            \"post\": {\n                \"description\": \"RetrievePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"RetrievePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRetrievePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRetrievePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/ranking\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user ranking\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"get user ranking\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserRankingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/captcha\": {\n            \"get\": {\n                \"description\": \"UserRegisterCaptcha\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterCaptcha\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/email\": {\n            \"post\": {\n                \"description\": \"UserRegisterByEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterByEmail\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRegisterReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRegisterReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/down\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote down\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/up\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote up\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/custom.css\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/base-info\": {\n            \"post\": {\n                \"description\": \"init base info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init base info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"InitBaseInfoReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.InitBaseInfoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/config-file/check\": {\n            \"post\": {\n                \"description\": \"check config file if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check config file if exist when installation\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/db/check\": {\n            \"post\": {\n                \"description\": \"check database if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check database if exist when installation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/init\": {\n            \"post\": {\n                \"description\": \"init environment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init environment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/language/options\": {\n            \"get\": {\n                \"description\": \"get installation language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get installation language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/translator.LangOption\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/personal/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/robots.txt\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"definitions\": {\n        \"handler.RespBody\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"http code\",\n                    \"type\": \"integer\"\n                },\n                \"data\": {\n                    \"description\": \"response data\"\n                },\n                \"msg\": {\n                    \"description\": \"response message\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"description\": \"reason key\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.CheckConfigFileResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"config_file_exist\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_connection_success\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_table_exist\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"install.CheckDatabaseReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"db_type\"\n            ],\n            \"properties\": {\n                \"db_file\": {\n                    \"type\": \"string\"\n                },\n                \"db_host\": {\n                    \"type\": \"string\"\n                },\n                \"db_name\": {\n                    \"type\": \"string\"\n                },\n                \"db_password\": {\n                    \"type\": \"string\"\n                },\n                \"db_type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"postgres\",\n                        \"sqlite3\",\n                        \"mysql\"\n                    ]\n                },\n                \"db_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.InitBaseInfoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"email\",\n                \"lang\",\n                \"name\",\n                \"password\",\n                \"site_name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"lang\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"site_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"pager.PageModel\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"list\": {}\n            }\n        },\n        \"schema.ActObjectInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActObjectTimeline\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"activity_id\": {\n                    \"type\": \"string\"\n                },\n                \"activity_type\": {\n                    \"type\": \"string\"\n                },\n                \"cancelled\": {\n                    \"type\": \"boolean\"\n                },\n                \"cancelled_at\": {\n                    \"type\": \"integer\"\n                },\n                \"comment\": {\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"revision_id\": {\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActionRecordResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"captcha_id\": {\n                    \"type\": \"string\"\n                },\n                \"captcha_img\": {\n                    \"type\": \"string\"\n                },\n                \"verify\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.AddCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"original_text\",\n                \"parsed_text\"\n            ],\n            \"properties\": {\n                \"mention_username_list\": {\n                    \"description\": \"@ user id list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AddReportReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"report_type\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"report content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\",\n                    \"maxLength\": 20\n                },\n                \"report_type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.AddUserReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\",\n                \"email\",\n                \"password\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.AdminSetAnswerStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AdminSetQuestionStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAcceptedReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAddReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerUpdateReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit_summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AvatarInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"gravatar\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.CloseQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"close_msg\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"string\"\n                },\n                \"close_type\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"group_id\",\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"group_id\": {\n                    \"description\": \"user collection group TagID\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object TagID\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_collection_count\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.FollowReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.FollowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"follows\": {\n                    \"description\": \"the followers of object\",\n                    \"type\": \"integer\"\n                },\n                \"is_followed\": {\n                    \"description\": \"if user is followed object will be true,otherwise false\",\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.GetCommentPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetCommentResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"is_vote\": {\n                    \"description\": \"current user if already vote this comment\",\n                    \"type\": \"boolean\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_display_name\": {\n                    \"description\": \"reply user display name\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_id\": {\n                    \"description\": \"reply user id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_status\": {\n                    \"description\": \"reply user status\",\n                    \"type\": \"string\"\n                },\n                \"reply_username\": {\n                    \"description\": \"reply user username\",\n                    \"type\": \"string\"\n                },\n                \"user_avatar\": {\n                    \"description\": \"user avatar\",\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"description\": \"user display name\",\n                    \"type\": \"string\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"user vote amount\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetFollowingTagsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetObjectTimelineResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_info\": {\n                    \"$ref\": \"#/definitions/schema.ActObjectInfo\"\n                },\n                \"timeline\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ActObjectTimeline\"\n                    }\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoByUsernameResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"email\\nfollow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                },\n                \"status_msg\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"has\": {\n                    \"type\": \"boolean\"\n                },\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.GetOtherUserInfoByUsernameResp\"\n                }\n            }\n        },\n        \"schema.GetRankPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"rank_type\": {\n                    \"description\": \"rank type\",\n                    \"type\": \"string\"\n                },\n                \"reputation\": {\n                    \"description\": \"reputation\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetReportTypeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content_type\": {\n                    \"description\": \"content type\",\n                    \"type\": \"string\"\n                },\n                \"description\": {\n                    \"description\": \"report description\",\n                    \"type\": \"string\"\n                },\n                \"have_content\": {\n                    \"description\": \"is have content\",\n                    \"type\": \"boolean\"\n                },\n                \"name\": {\n                    \"description\": \"report name\",\n                    \"type\": \"string\"\n                },\n                \"source\": {\n                    \"description\": \"report source\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content parsed\"\n                },\n                \"create_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"revision status(normal: 1; delete 2)\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"use_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                }\n            }\n        },\n        \"schema.GetRoleResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSMTPConfigResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\"\n                },\n                \"from_email\": {\n                    \"type\": \"string\"\n                },\n                \"from_name\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\"\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSiteLegalInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetTagPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed_text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"description\": \"description text\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagSynonymsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"synonyms\": {\n                    \"description\": \"synonyms\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagSynonym\"\n                    }\n                }\n            }\n        },\n        \"schema.GetUnreviewedRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.UnreviewedRevisionInfoInfo\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                },\n                \"unreviewed_info\": {\n                    \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                }\n            }\n        },\n        \"schema.GetUserPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"deleted_at\": {\n                    \"description\": \"delete time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"role_name\": {\n                    \"description\": \"role name\",\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"user status(normal,suspended,deleted,inactive)\",\n                    \"type\": \"string\"\n                },\n                \"suspended_at\": {\n                    \"description\": \"suspended time\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserToSetShowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetVoteWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"vote_type\": {\n                    \"description\": \"vote type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearIDRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"type\": {\n                    \"description\": \"inbox achievement\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PermissionMemberAction\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PostRenderReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionAdd\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.QuestionPageReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"orderCond\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"newest\",\n                        \"active\",\n                        \"frequent\",\n                        \"score\",\n                        \"unanswered\"\n                    ]\n                },\n                \"page\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"pageSize\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"tag\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.QuestionPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted_answer_id\": {\n                    \"description\": \"answer information\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"collection_count\": {\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"last_answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"operated_at\": {\n                    \"description\": \"operator information\",\n                    \"type\": \"integer\"\n                },\n                \"operation_type\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/schema.QuestionPageRespOperator\"\n                },\n                \"status\": {\n                    \"type\": \"integer\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"unique_view_count\": {\n                    \"type\": \"integer\"\n                },\n                \"url_title\": {\n                    \"type\": \"string\"\n                },\n                \"view_count\": {\n                    \"description\": \"question statistical information\",\n                    \"type\": \"integer\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.QuestionPageRespOperator\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionUpdate\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"id\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.RemoveAnswerReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReopenQuestionReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReportHandleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"flagged_type\",\n                \"id\"\n            ],\n            \"properties\": {\n                \"flagged_content\": {\n                    \"type\": \"string\"\n                },\n                \"flagged_type\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RevisionAuditReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\",\n                \"operation\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"operation\": {\n                    \"description\": \"approve or reject\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SearchListResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"extra\": {\n                    \"description\": \"extra fields\"\n                },\n                \"list\": {\n                    \"description\": \"search response\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.SearchResp\"\n                    }\n                }\n            }\n        },\n        \"schema.SearchObject\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted\": {\n                    \"type\": \"boolean\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"excerpt\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"Status\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"description\": \"user info\",\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.SearchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object\": {\n                    \"description\": \"this object\",\n                    \"$ref\": \"#/definitions/schema.SearchObject\"\n                },\n                \"object_type\": {\n                    \"description\": \"object_type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteBrandingReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteBrandingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteGeneralReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteGeneralResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"branding\": {\n                    \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                },\n                \"custom_css_html\": {\n                    \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                },\n                \"general\": {\n                    \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                },\n                \"interface\": {\n                    \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                },\n                \"login\": {\n                    \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                },\n                \"site_seo\": {\n                    \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                },\n                \"theme\": {\n                    \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                }\n            }\n        },\n        \"schema.SiteInterfaceReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteInterfaceResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteLegalReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLegalResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLoginReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteLoginResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteSeoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteSeoResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteThemeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"theme\"\n            ],\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                }\n            }\n        },\n        \"schema.SiteThemeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\"\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                },\n                \"theme_options\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ThemeOption\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.TagItem\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                }\n            }\n        },\n        \"schema.TagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.TagSynonym\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ThemeOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UnreviewedRevisionInfoInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateFollowTagsReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"slug_name_list\": {\n                    \"description\": \"tag slug name list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.UpdateInfoRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\"\n            ],\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio\",\n                    \"type\": \"string\",\n                    \"maxLength\": 4096\n                },\n                \"bio_html\": {\n                    \"description\": \"bio\",\n                    \"type\": \"string\",\n                    \"maxLength\": 4096\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UpdateSMTPConfigReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"SSL\"\n                    ]\n                },\n                \"from_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"from_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 65535,\n                    \"minimum\": 1\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"test_email_recipient\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagSynonymReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"synonym_tag_list\",\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"synonym_tag_list\": {\n                    \"description\": \"synonym tag list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserInterfaceRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.UpdateUserPasswordReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"password\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"user_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserRoleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"role_id\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserStatusReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"status\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"normal\",\n                        \"suspended\",\n                        \"deleted\",\n                        \"inactive\"\n                    ]\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserBasicInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"user_id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserChangeEmailSendCodeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"captcha_id\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"e_mail\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserChangeEmailVerifyReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserEmailLogin\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserModifyPassWordRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"old_pass\": {\n                    \"description\": \"old password\",\n                    \"type\": \"string\"\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserRankingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"staffs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_reputation\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_vote\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                }\n            }\n        },\n        \"schema.UserRankingSimpleInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"vote\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.UserRePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"code\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"pass\": {\n                    \"description\": \"Password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32\n                }\n            }\n        },\n        \"schema.UserRegisterReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"name\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"name\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserRetrievePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.VoteReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.VoteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"down_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"up_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"vote_status\": {\n                    \"type\": \"string\"\n                },\n                \"votes\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"translator.LangOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    },\n    \"securityDefinitions\": {\n        \"ApiKeyAuth\": {\n            \"type\": \"apiKey\",\n            \"name\": \"Authorization\",\n            \"in\": \"header\"\n        }\n    }\n}`\n\n// SwaggerInfo holds exported Swagger Info so clients can modify it\nvar SwaggerInfo = &swag.Spec{\n\tVersion:          \"\",\n\tHost:             \"\",\n\tBasePath:         \"\",\n\tSchemes:          []string{},\n\tTitle:            \"\",\n\tDescription:      \"\",\n\tInfoInstanceName: \"swagger\",\n\tSwaggerTemplate:  docTemplate,\n}\n\nfunc init() {\n\tswag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)\n}\n", "{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"contact\": {}\n    },\n    \"paths\": {\n        \"/\": {\n            \"get\": {\n                \"description\": \"if config file not exist try to redirect to install page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"if config file not exist try to redirect to install page\",\n                \"responses\": {}\n            }\n        },\n        \"/answer/admin/api/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"answer id or question title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/answer/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetAnswerStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetAnswerStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetAnswerStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/dashboard\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DashboardInfo\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"DashboardInfo\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"closed\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id or title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetQuestionStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetQuestionStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetQuestionStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/report/\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"handle flag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"handle flag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"flag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReportHandleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reports/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"list report records\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"list report page\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"pending\",\n                            \"completed\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"all\",\n                            \"question\",\n                            \"answer\",\n                            \"comment\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/roles\": {\n            \"get\": {\n                \"description\": \"get role list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get role list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRoleResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/setting/smtp\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetSMTPConfig get smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"GetSMTPConfig get smtp config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSMTPConfigResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update smtp config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"smtp config\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateSMTPConfigReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/branding\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info branding\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info branding\",\n                \"parameters\": [\n                    {\n                        \"description\": \"branding info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteBrandingReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/custom-css-html\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info custom html css config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info custom html css config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/general\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site general information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site general information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteGeneralReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/interface\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info interface\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteInterfaceReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/legal\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Set the legal information for the site\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Set the legal information for the site\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLegalResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site legal info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLegalReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/login\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info login config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info login config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site login\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site login\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLoginReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/seo\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site seo information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteSeoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site seo information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"seo\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/theme\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info theme config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info theme config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteThemeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/write\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteWriteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site write info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site write info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteWriteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/theme/options\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Get theme options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Get theme options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"add user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddUserReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user password\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user password\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserPasswordReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/role\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user role\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user role\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserRoleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserStatusReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/users/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get user page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"search query: email, username or id:[id]\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"staff user\",\n                        \"name\": \"staff\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"suspended\",\n                            \"deleted\",\n                            \"inactive\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"records\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUserPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline\": {\n            \"get\": {\n                \"description\": \"get object timeline\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag slug name\",\n                        \"name\": \"tag_slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"tag\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"is show vote\",\n                        \"name\": \"show_vote\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline/detail\": {\n            \"get\": {\n                \"description\": \"get object timeline detail\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline detail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"revision id\",\n                        \"name\": \"revision_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Update Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Update Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerUpdateReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerUpdateReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Insert Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Insert Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAddReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAddReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"delete answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"answer\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveAnswerReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/acceptance\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Accepted\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Accepted\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAcceptedReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAcceptedReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/info\": {\n            \"get\": {\n                \"description\": \"Get Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Get Answer\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Answer TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"AnswerList \\u003cbr\\u003e \\u003cb\\u003eorder\\u003c/b\\u003e (default or updated)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"AnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page_size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/collection/switch\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add collection\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"add collection\",\n                \"parameters\": [\n                    {\n                        \"description\": \"collection\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CollectionSwitchReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.CollectionSwitchResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment\": {\n            \"get\": {\n                \"description\": \"get comment by id\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment by id\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"update comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"add comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"remove comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"remove comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment/page\": {\n            \"get\": {\n                \"description\": \"get comment page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"vote\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/file\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"upload file\",\n                \"consumes\": [\n                    \"multipart/form-data\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"upload file\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"post\",\n                            \"avatar\",\n                            \"branding\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"identify the source of the file upload\",\n                        \"name\": \"source\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"file\",\n                        \"description\": \"file\",\n                        \"name\": \"file\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"follow object or cancel follow operation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"follow object or cancel follow operation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.FollowReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.FollowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow/tags\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user follow tags\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"update user follow tags\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateFollowTagsReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/config\": {\n            \"get\": {\n                \"description\": \"get language config mapping\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get language config mapping\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"Accept-Language\",\n                        \"name\": \"Accept-Language\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get notification list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"get notification list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"inbox\",\n                            \"achievement\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"type\",\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearIDRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearIDRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state/all\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/status\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"GetRedDot\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DelRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"DelRedDot\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserAnswerList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"UserAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/collection/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserCollectionList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"UserCollectionList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/comment/page\": {\n            \"get\": {\n                \"description\": \"user personal comment list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"user personal comment list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/qa/top\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserTop\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserTop\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/rank/page\": {\n            \"get\": {\n                \"description\": \"user personal rank list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Rank\"\n                ],\n                \"summary\": \"user personal rank list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetRankPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetOtherUserInfoByUsername\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetOtherUserInfoByUsername\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetOtherUserInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/vote/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user's vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"user's votes\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetVoteWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/post/render\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"render post content\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"render post content\",\n                \"parameters\": [\n                    {\n                        \"description\": \"PostRenderReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.PostRenderReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"update question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionUpdate\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionAdd\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"delete question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/closemsglist\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"close question msg list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"close question msg list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get question details\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get question details\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Question TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/page\": {\n            \"get\": {\n                \"description\": \"get questions by page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get questions by page\",\n                \"parameters\": [\n                    {\n                        \"description\": \"QuestionPageReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionPageReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.QuestionPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/reopen\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"reopen question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"reopen question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReopenQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question title like\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question title like\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"title\",\n                        \"name\": \"title\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar/tag\": {\n            \"get\": {\n                \"description\": \"Search Similar Question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Search Similar Question\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Close question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Close question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CloseQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/tags\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag\",\n                        \"name\": \"tag\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add report \\u003cbr\\u003e source (question, answer, comment, user)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"add report\",\n                \"parameters\": [\n                    {\n                        \"description\": \"report\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddReportReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report/type/list\": {\n            \"get\": {\n                \"description\": \"get report type list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"get report type list\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"report source\",\n                        \"name\": \"source\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetReportTypeResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions\": {\n            \"get\": {\n                \"description\": \"get revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/audit\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"revision audit operation:approve or reject\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"revision audit\",\n                \"parameters\": [\n                    {\n                        \"description\": \"audit\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RevisionAuditReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/edit/check\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"check can update revision\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"check can update revision\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/unreviewed\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get unreviewed revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get unreviewed revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page id\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUnreviewedRevisionResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/search\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"search object\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"search object\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"query string\",\n                        \"name\": \"q\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"active\",\n                            \"score\",\n                            \"relevance\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SearchListResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo\": {\n            \"get\": {\n                \"description\": \"get site info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site info\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo/legal\": {\n            \"get\": {\n                \"description\": \"get site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site legal info\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"tos\",\n                            \"privacy\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"legal information type\",\n                        \"name\": \"info_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSiteLegalInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag\": {\n            \"get\": {\n                \"description\": \"get tag one\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag one\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag name\",\n                        \"name\": \"tag_name\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"description\": \"delete tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"delete tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonym\": {\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagSynonymReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonyms\": {\n            \"get\": {\n                \"description\": \"get tag synonyms\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag synonyms\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagSynonymsResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/following\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get following tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get following tag list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetFollowingTagsResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/page\": {\n            \"get\": {\n                \"description\": \"get tag page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"slug_name\",\n                        \"name\": \"slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"popular\",\n                            \"name\",\n                            \"newest\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetTagPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/action/record\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ActionRecord\",\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"ActionRecord\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"login\",\n                            \"e_mail\",\n                            \"find_pass\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.ActionRecordResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user change email verification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user change email verification\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailVerifyReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailVerifyReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/change/code\": {\n            \"post\": {\n                \"description\": \"send email to the user email then change their email\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"send email to the user email then change their email\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailSendCodeReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailSendCodeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/notification\": {\n            \"put\": {\n                \"description\": \"unsubscribe email notification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"unsubscribe email notification\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification\": {\n            \"post\": {\n                \"description\": \"UserVerifyEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"code\",\n                        \"name\": \"code\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification/send\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserVerifyEmailSend\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmailSend\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_id\",\n                        \"name\": \"captcha_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_code\",\n                        \"name\": \"captcha_code\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user info, if user no login response http code is 200, but user info is null\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetUserInfoByUserID\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserToSetShowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInfo update user info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInfo update user info\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateInfoRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/interface\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInterface update user interface config\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInterface update user interface config\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserInterfaceRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/login/email\": {\n            \"post\": {\n                \"description\": \"UserEmailLogin\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserEmailLogin\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserEmailLogin\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserEmailLogin\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/logout\": {\n            \"get\": {\n                \"description\": \"user logout\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user logout\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/notice/set\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserNoticeSet\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserNoticeSet\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserNoticeSetRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserNoticeSetRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserNoticeSetResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserModifyPassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserModifyPassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserModifyPassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserModifyPassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/replacement\": {\n            \"post\": {\n                \"description\": \"UseRePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UseRePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/reset\": {\n            \"post\": {\n                \"description\": \"RetrievePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"RetrievePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRetrievePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRetrievePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/ranking\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user ranking\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"get user ranking\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserRankingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/captcha\": {\n            \"get\": {\n                \"description\": \"UserRegisterCaptcha\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterCaptcha\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/email\": {\n            \"post\": {\n                \"description\": \"UserRegisterByEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterByEmail\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRegisterReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRegisterReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/down\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote down\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/up\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote up\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/custom.css\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/base-info\": {\n            \"post\": {\n                \"description\": \"init base info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init base info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"InitBaseInfoReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.InitBaseInfoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/config-file/check\": {\n            \"post\": {\n                \"description\": \"check config file if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check config file if exist when installation\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/db/check\": {\n            \"post\": {\n                \"description\": \"check database if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check database if exist when installation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/init\": {\n            \"post\": {\n                \"description\": \"init environment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init environment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/language/options\": {\n            \"get\": {\n                \"description\": \"get installation language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get installation language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/translator.LangOption\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/personal/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/robots.txt\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"definitions\": {\n        \"handler.RespBody\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"http code\",\n                    \"type\": \"integer\"\n                },\n                \"data\": {\n                    \"description\": \"response data\"\n                },\n                \"msg\": {\n                    \"description\": \"response message\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"description\": \"reason key\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.CheckConfigFileResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"config_file_exist\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_connection_success\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_table_exist\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"install.CheckDatabaseReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"db_type\"\n            ],\n            \"properties\": {\n                \"db_file\": {\n                    \"type\": \"string\"\n                },\n                \"db_host\": {\n                    \"type\": \"string\"\n                },\n                \"db_name\": {\n                    \"type\": \"string\"\n                },\n                \"db_password\": {\n                    \"type\": \"string\"\n                },\n                \"db_type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"postgres\",\n                        \"sqlite3\",\n                        \"mysql\"\n                    ]\n                },\n                \"db_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.InitBaseInfoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"email\",\n                \"lang\",\n                \"name\",\n                \"password\",\n                \"site_name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"lang\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"site_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"pager.PageModel\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"list\": {}\n            }\n        },\n        \"schema.ActObjectInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActObjectTimeline\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"activity_id\": {\n                    \"type\": \"string\"\n                },\n                \"activity_type\": {\n                    \"type\": \"string\"\n                },\n                \"cancelled\": {\n                    \"type\": \"boolean\"\n                },\n                \"cancelled_at\": {\n                    \"type\": \"integer\"\n                },\n                \"comment\": {\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"revision_id\": {\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActionRecordResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"captcha_id\": {\n                    \"type\": \"string\"\n                },\n                \"captcha_img\": {\n                    \"type\": \"string\"\n                },\n                \"verify\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.AddCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"original_text\",\n                \"parsed_text\"\n            ],\n            \"properties\": {\n                \"mention_username_list\": {\n                    \"description\": \"@ user id list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AddReportReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"report_type\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"report content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\",\n                    \"maxLength\": 20\n                },\n                \"report_type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.AddUserReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\",\n                \"email\",\n                \"password\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.AdminSetAnswerStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AdminSetQuestionStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAcceptedReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAddReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerUpdateReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit_summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AvatarInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"gravatar\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.CloseQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"close_msg\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"string\"\n                },\n                \"close_type\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"group_id\",\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"group_id\": {\n                    \"description\": \"user collection group TagID\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object TagID\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_collection_count\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.FollowReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.FollowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"follows\": {\n                    \"description\": \"the followers of object\",\n                    \"type\": \"integer\"\n                },\n                \"is_followed\": {\n                    \"description\": \"if user is followed object will be true,otherwise false\",\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.GetCommentPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetCommentResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"is_vote\": {\n                    \"description\": \"current user if already vote this comment\",\n                    \"type\": \"boolean\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_display_name\": {\n                    \"description\": \"reply user display name\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_id\": {\n                    \"description\": \"reply user id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_status\": {\n                    \"description\": \"reply user status\",\n                    \"type\": \"string\"\n                },\n                \"reply_username\": {\n                    \"description\": \"reply user username\",\n                    \"type\": \"string\"\n                },\n                \"user_avatar\": {\n                    \"description\": \"user avatar\",\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"description\": \"user display name\",\n                    \"type\": \"string\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"user vote amount\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetFollowingTagsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetObjectTimelineResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_info\": {\n                    \"$ref\": \"#/definitions/schema.ActObjectInfo\"\n                },\n                \"timeline\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ActObjectTimeline\"\n                    }\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoByUsernameResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"email\\nfollow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                },\n                \"status_msg\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"has\": {\n                    \"type\": \"boolean\"\n                },\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.GetOtherUserInfoByUsernameResp\"\n                }\n            }\n        },\n        \"schema.GetRankPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"rank_type\": {\n                    \"description\": \"rank type\",\n                    \"type\": \"string\"\n                },\n                \"reputation\": {\n                    \"description\": \"reputation\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetReportTypeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content_type\": {\n                    \"description\": \"content type\",\n                    \"type\": \"string\"\n                },\n                \"description\": {\n                    \"description\": \"report description\",\n                    \"type\": \"string\"\n                },\n                \"have_content\": {\n                    \"description\": \"is have content\",\n                    \"type\": \"boolean\"\n                },\n                \"name\": {\n                    \"description\": \"report name\",\n                    \"type\": \"string\"\n                },\n                \"source\": {\n                    \"description\": \"report source\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content parsed\"\n                },\n                \"create_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"revision status(normal: 1; delete 2)\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"use_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                }\n            }\n        },\n        \"schema.GetRoleResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSMTPConfigResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\"\n                },\n                \"from_email\": {\n                    \"type\": \"string\"\n                },\n                \"from_name\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\"\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSiteLegalInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetTagPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed_text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"description\": \"description text\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagSynonymsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"synonyms\": {\n                    \"description\": \"synonyms\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagSynonym\"\n                    }\n                }\n            }\n        },\n        \"schema.GetUnreviewedRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.UnreviewedRevisionInfoInfo\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                },\n                \"unreviewed_info\": {\n                    \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                }\n            }\n        },\n        \"schema.GetUserPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"deleted_at\": {\n                    \"description\": \"delete time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"role_name\": {\n                    \"description\": \"role name\",\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"user status(normal,suspended,deleted,inactive)\",\n                    \"type\": \"string\"\n                },\n                \"suspended_at\": {\n                    \"description\": \"suspended time\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserToSetShowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetVoteWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"vote_type\": {\n                    \"description\": \"vote type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearIDRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"type\": {\n                    \"description\": \"inbox achievement\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PermissionMemberAction\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PostRenderReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionAdd\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.QuestionPageReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"orderCond\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"newest\",\n                        \"active\",\n                        \"frequent\",\n                        \"score\",\n                        \"unanswered\"\n                    ]\n                },\n                \"page\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"pageSize\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"tag\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.QuestionPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted_answer_id\": {\n                    \"description\": \"answer information\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"collection_count\": {\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"last_answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"operated_at\": {\n                    \"description\": \"operator information\",\n                    \"type\": \"integer\"\n                },\n                \"operation_type\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/schema.QuestionPageRespOperator\"\n                },\n                \"status\": {\n                    \"type\": \"integer\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"unique_view_count\": {\n                    \"type\": \"integer\"\n                },\n                \"url_title\": {\n                    \"type\": \"string\"\n                },\n                \"view_count\": {\n                    \"description\": \"question statistical information\",\n                    \"type\": \"integer\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.QuestionPageRespOperator\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionUpdate\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"id\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.RemoveAnswerReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReopenQuestionReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReportHandleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"flagged_type\",\n                \"id\"\n            ],\n            \"properties\": {\n                \"flagged_content\": {\n                    \"type\": \"string\"\n                },\n                \"flagged_type\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RevisionAuditReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\",\n                \"operation\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"operation\": {\n                    \"description\": \"approve or reject\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SearchListResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"extra\": {\n                    \"description\": \"extra fields\"\n                },\n                \"list\": {\n                    \"description\": \"search response\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.SearchResp\"\n                    }\n                }\n            }\n        },\n        \"schema.SearchObject\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted\": {\n                    \"type\": \"boolean\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"excerpt\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"Status\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"description\": \"user info\",\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.SearchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object\": {\n                    \"description\": \"this object\",\n                    \"$ref\": \"#/definitions/schema.SearchObject\"\n                },\n                \"object_type\": {\n                    \"description\": \"object_type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteBrandingReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteBrandingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteGeneralReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteGeneralResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"branding\": {\n                    \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                },\n                \"custom_css_html\": {\n                    \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                },\n                \"general\": {\n                    \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                },\n                \"interface\": {\n                    \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                },\n                \"login\": {\n                    \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                },\n                \"site_seo\": {\n                    \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                },\n                \"theme\": {\n                    \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                }\n            }\n        },\n        \"schema.SiteInterfaceReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteInterfaceResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteLegalReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLegalResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLoginReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteLoginResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteSeoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteSeoResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteThemeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"theme\"\n            ],\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                }\n            }\n        },\n        \"schema.SiteThemeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\"\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                },\n                \"theme_options\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ThemeOption\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.TagItem\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                }\n            }\n        },\n        \"schema.TagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.TagSynonym\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ThemeOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UnreviewedRevisionInfoInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateFollowTagsReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"slug_name_list\": {\n                    \"description\": \"tag slug name list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.UpdateInfoRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\"\n            ],\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio\",\n                    \"type\": \"string\",\n                    \"maxLength\": 4096\n                },\n                \"bio_html\": {\n                    \"description\": \"bio\",\n                    \"type\": \"string\",\n                    \"maxLength\": 4096\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UpdateSMTPConfigReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"SSL\"\n                    ]\n                },\n                \"from_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"from_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 65535,\n                    \"minimum\": 1\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"test_email_recipient\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagSynonymReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"synonym_tag_list\",\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"synonym_tag_list\": {\n                    \"description\": \"synonym tag list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserInterfaceRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.UpdateUserPasswordReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"password\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"user_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserRoleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"role_id\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserStatusReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"status\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"normal\",\n                        \"suspended\",\n                        \"deleted\",\n                        \"inactive\"\n                    ]\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserBasicInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"user_id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserChangeEmailSendCodeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"captcha_id\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"e_mail\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserChangeEmailVerifyReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserEmailLogin\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserModifyPassWordRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"old_pass\": {\n                    \"description\": \"old password\",\n                    \"type\": \"string\"\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserRankingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"staffs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_reputation\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_vote\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                }\n            }\n        },\n        \"schema.UserRankingSimpleInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"vote\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.UserRePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"code\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"pass\": {\n                    \"description\": \"Password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32\n                }\n            }\n        },\n        \"schema.UserRegisterReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"name\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"name\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserRetrievePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.VoteReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.VoteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"down_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"up_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"vote_status\": {\n                    \"type\": \"string\"\n                },\n                \"votes\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"translator.LangOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    },\n    \"securityDefinitions\": {\n        \"ApiKeyAuth\": {\n            \"type\": \"apiKey\",\n            \"name\": \"Authorization\",\n            \"in\": \"header\"\n        }\n    }\n}", "definitions:\n  handler.RespBody:\n    properties:\n      code:\n        description: http code\n        type: integer\n      data:\n        description: response data\n      msg:\n        description: response message\n        type: string\n      reason:\n        description: reason key\n        type: string\n    type: object\n  install.CheckConfigFileResp:\n    properties:\n      config_file_exist:\n        type: boolean\n      db_connection_success:\n        type: boolean\n      db_table_exist:\n        type: boolean\n    type: object\n  install.CheckDatabaseReq:\n    properties:\n      db_file:\n        type: string\n      db_host:\n        type: string\n      db_name:\n        type: string\n      db_password:\n        type: string\n      db_type:\n        enum:\n        - postgres\n        - sqlite3\n        - mysql\n        type: string\n      db_username:\n        type: string\n    required:\n    - db_type\n    type: object\n  install.InitBaseInfoReq:\n    properties:\n      contact_email:\n        maxLength: 500\n        type: string\n      email:\n        maxLength: 500\n        type: string\n      lang:\n        maxLength: 30\n        type: string\n      name:\n        maxLength: 30\n        type: string\n      password:\n        maxLength: 32\n        minLength: 8\n        type: string\n      site_name:\n        maxLength: 30\n        type: string\n      site_url:\n        maxLength: 512\n        type: string\n    required:\n    - contact_email\n    - email\n    - lang\n    - name\n    - password\n    - site_name\n    - site_url\n    type: object\n  pager.PageModel:\n    properties:\n      count:\n        type: integer\n      list: {}\n    type: object\n  schema.ActObjectInfo:\n    properties:\n      answer_id:\n        type: string\n      display_name:\n        type: string\n      main_tag_slug_name:\n        type: string\n      object_type:\n        type: string\n      question_id:\n        type: string\n      title:\n        type: string\n      username:\n        type: string\n    type: object\n  schema.ActObjectTimeline:\n    properties:\n      activity_id:\n        type: string\n      activity_type:\n        type: string\n      cancelled:\n        type: boolean\n      cancelled_at:\n        type: integer\n      comment:\n        type: string\n      created_at:\n        type: integer\n      id:\n        type: string\n      object_id:\n        type: string\n      object_type:\n        type: string\n      revision_id:\n        type: string\n      user_display_name:\n        type: string\n      username:\n        type: string\n    type: object\n  schema.ActionRecordResp:\n    properties:\n      captcha_id:\n        type: string\n      captcha_img:\n        type: string\n      verify:\n        type: boolean\n    type: object\n  schema.AddCommentReq:\n    properties:\n      mention_username_list:\n        description: '@ user id list'\n        items:\n          type: string\n        type: array\n      object_id:\n        description: object id\n        type: string\n      original_text:\n        description: original comment content\n        type: string\n      parsed_text:\n        description: parsed comment content\n        type: string\n      reply_comment_id:\n        description: reply comment id\n        type: string\n    required:\n    - object_id\n    - original_text\n    - parsed_text\n    type: object\n  schema.AddReportReq:\n    properties:\n      content:\n        description: report content\n        maxLength: 500\n        type: string\n      object_id:\n        description: object id\n        maxLength: 20\n        type: string\n      report_type:\n        description: report type\n        type: integer\n    required:\n    - object_id\n    - report_type\n    type: object\n  schema.AddUserReq:\n    properties:\n      display_name:\n        maxLength: 30\n        type: string\n      email:\n        maxLength: 500\n        type: string\n      password:\n        maxLength: 32\n        minLength: 8\n        type: string\n    required:\n    - display_name\n    - email\n    - password\n    type: object\n  schema.AdminSetAnswerStatusRequest:\n    properties:\n      answer_id:\n        type: string\n      status:\n        type: string\n    type: object\n  schema.AdminSetQuestionStatusRequest:\n    properties:\n      question_id:\n        type: string\n      status:\n        type: string\n    type: object\n  schema.AnswerAcceptedReq:\n    properties:\n      answer_id:\n        type: string\n      question_id:\n        type: string\n    type: object\n  schema.AnswerAddReq:\n    properties:\n      content:\n        description: content\n        type: string\n      html:\n        description: html\n        type: string\n      question_id:\n        description: question_id\n        type: string\n    type: object\n  schema.AnswerUpdateReq:\n    properties:\n      content:\n        description: content\n        type: string\n      edit_summary:\n        description: edit_summary\n        type: string\n      html:\n        description: html\n        type: string\n      id:\n        description: id\n        type: string\n      question_id:\n        description: question_id\n        type: string\n      title:\n        description: title\n        type: string\n    type: object\n  schema.AvatarInfo:\n    properties:\n      custom:\n        maxLength: 200\n        type: string\n      gravatar:\n        maxLength: 200\n        type: string\n      type:\n        maxLength: 100\n        type: string\n    type: object\n  schema.CloseQuestionReq:\n    properties:\n      close_msg:\n        description: close_type\n        type: string\n      close_type:\n        description: close_type\n        type: integer\n      id:\n        type: string\n    required:\n    - id\n    type: object\n  schema.CollectionSwitchReq:\n    properties:\n      group_id:\n        description: user collection group TagID\n        type: string\n      object_id:\n        description: object TagID\n        type: string\n    required:\n    - group_id\n    - object_id\n    type: object\n  schema.CollectionSwitchResp:\n    properties:\n      object_collection_count:\n        type: string\n      object_id:\n        type: string\n      switch:\n        type: boolean\n    type: object\n  schema.FollowReq:\n    properties:\n      is_cancel:\n        description: is cancel\n        type: boolean\n      object_id:\n        description: object id\n        type: string\n    required:\n    - object_id\n    type: object\n  schema.FollowResp:\n    properties:\n      follows:\n        description: the followers of object\n        type: integer\n      is_followed:\n        description: if user is followed object will be true,otherwise false\n        type: boolean\n    type: object\n  schema.GetCommentPersonalWithPageResp:\n    properties:\n      answer_id:\n        description: answer id\n        type: string\n      comment_id:\n        description: comment id\n        type: string\n      content:\n        description: content\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      object_id:\n        description: object id\n        type: string\n      object_type:\n        description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        - comment\n        type: string\n      question_id:\n        description: question id\n        type: string\n      title:\n        description: title\n        type: string\n    type: object\n  schema.GetCommentResp:\n    properties:\n      comment_id:\n        description: comment id\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      is_vote:\n        description: current user if already vote this comment\n        type: boolean\n      member_actions:\n        description: MemberActions\n        items:\n          $ref: '#/definitions/schema.PermissionMemberAction'\n        type: array\n      object_id:\n        description: object id\n        type: string\n      original_text:\n        description: original comment content\n        type: string\n      parsed_text:\n        description: parsed comment content\n        type: string\n      reply_comment_id:\n        description: reply comment id\n        type: string\n      reply_user_display_name:\n        description: reply user display name\n        type: string\n      reply_user_id:\n        description: reply user id\n        type: string\n      reply_user_status:\n        description: reply user status\n        type: string\n      reply_username:\n        description: reply user username\n        type: string\n      user_avatar:\n        description: user avatar\n        type: string\n      user_display_name:\n        description: user display name\n        type: string\n      user_id:\n        description: user id\n        type: string\n      user_status:\n        description: user status\n        type: string\n      username:\n        description: username\n        type: string\n      vote_count:\n        description: user vote amount\n        type: integer\n    type: object\n  schema.GetFollowingTagsResp:\n    properties:\n      display_name:\n        description: display name\n        type: string\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        description: slug name\n        type: string\n      tag_id:\n        description: tag id\n        type: string\n    type: object\n  schema.GetObjectTimelineResp:\n    properties:\n      object_info:\n        $ref: '#/definitions/schema.ActObjectInfo'\n      timeline:\n        items:\n          $ref: '#/definitions/schema.ActObjectTimeline'\n        type: array\n    type: object\n  schema.GetOtherUserInfoByUsernameResp:\n    properties:\n      answer_count:\n        description: answer count\n        type: integer\n      avatar:\n        description: avatar\n        type: string\n      bio:\n        description: bio markdown\n        type: string\n      bio_html:\n        description: bio html\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      follow_count:\n        description: |-\n          email\n          follow count\n        type: integer\n      id:\n        description: user id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      is_admin:\n        description: is admin\n        type: boolean\n      last_login_date:\n        description: last login date\n        type: integer\n      location:\n        description: location\n        type: string\n      mobile:\n        description: mobile\n        type: string\n      question_count:\n        description: question count\n        type: integer\n      rank:\n        description: rank\n        type: integer\n      status:\n        type: string\n      status_msg:\n        type: string\n      username:\n        description: username\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.GetOtherUserInfoResp:\n    properties:\n      has:\n        type: boolean\n      info:\n        $ref: '#/definitions/schema.GetOtherUserInfoByUsernameResp'\n    type: object\n  schema.GetRankPersonalWithPageResp:\n    properties:\n      answer_id:\n        description: answer id\n        type: string\n      content:\n        description: content\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      object_id:\n        description: object id\n        type: string\n      object_type:\n        description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        - comment\n        type: string\n      question_id:\n        description: question id\n        type: string\n      rank_type:\n        description: rank type\n        type: string\n      reputation:\n        description: reputation\n        type: integer\n      title:\n        description: title\n        type: string\n    type: object\n  schema.GetReportTypeResp:\n    properties:\n      content_type:\n        description: content type\n        type: string\n      description:\n        description: report description\n        type: string\n      have_content:\n        description: is have content\n        type: boolean\n      name:\n        description: report name\n        type: string\n      source:\n        description: report source\n        type: string\n      type:\n        description: report type\n        type: integer\n    type: object\n  schema.GetRevisionResp:\n    properties:\n      content:\n        description: content parsed\n      create_at:\n        type: integer\n      id:\n        description: id\n        type: string\n      object_id:\n        description: object id\n        type: string\n      reason:\n        type: string\n      status:\n        description: 'revision status(normal: 1; delete 2)'\n        type: integer\n      title:\n        description: title\n        type: string\n      use_id:\n        description: user id\n        type: string\n      user_info:\n        $ref: '#/definitions/schema.UserBasicInfo'\n    type: object\n  schema.GetRoleResp:\n    properties:\n      description:\n        type: string\n      id:\n        type: integer\n      name:\n        type: string\n    type: object\n  schema.GetSMTPConfigResp:\n    properties:\n      encryption:\n        description: '\"\" SSL'\n        type: string\n      from_email:\n        type: string\n      from_name:\n        type: string\n      smtp_authentication:\n        type: boolean\n      smtp_host:\n        type: string\n      smtp_password:\n        type: string\n      smtp_port:\n        type: integer\n      smtp_username:\n        type: string\n    type: object\n  schema.GetSiteLegalInfoResp:\n    properties:\n      privacy_policy_original_text:\n        type: string\n      privacy_policy_parsed_text:\n        type: string\n      terms_of_service_original_text:\n        type: string\n      terms_of_service_parsed_text:\n        type: string\n    type: object\n  schema.GetTagPageResp:\n    properties:\n      created_at:\n        description: created time\n        type: integer\n      display_name:\n        description: display_name\n        type: string\n      excerpt:\n        description: excerpt\n        type: string\n      follow_count:\n        description: follower amount\n        type: integer\n      is_follower:\n        description: is follower\n        type: boolean\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed_text\n        type: string\n      question_count:\n        description: question amount\n        type: integer\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        description: slug_name\n        type: string\n      tag_id:\n        description: tag_id\n        type: string\n      updated_at:\n        description: updated time\n        type: integer\n    type: object\n  schema.GetTagResp:\n    properties:\n      created_at:\n        description: created time\n        type: integer\n      description:\n        description: description text\n        type: string\n      display_name:\n        description: display name\n        type: string\n      excerpt:\n        description: excerpt\n        type: string\n      follow_count:\n        description: follower amount\n        type: integer\n      is_follower:\n        description: is follower\n        type: boolean\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      member_actions:\n        description: MemberActions\n        items:\n          $ref: '#/definitions/schema.PermissionMemberAction'\n        type: array\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed text\n        type: string\n      question_count:\n        description: question amount\n        type: integer\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        description: slug name\n        type: string\n      tag_id:\n        description: tag id\n        type: string\n      updated_at:\n        description: updated time\n        type: integer\n    type: object\n  schema.GetTagSynonymsResp:\n    properties:\n      member_actions:\n        description: MemberActions\n        items:\n          $ref: '#/definitions/schema.PermissionMemberAction'\n        type: array\n      synonyms:\n        description: synonyms\n        items:\n          $ref: '#/definitions/schema.TagSynonym'\n        type: array\n    type: object\n  schema.GetUnreviewedRevisionResp:\n    properties:\n      info:\n        $ref: '#/definitions/schema.UnreviewedRevisionInfoInfo'\n      type:\n        type: string\n      unreviewed_info:\n        $ref: '#/definitions/schema.GetRevisionResp'\n    type: object\n  schema.GetUserPageResp:\n    properties:\n      avatar:\n        description: avatar\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      deleted_at:\n        description: delete time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      e_mail:\n        description: email\n        type: string\n      rank:\n        description: rank\n        type: integer\n      role_id:\n        description: role id\n        type: integer\n      role_name:\n        description: role name\n        type: string\n      status:\n        description: user status(normal,suspended,deleted,inactive)\n        type: string\n      suspended_at:\n        description: suspended time\n        type: integer\n      user_id:\n        description: user id\n        type: string\n      username:\n        description: username\n        type: string\n    type: object\n  schema.GetUserResp:\n    properties:\n      access_token:\n        description: access token\n        type: string\n      answer_count:\n        description: answer count\n        type: integer\n      authority_group:\n        description: authority group\n        type: integer\n      avatar:\n        description: avatar\n        type: string\n      bio:\n        description: bio markdown\n        type: string\n      bio_html:\n        description: bio html\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      e_mail:\n        description: email\n        type: string\n      follow_count:\n        description: follow count\n        type: integer\n      id:\n        description: user id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      is_admin:\n        description: is admin\n        type: boolean\n      language:\n        description: language\n        type: string\n      last_login_date:\n        description: last login date\n        type: integer\n      location:\n        description: location\n        type: string\n      mail_status:\n        description: mail status(1 pass 2 to be verified)\n        type: integer\n      mobile:\n        description: mobile\n        type: string\n      notice_status:\n        description: notice status(1 on 2off)\n        type: integer\n      question_count:\n        description: question count\n        type: integer\n      rank:\n        description: rank\n        type: integer\n      status:\n        description: user status\n        type: string\n      username:\n        description: username\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.GetUserToSetShowResp:\n    properties:\n      access_token:\n        description: access token\n        type: string\n      answer_count:\n        description: answer count\n        type: integer\n      authority_group:\n        description: authority group\n        type: integer\n      avatar:\n        $ref: '#/definitions/schema.AvatarInfo'\n      bio:\n        description: bio markdown\n        type: string\n      bio_html:\n        description: bio html\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      e_mail:\n        description: email\n        type: string\n      follow_count:\n        description: follow count\n        type: integer\n      id:\n        description: user id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      is_admin:\n        description: is admin\n        type: boolean\n      language:\n        description: language\n        type: string\n      last_login_date:\n        description: last login date\n        type: integer\n      location:\n        description: location\n        type: string\n      mail_status:\n        description: mail status(1 pass 2 to be verified)\n        type: integer\n      mobile:\n        description: mobile\n        type: string\n      notice_status:\n        description: notice status(1 on 2off)\n        type: integer\n      question_count:\n        description: question count\n        type: integer\n      rank:\n        description: rank\n        type: integer\n      status:\n        description: user status\n        type: string\n      username:\n        description: username\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.GetVoteWithPageResp:\n    properties:\n      answer_id:\n        description: answer id\n        type: string\n      content:\n        description: content\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      object_id:\n        description: object id\n        type: string\n      object_type:\n        description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        - comment\n        type: string\n      question_id:\n        description: question id\n        type: string\n      title:\n        description: title\n        type: string\n      vote_type:\n        description: vote type\n        type: string\n    type: object\n  schema.NotificationClearIDRequest:\n    properties:\n      id:\n        type: string\n    type: object\n  schema.NotificationClearRequest:\n    properties:\n      type:\n        description: inbox achievement\n        type: string\n    type: object\n  schema.PermissionMemberAction:\n    properties:\n      action:\n        type: string\n      name:\n        type: string\n      type:\n        type: string\n    type: object\n  schema.PostRenderReq:\n    properties:\n      content:\n        type: string\n    type: object\n  schema.QuestionAdd:\n    properties:\n      content:\n        description: content\n        maxLength: 65535\n        minLength: 6\n        type: string\n      html:\n        description: html\n        maxLength: 65535\n        minLength: 6\n        type: string\n      tags:\n        description: tags\n        items:\n          $ref: '#/definitions/schema.TagItem'\n        type: array\n      title:\n        description: question title\n        maxLength: 150\n        minLength: 6\n        type: string\n    required:\n    - content\n    - html\n    - tags\n    - title\n    type: object\n  schema.QuestionPageReq:\n    properties:\n      orderCond:\n        enum:\n        - newest\n        - active\n        - frequent\n        - score\n        - unanswered\n        type: string\n      page:\n        minimum: 1\n        type: integer\n      pageSize:\n        minimum: 1\n        type: integer\n      tag:\n        maxLength: 100\n        type: string\n      username:\n        maxLength: 100\n        type: string\n    type: object\n  schema.QuestionPageResp:\n    properties:\n      accepted_answer_id:\n        description: answer information\n        type: string\n      answer_count:\n        type: integer\n      collection_count:\n        type: integer\n      description:\n        type: string\n      follow_count:\n        type: integer\n      id:\n        type: string\n      last_answer_id:\n        type: string\n      operated_at:\n        description: operator information\n        type: integer\n      operation_type:\n        type: string\n      operator:\n        $ref: '#/definitions/schema.QuestionPageRespOperator'\n      status:\n        type: integer\n      tags:\n        items:\n          $ref: '#/definitions/schema.TagResp'\n        type: array\n      title:\n        type: string\n      unique_view_count:\n        type: integer\n      url_title:\n        type: string\n      view_count:\n        description: question statistical information\n        type: integer\n      vote_count:\n        type: integer\n    type: object\n  schema.QuestionPageRespOperator:\n    properties:\n      display_name:\n        type: string\n      id:\n        type: string\n      rank:\n        type: integer\n      username:\n        type: string\n    type: object\n  schema.QuestionUpdate:\n    properties:\n      content:\n        description: content\n        maxLength: 65535\n        minLength: 6\n        type: string\n      edit_summary:\n        description: edit summary\n        type: string\n      html:\n        description: html\n        maxLength: 65535\n        minLength: 6\n        type: string\n      id:\n        description: question id\n        type: string\n      tags:\n        description: tags\n        items:\n          $ref: '#/definitions/schema.TagItem'\n        type: array\n      title:\n        description: question title\n        maxLength: 150\n        minLength: 6\n        type: string\n    required:\n    - content\n    - html\n    - id\n    - tags\n    - title\n    type: object\n  schema.RemoveAnswerReq:\n    properties:\n      id:\n        description: answer id\n        type: string\n    required:\n    - id\n    type: object\n  schema.RemoveCommentReq:\n    properties:\n      comment_id:\n        description: comment id\n        type: string\n    required:\n    - comment_id\n    type: object\n  schema.RemoveQuestionReq:\n    properties:\n      id:\n        description: question id\n        type: string\n    required:\n    - id\n    type: object\n  schema.RemoveTagReq:\n    properties:\n      tag_id:\n        description: tag_id\n        type: string\n    required:\n    - tag_id\n    type: object\n  schema.ReopenQuestionReq:\n    properties:\n      question_id:\n        type: string\n    type: object\n  schema.ReportHandleReq:\n    properties:\n      flagged_content:\n        type: string\n      flagged_type:\n        type: integer\n      id:\n        type: string\n    required:\n    - flagged_type\n    - id\n    type: object\n  schema.RevisionAuditReq:\n    properties:\n      id:\n        description: object id\n        type: string\n      operation:\n        description: approve or reject\n        type: string\n    required:\n    - id\n    - operation\n    type: object\n  schema.SearchListResp:\n    properties:\n      count:\n        type: integer\n      extra:\n        description: extra fields\n      list:\n        description: search response\n        items:\n          $ref: '#/definitions/schema.SearchResp'\n        type: array\n    type: object\n  schema.SearchObject:\n    properties:\n      accepted:\n        type: boolean\n      answer_count:\n        type: integer\n      created_at:\n        type: integer\n      excerpt:\n        type: string\n      id:\n        type: string\n      question_id:\n        type: string\n      status:\n        description: Status\n        type: string\n      tags:\n        description: tags\n        items:\n          $ref: '#/definitions/schema.TagResp'\n        type: array\n      title:\n        type: string\n      user_info:\n        $ref: '#/definitions/schema.UserBasicInfo'\n        description: user info\n      vote_count:\n        type: integer\n    type: object\n  schema.SearchResp:\n    properties:\n      object:\n        $ref: '#/definitions/schema.SearchObject'\n        description: this object\n      object_type:\n        description: object_type\n        type: string\n    type: object\n  schema.SiteBrandingReq:\n    properties:\n      favicon:\n        maxLength: 512\n        type: string\n      logo:\n        maxLength: 512\n        type: string\n      mobile_logo:\n        maxLength: 512\n        type: string\n      square_icon:\n        maxLength: 512\n        type: string\n    type: object\n  schema.SiteBrandingResp:\n    properties:\n      favicon:\n        maxLength: 512\n        type: string\n      logo:\n        maxLength: 512\n        type: string\n      mobile_logo:\n        maxLength: 512\n        type: string\n      square_icon:\n        maxLength: 512\n        type: string\n    type: object\n  schema.SiteCustomCssHTMLReq:\n    properties:\n      custom_css:\n        maxLength: 65536\n        type: string\n      custom_footer:\n        maxLength: 65536\n        type: string\n      custom_head:\n        maxLength: 65536\n        type: string\n      custom_header:\n        maxLength: 65536\n        type: string\n    type: object\n  schema.SiteCustomCssHTMLResp:\n    properties:\n      custom_css:\n        maxLength: 65536\n        type: string\n      custom_footer:\n        maxLength: 65536\n        type: string\n      custom_head:\n        maxLength: 65536\n        type: string\n      custom_header:\n        maxLength: 65536\n        type: string\n    type: object\n  schema.SiteGeneralReq:\n    properties:\n      contact_email:\n        maxLength: 512\n        type: string\n      description:\n        maxLength: 2000\n        type: string\n      name:\n        maxLength: 128\n        type: string\n      short_description:\n        maxLength: 255\n        type: string\n      site_url:\n        maxLength: 512\n        type: string\n    required:\n    - contact_email\n    - name\n    - site_url\n    type: object\n  schema.SiteGeneralResp:\n    properties:\n      contact_email:\n        maxLength: 512\n        type: string\n      description:\n        maxLength: 2000\n        type: string\n      name:\n        maxLength: 128\n        type: string\n      short_description:\n        maxLength: 255\n        type: string\n      site_url:\n        maxLength: 512\n        type: string\n    required:\n    - contact_email\n    - name\n    - site_url\n    type: object\n  schema.SiteInfoResp:\n    properties:\n      branding:\n        $ref: '#/definitions/schema.SiteBrandingResp'\n      custom_css_html:\n        $ref: '#/definitions/schema.SiteCustomCssHTMLResp'\n      general:\n        $ref: '#/definitions/schema.SiteGeneralResp'\n      interface:\n        $ref: '#/definitions/schema.SiteInterfaceResp'\n      login:\n        $ref: '#/definitions/schema.SiteLoginResp'\n      site_seo:\n        $ref: '#/definitions/schema.SiteSeoReq'\n      theme:\n        $ref: '#/definitions/schema.SiteThemeResp'\n    type: object\n  schema.SiteInterfaceReq:\n    properties:\n      language:\n        maxLength: 128\n        type: string\n      time_zone:\n        maxLength: 128\n        type: string\n    required:\n    - language\n    - time_zone\n    type: object\n  schema.SiteInterfaceResp:\n    properties:\n      language:\n        maxLength: 128\n        type: string\n      time_zone:\n        maxLength: 128\n        type: string\n    required:\n    - language\n    - time_zone\n    type: object\n  schema.SiteLegalReq:\n    properties:\n      privacy_policy_original_text:\n        type: string\n      privacy_policy_parsed_text:\n        type: string\n      terms_of_service_original_text:\n        type: string\n      terms_of_service_parsed_text:\n        type: string\n    type: object\n  schema.SiteLegalResp:\n    properties:\n      privacy_policy_original_text:\n        type: string\n      privacy_policy_parsed_text:\n        type: string\n      terms_of_service_original_text:\n        type: string\n      terms_of_service_parsed_text:\n        type: string\n    type: object\n  schema.SiteLoginReq:\n    properties:\n      allow_new_registrations:\n        type: boolean\n      login_required:\n        type: boolean\n    type: object\n  schema.SiteLoginResp:\n    properties:\n      allow_new_registrations:\n        type: boolean\n      login_required:\n        type: boolean\n    type: object\n  schema.SiteSeoReq:\n    properties:\n      permalink:\n        maximum: 3\n        minimum: 0\n        type: integer\n      robots:\n        type: string\n    required:\n    - permalink\n    - robots\n    type: object\n  schema.SiteSeoResp:\n    properties:\n      permalink:\n        maximum: 3\n        minimum: 0\n        type: integer\n      robots:\n        type: string\n    required:\n    - permalink\n    - robots\n    type: object\n  schema.SiteThemeReq:\n    properties:\n      theme:\n        maxLength: 255\n        type: string\n      theme_config:\n        additionalProperties: true\n        type: object\n    required:\n    - theme\n    type: object\n  schema.SiteThemeResp:\n    properties:\n      theme:\n        type: string\n      theme_config:\n        additionalProperties: true\n        type: object\n      theme_options:\n        items:\n          $ref: '#/definitions/schema.ThemeOption'\n        type: array\n    type: object\n  schema.SiteWriteReq:\n    properties:\n      recommend_tags:\n        items:\n          type: string\n        type: array\n      required_tag:\n        type: boolean\n      reserved_tags:\n        items:\n          type: string\n        type: array\n    type: object\n  schema.SiteWriteResp:\n    properties:\n      recommend_tags:\n        items:\n          type: string\n        type: array\n      required_tag:\n        type: boolean\n      reserved_tags:\n        items:\n          type: string\n        type: array\n    type: object\n  schema.TagItem:\n    properties:\n      display_name:\n        description: display_name\n        maxLength: 35\n        type: string\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed text\n        type: string\n      slug_name:\n        description: slug_name\n        maxLength: 35\n        type: string\n    type: object\n  schema.TagResp:\n    properties:\n      display_name:\n        type: string\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        type: string\n    type: object\n  schema.TagSynonym:\n    properties:\n      display_name:\n        description: display name\n        type: string\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      slug_name:\n        description: slug name\n        type: string\n      tag_id:\n        description: tag id\n        type: string\n    type: object\n  schema.ThemeOption:\n    properties:\n      label:\n        type: string\n      value:\n        type: string\n    type: object\n  schema.UnreviewedRevisionInfoInfo:\n    properties:\n      content:\n        type: string\n      html:\n        type: string\n      object_id:\n        type: string\n      tags:\n        items:\n          $ref: '#/definitions/schema.TagResp'\n        type: array\n      title:\n        type: string\n    type: object\n  schema.UpdateCommentReq:\n    properties:\n      comment_id:\n        description: comment id\n        type: string\n      original_text:\n        description: original comment content\n        type: string\n      parsed_text:\n        description: parsed comment content\n        type: string\n    required:\n    - comment_id\n    type: object\n  schema.UpdateFollowTagsReq:\n    properties:\n      slug_name_list:\n        description: tag slug name list\n        items:\n          type: string\n        type: array\n    type: object\n  schema.UpdateInfoRequest:\n    properties:\n      avatar:\n        $ref: '#/definitions/schema.AvatarInfo'\n        description: avatar\n      bio:\n        description: bio\n        maxLength: 4096\n        type: string\n      bio_html:\n        description: bio\n        maxLength: 4096\n        type: string\n      display_name:\n        description: display_name\n        maxLength: 30\n        type: string\n      location:\n        description: location\n        maxLength: 100\n        type: string\n      username:\n        description: username\n        maxLength: 30\n        type: string\n      website:\n        description: website\n        maxLength: 500\n        type: string\n    required:\n    - display_name\n    type: object\n  schema.UpdateSMTPConfigReq:\n    properties:\n      encryption:\n        description: '\"\" SSL'\n        enum:\n        - SSL\n        type: string\n      from_email:\n        maxLength: 256\n        type: string\n      from_name:\n        maxLength: 256\n        type: string\n      smtp_authentication:\n        type: boolean\n      smtp_host:\n        maxLength: 256\n        type: string\n      smtp_password:\n        maxLength: 256\n        type: string\n      smtp_port:\n        maximum: 65535\n        minimum: 1\n        type: integer\n      smtp_username:\n        maxLength: 256\n        type: string\n      test_email_recipient:\n        type: string\n    type: object\n  schema.UpdateTagReq:\n    properties:\n      display_name:\n        description: display_name\n        maxLength: 35\n        type: string\n      edit_summary:\n        description: edit summary\n        type: string\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed text\n        type: string\n      slug_name:\n        description: slug_name\n        maxLength: 35\n        type: string\n      tag_id:\n        description: tag_id\n        type: string\n    required:\n    - tag_id\n    type: object\n  schema.UpdateTagSynonymReq:\n    properties:\n      synonym_tag_list:\n        description: synonym tag list\n        items:\n          $ref: '#/definitions/schema.TagItem'\n        type: array\n      tag_id:\n        description: tag_id\n        type: string\n    required:\n    - synonym_tag_list\n    - tag_id\n    type: object\n  schema.UpdateUserInterfaceRequest:\n    properties:\n      language:\n        description: language\n        maxLength: 100\n        type: string\n    required:\n    - language\n    type: object\n  schema.UpdateUserPasswordReq:\n    properties:\n      password:\n        maxLength: 32\n        minLength: 8\n        type: string\n      user_id:\n        type: string\n    required:\n    - password\n    - user_id\n    type: object\n  schema.UpdateUserRoleReq:\n    properties:\n      role_id:\n        description: role id\n        type: integer\n      user_id:\n        description: user id\n        type: string\n    required:\n    - role_id\n    - user_id\n    type: object\n  schema.UpdateUserStatusReq:\n    properties:\n      status:\n        description: user status\n        enum:\n        - normal\n        - suspended\n        - deleted\n        - inactive\n        type: string\n      user_id:\n        description: user id\n        type: string\n    required:\n    - status\n    - user_id\n    type: object\n  schema.UserBasicInfo:\n    properties:\n      avatar:\n        description: avatar\n        type: string\n      display_name:\n        description: display_name\n        type: string\n      id:\n        description: user_id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      location:\n        description: location\n        type: string\n      rank:\n        description: rank\n        type: integer\n      status:\n        description: status\n        type: string\n      username:\n        description: name\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.UserChangeEmailSendCodeReq:\n    properties:\n      captcha_code:\n        maxLength: 500\n        type: string\n      captcha_id:\n        maxLength: 500\n        type: string\n      e_mail:\n        maxLength: 500\n        type: string\n    required:\n    - e_mail\n    type: object\n  schema.UserChangeEmailVerifyReq:\n    properties:\n      code:\n        maxLength: 500\n        type: string\n    required:\n    - code\n    type: object\n  schema.UserEmailLogin:\n    properties:\n      captcha_code:\n        description: captcha_code\n        type: string\n      captcha_id:\n        description: captcha_id\n        type: string\n      e_mail:\n        description: e_mail\n        maxLength: 500\n        type: string\n      pass:\n        description: password\n        maxLength: 32\n        minLength: 8\n        type: string\n    required:\n    - e_mail\n    - pass\n    type: object\n  schema.UserModifyPassWordRequest:\n    properties:\n      old_pass:\n        description: old password\n        type: string\n      pass:\n        description: password\n        type: string\n    type: object\n  schema.UserNoticeSetRequest:\n    properties:\n      notice_switch:\n        type: boolean\n    type: object\n  schema.UserNoticeSetResp:\n    properties:\n      notice_switch:\n        type: boolean\n    type: object\n  schema.UserRankingResp:\n    properties:\n      staffs:\n        items:\n          $ref: '#/definitions/schema.UserRankingSimpleInfo'\n        type: array\n      users_with_the_most_reputation:\n        items:\n          $ref: '#/definitions/schema.UserRankingSimpleInfo'\n        type: array\n      users_with_the_most_vote:\n        items:\n          $ref: '#/definitions/schema.UserRankingSimpleInfo'\n        type: array\n    type: object\n  schema.UserRankingSimpleInfo:\n    properties:\n      avatar:\n        description: avatar\n        type: string\n      display_name:\n        description: display name\n        type: string\n      rank:\n        description: rank\n        type: integer\n      username:\n        description: username\n        type: string\n      vote_count:\n        description: vote\n        type: integer\n    type: object\n  schema.UserRePassWordRequest:\n    properties:\n      code:\n        description: code\n        maxLength: 100\n        type: string\n      pass:\n        description: Password\n        maxLength: 32\n        type: string\n    required:\n    - code\n    - pass\n    type: object\n  schema.UserRegisterReq:\n    properties:\n      captcha_code:\n        description: captcha_code\n        type: string\n      captcha_id:\n        description: captcha_id\n        type: string\n      e_mail:\n        description: email\n        maxLength: 500\n        type: string\n      name:\n        description: name\n        maxLength: 30\n        type: string\n      pass:\n        description: password\n        maxLength: 32\n        minLength: 8\n        type: string\n    required:\n    - e_mail\n    - name\n    - pass\n    type: object\n  schema.UserRetrievePassWordRequest:\n    properties:\n      captcha_code:\n        description: captcha_code\n        type: string\n      captcha_id:\n        description: captcha_id\n        type: string\n      e_mail:\n        description: e_mail\n        maxLength: 500\n        type: string\n    required:\n    - e_mail\n    type: object\n  schema.VoteReq:\n    properties:\n      is_cancel:\n        description: is cancel\n        type: boolean\n      object_id:\n        description: id\n        type: string\n    required:\n    - object_id\n    type: object\n  schema.VoteResp:\n    properties:\n      down_votes:\n        type: integer\n      up_votes:\n        type: integer\n      vote_status:\n        type: string\n      votes:\n        type: integer\n    type: object\n  translator.LangOption:\n    properties:\n      label:\n        type: string\n      value:\n        type: string\n    type: object\ninfo:\n  contact: {}\npaths:\n  /:\n    get:\n      consumes:\n      - application/json\n      description: if config file not exist try to redirect to install page\n      produces:\n      - application/json\n      responses: {}\n      summary: if config file not exist try to redirect to install page\n      tags:\n      - installation\n  /answer/admin/api/answer/page:\n    get:\n      consumes:\n      - application/json\n      description: Status:[available,deleted]\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: user status\n        enum:\n        - available\n        - deleted\n        in: query\n        name: status\n        type: string\n      - description: answer id or question title\n        in: query\n        name: query\n        type: string\n      - description: question id\n        in: query\n        name: question_id\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSearchAnswerList\n      tags:\n      - admin\n  /answer/admin/api/answer/status:\n    put:\n      consumes:\n      - application/json\n      description: Status:[available,deleted]\n      parameters:\n      - description: AdminSetAnswerStatusRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AdminSetAnswerStatusRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSetAnswerStatus\n      tags:\n      - admin\n  /answer/admin/api/dashboard:\n    get:\n      consumes:\n      - application/json\n      description: DashboardInfo\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: DashboardInfo\n      tags:\n      - admin\n  /answer/admin/api/language/options:\n    get:\n      description: Get language options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: Get language options\n      tags:\n      - Lang\n  /answer/admin/api/question/page:\n    get:\n      consumes:\n      - application/json\n      description: Status:[available,closed,deleted]\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: user status\n        enum:\n        - available\n        - closed\n        - deleted\n        in: query\n        name: status\n        type: string\n      - description: question id or title\n        in: query\n        name: query\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSearchList\n      tags:\n      - admin\n  /answer/admin/api/question/status:\n    put:\n      consumes:\n      - application/json\n      description: Status:[available,closed,deleted]\n      parameters:\n      - description: AdminSetQuestionStatusRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AdminSetQuestionStatusRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSetQuestionStatus\n      tags:\n      - admin\n  /answer/admin/api/reasons:\n    get:\n      consumes:\n      - application/json\n      description: get reasons by object type and action\n      parameters:\n      - description: object_type\n        enum:\n        - question\n        - answer\n        - comment\n        - user\n        in: query\n        name: object_type\n        required: true\n        type: string\n      - description: action\n        enum:\n        - status\n        - close\n        - flag\n        - review\n        in: query\n        name: action\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: get reasons by object type and action\n      tags:\n      - reason\n  /answer/admin/api/report/:\n    put:\n      consumes:\n      - application/json\n      description: handle flag\n      parameters:\n      - description: flag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.ReportHandleReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      - ApiKeyAuth: []\n      summary: handle flag\n      tags:\n      - admin\n  /answer/admin/api/reports/page:\n    get:\n      consumes:\n      - application/json\n      description: list report records\n      parameters:\n      - description: status\n        enum:\n        - pending\n        - completed\n        in: query\n        name: status\n        required: true\n        type: string\n      - description: object_type\n        enum:\n        - all\n        - question\n        - answer\n        - comment\n        in: query\n        name: object_type\n        required: true\n        type: string\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      - ApiKeyAuth: []\n      summary: list report page\n      tags:\n      - admin\n  /answer/admin/api/roles:\n    get:\n      description: get role list\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetRoleResp'\n                  type: array\n              type: object\n      summary: get role list\n      tags:\n      - admin\n  /answer/admin/api/setting/smtp:\n    get:\n      description: GetSMTPConfig get smtp config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetSMTPConfigResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: GetSMTPConfig get smtp config\n      tags:\n      - admin\n    put:\n      description: update smtp config\n      parameters:\n      - description: smtp config\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateSMTPConfigReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update smtp config\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/branding:\n    get:\n      description: get site interface\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteBrandingResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site interface\n      tags:\n      - admin\n    put:\n      description: update site info branding\n      parameters:\n      - description: branding info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteBrandingReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site info branding\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/custom-css-html:\n    get:\n      description: get site info custom html css config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteCustomCssHTMLResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site info custom html css config\n      tags:\n      - admin\n    put:\n      description: update site custom css html config\n      parameters:\n      - description: login info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteCustomCssHTMLReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site custom css html config\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/general:\n    get:\n      description: get site general information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteGeneralResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site general information\n      tags:\n      - admin\n    put:\n      description: update site general information\n      parameters:\n      - description: general\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteGeneralReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site general information\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/interface:\n    get:\n      description: get site interface\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteInterfaceResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site interface\n      tags:\n      - admin\n    put:\n      description: update site info interface\n      parameters:\n      - description: general\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteInterfaceReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site info interface\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/legal:\n    get:\n      description: Set the legal information for the site\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteLegalResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: Set the legal information for the site\n      tags:\n      - admin\n    put:\n      description: update site legal info\n      parameters:\n      - description: write info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteLegalReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site legal info\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/login:\n    get:\n      description: get site info login config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteLoginResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site info login config\n      tags:\n      - admin\n    put:\n      description: update site login\n      parameters:\n      - description: login info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteLoginReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site login\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/seo:\n    get:\n      description: get site seo information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteSeoResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site seo information\n      tags:\n      - admin\n    put:\n      description: update site seo information\n      parameters:\n      - description: seo\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteSeoReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site seo information\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/theme:\n    get:\n      description: get site info theme config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteThemeResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site info theme config\n      tags:\n      - admin\n    put:\n      description: update site custom css html config\n      parameters:\n      - description: login info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteThemeReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site custom css html config\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/write:\n    get:\n      description: get site interface\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteWriteResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site interface\n      tags:\n      - admin\n    put:\n      description: update site write info\n      parameters:\n      - description: write info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteWriteReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site write info\n      tags:\n      - admin\n  /answer/admin/api/theme/options:\n    get:\n      description: Get theme options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: Get theme options\n      tags:\n      - admin\n  /answer/admin/api/user:\n    post:\n      consumes:\n      - application/json\n      description: add user\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AddUserReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: add user\n      tags:\n      - admin\n  /answer/admin/api/user/password:\n    put:\n      consumes:\n      - application/json\n      description: update user password\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserPasswordReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user password\n      tags:\n      - admin\n  /answer/admin/api/user/role:\n    put:\n      consumes:\n      - application/json\n      description: update user role\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserRoleReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user role\n      tags:\n      - admin\n  /answer/admin/api/user/status:\n    put:\n      consumes:\n      - application/json\n      description: update user\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserStatusReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user\n      tags:\n      - admin\n  /answer/admin/api/users/page:\n    get:\n      description: get user page\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: 'search query: email, username or id:[id]'\n        in: query\n        name: query\n        type: string\n      - description: staff user\n        in: query\n        name: staff\n        type: boolean\n      - description: user status\n        enum:\n        - suspended\n        - deleted\n        - inactive\n        in: query\n        name: status\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      records:\n                        items:\n                          $ref: '#/definitions/schema.GetUserPageResp'\n                        type: array\n                    type: object\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get user page\n      tags:\n      - admin\n  /answer/api/v1/activity/timeline:\n    get:\n      description: get object timeline\n      parameters:\n      - description: object id\n        in: query\n        name: object_id\n        type: string\n      - description: tag slug name\n        in: query\n        name: tag_slug_name\n        type: string\n      - description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        in: query\n        name: object_type\n        type: string\n      - description: is show vote\n        in: query\n        name: show_vote\n        type: boolean\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetObjectTimelineResp'\n              type: object\n      summary: get object timeline\n      tags:\n      - Comment\n  /answer/api/v1/activity/timeline/detail:\n    get:\n      description: get object timeline detail\n      parameters:\n      - description: revision id\n        in: query\n        name: revision_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetObjectTimelineResp'\n              type: object\n      summary: get object timeline detail\n      tags:\n      - Comment\n  /answer/api/v1/answer:\n    delete:\n      consumes:\n      - application/json\n      description: delete answer\n      parameters:\n      - description: answer\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveAnswerReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: delete answer\n      tags:\n      - api-answer\n    post:\n      consumes:\n      - application/json\n      description: Insert Answer\n      parameters:\n      - description: AnswerAddReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AnswerAddReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: Insert Answer\n      tags:\n      - api-answer\n    put:\n      consumes:\n      - application/json\n      description: Update Answer\n      parameters:\n      - description: AnswerUpdateReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AnswerUpdateReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: Update Answer\n      tags:\n      - api-answer\n  /answer/api/v1/answer/acceptance:\n    post:\n      consumes:\n      - application/json\n      description: Accepted\n      parameters:\n      - description: AnswerAcceptedReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AnswerAcceptedReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: Accepted\n      tags:\n      - api-answer\n  /answer/api/v1/answer/info:\n    get:\n      consumes:\n      - application/json\n      description: Get Answer\n      parameters:\n      - default: \"1\"\n        description: Answer TagID\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: Get Answer\n      tags:\n      - api-answer\n  /answer/api/v1/answer/page:\n    get:\n      consumes:\n      - application/json\n      description: AnswerList <br> <b>order</b> (default or updated)\n      parameters:\n      - description: question_id\n        in: query\n        name: question_id\n        required: true\n        type: string\n      - description: order\n        in: query\n        name: order\n        required: true\n        type: string\n      - description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - description: page_size\n        in: query\n        name: page_size\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: AnswerList\n      tags:\n      - api-answer\n  /answer/api/v1/collection/switch:\n    post:\n      consumes:\n      - application/json\n      description: add collection\n      parameters:\n      - description: collection\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.CollectionSwitchReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.CollectionSwitchResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: add collection\n      tags:\n      - Collection\n  /answer/api/v1/comment:\n    delete:\n      consumes:\n      - application/json\n      description: remove comment\n      parameters:\n      - description: comment\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveCommentReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: remove comment\n      tags:\n      - Comment\n    get:\n      description: get comment by id\n      parameters:\n      - description: id\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetCommentResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get comment by id\n      tags:\n      - Comment\n    post:\n      consumes:\n      - application/json\n      description: add comment\n      parameters:\n      - description: comment\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AddCommentReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetCommentResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: add comment\n      tags:\n      - Comment\n    put:\n      consumes:\n      - application/json\n      description: update comment\n      parameters:\n      - description: comment\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateCommentReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update comment\n      tags:\n      - Comment\n  /answer/api/v1/comment/page:\n    get:\n      description: get comment page\n      parameters:\n      - description: page\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: object id\n        in: query\n        name: object_id\n        required: true\n        type: string\n      - description: query condition\n        enum:\n        - vote\n        in: query\n        name: query_cond\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetCommentResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get comment page\n      tags:\n      - Comment\n  /answer/api/v1/file:\n    post:\n      consumes:\n      - multipart/form-data\n      description: upload file\n      parameters:\n      - description: identify the source of the file upload\n        enum:\n        - post\n        - avatar\n        - branding\n        in: formData\n        name: source\n        required: true\n        type: string\n      - description: file\n        in: formData\n        name: file\n        required: true\n        type: file\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  type: string\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: upload file\n      tags:\n      - Upload\n  /answer/api/v1/follow:\n    post:\n      consumes:\n      - application/json\n      description: follow object or cancel follow operation\n      parameters:\n      - description: follow\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.FollowReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.FollowResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: follow object or cancel follow operation\n      tags:\n      - Activity\n  /answer/api/v1/follow/tags:\n    put:\n      consumes:\n      - application/json\n      description: update user follow tags\n      parameters:\n      - description: follow\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateFollowTagsReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user follow tags\n      tags:\n      - Activity\n  /answer/api/v1/language/config:\n    get:\n      description: get language config mapping\n      parameters:\n      - description: Accept-Language\n        in: header\n        name: Accept-Language\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: get language config mapping\n      tags:\n      - Lang\n  /answer/api/v1/language/options:\n    get:\n      description: Get language options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: Get language options\n      tags:\n      - Lang\n  /answer/api/v1/notification/page:\n    get:\n      consumes:\n      - application/json\n      description: get notification list\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: type\n        enum:\n        - inbox\n        - achievement\n        in: query\n        name: type\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: get notification list\n      tags:\n      - Notification\n  /answer/api/v1/notification/read/state:\n    put:\n      consumes:\n      - application/json\n      description: ClearUnRead\n      parameters:\n      - description: NotificationClearIDRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.NotificationClearIDRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: ClearUnRead\n      tags:\n      - Notification\n  /answer/api/v1/notification/read/state/all:\n    put:\n      consumes:\n      - application/json\n      description: ClearUnRead\n      parameters:\n      - description: NotificationClearRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.NotificationClearRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: ClearUnRead\n      tags:\n      - Notification\n  /answer/api/v1/notification/status:\n    get:\n      consumes:\n      - application/json\n      description: GetRedDot\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: GetRedDot\n      tags:\n      - Notification\n    put:\n      consumes:\n      - application/json\n      description: DelRedDot\n      parameters:\n      - description: NotificationClearRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.NotificationClearRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: DelRedDot\n      tags:\n      - Notification\n  /answer/api/v1/personal/answer/page:\n    get:\n      consumes:\n      - application/json\n      description: UserAnswerList\n      parameters:\n      - default: string\n        description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      - description: order\n        enum:\n        - newest\n        - score\n        in: query\n        name: order\n        required: true\n        type: string\n      - default: \"0\"\n        description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - default: \"20\"\n        description: pagesize\n        in: query\n        name: pagesize\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserAnswerList\n      tags:\n      - api-answer\n  /answer/api/v1/personal/collection/page:\n    get:\n      consumes:\n      - application/json\n      description: UserCollectionList\n      parameters:\n      - default: \"0\"\n        description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - default: \"20\"\n        description: pagesize\n        in: query\n        name: pagesize\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserCollectionList\n      tags:\n      - Collection\n  /answer/api/v1/personal/comment/page:\n    get:\n      description: user personal comment list\n      parameters:\n      - description: page\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: username\n        in: query\n        name: username\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetCommentPersonalWithPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: user personal comment list\n      tags:\n      - Comment\n  /answer/api/v1/personal/qa/top:\n    get:\n      consumes:\n      - application/json\n      description: UserTop\n      parameters:\n      - default: string\n        description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserTop\n      tags:\n      - Question\n  /answer/api/v1/personal/rank/page:\n    get:\n      description: user personal rank list\n      parameters:\n      - description: page\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: username\n        in: query\n        name: username\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetRankPersonalWithPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: user personal rank list\n      tags:\n      - Rank\n  /answer/api/v1/personal/user/info:\n    get:\n      consumes:\n      - application/json\n      description: GetOtherUserInfoByUsername\n      parameters:\n      - description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetOtherUserInfoResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: GetOtherUserInfoByUsername\n      tags:\n      - User\n  /answer/api/v1/personal/vote/page:\n    get:\n      consumes:\n      - application/json\n      description: user's vote\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetVoteWithPageResp'\n                        type: array\n                    type: object\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: user's votes\n      tags:\n      - Activity\n  /answer/api/v1/post/render:\n    post:\n      consumes:\n      - application/json\n      description: render post content\n      parameters:\n      - description: PostRenderReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.PostRenderReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: render post content\n      tags:\n      - Upload\n  /answer/api/v1/question:\n    delete:\n      consumes:\n      - application/json\n      description: delete question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveQuestionReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: delete question\n      tags:\n      - Question\n    post:\n      consumes:\n      - application/json\n      description: add question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.QuestionAdd'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: add question\n      tags:\n      - Question\n    put:\n      consumes:\n      - application/json\n      description: update question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.QuestionUpdate'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update question\n      tags:\n      - Question\n  /answer/api/v1/question/closemsglist:\n    get:\n      consumes:\n      - application/json\n      description: close question msg list\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: close question msg list\n      tags:\n      - Question\n  /answer/api/v1/question/info:\n    get:\n      consumes:\n      - application/json\n      description: get question details\n      parameters:\n      - default: \"1\"\n        description: Question TagID\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: get question details\n      tags:\n      - Question\n  /answer/api/v1/question/page:\n    get:\n      consumes:\n      - application/json\n      description: get questions by page\n      parameters:\n      - description: QuestionPageReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.QuestionPageReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.QuestionPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get questions by page\n      tags:\n      - Question\n  /answer/api/v1/question/reopen:\n    put:\n      consumes:\n      - application/json\n      description: reopen question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.ReopenQuestionReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: reopen question\n      tags:\n      - Question\n  /answer/api/v1/question/similar:\n    get:\n      consumes:\n      - application/json\n      description: add question title like\n      parameters:\n      - default: string\n        description: title\n        in: query\n        name: title\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: add question title like\n      tags:\n      - Question\n  /answer/api/v1/question/similar/tag:\n    get:\n      consumes:\n      - application/json\n      description: Search Similar Question\n      parameters:\n      - default: \"\"\n        description: question_id\n        in: query\n        name: question_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: Search Similar Question\n      tags:\n      - Question\n  /answer/api/v1/question/status:\n    put:\n      consumes:\n      - application/json\n      description: Close question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.CloseQuestionReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: Close question\n      tags:\n      - Question\n  /answer/api/v1/question/tags:\n    get:\n      description: get tag list\n      parameters:\n      - description: tag\n        in: query\n        name: tag\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetTagResp'\n                  type: array\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get tag list\n      tags:\n      - Tag\n  /answer/api/v1/reasons:\n    get:\n      consumes:\n      - application/json\n      description: get reasons by object type and action\n      parameters:\n      - description: object_type\n        enum:\n        - question\n        - answer\n        - comment\n        - user\n        in: query\n        name: object_type\n        required: true\n        type: string\n      - description: action\n        enum:\n        - status\n        - close\n        - flag\n        - review\n        in: query\n        name: action\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: get reasons by object type and action\n      tags:\n      - reason\n  /answer/api/v1/report:\n    post:\n      consumes:\n      - application/json\n      description: add report <br> source (question, answer, comment, user)\n      parameters:\n      - description: report\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AddReportReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      - ApiKeyAuth: []\n      summary: add report\n      tags:\n      - Report\n  /answer/api/v1/report/type/list:\n    get:\n      description: get report type list\n      parameters:\n      - description: report source\n        enum:\n        - question\n        - answer\n        - comment\n        - user\n        in: query\n        name: source\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetReportTypeResp'\n                  type: array\n              type: object\n      summary: get report type list\n      tags:\n      - Report\n  /answer/api/v1/revisions:\n    get:\n      description: get revision list\n      parameters:\n      - description: object id\n        in: query\n        name: object_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetRevisionResp'\n                  type: array\n              type: object\n      summary: get revision list\n      tags:\n      - Revision\n  /answer/api/v1/revisions/audit:\n    put:\n      description: revision audit operation:approve or reject\n      parameters:\n      - description: audit\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RevisionAuditReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: revision audit\n      tags:\n      - Revision\n  /answer/api/v1/revisions/edit/check:\n    get:\n      consumes:\n      - application/json\n      description: check can update revision\n      parameters:\n      - default: string\n        description: id\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: check can update revision\n      tags:\n      - Revision\n  /answer/api/v1/revisions/unreviewed:\n    get:\n      description: get unreviewed revision list\n      parameters:\n      - description: page id\n        in: query\n        name: page\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetUnreviewedRevisionResp'\n                        type: array\n                    type: object\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get unreviewed revision list\n      tags:\n      - Revision\n  /answer/api/v1/search:\n    get:\n      description: search object\n      parameters:\n      - description: query string\n        in: query\n        name: q\n        required: true\n        type: string\n      - description: order\n        enum:\n        - newest\n        - active\n        - score\n        - relevance\n        in: query\n        name: order\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SearchListResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: search object\n      tags:\n      - Search\n  /answer/api/v1/siteinfo:\n    get:\n      description: get site info\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteInfoResp'\n              type: object\n      summary: get site info\n      tags:\n      - site\n  /answer/api/v1/siteinfo/legal:\n    get:\n      description: get site legal info\n      parameters:\n      - description: legal information type\n        enum:\n        - tos\n        - privacy\n        in: query\n        name: info_type\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetSiteLegalInfoResp'\n              type: object\n      summary: get site legal info\n      tags:\n      - site\n  /answer/api/v1/tag:\n    delete:\n      consumes:\n      - application/json\n      description: delete tag\n      parameters:\n      - description: tag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveTagReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: delete tag\n      tags:\n      - Tag\n    get:\n      consumes:\n      - application/json\n      description: get tag one\n      parameters:\n      - description: tag id\n        in: query\n        name: tag_id\n        required: true\n        type: string\n      - description: tag name\n        in: query\n        name: tag_name\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetTagResp'\n              type: object\n      summary: get tag one\n      tags:\n      - Tag\n    put:\n      consumes:\n      - application/json\n      description: update tag\n      parameters:\n      - description: tag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateTagReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: update tag\n      tags:\n      - Tag\n  /answer/api/v1/tag/synonym:\n    put:\n      consumes:\n      - application/json\n      description: update tag\n      parameters:\n      - description: tag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateTagSynonymReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: update tag\n      tags:\n      - Tag\n  /answer/api/v1/tag/synonyms:\n    get:\n      description: get tag synonyms\n      parameters:\n      - description: tag id\n        in: query\n        name: tag_id\n        required: true\n        type: integer\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetTagSynonymsResp'\n              type: object\n      summary: get tag synonyms\n      tags:\n      - Tag\n  /answer/api/v1/tags/following:\n    get:\n      description: get following tag list\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetFollowingTagsResp'\n                  type: array\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get following tag list\n      tags:\n      - Tag\n  /answer/api/v1/tags/page:\n    get:\n      description: get tag page\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: slug_name\n        in: query\n        name: slug_name\n        type: string\n      - description: query condition\n        enum:\n        - popular\n        - name\n        - newest\n        in: query\n        name: query_cond\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetTagPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get tag page\n      tags:\n      - Tag\n  /answer/api/v1/user/action/record:\n    get:\n      description: ActionRecord\n      parameters:\n      - description: action\n        enum:\n        - login\n        - e_mail\n        - find_pass\n        in: query\n        name: action\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.ActionRecordResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: ActionRecord\n      tags:\n      - User\n  /answer/api/v1/user/email:\n    put:\n      consumes:\n      - application/json\n      description: user change email verification\n      parameters:\n      - description: UserChangeEmailVerifyReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserChangeEmailVerifyReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: user change email verification\n      tags:\n      - User\n  /answer/api/v1/user/email/change/code:\n    post:\n      consumes:\n      - application/json\n      description: send email to the user email then change their email\n      parameters:\n      - description: UserChangeEmailSendCodeReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserChangeEmailSendCodeReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: send email to the user email then change their email\n      tags:\n      - User\n  /answer/api/v1/user/email/notification:\n    put:\n      consumes:\n      - application/json\n      description: unsubscribe email notification\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: unsubscribe email notification\n      tags:\n      - User\n  /answer/api/v1/user/email/verification:\n    post:\n      consumes:\n      - application/json\n      description: UserVerifyEmail\n      parameters:\n      - default: \"\"\n        description: code\n        in: query\n        name: code\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserVerifyEmail\n      tags:\n      - User\n  /answer/api/v1/user/email/verification/send:\n    post:\n      consumes:\n      - application/json\n      description: UserVerifyEmailSend\n      parameters:\n      - default: \"\"\n        description: captcha_id\n        in: query\n        name: captcha_id\n        type: string\n      - default: \"\"\n        description: captcha_code\n        in: query\n        name: captcha_code\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: UserVerifyEmailSend\n      tags:\n      - User\n  /answer/api/v1/user/info:\n    get:\n      consumes:\n      - application/json\n      description: get user info, if user no login response http code is 200, but\n        user info is null\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserToSetShowResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: GetUserInfoByUserID\n      tags:\n      - User\n    put:\n      consumes:\n      - application/json\n      description: UserUpdateInfo update user info\n      parameters:\n      - description: access-token\n        in: header\n        name: Authorization\n        required: true\n        type: string\n      - description: UpdateInfoRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateInfoRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserUpdateInfo update user info\n      tags:\n      - User\n  /answer/api/v1/user/interface:\n    put:\n      consumes:\n      - application/json\n      description: UserUpdateInterface update user interface config\n      parameters:\n      - description: access-token\n        in: header\n        name: Authorization\n        required: true\n        type: string\n      - description: UpdateInfoRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserInterfaceRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserUpdateInterface update user interface config\n      tags:\n      - User\n  /answer/api/v1/user/login/email:\n    post:\n      consumes:\n      - application/json\n      description: UserEmailLogin\n      parameters:\n      - description: UserEmailLogin\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserEmailLogin'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserEmailLogin\n      tags:\n      - User\n  /answer/api/v1/user/logout:\n    get:\n      consumes:\n      - application/json\n      description: user logout\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: user logout\n      tags:\n      - User\n  /answer/api/v1/user/notice/set:\n    post:\n      consumes:\n      - application/json\n      description: UserNoticeSet\n      parameters:\n      - description: UserNoticeSetRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserNoticeSetRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.UserNoticeSetResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: UserNoticeSet\n      tags:\n      - User\n  /answer/api/v1/user/password:\n    put:\n      consumes:\n      - application/json\n      description: UserModifyPassWord\n      parameters:\n      - description: UserModifyPassWordRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserModifyPassWordRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserModifyPassWord\n      tags:\n      - User\n  /answer/api/v1/user/password/replacement:\n    post:\n      consumes:\n      - application/json\n      description: UseRePassWord\n      parameters:\n      - description: UserRePassWordRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserRePassWordRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: UseRePassWord\n      tags:\n      - User\n  /answer/api/v1/user/password/reset:\n    post:\n      consumes:\n      - application/json\n      description: RetrievePassWord\n      parameters:\n      - description: UserRetrievePassWordRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserRetrievePassWordRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: RetrievePassWord\n      tags:\n      - User\n  /answer/api/v1/user/ranking:\n    get:\n      consumes:\n      - application/json\n      description: get user ranking\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.UserRankingResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get user ranking\n      tags:\n      - User\n  /answer/api/v1/user/register/captcha:\n    get:\n      consumes:\n      - application/json\n      description: UserRegisterCaptcha\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserRegisterCaptcha\n      tags:\n      - User\n  /answer/api/v1/user/register/email:\n    post:\n      consumes:\n      - application/json\n      description: UserRegisterByEmail\n      parameters:\n      - description: UserRegisterReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserRegisterReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserRegisterByEmail\n      tags:\n      - User\n  /answer/api/v1/vote/down:\n    post:\n      consumes:\n      - application/json\n      description: add vote\n      parameters:\n      - description: vote\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.VoteReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.VoteResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: vote down\n      tags:\n      - Activity\n  /answer/api/v1/vote/up:\n    post:\n      consumes:\n      - application/json\n      description: add vote\n      parameters:\n      - description: vote\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.VoteReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.VoteResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: vote up\n      tags:\n      - Activity\n  /custom.css:\n    get:\n      description: get site robots information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: get site robots information\n      tags:\n      - site\n  /installation/base-info:\n    post:\n      consumes:\n      - application/json\n      description: init base info\n      parameters:\n      - description: InitBaseInfoReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/install.InitBaseInfoReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: init base info\n      tags:\n      - installation\n  /installation/config-file/check:\n    post:\n      consumes:\n      - application/json\n      description: check config file if exist when installation\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/install.CheckConfigFileResp'\n              type: object\n      summary: check config file if exist when installation\n      tags:\n      - installation\n  /installation/db/check:\n    post:\n      consumes:\n      - application/json\n      description: check database if exist when installation\n      parameters:\n      - description: CheckDatabaseReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/install.CheckDatabaseReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/install.CheckConfigFileResp'\n              type: object\n      summary: check database if exist when installation\n      tags:\n      - installation\n  /installation/init:\n    post:\n      consumes:\n      - application/json\n      description: init environment\n      parameters:\n      - description: CheckDatabaseReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/install.CheckDatabaseReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: init environment\n      tags:\n      - installation\n  /installation/language/options:\n    get:\n      description: get installation language options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/translator.LangOption'\n                  type: array\n              type: object\n      summary: get installation language options\n      tags:\n      - Lang\n  /personal/question/page:\n    get:\n      consumes:\n      - application/json\n      description: UserList\n      parameters:\n      - default: string\n        description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      - description: order\n        enum:\n        - newest\n        - score\n        in: query\n        name: order\n        required: true\n        type: string\n      - default: \"0\"\n        description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - default: \"20\"\n        description: pagesize\n        in: query\n        name: pagesize\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserList\n      tags:\n      - Question\n  /robots.txt:\n    get:\n      description: get site robots information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: get site robots information\n      tags:\n      - site\nsecurityDefinitions:\n  ApiKeyAuth:\n    in: header\n    name: Authorization\n    type: apiKey\nswagger: \"2.0\"\n", "package collection\n\nimport (\n\t\"context\"\n\n\t\"github.com/answerdev/answer/internal/base/constant\"\n\t\"github.com/answerdev/answer/internal/base/data\"\n\t\"github.com/answerdev/answer/internal/base/pager\"\n\t\"github.com/answerdev/answer/internal/base/reason\"\n\t\"github.com/answerdev/answer/internal/entity\"\n\tcollectioncommon \"github.com/answerdev/answer/internal/service/collection_common\"\n\t\"github.com/answerdev/answer/internal/service/unique\"\n\t\"github.com/segmentfault/pacman/errors\"\n)\n\n// collectionRepo collection repository\ntype collectionRepo struct {\n\tdata         *data.Data\n\tuniqueIDRepo unique.UniqueIDRepo\n}\n\n// NewCollectionRepo new repository\nfunc NewCollectionRepo(data *data.Data, uniqueIDRepo unique.UniqueIDRepo) collectioncommon.CollectionRepo {\n\treturn &collectionRepo{\n\t\tdata:         data,\n\t\tuniqueIDRepo: uniqueIDRepo,\n\t}\n}\n\n// AddCollection add collection\nfunc (cr *collectionRepo) AddCollection(ctx context.Context, collection *entity.Collection) (err error) {\n\tid, err := cr.uniqueIDRepo.GenUniqueIDStr(ctx, collection.TableName())\n\tif err == nil {\n\t\tcollection.ID = id\n\t\t_, err = cr.data.DB.Insert(collection)\n\t\tif err != nil {\n\t\t\treturn errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t\t}\n\t}\n\treturn nil\n}\n\n// RemoveCollection delete collection\nfunc (cr *collectionRepo) RemoveCollection(ctx context.Context, id string) (err error) {\n\t_, err = cr.data.DB.Where(\"id =?\", id).Delete(&entity.Collection{})\n\tif err != nil {\n\t\treturn errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn nil\n}\n\n// UpdateCollection update collection\nfunc (cr *collectionRepo) UpdateCollection(ctx context.Context, collection *entity.Collection, cols []string) (err error) {\n\t_, err = cr.data.DB.ID(collection.ID).Cols(cols...).Update(collection)\n\treturn errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n}\n\n// GetCollection get collection one\nfunc (cr *collectionRepo) GetCollection(ctx context.Context, id int) (collection *entity.Collection, exist bool, err error) {\n\tcollection = &entity.Collection{}\n\texist, err = cr.data.DB.ID(id).Get(collection)\n\tif err != nil {\n\t\treturn nil, false, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn\n}\n\n// GetCollectionList get collection list all\nfunc (cr *collectionRepo) GetCollectionList(ctx context.Context, collection *entity.Collection) (collectionList []*entity.Collection, err error) {\n\tcollectionList = make([]*entity.Collection, 0)\n\terr = cr.data.DB.Find(collectionList, collection)\n\terr = errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\treturn\n}\n\n// GetOneByObjectIDAndUser get one by object TagID and user\nfunc (cr *collectionRepo) GetOneByObjectIDAndUser(ctx context.Context, userID string, objectID string) (collection *entity.Collection, exist bool, err error) {\n\tcollection = &entity.Collection{}\n\texist, err = cr.data.DB.Where(\"user_id = ? and object_id = ?\", userID, objectID).Get(collection)\n\tif err != nil {\n\t\treturn nil, false, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn\n}\n\n// SearchByObjectIDsAndUser search by object IDs and user\nfunc (cr *collectionRepo) SearchByObjectIDsAndUser(ctx context.Context, userID string, objectIDs []string) ([]*entity.Collection, error) {\n\tcollectionList := make([]*entity.Collection, 0)\n\terr := cr.data.DB.Where(\"user_id = ?\", userID).In(\"object_id\", objectIDs).Find(&collectionList)\n\tif err != nil {\n\t\treturn collectionList, err\n\t}\n\treturn collectionList, nil\n}\n\n// CountByObjectID count by object TagID\nfunc (cr *collectionRepo) CountByObjectID(ctx context.Context, objectID string) (total int64, err error) {\n\tcollection := &entity.Collection{}\n\ttotal, err = cr.data.DB.Where(\"object_id = ?\", objectID).Count(collection)\n\tif err != nil {\n\t\treturn 0, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn\n}\n\n// GetCollectionPage get collection page\nfunc (cr *collectionRepo) GetCollectionPage(ctx context.Context, page, pageSize int, collection *entity.Collection) (collectionList []*entity.Collection, total int64, err error) {\n\tcollectionList = make([]*entity.Collection, 0)\n\n\tsession := cr.data.DB.NewSession()\n\tif collection.UserID != \"\" && collection.UserID != \"0\" {\n\t\tsession = session.Where(\"user_id = ?\", collection.UserID)\n\t}\n\n\tif collection.UserCollectionGroupID != \"\" && collection.UserCollectionGroupID != \"0\" {\n\t\tsession = session.Where(\"user_collection_group_id = ?\", collection.UserCollectionGroupID)\n\t}\n\tsession = session.OrderBy(\"update_time desc\")\n\n\ttotal, err = pager.Help(page, pageSize, collectionList, collection, session)\n\terr = errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\treturn\n}\n\n// SearchObjectCollected check object is collected or not\nfunc (cr *collectionRepo) SearchObjectCollected(ctx context.Context, userID string, objectIds []string) (map[string]bool, error) {\n\tcollectedMap := make(map[string]bool)\n\tlist, err := cr.SearchByObjectIDsAndUser(ctx, userID, objectIds)\n\tif err != nil {\n\t\terr = errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t\treturn collectedMap, err\n\t}\n\tfor _, item := range list {\n\t\tcollectedMap[item.ObjectID] = true\n\t}\n\treturn collectedMap, err\n}\n\n// SearchList\nfunc (cr *collectionRepo) SearchList(ctx context.Context, search *entity.CollectionSearch) ([]*entity.Collection, int64, error) {\n\tvar count int64\n\tvar err error\n\trows := make([]*entity.Collection, 0)\n\tif search.Page > 0 {\n\t\tsearch.Page = search.Page - 1\n\t} else {\n\t\tsearch.Page = 0\n\t}\n\tif search.PageSize == 0 {\n\t\tsearch.PageSize = constant.DefaultPageSize\n\t}\n\toffset := search.Page * search.PageSize\n\tsession := cr.data.DB.Where(\"\")\n\tif len(search.UserID) > 0 {\n\t\tsession = session.And(\"user_id = ?\", search.UserID)\n\t} else {\n\t\treturn rows, count, nil\n\t}\n\tsession = session.Limit(search.PageSize, offset)\n\tcount, err = session.OrderBy(\"updated_at desc\").FindAndCount(&rows)\n\tif err != nil {\n\t\treturn rows, count, err\n\t}\n\treturn rows, count, nil\n}\n"], "fixing_code": ["// Package docs GENERATED BY SWAG; DO NOT EDIT\n// This file was generated by swaggo/swag\npackage docs\n\nimport \"github.com/swaggo/swag\"\n\nconst docTemplate = `{\n    \"schemes\": {{ marshal .Schemes }},\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"description\": \"{{escape .Description}}\",\n        \"title\": \"{{.Title}}\",\n        \"contact\": {},\n        \"version\": \"{{.Version}}\"\n    },\n    \"host\": \"{{.Host}}\",\n    \"basePath\": \"{{.BasePath}}\",\n    \"paths\": {\n        \"/\": {\n            \"get\": {\n                \"description\": \"if config file not exist try to redirect to install page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"if config file not exist try to redirect to install page\",\n                \"responses\": {}\n            }\n        },\n        \"/answer/admin/api/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"answer id or question title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/answer/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetAnswerStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetAnswerStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetAnswerStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/dashboard\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DashboardInfo\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"DashboardInfo\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"closed\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id or title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetQuestionStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetQuestionStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetQuestionStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/report/\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"handle flag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"handle flag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"flag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReportHandleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reports/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"list report records\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"list report page\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"pending\",\n                            \"completed\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"all\",\n                            \"question\",\n                            \"answer\",\n                            \"comment\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/roles\": {\n            \"get\": {\n                \"description\": \"get role list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get role list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRoleResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/setting/smtp\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetSMTPConfig get smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"GetSMTPConfig get smtp config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSMTPConfigResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update smtp config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"smtp config\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateSMTPConfigReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/branding\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info branding\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info branding\",\n                \"parameters\": [\n                    {\n                        \"description\": \"branding info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteBrandingReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/custom-css-html\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info custom html css config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info custom html css config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/general\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site general information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site general information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteGeneralReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/interface\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info interface\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteInterfaceReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/legal\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Set the legal information for the site\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Set the legal information for the site\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLegalResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site legal info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLegalReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/login\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info login config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info login config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site login\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site login\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLoginReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/seo\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site seo information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteSeoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site seo information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"seo\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/theme\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info theme config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info theme config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteThemeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/write\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteWriteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site write info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site write info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteWriteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/theme/options\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Get theme options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Get theme options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"add user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddUserReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user password\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user password\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserPasswordReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/role\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user role\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user role\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserRoleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserStatusReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/users/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get user page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"search query: email, username or id:[id]\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"staff user\",\n                        \"name\": \"staff\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"suspended\",\n                            \"deleted\",\n                            \"inactive\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"records\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUserPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline\": {\n            \"get\": {\n                \"description\": \"get object timeline\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag slug name\",\n                        \"name\": \"tag_slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"tag\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"is show vote\",\n                        \"name\": \"show_vote\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline/detail\": {\n            \"get\": {\n                \"description\": \"get object timeline detail\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline detail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"revision id\",\n                        \"name\": \"revision_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Update Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Update Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerUpdateReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerUpdateReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Insert Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Insert Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAddReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAddReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"delete answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"answer\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveAnswerReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/acceptance\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Accepted\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Accepted\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAcceptedReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAcceptedReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/info\": {\n            \"get\": {\n                \"description\": \"Get Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Get Answer\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Answer TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"AnswerList \\u003cbr\\u003e \\u003cb\\u003eorder\\u003c/b\\u003e (default or updated)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"AnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page_size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/collection/switch\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add collection\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"add collection\",\n                \"parameters\": [\n                    {\n                        \"description\": \"collection\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CollectionSwitchReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.CollectionSwitchResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment\": {\n            \"get\": {\n                \"description\": \"get comment by id\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment by id\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"update comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"add comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"remove comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"remove comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment/page\": {\n            \"get\": {\n                \"description\": \"get comment page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"vote\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/file\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"upload file\",\n                \"consumes\": [\n                    \"multipart/form-data\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"upload file\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"post\",\n                            \"avatar\",\n                            \"branding\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"identify the source of the file upload\",\n                        \"name\": \"source\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"file\",\n                        \"description\": \"file\",\n                        \"name\": \"file\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"follow object or cancel follow operation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"follow object or cancel follow operation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.FollowReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.FollowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow/tags\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user follow tags\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"update user follow tags\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateFollowTagsReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/config\": {\n            \"get\": {\n                \"description\": \"get language config mapping\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get language config mapping\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"Accept-Language\",\n                        \"name\": \"Accept-Language\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get notification list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"get notification list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"inbox\",\n                            \"achievement\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"type\",\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearIDRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearIDRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state/all\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/status\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"GetRedDot\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DelRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"DelRedDot\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserAnswerList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"UserAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/collection/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserCollectionList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"UserCollectionList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/comment/page\": {\n            \"get\": {\n                \"description\": \"user personal comment list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"user personal comment list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/qa/top\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserTop\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserTop\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/rank/page\": {\n            \"get\": {\n                \"description\": \"user personal rank list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Rank\"\n                ],\n                \"summary\": \"user personal rank list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetRankPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetOtherUserInfoByUsername\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetOtherUserInfoByUsername\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetOtherUserInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/vote/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user's vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"user's votes\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetVoteWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/post/render\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"render post content\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"render post content\",\n                \"parameters\": [\n                    {\n                        \"description\": \"PostRenderReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.PostRenderReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"update question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionUpdate\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionAdd\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"delete question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/closemsglist\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"close question msg list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"close question msg list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get question details\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get question details\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Question TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/page\": {\n            \"get\": {\n                \"description\": \"get questions by page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get questions by page\",\n                \"parameters\": [\n                    {\n                        \"description\": \"QuestionPageReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionPageReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.QuestionPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/reopen\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"reopen question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"reopen question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReopenQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question title like\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question title like\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"title\",\n                        \"name\": \"title\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar/tag\": {\n            \"get\": {\n                \"description\": \"Search Similar Question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Search Similar Question\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Close question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Close question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CloseQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/tags\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag\",\n                        \"name\": \"tag\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add report \\u003cbr\\u003e source (question, answer, comment, user)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"add report\",\n                \"parameters\": [\n                    {\n                        \"description\": \"report\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddReportReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report/type/list\": {\n            \"get\": {\n                \"description\": \"get report type list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"get report type list\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"report source\",\n                        \"name\": \"source\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetReportTypeResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions\": {\n            \"get\": {\n                \"description\": \"get revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/audit\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"revision audit operation:approve or reject\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"revision audit\",\n                \"parameters\": [\n                    {\n                        \"description\": \"audit\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RevisionAuditReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/edit/check\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"check can update revision\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"check can update revision\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/unreviewed\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get unreviewed revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get unreviewed revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page id\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUnreviewedRevisionResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/search\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"search object\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"search object\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"query string\",\n                        \"name\": \"q\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"active\",\n                            \"score\",\n                            \"relevance\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SearchListResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo\": {\n            \"get\": {\n                \"description\": \"get site info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site info\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo/legal\": {\n            \"get\": {\n                \"description\": \"get site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site legal info\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"tos\",\n                            \"privacy\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"legal information type\",\n                        \"name\": \"info_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSiteLegalInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag\": {\n            \"get\": {\n                \"description\": \"get tag one\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag one\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag name\",\n                        \"name\": \"tag_name\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"description\": \"delete tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"delete tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonym\": {\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagSynonymReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonyms\": {\n            \"get\": {\n                \"description\": \"get tag synonyms\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag synonyms\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagSynonymsResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/following\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get following tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get following tag list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetFollowingTagsResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/page\": {\n            \"get\": {\n                \"description\": \"get tag page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"slug_name\",\n                        \"name\": \"slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"popular\",\n                            \"name\",\n                            \"newest\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetTagPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/action/record\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ActionRecord\",\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"ActionRecord\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"login\",\n                            \"e_mail\",\n                            \"find_pass\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.ActionRecordResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user change email verification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user change email verification\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailVerifyReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailVerifyReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/change/code\": {\n            \"post\": {\n                \"description\": \"send email to the user email then change their email\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"send email to the user email then change their email\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailSendCodeReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailSendCodeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/notification\": {\n            \"put\": {\n                \"description\": \"unsubscribe email notification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"unsubscribe email notification\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification\": {\n            \"post\": {\n                \"description\": \"UserVerifyEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"code\",\n                        \"name\": \"code\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification/send\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserVerifyEmailSend\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmailSend\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_id\",\n                        \"name\": \"captcha_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_code\",\n                        \"name\": \"captcha_code\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user info, if user no login response http code is 200, but user info is null\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetUserInfoByUserID\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserToSetShowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInfo update user info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInfo update user info\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateInfoRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/interface\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInterface update user interface config\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInterface update user interface config\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserInterfaceRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/login/email\": {\n            \"post\": {\n                \"description\": \"UserEmailLogin\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserEmailLogin\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserEmailLogin\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserEmailLogin\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/logout\": {\n            \"get\": {\n                \"description\": \"user logout\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user logout\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/notice/set\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserNoticeSet\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserNoticeSet\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserNoticeSetRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserNoticeSetRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserNoticeSetResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserModifyPassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserModifyPassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserModifyPassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserModifyPassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/replacement\": {\n            \"post\": {\n                \"description\": \"UseRePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UseRePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/reset\": {\n            \"post\": {\n                \"description\": \"RetrievePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"RetrievePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRetrievePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRetrievePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/ranking\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user ranking\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"get user ranking\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserRankingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/captcha\": {\n            \"get\": {\n                \"description\": \"UserRegisterCaptcha\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterCaptcha\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/email\": {\n            \"post\": {\n                \"description\": \"UserRegisterByEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterByEmail\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRegisterReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRegisterReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/down\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote down\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/up\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote up\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/custom.css\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/base-info\": {\n            \"post\": {\n                \"description\": \"init base info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init base info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"InitBaseInfoReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.InitBaseInfoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/config-file/check\": {\n            \"post\": {\n                \"description\": \"check config file if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check config file if exist when installation\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/db/check\": {\n            \"post\": {\n                \"description\": \"check database if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check database if exist when installation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/init\": {\n            \"post\": {\n                \"description\": \"init environment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init environment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/language/options\": {\n            \"get\": {\n                \"description\": \"get installation language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get installation language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/translator.LangOption\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/personal/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/robots.txt\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"definitions\": {\n        \"handler.RespBody\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"http code\",\n                    \"type\": \"integer\"\n                },\n                \"data\": {\n                    \"description\": \"response data\"\n                },\n                \"msg\": {\n                    \"description\": \"response message\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"description\": \"reason key\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.CheckConfigFileResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"config_file_exist\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_connection_success\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_table_exist\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"install.CheckDatabaseReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"db_type\"\n            ],\n            \"properties\": {\n                \"db_file\": {\n                    \"type\": \"string\"\n                },\n                \"db_host\": {\n                    \"type\": \"string\"\n                },\n                \"db_name\": {\n                    \"type\": \"string\"\n                },\n                \"db_password\": {\n                    \"type\": \"string\"\n                },\n                \"db_type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"postgres\",\n                        \"sqlite3\",\n                        \"mysql\"\n                    ]\n                },\n                \"db_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.InitBaseInfoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"email\",\n                \"lang\",\n                \"name\",\n                \"password\",\n                \"site_name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"lang\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"site_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"pager.PageModel\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"list\": {}\n            }\n        },\n        \"schema.ActObjectInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActObjectTimeline\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"activity_id\": {\n                    \"type\": \"string\"\n                },\n                \"activity_type\": {\n                    \"type\": \"string\"\n                },\n                \"cancelled\": {\n                    \"type\": \"boolean\"\n                },\n                \"cancelled_at\": {\n                    \"type\": \"integer\"\n                },\n                \"comment\": {\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"revision_id\": {\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActionRecordResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"captcha_id\": {\n                    \"type\": \"string\"\n                },\n                \"captcha_img\": {\n                    \"type\": \"string\"\n                },\n                \"verify\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.AddCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"original_text\",\n                \"parsed_text\"\n            ],\n            \"properties\": {\n                \"mention_username_list\": {\n                    \"description\": \"@ user id list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AddReportReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"report_type\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"report content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\",\n                    \"maxLength\": 20\n                },\n                \"report_type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.AddUserReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\",\n                \"email\",\n                \"password\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.AdminSetAnswerStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AdminSetQuestionStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAcceptedReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAddReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerUpdateReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit_summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AvatarInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"gravatar\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.CloseQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"close_msg\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"string\"\n                },\n                \"close_type\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"group_id\",\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"group_id\": {\n                    \"description\": \"user collection group TagID\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object TagID\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_collection_count\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.FollowReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.FollowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"follows\": {\n                    \"description\": \"the followers of object\",\n                    \"type\": \"integer\"\n                },\n                \"is_followed\": {\n                    \"description\": \"if user is followed object will be true,otherwise false\",\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.GetCommentPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetCommentResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"is_vote\": {\n                    \"description\": \"current user if already vote this comment\",\n                    \"type\": \"boolean\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_display_name\": {\n                    \"description\": \"reply user display name\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_id\": {\n                    \"description\": \"reply user id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_status\": {\n                    \"description\": \"reply user status\",\n                    \"type\": \"string\"\n                },\n                \"reply_username\": {\n                    \"description\": \"reply user username\",\n                    \"type\": \"string\"\n                },\n                \"user_avatar\": {\n                    \"description\": \"user avatar\",\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"description\": \"user display name\",\n                    \"type\": \"string\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"user vote amount\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetFollowingTagsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetObjectTimelineResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_info\": {\n                    \"$ref\": \"#/definitions/schema.ActObjectInfo\"\n                },\n                \"timeline\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ActObjectTimeline\"\n                    }\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoByUsernameResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"email\\nfollow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                },\n                \"status_msg\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"has\": {\n                    \"type\": \"boolean\"\n                },\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.GetOtherUserInfoByUsernameResp\"\n                }\n            }\n        },\n        \"schema.GetRankPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"rank_type\": {\n                    \"description\": \"rank type\",\n                    \"type\": \"string\"\n                },\n                \"reputation\": {\n                    \"description\": \"reputation\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetReportTypeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content_type\": {\n                    \"description\": \"content type\",\n                    \"type\": \"string\"\n                },\n                \"description\": {\n                    \"description\": \"report description\",\n                    \"type\": \"string\"\n                },\n                \"have_content\": {\n                    \"description\": \"is have content\",\n                    \"type\": \"boolean\"\n                },\n                \"name\": {\n                    \"description\": \"report name\",\n                    \"type\": \"string\"\n                },\n                \"source\": {\n                    \"description\": \"report source\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content parsed\"\n                },\n                \"create_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"revision status(normal: 1; delete 2)\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"use_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                }\n            }\n        },\n        \"schema.GetRoleResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSMTPConfigResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\"\n                },\n                \"from_email\": {\n                    \"type\": \"string\"\n                },\n                \"from_name\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\"\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSiteLegalInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetTagPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed_text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"description\": \"description text\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagSynonymsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"synonyms\": {\n                    \"description\": \"synonyms\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagSynonym\"\n                    }\n                }\n            }\n        },\n        \"schema.GetUnreviewedRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.UnreviewedRevisionInfoInfo\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                },\n                \"unreviewed_info\": {\n                    \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                }\n            }\n        },\n        \"schema.GetUserPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"deleted_at\": {\n                    \"description\": \"delete time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"role_name\": {\n                    \"description\": \"role name\",\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"user status(normal,suspended,deleted,inactive)\",\n                    \"type\": \"string\"\n                },\n                \"suspended_at\": {\n                    \"description\": \"suspended time\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserToSetShowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetVoteWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"vote_type\": {\n                    \"description\": \"vote type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearIDRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"type\": {\n                    \"description\": \"inbox achievement\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PermissionMemberAction\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PostRenderReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionAdd\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.QuestionPageReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"orderCond\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"newest\",\n                        \"active\",\n                        \"frequent\",\n                        \"score\",\n                        \"unanswered\"\n                    ]\n                },\n                \"page\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"pageSize\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"tag\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.QuestionPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted_answer_id\": {\n                    \"description\": \"answer information\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"collection_count\": {\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"last_answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"operated_at\": {\n                    \"description\": \"operator information\",\n                    \"type\": \"integer\"\n                },\n                \"operation_type\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/schema.QuestionPageRespOperator\"\n                },\n                \"status\": {\n                    \"type\": \"integer\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"unique_view_count\": {\n                    \"type\": \"integer\"\n                },\n                \"url_title\": {\n                    \"type\": \"string\"\n                },\n                \"view_count\": {\n                    \"description\": \"question statistical information\",\n                    \"type\": \"integer\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.QuestionPageRespOperator\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionUpdate\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"id\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.RemoveAnswerReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReopenQuestionReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReportHandleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"flagged_type\",\n                \"id\"\n            ],\n            \"properties\": {\n                \"flagged_content\": {\n                    \"type\": \"string\"\n                },\n                \"flagged_type\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RevisionAuditReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\",\n                \"operation\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"operation\": {\n                    \"description\": \"approve or reject\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SearchListResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"extra\": {\n                    \"description\": \"extra fields\"\n                },\n                \"list\": {\n                    \"description\": \"search response\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.SearchResp\"\n                    }\n                }\n            }\n        },\n        \"schema.SearchObject\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted\": {\n                    \"type\": \"boolean\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"excerpt\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"Status\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"description\": \"user info\",\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.SearchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object\": {\n                    \"description\": \"this object\",\n                    \"$ref\": \"#/definitions/schema.SearchObject\"\n                },\n                \"object_type\": {\n                    \"description\": \"object_type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteBrandingReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteBrandingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteGeneralReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteGeneralResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"branding\": {\n                    \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                },\n                \"custom_css_html\": {\n                    \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                },\n                \"general\": {\n                    \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                },\n                \"interface\": {\n                    \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                },\n                \"login\": {\n                    \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                },\n                \"site_seo\": {\n                    \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                },\n                \"theme\": {\n                    \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                }\n            }\n        },\n        \"schema.SiteInterfaceReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteInterfaceResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteLegalReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLegalResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLoginReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteLoginResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteSeoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteSeoResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteThemeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"theme\"\n            ],\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                }\n            }\n        },\n        \"schema.SiteThemeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\"\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                },\n                \"theme_options\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ThemeOption\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.TagItem\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                }\n            }\n        },\n        \"schema.TagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.TagSynonym\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ThemeOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UnreviewedRevisionInfoInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateFollowTagsReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"slug_name_list\": {\n                    \"description\": \"tag slug name list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.UpdateInfoRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\"\n            ],\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio\",\n                    \"type\": \"string\",\n                    \"maxLength\": 4096\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UpdateSMTPConfigReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"SSL\"\n                    ]\n                },\n                \"from_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"from_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 65535,\n                    \"minimum\": 1\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"test_email_recipient\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagSynonymReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"synonym_tag_list\",\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"synonym_tag_list\": {\n                    \"description\": \"synonym tag list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserInterfaceRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.UpdateUserPasswordReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"password\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"user_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserRoleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"role_id\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserStatusReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"status\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"normal\",\n                        \"suspended\",\n                        \"deleted\",\n                        \"inactive\"\n                    ]\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserBasicInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"user_id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserChangeEmailSendCodeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"captcha_id\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"e_mail\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserChangeEmailVerifyReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserEmailLogin\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserModifyPassWordRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"old_pass\": {\n                    \"description\": \"old password\",\n                    \"type\": \"string\"\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserRankingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"staffs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_reputation\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_vote\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                }\n            }\n        },\n        \"schema.UserRankingSimpleInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"vote\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.UserRePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"code\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"pass\": {\n                    \"description\": \"Password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32\n                }\n            }\n        },\n        \"schema.UserRegisterReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"name\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"name\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserRetrievePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.VoteReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.VoteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"down_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"up_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"vote_status\": {\n                    \"type\": \"string\"\n                },\n                \"votes\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"translator.LangOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    },\n    \"securityDefinitions\": {\n        \"ApiKeyAuth\": {\n            \"type\": \"apiKey\",\n            \"name\": \"Authorization\",\n            \"in\": \"header\"\n        }\n    }\n}`\n\n// SwaggerInfo holds exported Swagger Info so clients can modify it\nvar SwaggerInfo = &swag.Spec{\n\tVersion:          \"\",\n\tHost:             \"\",\n\tBasePath:         \"\",\n\tSchemes:          []string{},\n\tTitle:            \"\",\n\tDescription:      \"\",\n\tInfoInstanceName: \"swagger\",\n\tSwaggerTemplate:  docTemplate,\n}\n\nfunc init() {\n\tswag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)\n}\n", "{\n    \"swagger\": \"2.0\",\n    \"info\": {\n        \"contact\": {}\n    },\n    \"paths\": {\n        \"/\": {\n            \"get\": {\n                \"description\": \"if config file not exist try to redirect to install page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"if config file not exist try to redirect to install page\",\n                \"responses\": {}\n            }\n        },\n        \"/answer/admin/api/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"answer id or question title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/answer/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetAnswerStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetAnswerStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetAnswerStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/dashboard\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DashboardInfo\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"DashboardInfo\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSearchList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"available\",\n                            \"closed\",\n                            \"deleted\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question id or title\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Status:[available,closed,deleted]\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"AdminSetQuestionStatus\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AdminSetQuestionStatusRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AdminSetQuestionStatusRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/report/\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"handle flag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"handle flag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"flag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReportHandleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/reports/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"list report records\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"list report page\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"pending\",\n                            \"completed\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"all\",\n                            \"question\",\n                            \"answer\",\n                            \"comment\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/roles\": {\n            \"get\": {\n                \"description\": \"get role list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get role list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRoleResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/setting/smtp\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetSMTPConfig get smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"GetSMTPConfig get smtp config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSMTPConfigResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update smtp config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update smtp config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"smtp config\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateSMTPConfigReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/branding\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info branding\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info branding\",\n                \"parameters\": [\n                    {\n                        \"description\": \"branding info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteBrandingReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/custom-css-html\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info custom html css config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info custom html css config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/general\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site general information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site general information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site general information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteGeneralReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/interface\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site info interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site info interface\",\n                \"parameters\": [\n                    {\n                        \"description\": \"general\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteInterfaceReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/legal\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Set the legal information for the site\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Set the legal information for the site\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLegalResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site legal info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLegalReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/login\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info login config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info login config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site login\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site login\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteLoginReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/seo\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site seo information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteSeoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site seo information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site seo information\",\n                \"parameters\": [\n                    {\n                        \"description\": \"seo\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/theme\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site info theme config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site info theme config\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site custom css html config\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site custom css html config\",\n                \"parameters\": [\n                    {\n                        \"description\": \"login info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteThemeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/siteinfo/write\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get site interface\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get site interface\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteWriteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update site write info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update site write info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"write info\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.SiteWriteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/theme/options\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Get theme options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"Get theme options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"add user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddUserReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user password\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user password\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserPasswordReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/role\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user role\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user role\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserRoleReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/user/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"update user\",\n                \"parameters\": [\n                    {\n                        \"description\": \"user\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserStatusReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/admin/api/users/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"admin\"\n                ],\n                \"summary\": \"get user page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"search query: email, username or id:[id]\",\n                        \"name\": \"query\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"staff user\",\n                        \"name\": \"staff\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"suspended\",\n                            \"deleted\",\n                            \"inactive\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"user status\",\n                        \"name\": \"status\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"records\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUserPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline\": {\n            \"get\": {\n                \"description\": \"get object timeline\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag slug name\",\n                        \"name\": \"tag_slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"tag\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"boolean\",\n                        \"description\": \"is show vote\",\n                        \"name\": \"show_vote\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/activity/timeline/detail\": {\n            \"get\": {\n                \"description\": \"get object timeline detail\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get object timeline detail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"revision id\",\n                        \"name\": \"revision_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetObjectTimelineResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Update Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Update Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerUpdateReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerUpdateReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Insert Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Insert Answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAddReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAddReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"delete answer\",\n                \"parameters\": [\n                    {\n                        \"description\": \"answer\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveAnswerReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/acceptance\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Accepted\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Accepted\",\n                \"parameters\": [\n                    {\n                        \"description\": \"AnswerAcceptedReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AnswerAcceptedReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/info\": {\n            \"get\": {\n                \"description\": \"Get Answer\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"Get Answer\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Answer TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"AnswerList \\u003cbr\\u003e \\u003cb\\u003eorder\\u003c/b\\u003e (default or updated)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"AnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page_size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/collection/switch\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add collection\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"add collection\",\n                \"parameters\": [\n                    {\n                        \"description\": \"collection\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CollectionSwitchReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.CollectionSwitchResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment\": {\n            \"get\": {\n                \"description\": \"get comment by id\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment by id\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"update comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"add comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"remove comment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"remove comment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"comment\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveCommentReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/comment/page\": {\n            \"get\": {\n                \"description\": \"get comment page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"get comment page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"vote\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/file\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"upload file\",\n                \"consumes\": [\n                    \"multipart/form-data\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"upload file\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"post\",\n                            \"avatar\",\n                            \"branding\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"identify the source of the file upload\",\n                        \"name\": \"source\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"file\",\n                        \"description\": \"file\",\n                        \"name\": \"file\",\n                        \"in\": \"formData\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"string\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"follow object or cancel follow operation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"follow object or cancel follow operation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.FollowReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.FollowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/follow/tags\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update user follow tags\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"update user follow tags\",\n                \"parameters\": [\n                    {\n                        \"description\": \"follow\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateFollowTagsReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/config\": {\n            \"get\": {\n                \"description\": \"get language config mapping\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get language config mapping\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"Accept-Language\",\n                        \"name\": \"Accept-Language\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/language/options\": {\n            \"get\": {\n                \"description\": \"Get language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"Get language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get notification list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"get notification list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"inbox\",\n                            \"achievement\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"type\",\n                        \"name\": \"type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearIDRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearIDRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/read/state/all\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ClearUnRead\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"ClearUnRead\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/notification/status\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"GetRedDot\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"DelRedDot\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Notification\"\n                ],\n                \"summary\": \"DelRedDot\",\n                \"parameters\": [\n                    {\n                        \"description\": \"NotificationClearRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.NotificationClearRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/answer/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserAnswerList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"api-answer\"\n                ],\n                \"summary\": \"UserAnswerList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/collection/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserCollectionList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Collection\"\n                ],\n                \"summary\": \"UserCollectionList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/comment/page\": {\n            \"get\": {\n                \"description\": \"user personal comment list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Comment\"\n                ],\n                \"summary\": \"user personal comment list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetCommentPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/qa/top\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserTop\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserTop\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/rank/page\": {\n            \"get\": {\n                \"description\": \"user personal rank list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Rank\"\n                ],\n                \"summary\": \"user personal rank list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetRankPersonalWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"GetOtherUserInfoByUsername\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetOtherUserInfoByUsername\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetOtherUserInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/personal/vote/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user's vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"user's votes\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetVoteWithPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/post/render\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"render post content\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Upload\"\n                ],\n                \"summary\": \"render post content\",\n                \"parameters\": [\n                    {\n                        \"description\": \"PostRenderReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.PostRenderReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"update question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"update question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionUpdate\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionAdd\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"delete question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"delete question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/closemsglist\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"close question msg list\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"close question msg list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get question details\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get question details\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"1\",\n                        \"description\": \"Question TagID\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/page\": {\n            \"get\": {\n                \"description\": \"get questions by page\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"get questions by page\",\n                \"parameters\": [\n                    {\n                        \"description\": \"QuestionPageReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.QuestionPageReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.QuestionPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/reopen\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"reopen question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"reopen question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.ReopenQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add question title like\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"add question title like\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"title\",\n                        \"name\": \"title\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/similar/tag\": {\n            \"get\": {\n                \"description\": \"Search Similar Question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Search Similar Question\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"question_id\",\n                        \"name\": \"question_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/status\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"Close question\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"Close question\",\n                \"parameters\": [\n                    {\n                        \"description\": \"question\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.CloseQuestionReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/question/tags\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag\",\n                        \"name\": \"tag\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/reasons\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get reasons by object type and action\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"reason\"\n                ],\n                \"summary\": \"get reasons by object type and action\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"object_type\",\n                        \"name\": \"object_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"status\",\n                            \"close\",\n                            \"flag\",\n                            \"review\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    },\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add report \\u003cbr\\u003e source (question, answer, comment, user)\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"add report\",\n                \"parameters\": [\n                    {\n                        \"description\": \"report\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.AddReportReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/report/type/list\": {\n            \"get\": {\n                \"description\": \"get report type list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Report\"\n                ],\n                \"summary\": \"get report type list\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"question\",\n                            \"answer\",\n                            \"comment\",\n                            \"user\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"report source\",\n                        \"name\": \"source\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetReportTypeResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions\": {\n            \"get\": {\n                \"description\": \"get revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"object id\",\n                        \"name\": \"object_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/audit\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"revision audit operation:approve or reject\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"revision audit\",\n                \"parameters\": [\n                    {\n                        \"description\": \"audit\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RevisionAuditReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/edit/check\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"check can update revision\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"check can update revision\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"id\",\n                        \"name\": \"id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/revisions/unreviewed\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get unreviewed revision list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Revision\"\n                ],\n                \"summary\": \"get unreviewed revision list\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"page id\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetUnreviewedRevisionResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/search\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"search object\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Search\"\n                ],\n                \"summary\": \"search object\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"query string\",\n                        \"name\": \"q\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"active\",\n                            \"score\",\n                            \"relevance\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SearchListResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo\": {\n            \"get\": {\n                \"description\": \"get site info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site info\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.SiteInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/siteinfo/legal\": {\n            \"get\": {\n                \"description\": \"get site legal info\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site legal info\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"tos\",\n                            \"privacy\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"legal information type\",\n                        \"name\": \"info_type\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetSiteLegalInfoResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag\": {\n            \"get\": {\n                \"description\": \"get tag one\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag one\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"tag name\",\n                        \"name\": \"tag_name\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            },\n            \"delete\": {\n                \"description\": \"delete tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"delete tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.RemoveTagReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonym\": {\n            \"put\": {\n                \"description\": \"update tag\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"update tag\",\n                \"parameters\": [\n                    {\n                        \"description\": \"tag\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateTagSynonymReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tag/synonyms\": {\n            \"get\": {\n                \"description\": \"get tag synonyms\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag synonyms\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"tag id\",\n                        \"name\": \"tag_id\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetTagSynonymsResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/following\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get following tag list\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get following tag list\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/schema.GetFollowingTagsResp\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/tags/page\": {\n            \"get\": {\n                \"description\": \"get tag page\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Tag\"\n                ],\n                \"summary\": \"get tag page\",\n                \"parameters\": [\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"integer\",\n                        \"description\": \"page size\",\n                        \"name\": \"page_size\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"slug_name\",\n                        \"name\": \"slug_name\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"enum\": [\n                            \"popular\",\n                            \"name\",\n                            \"newest\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"query condition\",\n                        \"name\": \"query_cond\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"allOf\": [\n                                                {\n                                                    \"$ref\": \"#/definitions/pager.PageModel\"\n                                                },\n                                                {\n                                                    \"type\": \"object\",\n                                                    \"properties\": {\n                                                        \"list\": {\n                                                            \"type\": \"array\",\n                                                            \"items\": {\n                                                                \"$ref\": \"#/definitions/schema.GetTagPageResp\"\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            ]\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/action/record\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"ActionRecord\",\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"ActionRecord\",\n                \"parameters\": [\n                    {\n                        \"enum\": [\n                            \"login\",\n                            \"e_mail\",\n                            \"find_pass\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"action\",\n                        \"name\": \"action\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.ActionRecordResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"user change email verification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user change email verification\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailVerifyReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailVerifyReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/change/code\": {\n            \"post\": {\n                \"description\": \"send email to the user email then change their email\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"send email to the user email then change their email\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserChangeEmailSendCodeReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserChangeEmailSendCodeReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/notification\": {\n            \"put\": {\n                \"description\": \"unsubscribe email notification\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"unsubscribe email notification\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification\": {\n            \"post\": {\n                \"description\": \"UserVerifyEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmail\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"code\",\n                        \"name\": \"code\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/email/verification/send\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserVerifyEmailSend\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserVerifyEmailSend\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_id\",\n                        \"name\": \"captcha_id\",\n                        \"in\": \"query\"\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"\",\n                        \"description\": \"captcha_code\",\n                        \"name\": \"captcha_code\",\n                        \"in\": \"query\"\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/info\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user info, if user no login response http code is 200, but user info is null\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"GetUserInfoByUserID\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserToSetShowResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            },\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInfo update user info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInfo update user info\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateInfoRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/interface\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserUpdateInterface update user interface config\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserUpdateInterface update user interface config\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"description\": \"access-token\",\n                        \"name\": \"Authorization\",\n                        \"in\": \"header\",\n                        \"required\": true\n                    },\n                    {\n                        \"description\": \"UpdateInfoRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UpdateUserInterfaceRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/login/email\": {\n            \"post\": {\n                \"description\": \"UserEmailLogin\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserEmailLogin\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserEmailLogin\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserEmailLogin\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/logout\": {\n            \"get\": {\n                \"description\": \"user logout\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"user logout\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/notice/set\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserNoticeSet\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserNoticeSet\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserNoticeSetRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserNoticeSetRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserNoticeSetResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password\": {\n            \"put\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserModifyPassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserModifyPassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserModifyPassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserModifyPassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/replacement\": {\n            \"post\": {\n                \"description\": \"UseRePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UseRePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/password/reset\": {\n            \"post\": {\n                \"description\": \"RetrievePassWord\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"RetrievePassWord\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRetrievePassWordRequest\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRetrievePassWordRequest\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/ranking\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"get user ranking\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"get user ranking\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.UserRankingResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/captcha\": {\n            \"get\": {\n                \"description\": \"UserRegisterCaptcha\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterCaptcha\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/user/register/email\": {\n            \"post\": {\n                \"description\": \"UserRegisterByEmail\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"User\"\n                ],\n                \"summary\": \"UserRegisterByEmail\",\n                \"parameters\": [\n                    {\n                        \"description\": \"UserRegisterReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.UserRegisterReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.GetUserResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/down\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote down\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/answer/api/v1/vote/up\": {\n            \"post\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"add vote\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Activity\"\n                ],\n                \"summary\": \"vote up\",\n                \"parameters\": [\n                    {\n                        \"description\": \"vote\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/schema.VoteReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/schema.VoteResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/custom.css\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/base-info\": {\n            \"post\": {\n                \"description\": \"init base info\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init base info\",\n                \"parameters\": [\n                    {\n                        \"description\": \"InitBaseInfoReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.InitBaseInfoReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/config-file/check\": {\n            \"post\": {\n                \"description\": \"check config file if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check config file if exist when installation\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/db/check\": {\n            \"post\": {\n                \"description\": \"check database if exist when installation\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"check database if exist when installation\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"$ref\": \"#/definitions/install.CheckConfigFileResp\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/init\": {\n            \"post\": {\n                \"description\": \"init environment\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"installation\"\n                ],\n                \"summary\": \"init environment\",\n                \"parameters\": [\n                    {\n                        \"description\": \"CheckDatabaseReq\",\n                        \"name\": \"data\",\n                        \"in\": \"body\",\n                        \"required\": true,\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/install.CheckDatabaseReq\"\n                        }\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/installation/language/options\": {\n            \"get\": {\n                \"description\": \"get installation language options\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Lang\"\n                ],\n                \"summary\": \"get installation language options\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"allOf\": [\n                                {\n                                    \"$ref\": \"#/definitions/handler.RespBody\"\n                                },\n                                {\n                                    \"type\": \"object\",\n                                    \"properties\": {\n                                        \"data\": {\n                                            \"type\": \"array\",\n                                            \"items\": {\n                                                \"$ref\": \"#/definitions/translator.LangOption\"\n                                            }\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        },\n        \"/personal/question/page\": {\n            \"get\": {\n                \"security\": [\n                    {\n                        \"ApiKeyAuth\": []\n                    }\n                ],\n                \"description\": \"UserList\",\n                \"consumes\": [\n                    \"application/json\"\n                ],\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"Question\"\n                ],\n                \"summary\": \"UserList\",\n                \"parameters\": [\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"string\",\n                        \"description\": \"username\",\n                        \"name\": \"username\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"enum\": [\n                            \"newest\",\n                            \"score\"\n                        ],\n                        \"type\": \"string\",\n                        \"description\": \"order\",\n                        \"name\": \"order\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"0\",\n                        \"description\": \"page\",\n                        \"name\": \"page\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    },\n                    {\n                        \"type\": \"string\",\n                        \"default\": \"20\",\n                        \"description\": \"pagesize\",\n                        \"name\": \"pagesize\",\n                        \"in\": \"query\",\n                        \"required\": true\n                    }\n                ],\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"$ref\": \"#/definitions/handler.RespBody\"\n                        }\n                    }\n                }\n            }\n        },\n        \"/robots.txt\": {\n            \"get\": {\n                \"description\": \"get site robots information\",\n                \"produces\": [\n                    \"application/json\"\n                ],\n                \"tags\": [\n                    \"site\"\n                ],\n                \"summary\": \"get site robots information\",\n                \"responses\": {\n                    \"200\": {\n                        \"description\": \"OK\",\n                        \"schema\": {\n                            \"type\": \"string\"\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \"definitions\": {\n        \"handler.RespBody\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"http code\",\n                    \"type\": \"integer\"\n                },\n                \"data\": {\n                    \"description\": \"response data\"\n                },\n                \"msg\": {\n                    \"description\": \"response message\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"description\": \"reason key\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.CheckConfigFileResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"config_file_exist\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_connection_success\": {\n                    \"type\": \"boolean\"\n                },\n                \"db_table_exist\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"install.CheckDatabaseReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"db_type\"\n            ],\n            \"properties\": {\n                \"db_file\": {\n                    \"type\": \"string\"\n                },\n                \"db_host\": {\n                    \"type\": \"string\"\n                },\n                \"db_name\": {\n                    \"type\": \"string\"\n                },\n                \"db_password\": {\n                    \"type\": \"string\"\n                },\n                \"db_type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"postgres\",\n                        \"sqlite3\",\n                        \"mysql\"\n                    ]\n                },\n                \"db_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"install.InitBaseInfoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"email\",\n                \"lang\",\n                \"name\",\n                \"password\",\n                \"site_name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"lang\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"site_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"pager.PageModel\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"list\": {}\n            }\n        },\n        \"schema.ActObjectInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActObjectTimeline\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"activity_id\": {\n                    \"type\": \"string\"\n                },\n                \"activity_type\": {\n                    \"type\": \"string\"\n                },\n                \"cancelled\": {\n                    \"type\": \"boolean\"\n                },\n                \"cancelled_at\": {\n                    \"type\": \"integer\"\n                },\n                \"comment\": {\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"type\": \"string\"\n                },\n                \"revision_id\": {\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ActionRecordResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"captcha_id\": {\n                    \"type\": \"string\"\n                },\n                \"captcha_img\": {\n                    \"type\": \"string\"\n                },\n                \"verify\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.AddCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"original_text\",\n                \"parsed_text\"\n            ],\n            \"properties\": {\n                \"mention_username_list\": {\n                    \"description\": \"@ user id list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AddReportReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\",\n                \"report_type\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"report content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\",\n                    \"maxLength\": 20\n                },\n                \"report_type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.AddUserReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\",\n                \"email\",\n                \"password\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.AdminSetAnswerStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AdminSetQuestionStatusRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAcceptedReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerAddReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AnswerUpdateReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit_summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"description\": \"question_id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.AvatarInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"gravatar\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 200\n                },\n                \"type\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.CloseQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"close_msg\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"string\"\n                },\n                \"close_type\": {\n                    \"description\": \"close_type\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"group_id\",\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"group_id\": {\n                    \"description\": \"user collection group TagID\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object TagID\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.CollectionSwitchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_collection_count\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.FollowReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.FollowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"follows\": {\n                    \"description\": \"the followers of object\",\n                    \"type\": \"integer\"\n                },\n                \"is_followed\": {\n                    \"description\": \"if user is followed object will be true,otherwise false\",\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.GetCommentPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetCommentResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"is_vote\": {\n                    \"description\": \"current user if already vote this comment\",\n                    \"type\": \"boolean\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                },\n                \"reply_comment_id\": {\n                    \"description\": \"reply comment id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_display_name\": {\n                    \"description\": \"reply user display name\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_id\": {\n                    \"description\": \"reply user id\",\n                    \"type\": \"string\"\n                },\n                \"reply_user_status\": {\n                    \"description\": \"reply user status\",\n                    \"type\": \"string\"\n                },\n                \"reply_username\": {\n                    \"description\": \"reply user username\",\n                    \"type\": \"string\"\n                },\n                \"user_avatar\": {\n                    \"description\": \"user avatar\",\n                    \"type\": \"string\"\n                },\n                \"user_display_name\": {\n                    \"description\": \"user display name\",\n                    \"type\": \"string\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"user vote amount\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetFollowingTagsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetObjectTimelineResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object_info\": {\n                    \"$ref\": \"#/definitions/schema.ActObjectInfo\"\n                },\n                \"timeline\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ActObjectTimeline\"\n                    }\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoByUsernameResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"email\\nfollow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"type\": \"string\"\n                },\n                \"status_msg\": {\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetOtherUserInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"has\": {\n                    \"type\": \"boolean\"\n                },\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.GetOtherUserInfoByUsernameResp\"\n                }\n            }\n        },\n        \"schema.GetRankPersonalWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"rank_type\": {\n                    \"description\": \"rank type\",\n                    \"type\": \"string\"\n                },\n                \"reputation\": {\n                    \"description\": \"reputation\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetReportTypeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content_type\": {\n                    \"description\": \"content type\",\n                    \"type\": \"string\"\n                },\n                \"description\": {\n                    \"description\": \"report description\",\n                    \"type\": \"string\"\n                },\n                \"have_content\": {\n                    \"description\": \"is have content\",\n                    \"type\": \"boolean\"\n                },\n                \"name\": {\n                    \"description\": \"report name\",\n                    \"type\": \"string\"\n                },\n                \"source\": {\n                    \"description\": \"report source\",\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"description\": \"report type\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content parsed\"\n                },\n                \"create_at\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"reason\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"revision status(normal: 1; delete 2)\",\n                    \"type\": \"integer\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"use_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                }\n            }\n        },\n        \"schema.GetRoleResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"integer\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSMTPConfigResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\"\n                },\n                \"from_email\": {\n                    \"type\": \"string\"\n                },\n                \"from_name\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\"\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\"\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetSiteLegalInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetTagPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed_text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"created_at\": {\n                    \"description\": \"created time\",\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"description\": \"description text\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"excerpt\": {\n                    \"description\": \"excerpt\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follower amount\",\n                    \"type\": \"integer\"\n                },\n                \"is_follower\": {\n                    \"description\": \"is follower\",\n                    \"type\": \"boolean\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"question_count\": {\n                    \"description\": \"question amount\",\n                    \"type\": \"integer\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                },\n                \"updated_at\": {\n                    \"description\": \"updated time\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.GetTagSynonymsResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"member_actions\": {\n                    \"description\": \"MemberActions\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.PermissionMemberAction\"\n                    }\n                },\n                \"synonyms\": {\n                    \"description\": \"synonyms\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagSynonym\"\n                    }\n                }\n            }\n        },\n        \"schema.GetUnreviewedRevisionResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"info\": {\n                    \"$ref\": \"#/definitions/schema.UnreviewedRevisionInfoInfo\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                },\n                \"unreviewed_info\": {\n                    \"$ref\": \"#/definitions/schema.GetRevisionResp\"\n                }\n            }\n        },\n        \"schema.GetUserPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"deleted_at\": {\n                    \"description\": \"delete time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"role_name\": {\n                    \"description\": \"role name\",\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"user status(normal,suspended,deleted,inactive)\",\n                    \"type\": \"string\"\n                },\n                \"suspended_at\": {\n                    \"description\": \"suspended time\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetUserToSetShowResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"access_token\": {\n                    \"description\": \"access token\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"description\": \"answer count\",\n                    \"type\": \"integer\"\n                },\n                \"authority_group\": {\n                    \"description\": \"authority group\",\n                    \"type\": \"integer\"\n                },\n                \"avatar\": {\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio markdown\",\n                    \"type\": \"string\"\n                },\n                \"bio_html\": {\n                    \"description\": \"bio html\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"description\": \"follow count\",\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"is_admin\": {\n                    \"description\": \"is admin\",\n                    \"type\": \"boolean\"\n                },\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\"\n                },\n                \"last_login_date\": {\n                    \"description\": \"last login date\",\n                    \"type\": \"integer\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"mail_status\": {\n                    \"description\": \"mail status(1 pass 2 to be verified)\",\n                    \"type\": \"integer\"\n                },\n                \"mobile\": {\n                    \"description\": \"mobile\",\n                    \"type\": \"string\"\n                },\n                \"notice_status\": {\n                    \"description\": \"notice status(1 on 2off)\",\n                    \"type\": \"integer\"\n                },\n                \"question_count\": {\n                    \"description\": \"question count\",\n                    \"type\": \"integer\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.GetVoteWithPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"answer_id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                },\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\"\n                },\n                \"created_at\": {\n                    \"description\": \"create time\",\n                    \"type\": \"integer\"\n                },\n                \"object_id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"object_type\": {\n                    \"description\": \"object type\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"question\",\n                        \"answer\",\n                        \"tag\",\n                        \"comment\"\n                    ]\n                },\n                \"question_id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"title\": {\n                    \"description\": \"title\",\n                    \"type\": \"string\"\n                },\n                \"vote_type\": {\n                    \"description\": \"vote type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearIDRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.NotificationClearRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"type\": {\n                    \"description\": \"inbox achievement\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PermissionMemberAction\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"action\": {\n                    \"type\": \"string\"\n                },\n                \"name\": {\n                    \"type\": \"string\"\n                },\n                \"type\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.PostRenderReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionAdd\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.QuestionPageReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"orderCond\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"newest\",\n                        \"active\",\n                        \"frequent\",\n                        \"score\",\n                        \"unanswered\"\n                    ]\n                },\n                \"page\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"pageSize\": {\n                    \"type\": \"integer\",\n                    \"minimum\": 1\n                },\n                \"tag\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.QuestionPageResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted_answer_id\": {\n                    \"description\": \"answer information\",\n                    \"type\": \"string\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"collection_count\": {\n                    \"type\": \"integer\"\n                },\n                \"description\": {\n                    \"type\": \"string\"\n                },\n                \"follow_count\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"last_answer_id\": {\n                    \"type\": \"string\"\n                },\n                \"operated_at\": {\n                    \"description\": \"operator information\",\n                    \"type\": \"integer\"\n                },\n                \"operation_type\": {\n                    \"type\": \"string\"\n                },\n                \"operator\": {\n                    \"$ref\": \"#/definitions/schema.QuestionPageRespOperator\"\n                },\n                \"status\": {\n                    \"type\": \"integer\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"unique_view_count\": {\n                    \"type\": \"integer\"\n                },\n                \"url_title\": {\n                    \"type\": \"string\"\n                },\n                \"view_count\": {\n                    \"description\": \"question statistical information\",\n                    \"type\": \"integer\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.QuestionPageRespOperator\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.QuestionUpdate\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"content\",\n                \"html\",\n                \"id\",\n                \"tags\",\n                \"title\"\n            ],\n            \"properties\": {\n                \"content\": {\n                    \"description\": \"content\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"description\": \"html\",\n                    \"type\": \"string\",\n                    \"maxLength\": 65535,\n                    \"minLength\": 6\n                },\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"title\": {\n                    \"description\": \"question title\",\n                    \"type\": \"string\",\n                    \"maxLength\": 150,\n                    \"minLength\": 6\n                }\n            }\n        },\n        \"schema.RemoveAnswerReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"answer id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveQuestionReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"question id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RemoveTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReopenQuestionReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"question_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ReportHandleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"flagged_type\",\n                \"id\"\n            ],\n            \"properties\": {\n                \"flagged_content\": {\n                    \"type\": \"string\"\n                },\n                \"flagged_type\": {\n                    \"type\": \"integer\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.RevisionAuditReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"id\",\n                \"operation\"\n            ],\n            \"properties\": {\n                \"id\": {\n                    \"description\": \"object id\",\n                    \"type\": \"string\"\n                },\n                \"operation\": {\n                    \"description\": \"approve or reject\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SearchListResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"count\": {\n                    \"type\": \"integer\"\n                },\n                \"extra\": {\n                    \"description\": \"extra fields\"\n                },\n                \"list\": {\n                    \"description\": \"search response\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.SearchResp\"\n                    }\n                }\n            }\n        },\n        \"schema.SearchObject\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"accepted\": {\n                    \"type\": \"boolean\"\n                },\n                \"answer_count\": {\n                    \"type\": \"integer\"\n                },\n                \"created_at\": {\n                    \"type\": \"integer\"\n                },\n                \"excerpt\": {\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"type\": \"string\"\n                },\n                \"question_id\": {\n                    \"type\": \"string\"\n                },\n                \"status\": {\n                    \"description\": \"Status\",\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"description\": \"tags\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                },\n                \"user_info\": {\n                    \"description\": \"user info\",\n                    \"$ref\": \"#/definitions/schema.UserBasicInfo\"\n                },\n                \"vote_count\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.SearchResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"object\": {\n                    \"description\": \"this object\",\n                    \"$ref\": \"#/definitions/schema.SearchObject\"\n                },\n                \"object_type\": {\n                    \"description\": \"object_type\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteBrandingReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteBrandingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"favicon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"mobile_logo\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"square_icon\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteCustomCssHTMLResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"custom_css\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_footer\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_head\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                },\n                \"custom_header\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 65536\n                }\n            }\n        },\n        \"schema.SiteGeneralReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteGeneralResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"contact_email\",\n                \"name\",\n                \"site_url\"\n            ],\n            \"properties\": {\n                \"contact_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                },\n                \"description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 2000\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"short_description\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"site_url\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 512\n                }\n            }\n        },\n        \"schema.SiteInfoResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"branding\": {\n                    \"$ref\": \"#/definitions/schema.SiteBrandingResp\"\n                },\n                \"custom_css_html\": {\n                    \"$ref\": \"#/definitions/schema.SiteCustomCssHTMLResp\"\n                },\n                \"general\": {\n                    \"$ref\": \"#/definitions/schema.SiteGeneralResp\"\n                },\n                \"interface\": {\n                    \"$ref\": \"#/definitions/schema.SiteInterfaceResp\"\n                },\n                \"login\": {\n                    \"$ref\": \"#/definitions/schema.SiteLoginResp\"\n                },\n                \"site_seo\": {\n                    \"$ref\": \"#/definitions/schema.SiteSeoReq\"\n                },\n                \"theme\": {\n                    \"$ref\": \"#/definitions/schema.SiteThemeResp\"\n                }\n            }\n        },\n        \"schema.SiteInterfaceReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteInterfaceResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\",\n                \"time_zone\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                },\n                \"time_zone\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 128\n                }\n            }\n        },\n        \"schema.SiteLegalReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLegalResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"privacy_policy_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"privacy_policy_parsed_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_original_text\": {\n                    \"type\": \"string\"\n                },\n                \"terms_of_service_parsed_text\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteLoginReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteLoginResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"allow_new_registrations\": {\n                    \"type\": \"boolean\"\n                },\n                \"login_required\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.SiteSeoReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteSeoResp\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"permalink\",\n                \"robots\"\n            ],\n            \"properties\": {\n                \"permalink\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 3,\n                    \"minimum\": 0\n                },\n                \"robots\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.SiteThemeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"theme\"\n            ],\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 255\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                }\n            }\n        },\n        \"schema.SiteThemeResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"theme\": {\n                    \"type\": \"string\"\n                },\n                \"theme_config\": {\n                    \"type\": \"object\",\n                    \"additionalProperties\": true\n                },\n                \"theme_options\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.ThemeOption\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.SiteWriteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"recommend_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required_tag\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved_tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.TagItem\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                }\n            }\n        },\n        \"schema.TagResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"recommend\": {\n                    \"type\": \"boolean\"\n                },\n                \"reserved\": {\n                    \"type\": \"boolean\"\n                },\n                \"slug_name\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.TagSynonym\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"main_tag_slug_name\": {\n                    \"description\": \"if main tag slug name is not empty, this tag is synonymous with the main tag\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug name\",\n                    \"type\": \"string\"\n                },\n                \"tag_id\": {\n                    \"description\": \"tag id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.ThemeOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UnreviewedRevisionInfoInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"html\": {\n                    \"type\": \"string\"\n                },\n                \"object_id\": {\n                    \"type\": \"string\"\n                },\n                \"tags\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagResp\"\n                    }\n                },\n                \"title\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateCommentReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"comment_id\"\n            ],\n            \"properties\": {\n                \"comment_id\": {\n                    \"description\": \"comment id\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original comment content\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed comment content\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateFollowTagsReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"slug_name_list\": {\n                    \"description\": \"tag slug name list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        },\n        \"schema.UpdateInfoRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"display_name\"\n            ],\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"$ref\": \"#/definitions/schema.AvatarInfo\"\n                },\n                \"bio\": {\n                    \"description\": \"bio\",\n                    \"type\": \"string\",\n                    \"maxLength\": 4096\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UpdateSMTPConfigReq\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"encryption\": {\n                    \"description\": \"\\\"\\\" SSL\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"SSL\"\n                    ]\n                },\n                \"from_email\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"from_name\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_authentication\": {\n                    \"type\": \"boolean\"\n                },\n                \"smtp_host\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"smtp_port\": {\n                    \"type\": \"integer\",\n                    \"maximum\": 65535,\n                    \"minimum\": 1\n                },\n                \"smtp_username\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 256\n                },\n                \"test_email_recipient\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"edit_summary\": {\n                    \"description\": \"edit summary\",\n                    \"type\": \"string\"\n                },\n                \"original_text\": {\n                    \"description\": \"original text\",\n                    \"type\": \"string\"\n                },\n                \"parsed_text\": {\n                    \"description\": \"parsed text\",\n                    \"type\": \"string\"\n                },\n                \"slug_name\": {\n                    \"description\": \"slug_name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 35\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateTagSynonymReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"synonym_tag_list\",\n                \"tag_id\"\n            ],\n            \"properties\": {\n                \"synonym_tag_list\": {\n                    \"description\": \"synonym tag list\",\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.TagItem\"\n                    }\n                },\n                \"tag_id\": {\n                    \"description\": \"tag_id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserInterfaceRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"language\"\n            ],\n            \"properties\": {\n                \"language\": {\n                    \"description\": \"language\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                }\n            }\n        },\n        \"schema.UpdateUserPasswordReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"password\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"password\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                },\n                \"user_id\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserRoleReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"role_id\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"role_id\": {\n                    \"description\": \"role id\",\n                    \"type\": \"integer\"\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UpdateUserStatusReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"status\",\n                \"user_id\"\n            ],\n            \"properties\": {\n                \"status\": {\n                    \"description\": \"user status\",\n                    \"type\": \"string\",\n                    \"enum\": [\n                        \"normal\",\n                        \"suspended\",\n                        \"deleted\",\n                        \"inactive\"\n                    ]\n                },\n                \"user_id\": {\n                    \"description\": \"user id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserBasicInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display_name\",\n                    \"type\": \"string\"\n                },\n                \"id\": {\n                    \"description\": \"user_id\",\n                    \"type\": \"string\"\n                },\n                \"ip_info\": {\n                    \"description\": \"ip info\",\n                    \"type\": \"string\"\n                },\n                \"location\": {\n                    \"description\": \"location\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"status\": {\n                    \"description\": \"status\",\n                    \"type\": \"string\"\n                },\n                \"username\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\"\n                },\n                \"website\": {\n                    \"description\": \"website\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserChangeEmailSendCodeReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"captcha_id\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"e_mail\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserChangeEmailVerifyReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.UserEmailLogin\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserModifyPassWordRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"old_pass\": {\n                    \"description\": \"old password\",\n                    \"type\": \"string\"\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetRequest\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserNoticeSetResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"notice_switch\": {\n                    \"type\": \"boolean\"\n                }\n            }\n        },\n        \"schema.UserRankingResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"staffs\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_reputation\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                },\n                \"users_with_the_most_vote\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/schema.UserRankingSimpleInfo\"\n                    }\n                }\n            }\n        },\n        \"schema.UserRankingSimpleInfo\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"avatar\": {\n                    \"description\": \"avatar\",\n                    \"type\": \"string\"\n                },\n                \"display_name\": {\n                    \"description\": \"display name\",\n                    \"type\": \"string\"\n                },\n                \"rank\": {\n                    \"description\": \"rank\",\n                    \"type\": \"integer\"\n                },\n                \"username\": {\n                    \"description\": \"username\",\n                    \"type\": \"string\"\n                },\n                \"vote_count\": {\n                    \"description\": \"vote\",\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"schema.UserRePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"code\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"code\": {\n                    \"description\": \"code\",\n                    \"type\": \"string\",\n                    \"maxLength\": 100\n                },\n                \"pass\": {\n                    \"description\": \"Password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32\n                }\n            }\n        },\n        \"schema.UserRegisterReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\",\n                \"name\",\n                \"pass\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"email\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                },\n                \"name\": {\n                    \"description\": \"name\",\n                    \"type\": \"string\",\n                    \"maxLength\": 30\n                },\n                \"pass\": {\n                    \"description\": \"password\",\n                    \"type\": \"string\",\n                    \"maxLength\": 32,\n                    \"minLength\": 8\n                }\n            }\n        },\n        \"schema.UserRetrievePassWordRequest\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"e_mail\"\n            ],\n            \"properties\": {\n                \"captcha_code\": {\n                    \"description\": \"captcha_code\",\n                    \"type\": \"string\"\n                },\n                \"captcha_id\": {\n                    \"description\": \"captcha_id\",\n                    \"type\": \"string\"\n                },\n                \"e_mail\": {\n                    \"description\": \"e_mail\",\n                    \"type\": \"string\",\n                    \"maxLength\": 500\n                }\n            }\n        },\n        \"schema.VoteReq\": {\n            \"type\": \"object\",\n            \"required\": [\n                \"object_id\"\n            ],\n            \"properties\": {\n                \"is_cancel\": {\n                    \"description\": \"is cancel\",\n                    \"type\": \"boolean\"\n                },\n                \"object_id\": {\n                    \"description\": \"id\",\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"schema.VoteResp\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"down_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"up_votes\": {\n                    \"type\": \"integer\"\n                },\n                \"vote_status\": {\n                    \"type\": \"string\"\n                },\n                \"votes\": {\n                    \"type\": \"integer\"\n                }\n            }\n        },\n        \"translator.LangOption\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"label\": {\n                    \"type\": \"string\"\n                },\n                \"value\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    },\n    \"securityDefinitions\": {\n        \"ApiKeyAuth\": {\n            \"type\": \"apiKey\",\n            \"name\": \"Authorization\",\n            \"in\": \"header\"\n        }\n    }\n}", "definitions:\n  handler.RespBody:\n    properties:\n      code:\n        description: http code\n        type: integer\n      data:\n        description: response data\n      msg:\n        description: response message\n        type: string\n      reason:\n        description: reason key\n        type: string\n    type: object\n  install.CheckConfigFileResp:\n    properties:\n      config_file_exist:\n        type: boolean\n      db_connection_success:\n        type: boolean\n      db_table_exist:\n        type: boolean\n    type: object\n  install.CheckDatabaseReq:\n    properties:\n      db_file:\n        type: string\n      db_host:\n        type: string\n      db_name:\n        type: string\n      db_password:\n        type: string\n      db_type:\n        enum:\n        - postgres\n        - sqlite3\n        - mysql\n        type: string\n      db_username:\n        type: string\n    required:\n    - db_type\n    type: object\n  install.InitBaseInfoReq:\n    properties:\n      contact_email:\n        maxLength: 500\n        type: string\n      email:\n        maxLength: 500\n        type: string\n      lang:\n        maxLength: 30\n        type: string\n      name:\n        maxLength: 30\n        type: string\n      password:\n        maxLength: 32\n        minLength: 8\n        type: string\n      site_name:\n        maxLength: 30\n        type: string\n      site_url:\n        maxLength: 512\n        type: string\n    required:\n    - contact_email\n    - email\n    - lang\n    - name\n    - password\n    - site_name\n    - site_url\n    type: object\n  pager.PageModel:\n    properties:\n      count:\n        type: integer\n      list: {}\n    type: object\n  schema.ActObjectInfo:\n    properties:\n      answer_id:\n        type: string\n      display_name:\n        type: string\n      main_tag_slug_name:\n        type: string\n      object_type:\n        type: string\n      question_id:\n        type: string\n      title:\n        type: string\n      username:\n        type: string\n    type: object\n  schema.ActObjectTimeline:\n    properties:\n      activity_id:\n        type: string\n      activity_type:\n        type: string\n      cancelled:\n        type: boolean\n      cancelled_at:\n        type: integer\n      comment:\n        type: string\n      created_at:\n        type: integer\n      id:\n        type: string\n      object_id:\n        type: string\n      object_type:\n        type: string\n      revision_id:\n        type: string\n      user_display_name:\n        type: string\n      username:\n        type: string\n    type: object\n  schema.ActionRecordResp:\n    properties:\n      captcha_id:\n        type: string\n      captcha_img:\n        type: string\n      verify:\n        type: boolean\n    type: object\n  schema.AddCommentReq:\n    properties:\n      mention_username_list:\n        description: '@ user id list'\n        items:\n          type: string\n        type: array\n      object_id:\n        description: object id\n        type: string\n      original_text:\n        description: original comment content\n        type: string\n      parsed_text:\n        description: parsed comment content\n        type: string\n      reply_comment_id:\n        description: reply comment id\n        type: string\n    required:\n    - object_id\n    - original_text\n    - parsed_text\n    type: object\n  schema.AddReportReq:\n    properties:\n      content:\n        description: report content\n        maxLength: 500\n        type: string\n      object_id:\n        description: object id\n        maxLength: 20\n        type: string\n      report_type:\n        description: report type\n        type: integer\n    required:\n    - object_id\n    - report_type\n    type: object\n  schema.AddUserReq:\n    properties:\n      display_name:\n        maxLength: 30\n        type: string\n      email:\n        maxLength: 500\n        type: string\n      password:\n        maxLength: 32\n        minLength: 8\n        type: string\n    required:\n    - display_name\n    - email\n    - password\n    type: object\n  schema.AdminSetAnswerStatusRequest:\n    properties:\n      answer_id:\n        type: string\n      status:\n        type: string\n    type: object\n  schema.AdminSetQuestionStatusRequest:\n    properties:\n      question_id:\n        type: string\n      status:\n        type: string\n    type: object\n  schema.AnswerAcceptedReq:\n    properties:\n      answer_id:\n        type: string\n      question_id:\n        type: string\n    type: object\n  schema.AnswerAddReq:\n    properties:\n      content:\n        description: content\n        type: string\n      html:\n        description: html\n        type: string\n      question_id:\n        description: question_id\n        type: string\n    type: object\n  schema.AnswerUpdateReq:\n    properties:\n      content:\n        description: content\n        type: string\n      edit_summary:\n        description: edit_summary\n        type: string\n      html:\n        description: html\n        type: string\n      id:\n        description: id\n        type: string\n      question_id:\n        description: question_id\n        type: string\n      title:\n        description: title\n        type: string\n    type: object\n  schema.AvatarInfo:\n    properties:\n      custom:\n        maxLength: 200\n        type: string\n      gravatar:\n        maxLength: 200\n        type: string\n      type:\n        maxLength: 100\n        type: string\n    type: object\n  schema.CloseQuestionReq:\n    properties:\n      close_msg:\n        description: close_type\n        type: string\n      close_type:\n        description: close_type\n        type: integer\n      id:\n        type: string\n    required:\n    - id\n    type: object\n  schema.CollectionSwitchReq:\n    properties:\n      group_id:\n        description: user collection group TagID\n        type: string\n      object_id:\n        description: object TagID\n        type: string\n    required:\n    - group_id\n    - object_id\n    type: object\n  schema.CollectionSwitchResp:\n    properties:\n      object_collection_count:\n        type: string\n      object_id:\n        type: string\n      switch:\n        type: boolean\n    type: object\n  schema.FollowReq:\n    properties:\n      is_cancel:\n        description: is cancel\n        type: boolean\n      object_id:\n        description: object id\n        type: string\n    required:\n    - object_id\n    type: object\n  schema.FollowResp:\n    properties:\n      follows:\n        description: the followers of object\n        type: integer\n      is_followed:\n        description: if user is followed object will be true,otherwise false\n        type: boolean\n    type: object\n  schema.GetCommentPersonalWithPageResp:\n    properties:\n      answer_id:\n        description: answer id\n        type: string\n      comment_id:\n        description: comment id\n        type: string\n      content:\n        description: content\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      object_id:\n        description: object id\n        type: string\n      object_type:\n        description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        - comment\n        type: string\n      question_id:\n        description: question id\n        type: string\n      title:\n        description: title\n        type: string\n    type: object\n  schema.GetCommentResp:\n    properties:\n      comment_id:\n        description: comment id\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      is_vote:\n        description: current user if already vote this comment\n        type: boolean\n      member_actions:\n        description: MemberActions\n        items:\n          $ref: '#/definitions/schema.PermissionMemberAction'\n        type: array\n      object_id:\n        description: object id\n        type: string\n      original_text:\n        description: original comment content\n        type: string\n      parsed_text:\n        description: parsed comment content\n        type: string\n      reply_comment_id:\n        description: reply comment id\n        type: string\n      reply_user_display_name:\n        description: reply user display name\n        type: string\n      reply_user_id:\n        description: reply user id\n        type: string\n      reply_user_status:\n        description: reply user status\n        type: string\n      reply_username:\n        description: reply user username\n        type: string\n      user_avatar:\n        description: user avatar\n        type: string\n      user_display_name:\n        description: user display name\n        type: string\n      user_id:\n        description: user id\n        type: string\n      user_status:\n        description: user status\n        type: string\n      username:\n        description: username\n        type: string\n      vote_count:\n        description: user vote amount\n        type: integer\n    type: object\n  schema.GetFollowingTagsResp:\n    properties:\n      display_name:\n        description: display name\n        type: string\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        description: slug name\n        type: string\n      tag_id:\n        description: tag id\n        type: string\n    type: object\n  schema.GetObjectTimelineResp:\n    properties:\n      object_info:\n        $ref: '#/definitions/schema.ActObjectInfo'\n      timeline:\n        items:\n          $ref: '#/definitions/schema.ActObjectTimeline'\n        type: array\n    type: object\n  schema.GetOtherUserInfoByUsernameResp:\n    properties:\n      answer_count:\n        description: answer count\n        type: integer\n      avatar:\n        description: avatar\n        type: string\n      bio:\n        description: bio markdown\n        type: string\n      bio_html:\n        description: bio html\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      follow_count:\n        description: |-\n          email\n          follow count\n        type: integer\n      id:\n        description: user id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      is_admin:\n        description: is admin\n        type: boolean\n      last_login_date:\n        description: last login date\n        type: integer\n      location:\n        description: location\n        type: string\n      mobile:\n        description: mobile\n        type: string\n      question_count:\n        description: question count\n        type: integer\n      rank:\n        description: rank\n        type: integer\n      status:\n        type: string\n      status_msg:\n        type: string\n      username:\n        description: username\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.GetOtherUserInfoResp:\n    properties:\n      has:\n        type: boolean\n      info:\n        $ref: '#/definitions/schema.GetOtherUserInfoByUsernameResp'\n    type: object\n  schema.GetRankPersonalWithPageResp:\n    properties:\n      answer_id:\n        description: answer id\n        type: string\n      content:\n        description: content\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      object_id:\n        description: object id\n        type: string\n      object_type:\n        description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        - comment\n        type: string\n      question_id:\n        description: question id\n        type: string\n      rank_type:\n        description: rank type\n        type: string\n      reputation:\n        description: reputation\n        type: integer\n      title:\n        description: title\n        type: string\n    type: object\n  schema.GetReportTypeResp:\n    properties:\n      content_type:\n        description: content type\n        type: string\n      description:\n        description: report description\n        type: string\n      have_content:\n        description: is have content\n        type: boolean\n      name:\n        description: report name\n        type: string\n      source:\n        description: report source\n        type: string\n      type:\n        description: report type\n        type: integer\n    type: object\n  schema.GetRevisionResp:\n    properties:\n      content:\n        description: content parsed\n      create_at:\n        type: integer\n      id:\n        description: id\n        type: string\n      object_id:\n        description: object id\n        type: string\n      reason:\n        type: string\n      status:\n        description: 'revision status(normal: 1; delete 2)'\n        type: integer\n      title:\n        description: title\n        type: string\n      use_id:\n        description: user id\n        type: string\n      user_info:\n        $ref: '#/definitions/schema.UserBasicInfo'\n    type: object\n  schema.GetRoleResp:\n    properties:\n      description:\n        type: string\n      id:\n        type: integer\n      name:\n        type: string\n    type: object\n  schema.GetSMTPConfigResp:\n    properties:\n      encryption:\n        description: '\"\" SSL'\n        type: string\n      from_email:\n        type: string\n      from_name:\n        type: string\n      smtp_authentication:\n        type: boolean\n      smtp_host:\n        type: string\n      smtp_password:\n        type: string\n      smtp_port:\n        type: integer\n      smtp_username:\n        type: string\n    type: object\n  schema.GetSiteLegalInfoResp:\n    properties:\n      privacy_policy_original_text:\n        type: string\n      privacy_policy_parsed_text:\n        type: string\n      terms_of_service_original_text:\n        type: string\n      terms_of_service_parsed_text:\n        type: string\n    type: object\n  schema.GetTagPageResp:\n    properties:\n      created_at:\n        description: created time\n        type: integer\n      display_name:\n        description: display_name\n        type: string\n      excerpt:\n        description: excerpt\n        type: string\n      follow_count:\n        description: follower amount\n        type: integer\n      is_follower:\n        description: is follower\n        type: boolean\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed_text\n        type: string\n      question_count:\n        description: question amount\n        type: integer\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        description: slug_name\n        type: string\n      tag_id:\n        description: tag_id\n        type: string\n      updated_at:\n        description: updated time\n        type: integer\n    type: object\n  schema.GetTagResp:\n    properties:\n      created_at:\n        description: created time\n        type: integer\n      description:\n        description: description text\n        type: string\n      display_name:\n        description: display name\n        type: string\n      excerpt:\n        description: excerpt\n        type: string\n      follow_count:\n        description: follower amount\n        type: integer\n      is_follower:\n        description: is follower\n        type: boolean\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      member_actions:\n        description: MemberActions\n        items:\n          $ref: '#/definitions/schema.PermissionMemberAction'\n        type: array\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed text\n        type: string\n      question_count:\n        description: question amount\n        type: integer\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        description: slug name\n        type: string\n      tag_id:\n        description: tag id\n        type: string\n      updated_at:\n        description: updated time\n        type: integer\n    type: object\n  schema.GetTagSynonymsResp:\n    properties:\n      member_actions:\n        description: MemberActions\n        items:\n          $ref: '#/definitions/schema.PermissionMemberAction'\n        type: array\n      synonyms:\n        description: synonyms\n        items:\n          $ref: '#/definitions/schema.TagSynonym'\n        type: array\n    type: object\n  schema.GetUnreviewedRevisionResp:\n    properties:\n      info:\n        $ref: '#/definitions/schema.UnreviewedRevisionInfoInfo'\n      type:\n        type: string\n      unreviewed_info:\n        $ref: '#/definitions/schema.GetRevisionResp'\n    type: object\n  schema.GetUserPageResp:\n    properties:\n      avatar:\n        description: avatar\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      deleted_at:\n        description: delete time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      e_mail:\n        description: email\n        type: string\n      rank:\n        description: rank\n        type: integer\n      role_id:\n        description: role id\n        type: integer\n      role_name:\n        description: role name\n        type: string\n      status:\n        description: user status(normal,suspended,deleted,inactive)\n        type: string\n      suspended_at:\n        description: suspended time\n        type: integer\n      user_id:\n        description: user id\n        type: string\n      username:\n        description: username\n        type: string\n    type: object\n  schema.GetUserResp:\n    properties:\n      access_token:\n        description: access token\n        type: string\n      answer_count:\n        description: answer count\n        type: integer\n      authority_group:\n        description: authority group\n        type: integer\n      avatar:\n        description: avatar\n        type: string\n      bio:\n        description: bio markdown\n        type: string\n      bio_html:\n        description: bio html\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      e_mail:\n        description: email\n        type: string\n      follow_count:\n        description: follow count\n        type: integer\n      id:\n        description: user id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      is_admin:\n        description: is admin\n        type: boolean\n      language:\n        description: language\n        type: string\n      last_login_date:\n        description: last login date\n        type: integer\n      location:\n        description: location\n        type: string\n      mail_status:\n        description: mail status(1 pass 2 to be verified)\n        type: integer\n      mobile:\n        description: mobile\n        type: string\n      notice_status:\n        description: notice status(1 on 2off)\n        type: integer\n      question_count:\n        description: question count\n        type: integer\n      rank:\n        description: rank\n        type: integer\n      status:\n        description: user status\n        type: string\n      username:\n        description: username\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.GetUserToSetShowResp:\n    properties:\n      access_token:\n        description: access token\n        type: string\n      answer_count:\n        description: answer count\n        type: integer\n      authority_group:\n        description: authority group\n        type: integer\n      avatar:\n        $ref: '#/definitions/schema.AvatarInfo'\n      bio:\n        description: bio markdown\n        type: string\n      bio_html:\n        description: bio html\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      display_name:\n        description: display name\n        type: string\n      e_mail:\n        description: email\n        type: string\n      follow_count:\n        description: follow count\n        type: integer\n      id:\n        description: user id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      is_admin:\n        description: is admin\n        type: boolean\n      language:\n        description: language\n        type: string\n      last_login_date:\n        description: last login date\n        type: integer\n      location:\n        description: location\n        type: string\n      mail_status:\n        description: mail status(1 pass 2 to be verified)\n        type: integer\n      mobile:\n        description: mobile\n        type: string\n      notice_status:\n        description: notice status(1 on 2off)\n        type: integer\n      question_count:\n        description: question count\n        type: integer\n      rank:\n        description: rank\n        type: integer\n      status:\n        description: user status\n        type: string\n      username:\n        description: username\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.GetVoteWithPageResp:\n    properties:\n      answer_id:\n        description: answer id\n        type: string\n      content:\n        description: content\n        type: string\n      created_at:\n        description: create time\n        type: integer\n      object_id:\n        description: object id\n        type: string\n      object_type:\n        description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        - comment\n        type: string\n      question_id:\n        description: question id\n        type: string\n      title:\n        description: title\n        type: string\n      vote_type:\n        description: vote type\n        type: string\n    type: object\n  schema.NotificationClearIDRequest:\n    properties:\n      id:\n        type: string\n    type: object\n  schema.NotificationClearRequest:\n    properties:\n      type:\n        description: inbox achievement\n        type: string\n    type: object\n  schema.PermissionMemberAction:\n    properties:\n      action:\n        type: string\n      name:\n        type: string\n      type:\n        type: string\n    type: object\n  schema.PostRenderReq:\n    properties:\n      content:\n        type: string\n    type: object\n  schema.QuestionAdd:\n    properties:\n      content:\n        description: content\n        maxLength: 65535\n        minLength: 6\n        type: string\n      html:\n        description: html\n        maxLength: 65535\n        minLength: 6\n        type: string\n      tags:\n        description: tags\n        items:\n          $ref: '#/definitions/schema.TagItem'\n        type: array\n      title:\n        description: question title\n        maxLength: 150\n        minLength: 6\n        type: string\n    required:\n    - content\n    - html\n    - tags\n    - title\n    type: object\n  schema.QuestionPageReq:\n    properties:\n      orderCond:\n        enum:\n        - newest\n        - active\n        - frequent\n        - score\n        - unanswered\n        type: string\n      page:\n        minimum: 1\n        type: integer\n      pageSize:\n        minimum: 1\n        type: integer\n      tag:\n        maxLength: 100\n        type: string\n      username:\n        maxLength: 100\n        type: string\n    type: object\n  schema.QuestionPageResp:\n    properties:\n      accepted_answer_id:\n        description: answer information\n        type: string\n      answer_count:\n        type: integer\n      collection_count:\n        type: integer\n      description:\n        type: string\n      follow_count:\n        type: integer\n      id:\n        type: string\n      last_answer_id:\n        type: string\n      operated_at:\n        description: operator information\n        type: integer\n      operation_type:\n        type: string\n      operator:\n        $ref: '#/definitions/schema.QuestionPageRespOperator'\n      status:\n        type: integer\n      tags:\n        items:\n          $ref: '#/definitions/schema.TagResp'\n        type: array\n      title:\n        type: string\n      unique_view_count:\n        type: integer\n      url_title:\n        type: string\n      view_count:\n        description: question statistical information\n        type: integer\n      vote_count:\n        type: integer\n    type: object\n  schema.QuestionPageRespOperator:\n    properties:\n      display_name:\n        type: string\n      id:\n        type: string\n      rank:\n        type: integer\n      username:\n        type: string\n    type: object\n  schema.QuestionUpdate:\n    properties:\n      content:\n        description: content\n        maxLength: 65535\n        minLength: 6\n        type: string\n      edit_summary:\n        description: edit summary\n        type: string\n      html:\n        description: html\n        maxLength: 65535\n        minLength: 6\n        type: string\n      id:\n        description: question id\n        type: string\n      tags:\n        description: tags\n        items:\n          $ref: '#/definitions/schema.TagItem'\n        type: array\n      title:\n        description: question title\n        maxLength: 150\n        minLength: 6\n        type: string\n    required:\n    - content\n    - html\n    - id\n    - tags\n    - title\n    type: object\n  schema.RemoveAnswerReq:\n    properties:\n      id:\n        description: answer id\n        type: string\n    required:\n    - id\n    type: object\n  schema.RemoveCommentReq:\n    properties:\n      comment_id:\n        description: comment id\n        type: string\n    required:\n    - comment_id\n    type: object\n  schema.RemoveQuestionReq:\n    properties:\n      id:\n        description: question id\n        type: string\n    required:\n    - id\n    type: object\n  schema.RemoveTagReq:\n    properties:\n      tag_id:\n        description: tag_id\n        type: string\n    required:\n    - tag_id\n    type: object\n  schema.ReopenQuestionReq:\n    properties:\n      question_id:\n        type: string\n    type: object\n  schema.ReportHandleReq:\n    properties:\n      flagged_content:\n        type: string\n      flagged_type:\n        type: integer\n      id:\n        type: string\n    required:\n    - flagged_type\n    - id\n    type: object\n  schema.RevisionAuditReq:\n    properties:\n      id:\n        description: object id\n        type: string\n      operation:\n        description: approve or reject\n        type: string\n    required:\n    - id\n    - operation\n    type: object\n  schema.SearchListResp:\n    properties:\n      count:\n        type: integer\n      extra:\n        description: extra fields\n      list:\n        description: search response\n        items:\n          $ref: '#/definitions/schema.SearchResp'\n        type: array\n    type: object\n  schema.SearchObject:\n    properties:\n      accepted:\n        type: boolean\n      answer_count:\n        type: integer\n      created_at:\n        type: integer\n      excerpt:\n        type: string\n      id:\n        type: string\n      question_id:\n        type: string\n      status:\n        description: Status\n        type: string\n      tags:\n        description: tags\n        items:\n          $ref: '#/definitions/schema.TagResp'\n        type: array\n      title:\n        type: string\n      user_info:\n        $ref: '#/definitions/schema.UserBasicInfo'\n        description: user info\n      vote_count:\n        type: integer\n    type: object\n  schema.SearchResp:\n    properties:\n      object:\n        $ref: '#/definitions/schema.SearchObject'\n        description: this object\n      object_type:\n        description: object_type\n        type: string\n    type: object\n  schema.SiteBrandingReq:\n    properties:\n      favicon:\n        maxLength: 512\n        type: string\n      logo:\n        maxLength: 512\n        type: string\n      mobile_logo:\n        maxLength: 512\n        type: string\n      square_icon:\n        maxLength: 512\n        type: string\n    type: object\n  schema.SiteBrandingResp:\n    properties:\n      favicon:\n        maxLength: 512\n        type: string\n      logo:\n        maxLength: 512\n        type: string\n      mobile_logo:\n        maxLength: 512\n        type: string\n      square_icon:\n        maxLength: 512\n        type: string\n    type: object\n  schema.SiteCustomCssHTMLReq:\n    properties:\n      custom_css:\n        maxLength: 65536\n        type: string\n      custom_footer:\n        maxLength: 65536\n        type: string\n      custom_head:\n        maxLength: 65536\n        type: string\n      custom_header:\n        maxLength: 65536\n        type: string\n    type: object\n  schema.SiteCustomCssHTMLResp:\n    properties:\n      custom_css:\n        maxLength: 65536\n        type: string\n      custom_footer:\n        maxLength: 65536\n        type: string\n      custom_head:\n        maxLength: 65536\n        type: string\n      custom_header:\n        maxLength: 65536\n        type: string\n    type: object\n  schema.SiteGeneralReq:\n    properties:\n      contact_email:\n        maxLength: 512\n        type: string\n      description:\n        maxLength: 2000\n        type: string\n      name:\n        maxLength: 128\n        type: string\n      short_description:\n        maxLength: 255\n        type: string\n      site_url:\n        maxLength: 512\n        type: string\n    required:\n    - contact_email\n    - name\n    - site_url\n    type: object\n  schema.SiteGeneralResp:\n    properties:\n      contact_email:\n        maxLength: 512\n        type: string\n      description:\n        maxLength: 2000\n        type: string\n      name:\n        maxLength: 128\n        type: string\n      short_description:\n        maxLength: 255\n        type: string\n      site_url:\n        maxLength: 512\n        type: string\n    required:\n    - contact_email\n    - name\n    - site_url\n    type: object\n  schema.SiteInfoResp:\n    properties:\n      branding:\n        $ref: '#/definitions/schema.SiteBrandingResp'\n      custom_css_html:\n        $ref: '#/definitions/schema.SiteCustomCssHTMLResp'\n      general:\n        $ref: '#/definitions/schema.SiteGeneralResp'\n      interface:\n        $ref: '#/definitions/schema.SiteInterfaceResp'\n      login:\n        $ref: '#/definitions/schema.SiteLoginResp'\n      site_seo:\n        $ref: '#/definitions/schema.SiteSeoReq'\n      theme:\n        $ref: '#/definitions/schema.SiteThemeResp'\n    type: object\n  schema.SiteInterfaceReq:\n    properties:\n      language:\n        maxLength: 128\n        type: string\n      time_zone:\n        maxLength: 128\n        type: string\n    required:\n    - language\n    - time_zone\n    type: object\n  schema.SiteInterfaceResp:\n    properties:\n      language:\n        maxLength: 128\n        type: string\n      time_zone:\n        maxLength: 128\n        type: string\n    required:\n    - language\n    - time_zone\n    type: object\n  schema.SiteLegalReq:\n    properties:\n      privacy_policy_original_text:\n        type: string\n      privacy_policy_parsed_text:\n        type: string\n      terms_of_service_original_text:\n        type: string\n      terms_of_service_parsed_text:\n        type: string\n    type: object\n  schema.SiteLegalResp:\n    properties:\n      privacy_policy_original_text:\n        type: string\n      privacy_policy_parsed_text:\n        type: string\n      terms_of_service_original_text:\n        type: string\n      terms_of_service_parsed_text:\n        type: string\n    type: object\n  schema.SiteLoginReq:\n    properties:\n      allow_new_registrations:\n        type: boolean\n      login_required:\n        type: boolean\n    type: object\n  schema.SiteLoginResp:\n    properties:\n      allow_new_registrations:\n        type: boolean\n      login_required:\n        type: boolean\n    type: object\n  schema.SiteSeoReq:\n    properties:\n      permalink:\n        maximum: 3\n        minimum: 0\n        type: integer\n      robots:\n        type: string\n    required:\n    - permalink\n    - robots\n    type: object\n  schema.SiteSeoResp:\n    properties:\n      permalink:\n        maximum: 3\n        minimum: 0\n        type: integer\n      robots:\n        type: string\n    required:\n    - permalink\n    - robots\n    type: object\n  schema.SiteThemeReq:\n    properties:\n      theme:\n        maxLength: 255\n        type: string\n      theme_config:\n        additionalProperties: true\n        type: object\n    required:\n    - theme\n    type: object\n  schema.SiteThemeResp:\n    properties:\n      theme:\n        type: string\n      theme_config:\n        additionalProperties: true\n        type: object\n      theme_options:\n        items:\n          $ref: '#/definitions/schema.ThemeOption'\n        type: array\n    type: object\n  schema.SiteWriteReq:\n    properties:\n      recommend_tags:\n        items:\n          type: string\n        type: array\n      required_tag:\n        type: boolean\n      reserved_tags:\n        items:\n          type: string\n        type: array\n    type: object\n  schema.SiteWriteResp:\n    properties:\n      recommend_tags:\n        items:\n          type: string\n        type: array\n      required_tag:\n        type: boolean\n      reserved_tags:\n        items:\n          type: string\n        type: array\n    type: object\n  schema.TagItem:\n    properties:\n      display_name:\n        description: display_name\n        maxLength: 35\n        type: string\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed text\n        type: string\n      slug_name:\n        description: slug_name\n        maxLength: 35\n        type: string\n    type: object\n  schema.TagResp:\n    properties:\n      display_name:\n        type: string\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      recommend:\n        type: boolean\n      reserved:\n        type: boolean\n      slug_name:\n        type: string\n    type: object\n  schema.TagSynonym:\n    properties:\n      display_name:\n        description: display name\n        type: string\n      main_tag_slug_name:\n        description: if main tag slug name is not empty, this tag is synonymous with\n          the main tag\n        type: string\n      slug_name:\n        description: slug name\n        type: string\n      tag_id:\n        description: tag id\n        type: string\n    type: object\n  schema.ThemeOption:\n    properties:\n      label:\n        type: string\n      value:\n        type: string\n    type: object\n  schema.UnreviewedRevisionInfoInfo:\n    properties:\n      content:\n        type: string\n      html:\n        type: string\n      object_id:\n        type: string\n      tags:\n        items:\n          $ref: '#/definitions/schema.TagResp'\n        type: array\n      title:\n        type: string\n    type: object\n  schema.UpdateCommentReq:\n    properties:\n      comment_id:\n        description: comment id\n        type: string\n      original_text:\n        description: original comment content\n        type: string\n      parsed_text:\n        description: parsed comment content\n        type: string\n    required:\n    - comment_id\n    type: object\n  schema.UpdateFollowTagsReq:\n    properties:\n      slug_name_list:\n        description: tag slug name list\n        items:\n          type: string\n        type: array\n    type: object\n  schema.UpdateInfoRequest:\n    properties:\n      avatar:\n        $ref: '#/definitions/schema.AvatarInfo'\n        description: avatar\n      bio:\n        description: bio\n        maxLength: 4096\n        type: string\n      display_name:\n        description: display_name\n        maxLength: 30\n        type: string\n      location:\n        description: location\n        maxLength: 100\n        type: string\n      username:\n        description: username\n        maxLength: 30\n        type: string\n      website:\n        description: website\n        maxLength: 500\n        type: string\n    required:\n    - display_name\n    type: object\n  schema.UpdateSMTPConfigReq:\n    properties:\n      encryption:\n        description: '\"\" SSL'\n        enum:\n        - SSL\n        type: string\n      from_email:\n        maxLength: 256\n        type: string\n      from_name:\n        maxLength: 256\n        type: string\n      smtp_authentication:\n        type: boolean\n      smtp_host:\n        maxLength: 256\n        type: string\n      smtp_password:\n        maxLength: 256\n        type: string\n      smtp_port:\n        maximum: 65535\n        minimum: 1\n        type: integer\n      smtp_username:\n        maxLength: 256\n        type: string\n      test_email_recipient:\n        type: string\n    type: object\n  schema.UpdateTagReq:\n    properties:\n      display_name:\n        description: display_name\n        maxLength: 35\n        type: string\n      edit_summary:\n        description: edit summary\n        type: string\n      original_text:\n        description: original text\n        type: string\n      parsed_text:\n        description: parsed text\n        type: string\n      slug_name:\n        description: slug_name\n        maxLength: 35\n        type: string\n      tag_id:\n        description: tag_id\n        type: string\n    required:\n    - tag_id\n    type: object\n  schema.UpdateTagSynonymReq:\n    properties:\n      synonym_tag_list:\n        description: synonym tag list\n        items:\n          $ref: '#/definitions/schema.TagItem'\n        type: array\n      tag_id:\n        description: tag_id\n        type: string\n    required:\n    - synonym_tag_list\n    - tag_id\n    type: object\n  schema.UpdateUserInterfaceRequest:\n    properties:\n      language:\n        description: language\n        maxLength: 100\n        type: string\n    required:\n    - language\n    type: object\n  schema.UpdateUserPasswordReq:\n    properties:\n      password:\n        maxLength: 32\n        minLength: 8\n        type: string\n      user_id:\n        type: string\n    required:\n    - password\n    - user_id\n    type: object\n  schema.UpdateUserRoleReq:\n    properties:\n      role_id:\n        description: role id\n        type: integer\n      user_id:\n        description: user id\n        type: string\n    required:\n    - role_id\n    - user_id\n    type: object\n  schema.UpdateUserStatusReq:\n    properties:\n      status:\n        description: user status\n        enum:\n        - normal\n        - suspended\n        - deleted\n        - inactive\n        type: string\n      user_id:\n        description: user id\n        type: string\n    required:\n    - status\n    - user_id\n    type: object\n  schema.UserBasicInfo:\n    properties:\n      avatar:\n        description: avatar\n        type: string\n      display_name:\n        description: display_name\n        type: string\n      id:\n        description: user_id\n        type: string\n      ip_info:\n        description: ip info\n        type: string\n      location:\n        description: location\n        type: string\n      rank:\n        description: rank\n        type: integer\n      status:\n        description: status\n        type: string\n      username:\n        description: name\n        type: string\n      website:\n        description: website\n        type: string\n    type: object\n  schema.UserChangeEmailSendCodeReq:\n    properties:\n      captcha_code:\n        maxLength: 500\n        type: string\n      captcha_id:\n        maxLength: 500\n        type: string\n      e_mail:\n        maxLength: 500\n        type: string\n    required:\n    - e_mail\n    type: object\n  schema.UserChangeEmailVerifyReq:\n    properties:\n      code:\n        maxLength: 500\n        type: string\n    required:\n    - code\n    type: object\n  schema.UserEmailLogin:\n    properties:\n      captcha_code:\n        description: captcha_code\n        type: string\n      captcha_id:\n        description: captcha_id\n        type: string\n      e_mail:\n        description: e_mail\n        maxLength: 500\n        type: string\n      pass:\n        description: password\n        maxLength: 32\n        minLength: 8\n        type: string\n    required:\n    - e_mail\n    - pass\n    type: object\n  schema.UserModifyPassWordRequest:\n    properties:\n      old_pass:\n        description: old password\n        type: string\n      pass:\n        description: password\n        type: string\n    type: object\n  schema.UserNoticeSetRequest:\n    properties:\n      notice_switch:\n        type: boolean\n    type: object\n  schema.UserNoticeSetResp:\n    properties:\n      notice_switch:\n        type: boolean\n    type: object\n  schema.UserRankingResp:\n    properties:\n      staffs:\n        items:\n          $ref: '#/definitions/schema.UserRankingSimpleInfo'\n        type: array\n      users_with_the_most_reputation:\n        items:\n          $ref: '#/definitions/schema.UserRankingSimpleInfo'\n        type: array\n      users_with_the_most_vote:\n        items:\n          $ref: '#/definitions/schema.UserRankingSimpleInfo'\n        type: array\n    type: object\n  schema.UserRankingSimpleInfo:\n    properties:\n      avatar:\n        description: avatar\n        type: string\n      display_name:\n        description: display name\n        type: string\n      rank:\n        description: rank\n        type: integer\n      username:\n        description: username\n        type: string\n      vote_count:\n        description: vote\n        type: integer\n    type: object\n  schema.UserRePassWordRequest:\n    properties:\n      code:\n        description: code\n        maxLength: 100\n        type: string\n      pass:\n        description: Password\n        maxLength: 32\n        type: string\n    required:\n    - code\n    - pass\n    type: object\n  schema.UserRegisterReq:\n    properties:\n      captcha_code:\n        description: captcha_code\n        type: string\n      captcha_id:\n        description: captcha_id\n        type: string\n      e_mail:\n        description: email\n        maxLength: 500\n        type: string\n      name:\n        description: name\n        maxLength: 30\n        type: string\n      pass:\n        description: password\n        maxLength: 32\n        minLength: 8\n        type: string\n    required:\n    - e_mail\n    - name\n    - pass\n    type: object\n  schema.UserRetrievePassWordRequest:\n    properties:\n      captcha_code:\n        description: captcha_code\n        type: string\n      captcha_id:\n        description: captcha_id\n        type: string\n      e_mail:\n        description: e_mail\n        maxLength: 500\n        type: string\n    required:\n    - e_mail\n    type: object\n  schema.VoteReq:\n    properties:\n      is_cancel:\n        description: is cancel\n        type: boolean\n      object_id:\n        description: id\n        type: string\n    required:\n    - object_id\n    type: object\n  schema.VoteResp:\n    properties:\n      down_votes:\n        type: integer\n      up_votes:\n        type: integer\n      vote_status:\n        type: string\n      votes:\n        type: integer\n    type: object\n  translator.LangOption:\n    properties:\n      label:\n        type: string\n      value:\n        type: string\n    type: object\ninfo:\n  contact: {}\npaths:\n  /:\n    get:\n      consumes:\n      - application/json\n      description: if config file not exist try to redirect to install page\n      produces:\n      - application/json\n      responses: {}\n      summary: if config file not exist try to redirect to install page\n      tags:\n      - installation\n  /answer/admin/api/answer/page:\n    get:\n      consumes:\n      - application/json\n      description: Status:[available,deleted]\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: user status\n        enum:\n        - available\n        - deleted\n        in: query\n        name: status\n        type: string\n      - description: answer id or question title\n        in: query\n        name: query\n        type: string\n      - description: question id\n        in: query\n        name: question_id\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSearchAnswerList\n      tags:\n      - admin\n  /answer/admin/api/answer/status:\n    put:\n      consumes:\n      - application/json\n      description: Status:[available,deleted]\n      parameters:\n      - description: AdminSetAnswerStatusRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AdminSetAnswerStatusRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSetAnswerStatus\n      tags:\n      - admin\n  /answer/admin/api/dashboard:\n    get:\n      consumes:\n      - application/json\n      description: DashboardInfo\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: DashboardInfo\n      tags:\n      - admin\n  /answer/admin/api/language/options:\n    get:\n      description: Get language options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: Get language options\n      tags:\n      - Lang\n  /answer/admin/api/question/page:\n    get:\n      consumes:\n      - application/json\n      description: Status:[available,closed,deleted]\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: user status\n        enum:\n        - available\n        - closed\n        - deleted\n        in: query\n        name: status\n        type: string\n      - description: question id or title\n        in: query\n        name: query\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSearchList\n      tags:\n      - admin\n  /answer/admin/api/question/status:\n    put:\n      consumes:\n      - application/json\n      description: Status:[available,closed,deleted]\n      parameters:\n      - description: AdminSetQuestionStatusRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AdminSetQuestionStatusRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: AdminSetQuestionStatus\n      tags:\n      - admin\n  /answer/admin/api/reasons:\n    get:\n      consumes:\n      - application/json\n      description: get reasons by object type and action\n      parameters:\n      - description: object_type\n        enum:\n        - question\n        - answer\n        - comment\n        - user\n        in: query\n        name: object_type\n        required: true\n        type: string\n      - description: action\n        enum:\n        - status\n        - close\n        - flag\n        - review\n        in: query\n        name: action\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: get reasons by object type and action\n      tags:\n      - reason\n  /answer/admin/api/report/:\n    put:\n      consumes:\n      - application/json\n      description: handle flag\n      parameters:\n      - description: flag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.ReportHandleReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      - ApiKeyAuth: []\n      summary: handle flag\n      tags:\n      - admin\n  /answer/admin/api/reports/page:\n    get:\n      consumes:\n      - application/json\n      description: list report records\n      parameters:\n      - description: status\n        enum:\n        - pending\n        - completed\n        in: query\n        name: status\n        required: true\n        type: string\n      - description: object_type\n        enum:\n        - all\n        - question\n        - answer\n        - comment\n        in: query\n        name: object_type\n        required: true\n        type: string\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      - ApiKeyAuth: []\n      summary: list report page\n      tags:\n      - admin\n  /answer/admin/api/roles:\n    get:\n      description: get role list\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetRoleResp'\n                  type: array\n              type: object\n      summary: get role list\n      tags:\n      - admin\n  /answer/admin/api/setting/smtp:\n    get:\n      description: GetSMTPConfig get smtp config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetSMTPConfigResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: GetSMTPConfig get smtp config\n      tags:\n      - admin\n    put:\n      description: update smtp config\n      parameters:\n      - description: smtp config\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateSMTPConfigReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update smtp config\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/branding:\n    get:\n      description: get site interface\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteBrandingResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site interface\n      tags:\n      - admin\n    put:\n      description: update site info branding\n      parameters:\n      - description: branding info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteBrandingReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site info branding\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/custom-css-html:\n    get:\n      description: get site info custom html css config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteCustomCssHTMLResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site info custom html css config\n      tags:\n      - admin\n    put:\n      description: update site custom css html config\n      parameters:\n      - description: login info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteCustomCssHTMLReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site custom css html config\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/general:\n    get:\n      description: get site general information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteGeneralResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site general information\n      tags:\n      - admin\n    put:\n      description: update site general information\n      parameters:\n      - description: general\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteGeneralReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site general information\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/interface:\n    get:\n      description: get site interface\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteInterfaceResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site interface\n      tags:\n      - admin\n    put:\n      description: update site info interface\n      parameters:\n      - description: general\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteInterfaceReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site info interface\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/legal:\n    get:\n      description: Set the legal information for the site\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteLegalResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: Set the legal information for the site\n      tags:\n      - admin\n    put:\n      description: update site legal info\n      parameters:\n      - description: write info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteLegalReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site legal info\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/login:\n    get:\n      description: get site info login config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteLoginResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site info login config\n      tags:\n      - admin\n    put:\n      description: update site login\n      parameters:\n      - description: login info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteLoginReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site login\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/seo:\n    get:\n      description: get site seo information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteSeoResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site seo information\n      tags:\n      - admin\n    put:\n      description: update site seo information\n      parameters:\n      - description: seo\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteSeoReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site seo information\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/theme:\n    get:\n      description: get site info theme config\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteThemeResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site info theme config\n      tags:\n      - admin\n    put:\n      description: update site custom css html config\n      parameters:\n      - description: login info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteThemeReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site custom css html config\n      tags:\n      - admin\n  /answer/admin/api/siteinfo/write:\n    get:\n      description: get site interface\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteWriteResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get site interface\n      tags:\n      - admin\n    put:\n      description: update site write info\n      parameters:\n      - description: write info\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.SiteWriteReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update site write info\n      tags:\n      - admin\n  /answer/admin/api/theme/options:\n    get:\n      description: Get theme options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: Get theme options\n      tags:\n      - admin\n  /answer/admin/api/user:\n    post:\n      consumes:\n      - application/json\n      description: add user\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AddUserReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: add user\n      tags:\n      - admin\n  /answer/admin/api/user/password:\n    put:\n      consumes:\n      - application/json\n      description: update user password\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserPasswordReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user password\n      tags:\n      - admin\n  /answer/admin/api/user/role:\n    put:\n      consumes:\n      - application/json\n      description: update user role\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserRoleReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user role\n      tags:\n      - admin\n  /answer/admin/api/user/status:\n    put:\n      consumes:\n      - application/json\n      description: update user\n      parameters:\n      - description: user\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserStatusReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user\n      tags:\n      - admin\n  /answer/admin/api/users/page:\n    get:\n      description: get user page\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: 'search query: email, username or id:[id]'\n        in: query\n        name: query\n        type: string\n      - description: staff user\n        in: query\n        name: staff\n        type: boolean\n      - description: user status\n        enum:\n        - suspended\n        - deleted\n        - inactive\n        in: query\n        name: status\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      records:\n                        items:\n                          $ref: '#/definitions/schema.GetUserPageResp'\n                        type: array\n                    type: object\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get user page\n      tags:\n      - admin\n  /answer/api/v1/activity/timeline:\n    get:\n      description: get object timeline\n      parameters:\n      - description: object id\n        in: query\n        name: object_id\n        type: string\n      - description: tag slug name\n        in: query\n        name: tag_slug_name\n        type: string\n      - description: object type\n        enum:\n        - question\n        - answer\n        - tag\n        in: query\n        name: object_type\n        type: string\n      - description: is show vote\n        in: query\n        name: show_vote\n        type: boolean\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetObjectTimelineResp'\n              type: object\n      summary: get object timeline\n      tags:\n      - Comment\n  /answer/api/v1/activity/timeline/detail:\n    get:\n      description: get object timeline detail\n      parameters:\n      - description: revision id\n        in: query\n        name: revision_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetObjectTimelineResp'\n              type: object\n      summary: get object timeline detail\n      tags:\n      - Comment\n  /answer/api/v1/answer:\n    delete:\n      consumes:\n      - application/json\n      description: delete answer\n      parameters:\n      - description: answer\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveAnswerReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: delete answer\n      tags:\n      - api-answer\n    post:\n      consumes:\n      - application/json\n      description: Insert Answer\n      parameters:\n      - description: AnswerAddReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AnswerAddReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: Insert Answer\n      tags:\n      - api-answer\n    put:\n      consumes:\n      - application/json\n      description: Update Answer\n      parameters:\n      - description: AnswerUpdateReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AnswerUpdateReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: Update Answer\n      tags:\n      - api-answer\n  /answer/api/v1/answer/acceptance:\n    post:\n      consumes:\n      - application/json\n      description: Accepted\n      parameters:\n      - description: AnswerAcceptedReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AnswerAcceptedReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: Accepted\n      tags:\n      - api-answer\n  /answer/api/v1/answer/info:\n    get:\n      consumes:\n      - application/json\n      description: Get Answer\n      parameters:\n      - default: \"1\"\n        description: Answer TagID\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: Get Answer\n      tags:\n      - api-answer\n  /answer/api/v1/answer/page:\n    get:\n      consumes:\n      - application/json\n      description: AnswerList <br> <b>order</b> (default or updated)\n      parameters:\n      - description: question_id\n        in: query\n        name: question_id\n        required: true\n        type: string\n      - description: order\n        in: query\n        name: order\n        required: true\n        type: string\n      - description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - description: page_size\n        in: query\n        name: page_size\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: AnswerList\n      tags:\n      - api-answer\n  /answer/api/v1/collection/switch:\n    post:\n      consumes:\n      - application/json\n      description: add collection\n      parameters:\n      - description: collection\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.CollectionSwitchReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.CollectionSwitchResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: add collection\n      tags:\n      - Collection\n  /answer/api/v1/comment:\n    delete:\n      consumes:\n      - application/json\n      description: remove comment\n      parameters:\n      - description: comment\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveCommentReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: remove comment\n      tags:\n      - Comment\n    get:\n      description: get comment by id\n      parameters:\n      - description: id\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetCommentResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get comment by id\n      tags:\n      - Comment\n    post:\n      consumes:\n      - application/json\n      description: add comment\n      parameters:\n      - description: comment\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AddCommentReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetCommentResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: add comment\n      tags:\n      - Comment\n    put:\n      consumes:\n      - application/json\n      description: update comment\n      parameters:\n      - description: comment\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateCommentReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update comment\n      tags:\n      - Comment\n  /answer/api/v1/comment/page:\n    get:\n      description: get comment page\n      parameters:\n      - description: page\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: object id\n        in: query\n        name: object_id\n        required: true\n        type: string\n      - description: query condition\n        enum:\n        - vote\n        in: query\n        name: query_cond\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetCommentResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get comment page\n      tags:\n      - Comment\n  /answer/api/v1/file:\n    post:\n      consumes:\n      - multipart/form-data\n      description: upload file\n      parameters:\n      - description: identify the source of the file upload\n        enum:\n        - post\n        - avatar\n        - branding\n        in: formData\n        name: source\n        required: true\n        type: string\n      - description: file\n        in: formData\n        name: file\n        required: true\n        type: file\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  type: string\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: upload file\n      tags:\n      - Upload\n  /answer/api/v1/follow:\n    post:\n      consumes:\n      - application/json\n      description: follow object or cancel follow operation\n      parameters:\n      - description: follow\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.FollowReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.FollowResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: follow object or cancel follow operation\n      tags:\n      - Activity\n  /answer/api/v1/follow/tags:\n    put:\n      consumes:\n      - application/json\n      description: update user follow tags\n      parameters:\n      - description: follow\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateFollowTagsReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update user follow tags\n      tags:\n      - Activity\n  /answer/api/v1/language/config:\n    get:\n      description: get language config mapping\n      parameters:\n      - description: Accept-Language\n        in: header\n        name: Accept-Language\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: get language config mapping\n      tags:\n      - Lang\n  /answer/api/v1/language/options:\n    get:\n      description: Get language options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: Get language options\n      tags:\n      - Lang\n  /answer/api/v1/notification/page:\n    get:\n      consumes:\n      - application/json\n      description: get notification list\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: type\n        enum:\n        - inbox\n        - achievement\n        in: query\n        name: type\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: get notification list\n      tags:\n      - Notification\n  /answer/api/v1/notification/read/state:\n    put:\n      consumes:\n      - application/json\n      description: ClearUnRead\n      parameters:\n      - description: NotificationClearIDRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.NotificationClearIDRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: ClearUnRead\n      tags:\n      - Notification\n  /answer/api/v1/notification/read/state/all:\n    put:\n      consumes:\n      - application/json\n      description: ClearUnRead\n      parameters:\n      - description: NotificationClearRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.NotificationClearRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: ClearUnRead\n      tags:\n      - Notification\n  /answer/api/v1/notification/status:\n    get:\n      consumes:\n      - application/json\n      description: GetRedDot\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: GetRedDot\n      tags:\n      - Notification\n    put:\n      consumes:\n      - application/json\n      description: DelRedDot\n      parameters:\n      - description: NotificationClearRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.NotificationClearRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: DelRedDot\n      tags:\n      - Notification\n  /answer/api/v1/personal/answer/page:\n    get:\n      consumes:\n      - application/json\n      description: UserAnswerList\n      parameters:\n      - default: string\n        description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      - description: order\n        enum:\n        - newest\n        - score\n        in: query\n        name: order\n        required: true\n        type: string\n      - default: \"0\"\n        description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - default: \"20\"\n        description: pagesize\n        in: query\n        name: pagesize\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserAnswerList\n      tags:\n      - api-answer\n  /answer/api/v1/personal/collection/page:\n    get:\n      consumes:\n      - application/json\n      description: UserCollectionList\n      parameters:\n      - default: \"0\"\n        description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - default: \"20\"\n        description: pagesize\n        in: query\n        name: pagesize\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserCollectionList\n      tags:\n      - Collection\n  /answer/api/v1/personal/comment/page:\n    get:\n      description: user personal comment list\n      parameters:\n      - description: page\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: username\n        in: query\n        name: username\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetCommentPersonalWithPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: user personal comment list\n      tags:\n      - Comment\n  /answer/api/v1/personal/qa/top:\n    get:\n      consumes:\n      - application/json\n      description: UserTop\n      parameters:\n      - default: string\n        description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserTop\n      tags:\n      - Question\n  /answer/api/v1/personal/rank/page:\n    get:\n      description: user personal rank list\n      parameters:\n      - description: page\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: username\n        in: query\n        name: username\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetRankPersonalWithPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: user personal rank list\n      tags:\n      - Rank\n  /answer/api/v1/personal/user/info:\n    get:\n      consumes:\n      - application/json\n      description: GetOtherUserInfoByUsername\n      parameters:\n      - description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetOtherUserInfoResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: GetOtherUserInfoByUsername\n      tags:\n      - User\n  /answer/api/v1/personal/vote/page:\n    get:\n      consumes:\n      - application/json\n      description: user's vote\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetVoteWithPageResp'\n                        type: array\n                    type: object\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: user's votes\n      tags:\n      - Activity\n  /answer/api/v1/post/render:\n    post:\n      consumes:\n      - application/json\n      description: render post content\n      parameters:\n      - description: PostRenderReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.PostRenderReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: render post content\n      tags:\n      - Upload\n  /answer/api/v1/question:\n    delete:\n      consumes:\n      - application/json\n      description: delete question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveQuestionReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: delete question\n      tags:\n      - Question\n    post:\n      consumes:\n      - application/json\n      description: add question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.QuestionAdd'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: add question\n      tags:\n      - Question\n    put:\n      consumes:\n      - application/json\n      description: update question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.QuestionUpdate'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: update question\n      tags:\n      - Question\n  /answer/api/v1/question/closemsglist:\n    get:\n      consumes:\n      - application/json\n      description: close question msg list\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: close question msg list\n      tags:\n      - Question\n  /answer/api/v1/question/info:\n    get:\n      consumes:\n      - application/json\n      description: get question details\n      parameters:\n      - default: \"1\"\n        description: Question TagID\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: get question details\n      tags:\n      - Question\n  /answer/api/v1/question/page:\n    get:\n      consumes:\n      - application/json\n      description: get questions by page\n      parameters:\n      - description: QuestionPageReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.QuestionPageReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.QuestionPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get questions by page\n      tags:\n      - Question\n  /answer/api/v1/question/reopen:\n    put:\n      consumes:\n      - application/json\n      description: reopen question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.ReopenQuestionReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: reopen question\n      tags:\n      - Question\n  /answer/api/v1/question/similar:\n    get:\n      consumes:\n      - application/json\n      description: add question title like\n      parameters:\n      - default: string\n        description: title\n        in: query\n        name: title\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: add question title like\n      tags:\n      - Question\n  /answer/api/v1/question/similar/tag:\n    get:\n      consumes:\n      - application/json\n      description: Search Similar Question\n      parameters:\n      - default: \"\"\n        description: question_id\n        in: query\n        name: question_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: Search Similar Question\n      tags:\n      - Question\n  /answer/api/v1/question/status:\n    put:\n      consumes:\n      - application/json\n      description: Close question\n      parameters:\n      - description: question\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.CloseQuestionReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: Close question\n      tags:\n      - Question\n  /answer/api/v1/question/tags:\n    get:\n      description: get tag list\n      parameters:\n      - description: tag\n        in: query\n        name: tag\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetTagResp'\n                  type: array\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get tag list\n      tags:\n      - Tag\n  /answer/api/v1/reasons:\n    get:\n      consumes:\n      - application/json\n      description: get reasons by object type and action\n      parameters:\n      - description: object_type\n        enum:\n        - question\n        - answer\n        - comment\n        - user\n        in: query\n        name: object_type\n        required: true\n        type: string\n      - description: action\n        enum:\n        - status\n        - close\n        - flag\n        - review\n        in: query\n        name: action\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: get reasons by object type and action\n      tags:\n      - reason\n  /answer/api/v1/report:\n    post:\n      consumes:\n      - application/json\n      description: add report <br> source (question, answer, comment, user)\n      parameters:\n      - description: report\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.AddReportReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      - ApiKeyAuth: []\n      summary: add report\n      tags:\n      - Report\n  /answer/api/v1/report/type/list:\n    get:\n      description: get report type list\n      parameters:\n      - description: report source\n        enum:\n        - question\n        - answer\n        - comment\n        - user\n        in: query\n        name: source\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetReportTypeResp'\n                  type: array\n              type: object\n      summary: get report type list\n      tags:\n      - Report\n  /answer/api/v1/revisions:\n    get:\n      description: get revision list\n      parameters:\n      - description: object id\n        in: query\n        name: object_id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetRevisionResp'\n                  type: array\n              type: object\n      summary: get revision list\n      tags:\n      - Revision\n  /answer/api/v1/revisions/audit:\n    put:\n      description: revision audit operation:approve or reject\n      parameters:\n      - description: audit\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RevisionAuditReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: revision audit\n      tags:\n      - Revision\n  /answer/api/v1/revisions/edit/check:\n    get:\n      consumes:\n      - application/json\n      description: check can update revision\n      parameters:\n      - default: string\n        description: id\n        in: query\n        name: id\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: check can update revision\n      tags:\n      - Revision\n  /answer/api/v1/revisions/unreviewed:\n    get:\n      description: get unreviewed revision list\n      parameters:\n      - description: page id\n        in: query\n        name: page\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetUnreviewedRevisionResp'\n                        type: array\n                    type: object\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get unreviewed revision list\n      tags:\n      - Revision\n  /answer/api/v1/search:\n    get:\n      description: search object\n      parameters:\n      - description: query string\n        in: query\n        name: q\n        required: true\n        type: string\n      - description: order\n        enum:\n        - newest\n        - active\n        - score\n        - relevance\n        in: query\n        name: order\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SearchListResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: search object\n      tags:\n      - Search\n  /answer/api/v1/siteinfo:\n    get:\n      description: get site info\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.SiteInfoResp'\n              type: object\n      summary: get site info\n      tags:\n      - site\n  /answer/api/v1/siteinfo/legal:\n    get:\n      description: get site legal info\n      parameters:\n      - description: legal information type\n        enum:\n        - tos\n        - privacy\n        in: query\n        name: info_type\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetSiteLegalInfoResp'\n              type: object\n      summary: get site legal info\n      tags:\n      - site\n  /answer/api/v1/tag:\n    delete:\n      consumes:\n      - application/json\n      description: delete tag\n      parameters:\n      - description: tag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.RemoveTagReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: delete tag\n      tags:\n      - Tag\n    get:\n      consumes:\n      - application/json\n      description: get tag one\n      parameters:\n      - description: tag id\n        in: query\n        name: tag_id\n        required: true\n        type: string\n      - description: tag name\n        in: query\n        name: tag_name\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetTagResp'\n              type: object\n      summary: get tag one\n      tags:\n      - Tag\n    put:\n      consumes:\n      - application/json\n      description: update tag\n      parameters:\n      - description: tag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateTagReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: update tag\n      tags:\n      - Tag\n  /answer/api/v1/tag/synonym:\n    put:\n      consumes:\n      - application/json\n      description: update tag\n      parameters:\n      - description: tag\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateTagSynonymReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: update tag\n      tags:\n      - Tag\n  /answer/api/v1/tag/synonyms:\n    get:\n      description: get tag synonyms\n      parameters:\n      - description: tag id\n        in: query\n        name: tag_id\n        required: true\n        type: integer\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetTagSynonymsResp'\n              type: object\n      summary: get tag synonyms\n      tags:\n      - Tag\n  /answer/api/v1/tags/following:\n    get:\n      description: get following tag list\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/schema.GetFollowingTagsResp'\n                  type: array\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get following tag list\n      tags:\n      - Tag\n  /answer/api/v1/tags/page:\n    get:\n      description: get tag page\n      parameters:\n      - description: page size\n        in: query\n        name: page\n        type: integer\n      - description: page size\n        in: query\n        name: page_size\n        type: integer\n      - description: slug_name\n        in: query\n        name: slug_name\n        type: string\n      - description: query condition\n        enum:\n        - popular\n        - name\n        - newest\n        in: query\n        name: query_cond\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  allOf:\n                  - $ref: '#/definitions/pager.PageModel'\n                  - properties:\n                      list:\n                        items:\n                          $ref: '#/definitions/schema.GetTagPageResp'\n                        type: array\n                    type: object\n              type: object\n      summary: get tag page\n      tags:\n      - Tag\n  /answer/api/v1/user/action/record:\n    get:\n      description: ActionRecord\n      parameters:\n      - description: action\n        enum:\n        - login\n        - e_mail\n        - find_pass\n        in: query\n        name: action\n        required: true\n        type: string\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.ActionRecordResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: ActionRecord\n      tags:\n      - User\n  /answer/api/v1/user/email:\n    put:\n      consumes:\n      - application/json\n      description: user change email verification\n      parameters:\n      - description: UserChangeEmailVerifyReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserChangeEmailVerifyReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: user change email verification\n      tags:\n      - User\n  /answer/api/v1/user/email/change/code:\n    post:\n      consumes:\n      - application/json\n      description: send email to the user email then change their email\n      parameters:\n      - description: UserChangeEmailSendCodeReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserChangeEmailSendCodeReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: send email to the user email then change their email\n      tags:\n      - User\n  /answer/api/v1/user/email/notification:\n    put:\n      consumes:\n      - application/json\n      description: unsubscribe email notification\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: unsubscribe email notification\n      tags:\n      - User\n  /answer/api/v1/user/email/verification:\n    post:\n      consumes:\n      - application/json\n      description: UserVerifyEmail\n      parameters:\n      - default: \"\"\n        description: code\n        in: query\n        name: code\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserVerifyEmail\n      tags:\n      - User\n  /answer/api/v1/user/email/verification/send:\n    post:\n      consumes:\n      - application/json\n      description: UserVerifyEmailSend\n      parameters:\n      - default: \"\"\n        description: captcha_id\n        in: query\n        name: captcha_id\n        type: string\n      - default: \"\"\n        description: captcha_code\n        in: query\n        name: captcha_code\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      security:\n      - ApiKeyAuth: []\n      summary: UserVerifyEmailSend\n      tags:\n      - User\n  /answer/api/v1/user/info:\n    get:\n      consumes:\n      - application/json\n      description: get user info, if user no login response http code is 200, but\n        user info is null\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserToSetShowResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: GetUserInfoByUserID\n      tags:\n      - User\n    put:\n      consumes:\n      - application/json\n      description: UserUpdateInfo update user info\n      parameters:\n      - description: access-token\n        in: header\n        name: Authorization\n        required: true\n        type: string\n      - description: UpdateInfoRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateInfoRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserUpdateInfo update user info\n      tags:\n      - User\n  /answer/api/v1/user/interface:\n    put:\n      consumes:\n      - application/json\n      description: UserUpdateInterface update user interface config\n      parameters:\n      - description: access-token\n        in: header\n        name: Authorization\n        required: true\n        type: string\n      - description: UpdateInfoRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UpdateUserInterfaceRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserUpdateInterface update user interface config\n      tags:\n      - User\n  /answer/api/v1/user/login/email:\n    post:\n      consumes:\n      - application/json\n      description: UserEmailLogin\n      parameters:\n      - description: UserEmailLogin\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserEmailLogin'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserEmailLogin\n      tags:\n      - User\n  /answer/api/v1/user/logout:\n    get:\n      consumes:\n      - application/json\n      description: user logout\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: user logout\n      tags:\n      - User\n  /answer/api/v1/user/notice/set:\n    post:\n      consumes:\n      - application/json\n      description: UserNoticeSet\n      parameters:\n      - description: UserNoticeSetRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserNoticeSetRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.UserNoticeSetResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: UserNoticeSet\n      tags:\n      - User\n  /answer/api/v1/user/password:\n    put:\n      consumes:\n      - application/json\n      description: UserModifyPassWord\n      parameters:\n      - description: UserModifyPassWordRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserModifyPassWordRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserModifyPassWord\n      tags:\n      - User\n  /answer/api/v1/user/password/replacement:\n    post:\n      consumes:\n      - application/json\n      description: UseRePassWord\n      parameters:\n      - description: UserRePassWordRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserRePassWordRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: UseRePassWord\n      tags:\n      - User\n  /answer/api/v1/user/password/reset:\n    post:\n      consumes:\n      - application/json\n      description: RetrievePassWord\n      parameters:\n      - description: UserRetrievePassWordRequest\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserRetrievePassWordRequest'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: RetrievePassWord\n      tags:\n      - User\n  /answer/api/v1/user/ranking:\n    get:\n      consumes:\n      - application/json\n      description: get user ranking\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.UserRankingResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: get user ranking\n      tags:\n      - User\n  /answer/api/v1/user/register/captcha:\n    get:\n      consumes:\n      - application/json\n      description: UserRegisterCaptcha\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserRegisterCaptcha\n      tags:\n      - User\n  /answer/api/v1/user/register/email:\n    post:\n      consumes:\n      - application/json\n      description: UserRegisterByEmail\n      parameters:\n      - description: UserRegisterReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.UserRegisterReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.GetUserResp'\n              type: object\n      summary: UserRegisterByEmail\n      tags:\n      - User\n  /answer/api/v1/vote/down:\n    post:\n      consumes:\n      - application/json\n      description: add vote\n      parameters:\n      - description: vote\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.VoteReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.VoteResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: vote down\n      tags:\n      - Activity\n  /answer/api/v1/vote/up:\n    post:\n      consumes:\n      - application/json\n      description: add vote\n      parameters:\n      - description: vote\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/schema.VoteReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/schema.VoteResp'\n              type: object\n      security:\n      - ApiKeyAuth: []\n      summary: vote up\n      tags:\n      - Activity\n  /custom.css:\n    get:\n      description: get site robots information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: get site robots information\n      tags:\n      - site\n  /installation/base-info:\n    post:\n      consumes:\n      - application/json\n      description: init base info\n      parameters:\n      - description: InitBaseInfoReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/install.InitBaseInfoReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: init base info\n      tags:\n      - installation\n  /installation/config-file/check:\n    post:\n      consumes:\n      - application/json\n      description: check config file if exist when installation\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/install.CheckConfigFileResp'\n              type: object\n      summary: check config file if exist when installation\n      tags:\n      - installation\n  /installation/db/check:\n    post:\n      consumes:\n      - application/json\n      description: check database if exist when installation\n      parameters:\n      - description: CheckDatabaseReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/install.CheckDatabaseReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  $ref: '#/definitions/install.CheckConfigFileResp'\n              type: object\n      summary: check database if exist when installation\n      tags:\n      - installation\n  /installation/init:\n    post:\n      consumes:\n      - application/json\n      description: init environment\n      parameters:\n      - description: CheckDatabaseReq\n        in: body\n        name: data\n        required: true\n        schema:\n          $ref: '#/definitions/install.CheckDatabaseReq'\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      summary: init environment\n      tags:\n      - installation\n  /installation/language/options:\n    get:\n      description: get installation language options\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            allOf:\n            - $ref: '#/definitions/handler.RespBody'\n            - properties:\n                data:\n                  items:\n                    $ref: '#/definitions/translator.LangOption'\n                  type: array\n              type: object\n      summary: get installation language options\n      tags:\n      - Lang\n  /personal/question/page:\n    get:\n      consumes:\n      - application/json\n      description: UserList\n      parameters:\n      - default: string\n        description: username\n        in: query\n        name: username\n        required: true\n        type: string\n      - description: order\n        enum:\n        - newest\n        - score\n        in: query\n        name: order\n        required: true\n        type: string\n      - default: \"0\"\n        description: page\n        in: query\n        name: page\n        required: true\n        type: string\n      - default: \"20\"\n        description: pagesize\n        in: query\n        name: pagesize\n        required: true\n        type: string\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            $ref: '#/definitions/handler.RespBody'\n      security:\n      - ApiKeyAuth: []\n      summary: UserList\n      tags:\n      - Question\n  /robots.txt:\n    get:\n      description: get site robots information\n      produces:\n      - application/json\n      responses:\n        \"200\":\n          description: OK\n          schema:\n            type: string\n      summary: get site robots information\n      tags:\n      - site\nsecurityDefinitions:\n  ApiKeyAuth:\n    in: header\n    name: Authorization\n    type: apiKey\nswagger: \"2.0\"\n", "package collection\n\nimport (\n\t\"context\"\n\n\t\"github.com/answerdev/answer/internal/base/constant\"\n\t\"github.com/answerdev/answer/internal/base/data\"\n\t\"github.com/answerdev/answer/internal/base/pager\"\n\t\"github.com/answerdev/answer/internal/base/reason\"\n\t\"github.com/answerdev/answer/internal/entity\"\n\tcollectioncommon \"github.com/answerdev/answer/internal/service/collection_common\"\n\t\"github.com/answerdev/answer/internal/service/unique\"\n\t\"github.com/segmentfault/pacman/errors\"\n\t\"xorm.io/xorm\"\n)\n\n// collectionRepo collection repository\ntype collectionRepo struct {\n\tdata         *data.Data\n\tuniqueIDRepo unique.UniqueIDRepo\n}\n\n// NewCollectionRepo new repository\nfunc NewCollectionRepo(data *data.Data, uniqueIDRepo unique.UniqueIDRepo) collectioncommon.CollectionRepo {\n\treturn &collectionRepo{\n\t\tdata:         data,\n\t\tuniqueIDRepo: uniqueIDRepo,\n\t}\n}\n\n// AddCollection add collection\nfunc (cr *collectionRepo) AddCollection(ctx context.Context, collection *entity.Collection) (err error) {\n\t_, err = cr.data.DB.Transaction(func(session *xorm.Session) (result any, err error) {\n\t\tvar has bool\n\t\tdbcollection := &entity.Collection{}\n\t\tresult = nil\n\t\thas, err = session.Where(\"user_id = ? and object_id = ?\", collection.UserID, collection.ObjectID).Get(dbcollection)\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t\tif has {\n\t\t\treturn\n\t\t}\n\t\tid, err := cr.uniqueIDRepo.GenUniqueIDStr(ctx, collection.TableName())\n\t\tif err == nil {\n\t\t\tcollection.ID = id\n\t\t\t_, err = session.Insert(collection)\n\t\t\tif err != nil {\n\t\t\t\treturn result, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t\t\t}\n\t\t}\n\t\treturn\n\t})\n\treturn err\n}\n\n// RemoveCollection delete collection\nfunc (cr *collectionRepo) RemoveCollection(ctx context.Context, id string) (err error) {\n\t_, err = cr.data.DB.Where(\"id =?\", id).Delete(&entity.Collection{})\n\tif err != nil {\n\t\treturn errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn nil\n}\n\n// UpdateCollection update collection\nfunc (cr *collectionRepo) UpdateCollection(ctx context.Context, collection *entity.Collection, cols []string) (err error) {\n\t_, err = cr.data.DB.ID(collection.ID).Cols(cols...).Update(collection)\n\treturn errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n}\n\n// GetCollection get collection one\nfunc (cr *collectionRepo) GetCollection(ctx context.Context, id int) (collection *entity.Collection, exist bool, err error) {\n\tcollection = &entity.Collection{}\n\texist, err = cr.data.DB.ID(id).Get(collection)\n\tif err != nil {\n\t\treturn nil, false, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn\n}\n\n// GetCollectionList get collection list all\nfunc (cr *collectionRepo) GetCollectionList(ctx context.Context, collection *entity.Collection) (collectionList []*entity.Collection, err error) {\n\tcollectionList = make([]*entity.Collection, 0)\n\terr = cr.data.DB.Find(collectionList, collection)\n\terr = errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\treturn\n}\n\n// GetOneByObjectIDAndUser get one by object TagID and user\nfunc (cr *collectionRepo) GetOneByObjectIDAndUser(ctx context.Context, userID string, objectID string) (collection *entity.Collection, exist bool, err error) {\n\tcollection = &entity.Collection{}\n\texist, err = cr.data.DB.Where(\"user_id = ? and object_id = ?\", userID, objectID).Get(collection)\n\tif err != nil {\n\t\treturn nil, false, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn\n}\n\n// SearchByObjectIDsAndUser search by object IDs and user\nfunc (cr *collectionRepo) SearchByObjectIDsAndUser(ctx context.Context, userID string, objectIDs []string) ([]*entity.Collection, error) {\n\tcollectionList := make([]*entity.Collection, 0)\n\terr := cr.data.DB.Where(\"user_id = ?\", userID).In(\"object_id\", objectIDs).Find(&collectionList)\n\tif err != nil {\n\t\treturn collectionList, err\n\t}\n\treturn collectionList, nil\n}\n\n// CountByObjectID count by object TagID\nfunc (cr *collectionRepo) CountByObjectID(ctx context.Context, objectID string) (total int64, err error) {\n\tcollection := &entity.Collection{}\n\ttotal, err = cr.data.DB.Where(\"object_id = ?\", objectID).Count(collection)\n\tif err != nil {\n\t\treturn 0, errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t}\n\treturn\n}\n\n// GetCollectionPage get collection page\nfunc (cr *collectionRepo) GetCollectionPage(ctx context.Context, page, pageSize int, collection *entity.Collection) (collectionList []*entity.Collection, total int64, err error) {\n\tcollectionList = make([]*entity.Collection, 0)\n\n\tsession := cr.data.DB.NewSession()\n\tif collection.UserID != \"\" && collection.UserID != \"0\" {\n\t\tsession = session.Where(\"user_id = ?\", collection.UserID)\n\t}\n\n\tif collection.UserCollectionGroupID != \"\" && collection.UserCollectionGroupID != \"0\" {\n\t\tsession = session.Where(\"user_collection_group_id = ?\", collection.UserCollectionGroupID)\n\t}\n\tsession = session.OrderBy(\"update_time desc\")\n\n\ttotal, err = pager.Help(page, pageSize, collectionList, collection, session)\n\terr = errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\treturn\n}\n\n// SearchObjectCollected check object is collected or not\nfunc (cr *collectionRepo) SearchObjectCollected(ctx context.Context, userID string, objectIds []string) (map[string]bool, error) {\n\tcollectedMap := make(map[string]bool)\n\tlist, err := cr.SearchByObjectIDsAndUser(ctx, userID, objectIds)\n\tif err != nil {\n\t\terr = errors.InternalServer(reason.DatabaseError).WithError(err).WithStack()\n\t\treturn collectedMap, err\n\t}\n\tfor _, item := range list {\n\t\tcollectedMap[item.ObjectID] = true\n\t}\n\treturn collectedMap, err\n}\n\n// SearchList\nfunc (cr *collectionRepo) SearchList(ctx context.Context, search *entity.CollectionSearch) ([]*entity.Collection, int64, error) {\n\tvar count int64\n\tvar err error\n\trows := make([]*entity.Collection, 0)\n\tif search.Page > 0 {\n\t\tsearch.Page = search.Page - 1\n\t} else {\n\t\tsearch.Page = 0\n\t}\n\tif search.PageSize == 0 {\n\t\tsearch.PageSize = constant.DefaultPageSize\n\t}\n\toffset := search.Page * search.PageSize\n\tsession := cr.data.DB.Where(\"\")\n\tif len(search.UserID) > 0 {\n\t\tsession = session.And(\"user_id = ?\", search.UserID)\n\t} else {\n\t\treturn rows, count, nil\n\t}\n\tsession = session.Limit(search.PageSize, offset)\n\tcount, err = session.OrderBy(\"updated_at desc\").FindAndCount(&rows)\n\tif err != nil {\n\t\treturn rows, count, err\n\t}\n\treturn rows, count, nil\n}\n"], "filenames": ["docs/docs.go", "docs/swagger.json", "docs/swagger.yaml", "internal/repo/collection/collection_repo.go"], "buggy_code_start_loc": [7506, 7498, 1590, 13], "buggy_code_end_loc": [7511, 7503, 1594, 41], "fixing_code_start_loc": [7505, 7497, 1589, 14], "fixing_code_end_loc": [7505, 7497, 1589, 55], "type": "CWE-362", "message": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') in GitHub repository answerdev/answer prior to 1.0.4.", "other": {"cve": {"id": "CVE-2023-0739", "sourceIdentifier": "security@huntr.dev", "published": "2023-02-08T05:15:11.973", "lastModified": "2023-03-02T02:15:41.857", "vulnStatus": "Modified", "descriptions": [{"lang": "en", "value": "Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition') in GitHub repository answerdev/answer prior to 1.0.4."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "HIGH", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 6.8, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.6, "impactScore": 5.2}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "NONE", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-362"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-362"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:answer:answer:*:*:*:*:*:*:*:*", "versionEndExcluding": "1.0.4", "matchCriteriaId": "6C25084E-B0C5-46D7-BDD3-E024EEB1E764"}]}]}], "references": [{"url": "https://github.com/answerdev/answer/commit/1ee34b884b905d14d4db457563176b77a974b992", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/93d7fac9-50be-4624-9096-45b89fbfd4ae", "source": "security@huntr.dev", "tags": ["Exploit", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/answerdev/answer/commit/1ee34b884b905d14d4db457563176b77a974b992"}}