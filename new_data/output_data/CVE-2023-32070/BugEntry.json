{"buggy_code": [".#---------------------------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.# Verify that internal link syntax is escaped\n.#---------------------------------------------------------------------------------------------------------\n[[lab~>~>el~~~~>>refe~|~|rence||param=\"value\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [url] Reference = [refe||rence]] [false] [[param]=[value]]\nonWord [lab]\nonSpecialSymbol [>]\nonSpecialSymbol [>]\nonWord [el]\nonSpecialSymbol [~]\nendLink [Typed = [false] Type = [url] Reference = [refe||rence]] [false] [[param]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiexternallink\"><a param=\"value\" href=\"refe||rence\">lab&gt;&gt;el~</a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|refe||rence--><span class=\"wikiexternallink\"><a param=\"value\" href=\"refe||rence\">lab&gt;&gt;el~</a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[lab~>~>el~~~~>>refe~|~|rence||param=\"value\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|refe||rence--><span class=\"wikiexternallink\"><a param=\"value\" href=\"refe||rence\">lab&gt;&gt;el~</a></span><!--stopwikilink--></p>", ".#-----------------------------------------------------\n.# Validate parameters support for groups\n.#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n(((some text)))\n\n(% param=\"value\" %)(((some text)))\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginGroup [[param]=[value]]\nbeginParagraph\nonWord [some]\nonSpace\nonWord [text]\nendParagraph\nendGroup [[param]=[value]]\nbeginGroup [[param]=[value]]\nbeginParagraph\nonWord [some]\nonSpace\nonWord [text]\nendParagraph\nendGroup [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<div param=\"value\"><p>some text</p></div><div param=\"value\"><p>some text</p></div>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n(((\nsome text\n)))\n\n(% param=\"value\" %)\n(((\nsome text\n)))\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<div param=\"value\"><p>some text</p></div><div param=\"value\"><p>some text</p></div>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n----\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nonHorizontalLine [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<hr param=\"value\"/>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n----\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><hr param=\"value\"/></html>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that EM tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><em a=\"b\">something</em></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [ITALIC] [[a]=[b]]\nonWord [something]\nendFormat [ITALIC] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><em><span a=\"b\">something</span></em></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)//something//", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Test parametrized definition lists\n.#-----------------------------------------------------\n(% param=\"value\" %)\n; title\n: definition\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginDefinitionList [[param]=[value]]\nbeginDefinitionTerm\nonWord [title]\nendDefinitionTerm\nbeginDefinitionDescription\nonWord [definition]\nendDefinitionDescription\nendDefinitionList [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<dl param=\"value\"><dt>title</dt><dd>definition</dd></dl>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n; title\n: definition\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<dl param=\"value\"><dt>title</dt><dd>definition</dd></dl>\n.#-----------------------------------------------------\n.expect|plain/1.0\n.#-----------------------------------------------------\ntitle\ndefinition", ".#--------------------------------------------------------------------------------\n.input|xwiki/2.0\n.# Verify that a sub list can have its own params\n.#--------------------------------------------------------------------------------\n(%param=value%)\n* item 1\n(%param2=value2%)\n** item 1.1\n*** item 1.1.1\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginList [BULLETED] [[param]=[value]]\nbeginListItem\nonWord [item]\nonSpace\nonWord [1]\nbeginList [BULLETED] [[param2]=[value2]]\nbeginListItem\nonWord [item]\nonSpace\nonWord [1]\nonSpecialSymbol [.]\nonWord [1]\nbeginList [BULLETED]\nbeginListItem\nonWord [item]\nonSpace\nonWord [1]\nonSpecialSymbol [.]\nonWord [1]\nonSpecialSymbol [.]\nonWord [1]\nendListItem\nendList [BULLETED]\nendListItem\nendList [BULLETED] [[param2]=[value2]]\nendListItem\nendList [BULLETED] [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<ul param=\"value\"><li>item 1<ul param2=\"value2\"><li>item 1.1<ul><li>item 1.1.1</li></ul></li></ul></li></ul>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n* item 1\n(% param2=\"value2\" %)\n** item 1.1\n*** item 1.1.1\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<ul param=\"value\"><li>item 1<ul param2=\"value2\"><li>item 1.1<ul><li>item 1.1.1</li></ul></li></ul></li></ul>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n* item\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginList [BULLETED] [[param1]=[value1][param2]=[value2]]\nbeginListItem\nonWord [item]\nendListItem\nendList [BULLETED] [[param1]=[value1][param2]=[value2]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<ul param1=\"value1\" param2=\"value2\"><li>item</li></ul>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n* item\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><ul param1=\"value1\" param2=\"value2\"><li>item</li></ul></html>", ".runTransformations\n.#--------------------------------------------------------------------------\n.inputexpect|xwiki/2.0\n.# Verify mix of styles in and outside macros. We had a bug previously where\n.# styles inside a macro was affecting how the macro was displayed and\n.# another where the format block wasn't closed before a macro.\n.#--------------------------------------------------------------------------\n{{testformatmacro/}}\n\n(% a=\"b\" %){{testformatmacro/}} text\n\n(% a=\"b\" %)text(%%){{testformatmacro/}}\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginMacroMarkerStandalone [testformatmacro] []\nbeginFormat [NONE] [[param]=[value]]\nonWord [formatmacro2]\nendFormat [NONE] [[param]=[value]]\nendMacroMarkerStandalone [testformatmacro] []\nbeginParagraph\nbeginFormat [NONE] [[a]=[b]]\nbeginMacroMarkerInline [testformatmacro] []\nbeginFormat [NONE] [[param]=[value]]\nonWord [formatmacro3]\nendFormat [NONE] [[param]=[value]]\nendMacroMarkerInline [testformatmacro] []\nonSpace\nonWord [text]\nendFormat [NONE] [[a]=[b]]\nendParagraph\nbeginParagraph\nbeginFormat [NONE] [[a]=[b]]\nonWord [text]\nendFormat [NONE] [[a]=[b]]\nbeginMacroMarkerInline [testformatmacro] []\nbeginFormat [NONE] [[param]=[value]]\nonWord [formatmacro4]\nendFormat [NONE] [[param]=[value]]\nendMacroMarkerInline [testformatmacro] []\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<span param=\"value\">formatmacro2</span><p><span a=\"b\"><span param=\"value\">formatmacro3</span> text</span></p><p><span a=\"b\">text</span><span param=\"value\">formatmacro4</span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<!--startmacro:testformatmacro|-|--><span param=\"value\">formatmacro2</span><!--stopmacro--><p><span a=\"b\"><!--startmacro:testformatmacro|-|--><span param=\"value\">formatmacro3</span><!--stopmacro--> text</span></p><p><span a=\"b\">text</span><!--startmacro:testformatmacro|-|--><span param=\"value\">formatmacro4</span><!--stopmacro--></p>\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<!--startmacro:testformatmacro|-|--><span param=\"value\">formatmacro2</span><!--stopmacro--><p><span a=\"b\"><!--startmacro:testformatmacro|-|--><span param=\"value\">formatmacro3</span><!--stopmacro--> text</span></p><p><span a=\"b\">text</span><!--startmacro:testformatmacro|-|--><span param=\"value\">formatmacro4</span><!--stopmacro--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n.# Specify both paragraph params followed by params on a word \n(% param1=\"value1\" param2=\"value2\" %)\n(% param3=\"value3\" %)hello(%%) world\n\n.# Make sure that same param names override values\n(% param4=\"valueA\" %)hello (% param4=\"valueB\" %)world\n\n.# Verify that world is using param5=value4\n**(% param5=\"value4\" %)hello** world\n\n.# Make sure that params override whatever previous values were set.\n.# i.e. world only has param7=valueB and NOT param6=valueA\n(% param6=\"valueA\" %)hello (% param7=\"valueB\" %)world\n\n.# Make sure xwiki/2.0 renderer is handling inline parameters properly\nbefore(% param=\"value\" %)x(%%)**y**after\n\n12**34(% param=\"value\" %)56(%%)78**90\n\n(% param=\"value\" %)1//2//(%%)//3//\n\n(% param1=\"value1\" %)**1**(% param2=\"value2\" %)**2**\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph [[param1]=[value1][param2]=[value2]]\nbeginFormat [NONE] [[param3]=[value3]]\nonWord [hello]\nendFormat [NONE] [[param3]=[value3]]\nonSpace\nonWord [world]\nendParagraph [[param1]=[value1][param2]=[value2]]\nbeginParagraph\nbeginFormat [NONE] [[param4]=[valueA]]\nonWord [hello]\nonSpace\nendFormat [NONE] [[param4]=[valueA]]\nbeginFormat [NONE] [[param4]=[valueB]]\nonWord [world]\nendFormat [NONE] [[param4]=[valueB]]\nendParagraph\nbeginParagraph\nbeginFormat [BOLD] [[param5]=[value4]]\nonWord [hello]\nendFormat [BOLD] [[param5]=[value4]]\nbeginFormat [NONE] [[param5]=[value4]]\nonSpace\nonWord [world]\nendFormat [NONE] [[param5]=[value4]]\nendParagraph\nbeginParagraph\nbeginFormat [NONE] [[param6]=[valueA]]\nonWord [hello]\nonSpace\nendFormat [NONE] [[param6]=[valueA]]\nbeginFormat [NONE] [[param7]=[valueB]]\nonWord [world]\nendFormat [NONE] [[param7]=[valueB]]\nendParagraph\nbeginParagraph\nonWord [before]\nbeginFormat [NONE] [[param]=[value]]\nonWord [x]\nendFormat [NONE] [[param]=[value]]\nbeginFormat [BOLD]\nonWord [y]\nendFormat [BOLD]\nonWord [after]\nendParagraph\nbeginParagraph\nonWord [12]\nbeginFormat [BOLD]\nonWord [34]\nbeginFormat [NONE] [[param]=[value]]\nonWord [56]\nendFormat [NONE] [[param]=[value]]\nonWord [78]\nendFormat [BOLD]\nonWord [90]\nendParagraph\nbeginParagraph\nbeginFormat [NONE] [[param]=[value]]\nonWord [1]\nbeginFormat [ITALIC]\nonWord [2]\nendFormat [ITALIC]\nendFormat [NONE] [[param]=[value]]\nbeginFormat [ITALIC]\nonWord [3]\nendFormat [ITALIC]\nendParagraph\nbeginParagraph\nbeginFormat [BOLD] [[param1]=[value1]]\nonWord [1]\nendFormat [BOLD] [[param1]=[value1]]\nbeginFormat [BOLD] [[param2]=[value2]]\nonWord [2]\nendFormat [BOLD] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p param1=\"value1\" param2=\"value2\"><span param3=\"value3\">hello</span> world</p><p><span param4=\"valueA\">hello&nbsp;</span><span param4=\"valueB\">world</span></p><p><strong><span param5=\"value4\">hello</span></strong><span param5=\"value4\">&nbsp;world</span></p><p><span param6=\"valueA\">hello&nbsp;</span><span param7=\"valueB\">world</span></p><p>before<span param=\"value\">x</span><strong>y</strong>after</p><p>12<strong>34<span param=\"value\">56</span>78</strong>90</p><p><span param=\"value\">1<em>2</em></span><em>3</em></p><p><strong><span param1=\"value1\">1</span></strong><strong><span param2=\"value2\">2</span></strong></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n(% param3=\"value3\" %)hello(%%) world\n\n(% param4=\"valueA\" %)hello (% param4=\"valueB\" %)world\n\n(% param5=\"value4\" %)**hello** world\n\n(% param6=\"valueA\" %)hello (% param7=\"valueB\" %)world\n\nbefore(% param=\"value\" %)x(%%)**y**after\n\n12**34(% param=\"value\" %)56(%%)78**90\n\n(% param=\"value\" %)1//2//(%%)//3//\n\n(% param1=\"value1\" %)**1**(% param2=\"value2\" %)**2**", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n>line\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginQuotation [[param1]=[value1][param2]=[value2]]\nbeginQuotationLine\nonWord [line]\nendQuotationLine\nendQuotation [[param1]=[value1][param2]=[value2]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<blockquote param1=\"value1\" param2=\"value2\"><p>line</p></blockquote>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n>line\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<blockquote param1=\"value1\" param2=\"value2\"><p>line</p></blockquote>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Test parametrized sections\n.#-----------------------------------------------------\n(% param=\"value\" %)\n= header\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginSection\nbeginHeader [1, Hheader] [[param]=[value]]\nonWord [header]\nendHeader [1, Hheader] [[param]=[value]]\nendSection\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<h1 id=\"Hheader\" class=\"wikigeneratedid\" param=\"value\"><span>header</span></h1>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n= header =\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><h1 id=\"Hheader\" class=\"wikigeneratedid\" param=\"value\"><span>header</span></h1></html>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that DEL tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><del a=\"b\">something</del></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [STRIKEDOUT] [[a]=[b]]\nonWord [something]\nendFormat [STRIKEDOUT] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><del><span a=\"b\">something</span></del></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)--something--", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that SUB tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><sub a=\"b\">something</sub></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [SUBSCRIPT] [[a]=[b]]\nonWord [something]\nendFormat [SUBSCRIPT] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><sub><span a=\"b\">something</span></sub></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %),,something,,", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that SUP tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><sup a=\"b\">something</sup></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [SUPERSCRIPT] [[a]=[b]]\nonWord [something]\nendFormat [SUPERSCRIPT] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><sup><span a=\"b\">something</span></sup></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)^^something^^", ".#-----------------------------------------------------------\n.input|xwiki/2.0\n.# Test table parameters\n.#-----------------------------------------------------------\n(% a=\"b\" %)\n(% c=\"d\" %)|=(% e=\"f\" %)(% g=\"h\" %)cell1|(% i=\"j\" %)(% k=\"l\" %)cell2\n\n(% a=\"b\" %)\n(% c=\"d\" %)!=(% e=\"f\" %)(% g=\"h\" %)cell1!!(% i=\"j\" %)(% k=\"l\" %)cell2\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginTable [[a]=[b]]\nbeginTableRow [[c]=[d]]\nbeginTableHeadCell [[e]=[f]]\nbeginFormat [NONE] [[g]=[h]]\nonWord [cell1]\nendFormat [NONE] [[g]=[h]]\nendTableHeadCell [[e]=[f]]\nbeginTableCell [[i]=[j]]\nbeginFormat [NONE] [[k]=[l]]\nonWord [cell2]\nendFormat [NONE] [[k]=[l]]\nendTableCell [[i]=[j]]\nendTableRow [[c]=[d]]\nendTable [[a]=[b]]\nbeginTable [[a]=[b]]\nbeginTableRow [[c]=[d]]\nbeginTableHeadCell [[e]=[f]]\nbeginFormat [NONE] [[g]=[h]]\nonWord [cell1]\nendFormat [NONE] [[g]=[h]]\nendTableHeadCell [[e]=[f]]\nbeginTableCell [[i]=[j]]\nbeginFormat [NONE] [[k]=[l]]\nonWord [cell2]\nendFormat [NONE] [[k]=[l]]\nendTableCell [[i]=[j]]\nendTableRow [[c]=[d]]\nendTable [[a]=[b]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<table a=\"b\"><tr c=\"d\"><th e=\"f\" scope=\"col\"><span g=\"h\">cell1</span></th><td i=\"j\"><span k=\"l\">cell2</span></td></tr></table><table a=\"b\"><tr c=\"d\"><th e=\"f\" scope=\"col\"><span g=\"h\">cell1</span></th><td i=\"j\"><span k=\"l\">cell2</span></td></tr></table>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)\n(% c=\"d\" %)|=(% e=\"f\" %)(% g=\"h\" %)cell1|(% i=\"j\" %)(% k=\"l\" %)cell2\n\n(% a=\"b\" %)\n(% c=\"d\" %)|=(% e=\"f\" %)(% g=\"h\" %)cell1|(% i=\"j\" %)(% k=\"l\" %)cell2\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<table a=\"b\"><tr c=\"d\"><th e=\"f\" scope=\"col\"><span g=\"h\">cell1</span></th><td i=\"j\"><span k=\"l\">cell2</span></td></tr></table><table a=\"b\"><tr c=\"d\"><th e=\"f\" scope=\"col\"><span g=\"h\">cell1</span></th><td i=\"j\"><span k=\"l\">cell2</span></td></tr></table>", ".#---------------------------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.#---------------------------------------------------------------------------------------------------------\n(% param=\"value\" %)\n{{{abc}}}\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nonVerbatim [abc] [false] [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<pre param=\"value\">abc</pre>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n{{{abc}}}\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><pre param=\"value\">abc</pre></html>\n", ".#---------------------------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.#---------------------------------------------------------------------------------------------------------\n(% param=\"value\" %)\n(% param2=\"value2\" %){{{abc}}}\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph [[param]=[value]]\nbeginFormat [NONE] [[param2]=[value2]]\nonVerbatim [abc] [true]\nendFormat [NONE] [[param2]=[value2]]\nendParagraph [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p param=\"value\"><span param2=\"value2\"><tt class=\"wikimodel-verbatim\">abc</tt></span></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n(% param2=\"value2\" %){{{abc}}}\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p param=\"value\"><span param2=\"value2\"><tt class=\"wikimodel-verbatim\">abc</tt></span></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n[[image:my.png||param1=\"value1\" param2=\"value2\"]]\n[[image:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonImage [Typed = [false] Type = [attach] Reference = [my.png]] [false] [Imy.png] [[param1]=[value1][param2]=[value2]]\nonNewLine\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false] [ISpace.ExistingPage40my.png]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><img src=\"imageurl\" param1=\"value1\" param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><br/><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|my.png--><img src=\"imageurl\" param1=\"value1\" param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><!--stopimage--><br/><!--startimage:false|-|attach|-|Space.ExistingPage@my.png--><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[image:my.png||param1=\"value1\" param2=\"value2\"]]\n[[image:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|my.png--><img src=\"imageurl\" param1=\"value1\" param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><!--stopimage--><br/><!--startimage:false|-|attach|-|Space.ExistingPage@my.png--><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>", ".#-----------------------------------------------------\n.inputexpect|xwiki/2.0\n.# Verify support for the figure caption syntax with nested link and list.\n.#-----------------------------------------------------\n[[Image **Caption**>>image:my.png||param1=\"value1\" param2=\"value2\"]]\n\n[[Caption\n\n* With\n* nested\n* list ~[~[and link~>~>https://xwiki.org~]~] and ~~~[~~~[fake link~]~].>>image:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginFigure [[class]=[image]]\nonImage [Typed = [false] Type = [attach] Reference = [my.png]] [false] [Imy.png] [[param1]=[value1][param2]=[value2]]\nbeginFigureCaption\nbeginParagraph\nonWord [Image]\nonSpace\nbeginFormat [BOLD]\nonWord [Caption]\nendFormat [BOLD]\nendParagraph\nendFigureCaption\nendFigure [[class]=[image]]\nbeginFigure [[class]=[image]]\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false] [ISpace.ExistingPage40my.png]\nbeginFigureCaption\nbeginParagraph\nonWord [Caption]\nendParagraph\nbeginList [BULLETED]\nbeginListItem\nonWord [With]\nendListItem\nbeginListItem\nonWord [nested]\nendListItem\nbeginListItem\nonWord [list]\nonSpace\nbeginLink [Typed = [false] Type = [url] Reference = [https://xwiki.org]] [false]\nonWord [and]\nonSpace\nonWord [link]\nendLink [Typed = [false] Type = [url] Reference = [https://xwiki.org]] [false]\nonSpace\nonWord [and]\nonSpace\nonSpecialSymbol [[]\nonSpecialSymbol [[]\nonWord [fake]\nonSpace\nonWord [link]\nonSpecialSymbol []]\nonSpecialSymbol []]\nonSpecialSymbol [.]\nendListItem\nendList [BULLETED]\nendFigureCaption\nendFigure [[class]=[image]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<img src=\"imageurl\" param1=\"value1\" param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><div class=\"figcaption\"><p>Image <strong>Caption</strong></p></div><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><div class=\"figcaption\"><p>Caption</p><ul><li>With</li><li>nested</li><li>list <span class=\"wikiexternallink\"><a href=\"https://xwiki.org\">and link</a></span> and [[fake link]].</li></ul></div>\n.#-----------------------------------------------------\n.expect|html/5.0\n.#-----------------------------------------------------\n<figure class=\"image\"><img src=\"imageurl\" param1=\"value1\" param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><figcaption><p>Image <strong>Caption</strong></p></figcaption></figure><figure class=\"image\"><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><figcaption><p>Caption</p><ul><li>With</li><li>nested</li><li>list <span class=\"wikiexternallink\"><a href=\"https://xwiki.org\">and link</a></span> and [[fake link]].</li></ul></figcaption></figure>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Verify that Query String is correctly taken into\n.# account, including when there are parameters.\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png?param1=value1]] [false] [ISpace.ExistingPage40my.png3Fparam13Dvalue1] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><img src=\"imageurl\" param2=\"value2\" id=\"ISpace.ExistingPage40my.png3Fparam13Dvalue1\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png?param1=value1\"/></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png?param1=value1--><img src=\"imageurl\" param2=\"value2\" id=\"ISpace.ExistingPage40my.png3Fparam13Dvalue1\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png?param1=value1\"/><!--stopimage--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png?param1=value1--><img src=\"imageurl\" param2=\"value2\" id=\"ISpace.ExistingPage40my.png3Fparam13Dvalue1\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png?param1=value1\"/><!--stopimage--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.1\n.# Verify that Query String is correctly taken into\n.# account, including when there are parameters.\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png||queryString=\"param1=value1\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png] Parameters = [[queryString] = [param1=value1]]] [false] [ISpace.ExistingPage40my.png] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><img src=\"imageurl?param1=value1\" param2=\"value2\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png|-|queryString=\"param1=value1\"--><img src=\"imageurl?param1=value1\" param2=\"value2\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.1\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png||queryString=\"param1=value1\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png|-|queryString=\"param1=value1\"--><img src=\"imageurl?param1=value1\" param2=\"value2\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>", ".#--------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.# Verify we can put a full image declaration (with params) while creating a link to it.\n.#--------------------------------------------------------------------------------------\n[[[[image:attach.png||height=\"100\" width=\"100\"]]>>http://xwiki.org||param=value]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [url] Reference = [http://xwiki.org]] [false] [[param]=[value]]\nonImage [Typed = [false] Type = [attach] Reference = [attach.png]] [false] [Iattach.png] [[height]=[100][width]=[100]]\nendLink [Typed = [false] Type = [url] Reference = [http://xwiki.org]] [false] [[param]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiexternallink\"><a param=\"value\" href=\"http://xwiki.org\"><img src=\"imageurl\" height=\"100\" width=\"100\" id=\"Iattach.png\" class=\"wikigeneratedid\" alt=\"attach.png\"/></a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|http://xwiki.org--><span class=\"wikiexternallink\"><a param=\"value\" href=\"http://xwiki.org\"><!--startimage:false|-|attach|-|attach.png--><img src=\"imageurl\" height=\"100\" width=\"100\" id=\"Iattach.png\" class=\"wikigeneratedid\" alt=\"attach.png\"/><!--stopimage--></a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[~[~[image:attach.png~|~|height=\"100\" width=\"100\"~]~]>>http://xwiki.org||param=\"value\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|http://xwiki.org--><span class=\"wikiexternallink\"><a param=\"value\" href=\"http://xwiki.org\"><!--startimage:false|-|attach|-|attach.png--><img src=\"imageurl\" height=\"100\" width=\"100\" id=\"Iattach.png\" class=\"wikigeneratedid\" alt=\"attach.png\"/><!--stopimage--></a></span><!--stopwikilink--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n[[attach:my.png||param1=\"value1\" param2=\"value2\"]]\n[[attach:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [true] Type = [attach] Reference = [my.png]] [false] [[param1]=[value1][param2]=[value2]]\nendLink [Typed = [true] Type = [attach] Reference = [my.png]] [false] [[param1]=[value1][param2]=[value2]]\nonNewLine\nbeginLink [Typed = [true] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false]\nendLink [Typed = [true] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiattachmentlink\"><a param1=\"value1\" param2=\"value2\" href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">my.png</span></a></span><br/><span class=\"wikiattachmentlink\"><a href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage@my.png</span></a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:true|-|attach|-|my.png--><span class=\"wikiattachmentlink\"><a param1=\"value1\" param2=\"value2\" href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">my.png</span></a></span><!--stopwikilink--><br/><!--startwikilink:true|-|attach|-|Space.ExistingPage@my.png--><span class=\"wikiattachmentlink\"><a href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage@my.png</span></a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[attach:my.png||param1=\"value1\" param2=\"value2\"]]\n[[attach:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:true|-|attach|-|my.png--><span class=\"wikiattachmentlink\"><a param1=\"value1\" param2=\"value2\" href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">my.png</span></a></span><!--stopwikilink--><br/><!--startwikilink:true|-|attach|-|Space.ExistingPage@my.png--><span class=\"wikiattachmentlink\"><a href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage@my.png</span></a></span><!--stopwikilink--></p>", ".#----------------------------------------------------------------------------------------------\n.input|xhtml/1.0\n.# Verify that the XHTML parser can understand anchors without the special anchor comment format\n.# that the XHTML Renderer uses. Note that for now the HREF value is considered containing\n.# XWiki link syntax.\n.#----------------------------------------------------------------------------------------------\n<p><a href=\"http://reference\" param1=\"value1\">http://reference</a></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [true] Type = [url] Reference = [http://reference]] [false] [[param1]=[value1]]\nonWord [http]\nonSpecialSymbol [:]\nonSpecialSymbol [/]\nonSpecialSymbol [/]\nonWord [reference]\nendLink [Typed = [true] Type = [url] Reference = [http://reference]] [false] [[param1]=[value1]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[http:~~/~~/reference>>http://reference||param1=\"value1\"]]\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiexternallink\"><a param1=\"value1\" href=\"http://reference\">http://reference</a></span></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Verify that Anchors and Query String are correctly\n.# taken into account, including when there are\n.# parameters.\n.#-----------------------------------------------------\n[[Space.ExistingPage#anchor?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xwiki/2.1\n.#-----------------------------------------------------\n[[Space.ExistingPage||queryString=\"param1=value1\" anchor=\"anchor\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage] Parameters = [[queryString] = [param1=value1], [anchor] = [anchor]]] [false] [[param2]=[value2]]\nendLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage] Parameters = [[queryString] = [param1=value1], [anchor] = [anchor]]] [false] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikilink\"><a param2=\"value2\" href=\"viewurl?param1=value1#anchor\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage|-|queryString=\"param1=value1\" anchor=\"anchor\"--><span class=\"wikilink\"><a param2=\"value2\" href=\"viewurl?param1=value1#anchor\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[Space.ExistingPage#anchor?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|xwiki/2.1\n.#-----------------------------------------------------\n[[Space.ExistingPage||queryString=\"param1=value1\" anchor=\"anchor\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage|-|queryString=\"param1=value1\" anchor=\"anchor\"--><span class=\"wikilink\"><a param2=\"value2\" href=\"viewurl?param1=value1#anchor\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n[[Space.ExistingPage||param1=value1 param2=value2]]\n[[label>>Space.UnknownPage||param=\"value\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage]] [false] [[param1]=[value1][param2]=[value2]]\nendLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage]] [false] [[param1]=[value1][param2]=[value2]]\nonNewLine\nbeginLink [Typed = [false] Type = [doc] Reference = [Space.UnknownPage]] [false] [[param]=[value]]\nonWord [label]\nendLink [Typed = [false] Type = [doc] Reference = [Space.UnknownPage]] [false] [[param]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikilink\"><a param1=\"value1\" param2=\"value2\" href=\"viewurl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><br/><span class=\"wikicreatelink\"><a param=\"value\" href=\"editurl\">label</a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage--><span class=\"wikilink\"><a param1=\"value1\" param2=\"value2\" href=\"viewurl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--><br/><!--startwikilink:false|-|doc|-|Space.UnknownPage--><span class=\"wikicreatelink\"><a param=\"value\" href=\"editurl\">label</a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[Space.ExistingPage||param1=\"value1\" param2=\"value2\"]]\n[[label>>Space.UnknownPage||param=\"value\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage--><span class=\"wikilink\"><a param1=\"value1\" param2=\"value2\" href=\"viewurl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--><br/><!--startwikilink:false|-|doc|-|Space.UnknownPage--><span class=\"wikicreatelink\"><a param=\"value\" href=\"editurl\">label</a></span><!--stopwikilink--></p>", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Renderer that generates XHTML from a XDOM resulting from the parsing of text containing HTML mixed with wiki syntax.\n *\n * @version $Id$\n * @since 1.8.3\n */\n@Component\n@Named(\"xhtmlmacro/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroXHTMLRenderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new XHTMLChainingRenderer(this.linkRenderer, this.imageRenderer, getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html.renderers.annotatedhtml5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.macro.html.AbstractHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.html5.AnnotatedHTML5ChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Renderer that generates Annotated HTML5 from a XDOM resulting from the parsing of text containing HTML mixed with\n * wiki syntax.\n *\n * @version $Id$\n * @since 11.4RC1\n */\n@Component\n@Named(\"htmlmacro+annotatedhtml/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroAnnotatedHTML5Renderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new AnnotatedHTML5ChainingRenderer(this.linkRenderer, this.imageRenderer, getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html.renderers.annotatedxhtml;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.macro.html.AbstractHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.AnnotatedXHTMLChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Renderer that generates Annotated XHTML from a XDOM resulting from the parsing of text containing HTML mixed with\n * wiki syntax.\n *\n * @version $Id$\n * @since 11.4RC1\n */\n@Component\n@Named(\"htmlmacro+annotatedxhtml/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroAnnotatedXHTMLRenderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new AnnotatedXHTMLChainingRenderer(this.linkRenderer, this.imageRenderer, getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html.renderers.html5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.macro.html.AbstractHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.html5.HTML5ChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Renderer that generates HTML5 from a XDOM resulting from the parsing of text containing HTML mixed with\n * wiki syntax.\n *\n * @version $Id$\n * @since 11.4RC1\n */\n@Component\n@Named(\"htmlmacro+html/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroHTML5Renderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new HTML5ChainingRenderer(this.linkRenderer, this.imageRenderer, getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLMetaDataRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\n\n/**\n * Convert listener events to annotated HTML5. See {@link AnnotatedHTML5Renderer} for more details on what Annotated\n * HTML5 is.\n *\n * @version $Id$\n * @since 6.4M3\n */\npublic class AnnotatedHTML5ChainingRenderer extends HTML5ChainingRenderer\n{\n    /**\n     * Renders a Macro definition into Annotated XHTML.\n     */\n    private final XHTMLMacroRenderer macroRenderer;\n\n    /**\n     * Renders metadata into Annotated XHTML.\n     */\n    private final XHTMLMetaDataRenderer metaDataRenderer;\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because link\n     *            rendering depends on how the underlying system wants to handle it. For example for XWiki we check if\n     *            the document exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable because\n     *            image rendering depends on how the underlying system wants to handle it. For example for XWiki we\n     *            check if the image exists as a document attachments, we get its URL, etc.\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public AnnotatedHTML5ChainingRenderer(XHTMLLinkRenderer linkRenderer,\n            XHTMLImageRenderer imageRenderer, ListenerChain listenerChain)\n    {\n        super(linkRenderer, imageRenderer, listenerChain);\n\n        this.macroRenderer = new XHTMLMacroRenderer();\n\n        this.metaDataRenderer = new XHTMLMetaDataRenderer();\n    }\n\n    @Override\n    public void onMacro(String id, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.render(getXHTMLWikiPrinter(), id, parameters, content);\n    }\n\n    @Override\n    public void beginMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.beginRender(getXHTMLWikiPrinter(), name, parameters, content);\n    }\n\n    @Override\n    public void endMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.endRender(getXHTMLWikiPrinter());\n    }\n\n    /**\n     * {@inheritDoc}\n     * @since 14.0RC1\n     */\n    @Override\n    public void beginMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.beginRender(getXHTMLWikiPrinter(), getBlockState().isInLine(), metadata);\n    }\n\n    /**\n     * {@inheritDoc}\n     * @since 14.0RC1\n     */\n    @Override\n    public void endMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.endRender(getXHTMLWikiPrinter(), getBlockState().isInLine());\n    }\n\n    /**\n     * Start of a figure caption.\n     *\n     * Only rendered as &lt;figcaption&gt; tag when the parent event is a figure event.\n     *\n     * @param parameters a generic list of parameters for the figure\n     * @since 14.0RC1\n     */\n    @Override\n    public void beginFigureCaption(Map<String, String> parameters)\n    {\n        if (this.getBlockState().getParentEvent() == BlockStateChainingListener.Event.FIGURE) {\n            super.beginFigureCaption(parameters);\n        }\n    }\n\n    /**\n     * End of a figure caption.\n     *\n     * Only rendered as &lt;/figcaption&gt;-tag when the parent event is a figure event.\n     *\n     * @param parameters a generic list of parameters for the figure\n     * @since 14.0RC1\n     */\n    @Override\n    public void endFigureCaption(Map<String, String> parameters)\n    {\n        if (this.getBlockState().getParentEvent() == BlockStateChainingListener.Event.FIGURE) {\n            super.endFigureCaption(parameters);\n        }\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Generates Annotated HTML5 (ie HTML5 containing metadata information, for example macro definition or\n * link definition) from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n * The annotations allow initial source content to be fully reconstructed from the generated HTML5. This is required\n * for example for doing round tripping between wiki syntax and HTML5 syntax in the WYSIWYG editor.\n *\n * @version $Id$\n * @since 6.4M3\n */\n@Component\n@Named(\"annotatedhtml/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class AnnotatedHTML5Renderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into annotated XHTML. This is done so that it's pluggable because link rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the document exists, we get\n     * the document URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into annotated XHTML. This is done so that it's pluggable because image rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the image exists as a\n     * document attachments, we get its URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new AnnotatedHTML5ChainingRenderer(this.linkRenderer, this.imageRenderer, chain));\n    }\n}\n", "<p><span a=\"b\" class=\"monospace\">monospace</span></p>", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\n\n/**\n * Convert listener events to annotated XHTML. See {@link AnnotatedXHTMLChainingRenderer} for more details on\n * what Annotated XHTML is.\n *\n * @version $Id$\n * @since 2.0M2\n */\npublic class AnnotatedXHTMLChainingRenderer extends XHTMLChainingRenderer\n{\n    /**\n     * Renders a Macro definition into Annotated XHTML.\n     */\n    private final XHTMLMacroRenderer macroRenderer;\n\n    /**\n     * Renders metadata into Annotated XHTML.\n     */\n    private final XHTMLMetaDataRenderer metaDataRenderer;\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because link\n     *            rendering depends on how the underlying system wants to handle it. For example for XWiki we check if\n     *            the document exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable because\n     *            image rendering depends on how the underlying system wants to handle it. For example for XWiki we\n     *            check if the image exists as a document attachments, we get its URL, etc.\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public AnnotatedXHTMLChainingRenderer(XHTMLLinkRenderer linkRenderer,\n        XHTMLImageRenderer imageRenderer, ListenerChain listenerChain)\n    {\n        super(linkRenderer, imageRenderer, listenerChain);\n\n        this.macroRenderer = new XHTMLMacroRenderer();\n\n        this.metaDataRenderer = new XHTMLMetaDataRenderer();\n    }\n\n    @Override\n    public void onMacro(String id, Map<String, String> parameters, String content, boolean inline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.render(getXHTMLWikiPrinter(), id, parameters, content);\n    }\n\n    @Override\n    public void beginMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.beginRender(getXHTMLWikiPrinter(), name, parameters, content);\n    }\n\n    @Override\n    public void endMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.endRender(getXHTMLWikiPrinter());\n    }\n\n    @Override\n    public void beginMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.beginRender(getXHTMLWikiPrinter(), getBlockState().isInLine(), metadata);\n    }\n\n    @Override\n    public void endMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.endRender(getXHTMLWikiPrinter(), getBlockState().isInLine());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Generates Annotated XHTML (ie XHTML containing metadata information, for example macro definition or\n * link definition) from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n * The annotations allow initial source content to be fully reconstructed from the generated XHTML. This is required\n * for example for doing round tripping between wiki syntax and XHTML syntax in the WYSIWYG editor.\n *\n * @version $Id$\n * @since 2.0M3\n */\n@Component\n@Named(\"annotatedxhtml/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class AnnotatedXHTMLRenderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into annotated XHTML. This is done so that it's pluggable because link rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the document exists, we get\n     * the document URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into annotated XHTML. This is done so that it's pluggable because image rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the image exists as a\n     * document attachments, we get its URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new AnnotatedXHTMLChainingRenderer(this.linkRenderer, this.imageRenderer, chain));\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.Format;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\n\n/**\n * Convert listener events to HTML5.\n *\n * @version $Id$\n * @since 6.4M3\n */\npublic class HTML5ChainingRenderer extends XHTMLChainingRenderer\n{\n    private static final String ELEM_SPAN = \"span\";\n\n    private static final String ELEM_PRE = \"pre\";\n\n    private static final String PROP_CLASS = \"class\";\n\n    private static final String FIGURE_TAG = \"figure\";\n\n    private static final String FIGURE_CAPTION_TAG = \"figcaption\";\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because link\n     * rendering depends on how the underlying system wants to handle it. For example for XWiki we check if the document\n     * exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable because\n     * image rendering depends on how the underlying system wants to handle it. For example for XWiki we check if the\n     * image exists as a document attachments, we get its URL, etc.\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public HTML5ChainingRenderer(XHTMLLinkRenderer linkRenderer,\n            XHTMLImageRenderer imageRenderer,\n            ListenerChain listenerChain)\n    {\n        super(linkRenderer, imageRenderer, listenerChain);\n    }\n\n    @Override\n    public void beginFormat(Format format, Map<String, String> parameters)\n    {\n        // Right now, the only difference with the super class is about the \"monospace\" format\n        if (format == Format.MONOSPACE) {\n            Map<String, String> attributes = new HashMap<>();\n            attributes.putAll(parameters);\n            String cssClass = \"monospace\";\n            // The element may already have a class\n            if (attributes.containsKey(PROP_CLASS)) {\n                cssClass = String.format(\"%s %s\", cssClass, attributes.get(PROP_CLASS));\n            }\n            attributes.put(PROP_CLASS, cssClass);\n            getXHTMLWikiPrinter().printXMLStartElement(ELEM_SPAN, attributes);\n        } else {\n            // Call the super class\n            super.beginFormat(format, parameters);\n        }\n\n    }\n\n    @Override\n    public void endFormat(Format format, Map<String, String> parameters)\n    {\n        if (!parameters.isEmpty()) {\n            getXHTMLWikiPrinter().printXMLEndElement(ELEM_SPAN);\n        }\n        // Right now, the only difference with the super class is about the \"monospace\" format\n        if (format == Format.MONOSPACE) {\n            if (parameters.isEmpty()) {\n                // if the parameters are not empty, the span element has already been closed\n                getXHTMLWikiPrinter().printXMLEndElement(ELEM_SPAN);\n            }\n        } else {\n            // Call the super class, with an empty parameters map to avoid closing the span element twice\n            super.endFormat(format, new HashMap<String, String>());\n        }\n    }\n\n    @Override\n    public void onVerbatim(String content, boolean inline, Map<String, String> parameters)\n    {\n        if (inline) {\n            // Note: We generate a span element rather than a pre element since pre elements cannot be located inside\n            // paragraphs for example.\n            // The class is what is expected by wikimodel to understand the span as meaning a verbatim and not a\n            // Monospace element.\n            getXHTMLWikiPrinter().printXMLStartElement(ELEM_SPAN,\n                new String[][] { { PROP_CLASS, \"wikimodel-verbatim\" } });\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(ELEM_SPAN);\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(ELEM_PRE, parameters);\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(ELEM_PRE);\n        }\n    }\n\n    @Override\n    public void beginFigure(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(FIGURE_TAG, parameters);\n    }\n\n    @Override\n    public void beginFigureCaption(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(FIGURE_CAPTION_TAG, parameters);\n    }\n\n    @Override\n    public void endFigure(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(FIGURE_TAG);\n    }\n\n    @Override\n    public void endFigureCaption(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(FIGURE_CAPTION_TAG);\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Generates HTML5 from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n *\n * @version $Id$\n * @since 6.4M3\n */\n@Component\n@Named(\"html/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTML5Renderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new HTML5ChainingRenderer(this.linkRenderer, this.imageRenderer, chain));\n    }\n}\n\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.html5;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.internal.renderer.html5.HTML5ChainingRenderer;\nimport org.xwiki.rendering.listener.Format;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.renderer.printer.DefaultWikiPrinter;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.mock;\n\n/**\n * Test class for {@link org.xwiki.rendering.internal.renderer.html5.HTML5ChainingRenderer}.\n *  \n * @version $Id$\n * @since 7.1M1\n */\npublic class HTML5ChainingRendererTest\n{\n    private XHTMLLinkRenderer linkRenderer;\n    \n    private XHTMLImageRenderer imageRenderer;\n    \n    private ListenerChain listenerChain;\n    \n    private HTML5ChainingRenderer chainingRenderer;\n    \n    private DefaultWikiPrinter printer;\n\n    @Before\n    public void setUp() throws Exception\n    {\n        linkRenderer = mock(XHTMLLinkRenderer.class);\n        imageRenderer = mock(XHTMLImageRenderer.class);\n        listenerChain = new ListenerChain();\n        chainingRenderer = new HTML5ChainingRenderer(linkRenderer, imageRenderer, listenerChain);\n        printer = new DefaultWikiPrinter();\n        chainingRenderer.setPrinter(printer);\n    }\n    \n    @Test\n    public void testWithoutMonospace() throws Exception\n    {   \n        Map<String, String> parameters = new HashMap<>();\n        chainingRenderer.beginFormat(Format.BOLD, parameters);\n        chainingRenderer.onWord(\"hello\");\n        chainingRenderer.endFormat(Format.BOLD, parameters);\n        assertEquals(\"<strong>hello</strong>\", printer.toString());\n    }\n\n    @Test\n    public void testWithMonospace() throws Exception\n    {\n        Map<String, String> parameters = new HashMap<>();\n        chainingRenderer.beginFormat(Format.MONOSPACE, parameters);\n        chainingRenderer.onWord(\"hello\");\n        chainingRenderer.endFormat(Format.MONOSPACE, parameters);\n        assertEquals(\"<span class=\\\"monospace\\\">hello</span>\", printer.toString());\n    }\n\n    @Test\n    public void testWithMonospaceAndParameters() throws Exception\n    {\n        Map<String, String> parameters = new HashMap<>();\n        parameters.put(\"class\", \"myClass\");\n        chainingRenderer.beginFormat(Format.MONOSPACE, parameters);\n        chainingRenderer.onWord(\"hello\");\n        chainingRenderer.endFormat(Format.MONOSPACE, parameters);\n        assertEquals(\"<span class=\\\"monospace myClass\\\">hello</span>\", printer.toString());\n    }\n    \n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.parser.xhtml.wikimodel;\n\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.xwiki.rendering.internal.parser.wikimodel.DefaultXWikiGeneratorListener;\nimport org.xwiki.rendering.listener.Listener;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.reference.ResourceReference;\nimport org.xwiki.rendering.listener.reference.ResourceType;\nimport org.xwiki.rendering.parser.ResourceReferenceParser;\nimport org.xwiki.rendering.parser.StreamParser;\nimport org.xwiki.rendering.renderer.PrintRendererFactory;\nimport org.xwiki.rendering.syntax.Syntax;\nimport org.xwiki.rendering.util.IdGenerator;\nimport org.xwiki.rendering.wikimodel.WikiFormat;\nimport org.xwiki.rendering.wikimodel.WikiParameter;\nimport org.xwiki.rendering.wikimodel.WikiParameters;\nimport org.xwiki.rendering.wikimodel.WikiReference;\n\n/**\n * WikiModel listener bridge for the XHTML Syntax.\n *\n * @version $Id$\n * @since 2.5RC1\n */\npublic class XHTMLXWikiGeneratorListener extends DefaultXWikiGeneratorListener\n{\n    /**\n     * Defines the class to use when an element represents a MetaData block.\n     *\n     * @since 10.9\n     */\n    public static final String METADATA_CONTAINER_CLASS = \"xwiki-metadata-container\";\n\n    /**\n     * Defines the prefix to use for attribute which contain a metadata.\n     *\n     * @since 10.9\n     */\n    public static final String METADATA_ATTRIBUTE_PREFIX = \"data-xwiki-\";\n\n    /**\n     * URL matching pattern.\n     */\n    private static final Pattern URL_SCHEME_PATTERN = Pattern.compile(\"[a-zA-Z0-9+.-]*://\");\n\n    /**\n     * Prefix for mailto-links.\n     */\n    private static final String MAILTO_PREFIX = \"mailto:\";\n\n    private static final String CLASS_ATTRIBUTE = \"class\";\n\n    /**\n     * @param parser the parser to use to parse link labels\n     * @param listener the XWiki listener to which to forward WikiModel events\n     * @param linkReferenceParser the parser to parse link references\n     * @param imageReferenceParser the parser to parse image references\n     * @param plainRendererFactory used to generate header ids\n     * @param idGenerator used to generate header ids\n     * @param syntax the syntax of the parsed source\n     * @since 3.0M3\n     */\n    public XHTMLXWikiGeneratorListener(StreamParser parser, Listener listener,\n        ResourceReferenceParser linkReferenceParser, ResourceReferenceParser imageReferenceParser,\n        PrintRendererFactory plainRendererFactory, IdGenerator idGenerator, Syntax syntax)\n    {\n        super(parser, listener, linkReferenceParser, imageReferenceParser, plainRendererFactory, idGenerator, syntax);\n    }\n\n    @Override\n    public void onReference(WikiReference reference)\n    {\n        // We need to handle 2 cases:\n        // - when the passed reference is an instance of XWikiWikiReference, i.e. when a XHTML comment defining a XWiki\n        // link has been specified and the XHTML parser has recognized it and thus is passing a typed reference to us.\n        // - when the passed reference is not an instance of XWikiWikiReference which will happen if there's no special\n        // XHTML comment defining a XWiki link. In this case, we need to figure out what how to consider the passed\n        // reference.\n\n        ResourceReference resourceReference;\n        boolean isFreeStanding;\n        if (!(reference instanceof XWikiWikiReference)) {\n            resourceReference = computeResourceReference(reference.getLink());\n            isFreeStanding = false;\n        } else {\n            XWikiWikiReference xwikiReference = (XWikiWikiReference) reference;\n            resourceReference = xwikiReference.getReference();\n            isFreeStanding = xwikiReference.isFreeStanding();\n\n            flushFormat();\n        }\n\n        // Consider query string and anchor as ResourceReference parameters and the rest as generic parameters\n        Pair<Map<String, String>, Map<String, String>> parameters =\n            convertAndSeparateParameters(reference.getParameters());\n\n        resourceReference.setParameters(parameters.getLeft());\n        onReference(resourceReference, reference.getLabel(), isFreeStanding, parameters.getRight(), false);\n    }\n\n    @Override\n    public void onImage(WikiReference reference)\n    {\n        // We need to handle 2 cases:\n        // - when the passed reference is an instance of XWikiWikiReference, i.e. when a XHTML comment defining a XWiki\n        // image has been specified\n        // - when the passed reference is not an instance of XWikiWikiReference which will happen if there's no special\n        // XHTML comment defining a XWiki image\n        if (!(reference instanceof XWikiWikiReference)) {\n            super.onImage(reference);\n        } else {\n            XWikiWikiReference xwikiReference = (XWikiWikiReference) reference;\n            ResourceReference resourceReference = xwikiReference.getReference();\n\n            flushFormat();\n\n            onImage(resourceReference, xwikiReference.isFreeStanding(),\n                convertParameters(xwikiReference.getParameters()));\n        }\n    }\n\n    /**\n     * Recognize the passed reference and figure out what type of link it should be:\n     * <ul>\n     *   <li>UC1: the reference points to a valid URL, we return a reference of type \"url\",\n     *       e.g. {@code http://server/path/reference#anchor}</li>\n     *   <li>UC2: the reference is a mailto: link, we return a reference of type \"mailto\",\n     *       e.g., {@code mailto:user@example.com}</li>\n     *   <li>UC3: the reference is not a valid URL, we return a reference of type \"path\",\n     *       e.g. {@code path/reference#anchor}</li>\n     * </ul>\n     *\n     * @param rawReference the full reference (e.g. \"/some/path/something#other\")\n     * @return the properly typed {@link ResourceReference} matching the use cases\n     */\n    private ResourceReference computeResourceReference(String rawReference)\n    {\n        ResourceReference reference;\n\n        // Do we have a valid URL?\n        Matcher matcher = URL_SCHEME_PATTERN.matcher(rawReference);\n        if (matcher.lookingAt()) {\n            // We have UC1\n            reference = new ResourceReference(rawReference, ResourceType.URL);\n        } else if (rawReference.startsWith(MAILTO_PREFIX)) {\n            // We have UC2\n            reference = new ResourceReference(rawReference.substring(MAILTO_PREFIX.length()), ResourceType.MAILTO);\n        } else {\n            // We have UC3\n            reference = new ResourceReference(rawReference, ResourceType.PATH);\n        }\n\n        return reference;\n    }\n\n    static boolean isMetaDataElement(WikiParameters parameters)\n    {\n        return parameters.getParameter(CLASS_ATTRIBUTE) != null\n            && METADATA_CONTAINER_CLASS.equals(parameters.getParameter(CLASS_ATTRIBUTE).getValue());\n    }\n\n    static MetaData createMetaData(WikiParameters parameters)\n    {\n        MetaData metaData = new MetaData();\n\n        int prefixSize = METADATA_ATTRIBUTE_PREFIX.length();\n        for (WikiParameter parameter : parameters) {\n            if (parameter.getKey().startsWith(METADATA_ATTRIBUTE_PREFIX)) {\n                String metaDataKey = parameter.getKey().substring(prefixSize).toLowerCase();\n                metaData.addMetaData(metaDataKey, parameter.getValue());\n            }\n        }\n\n        return metaData;\n    }\n\n    private static WikiParameters cleanParametersFromMetadata(WikiParameters parameters)\n    {\n        WikiParameters wikiParameters = new WikiParameters();\n\n        for (WikiParameter parameter : parameters) {\n            boolean acceptParameter = !(parameter.getKey().startsWith(METADATA_ATTRIBUTE_PREFIX)\n                || (\n                    parameter.getKey().equals(CLASS_ATTRIBUTE) && parameter.getValue().equals(METADATA_CONTAINER_CLASS)\n            ));\n            if (acceptParameter) {\n                wikiParameters = wikiParameters.addParameter(parameter.getKey(), parameter.getValue());\n            }\n        }\n\n        return wikiParameters;\n    }\n\n    @Override\n    protected void beginGroup(WikiParameters parameters)\n    {\n        if (isMetaDataElement(parameters)) {\n            MetaData metaData = createMetaData(parameters);\n            getListener().beginMetaData(metaData);\n\n            WikiParameters cleanParameters = cleanParametersFromMetadata(parameters);\n            if (cleanParameters.getSize() > 0) {\n                super.beginGroup(cleanParameters);\n            }\n        } else {\n            super.beginGroup(parameters);\n        }\n    }\n\n    @Override\n    protected void endGroup(WikiParameters parameters)\n    {\n        if (isMetaDataElement(parameters)) {\n            MetaData metaData = createMetaData(parameters);\n            getListener().endMetaData(metaData);\n\n            WikiParameters cleanParameters = cleanParametersFromMetadata(parameters);\n            if (cleanParameters.getSize() > 0) {\n                super.endGroup(cleanParameters);\n            }\n        } else {\n            super.endGroup(parameters);\n        }\n    }\n\n    @Override\n    public void beginFormat(WikiFormat format)\n    {\n        WikiParameters wikiParameters = new WikiParameters(format.getParams());\n\n        if (isMetaDataElement(wikiParameters)) {\n            getListener().beginMetaData(createMetaData(wikiParameters));\n            WikiParameters cleanParameters = cleanParametersFromMetadata(wikiParameters);\n            if (cleanParameters.getSize() > 0 || !format.getStyles().isEmpty()) {\n                WikiFormat newFormat = format;\n                if (wikiParameters.getSize() != cleanParameters.getSize()) {\n                    newFormat = format.setParameters(cleanParameters.toList());\n                }\n\n                super.beginFormat(newFormat);\n            }\n        } else {\n            super.beginFormat(format);\n        }\n    }\n\n    @Override\n    public void endFormat(WikiFormat format)\n    {\n        WikiParameters wikiParameters = new WikiParameters(format.getParams());\n\n        if (isMetaDataElement(wikiParameters)) {\n            getListener().endMetaData(createMetaData(wikiParameters));\n\n            WikiParameters cleanParameters = cleanParametersFromMetadata(wikiParameters);\n            if (cleanParameters.getSize() > 0 || !format.getStyles().isEmpty()) {\n                WikiFormat newFormat = format;\n                if (wikiParameters.getSize() != cleanParameters.getSize()) {\n                    newFormat = format.setParameters(cleanParameters.toList());\n                }\n\n                super.endFormat(newFormat);\n            }\n        } else {\n            super.endFormat(format);\n        }\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.Format;\nimport org.xwiki.rendering.listener.HeaderLevel;\nimport org.xwiki.rendering.listener.ListType;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener.Event;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.listener.reference.ResourceReference;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.rendering.renderer.printer.WikiPrinter;\nimport org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter;\nimport org.xwiki.rendering.syntax.Syntax;\nimport org.xwiki.rendering.syntax.SyntaxType;\nimport org.xwiki.xml.html.HTMLConstants;\n\n/**\n * Convert listener events to XHTML.\n *\n * @version $Id$\n * @since 1.8RC1\n */\npublic class XHTMLChainingRenderer extends AbstractChainingPrintRenderer\n{\n    /**\n     * Class attribute value that indicates if the header was generated by a macro.\n     */\n    public static final String GENERATEDHEADERCLASS = \"wikigeneratedheader\";\n\n    /**\n     * Class attribute value that indicates if the header id attribute was generated automatically or if it was the user\n     * who specified an id.\n     */\n    public static final String GENERATEDIDCLASS = \"wikigeneratedid\";\n\n    private XHTMLLinkRenderer linkRenderer;\n\n    private XHTMLImageRenderer imageRenderer;\n\n    private XHTMLWikiPrinter xhtmlWikiPrinter;\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because link\n     *            rendering depends on how the underlying system wants to handle it. For example for XWiki we check if\n     *            the document exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable because\n     *            image rendering depends on how the underlying system wants to handle it. For example for XWiki we\n     *            check if the image exists as a document attachments, we get its URL, etc.\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public XHTMLChainingRenderer(XHTMLLinkRenderer linkRenderer, XHTMLImageRenderer imageRenderer,\n        ListenerChain listenerChain)\n    {\n        setListenerChain(listenerChain);\n\n        this.linkRenderer = linkRenderer;\n        this.imageRenderer = imageRenderer;\n    }\n\n    // State\n\n    protected BlockStateChainingListener getBlockState()\n    {\n        return (BlockStateChainingListener) getListenerChain().getListener(BlockStateChainingListener.class);\n    }\n\n    protected EmptyBlockChainingListener getEmptyBlockState()\n    {\n        return (EmptyBlockChainingListener) getListenerChain().getListener(EmptyBlockChainingListener.class);\n    }\n\n    protected MetaDataStateChainingListener getMetaDataState()\n    {\n        return (MetaDataStateChainingListener) getListenerChain().getListener(MetaDataStateChainingListener.class);\n    }\n\n    // Printer\n\n    @Override\n    protected void pushPrinter(WikiPrinter wikiPrinter)\n    {\n        super.pushPrinter(wikiPrinter);\n        getXHTMLWikiPrinter().setWikiPrinter(getPrinter());\n    }\n\n    @Override\n    protected void popPrinter()\n    {\n        super.popPrinter();\n        getXHTMLWikiPrinter().setWikiPrinter(getPrinter());\n    }\n\n    protected XHTMLWikiPrinter getXHTMLWikiPrinter()\n    {\n        if (this.xhtmlWikiPrinter == null) {\n            this.xhtmlWikiPrinter = new XHTMLWikiPrinter(getPrinter());\n        }\n        return this.xhtmlWikiPrinter;\n    }\n\n    // Events\n\n    @Override\n    public void beginGroup(Map<String, String> parameters)\n    {\n        Map<String, String> clonedParameters = new LinkedHashMap<String, String>();\n        clonedParameters.putAll(parameters);\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"div\", clonedParameters);\n    }\n\n    @Override\n    public void endGroup(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"div\");\n    }\n\n    @Override\n    public void beginFormat(Format format, Map<String, String> parameters)\n    {\n        switch (format) {\n            case BOLD:\n                getXHTMLWikiPrinter().printXMLStartElement(\"strong\");\n                break;\n            case ITALIC:\n                getXHTMLWikiPrinter().printXMLStartElement(\"em\");\n                break;\n            case STRIKEDOUT:\n                getXHTMLWikiPrinter().printXMLStartElement(\"del\");\n                break;\n            case UNDERLINED:\n                getXHTMLWikiPrinter().printXMLStartElement(\"ins\");\n                break;\n            case SUPERSCRIPT:\n                getXHTMLWikiPrinter().printXMLStartElement(\"sup\");\n                break;\n            case SUBSCRIPT:\n                getXHTMLWikiPrinter().printXMLStartElement(\"sub\");\n                break;\n            case MONOSPACE:\n                getXHTMLWikiPrinter().printXMLStartElement(\"tt\");\n                break;\n            case NONE:\n                break;\n            // Unsupported format\n            default:\n                break;\n        }\n        if (!parameters.isEmpty()) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"span\", parameters);\n        }\n    }\n\n    @Override\n    public void endFormat(Format format, Map<String, String> parameters)\n    {\n        if (!parameters.isEmpty()) {\n            getXHTMLWikiPrinter().printXMLEndElement(\"span\");\n        }\n        switch (format) {\n            case BOLD:\n                getXHTMLWikiPrinter().printXMLEndElement(\"strong\");\n                break;\n            case ITALIC:\n                getXHTMLWikiPrinter().printXMLEndElement(\"em\");\n                break;\n            case STRIKEDOUT:\n                getXHTMLWikiPrinter().printXMLEndElement(\"del\");\n                break;\n            case UNDERLINED:\n                getXHTMLWikiPrinter().printXMLEndElement(\"ins\");\n                break;\n            case SUPERSCRIPT:\n                getXHTMLWikiPrinter().printXMLEndElement(\"sup\");\n                break;\n            case SUBSCRIPT:\n                getXHTMLWikiPrinter().printXMLEndElement(\"sub\");\n                break;\n            case MONOSPACE:\n                getXHTMLWikiPrinter().printXMLEndElement(\"tt\");\n                break;\n            case NONE:\n                break;\n            // Unsupported format\n            default:\n                break;\n        }\n    }\n\n    @Override\n    public void beginParagraph(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"p\", parameters);\n    }\n\n    @Override\n    public void endParagraph(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"p\");\n    }\n\n    @Override\n    public void onNewLine()\n    {\n        getXHTMLWikiPrinter().printXMLElement(\"br\");\n    }\n\n    @Override\n    public void beginLink(ResourceReference reference, boolean freestanding, Map<String, String> parameters)\n    {\n        // Ensure the link renderer is using the latest printer since the original printer used could have been\n        // superseded by another one in the printer stack.\n        this.linkRenderer.setXHTMLWikiPrinter(getXHTMLWikiPrinter());\n\n        // If the ResourceReference doesn't have a base reference specified, then look for one in previously sent\n        // events (it's sent in begin/endMetaData events).\n        List<String> baseReferences = reference.getBaseReferences();\n        if (baseReferences.isEmpty()) {\n            reference.addBaseReferences(getMetaDataState().<String>getAllMetaData(MetaData.BASE));\n        }\n\n        this.linkRenderer.beginLink(reference, freestanding, parameters);\n    }\n\n    @Override\n    public void endLink(ResourceReference reference, boolean freestanding, Map<String, String> parameters)\n    {\n        this.linkRenderer.setHasLabel(!getEmptyBlockState().isCurrentContainerBlockEmpty());\n        this.linkRenderer.endLink(reference, freestanding, parameters);\n    }\n\n    @Override\n    public void beginHeader(HeaderLevel level, String id, Map<String, String> parameters)\n    {\n        Map<String, String> attributes = new LinkedHashMap<String, String>();\n\n        attributes.put(\"id\", id);\n\n        // Indicate that the id is generated. This is to differentiate from ids added as parameters.\n        // Note that we add this only if the user hasn't specified an id as an override in a parameter.\n        if (!parameters.containsKey(\"id\")) {\n            addClassValue(\"class\", GENERATEDIDCLASS, attributes);\n        }\n\n        attributes.putAll(parameters);\n\n        // Section editing feature:\n        // In order for the UI side to be able to add a section edit button we need to provide some information to it\n        // and especially we need to tell it if the header was a header generated by a macro or not. The reason is\n        // that macro-generated headers should not be editable by the user.\n        // TODO: In the future it's possible that we'll want this kind of behavior implemented using a Transformation.\n        // If we decide this then remove this code.\n        if (getBlockState().isInMacro()) {\n            addClassValue(\"class\", GENERATEDHEADERCLASS, attributes);\n        }\n\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"h\" + level.getAsInt(), attributes);\n        // We generate a span so that CSS rules have a hook to perform some magic that wouldn't work on just a H\n        // element. Like some IE6 magic and others.\n        getXHTMLWikiPrinter().printXMLStartElement(\"span\");\n    }\n\n    @Override\n    public void endHeader(HeaderLevel level, String id, Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"span\");\n        getXHTMLWikiPrinter().printXMLEndElement(\"h\" + level.getAsInt());\n    }\n\n    @Override\n    public void onWord(String word)\n    {\n        getXHTMLWikiPrinter().printXML(word);\n    }\n\n    @Override\n    public void onSpace()\n    {\n        // The XHTML printer will decide whether to print a normal space or a &nbsp;\n        getXHTMLWikiPrinter().printSpace();\n    }\n\n    @Override\n    public void onSpecialSymbol(char symbol)\n    {\n        getXHTMLWikiPrinter().printXML(String.valueOf(symbol));\n    }\n\n    @Override\n    public void beginList(ListType type, Map<String, String> parameters)\n    {\n        if (type == ListType.BULLETED) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"ul\", parameters);\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(\"ol\", parameters);\n        }\n    }\n\n    @Override\n    public void beginListItem()\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"li\");\n    }\n\n    @Override\n    public void beginListItem(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"li\", parameters);\n    }\n\n    @Override\n    public void endList(ListType type, Map<String, String> parameters)\n    {\n        if (type == ListType.BULLETED) {\n            getXHTMLWikiPrinter().printXMLEndElement(\"ul\");\n        } else {\n            getXHTMLWikiPrinter().printXMLEndElement(\"ol\");\n        }\n    }\n\n    @Override\n    public void endListItem()\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"li\");\n    }\n\n    @Override\n    public void endListItem(Map<String, String> parameters)\n    {\n        endListItem();\n    }\n\n    @Override\n    public void onId(String name)\n    {\n        // Don't use the \"name\" attribute (see http://www.w3.org/TR/html4/struct/links.html#h-12.2.3).\n        // If the id s in a paragraph use <span id=\"...\"> and if in a standalone block then use\n        // <div id=\"...\">.\n        if (getBlockState().isInLine()) {\n            // Note: We're using <span><span/> and not <span/> since some browsers do not support the\n            // <span/> syntax (FF3) when the content type is set to HTML instead of XHTML.\n            getXHTMLWikiPrinter().printXMLStartElement(\"span\", new String[][] { { \"id\", name } });\n            getXHTMLWikiPrinter().printXMLEndElement(\"span\");\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(\"div\", new String[][] { { \"id\", name } });\n            getXHTMLWikiPrinter().printXMLEndElement(\"div\");\n        }\n    }\n\n    @Override\n    public void onHorizontalLine(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLElement(\"hr\", parameters);\n    }\n\n    @Override\n    public void onVerbatim(String content, boolean inline, Map<String, String> parameters)\n    {\n        if (inline) {\n            // Note: We generate a tt element rather than a pre element since pre elements cannot be located inside\n            // paragraphs for example. There also no tag in XHTML that has a semantic of preserving inline content so\n            // tt is the closest to pre for inline.\n            // The class is what is expected by wikimodel to understand the tt as meaning a verbatim and not a Monospace\n            // element.\n            getXHTMLWikiPrinter().printXMLStartElement(\"tt\", new String[][] { { \"class\", \"wikimodel-verbatim\" } });\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(\"tt\");\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(\"pre\", parameters);\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(\"pre\");\n        }\n    }\n\n    @Override\n    public void onEmptyLines(int count)\n    {\n        // We need to use a special tag for empty lines since in XHTML the BR tag cannot be used outside of content\n        // tags.\n        // Note: We're using <div><div/> and not <div/> since some browsers do not support the <div/> syntax (FF3)\n        // when the content type is set to HTML instead of XHTML.\n        for (int i = 0; i < count; ++i) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"div\", new String[][] { { \"class\", \"wikimodel-emptyline\" } });\n            getXHTMLWikiPrinter().printXMLEndElement(\"div\");\n        }\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @since 2.0RC1\n     */\n    @Override\n    public void beginDefinitionList(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"dl\", parameters);\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @since 2.0RC1\n     */\n    @Override\n    public void endDefinitionList(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"dl\");\n    }\n\n    @Override\n    public void beginDefinitionTerm()\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"dt\");\n    }\n\n    @Override\n    public void beginDefinitionDescription()\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"dd\");\n    }\n\n    @Override\n    public void endDefinitionTerm()\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"dt\");\n    }\n\n    @Override\n    public void endDefinitionDescription()\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"dd\");\n    }\n\n    @Override\n    public void beginQuotation(Map<String, String> parameters)\n    {\n        if (getBlockState().isInQuotationLine()) {\n            getXHTMLWikiPrinter().printXMLEndElement(\"p\");\n        }\n\n        getXHTMLWikiPrinter().printXMLStartElement(\"blockquote\", parameters);\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"p\");\n    }\n\n    @Override\n    public void endQuotation(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"p\");\n\n        getXHTMLWikiPrinter().printXMLEndElement(\"blockquote\");\n\n        if (getBlockState().isInQuotationLine()) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"p\");\n        }\n    }\n\n    @Override\n    public void beginQuotationLine()\n    {\n        // Send a new line if the previous event was endQuotationLine since we need to separate each quotation line\n        // or they'll printed next to each other and not on a new line each.\n        if (getBlockState().isInQuotation() && getBlockState().getPreviousEvent() == Event.QUOTATION_LINE) {\n            onNewLine();\n        }\n    }\n\n    @Override\n    public void beginTable(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"table\", parameters);\n    }\n\n    @Override\n    public void beginTableRow(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"tr\", parameters);\n    }\n\n    @Override\n    public void beginTableCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"td\", parameters);\n    }\n\n    @Override\n    public void beginTableHeadCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        // Find proper scope attribute value\n        Map<String, String> parametersWithScope;\n        if (!parameters.containsKey(\"scope\")) {\n            parametersWithScope = new LinkedHashMap<String, String>(parameters);\n\n            if (getBlockState().getCellRow() == 0 || getBlockState().getCellCol() > 0) {\n                parametersWithScope.put(\"scope\", \"col\");\n            } else {\n                parametersWithScope.put(\"scope\", \"row\");\n            }\n        } else {\n            parametersWithScope = parameters;\n        }\n\n        // Write th element\n        getXHTMLWikiPrinter().printXMLStartElement(\"th\", parametersWithScope);\n    }\n\n    @Override\n    public void endTable(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"table\");\n    }\n\n    @Override\n    public void endTableRow(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"tr\");\n    }\n\n    @Override\n    public void endTableCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"td\");\n    }\n\n    @Override\n    public void endTableHeadCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"th\");\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @since 2.5RC1\n     */\n    @Override\n    public void onImage(ResourceReference reference, boolean freestanding, Map<String, String> parameters)\n    {\n        onImage(reference, freestanding, null, parameters);\n    }\n\n    @Override\n    public void onImage(ResourceReference reference, boolean freestanding, String id, Map<String, String> parameters)\n    {\n        // Ensure the image renderer is using the latest printer since the original printer used could have been\n        // superseded by another one in the printer stack.\n        this.imageRenderer.setXHTMLWikiPrinter(getXHTMLWikiPrinter());\n\n        // If the ResourceReference doesn't have a base reference specified, then look for one in previously sent\n        // events (it's sent in begin/endMetaData events).\n        List<String> baseReferences = reference.getBaseReferences();\n        if (baseReferences.isEmpty()) {\n            reference.addBaseReferences(getMetaDataState().getAllMetaData(MetaData.BASE));\n        }\n\n        this.imageRenderer.onImage(reference, freestanding, id, parameters);\n    }\n\n    @Override\n    public void onRawText(String text, Syntax syntax)\n    {\n        // Directly inject the HTML content in the wiki printer (bypassing the XHTML printer)\n        if (SyntaxType.HTML_FAMILY_TYPES.contains(syntax.getType())) {\n            getXHTMLWikiPrinter().printRaw(text);\n        }\n    }\n\n    @Override\n    public void beginFigureCaption(Map<String, String> parameters)\n    {\n        // We add a div to have some nice fallback (since <figure>/<figcaption> tags are not supported in XHTML 1.0).\n        Map<String, String> extendedParameters = new LinkedHashMap<>(parameters);\n        addClassValue(HTMLConstants.ATTRIBUTE_CLASS, \"figcaption\", extendedParameters);\n        getXHTMLWikiPrinter().printXMLStartElement(HTMLConstants.TAG_DIV, extendedParameters);\n    }\n\n    @Override\n    public void endFigureCaption(Map<String, String> parameters)\n    {\n        // See beginFigureCaption()\n        getXHTMLWikiPrinter().printXMLEndElement(HTMLConstants.TAG_DIV);\n    }\n\n    private void addClassValue(String classAttributeName, String newClassValue, Map<String, String> attributes)\n    {\n        String classValue = attributes.get(classAttributeName);\n        if (classValue == null) {\n            classValue = newClassValue;\n        } else {\n            classValue = classValue.trim() + \" \" + newClassValue;\n        }\n        attributes.put(classAttributeName, classValue);\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\n\n/**\n * Generates XHTML from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n *\n * @version $Id$\n * @since 2.0M3\n */\n@Component\n@Named(\"xhtml/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class XHTMLRenderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new XHTMLChainingRenderer(this.linkRenderer, this.imageRenderer, chain));\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport java.util.Collections;\n\nimport org.junit.jupiter.api.Test;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.renderer.printer.DefaultWikiPrinter;\nimport org.xwiki.rendering.renderer.printer.WikiPrinter;\nimport org.xwiki.rendering.syntax.Syntax;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\n/**\n * Unit tests for {@link XHTMLChainingRenderer} for methods that cannot be easily tested using the Rendering Test\n * framework.\n *\n * @version $Id$\n */\nclass XHTMLChainingRendererTest\n{\n    /**\n     * Those events are hard to test since there's no easy syntax to input them (requires XWiki 2.0+ Syntax with a\n     * Macro transformation applied).\n     */\n    @Test\n    void outputFigureCaptionEvents()\n    {\n        XHTMLChainingRenderer renderer = new XHTMLChainingRenderer(null, null, new ListenerChain());\n        WikiPrinter wikiPrinter = new DefaultWikiPrinter();\n        renderer.setPrinter(wikiPrinter);\n        renderer.beginFigureCaption(Collections.emptyMap());\n        renderer.onWord(\"caption\");\n        renderer.endFigureCaption(Collections.emptyMap());\n\n        assertEquals(\"<div class=\\\"figcaption\\\">caption</div>\", wikiPrinter.toString());\n    }\n\n    @Test\n    void onRawText()\n    {\n        XHTMLChainingRenderer renderer = new XHTMLChainingRenderer(null, null, new ListenerChain());\n        WikiPrinter wikiPrinter = new DefaultWikiPrinter();\n        renderer.setPrinter(wikiPrinter);\n        renderer.onRawText(\"xhtml/1.0\", Syntax.XHTML_1_0);\n        renderer.onRawText(\"html/4.01\", Syntax.HTML_4_01);\n        renderer.onRawText(\"html/5.0\", Syntax.HTML_5_0);\n        renderer.onRawText(\"annotatedxhtml/1.0\", Syntax.ANNOTATED_XHTML_1_0);\n        renderer.onRawText(\"annotatedhtml/5.0\", Syntax.ANNOTATED_HTML_5_0);\n        renderer.onRawText(\"plain/1.0\", Syntax.PLAIN_1_0);\n\n        assertEquals(\"xhtml/1.0html/4.01html/5.0annotatedxhtml/1.0annotatedhtml/5.0\", wikiPrinter.toString());\n    }\n}", "<p><tt><span a=\"b\">monospace</span></tt></p>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that STRONG tag parameters are recognized.\n.#-----------------------------------------------------\n<p><strong a=\"b\" data-xwiki-parameter=\"value\">something</strong></p>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [BOLD] [[a]=[b][data-xwiki-parameter]=[value]]\nonWord [something]\nendFormat [BOLD] [[a]=[b][data-xwiki-parameter]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><strong><span a=\"b\" data-xwiki-parameter=\"value\">something</span></strong></p>", ".#-------------------------------------------------------------------------------------\n.input|xhtml/1.0\n.# Verify that HTML entities can be parsed by the XHTML parser and are encoded properly\n.# Note that &nbsp; is transformed into a space.\n.#-------------------------------------------------------------------------------------\n<p>&nbsp;&tilde;&euro;</p><p param1=\"val&#252;e\">&#160;&#732;&#8364;</p>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonSpace\nonWord [(((732)))(((8364)))]\nendParagraph\nbeginParagraph [[param1]=[val(((252)))e]]\nonSpace\nonWord [(((732)))(((8364)))]\nendParagraph [[param1]=[val(((252)))e]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p>&nbsp;\u02dc\u20ac</p><p param1=\"val\u00fce\">&nbsp;\u02dc\u20ac</p>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that div tag parameters, also starting with data-xwiki-, are recognized.\n.#-----------------------------------------------------\n<div a=\"b\" data-xwiki-parameter=\"value\">something</div>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginGroup [[a]=[b][data-xwiki-parameter]=[value]]\nbeginParagraph\nonWord [something]\nendParagraph\nendGroup [[a]=[b][data-xwiki-parameter]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<div a=\"b\" data-xwiki-parameter=\"value\"><p>something</p></div>", "<p><span a=\"b\" class=\"monospace\">monospace</span></p>", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.renderer.printer;\n\nimport java.util.Map;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.xml.sax.Attributes;\n\n/**\n * Base toolkit class for all XHTML-based renderers. This printer handles whitespaces so that it prints \"&nbsp;\" when\n * needed (i.e. when the spaces are at the beginning or at the end of an element's content or when there are more than 1\n * contiguous spaces, except for CDATA sections and inside PRE elements. It also knows how to handle XHTML comments).\n *\n * @version $Id$\n * @since 1.7M1\n */\npublic class XHTMLWikiPrinter extends XMLWikiPrinter\n{\n    private int spaceCount;\n\n    private boolean isInCData;\n\n    private boolean isInPreserveElement;\n\n    private boolean elementEnded;\n\n    private boolean hasTextBeenPrinted;\n\n    private boolean isStandalone;\n\n    /**\n     * @param printer the object to which to write the XHTML output to\n     */\n    public XHTMLWikiPrinter(WikiPrinter printer)\n    {\n        super(printer);\n    }\n\n    /**\n     * Use it to specify that the current element to print is standalone.\n     * This value might be used to know if the first space should be printed with a simple space or a {@code &nbsp;}\n     * entity. Note that the standalone value is automatically reset after first printing of a space, or when a text\n     * is printed.\n     * @since 12.2\n     */\n    public void setStandalone()\n    {\n        this.isStandalone = true;\n    }\n\n    @Override\n    public void printXML(String str)\n    {\n        handleSpaceWhenInText();\n        super.printXML(str);\n        this.hasTextBeenPrinted = true;\n        this.isStandalone = false;\n    }\n\n    @Override\n    public void printXMLElement(String name)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLElement(name);\n    }\n\n    @Override\n    public void printXMLElement(String name, String[][] attributes)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLElement(name, attributes);\n    }\n\n    @Override\n    public void printXMLElement(String name, Map<String, String> attributes)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLElement(name, attributes);\n    }\n\n    @Override\n    public void printXMLStartElement(String name)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLStartElement(name);\n    }\n\n    @Override\n    public void printXMLStartElement(String name, String[][] attributes)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLStartElement(name, attributes);\n    }\n\n    @Override\n    public void printXMLStartElement(String name, Map<String, String> attributes)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLStartElement(name, attributes);\n    }\n\n    @Override\n    public void printXMLStartElement(String name, Attributes attributes)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLStartElement(name, attributes);\n    }\n\n    @Override\n    public void printXMLEndElement(String name)\n    {\n        handleSpaceWhenEndlement();\n        super.printXMLEndElement(name);\n        this.elementEnded = true;\n    }\n\n    @Override\n    public void printXMLComment(String content)\n    {\n        printXMLComment(content, false);\n    }\n\n    @Override\n    public void printXMLComment(String content, boolean escape)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLComment(content, escape);\n        this.elementEnded = true;\n    }\n\n    @Override\n    public void printXMLStartCData()\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLStartCData();\n    }\n\n    @Override\n    public void printXMLEndCData()\n    {\n        handleSpaceWhenEndlement();\n        super.printXMLEndCData();\n    }\n\n    /**\n     * This method should be used to print a space rather than calling <code>printXML(\" \")</code>.\n     */\n    public void printSpace()\n    {\n        this.spaceCount++;\n    }\n\n    @Override\n    public void printRaw(String raw)\n    {\n        handleSpaceWhenStartElement();\n        super.printRaw(raw);\n        this.elementEnded = true;\n    }\n\n    private void handleSpaceWhenInText()\n    {\n        if (this.elementEnded || this.hasTextBeenPrinted) {\n            handleSpaceWhenStartElement();\n        } else {\n            handleSpaceWhenEndlement();\n        }\n    }\n\n    private void handleSpaceWhenStartElement()\n    {\n        // Use case: <tag1>something <tag2>...\n        // Use case: <tag1>something <!--...\n        if (this.spaceCount > 0) {\n            if (!this.isInCData && !this.isInPreserveElement) {\n                // We print a single space as a normal space, except if we are at the beginning of a standalone element\n                // in that case we want a non-breaking space so it won't be stripped.\n                // Any supplementary space will be printed as non-breaking spaces so we keep them too.\n                if (this.isStandalone && !this.hasTextBeenPrinted) {\n                    printEntity(\"&nbsp;\");\n                } else {\n                    super.printXML(\" \");\n                }\n                for (int i = 0; i < this.spaceCount - 1; i++) {\n                    printEntity(\"&nbsp;\");\n                }\n            } else {\n                super.printXML(StringUtils.repeat(' ', this.spaceCount));\n            }\n            this.isStandalone = false;\n        }\n        this.spaceCount = 0;\n        this.elementEnded = false;\n        this.hasTextBeenPrinted = false;\n    }\n\n    private void handleSpaceWhenEndlement()\n    {\n        // Use case: <tag1>something </tag1>...\n        // All spaces are &nbsp; spaces since otherwise they'll be all stripped by browsers\n        if (!this.isInCData && !this.isInPreserveElement) {\n            for (int i = 0; i < this.spaceCount; i++) {\n                printEntity(\"&nbsp;\");\n            }\n        } else {\n            super.printXML(StringUtils.repeat(' ', this.spaceCount));\n        }\n        this.spaceCount = 0;\n        this.elementEnded = false;\n        this.hasTextBeenPrinted = false;\n    }\n}\n"], "fixing_code": [".#---------------------------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.# Verify that internal link syntax is escaped\n.#---------------------------------------------------------------------------------------------------------\n[[lab~>~>el~~~~>>refe~|~|rence||param=\"value\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [url] Reference = [refe||rence]] [false] [[param]=[value]]\nonWord [lab]\nonSpecialSymbol [>]\nonSpecialSymbol [>]\nonWord [el]\nonSpecialSymbol [~]\nendLink [Typed = [false] Type = [url] Reference = [refe||rence]] [false] [[param]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiexternallink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"refe||rence\">lab&gt;&gt;el~</a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|refe||rence--><span class=\"wikiexternallink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"refe||rence\">lab&gt;&gt;el~</a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[lab~>~>el~~~~>>refe~|~|rence||param=\"value\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|refe||rence--><span class=\"wikiexternallink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"refe||rence\">lab&gt;&gt;el~</a></span><!--stopwikilink--></p>", ".#-----------------------------------------------------\n.# Validate parameters support for groups\n.#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n(((some text)))\n\n(% param=\"value\" %)(((some text)))\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginGroup [[param]=[value]]\nbeginParagraph\nonWord [some]\nonSpace\nonWord [text]\nendParagraph\nendGroup [[param]=[value]]\nbeginGroup [[param]=[value]]\nbeginParagraph\nonWord [some]\nonSpace\nonWord [text]\nendParagraph\nendGroup [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<div data-xwiki-translated-attribute-param=\"value\"><p>some text</p></div><div data-xwiki-translated-attribute-param=\"value\"><p>some text</p></div>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n(((\nsome text\n)))\n\n(% param=\"value\" %)\n(((\nsome text\n)))\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<div data-xwiki-translated-attribute-param=\"value\"><p>some text</p></div><div data-xwiki-translated-attribute-param=\"value\"><p>some text</p></div>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n----\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nonHorizontalLine [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<hr data-xwiki-translated-attribute-param=\"value\"/>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n----\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><hr data-xwiki-translated-attribute-param=\"value\"/></html>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that EM tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><em a=\"b\">something</em></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [ITALIC] [[a]=[b]]\nonWord [something]\nendFormat [ITALIC] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><em><span data-xwiki-translated-attribute-a=\"b\">something</span></em></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)//something//", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Test parametrized definition lists\n.#-----------------------------------------------------\n(% param=\"value\" %)\n; title\n: definition\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginDefinitionList [[param]=[value]]\nbeginDefinitionTerm\nonWord [title]\nendDefinitionTerm\nbeginDefinitionDescription\nonWord [definition]\nendDefinitionDescription\nendDefinitionList [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<dl data-xwiki-translated-attribute-param=\"value\"><dt>title</dt><dd>definition</dd></dl>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n; title\n: definition\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<dl data-xwiki-translated-attribute-param=\"value\"><dt>title</dt><dd>definition</dd></dl>\n.#-----------------------------------------------------\n.expect|plain/1.0\n.#-----------------------------------------------------\ntitle\ndefinition", ".#--------------------------------------------------------------------------------\n.input|xwiki/2.0\n.# Verify that a sub list can have its own params\n.#--------------------------------------------------------------------------------\n(%param=value%)\n* item 1\n(%param2=value2%)\n** item 1.1\n*** item 1.1.1\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginList [BULLETED] [[param]=[value]]\nbeginListItem\nonWord [item]\nonSpace\nonWord [1]\nbeginList [BULLETED] [[param2]=[value2]]\nbeginListItem\nonWord [item]\nonSpace\nonWord [1]\nonSpecialSymbol [.]\nonWord [1]\nbeginList [BULLETED]\nbeginListItem\nonWord [item]\nonSpace\nonWord [1]\nonSpecialSymbol [.]\nonWord [1]\nonSpecialSymbol [.]\nonWord [1]\nendListItem\nendList [BULLETED]\nendListItem\nendList [BULLETED] [[param2]=[value2]]\nendListItem\nendList [BULLETED] [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<ul data-xwiki-translated-attribute-param=\"value\"><li>item 1<ul data-xwiki-translated-attribute-param2=\"value2\"><li>item 1.1<ul><li>item 1.1.1</li></ul></li></ul></li></ul>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n* item 1\n(% param2=\"value2\" %)\n** item 1.1\n*** item 1.1.1\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<ul data-xwiki-translated-attribute-param=\"value\"><li>item 1<ul data-xwiki-translated-attribute-param2=\"value2\"><li>item 1.1<ul><li>item 1.1.1</li></ul></li></ul></li></ul>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n* item\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginList [BULLETED] [[param1]=[value1][param2]=[value2]]\nbeginListItem\nonWord [item]\nendListItem\nendList [BULLETED] [[param1]=[value1][param2]=[value2]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<ul data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\"><li>item</li></ul>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n* item\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><ul data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\"><li>item</li></ul></html>", ".runTransformations\n.#--------------------------------------------------------------------------\n.inputexpect|xwiki/2.0\n.# Verify mix of styles in and outside macros. We had a bug previously where\n.# styles inside a macro was affecting how the macro was displayed and\n.# another where the format block wasn't closed before a macro.\n.#--------------------------------------------------------------------------\n{{testformatmacro/}}\n\n(% a=\"b\" %){{testformatmacro/}} text\n\n(% a=\"b\" %)text(%%){{testformatmacro/}}\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginMacroMarkerStandalone [testformatmacro] []\nbeginFormat [NONE] [[param]=[value]]\nonWord [formatmacro2]\nendFormat [NONE] [[param]=[value]]\nendMacroMarkerStandalone [testformatmacro] []\nbeginParagraph\nbeginFormat [NONE] [[a]=[b]]\nbeginMacroMarkerInline [testformatmacro] []\nbeginFormat [NONE] [[param]=[value]]\nonWord [formatmacro3]\nendFormat [NONE] [[param]=[value]]\nendMacroMarkerInline [testformatmacro] []\nonSpace\nonWord [text]\nendFormat [NONE] [[a]=[b]]\nendParagraph\nbeginParagraph\nbeginFormat [NONE] [[a]=[b]]\nonWord [text]\nendFormat [NONE] [[a]=[b]]\nbeginMacroMarkerInline [testformatmacro] []\nbeginFormat [NONE] [[param]=[value]]\nonWord [formatmacro4]\nendFormat [NONE] [[param]=[value]]\nendMacroMarkerInline [testformatmacro] []\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<span data-xwiki-translated-attribute-param=\"value\">formatmacro2</span><p><span data-xwiki-translated-attribute-a=\"b\"><span data-xwiki-translated-attribute-param=\"value\">formatmacro3</span> text</span></p><p><span data-xwiki-translated-attribute-a=\"b\">text</span><span data-xwiki-translated-attribute-param=\"value\">formatmacro4</span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<!--startmacro:testformatmacro|-|--><span data-xwiki-translated-attribute-param=\"value\">formatmacro2</span><!--stopmacro--><p><span data-xwiki-translated-attribute-a=\"b\"><!--startmacro:testformatmacro|-|--><span data-xwiki-translated-attribute-param=\"value\">formatmacro3</span><!--stopmacro--> text</span></p><p><span data-xwiki-translated-attribute-a=\"b\">text</span><!--startmacro:testformatmacro|-|--><span data-xwiki-translated-attribute-param=\"value\">formatmacro4</span><!--stopmacro--></p>\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<!--startmacro:testformatmacro|-|--><span data-xwiki-translated-attribute-param=\"value\">formatmacro2</span><!--stopmacro--><p><span data-xwiki-translated-attribute-a=\"b\"><!--startmacro:testformatmacro|-|--><span data-xwiki-translated-attribute-param=\"value\">formatmacro3</span><!--stopmacro--> text</span></p><p><span data-xwiki-translated-attribute-a=\"b\">text</span><!--startmacro:testformatmacro|-|--><span data-xwiki-translated-attribute-param=\"value\">formatmacro4</span><!--stopmacro--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n.# Specify both paragraph params followed by params on a word \n(% param1=\"value1\" param2=\"value2\" %)\n(% param3=\"value3\" %)hello(%%) world\n\n.# Make sure that same param names override values\n(% param4=\"valueA\" %)hello (% param4=\"valueB\" %)world\n\n.# Verify that world is using param5=value4\n**(% param5=\"value4\" %)hello** world\n\n.# Make sure that params override whatever previous values were set.\n.# i.e. world only has param7=valueB and NOT param6=valueA\n(% param6=\"valueA\" %)hello (% param7=\"valueB\" %)world\n\n.# Make sure xwiki/2.0 renderer is handling inline parameters properly\nbefore(% param=\"value\" %)x(%%)**y**after\n\n12**34(% param=\"value\" %)56(%%)78**90\n\n(% param=\"value\" %)1//2//(%%)//3//\n\n(% param1=\"value1\" %)**1**(% param2=\"value2\" %)**2**\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph [[param1]=[value1][param2]=[value2]]\nbeginFormat [NONE] [[param3]=[value3]]\nonWord [hello]\nendFormat [NONE] [[param3]=[value3]]\nonSpace\nonWord [world]\nendParagraph [[param1]=[value1][param2]=[value2]]\nbeginParagraph\nbeginFormat [NONE] [[param4]=[valueA]]\nonWord [hello]\nonSpace\nendFormat [NONE] [[param4]=[valueA]]\nbeginFormat [NONE] [[param4]=[valueB]]\nonWord [world]\nendFormat [NONE] [[param4]=[valueB]]\nendParagraph\nbeginParagraph\nbeginFormat [BOLD] [[param5]=[value4]]\nonWord [hello]\nendFormat [BOLD] [[param5]=[value4]]\nbeginFormat [NONE] [[param5]=[value4]]\nonSpace\nonWord [world]\nendFormat [NONE] [[param5]=[value4]]\nendParagraph\nbeginParagraph\nbeginFormat [NONE] [[param6]=[valueA]]\nonWord [hello]\nonSpace\nendFormat [NONE] [[param6]=[valueA]]\nbeginFormat [NONE] [[param7]=[valueB]]\nonWord [world]\nendFormat [NONE] [[param7]=[valueB]]\nendParagraph\nbeginParagraph\nonWord [before]\nbeginFormat [NONE] [[param]=[value]]\nonWord [x]\nendFormat [NONE] [[param]=[value]]\nbeginFormat [BOLD]\nonWord [y]\nendFormat [BOLD]\nonWord [after]\nendParagraph\nbeginParagraph\nonWord [12]\nbeginFormat [BOLD]\nonWord [34]\nbeginFormat [NONE] [[param]=[value]]\nonWord [56]\nendFormat [NONE] [[param]=[value]]\nonWord [78]\nendFormat [BOLD]\nonWord [90]\nendParagraph\nbeginParagraph\nbeginFormat [NONE] [[param]=[value]]\nonWord [1]\nbeginFormat [ITALIC]\nonWord [2]\nendFormat [ITALIC]\nendFormat [NONE] [[param]=[value]]\nbeginFormat [ITALIC]\nonWord [3]\nendFormat [ITALIC]\nendParagraph\nbeginParagraph\nbeginFormat [BOLD] [[param1]=[value1]]\nonWord [1]\nendFormat [BOLD] [[param1]=[value1]]\nbeginFormat [BOLD] [[param2]=[value2]]\nonWord [2]\nendFormat [BOLD] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\"><span data-xwiki-translated-attribute-param3=\"value3\">hello</span> world</p><p><span data-xwiki-translated-attribute-param4=\"valueA\">hello&nbsp;</span><span data-xwiki-translated-attribute-param4=\"valueB\">world</span></p><p><strong><span data-xwiki-translated-attribute-param5=\"value4\">hello</span></strong><span data-xwiki-translated-attribute-param5=\"value4\">&nbsp;world</span></p><p><span data-xwiki-translated-attribute-param6=\"valueA\">hello&nbsp;</span><span data-xwiki-translated-attribute-param7=\"valueB\">world</span></p><p>before<span data-xwiki-translated-attribute-param=\"value\">x</span><strong>y</strong>after</p><p>12<strong>34<span data-xwiki-translated-attribute-param=\"value\">56</span>78</strong>90</p><p><span data-xwiki-translated-attribute-param=\"value\">1<em>2</em></span><em>3</em></p><p><strong><span data-xwiki-translated-attribute-param1=\"value1\">1</span></strong><strong><span data-xwiki-translated-attribute-param2=\"value2\">2</span></strong></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n(% param3=\"value3\" %)hello(%%) world\n\n(% param4=\"valueA\" %)hello (% param4=\"valueB\" %)world\n\n(% param5=\"value4\" %)**hello** world\n\n(% param6=\"valueA\" %)hello (% param7=\"valueB\" %)world\n\nbefore(% param=\"value\" %)x(%%)**y**after\n\n12**34(% param=\"value\" %)56(%%)78**90\n\n(% param=\"value\" %)1//2//(%%)//3//\n\n(% param1=\"value1\" %)**1**(% param2=\"value2\" %)**2**", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n>line\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginQuotation [[param1]=[value1][param2]=[value2]]\nbeginQuotationLine\nonWord [line]\nendQuotationLine\nendQuotation [[param1]=[value1][param2]=[value2]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<blockquote data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\"><p>line</p></blockquote>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param1=\"value1\" param2=\"value2\" %)\n>line\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<blockquote data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\"><p>line</p></blockquote>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Test parametrized sections\n.#-----------------------------------------------------\n(% param=\"value\" %)\n= header\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginSection\nbeginHeader [1, Hheader] [[param]=[value]]\nonWord [header]\nendHeader [1, Hheader] [[param]=[value]]\nendSection\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<h1 id=\"Hheader\" class=\"wikigeneratedid\" data-xwiki-translated-attribute-param=\"value\"><span>header</span></h1>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n= header =\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><h1 id=\"Hheader\" class=\"wikigeneratedid\" data-xwiki-translated-attribute-param=\"value\"><span>header</span></h1></html>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that DEL tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><del a=\"b\">something</del></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [STRIKEDOUT] [[a]=[b]]\nonWord [something]\nendFormat [STRIKEDOUT] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><del><span data-xwiki-translated-attribute-a=\"b\">something</span></del></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)--something--", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that SUB tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><sub data-xwiki-translated-attribute-a=\"b\">something</sub></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [SUBSCRIPT] [[a]=[b]]\nonWord [something]\nendFormat [SUBSCRIPT] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><sub><span data-xwiki-translated-attribute-a=\"b\">something</span></sub></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %),,something,,", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that SUP tag parameters are recognized.\n.#-----------------------------------------------------\n<html><p><sup data-xwiki-translated-attribute-a=\"b\">something</sup></p></html>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [SUPERSCRIPT] [[a]=[b]]\nonWord [something]\nendFormat [SUPERSCRIPT] [[a]=[b]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><sup><span data-xwiki-translated-attribute-a=\"b\">something</span></sup></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)^^something^^", ".#-----------------------------------------------------------\n.input|xwiki/2.0\n.# Test table parameters\n.#-----------------------------------------------------------\n(% a=\"b\" %)\n(% c=\"d\" %)|=(% e=\"f\" %)(% g=\"h\" %)cell1|(% i=\"j\" %)(% k=\"l\" %)cell2\n\n(% a=\"b\" %)\n(% c=\"d\" %)!=(% e=\"f\" %)(% g=\"h\" %)cell1!!(% i=\"j\" %)(% k=\"l\" %)cell2\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginTable [[a]=[b]]\nbeginTableRow [[c]=[d]]\nbeginTableHeadCell [[e]=[f]]\nbeginFormat [NONE] [[g]=[h]]\nonWord [cell1]\nendFormat [NONE] [[g]=[h]]\nendTableHeadCell [[e]=[f]]\nbeginTableCell [[i]=[j]]\nbeginFormat [NONE] [[k]=[l]]\nonWord [cell2]\nendFormat [NONE] [[k]=[l]]\nendTableCell [[i]=[j]]\nendTableRow [[c]=[d]]\nendTable [[a]=[b]]\nbeginTable [[a]=[b]]\nbeginTableRow [[c]=[d]]\nbeginTableHeadCell [[e]=[f]]\nbeginFormat [NONE] [[g]=[h]]\nonWord [cell1]\nendFormat [NONE] [[g]=[h]]\nendTableHeadCell [[e]=[f]]\nbeginTableCell [[i]=[j]]\nbeginFormat [NONE] [[k]=[l]]\nonWord [cell2]\nendFormat [NONE] [[k]=[l]]\nendTableCell [[i]=[j]]\nendTableRow [[c]=[d]]\nendTable [[a]=[b]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<table data-xwiki-translated-attribute-a=\"b\"><tr data-xwiki-translated-attribute-c=\"d\"><th data-xwiki-translated-attribute-e=\"f\" scope=\"col\"><span data-xwiki-translated-attribute-g=\"h\">cell1</span></th><td data-xwiki-translated-attribute-i=\"j\"><span k=\"l\">cell2</span></td></tr></table><table data-xwiki-translated-attribute-a=\"b\"><tr data-xwiki-translated-attribute-c=\"d\"><th data-xwiki-translated-attribute-e=\"f\" scope=\"col\"><span data-xwiki-translated-attribute-g=\"h\">cell1</span></th><td data-xwiki-translated-attribute-i=\"j\"><span k=\"l\">cell2</span></td></tr></table>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% a=\"b\" %)\n(% c=\"d\" %)|=(% e=\"f\" %)(% g=\"h\" %)cell1|(% i=\"j\" %)(% k=\"l\" %)cell2\n\n(% a=\"b\" %)\n(% c=\"d\" %)|=(% e=\"f\" %)(% g=\"h\" %)cell1|(% i=\"j\" %)(% k=\"l\" %)cell2\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<table data-xwiki-translated-attribute-a=\"b\"><tr data-xwiki-translated-attribute-c=\"d\"><th data-xwiki-translated-attribute-e=\"f\" scope=\"col\"><span data-xwiki-translated-attribute-g=\"h\">cell1</span></th><td data-xwiki-translated-attribute-i=\"j\"><span k=\"l\">cell2</span></td></tr></table><table data-xwiki-translated-attribute-a=\"b\"><tr data-xwiki-translated-attribute-c=\"d\"><th data-xwiki-translated-attribute-e=\"f\" scope=\"col\"><span data-xwiki-translated-attribute-g=\"h\">cell1</span></th><td data-xwiki-translated-attribute-i=\"j\"><span k=\"l\">cell2</span></td></tr></table>", ".#---------------------------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.#---------------------------------------------------------------------------------------------------------\n(% param=\"value\" %)\n{{{abc}}}\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nonVerbatim [abc] [false] [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<pre data-xwiki-translated-attribute-param=\"value\">abc</pre>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n{{{abc}}}\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<html><pre data-xwiki-translated-attribute-param=\"value\">abc</pre></html>\n", ".#---------------------------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.#---------------------------------------------------------------------------------------------------------\n(% param=\"value\" %)\n(% param2=\"value2\" %){{{abc}}}\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph [[param]=[value]]\nbeginFormat [NONE] [[param2]=[value2]]\nonVerbatim [abc] [true]\nendFormat [NONE] [[param2]=[value2]]\nendParagraph [[param]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p data-xwiki-translated-attribute-param=\"value\"><span data-xwiki-translated-attribute-param2=\"value2\"><tt class=\"wikimodel-verbatim\">abc</tt></span></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n(% param=\"value\" %)\n(% param2=\"value2\" %){{{abc}}}\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p data-xwiki-translated-attribute-param=\"value\"><span data-xwiki-translated-attribute-param2=\"value2\"><tt class=\"wikimodel-verbatim\">abc</tt></span></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n[[image:my.png||param1=\"value1\" param2=\"value2\"]]\n[[image:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonImage [Typed = [false] Type = [attach] Reference = [my.png]] [false] [Imy.png] [[param1]=[value1][param2]=[value2]]\nonNewLine\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false] [ISpace.ExistingPage40my.png]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><img src=\"imageurl\" data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><br/><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|my.png--><img src=\"imageurl\" data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><!--stopimage--><br/><!--startimage:false|-|attach|-|Space.ExistingPage@my.png--><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[image:my.png||param1=\"value1\" param2=\"value2\"]]\n[[image:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|my.png--><img src=\"imageurl\" data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><!--stopimage--><br/><!--startimage:false|-|attach|-|Space.ExistingPage@my.png--><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>", ".#-----------------------------------------------------\n.inputexpect|xwiki/2.0\n.# Verify support for the figure caption syntax with nested link and list.\n.#-----------------------------------------------------\n[[Image **Caption**>>image:my.png||param1=\"value1\" param2=\"value2\"]]\n\n[[Caption\n\n* With\n* nested\n* list ~[~[and link~>~>https://xwiki.org~]~] and ~~~[~~~[fake link~]~].>>image:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginFigure [[class]=[image]]\nonImage [Typed = [false] Type = [attach] Reference = [my.png]] [false] [Imy.png] [[param1]=[value1][param2]=[value2]]\nbeginFigureCaption\nbeginParagraph\nonWord [Image]\nonSpace\nbeginFormat [BOLD]\nonWord [Caption]\nendFormat [BOLD]\nendParagraph\nendFigureCaption\nendFigure [[class]=[image]]\nbeginFigure [[class]=[image]]\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false] [ISpace.ExistingPage40my.png]\nbeginFigureCaption\nbeginParagraph\nonWord [Caption]\nendParagraph\nbeginList [BULLETED]\nbeginListItem\nonWord [With]\nendListItem\nbeginListItem\nonWord [nested]\nendListItem\nbeginListItem\nonWord [list]\nonSpace\nbeginLink [Typed = [false] Type = [url] Reference = [https://xwiki.org]] [false]\nonWord [and]\nonSpace\nonWord [link]\nendLink [Typed = [false] Type = [url] Reference = [https://xwiki.org]] [false]\nonSpace\nonWord [and]\nonSpace\nonSpecialSymbol [[]\nonSpecialSymbol [[]\nonWord [fake]\nonSpace\nonWord [link]\nonSpecialSymbol []]\nonSpecialSymbol []]\nonSpecialSymbol [.]\nendListItem\nendList [BULLETED]\nendFigureCaption\nendFigure [[class]=[image]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<img src=\"imageurl\" data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><div class=\"figcaption\"><p>Image <strong>Caption</strong></p></div><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><div class=\"figcaption\"><p>Caption</p><ul><li>With</li><li>nested</li><li>list <span class=\"wikiexternallink\"><a href=\"https://xwiki.org\">and link</a></span> and [[fake link]].</li></ul></div>\n.#-----------------------------------------------------\n.expect|html/5.0\n.#-----------------------------------------------------\n<figure class=\"image\"><img src=\"imageurl\" data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"Imy.png\" class=\"wikigeneratedid\" alt=\"my.png\"/><figcaption><p>Image <strong>Caption</strong></p></figcaption></figure><figure class=\"image\"><img src=\"imageurl\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><figcaption><p>Caption</p><ul><li>With</li><li>nested</li><li>list <span class=\"wikiexternallink\"><a href=\"https://xwiki.org\">and link</a></span> and [[fake link]].</li></ul></figcaption></figure>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Verify that Query String is correctly taken into\n.# account, including when there are parameters.\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png?param1=value1]] [false] [ISpace.ExistingPage40my.png3Fparam13Dvalue1] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><img src=\"imageurl\" data-xwiki-translated-attribute-param2=\"value2\" id=\"ISpace.ExistingPage40my.png3Fparam13Dvalue1\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png?param1=value1\"/></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png?param1=value1--><img src=\"imageurl\" data-xwiki-translated-attribute-param2=\"value2\" id=\"ISpace.ExistingPage40my.png3Fparam13Dvalue1\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png?param1=value1\"/><!--stopimage--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png?param1=value1--><img src=\"imageurl\" data-xwiki-translated-attribute-param2=\"value2\" id=\"ISpace.ExistingPage40my.png3Fparam13Dvalue1\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png?param1=value1\"/><!--stopimage--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.1\n.# Verify that Query String is correctly taken into\n.# account, including when there are parameters.\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png||queryString=\"param1=value1\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonImage [Typed = [false] Type = [attach] Reference = [Space.ExistingPage@my.png] Parameters = [[queryString] = [param1=value1]]] [false] [ISpace.ExistingPage40my.png] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><img src=\"imageurl?param1=value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png|-|queryString=\"param1=value1\"--><img src=\"imageurl?param1=value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.1\n.#-----------------------------------------------------\n[[image:Space.ExistingPage@my.png||queryString=\"param1=value1\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startimage:false|-|attach|-|Space.ExistingPage@my.png|-|queryString=\"param1=value1\"--><img src=\"imageurl?param1=value1\" data-xwiki-translated-attribute-param2=\"value2\" id=\"ISpace.ExistingPage40my.png\" class=\"wikigeneratedid\" alt=\"Space.ExistingPage@my.png\"/><!--stopimage--></p>", ".#--------------------------------------------------------------------------------------\n.input|xwiki/2.0\n.# Verify we can put a full image declaration (with params) while creating a link to it.\n.#--------------------------------------------------------------------------------------\n[[[[image:attach.png||height=\"100\" width=\"100\"]]>>http://xwiki.org||param=value]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [url] Reference = [http://xwiki.org]] [false] [[param]=[value]]\nonImage [Typed = [false] Type = [attach] Reference = [attach.png]] [false] [Iattach.png] [[height]=[100][width]=[100]]\nendLink [Typed = [false] Type = [url] Reference = [http://xwiki.org]] [false] [[param]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiexternallink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"http://xwiki.org\"><img src=\"imageurl\" height=\"100\" width=\"100\" id=\"Iattach.png\" class=\"wikigeneratedid\" alt=\"attach.png\"/></a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|http://xwiki.org--><span class=\"wikiexternallink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"http://xwiki.org\"><!--startimage:false|-|attach|-|attach.png--><img src=\"imageurl\" height=\"100\" width=\"100\" id=\"Iattach.png\" class=\"wikigeneratedid\" alt=\"attach.png\"/><!--stopimage--></a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[~[~[image:attach.png~|~|height=\"100\" width=\"100\"~]~]>>http://xwiki.org||param=\"value\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|url|-|http://xwiki.org--><span class=\"wikiexternallink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"http://xwiki.org\"><!--startimage:false|-|attach|-|attach.png--><img src=\"imageurl\" height=\"100\" width=\"100\" id=\"Iattach.png\" class=\"wikigeneratedid\" alt=\"attach.png\"/><!--stopimage--></a></span><!--stopwikilink--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n[[attach:my.png||param1=\"value1\" param2=\"value2\"]]\n[[attach:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [true] Type = [attach] Reference = [my.png]] [false] [[param1]=[value1][param2]=[value2]]\nendLink [Typed = [true] Type = [attach] Reference = [my.png]] [false] [[param1]=[value1][param2]=[value2]]\nonNewLine\nbeginLink [Typed = [true] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false]\nendLink [Typed = [true] Type = [attach] Reference = [Space.ExistingPage@my.png]] [false]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiattachmentlink\"><a data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">my.png</span></a></span><br/><span class=\"wikiattachmentlink\"><a href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage@my.png</span></a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:true|-|attach|-|my.png--><span class=\"wikiattachmentlink\"><a data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">my.png</span></a></span><!--stopwikilink--><br/><!--startwikilink:true|-|attach|-|Space.ExistingPage@my.png--><span class=\"wikiattachmentlink\"><a href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage@my.png</span></a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[attach:my.png||param1=\"value1\" param2=\"value2\"]]\n[[attach:Space.ExistingPage@my.png]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:true|-|attach|-|my.png--><span class=\"wikiattachmentlink\"><a data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">my.png</span></a></span><!--stopwikilink--><br/><!--startwikilink:true|-|attach|-|Space.ExistingPage@my.png--><span class=\"wikiattachmentlink\"><a href=\"attachmenturl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage@my.png</span></a></span><!--stopwikilink--></p>", ".#----------------------------------------------------------------------------------------------\n.input|xhtml/1.0\n.# Verify that the XHTML parser can understand anchors without the special anchor comment format\n.# that the XHTML Renderer uses. Note that for now the HREF value is considered containing\n.# XWiki link syntax.\n.#----------------------------------------------------------------------------------------------\n<p><a href=\"http://reference\" data-xwiki-translated-attribute-param1=\"value1\">http://reference</a></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [true] Type = [url] Reference = [http://reference]] [false] [[param1]=[value1]]\nonWord [http]\nonSpecialSymbol [:]\nonSpecialSymbol [/]\nonSpecialSymbol [/]\nonWord [reference]\nendLink [Typed = [true] Type = [url] Reference = [http://reference]] [false] [[param1]=[value1]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[http:~~/~~/reference>>http://reference||param1=\"value1\"]]\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikiexternallink\"><a data-xwiki-translated-attribute-param1=\"value1\" href=\"http://reference\">http://reference</a></span></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.# Verify that Anchors and Query String are correctly\n.# taken into account, including when there are\n.# parameters.\n.#-----------------------------------------------------\n[[Space.ExistingPage#anchor?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xwiki/2.1\n.#-----------------------------------------------------\n[[Space.ExistingPage||queryString=\"param1=value1\" anchor=\"anchor\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage] Parameters = [[queryString] = [param1=value1], [anchor] = [anchor]]] [false] [[param2]=[value2]]\nendLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage] Parameters = [[queryString] = [param1=value1], [anchor] = [anchor]]] [false] [[param2]=[value2]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikilink\"><a data-xwiki-translated-attribute-param2=\"value2\" href=\"viewurl?param1=value1#anchor\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage|-|queryString=\"param1=value1\" anchor=\"anchor\"--><span class=\"wikilink\"><a data-xwiki-translated-attribute-param2=\"value2\" href=\"viewurl?param1=value1#anchor\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[Space.ExistingPage#anchor?param1=value1||param2=\"value2\"]]\n.#-----------------------------------------------------\n.expect|xwiki/2.1\n.#-----------------------------------------------------\n[[Space.ExistingPage||queryString=\"param1=value1\" anchor=\"anchor\" param2=\"value2\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage|-|queryString=\"param1=value1\" anchor=\"anchor\"--><span class=\"wikilink\"><a data-xwiki-translated-attribute-param2=\"value2\" href=\"viewurl?param1=value1#anchor\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--></p>", ".#-----------------------------------------------------\n.input|xwiki/2.0\n.#-----------------------------------------------------\n[[Space.ExistingPage||param1=value1 param2=value2]]\n[[label>>Space.UnknownPage||param=\"value\"]]\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage]] [false] [[param1]=[value1][param2]=[value2]]\nendLink [Typed = [false] Type = [doc] Reference = [Space.ExistingPage]] [false] [[param1]=[value1][param2]=[value2]]\nonNewLine\nbeginLink [Typed = [false] Type = [doc] Reference = [Space.UnknownPage]] [false] [[param]=[value]]\nonWord [label]\nendLink [Typed = [false] Type = [doc] Reference = [Space.UnknownPage]] [false] [[param]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><span class=\"wikilink\"><a data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" href=\"viewurl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><br/><span class=\"wikicreatelink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"editurl\">label</a></span></p>\n.#-----------------------------------------------------\n.expect|annotatedxhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage--><span class=\"wikilink\"><a data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" href=\"viewurl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--><br/><!--startwikilink:false|-|doc|-|Space.UnknownPage--><span class=\"wikicreatelink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"editurl\">label</a></span><!--stopwikilink--></p>\n.#-----------------------------------------------------\n.expect|xwiki/2.0\n.#-----------------------------------------------------\n[[Space.ExistingPage||param1=\"value1\" param2=\"value2\"]]\n[[label>>Space.UnknownPage||param=\"value\"]]\n.#-----------------------------------------------------\n.input|xhtml/1.0\n.#-----------------------------------------------------\n<p><!--startwikilink:false|-|doc|-|Space.ExistingPage--><span class=\"wikilink\"><a data-xwiki-translated-attribute-param1=\"value1\" data-xwiki-translated-attribute-param2=\"value2\" href=\"viewurl\"><span class=\"wikigeneratedlinkcontent\">Space.ExistingPage</span></a></span><!--stopwikilink--><br/><!--startwikilink:false|-|doc|-|Space.UnknownPage--><span class=\"wikicreatelink\"><a data-xwiki-translated-attribute-param=\"value\" href=\"editurl\">label</a></span><!--stopwikilink--></p>", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Renderer that generates XHTML from a XDOM resulting from the parsing of text containing HTML mixed with wiki syntax.\n *\n * @version $Id$\n * @since 1.8.3\n */\n@Component\n@Named(\"xhtmlmacro/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroXHTMLRenderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new XHTMLChainingRenderer(this.linkRenderer, this.imageRenderer, this.htmlElementSanitizer,\n            getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html.renderers.annotatedhtml5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.macro.html.AbstractHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.html5.AnnotatedHTML5ChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Renderer that generates Annotated HTML5 from a XDOM resulting from the parsing of text containing HTML mixed with\n * wiki syntax.\n *\n * @version $Id$\n * @since 11.4RC1\n */\n@Component\n@Named(\"htmlmacro+annotatedhtml/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroAnnotatedHTML5Renderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new AnnotatedHTML5ChainingRenderer(this.linkRenderer, this.imageRenderer, this.htmlElementSanitizer,\n            getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html.renderers.annotatedxhtml;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.macro.html.AbstractHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.AnnotatedXHTMLChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Renderer that generates Annotated XHTML from a XDOM resulting from the parsing of text containing HTML mixed with\n * wiki syntax.\n *\n * @version $Id$\n * @since 11.4RC1\n */\n@Component\n@Named(\"htmlmacro+annotatedxhtml/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroAnnotatedXHTMLRenderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new AnnotatedXHTMLChainingRenderer(this.linkRenderer, this.imageRenderer, this.htmlElementSanitizer,\n            getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.macro.html.renderers.html5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.rendering.internal.macro.html.AbstractHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.html5.HTML5ChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Renderer that generates HTML5 from a XDOM resulting from the parsing of text containing HTML mixed with\n * wiki syntax.\n *\n * @version $Id$\n * @since 11.4RC1\n */\n@Component\n@Named(\"htmlmacro+html/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTMLMacroHTML5Renderer extends AbstractHTMLMacroRenderer\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    protected AbstractChainingPrintRenderer getSyntaxRenderer()\n    {\n        return new HTML5ChainingRenderer(this.linkRenderer, this.imageRenderer, this.htmlElementSanitizer,\n            getListenerChain());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLMacroRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLMetaDataRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Convert listener events to annotated HTML5. See {@link AnnotatedHTML5Renderer} for more details on what Annotated\n * HTML5 is.\n *\n * @version $Id$\n * @since 6.4M3\n */\npublic class AnnotatedHTML5ChainingRenderer extends HTML5ChainingRenderer\n{\n    /**\n     * Renders a Macro definition into Annotated XHTML.\n     */\n    private final XHTMLMacroRenderer macroRenderer;\n\n    /**\n     * Renders metadata into Annotated XHTML.\n     */\n    private final XHTMLMetaDataRenderer metaDataRenderer;\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because link\n     *            rendering depends on how the underlying system wants to handle it. For example for XWiki we check if\n     *            the document exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable because\n     *            image rendering depends on how the underlying system wants to handle it. For example for XWiki we\n     *            check if the image exists as a document attachments, we get its URL, etc.\n     * @param htmlElementSanitizer the HTML element sanitizer to use\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public AnnotatedHTML5ChainingRenderer(XHTMLLinkRenderer linkRenderer,\n            XHTMLImageRenderer imageRenderer, HTMLElementSanitizer htmlElementSanitizer, ListenerChain listenerChain)\n    {\n        super(linkRenderer, imageRenderer, htmlElementSanitizer, listenerChain);\n\n        this.macroRenderer = new XHTMLMacroRenderer();\n\n        this.metaDataRenderer = new XHTMLMetaDataRenderer();\n    }\n\n    @Override\n    public void onMacro(String id, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.render(getXHTMLWikiPrinter(), id, parameters, content);\n    }\n\n    @Override\n    public void beginMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.beginRender(getXHTMLWikiPrinter(), name, parameters, content);\n    }\n\n    @Override\n    public void endMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.endRender(getXHTMLWikiPrinter());\n    }\n\n    /**\n     * {@inheritDoc}\n     * @since 14.0RC1\n     */\n    @Override\n    public void beginMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.beginRender(getXHTMLWikiPrinter(), getBlockState().isInLine(), metadata);\n    }\n\n    /**\n     * {@inheritDoc}\n     * @since 14.0RC1\n     */\n    @Override\n    public void endMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.endRender(getXHTMLWikiPrinter(), getBlockState().isInLine());\n    }\n\n    /**\n     * Start of a figure caption.\n     *\n     * Only rendered as &lt;figcaption&gt; tag when the parent event is a figure event.\n     *\n     * @param parameters a generic list of parameters for the figure\n     * @since 14.0RC1\n     */\n    @Override\n    public void beginFigureCaption(Map<String, String> parameters)\n    {\n        if (this.getBlockState().getParentEvent() == BlockStateChainingListener.Event.FIGURE) {\n            super.beginFigureCaption(parameters);\n        }\n    }\n\n    /**\n     * End of a figure caption.\n     *\n     * Only rendered as &lt;/figcaption&gt;-tag when the parent event is a figure event.\n     *\n     * @param parameters a generic list of parameters for the figure\n     * @since 14.0RC1\n     */\n    @Override\n    public void endFigureCaption(Map<String, String> parameters)\n    {\n        if (this.getBlockState().getParentEvent() == BlockStateChainingListener.Event.FIGURE) {\n            super.endFigureCaption(parameters);\n        }\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Generates Annotated HTML5 (ie HTML5 containing metadata information, for example macro definition or\n * link definition) from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n * The annotations allow initial source content to be fully reconstructed from the generated HTML5. This is required\n * for example for doing round tripping between wiki syntax and HTML5 syntax in the WYSIWYG editor.\n *\n * @version $Id$\n * @since 6.4M3\n */\n@Component\n@Named(\"annotatedhtml/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class AnnotatedHTML5Renderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into annotated XHTML. This is done so that it's pluggable because link rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the document exists, we get\n     * the document URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into annotated XHTML. This is done so that it's pluggable because image rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the image exists as a\n     * document attachments, we get its URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new AnnotatedHTML5ChainingRenderer(this.linkRenderer, this.imageRenderer,\n            this.htmlElementSanitizer, chain));\n    }\n}\n", "<p><span data-xwiki-translated-attribute-a=\"b\" class=\"monospace\">monospace</span></p>", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Convert listener events to annotated XHTML. See {@link AnnotatedXHTMLChainingRenderer} for more details on\n * what Annotated XHTML is.\n *\n * @version $Id$\n * @since 2.0M2\n */\npublic class AnnotatedXHTMLChainingRenderer extends XHTMLChainingRenderer\n{\n    /**\n     * Renders a Macro definition into Annotated XHTML.\n     */\n    private final XHTMLMacroRenderer macroRenderer;\n\n    /**\n     * Renders metadata into Annotated XHTML.\n     */\n    private final XHTMLMetaDataRenderer metaDataRenderer;\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because link\n     *            rendering depends on how the underlying system wants to handle it. For example for XWiki we check if\n     *            the document exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable because\n     *            image rendering depends on how the underlying system wants to handle it. For example for XWiki we\n     *            check if the image exists as a document attachments, we get its URL, etc.\n     * @param htmlElementSanitizer the sanitizer to use for sanitizing HTML elements and attributes\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public AnnotatedXHTMLChainingRenderer(XHTMLLinkRenderer linkRenderer,\n        XHTMLImageRenderer imageRenderer, HTMLElementSanitizer htmlElementSanitizer, ListenerChain listenerChain)\n    {\n        super(linkRenderer, imageRenderer, htmlElementSanitizer, listenerChain);\n\n        this.macroRenderer = new XHTMLMacroRenderer();\n\n        this.metaDataRenderer = new XHTMLMetaDataRenderer();\n    }\n\n    @Override\n    public void onMacro(String id, Map<String, String> parameters, String content, boolean inline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.render(getXHTMLWikiPrinter(), id, parameters, content);\n    }\n\n    @Override\n    public void beginMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.beginRender(getXHTMLWikiPrinter(), name, parameters, content);\n    }\n\n    @Override\n    public void endMacroMarker(String name, Map<String, String> parameters, String content, boolean isInline)\n    {\n        // Do not do any rendering but we still need to save the macro definition in some hidden XHTML\n        // so that the macro can be reconstructed when moving back from XHTML to XDOM.\n        this.macroRenderer.endRender(getXHTMLWikiPrinter());\n    }\n\n    @Override\n    public void beginMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.beginRender(getXHTMLWikiPrinter(), getBlockState().isInLine(), metadata);\n    }\n\n    @Override\n    public void endMetaData(MetaData metadata)\n    {\n        this.metaDataRenderer.endRender(getXHTMLWikiPrinter(), getBlockState().isInLine());\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Generates Annotated XHTML (ie XHTML containing metadata information, for example macro definition or\n * link definition) from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n * The annotations allow initial source content to be fully reconstructed from the generated XHTML. This is required\n * for example for doing round tripping between wiki syntax and XHTML syntax in the WYSIWYG editor.\n *\n * @version $Id$\n * @since 2.0M3\n */\n@Component\n@Named(\"annotatedxhtml/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class AnnotatedXHTMLRenderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into annotated XHTML. This is done so that it's pluggable because link rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the document exists, we get\n     * the document URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into annotated XHTML. This is done so that it's pluggable because image rendering depends\n     * on how the underlying system wants to handle it. For example for XWiki we check if the image exists as a\n     * document attachments, we get its URL, etc.\n     */\n    @Inject\n    @Named(\"annotated\")\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new AnnotatedXHTMLChainingRenderer(this.linkRenderer, this.imageRenderer,\n            this.htmlElementSanitizer, chain));\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport java.util.HashMap;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.XHTMLChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.Format;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Convert listener events to HTML5.\n *\n * @version $Id$\n * @since 6.4M3\n */\npublic class HTML5ChainingRenderer extends XHTMLChainingRenderer\n{\n    private static final String ELEM_SPAN = \"span\";\n\n    private static final String ELEM_PRE = \"pre\";\n\n    private static final String PROP_CLASS = \"class\";\n\n    private static final String FIGURE_TAG = \"figure\";\n\n    private static final String FIGURE_CAPTION_TAG = \"figcaption\";\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because link\n     * rendering depends on how the underlying system wants to handle it. For example for XWiki we check if the document\n     * exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable because\n     * image rendering depends on how the underlying system wants to handle it. For example for XWiki we check if the\n     * image exists as a document attachments, we get its URL, etc.\n     * @param htmlElementSanitizer the sanitizer to use for sanitizing HTML elements and attributes\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public HTML5ChainingRenderer(XHTMLLinkRenderer linkRenderer,\n            XHTMLImageRenderer imageRenderer, HTMLElementSanitizer htmlElementSanitizer,\n            ListenerChain listenerChain)\n    {\n        super(linkRenderer, imageRenderer, htmlElementSanitizer, listenerChain);\n    }\n\n    @Override\n    public void beginFormat(Format format, Map<String, String> parameters)\n    {\n        // Right now, the only difference with the super class is about the \"monospace\" format\n        if (format == Format.MONOSPACE) {\n            Map<String, String> attributes = new LinkedHashMap<>(parameters);\n            String cssClass = \"monospace\";\n            // The element may already have a class\n            if (attributes.containsKey(PROP_CLASS)) {\n                cssClass = String.format(\"%s %s\", cssClass, attributes.get(PROP_CLASS));\n            }\n            attributes.put(PROP_CLASS, cssClass);\n            getXHTMLWikiPrinter().printXMLStartElement(ELEM_SPAN, attributes);\n        } else {\n            // Call the super class\n            super.beginFormat(format, parameters);\n        }\n\n    }\n\n    @Override\n    public void endFormat(Format format, Map<String, String> parameters)\n    {\n        if (!parameters.isEmpty()) {\n            getXHTMLWikiPrinter().printXMLEndElement(ELEM_SPAN);\n        }\n        // Right now, the only difference with the super class is about the \"monospace\" format\n        if (format == Format.MONOSPACE) {\n            if (parameters.isEmpty()) {\n                // if the parameters are not empty, the span element has already been closed\n                getXHTMLWikiPrinter().printXMLEndElement(ELEM_SPAN);\n            }\n        } else {\n            // Call the super class, with an empty parameters map to avoid closing the span element twice\n            super.endFormat(format, new HashMap<String, String>());\n        }\n    }\n\n    @Override\n    public void onVerbatim(String content, boolean inline, Map<String, String> parameters)\n    {\n        if (inline) {\n            // Note: We generate a span element rather than a pre element since pre elements cannot be located inside\n            // paragraphs for example.\n            // The class is what is expected by wikimodel to understand the span as meaning a verbatim and not a\n            // Monospace element.\n            getXHTMLWikiPrinter().printXMLStartElement(ELEM_SPAN,\n                new String[][] { { PROP_CLASS, \"wikimodel-verbatim\" } });\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(ELEM_SPAN);\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(ELEM_PRE, parameters);\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(ELEM_PRE);\n        }\n    }\n\n    @Override\n    public void beginFigure(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(FIGURE_TAG, parameters);\n    }\n\n    @Override\n    public void beginFigureCaption(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(FIGURE_CAPTION_TAG, parameters);\n    }\n\n    @Override\n    public void endFigure(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(FIGURE_TAG);\n    }\n\n    @Override\n    public void endFigureCaption(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(FIGURE_CAPTION_TAG);\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.html5;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Generates HTML5 from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n *\n * @version $Id$\n * @since 6.4M3\n */\n@Component\n@Named(\"html/5.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class HTML5Renderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new HTML5ChainingRenderer(this.linkRenderer, this.imageRenderer, this.htmlElementSanitizer,\n            chain));\n    }\n}\n\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.html5;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.xwiki.rendering.internal.renderer.html5.HTML5ChainingRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.Format;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.renderer.printer.DefaultWikiPrinter;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.mockito.Mockito.mock;\n\n/**\n * Test class for {@link org.xwiki.rendering.internal.renderer.html5.HTML5ChainingRenderer}.\n *  \n * @version $Id$\n * @since 7.1M1\n */\npublic class HTML5ChainingRendererTest\n{\n    private XHTMLLinkRenderer linkRenderer;\n    \n    private XHTMLImageRenderer imageRenderer;\n    \n    private ListenerChain listenerChain;\n    \n    private HTML5ChainingRenderer chainingRenderer;\n    \n    private DefaultWikiPrinter printer;\n\n    @Before\n    public void setUp() throws Exception\n    {\n        linkRenderer = mock(XHTMLLinkRenderer.class);\n        imageRenderer = mock(XHTMLImageRenderer.class);\n        listenerChain = new ListenerChain();\n        chainingRenderer = new HTML5ChainingRenderer(linkRenderer, imageRenderer, null, listenerChain);\n        printer = new DefaultWikiPrinter();\n        chainingRenderer.setPrinter(printer);\n    }\n    \n    @Test\n    public void testWithoutMonospace() throws Exception\n    {   \n        Map<String, String> parameters = new HashMap<>();\n        chainingRenderer.beginFormat(Format.BOLD, parameters);\n        chainingRenderer.onWord(\"hello\");\n        chainingRenderer.endFormat(Format.BOLD, parameters);\n        assertEquals(\"<strong>hello</strong>\", printer.toString());\n    }\n\n    @Test\n    public void testWithMonospace() throws Exception\n    {\n        Map<String, String> parameters = new HashMap<>();\n        chainingRenderer.beginFormat(Format.MONOSPACE, parameters);\n        chainingRenderer.onWord(\"hello\");\n        chainingRenderer.endFormat(Format.MONOSPACE, parameters);\n        assertEquals(\"<span class=\\\"monospace\\\">hello</span>\", printer.toString());\n    }\n\n    @Test\n    public void testWithMonospaceAndParameters() throws Exception\n    {\n        Map<String, String> parameters = new HashMap<>();\n        parameters.put(\"class\", \"myClass\");\n        chainingRenderer.beginFormat(Format.MONOSPACE, parameters);\n        chainingRenderer.onWord(\"hello\");\n        chainingRenderer.endFormat(Format.MONOSPACE, parameters);\n        assertEquals(\"<span class=\\\"monospace myClass\\\">hello</span>\", printer.toString());\n    }\n    \n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.parser.xhtml.wikimodel;\n\nimport java.util.LinkedHashMap;\nimport java.util.Map;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport org.apache.commons.lang3.tuple.ImmutablePair;\nimport org.apache.commons.lang3.tuple.Pair;\nimport org.xwiki.rendering.internal.parser.wikimodel.DefaultXWikiGeneratorListener;\nimport org.xwiki.rendering.listener.Listener;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.reference.ResourceReference;\nimport org.xwiki.rendering.listener.reference.ResourceType;\nimport org.xwiki.rendering.parser.ResourceReferenceParser;\nimport org.xwiki.rendering.parser.StreamParser;\nimport org.xwiki.rendering.renderer.PrintRendererFactory;\nimport org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter;\nimport org.xwiki.rendering.syntax.Syntax;\nimport org.xwiki.rendering.util.IdGenerator;\nimport org.xwiki.rendering.wikimodel.WikiFormat;\nimport org.xwiki.rendering.wikimodel.WikiParameter;\nimport org.xwiki.rendering.wikimodel.WikiParameters;\nimport org.xwiki.rendering.wikimodel.WikiReference;\n\n/**\n * WikiModel listener bridge for the XHTML Syntax.\n *\n * @version $Id$\n * @since 2.5RC1\n */\npublic class XHTMLXWikiGeneratorListener extends DefaultXWikiGeneratorListener\n{\n    /**\n     * Defines the class to use when an element represents a MetaData block.\n     *\n     * @since 10.9\n     */\n    public static final String METADATA_CONTAINER_CLASS = \"xwiki-metadata-container\";\n\n    /**\n     * Defines the prefix to use for attribute which contain a metadata.\n     *\n     * @since 10.9\n     */\n    public static final String METADATA_ATTRIBUTE_PREFIX = \"data-xwiki-\";\n\n    /**\n     * URL matching pattern.\n     */\n    private static final Pattern URL_SCHEME_PATTERN = Pattern.compile(\"[a-zA-Z0-9+.-]*://\");\n\n    /**\n     * Prefix for mailto-links.\n     */\n    private static final String MAILTO_PREFIX = \"mailto:\";\n\n    private static final String CLASS_ATTRIBUTE = \"class\";\n\n    /**\n     * @param parser the parser to use to parse link labels\n     * @param listener the XWiki listener to which to forward WikiModel events\n     * @param linkReferenceParser the parser to parse link references\n     * @param imageReferenceParser the parser to parse image references\n     * @param plainRendererFactory used to generate header ids\n     * @param idGenerator used to generate header ids\n     * @param syntax the syntax of the parsed source\n     * @since 3.0M3\n     */\n    public XHTMLXWikiGeneratorListener(StreamParser parser, Listener listener,\n        ResourceReferenceParser linkReferenceParser, ResourceReferenceParser imageReferenceParser,\n        PrintRendererFactory plainRendererFactory, IdGenerator idGenerator, Syntax syntax)\n    {\n        super(parser, listener, linkReferenceParser, imageReferenceParser, plainRendererFactory, idGenerator, syntax);\n    }\n\n    @Override\n    public void onReference(WikiReference reference)\n    {\n        // We need to handle 2 cases:\n        // - when the passed reference is an instance of XWikiWikiReference, i.e. when a XHTML comment defining a XWiki\n        // link has been specified and the XHTML parser has recognized it and thus is passing a typed reference to us.\n        // - when the passed reference is not an instance of XWikiWikiReference which will happen if there's no special\n        // XHTML comment defining a XWiki link. In this case, we need to figure out what how to consider the passed\n        // reference.\n\n        ResourceReference resourceReference;\n        boolean isFreeStanding;\n        if (!(reference instanceof XWikiWikiReference)) {\n            resourceReference = computeResourceReference(reference.getLink());\n            isFreeStanding = false;\n        } else {\n            XWikiWikiReference xwikiReference = (XWikiWikiReference) reference;\n            resourceReference = xwikiReference.getReference();\n            isFreeStanding = xwikiReference.isFreeStanding();\n\n            flushFormat();\n        }\n\n        // Consider query string and anchor as ResourceReference parameters and the rest as generic parameters\n        Pair<Map<String, String>, Map<String, String>> parameters =\n            convertAndSeparateParameters(reference.getParameters());\n\n        resourceReference.setParameters(parameters.getLeft());\n        onReference(resourceReference, reference.getLabel(), isFreeStanding, parameters.getRight(), false);\n    }\n\n    @Override\n    public void onImage(WikiReference reference)\n    {\n        // We need to handle 2 cases:\n        // - when the passed reference is an instance of XWikiWikiReference, i.e. when a XHTML comment defining a XWiki\n        // image has been specified\n        // - when the passed reference is not an instance of XWikiWikiReference which will happen if there's no special\n        // XHTML comment defining a XWiki image\n        if (!(reference instanceof XWikiWikiReference)) {\n            super.onImage(reference);\n        } else {\n            XWikiWikiReference xwikiReference = (XWikiWikiReference) reference;\n            ResourceReference resourceReference = xwikiReference.getReference();\n\n            flushFormat();\n\n            onImage(resourceReference, xwikiReference.isFreeStanding(),\n                convertParameters(xwikiReference.getParameters()));\n        }\n    }\n\n    /**\n     * Recognize the passed reference and figure out what type of link it should be:\n     * <ul>\n     *   <li>UC1: the reference points to a valid URL, we return a reference of type \"url\",\n     *       e.g. {@code http://server/path/reference#anchor}</li>\n     *   <li>UC2: the reference is a mailto: link, we return a reference of type \"mailto\",\n     *       e.g., {@code mailto:user@example.com}</li>\n     *   <li>UC3: the reference is not a valid URL, we return a reference of type \"path\",\n     *       e.g. {@code path/reference#anchor}</li>\n     * </ul>\n     *\n     * @param rawReference the full reference (e.g. \"/some/path/something#other\")\n     * @return the properly typed {@link ResourceReference} matching the use cases\n     */\n    private ResourceReference computeResourceReference(String rawReference)\n    {\n        ResourceReference reference;\n\n        // Do we have a valid URL?\n        Matcher matcher = URL_SCHEME_PATTERN.matcher(rawReference);\n        if (matcher.lookingAt()) {\n            // We have UC1\n            reference = new ResourceReference(rawReference, ResourceType.URL);\n        } else if (rawReference.startsWith(MAILTO_PREFIX)) {\n            // We have UC2\n            reference = new ResourceReference(rawReference.substring(MAILTO_PREFIX.length()), ResourceType.MAILTO);\n        } else {\n            // We have UC3\n            reference = new ResourceReference(rawReference, ResourceType.PATH);\n        }\n\n        return reference;\n    }\n\n    static boolean isMetaDataElement(WikiParameters parameters)\n    {\n        return parameters.getParameter(CLASS_ATTRIBUTE) != null\n            && METADATA_CONTAINER_CLASS.equals(parameters.getParameter(CLASS_ATTRIBUTE).getValue());\n    }\n\n    static MetaData createMetaData(WikiParameters parameters)\n    {\n        MetaData metaData = new MetaData();\n\n        int prefixSize = METADATA_ATTRIBUTE_PREFIX.length();\n        for (WikiParameter parameter : parameters) {\n            if (parameter.getKey().startsWith(METADATA_ATTRIBUTE_PREFIX)) {\n                String metaDataKey = parameter.getKey().substring(prefixSize).toLowerCase();\n                metaData.addMetaData(metaDataKey, parameter.getValue());\n            }\n        }\n\n        return metaData;\n    }\n\n    private static WikiParameters cleanParametersFromMetadata(WikiParameters parameters)\n    {\n        WikiParameters wikiParameters = new WikiParameters();\n\n        for (WikiParameter parameter : parameters) {\n            boolean acceptParameter = !(parameter.getKey().startsWith(METADATA_ATTRIBUTE_PREFIX)\n                || (\n                parameter.getKey().equals(CLASS_ATTRIBUTE) && parameter.getValue().equals(METADATA_CONTAINER_CLASS)\n            ));\n            if (acceptParameter) {\n                wikiParameters = wikiParameters.addParameter(parameter.getKey(), parameter.getValue());\n            }\n        }\n\n        return wikiParameters;\n    }\n\n    @Override\n    protected void beginGroup(WikiParameters parameters)\n    {\n        if (isMetaDataElement(parameters)) {\n            MetaData metaData = createMetaData(parameters);\n            getListener().beginMetaData(metaData);\n\n            WikiParameters cleanParameters = cleanParametersFromMetadata(parameters);\n            if (cleanParameters.getSize() > 0) {\n                super.beginGroup(cleanParameters);\n            }\n        } else {\n            super.beginGroup(parameters);\n        }\n    }\n\n    @Override\n    protected void endGroup(WikiParameters parameters)\n    {\n        if (isMetaDataElement(parameters)) {\n            MetaData metaData = createMetaData(parameters);\n            getListener().endMetaData(metaData);\n\n            WikiParameters cleanParameters = cleanParametersFromMetadata(parameters);\n            if (cleanParameters.getSize() > 0) {\n                super.endGroup(cleanParameters);\n            }\n        } else {\n            super.endGroup(parameters);\n        }\n    }\n\n    @Override\n    public void beginFormat(WikiFormat format)\n    {\n        WikiParameters wikiParameters = new WikiParameters(format.getParams());\n\n        if (isMetaDataElement(wikiParameters)) {\n            getListener().beginMetaData(createMetaData(wikiParameters));\n            WikiParameters cleanParameters = cleanParametersFromMetadata(wikiParameters);\n            if (cleanParameters.getSize() > 0 || !format.getStyles().isEmpty()) {\n                WikiFormat newFormat = format;\n                if (wikiParameters.getSize() != cleanParameters.getSize()) {\n                    newFormat = format.setParameters(cleanParameters.toList());\n                }\n\n                super.beginFormat(newFormat);\n            }\n        } else {\n            super.beginFormat(format);\n        }\n    }\n\n    @Override\n    public void endFormat(WikiFormat format)\n    {\n        WikiParameters wikiParameters = new WikiParameters(format.getParams());\n\n        if (isMetaDataElement(wikiParameters)) {\n            getListener().endMetaData(createMetaData(wikiParameters));\n\n            WikiParameters cleanParameters = cleanParametersFromMetadata(wikiParameters);\n            if (cleanParameters.getSize() > 0 || !format.getStyles().isEmpty()) {\n                WikiFormat newFormat = format;\n                if (wikiParameters.getSize() != cleanParameters.getSize()) {\n                    newFormat = format.setParameters(cleanParameters.toList());\n                }\n\n                super.endFormat(newFormat);\n            }\n        } else {\n            super.endFormat(format);\n        }\n    }\n\n    @Override\n    protected Map<String, String> convertParameters(WikiParameters params)\n    {\n        return maybeRemoveAttributePrefix(super.convertParameters(params));\n    }\n\n    @Override\n    protected Pair<Map<String, String>, Map<String, String>> convertAndSeparateParameters(WikiParameters params)\n    {\n        Pair<Map<String, String>, Map<String, String>> result = super.convertAndSeparateParameters(params);\n        Map<String, String> genericParameters = result.getRight();\n\n        if (!genericParameters.isEmpty()) {\n            genericParameters = maybeRemoveAttributePrefix(genericParameters);\n        }\n\n        return new ImmutablePair<>(result.getLeft(), genericParameters);\n    }\n\n    private Map<String, String> maybeRemoveAttributePrefix(Map<String, String> attributes)\n    {\n        Map<String, String> result;\n\n        if (!attributes.isEmpty()) {\n            result = new LinkedHashMap<>();\n\n            for (Map.Entry<String, String> entry : attributes.entrySet()) {\n                String newKey;\n                if (entry.getKey().startsWith(XHTMLWikiPrinter.TRANSLATED_ATTRIBUTE_PREFIX)) {\n                    newKey = entry.getKey().substring(XHTMLWikiPrinter.TRANSLATED_ATTRIBUTE_PREFIX.length());\n                } else {\n                    newKey = entry.getKey();\n                }\n\n                result.put(newKey, entry.getValue());\n            }\n        } else {\n            result = attributes;\n        }\n\n        return result;\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.Format;\nimport org.xwiki.rendering.listener.HeaderLevel;\nimport org.xwiki.rendering.listener.ListType;\nimport org.xwiki.rendering.listener.MetaData;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener.Event;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.listener.reference.ResourceReference;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.rendering.renderer.printer.WikiPrinter;\nimport org.xwiki.rendering.renderer.printer.XHTMLWikiPrinter;\nimport org.xwiki.rendering.syntax.Syntax;\nimport org.xwiki.rendering.syntax.SyntaxType;\nimport org.xwiki.xml.html.HTMLConstants;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Convert listener events to XHTML.\n *\n * @version $Id$\n * @since 1.8RC1\n */\npublic class XHTMLChainingRenderer extends AbstractChainingPrintRenderer\n{\n    /**\n     * Class attribute value that indicates if the header was generated by a macro.\n     */\n    public static final String GENERATEDHEADERCLASS = \"wikigeneratedheader\";\n\n    /**\n     * Class attribute value that indicates if the header id attribute was generated automatically or if it was the user\n     * who specified an id.\n     */\n    public static final String GENERATEDIDCLASS = \"wikigeneratedid\";\n\n    private XHTMLLinkRenderer linkRenderer;\n\n    private XHTMLImageRenderer imageRenderer;\n\n    private final HTMLElementSanitizer htmlElementSanitizer;\n\n    private XHTMLWikiPrinter xhtmlWikiPrinter;\n\n    /**\n     * @param linkRenderer the object to render link events into XHTML. This is done so that it's pluggable because\n     *     link rendering depends on how the underlying system wants to handle it. For example for XWiki we check if the\n     *     document exists, we get the document URL, etc.\n     * @param imageRenderer the object to render image events into XHTML. This is done so that it's pluggable\n     *     because image rendering depends on how the underlying system wants to handle it. For example for XWiki we\n     *     check if the image exists as a document attachments, we get its URL, etc.\n     * @param htmlElementSanitizer the sanitizer for XHTML elements\n     * @param listenerChain the chain of listener filters used to compute various states\n     */\n    public XHTMLChainingRenderer(XHTMLLinkRenderer linkRenderer, XHTMLImageRenderer imageRenderer,\n        HTMLElementSanitizer htmlElementSanitizer, ListenerChain listenerChain)\n    {\n        setListenerChain(listenerChain);\n\n        this.linkRenderer = linkRenderer;\n        this.imageRenderer = imageRenderer;\n        this.htmlElementSanitizer = htmlElementSanitizer;\n    }\n\n    // State\n\n    protected BlockStateChainingListener getBlockState()\n    {\n        return (BlockStateChainingListener) getListenerChain().getListener(BlockStateChainingListener.class);\n    }\n\n    protected EmptyBlockChainingListener getEmptyBlockState()\n    {\n        return (EmptyBlockChainingListener) getListenerChain().getListener(EmptyBlockChainingListener.class);\n    }\n\n    protected MetaDataStateChainingListener getMetaDataState()\n    {\n        return (MetaDataStateChainingListener) getListenerChain().getListener(MetaDataStateChainingListener.class);\n    }\n\n    // Printer\n\n    @Override\n    protected void pushPrinter(WikiPrinter wikiPrinter)\n    {\n        super.pushPrinter(wikiPrinter);\n        getXHTMLWikiPrinter().setWikiPrinter(getPrinter());\n    }\n\n    @Override\n    protected void popPrinter()\n    {\n        super.popPrinter();\n        getXHTMLWikiPrinter().setWikiPrinter(getPrinter());\n    }\n\n    protected XHTMLWikiPrinter getXHTMLWikiPrinter()\n    {\n        if (this.xhtmlWikiPrinter == null) {\n            this.xhtmlWikiPrinter = new XHTMLWikiPrinter(getPrinter(), getHtmlElementSanitizer());\n        }\n        return this.xhtmlWikiPrinter;\n    }\n\n    protected HTMLElementSanitizer getHtmlElementSanitizer()\n    {\n        return this.htmlElementSanitizer;\n    }\n\n    // Events\n\n    @Override\n    public void beginGroup(Map<String, String> parameters)\n    {\n        Map<String, String> clonedParameters = new LinkedHashMap<String, String>();\n        clonedParameters.putAll(parameters);\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"div\", clonedParameters);\n    }\n\n    @Override\n    public void endGroup(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"div\");\n    }\n\n    @Override\n    public void beginFormat(Format format, Map<String, String> parameters)\n    {\n        switch (format) {\n            case BOLD:\n                getXHTMLWikiPrinter().printXMLStartElement(\"strong\");\n                break;\n            case ITALIC:\n                getXHTMLWikiPrinter().printXMLStartElement(\"em\");\n                break;\n            case STRIKEDOUT:\n                getXHTMLWikiPrinter().printXMLStartElement(\"del\");\n                break;\n            case UNDERLINED:\n                getXHTMLWikiPrinter().printXMLStartElement(\"ins\");\n                break;\n            case SUPERSCRIPT:\n                getXHTMLWikiPrinter().printXMLStartElement(\"sup\");\n                break;\n            case SUBSCRIPT:\n                getXHTMLWikiPrinter().printXMLStartElement(\"sub\");\n                break;\n            case MONOSPACE:\n                getXHTMLWikiPrinter().printXMLStartElement(\"tt\");\n                break;\n            case NONE:\n                break;\n            // Unsupported format\n            default:\n                break;\n        }\n        if (!parameters.isEmpty()) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"span\", parameters);\n        }\n    }\n\n    @Override\n    public void endFormat(Format format, Map<String, String> parameters)\n    {\n        if (!parameters.isEmpty()) {\n            getXHTMLWikiPrinter().printXMLEndElement(\"span\");\n        }\n        switch (format) {\n            case BOLD:\n                getXHTMLWikiPrinter().printXMLEndElement(\"strong\");\n                break;\n            case ITALIC:\n                getXHTMLWikiPrinter().printXMLEndElement(\"em\");\n                break;\n            case STRIKEDOUT:\n                getXHTMLWikiPrinter().printXMLEndElement(\"del\");\n                break;\n            case UNDERLINED:\n                getXHTMLWikiPrinter().printXMLEndElement(\"ins\");\n                break;\n            case SUPERSCRIPT:\n                getXHTMLWikiPrinter().printXMLEndElement(\"sup\");\n                break;\n            case SUBSCRIPT:\n                getXHTMLWikiPrinter().printXMLEndElement(\"sub\");\n                break;\n            case MONOSPACE:\n                getXHTMLWikiPrinter().printXMLEndElement(\"tt\");\n                break;\n            case NONE:\n                break;\n            // Unsupported format\n            default:\n                break;\n        }\n    }\n\n    @Override\n    public void beginParagraph(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"p\", parameters);\n    }\n\n    @Override\n    public void endParagraph(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"p\");\n    }\n\n    @Override\n    public void onNewLine()\n    {\n        getXHTMLWikiPrinter().printXMLElement(\"br\");\n    }\n\n    @Override\n    public void beginLink(ResourceReference reference, boolean freestanding, Map<String, String> parameters)\n    {\n        // Ensure the link renderer is using the latest printer since the original printer used could have been\n        // superseded by another one in the printer stack.\n        this.linkRenderer.setXHTMLWikiPrinter(getXHTMLWikiPrinter());\n\n        // If the ResourceReference doesn't have a base reference specified, then look for one in previously sent\n        // events (it's sent in begin/endMetaData events).\n        List<String> baseReferences = reference.getBaseReferences();\n        if (baseReferences.isEmpty()) {\n            reference.addBaseReferences(getMetaDataState().<String>getAllMetaData(MetaData.BASE));\n        }\n\n        this.linkRenderer.beginLink(reference, freestanding, parameters);\n    }\n\n    @Override\n    public void endLink(ResourceReference reference, boolean freestanding, Map<String, String> parameters)\n    {\n        this.linkRenderer.setHasLabel(!getEmptyBlockState().isCurrentContainerBlockEmpty());\n        this.linkRenderer.endLink(reference, freestanding, parameters);\n    }\n\n    @Override\n    public void beginHeader(HeaderLevel level, String id, Map<String, String> parameters)\n    {\n        Map<String, String> attributes = new LinkedHashMap<String, String>();\n\n        attributes.put(\"id\", id);\n\n        // Indicate that the id is generated. This is to differentiate from ids added as parameters.\n        // Note that we add this only if the user hasn't specified an id as an override in a parameter.\n        if (!parameters.containsKey(\"id\")) {\n            addClassValue(\"class\", GENERATEDIDCLASS, attributes);\n        }\n\n        attributes.putAll(parameters);\n\n        // Section editing feature:\n        // In order for the UI side to be able to add a section edit button we need to provide some information to it\n        // and especially we need to tell it if the header was a header generated by a macro or not. The reason is\n        // that macro-generated headers should not be editable by the user.\n        // TODO: In the future it's possible that we'll want this kind of behavior implemented using a Transformation.\n        // If we decide this then remove this code.\n        if (getBlockState().isInMacro()) {\n            addClassValue(\"class\", GENERATEDHEADERCLASS, attributes);\n        }\n\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"h\" + level.getAsInt(), attributes);\n        // We generate a span so that CSS rules have a hook to perform some magic that wouldn't work on just a H\n        // element. Like some IE6 magic and others.\n        getXHTMLWikiPrinter().printXMLStartElement(\"span\");\n    }\n\n    @Override\n    public void endHeader(HeaderLevel level, String id, Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"span\");\n        getXHTMLWikiPrinter().printXMLEndElement(\"h\" + level.getAsInt());\n    }\n\n    @Override\n    public void onWord(String word)\n    {\n        getXHTMLWikiPrinter().printXML(word);\n    }\n\n    @Override\n    public void onSpace()\n    {\n        // The XHTML printer will decide whether to print a normal space or a &nbsp;\n        getXHTMLWikiPrinter().printSpace();\n    }\n\n    @Override\n    public void onSpecialSymbol(char symbol)\n    {\n        getXHTMLWikiPrinter().printXML(String.valueOf(symbol));\n    }\n\n    @Override\n    public void beginList(ListType type, Map<String, String> parameters)\n    {\n        if (type == ListType.BULLETED) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"ul\", parameters);\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(\"ol\", parameters);\n        }\n    }\n\n    @Override\n    public void beginListItem()\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"li\");\n    }\n\n    @Override\n    public void beginListItem(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"li\", parameters);\n    }\n\n    @Override\n    public void endList(ListType type, Map<String, String> parameters)\n    {\n        if (type == ListType.BULLETED) {\n            getXHTMLWikiPrinter().printXMLEndElement(\"ul\");\n        } else {\n            getXHTMLWikiPrinter().printXMLEndElement(\"ol\");\n        }\n    }\n\n    @Override\n    public void endListItem()\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"li\");\n    }\n\n    @Override\n    public void endListItem(Map<String, String> parameters)\n    {\n        endListItem();\n    }\n\n    @Override\n    public void onId(String name)\n    {\n        // Don't use the \"name\" attribute (see http://www.w3.org/TR/html4/struct/links.html#h-12.2.3).\n        // If the id s in a paragraph use <span id=\"...\"> and if in a standalone block then use\n        // <div id=\"...\">.\n        if (getBlockState().isInLine()) {\n            // Note: We're using <span><span/> and not <span/> since some browsers do not support the\n            // <span/> syntax (FF3) when the content type is set to HTML instead of XHTML.\n            getXHTMLWikiPrinter().printXMLStartElement(\"span\", new String[][] { { \"id\", name } });\n            getXHTMLWikiPrinter().printXMLEndElement(\"span\");\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(\"div\", new String[][] { { \"id\", name } });\n            getXHTMLWikiPrinter().printXMLEndElement(\"div\");\n        }\n    }\n\n    @Override\n    public void onHorizontalLine(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLElement(\"hr\", parameters);\n    }\n\n    @Override\n    public void onVerbatim(String content, boolean inline, Map<String, String> parameters)\n    {\n        if (inline) {\n            // Note: We generate a tt element rather than a pre element since pre elements cannot be located inside\n            // paragraphs for example. There also no tag in XHTML that has a semantic of preserving inline content so\n            // tt is the closest to pre for inline.\n            // The class is what is expected by wikimodel to understand the tt as meaning a verbatim and not a Monospace\n            // element.\n            getXHTMLWikiPrinter().printXMLStartElement(\"tt\", new String[][] { { \"class\", \"wikimodel-verbatim\" } });\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(\"tt\");\n        } else {\n            getXHTMLWikiPrinter().printXMLStartElement(\"pre\", parameters);\n            getXHTMLWikiPrinter().printXML(content);\n            getXHTMLWikiPrinter().printXMLEndElement(\"pre\");\n        }\n    }\n\n    @Override\n    public void onEmptyLines(int count)\n    {\n        // We need to use a special tag for empty lines since in XHTML the BR tag cannot be used outside of content\n        // tags.\n        // Note: We're using <div><div/> and not <div/> since some browsers do not support the <div/> syntax (FF3)\n        // when the content type is set to HTML instead of XHTML.\n        for (int i = 0; i < count; ++i) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"div\", new String[][] { { \"class\", \"wikimodel-emptyline\" } });\n            getXHTMLWikiPrinter().printXMLEndElement(\"div\");\n        }\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @since 2.0RC1\n     */\n    @Override\n    public void beginDefinitionList(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"dl\", parameters);\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @since 2.0RC1\n     */\n    @Override\n    public void endDefinitionList(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"dl\");\n    }\n\n    @Override\n    public void beginDefinitionTerm()\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"dt\");\n    }\n\n    @Override\n    public void beginDefinitionDescription()\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"dd\");\n    }\n\n    @Override\n    public void endDefinitionTerm()\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"dt\");\n    }\n\n    @Override\n    public void endDefinitionDescription()\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"dd\");\n    }\n\n    @Override\n    public void beginQuotation(Map<String, String> parameters)\n    {\n        if (getBlockState().isInQuotationLine()) {\n            getXHTMLWikiPrinter().printXMLEndElement(\"p\");\n        }\n\n        getXHTMLWikiPrinter().printXMLStartElement(\"blockquote\", parameters);\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"p\");\n    }\n\n    @Override\n    public void endQuotation(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"p\");\n\n        getXHTMLWikiPrinter().printXMLEndElement(\"blockquote\");\n\n        if (getBlockState().isInQuotationLine()) {\n            getXHTMLWikiPrinter().printXMLStartElement(\"p\");\n        }\n    }\n\n    @Override\n    public void beginQuotationLine()\n    {\n        // Send a new line if the previous event was endQuotationLine since we need to separate each quotation line\n        // or they'll printed next to each other and not on a new line each.\n        if (getBlockState().isInQuotation() && getBlockState().getPreviousEvent() == Event.QUOTATION_LINE) {\n            onNewLine();\n        }\n    }\n\n    @Override\n    public void beginTable(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"table\", parameters);\n    }\n\n    @Override\n    public void beginTableRow(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLStartElement(\"tr\", parameters);\n    }\n\n    @Override\n    public void beginTableCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        getXHTMLWikiPrinter().printXMLStartElement(\"td\", parameters);\n    }\n\n    @Override\n    public void beginTableHeadCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().setStandalone();\n        // Find proper scope attribute value\n        Map<String, String> parametersWithScope;\n        if (!parameters.containsKey(\"scope\")) {\n            parametersWithScope = new LinkedHashMap<String, String>(parameters);\n\n            if (getBlockState().getCellRow() == 0 || getBlockState().getCellCol() > 0) {\n                parametersWithScope.put(\"scope\", \"col\");\n            } else {\n                parametersWithScope.put(\"scope\", \"row\");\n            }\n        } else {\n            parametersWithScope = parameters;\n        }\n\n        // Write th element\n        getXHTMLWikiPrinter().printXMLStartElement(\"th\", parametersWithScope);\n    }\n\n    @Override\n    public void endTable(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"table\");\n    }\n\n    @Override\n    public void endTableRow(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"tr\");\n    }\n\n    @Override\n    public void endTableCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"td\");\n    }\n\n    @Override\n    public void endTableHeadCell(Map<String, String> parameters)\n    {\n        getXHTMLWikiPrinter().printXMLEndElement(\"th\");\n    }\n\n    /**\n     * {@inheritDoc}\n     *\n     * @since 2.5RC1\n     */\n    @Override\n    public void onImage(ResourceReference reference, boolean freestanding, Map<String, String> parameters)\n    {\n        onImage(reference, freestanding, null, parameters);\n    }\n\n    @Override\n    public void onImage(ResourceReference reference, boolean freestanding, String id, Map<String, String> parameters)\n    {\n        // Ensure the image renderer is using the latest printer since the original printer used could have been\n        // superseded by another one in the printer stack.\n        this.imageRenderer.setXHTMLWikiPrinter(getXHTMLWikiPrinter());\n\n        // If the ResourceReference doesn't have a base reference specified, then look for one in previously sent\n        // events (it's sent in begin/endMetaData events).\n        List<String> baseReferences = reference.getBaseReferences();\n        if (baseReferences.isEmpty()) {\n            reference.addBaseReferences(getMetaDataState().getAllMetaData(MetaData.BASE));\n        }\n\n        this.imageRenderer.onImage(reference, freestanding, id, parameters);\n    }\n\n    @Override\n    public void onRawText(String text, Syntax syntax)\n    {\n        // Directly inject the HTML content in the wiki printer (bypassing the XHTML printer)\n        if (SyntaxType.HTML_FAMILY_TYPES.contains(syntax.getType())) {\n            getXHTMLWikiPrinter().printRaw(text);\n        }\n    }\n\n    @Override\n    public void beginFigureCaption(Map<String, String> parameters)\n    {\n        // We add a div to have some nice fallback (since <figure>/<figcaption> tags are not supported in XHTML 1.0).\n        Map<String, String> extendedParameters = new LinkedHashMap<>(parameters);\n        addClassValue(HTMLConstants.ATTRIBUTE_CLASS, \"figcaption\", extendedParameters);\n        getXHTMLWikiPrinter().printXMLStartElement(HTMLConstants.TAG_DIV, extendedParameters);\n    }\n\n    @Override\n    public void endFigureCaption(Map<String, String> parameters)\n    {\n        // See beginFigureCaption()\n        getXHTMLWikiPrinter().printXMLEndElement(HTMLConstants.TAG_DIV);\n    }\n\n    private void addClassValue(String classAttributeName, String newClassValue, Map<String, String> attributes)\n    {\n        String classValue = attributes.get(classAttributeName);\n        if (classValue == null) {\n            classValue = newClassValue;\n        } else {\n            classValue = classValue.trim() + \" \" + newClassValue;\n        }\n        attributes.put(classAttributeName, classValue);\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport javax.inject.Inject;\nimport javax.inject.Named;\n\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.component.annotation.InstantiationStrategy;\nimport org.xwiki.component.descriptor.ComponentInstantiationStrategy;\nimport org.xwiki.component.phase.Initializable;\nimport org.xwiki.component.phase.InitializationException;\nimport org.xwiki.rendering.internal.renderer.xhtml.image.XHTMLImageRenderer;\nimport org.xwiki.rendering.internal.renderer.xhtml.link.XHTMLLinkRenderer;\nimport org.xwiki.rendering.listener.chaining.BlockStateChainingListener;\nimport org.xwiki.rendering.listener.chaining.EmptyBlockChainingListener;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.listener.chaining.MetaDataStateChainingListener;\nimport org.xwiki.rendering.renderer.AbstractChainingPrintRenderer;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Generates XHTML from a {@link org.xwiki.rendering.block.XDOM} object being traversed.\n *\n * @version $Id$\n * @since 2.0M3\n */\n@Component\n@Named(\"xhtml/1.0\")\n@InstantiationStrategy(ComponentInstantiationStrategy.PER_LOOKUP)\npublic class XHTMLRenderer extends AbstractChainingPrintRenderer implements Initializable\n{\n    /**\n     * To render link events into XHTML. This is done so that it's pluggable because link rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the document exists, we get the document\n     * URL, etc.\n     */\n    @Inject\n    private XHTMLLinkRenderer linkRenderer;\n\n    /**\n     * To render image events into XHTML. This is done so that it's pluggable because image rendering depends on how the\n     * underlying system wants to handle it. For example for XWiki we check if the image exists as a document\n     * attachments, we get its URL, etc.\n     */\n    @Inject\n    private XHTMLImageRenderer imageRenderer;\n\n    @Inject\n    private HTMLElementSanitizer htmlElementSanitizer;\n\n    @Override\n    public void initialize() throws InitializationException\n    {\n        ListenerChain chain = new ListenerChain();\n        setListenerChain(chain);\n\n        // Construct the listener chain in the right order. Listeners early in the chain are called before listeners\n        // placed later in the chain.\n        chain.addListener(this);\n        chain.addListener(new BlockStateChainingListener(chain));\n        chain.addListener(new EmptyBlockChainingListener(chain));\n        chain.addListener(new MetaDataStateChainingListener(chain));\n        chain.addListener(new XHTMLChainingRenderer(this.linkRenderer, this.imageRenderer, this.htmlElementSanitizer,\n            chain));\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.internal.renderer.xhtml;\n\nimport java.util.Collections;\n\nimport org.junit.jupiter.api.Test;\nimport org.xwiki.rendering.listener.chaining.ListenerChain;\nimport org.xwiki.rendering.renderer.printer.DefaultWikiPrinter;\nimport org.xwiki.rendering.renderer.printer.WikiPrinter;\nimport org.xwiki.rendering.syntax.Syntax;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\n/**\n * Unit tests for {@link XHTMLChainingRenderer} for methods that cannot be easily tested using the Rendering Test\n * framework.\n *\n * @version $Id$\n */\nclass XHTMLChainingRendererTest\n{\n    /**\n     * Those events are hard to test since there's no easy syntax to input them (requires XWiki 2.0+ Syntax with a\n     * Macro transformation applied).\n     */\n    @Test\n    void outputFigureCaptionEvents()\n    {\n        XHTMLChainingRenderer renderer = new XHTMLChainingRenderer(null, null, null, new ListenerChain());\n        WikiPrinter wikiPrinter = new DefaultWikiPrinter();\n        renderer.setPrinter(wikiPrinter);\n        renderer.beginFigureCaption(Collections.emptyMap());\n        renderer.onWord(\"caption\");\n        renderer.endFigureCaption(Collections.emptyMap());\n\n        assertEquals(\"<div class=\\\"figcaption\\\">caption</div>\", wikiPrinter.toString());\n    }\n\n    @Test\n    void onRawText()\n    {\n        XHTMLChainingRenderer renderer = new XHTMLChainingRenderer(null, null, null, new ListenerChain());\n        WikiPrinter wikiPrinter = new DefaultWikiPrinter();\n        renderer.setPrinter(wikiPrinter);\n        renderer.onRawText(\"xhtml/1.0\", Syntax.XHTML_1_0);\n        renderer.onRawText(\"html/4.01\", Syntax.HTML_4_01);\n        renderer.onRawText(\"html/5.0\", Syntax.HTML_5_0);\n        renderer.onRawText(\"annotatedxhtml/1.0\", Syntax.ANNOTATED_XHTML_1_0);\n        renderer.onRawText(\"annotatedhtml/5.0\", Syntax.ANNOTATED_HTML_5_0);\n        renderer.onRawText(\"plain/1.0\", Syntax.PLAIN_1_0);\n\n        assertEquals(\"xhtml/1.0html/4.01html/5.0annotatedxhtml/1.0annotatedhtml/5.0\", wikiPrinter.toString());\n    }\n}", "<p><tt><span data-xwiki-translated-attribute-a=\"b\">monospace</span></tt></p>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that STRONG tag parameters are recognized.\n.#-----------------------------------------------------\n<p><strong data-xwiki-translated-attribute-a=\"b\" data-xwiki-parameter=\"value\">something</strong></p>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nbeginFormat [BOLD] [[a]=[b][data-xwiki-parameter]=[value]]\nonWord [something]\nendFormat [BOLD] [[a]=[b][data-xwiki-parameter]=[value]]\nendParagraph\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p><strong><span data-xwiki-translated-attribute-a=\"b\" data-xwiki-parameter=\"value\">something</span></strong></p>", ".#-------------------------------------------------------------------------------------\n.input|xhtml/1.0\n.# Verify that HTML entities can be parsed by the XHTML parser and are encoded properly\n.# Note that &nbsp; is transformed into a space.\n.#-------------------------------------------------------------------------------------\n<p>&nbsp;&tilde;&euro;</p><p data-xwiki-translated-attribute-param1=\"val&#252;e\">&#160;&#732;&#8364;</p>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginParagraph\nonSpace\nonWord [(((732)))(((8364)))]\nendParagraph\nbeginParagraph [[param1]=[val(((252)))e]]\nonSpace\nonWord [(((732)))(((8364)))]\nendParagraph [[param1]=[val(((252)))e]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<p>&nbsp;\u02dc\u20ac</p><p data-xwiki-translated-attribute-param1=\"val\u00fce\">&nbsp;\u02dc\u20ac</p>", ".#-----------------------------------------------------\n.input|xhtml/1.0\n.# Verify that div tag parameters, also starting with data-xwiki-, are recognized.\n.#-----------------------------------------------------\n<div data-xwiki-translated-attribute-a=\"b\" data-xwiki-parameter=\"value\">something</div>\n.#-----------------------------------------------------\n.expect|event/1.0\n.#-----------------------------------------------------\nbeginDocument\nbeginGroup [[a]=[b][data-xwiki-parameter]=[value]]\nbeginParagraph\nonWord [something]\nendParagraph\nendGroup [[a]=[b][data-xwiki-parameter]=[value]]\nendDocument\n.#-----------------------------------------------------\n.expect|xhtml/1.0\n.#-----------------------------------------------------\n<div data-xwiki-translated-attribute-a=\"b\" data-xwiki-parameter=\"value\"><p>something</p></div>", "<p><span data-xwiki-translated-attribute-a=\"b\" class=\"monospace\">monospace</span></p>", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.rendering.renderer.printer;\n\nimport java.util.Arrays;\nimport java.util.LinkedHashMap;\nimport java.util.Map;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.xml.sax.Attributes;\nimport org.xml.sax.helpers.AttributesImpl;\nimport org.xwiki.stability.Unstable;\nimport org.xwiki.xml.html.HTMLElementSanitizer;\n\n/**\n * Base toolkit class for all XHTML-based renderers. This printer handles whitespaces so that it prints \"&nbsp;\" when\n * needed (i.e. when the spaces are at the beginning or at the end of an element's content or when there are more than 1\n * contiguous spaces, except for CDATA sections and inside PRE elements. It also knows how to handle XHTML comments).\n *\n * @version $Id$\n * @since 1.7M1\n */\npublic class XHTMLWikiPrinter extends XMLWikiPrinter\n{\n    /**\n     * Prefix that is used for invalid/disallowed attributes.\n     *\n     * @since 14.6RC1\n     */\n    @Unstable\n    public static final String TRANSLATED_ATTRIBUTE_PREFIX = \"data-xwiki-translated-attribute-\";\n\n    /**\n     * The sanitizer used to restrict allowed elements and attributes, can be null (no restrictions).\n     *\n     * @since 14.6RC1\n     */\n    protected final HTMLElementSanitizer htmlElementSanitizer;\n\n    private int spaceCount;\n\n    private boolean isInCData;\n\n    private boolean isInPreserveElement;\n\n    private boolean elementEnded;\n\n    private boolean hasTextBeenPrinted;\n\n    private boolean isStandalone;\n\n    /**\n     * @param printer the object to which to write the XHTML output to\n     */\n    public XHTMLWikiPrinter(WikiPrinter printer)\n    {\n        this(printer, null);\n    }\n\n    /**\n     * @param printer the object to which to write the XHTML output to\n     * @param htmlElementSanitizer the sanitizer to use for sanitizing elements and attributes\n     */\n    public XHTMLWikiPrinter(WikiPrinter printer, HTMLElementSanitizer htmlElementSanitizer)\n    {\n        super(printer);\n        this.htmlElementSanitizer = htmlElementSanitizer;\n    }\n\n    /**\n     * Use it to specify that the current element to print is standalone. This value might be used to know if the first\n     * space should be printed with a simple space or a {@code &nbsp;} entity. Note that the standalone value is\n     * automatically reset after first printing of a space, or when a text is printed.\n     *\n     * @since 12.2\n     */\n    public void setStandalone()\n    {\n        this.isStandalone = true;\n    }\n\n    @Override\n    public void printXML(String str)\n    {\n        handleSpaceWhenInText();\n        super.printXML(str);\n        this.hasTextBeenPrinted = true;\n        this.isStandalone = false;\n    }\n\n    @Override\n    public void printXMLElement(String name)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenStartElement();\n            super.printXMLElement(name);\n        }\n    }\n\n    @Override\n    public void printXMLElement(String name, String[][] attributes)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenStartElement();\n            super.printXMLElement(name, cleanAttributes(name, attributes));\n        }\n    }\n\n    @Override\n    public void printXMLElement(String name, Map<String, String> attributes)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenStartElement();\n            super.printXMLElement(name, cleanAttributes(name, attributes));\n        }\n    }\n\n    @Override\n    public void printXMLStartElement(String name)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenStartElement();\n            super.printXMLStartElement(name);\n        }\n    }\n\n    @Override\n    public void printXMLStartElement(String name, String[][] attributes)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenStartElement();\n            super.printXMLStartElement(name, cleanAttributes(name, attributes));\n        }\n    }\n\n    @Override\n    public void printXMLStartElement(String name, Map<String, String> attributes)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenStartElement();\n            super.printXMLStartElement(name, cleanAttributes(name, attributes));\n        }\n    }\n\n    @Override\n    public void printXMLStartElement(String name, Attributes attributes)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenStartElement();\n            super.printXMLStartElement(name, cleanAttributes(name, attributes));\n        }\n    }\n\n    @Override\n    public void printXMLEndElement(String name)\n    {\n        if (this.htmlElementSanitizer == null || this.htmlElementSanitizer.isElementAllowed(name)) {\n            handleSpaceWhenEndlement();\n            super.printXMLEndElement(name);\n            this.elementEnded = true;\n        }\n    }\n\n    @Override\n    public void printXMLComment(String content)\n    {\n        printXMLComment(content, false);\n    }\n\n    @Override\n    public void printXMLComment(String content, boolean escape)\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLComment(content, escape);\n        this.elementEnded = true;\n    }\n\n    @Override\n    public void printXMLStartCData()\n    {\n        handleSpaceWhenStartElement();\n        super.printXMLStartCData();\n    }\n\n    @Override\n    public void printXMLEndCData()\n    {\n        handleSpaceWhenEndlement();\n        super.printXMLEndCData();\n    }\n\n    /**\n     * This method should be used to print a space rather than calling <code>printXML(\" \")</code>.\n     */\n    public void printSpace()\n    {\n        this.spaceCount++;\n    }\n\n    @Override\n    public void printRaw(String raw)\n    {\n        handleSpaceWhenStartElement();\n        super.printRaw(raw);\n        this.elementEnded = true;\n    }\n\n    private void handleSpaceWhenInText()\n    {\n        if (this.elementEnded || this.hasTextBeenPrinted) {\n            handleSpaceWhenStartElement();\n        } else {\n            handleSpaceWhenEndlement();\n        }\n    }\n\n    private Map<String, String> cleanAttributes(String elementName, Map<String, String> attributes)\n    {\n        Map<String, String> cleanAttributes;\n\n        if (this.htmlElementSanitizer == null || attributes == null) {\n            cleanAttributes = attributes;\n        } else {\n            cleanAttributes = new LinkedHashMap<>();\n            for (Map.Entry<String, String> e : attributes.entrySet()) {\n                if (this.htmlElementSanitizer.isAttributeAllowed(elementName, e.getKey(), e.getValue())) {\n                    cleanAttributes.put(e.getKey(), e.getValue());\n                } else {\n                    cleanAttributes.put(TRANSLATED_ATTRIBUTE_PREFIX + e.getKey(), e.getValue());\n                }\n            }\n        }\n\n        return cleanAttributes;\n    }\n\n    private String[][] cleanAttributes(String elementName, String[][] attributes)\n    {\n        String[][] allowedAttributes;\n        if (this.htmlElementSanitizer == null || attributes == null) {\n            allowedAttributes = attributes;\n        } else {\n            allowedAttributes = Arrays.stream(attributes)\n                .map(entry -> {\n                    if (this.htmlElementSanitizer.isAttributeAllowed(elementName, entry[0], entry[1])) {\n                        return entry;\n                    } else {\n                        return new String[] { TRANSLATED_ATTRIBUTE_PREFIX + entry[0], entry[1] };\n                    }\n                })\n                .toArray(String[][]::new);\n        }\n\n        return allowedAttributes;\n    }\n\n    private Attributes cleanAttributes(String elementName, Attributes attributes)\n    {\n        Attributes allowedAttribute;\n\n        if (this.htmlElementSanitizer == null || attributes == null) {\n            allowedAttribute = attributes;\n        } else {\n            allowedAttribute = new AttributesImpl();\n\n            for (int i = 0; i < attributes.getLength(); ++i) {\n                if (this.htmlElementSanitizer.isAttributeAllowed(elementName, attributes.getQName(i),\n                    attributes.getValue(i)))\n                {\n                    ((AttributesImpl) allowedAttribute).addAttribute(null, null, attributes.getQName(i),\n                        null, attributes.getValue(i));\n                } else {\n                    ((AttributesImpl) allowedAttribute).addAttribute(null, null,\n                        TRANSLATED_ATTRIBUTE_PREFIX + attributes.getQName(i), null, attributes.getValue(i));\n                }\n            }\n        }\n\n        return allowedAttribute;\n    }\n\n    private void handleSpaceWhenStartElement()\n    {\n        // Use case: <tag1>something <tag2>...\n        // Use case: <tag1>something <!--...\n        if (this.spaceCount > 0) {\n            if (!this.isInCData && !this.isInPreserveElement) {\n                // We print a single space as a normal space, except if we are at the beginning of a standalone element\n                // in that case we want a non-breaking space so it won't be stripped.\n                // Any supplementary space will be printed as non-breaking spaces so we keep them too.\n                if (this.isStandalone && !this.hasTextBeenPrinted) {\n                    printEntity(\"&nbsp;\");\n                } else {\n                    super.printXML(\" \");\n                }\n                for (int i = 0; i < this.spaceCount - 1; i++) {\n                    printEntity(\"&nbsp;\");\n                }\n            } else {\n                super.printXML(StringUtils.repeat(' ', this.spaceCount));\n            }\n            this.isStandalone = false;\n        }\n        this.spaceCount = 0;\n        this.elementEnded = false;\n        this.hasTextBeenPrinted = false;\n    }\n\n    private void handleSpaceWhenEndlement()\n    {\n        // Use case: <tag1>something </tag1>...\n        // All spaces are &nbsp; spaces since otherwise they'll be all stripped by browsers\n        if (!this.isInCData && !this.isInPreserveElement) {\n            for (int i = 0; i < this.spaceCount; i++) {\n                printEntity(\"&nbsp;\");\n            }\n        } else {\n            super.printXML(StringUtils.repeat(' ', this.spaceCount));\n        }\n        this.spaceCount = 0;\n        this.elementEnded = false;\n        this.hasTextBeenPrinted = false;\n    }\n}\n"], "filenames": ["xwiki-rendering-integration-tests/src/test/resources/simple/escape/escape15.test", "xwiki-rendering-integration-tests/src/test/resources/simple/group/group9.test", "xwiki-rendering-integration-tests/src/test/resources/simple/horizontalline/horizontalline5.test", "xwiki-rendering-integration-tests/src/test/resources/simple/italic/italic8.test", "xwiki-rendering-integration-tests/src/test/resources/simple/list/definitionlist7.test", "xwiki-rendering-integration-tests/src/test/resources/simple/list/list13.test", "xwiki-rendering-integration-tests/src/test/resources/simple/list/list8.test", "xwiki-rendering-integration-tests/src/test/resources/simple/macros/macro10.test", "xwiki-rendering-integration-tests/src/test/resources/simple/paragraph/paragraph6.test", "xwiki-rendering-integration-tests/src/test/resources/simple/quote/quote3.test", "xwiki-rendering-integration-tests/src/test/resources/simple/section/section6.test", "xwiki-rendering-integration-tests/src/test/resources/simple/strikedout/strikedout4.test", "xwiki-rendering-integration-tests/src/test/resources/simple/subscript/subscript2.test", "xwiki-rendering-integration-tests/src/test/resources/simple/superscript/superscript2.test", "xwiki-rendering-integration-tests/src/test/resources/simple/table/table3.test", "xwiki-rendering-integration-tests/src/test/resources/simple/verbatim/verbatim6.test", "xwiki-rendering-integration-tests/src/test/resources/simple/verbatim/verbatim7.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/image/image1.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/image/image12.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/image/image8.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/image/image9.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/link/links14.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/link/links15.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/link/links19.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/link/links2.test", "xwiki-rendering-integration-tests/src/test/resources/wiki/link/links8.test", "xwiki-rendering-macros/xwiki-rendering-macro-html/src/main/java/org/xwiki/rendering/internal/macro/html/HTMLMacroXHTMLRenderer.java", "xwiki-rendering-macros/xwiki-rendering-macro-html/src/main/java/org/xwiki/rendering/internal/macro/html/renderers/annotatedhtml5/HTMLMacroAnnotatedHTML5Renderer.java", "xwiki-rendering-macros/xwiki-rendering-macro-html/src/main/java/org/xwiki/rendering/internal/macro/html/renderers/annotatedxhtml/HTMLMacroAnnotatedXHTMLRenderer.java", "xwiki-rendering-macros/xwiki-rendering-macro-html/src/main/java/org/xwiki/rendering/internal/macro/html/renderers/html5/HTMLMacroHTML5Renderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-annotatedhtml5/src/main/java/org/xwiki/rendering/internal/renderer/html5/AnnotatedHTML5ChainingRenderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-annotatedhtml5/src/main/java/org/xwiki/rendering/internal/renderer/html5/AnnotatedHTML5Renderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-annotatedhtml5/src/test/resources/annotatedhtml50/simple/monospace/monospace2.out.txt", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-annotatedxhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/AnnotatedXHTMLChainingRenderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-annotatedxhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/AnnotatedXHTMLRenderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-html5/src/main/java/org/xwiki/rendering/internal/renderer/html5/HTML5ChainingRenderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-html5/src/main/java/org/xwiki/rendering/internal/renderer/html5/HTML5Renderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-html5/src/test/java/org/xwiki/rendering/internal/html5/HTML5ChainingRendererTest.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/main/java/org/xwiki/rendering/internal/parser/xhtml/wikimodel/XHTMLXWikiGeneratorListener.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLChainingRenderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/main/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLRenderer.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/test/java/org/xwiki/rendering/internal/renderer/xhtml/XHTMLChainingRendererTest.java", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/test/resources/xhtml10/simple/monospace/monospace2.inout.txt", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/test/resources/xhtml10/specific/bold/bold4.test", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/test/resources/xhtml10/specific/encoding/encoding1.test", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml/src/test/resources/xhtml10/specific/group/group1.test", "xwiki-rendering-syntaxes/xwiki-rendering-syntax-xhtml5/src/test/resources/xhtml5/simple/monospace/monospace2.inout.txt", "xwiki-rendering-xml/src/main/java/org/xwiki/rendering/renderer/printer/XHTMLWikiPrinter.java"], "buggy_code_start_loc": [23, 32, 15, 19, 24, 45, 19, 47, 108, 19, 20, 19, 5, 5, 46, 15, 19, 19, 68, 18, 18, 19, 21, 7, 24, 22, 31, 32, 32, 32, 30, 36, 1, 27, 36, 22, 36, 26, 21, 43, 36, 47, 1, 5, 6, 5, 1, 21], "buggy_code_end_loc": [36, 49, 25, 20, 35, 58, 29, 56, 109, 29, 30, 20, 20, 20, 59, 25, 29, 33, 73, 31, 31, 32, 35, 33, 41, 36, 64, 66, 68, 66, 64, 83, 2, 61, 83, 72, 78, 62, 290, 126, 78, 61, 2, 20, 24, 20, 2, 185], "fixing_code_start_loc": [23, 32, 15, 19, 24, 45, 19, 47, 108, 19, 20, 19, 5, 5, 46, 15, 19, 19, 68, 18, 18, 19, 21, 7, 24, 22, 32, 33, 33, 33, 31, 37, 1, 28, 37, 23, 37, 27, 22, 44, 37, 47, 1, 5, 6, 5, 1, 22], "fixing_code_end_loc": [36, 49, 25, 20, 35, 58, 29, 56, 109, 29, 30, 20, 20, 20, 59, 25, 29, 33, 73, 31, 31, 32, 35, 33, 41, 36, 69, 71, 73, 71, 66, 88, 2, 63, 88, 74, 83, 62, 337, 137, 83, 61, 2, 20, 24, 20, 2, 297], "type": "CWE-79", "message": "XWiki Platform is a generic wiki platform. Prior to version 14.6-rc-1, HTML rendering didn't check for dangerous attributes/attribute values. This allowed cross-site scripting (XSS) attacks via attributes and link URLs, e.g., supported in XWiki syntax. This has been patched in XWiki 14.6-rc-1. There are no known workarounds apart from upgrading to a fixed version.", "other": {"cve": {"id": "CVE-2023-32070", "sourceIdentifier": "security-advisories@github.com", "published": "2023-05-10T18:15:10.003", "lastModified": "2023-05-17T20:12:44.580", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XWiki Platform is a generic wiki platform. Prior to version 14.6-rc-1, HTML rendering didn't check for dangerous attributes/attribute values. This allowed cross-site scripting (XSS) attacks via attributes and link URLs, e.g., supported in XWiki syntax. This has been patched in XWiki 14.6-rc-1. There are no known workarounds apart from upgrading to a fixed version."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-83"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:rendering:3.0:milestone_2:*:*:*:*:*:*", "matchCriteriaId": "0532D5E3-0C6A-4143-B2FE-B45680B77D18"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionEndIncluding": "14.5", "matchCriteriaId": "930D8242-A769-4FD0-B925-629F5F65D0DC"}]}]}], "references": [{"url": "https://github.com/xwiki/xwiki-rendering/commit/c40e2f5f9482ec6c3e71dbf1fff5ba8a5e44cdc1", "source": "security-advisories@github.com", "tags": ["Patch"]}, {"url": "https://github.com/xwiki/xwiki-rendering/security/advisories/GHSA-6gf5-c898-7rxp", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XRENDERING-663", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}]}, "github_commit_url": "https://github.com/xwiki/xwiki-rendering/commit/c40e2f5f9482ec6c3e71dbf1fff5ba8a5e44cdc1"}}