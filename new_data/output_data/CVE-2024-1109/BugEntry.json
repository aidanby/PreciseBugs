{"buggy_code": ["<?php\n\nnamespace Podlove\\Modules\\ImportExport\\Export;\n\nclass PodcastExporter\n{\n    const XML_NAMESPACE = 'http://podlove.org/podlove-podcast-publisher/export';\n    private $compression = false;\n\n    public function __construct()\n    {\n        add_action('podlove_xml_export', [$this, 'exportEpisodes']);\n        add_action('podlove_xml_export', [$this, 'exportAssets']);\n        add_action('podlove_xml_export', [$this, 'exportFeeds']);\n        add_action('podlove_xml_export', [$this, 'exportFileType']);\n        add_action('podlove_xml_export', [$this, 'exportMediaFile']);\n        add_action('podlove_xml_export', [$this, 'exportTemplates']);\n        add_action('podlove_xml_export', [$this, 'exportTracking']);\n        add_action('podlove_xml_export', [$this, 'exportOptions']);\n\n        if (function_exists('gzencode') && extension_loaded('zlib')) {\n            $this->enableCompression();\n        }\n    }\n\n    public static function init()\n    {\n        if (!is_admin()) {\n            return;\n        }\n\n        if (isset($_GET['podlove_export']) && $_GET['podlove_export']) {\n            $exporter = new \\Podlove\\Modules\\ImportExport\\Export\\PodcastExporter();\n            $exporter->download();\n            exit;\n        }\n    }\n\n    public function enableCompression()\n    {\n        $this->compression = true;\n    }\n\n    public function isCompressionEnabled()\n    {\n        return (bool) $this->compression;\n    }\n\n    public function download()\n    {\n        $this->setDownloadHeaders();\n        $xml = $this->getXml();\n\n        if ($this->isCompressionEnabled()) {\n            echo gzencode($xml);\n        } else {\n            echo $xml;\n        }\n        exit;\n    }\n\n    public function exportEpisodes(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'episodes', 'episode', '\\Podlove\\Model\\Episode');\n    }\n\n    public function exportAssets(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'assets', 'asset', '\\Podlove\\Model\\EpisodeAsset');\n    }\n\n    public function exportFeeds(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'feeds', 'feed', '\\Podlove\\Model\\Feed');\n    }\n\n    public function exportFileType(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'filetypes', 'filetype', '\\Podlove\\Model\\FileType');\n    }\n\n    public function exportMediaFile(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'mediafiles', 'mediafile', '\\Podlove\\Model\\MediaFile');\n    }\n\n    public function exportTemplates(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'templates', 'template', '\\Podlove\\Model\\Template');\n    }\n\n    public function exportTracking(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'geoareas', 'geoarea', '\\Podlove\\Model\\GeoArea');\n        self::exportTable($xml, 'geoareanames', 'geoareaname', '\\Podlove\\Model\\GeoAreaName');\n        self::exportTable($xml, 'useragents', 'useragent', '\\Podlove\\Model\\UserAgent');\n    }\n\n    public function exportOptions(\\SimpleXMLElement $xml)\n    {\n        global $wpdb;\n        $sql = 'SELECT option_name FROM '.$wpdb->options.' WHERE option_name LIKE \"%podlove%\" AND option_name NOT LIKE \"_transient%\"';\n        $options = $wpdb->get_col($sql);\n\n        $xml_group = $xml->addChild('xmlns:wpe:options');\n        foreach ($options as $option_name) {\n            $value = get_option($option_name);\n            if ($value !== false) {\n                if (is_array($value)) {\n                    foreach ($value as $k => $v) {\n                        // `addChild` does not escape '&', so we need to escape\n                        // it *before* serializing, otherwise deserialization will\n                        // break due to string length mismatch.\n                        if (is_string($v)) {\n                            $value[$k] = htmlspecialchars($v);\n                        }\n                    }\n                    $xml_group->addChild(\"xmlns:wpe:{$option_name}\", serialize($value));\n                } else {\n                    if (is_object($value)) {\n                        $value = maybe_serialize($value);\n                    }\n\n                    $value = htmlspecialchars($value);\n                    $xml_group->addChild(\"xmlns:wpe:{$option_name}\", $value);\n                }\n            }\n        }\n    }\n\n    public static function exportTable(\\SimpleXMLElement $xml, $group_name, $item_name, $table_class)\n    {\n        $xml_group = $xml->addChild(\"xmlns:wpe:{$group_name}\");\n        foreach ($table_class::all() as $mediafile) {\n            $xml_item = $xml_group->addChild(\"xmlns:wpe:{$item_name}\");\n            foreach ($table_class::property_names() as $property_name) {\n                if (strlen($mediafile->{$property_name}) === 0) {\n                    continue;\n                }\n\n                $value = htmlspecialchars($mediafile->{$property_name});\n                $xml_item->addChild(\"xmlns:wpe:{$property_name}\", $value);\n            }\n        }\n    }\n\n    public function getXml()\n    {\n        $xml = new \\SimpleXMLElement('<wpe:export/>', LIBXML_NOERROR | LIBXML_NOWARNING, false, 'wpe', true);\n        // Double xmlns looks strange but is intentionally/required.\n        // See http://stackoverflow.com/a/9391673/72448\n        $xml->addAttribute('xmlns:xmlns:wpe', self::XML_NAMESPACE);\n        $xml->addAttribute('version', '1.0');\n        $xml->addAttribute('podlove-publisher-version', \\Podlove\\get_plugin_header('Version'));\n\n        // add comments\n        $comment = \"\\n\\tExport Date: \".date('r');\n        $comment .= \"\\n\\t\";\n\n        $dom = dom_import_simplexml($xml);\n        $commentElement = $dom->ownerDocument->createComment($comment);\n        $dom->appendChild($commentElement);\n\n        do_action('podlove_xml_export', $xml);\n\n        // return formatted\n        $dom = dom_import_simplexml($xml)->ownerDocument;\n        $dom->formatOutput = true;\n\n        return $dom->saveXML();\n    }\n\n    private function getDownloadFileName()\n    {\n        $sitename = sanitize_key(get_bloginfo('name'));\n\n        if (!empty($sitename)) {\n            $sitename .= '.';\n        }\n\n        $filename = $sitename.'podlove.'.date('Y-m-d').'.xml';\n\n        if ($this->isCompressionEnabled()) {\n            $filename .= '.gz';\n        }\n\n        return $filename;\n    }\n\n    private function setDownloadHeaders()\n    {\n        header('Content-Description: File Transfer');\n        header('Content-Disposition: attachment; filename='.$this->getDownloadFileName());\n        header('Cache-control: private');\n        header('Expires: -1');\n\n        if ($this->isCompressionEnabled()) {\n            // Do *not* send gzip headers. Why? If you set gzip headers, the data is\n            // transferred compressed but unzipped before it's saved to disk. But we\n            // want it to be compressed as a file, not just for transfer.\n\n            // header( 'Content-Encoding: gzip' );\n            // header( 'Content-Type: application/x-gzip; charset=' . get_option( 'blog_charset' ), true );\n        } else {\n            header('Content-Type: text/xml; charset='.get_option('blog_charset'), true);\n        }\n    }\n}\n", "<?php\n\nnamespace Podlove\\Modules\\ImportExport\\Export;\n\nclass TrackingExporter\n{\n    public static function init()\n    {\n        add_action('wp_ajax_podlove-export-tracking', [__CLASS__, 'export_tracking']);\n        add_action('wp_ajax_podlove-export-tracking-status', [__CLASS__, 'export_tracking_status']);\n\n        self::init_download();\n    }\n\n    public static function init_download()\n    {\n        if (!is_admin()) {\n            return;\n        }\n\n        if (isset($_GET['podlove_export_tracking']) && $_GET['podlove_export_tracking']) {\n            delete_transient('podlove_tracking_export_finished');\n\n            header('Content-Type: application/octet-stream');\n            header('Content-Description: File Transfer');\n            header('Content-Disposition: attachment; filename='.TrackingExporter::getDownloadFileName());\n            header('Cache-control: private');\n            header('Expires: -1');\n\n            readfile(TrackingExporter::get_tracking_export_file_path());\n            exit;\n        }\n    }\n\n    public static function get_tracking_export_file_path()\n    {\n        $upload_dir = wp_upload_dir();\n\n        return $upload_dir['basedir'].DIRECTORY_SEPARATOR.'tracking.tmp';\n    }\n\n    public static function export_tracking()\n    {\n        global $wpdb;\n\n        // only one export at a time\n        if (get_option('podlove_tracking_export_all') !== false) {\n            return;\n        }\n\n        update_option('podlove_tracking_export_all', $wpdb->get_var('SELECT COUNT(*) FROM '.\\Podlove\\Model\\DownloadIntent::table_name()));\n        update_option('podlove_tracking_export_progress', 0);\n\n        $rowsPerQuery = 1000;\n        $lastId = 0;\n        $page = 0;\n\n        $fp = gzopen(self::get_tracking_export_file_path(), 'w');\n\n        do {\n            // Keeping track of the $lastId is (roughly) a bajillion times faster than paging via LIMIT.\n            $sql = '\n\t\t\t\tSELECT\n\t\t\t\t\tid,\n\t\t\t\t\tuser_agent_id,\n\t\t\t\t\tmedia_file_id,\n\t\t\t\t\trequest_id,\n\t\t\t\t\taccessed_at,\n\t\t\t\t\tsource,\n\t\t\t\t\tcontext,\n\t\t\t\t\tgeo_area_id,\n\t\t\t\t\tlat,\n\t\t\t\t\tlng,\n\t\t\t\t\thttprange\n\t\t\t\tFROM\n\t\t\t\t\t'.\\Podlove\\Model\\DownloadIntent::table_name().'\n\t\t\t\t\tWHERE id > '.(int) $lastId.\"\n\t\t\t\tLIMIT 0, {$rowsPerQuery}\";\n            $rows = $wpdb->get_results($sql, ARRAY_A);\n            foreach ($rows as $row) {\n                gzwrite($fp, implode(',', $row).\"\\n\");\n            }\n\n            $lastId = $row['id'];\n            ++$page;\n\n            update_option('podlove_tracking_export_progress', $page * $rowsPerQuery);\n        } while (count($rows) > 0);\n\n        gzclose($fp);\n\n        set_transient('podlove_tracking_export_finished', true, MINUTE_IN_SECONDS * 3);\n        delete_option('podlove_tracking_export_all');\n        delete_option('podlove_tracking_export_progress');\n        exit;\n    }\n\n    public static function export_tracking_status()\n    {\n        echo json_encode([\n            'all' => get_option('podlove_tracking_export_all'),\n            'progress' => get_option('podlove_tracking_export_progress'),\n            'finished' => (bool) get_transient('podlove_tracking_export_finished'),\n        ]);\n        exit;\n    }\n\n    private static function getDownloadFileName()\n    {\n        $sitename = sanitize_key(get_bloginfo('name'));\n\n        if (!empty($sitename)) {\n            $sitename .= '.';\n        }\n\n        return $sitename.'tracking.'.date('Y-m-d').'.csv.gz';\n    }\n}\n", "<?php\n\nnamespace Podlove\\Modules\\ImportExport;\n\nclass Import_Export extends \\Podlove\\Modules\\Base\n{\n    protected $module_name = 'Import &amp; Export';\n    protected $module_description = 'Import &amp; export podlove data for backup or migration to another WordPress instance.';\n    protected $module_group = 'system';\n\n    public function load()\n    {\n        add_action('admin_init', function () {\n            Export\\PodcastExporter::init();\n            Import\\PodcastImporter::init();\n            Export\\TrackingExporter::init();\n            Import\\TrackingImporter::init();\n            $this->register_tools();\n        });\n\n        add_action('admin_enqueue_scripts', function () {\n            if (isset($_REQUEST['page']) && $_REQUEST['page'] === 'podlove_tools_settings_handle') {\n                wp_enqueue_script('podlove_admin_import_script', $this->get_module_url().'/js/import.js', ['jquery'], \\Podlove\\get_plugin_header('Version'));\n            }\n        });\n\n        add_action('admin_notices', function () {\n            if (!isset($_GET['page'])) {\n                return false;\n            }\n\n            if ($_GET['page'] != 'podlove_tools_settings_handle') {\n                return false;\n            }\n\n            if (!isset($_GET['status'])) {\n                return false;\n            } ?>\n\t\t\t<div class=\"updated\">\n\t\t\t\t<p>\n\t\t\t\t\t<?php\n                    switch ($_GET['status']) {\n                        case 'success':\n                            echo __('Import successful. Happy podcasting!');\n\n                            break;\n                        case 'version-warning':\n                            echo __('Heads up: Your export file was exported from a Publisher with a different version. If possible, both Publisher versions should be identical. However, that might not be a problem. Happy podcasting!');\n\n                            break;\n                    } ?>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<?php\n        });\n    }\n\n    public function register_tools()\n    {\n        \\Podlove\\add_tools_section(\n            'import-export',\n            __('Import & Export', 'podlove-podcasting-plugin-for-wordpress'),\n            function () {\n                if (defined('SAVEQUERIES') && SAVEQUERIES) {\n                    ?>\n\t\t\t\t\t<div class=\"error\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<b><?php echo __('Heads up!', 'podlove-podcasting-plugin-for-wordpress'); ?></b>\n\t\t\t\t\t\t\t<?php echo __('The WordPress debug option <code>SAVEQUERIES</code> is active. This might lead to memory issues when exporting or importing tracking data.<br>It is probably defined in <code>wp-config.php</code>. Please turn it off before using the export tool.', 'podlove-podcasting-plugin-for-wordpress'); ?>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<?php\n                }\n            }\n        );\n\n        \\Podlove\\add_tools_field(\n            'export-podcast',\n            __('Podcast Export', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_podcast_export'],\n            'import-export'\n        );\n\n        \\Podlove\\add_tools_field(\n            'export-tracking',\n            __('Tracking Export', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_tracking_export'],\n            'import-export'\n        );\n\n        \\Podlove\\add_tools_field(\n            'import-podcast',\n            __('Podcast Import', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_podcast_import'],\n            'import-export'\n        );\n\n        \\Podlove\\add_tools_field(\n            'import-tracking',\n            __('Tracking Import', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_tracking_import'],\n            'import-export'\n        );\n    }\n\n    public function tools_podcast_export()\n    {\n        echo sprintf(\n            __('This export complements the existing %sWordPress export tool%s. It contains all relevant podcast data to enable you to move from this WordPress instance to another. Step by step:', 'podlove-podcasting-plugin-for-wordpress'),\n            '<a href=\"'.admin_url('export.php').'\">',\n            '</a>'\n        ); ?>\n\t\t<ol>\n\t\t\t<li>\n\t\t\t\t<?php echo sprintf(\n            __('Go to the %sWordPress export tool%s and export all data.', 'podlove-podcasting-plugin-for-wordpress'),\n            '<a href=\"'.admin_url('export.php').'\">',\n            '</a>'\n        ); ?>\n\t\t\t</li>\n\t\t\t<li><?php echo __('Import this file to your new WordPress instance.', 'podlove-podcasting-plugin-for-wordpress'); ?></li>\n\t\t\t<li><?php echo __('Use the button below to export the podcast data file.', 'podlove-podcasting-plugin-for-wordpress'); ?></li>\n\t\t\t<li><?php echo __('In your new WordPress instance, import that file.', 'podlove-podcasting-plugin-for-wordpress'); ?></li>\n\t\t</ol>\n\n\t\t<a href=\"?podlove_export=1\" class=\"button\"><?php echo __('Export Podcast Data', 'podlove-podcasting-plugin-for-wordpress'); ?></a>\n\t\t<?php\n    }\n\n    public function tools_tracking_export()\n    {\n        ?>\n\t\t<p>\n\t\t\t<?php echo __('Im- and export of tracking data is a separate task. After you have completed the steps above, you can ex- and import tracking data.', 'podlove-podcasting-plugin-for-wordpress'); ?>\n\t\t</p>\n\t\t<p>\n\t\t\t<button id=\"podlove_tracking_export\" class=\"button\"><?php echo __('Export Tracking Data', 'podlove-podcasting-plugin-for-wordpress'); ?></button>\n\t\t\t<span id=\"podlove_tracking_export_status_wrapper\">\n\t\t\t\t<?php echo __('Export', 'podlove-podcasting-plugin-for-wordpress'); ?>: <span id=\"podlove_tracking_export_status\">starting ...</span>\n\t\t\t</span>\n\t\t</p>\n\n\t\t<style type=\"text/css\">\n\t\t#podlove_tracking_export_status_wrapper {\n\t\t\tdisplay: none;\n\t\t}\n\t\t</style>\n\n\t\t<script type=\"text/javascript\">\n\t\t(function($) {\n\n\t\t\tvar timeoutID = null;\n\n\t\t\tvar podlove_check_export_status = function() {\n\n\t\t\t\tif (timeoutID) {\n\t\t\t\t\twindow.clearTimeout(timeoutID);\n\t\t\t\t}\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\tdata: {action: 'podlove-export-tracking-status'},\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tsuccess: function(result) {\n\t\t\t\t\t\tif (result.all && result.progress) {\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export\").attr('disabled', 'disabled');\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export_status\").html((Math.round(1000.0 * (result.progress / result.all))/10.0) + \"%\");\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export_status_wrapper\").show();\n\n\t\t\t\t\t\t\ttimeoutID = window.setTimeout(podlove_check_export_status, 1000);\n\t\t\t\t\t\t} \n\n\t\t\t\t\t\tif (result.finished) {\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export\").attr('disabled', false);\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export_status_wrapper\").hide();\n\t\t\t\t\t\t\twindow.location = window.location + \"&podlove_export_tracking=1\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t};\n\n\t\t\t$(\"#podlove_tracking_export\").on(\"click\", function() {\n\n\t\t\t\t$(\"#podlove_tracking_export\").attr('disabled', 'disabled');\n\t\t\t\t$(\"#podlove_tracking_export_status_wrapper\").show();\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\tdata: {action: 'podlove-export-tracking'},\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tsuccess: function(result) {\n\t\t\t\t\t\tconsole.log(\"tracking export finished\");\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\twindow.setTimeout(podlove_check_export_status, 2000);\n\t\t\t});\n\n\t\t\t// start immediately, in case the user refreshes the page\n\t\t\tpodlove_check_export_status();\n\t\t}(jQuery));\n\t\t</script>\t\t\n\t\t<?php\n    }\n\n    public function tools_podcast_import()\n    {\n        ?>\n\t\t<p>\n\t\t\t<?php echo __('Use this import on <strong>fresh installs only</strong>! Otherwise you may lose data. In any case, you should have backups.', 'podlove-podcasting-plugin-for-wordpress'); ?>\n\t\t</p>\n\n\t\t<form method=\"POST\" enctype=\"multipart/form-data\">\n\t\t\t(<span><?php echo self::get_maximum_upload_size_text(); ?></span>)\n\t\t\t<input type=\"file\" name=\"podlove_import\"/> \n\t\t\t<input type=\"submit\" value=\"<?php echo __('Import Podcast Data', 'podlove-podcasting-plugin-for-wordpress'); ?>\" class=\"button\" />\n\t\t\t<?php wp_nonce_field('podlove_import', '_podlove_nonce'); ?>\n\t\t</form>\t\t\n\t\t<?php\n    }\n\n    public function tools_tracking_import()\n    {\n        ?>\n\t\t<form method=\"POST\" enctype=\"multipart/form-data\">\n\t\t\t(<span><?php echo self::get_maximum_upload_size_text(); ?></span>)\n\t\t\t<input type=\"file\" name=\"podlove_import_tracking\"/>\n\t\t\t<input type=\"submit\" value=\"<?php echo __('Import Tracking Data', 'podlove-podcasting-plugin-for-wordpress'); ?>\" class=\"button\" />\n\t\t\t<?php wp_nonce_field('podlove_import_tracking', '_podlove_nonce'); ?>\n\t\t</form>\t\t\n\t\t<?php\n    }\n\n    public static function get_maximum_upload_size_text()\n    {\n        // this is exactly the same way it is done in wp_import_upload_form()\n        $bytes = apply_filters('import_upload_size_limit', \\wp_max_upload_size());\n        $size = \\size_format($bytes);\n\n        return sprintf(__('Maximum size: %s'), $size);\n    }\n}\n", "=== Podlove Podcast Publisher ===\nContributors: eteubert\nDonate link: https://opencollective.com/podlove\nTags: podlove, podcast, publishing, rss, feed, audio, mp3, m4a, player, webplayer, iTunes, radio\nTested up to: 6.4.2\nStable tag: 4.0.11\nRequires at least: 4.9.6\nRequires PHP: 8.0\nLicense: MIT\n\nThe one and only next generation podcast publishing system. Seriously. It's magical and sparkles a lot.\n\n== Description ==\n\nWe built the Podlove Podcast Publisher because existing solutions are stuck in the past, complex and unwieldy. The Publisher helps you save time, worry less and provides a cutting edge listening experience for your audience.\n\nOfficial Site: [podlove.org/podlove-podcast-publisher](https://podlove.org/podlove-podcast-publisher)\n\n= Video Tutorial: Getting started with Podlove Publisher =\n\n[youtube http://www.youtube.com/watch?v=Hmrm-jUe6u4]\n\n= Compatible Feeds =\n\nThe Publisher makes it easy to create highly expressive, efficient and super compatible podcast feeds with fine grained control over client behavior (e.g. GUID control to replace faulty episodes and for clients to reload) supporting all important meta data.\n\n= Multi-Format Publishing =\n\nThe Publisher also makes multi-format publishing - embracing all modern and legacy audio and video codecs - a snap. By adopting simple file name conventions, the plugin allows the podcaster to provide individual feeds for certain use cases or audiences without adding work for the podcaster during the publishing process.\n\n= Optimized Web Player =\n\nThe Publisher also comes with integrated with the Podlove Web Player plugin (which you do not need to install separately) and fully support its advanced options including multiple audio (MP4 AAC, MP3, Vorbis, Opus) and video (MP4 H.264, WebM, Theora) format support for web browsers. This Web Player is fully HTML5 compatible (but provides Flash fallback for ancient environments) and is ready for all touch based clients too.\n\n= Chapter Support =\n\nThe Publisher also makes it easy to publish chapter information in the player to make access to structured episodes even easier. Full support for linking directly to any part of your podcast on the web with instant playback included.\n\n= Flexible Templates =\n\nTo round it all up, a flexible template system enables you to published Podcasts in a defined fashion and change the style at any time without having to touch your individual postings later on.\n\nAnd this is just the beginning. We have a rich roadmap that will bring even more interesting features: integration with helpful services, much improved timeline metadata support (show notes) and much more.\n\n= Further Reading =\n\n* [Podlove Publisher](http://publisher.podlove.org/)\n* [Podlove Project](http://podlove.org/)\n* [Podlove Community](https://community.podlove.org/)\n* [Documentation](http://docs.podlove.org/)\n* [Bug Tracker](https://github.com/podlove/podlove-publisher/issues)\n* [Donate](http://podlove.org/donations/)\n\nDevelopment of the plugin is an open process. The current version is available [on GitHub](https://github.com/podlove/podlove-publisher) Feel free to contribute and to fix errors or send improvements via GitHub.\n\nRequires PHP 8.0+\n\n== Frequently Asked Questions ==\n\n### Is Podlove Podcast Publisher free?\n\nYes! The core features of Podlove Podcast Publisher are and always will be free.\n\n### Are there Download Statistics?\n\nYes! Podcast Downloads can be tracked and analyzed. You can easily see how many people downloaded you podcast episodes, which clients they used, if they prefer to subscribe to the feed or listen on your website using the web player\u2014and much more.\n\n### Are there Privacy / GDPR considerations?\n\nPodlove Publisher is GDPR compliant and provides prewritten text snippets for your privacy page. See https://docs.podlove.org/podlove-publisher/guides/dsgvo-gdpr.html\n\n### Where can I host my podcast files?\n\nAny storage where you have control over the file naming is compatible with Podlove Podcast Publisher. You can manage files using a simple FTP/sFTP or use services like Amazon S3.\n\n### Where can I ask questions and get support?\n\nFree support where questions are answered by the community is available in the [Podlove Community Forum](http://community.podlove.org/). There is a German community in the [Sendegate](https://sendegate.de/).\n\n### How can I help the project?\n\nThe continued success of Open Source project relies on the community. There are many ways you can help:\nEpisode title in API now follows the same rules as in RSS feed. There's a new field 'title_clean' for accessing the specifically set plain episode title, but that might be null in some cases, so it's better to default the 'title' attribute to the usual rules.\n- If you enjoy the plugin, please [leave a review](https://wordpress.org/support/plugin/podlove-podcasting-plugin-for-wordpress/reviews/#new-post).\n- You can answer questions of other fellow podcasters in the [Podlove Community](https://community.podlove.org/).\n\n---\n\nThis product includes GeoLite2 data created by MaxMind, available from http://www.maxmind.com.\n\n== Installation ==\n\n1. Download the Podlove Publisher Plugin to your desktop.\n1. If downloaded as a zip archive, extract the Plugin folder to your desktop.\n1. With your FTP program, upload the Plugin folder to the wp-content/plugins folder in your WordPress directory online.\n1. Go to Plugins screen and find the newly uploaded Plugin in the list.\n1. Click Activate Plugin to activate it.\n\n== Screenshots ==\n1. Custom episode post type separates media from your blog content.\n2. Download analytics provide you with all the data you ever wanted.\n3. The Publisher automatically checks the health of your media files.\n4. The mighty template engine gives you full control over the episode presentation.\n5. Includes the Podlove Subscribe Button, the easiest way for listeners to subscribe to your podcast.\n6. Includes the Podlove Web Player. One more thing: you can manage and present all contributors easily.\n\n== Changelog ==\n\n= 4.0.12 =\n\n**Security**\n\n- fix SSRF vulnerability in Slacknotes module\n- add missing capability check and nonce validation to importer functions\n\n= 4.0.11 =\n\n- new: show admin notice when a database migration fails\n- fix bug where tracking data could be lost by disabling a media file checkbox\n- fix bug where imported Hindenburg chapters were not sorted by time\n- fix build script (correctly delete all vendor prefixed dependencies)\n- fix deprecation warnings ([#1431](https://github.com/podlove/podlove-publisher/pull/1431), [#1430](https://github.com/podlove/podlove-publisher/pull/1430))\n- update js dependencies\n- update help text for missing curl module\n\n= 4.0.10 =\n\n- fix security issues (XSS)\n- do not unnecessarily flush rewrite rules ([Issue#1432](https://github.com/podlove/podlove-publisher/issues/1432))\n- fix link to Slacknotes and Subscribe Button documentation\n- fix psr library not removed after prefixing ([Issue#1421](https://github.com/podlove/podlove-publisher/issues/1421))\n\n= 4.0.9 =\n\n**Enhancements**\n\n- trim whitespaces from beginning and end of file slug\n- soundbite: change placeholder to HH:MM:SS to clarify format\n\n**Bugfixes**\n\n- fix division by zero in analytics\n- fix default contributors missing position attribute\n- fix Auphonic chapter timestamp import\n- fix page reload when clicking chapter upload button\n\n= 4.0.8 =\n\n**Bugfixes**\n\n- fix broken analytics episode screen\n\n= 4.0.7 =\n\n**Bugfixes**\n\n- fix media verification not saving\n- fix shownotes unfurling\n- avoid failure during database migration\n\n**Misc**\n\n- update/cleanup various js dependencies\n\n= 4.0.6 =\n\n**Bugfixes**\n\n- Auphonic: saving production not working when slug is not set (bug introduced in 4.0.5)\n\n= 4.0.5 =\n\n**Bugfixes**\n\n\n- Auphonic: restore previous behaviour:\n  - automatically fill in file slug, validate media files and fill in duration when production finishes\n  - use slug as \"output_basename\" if it is set\n\n**Misc**\n\n- cleanup legacy js app (dependency updates, deletion of unused code etc.)\n\n= 4.0.3 / 4.0.4 =\n\n**Enhancements**\n\n- Auphonic: sort presets alphabetically\n- Contributors: make better use of available space\n\n**Bugfixes**\n\n- episode metadata not saving reliably for some people\n- Auphonic: fix chapter time import\n- WordPress File Upload: display slug input (should be filled automatically but does not seem to work reliably)\n\n= 4.0.2 =\n\n**Bugfixes**\n\n- Auphonic: Chapters can be imported from production metadata\n- Contributors: Add support for Gravatar and default contributor image on edit screens\n- Dashboard: Asset Validation / Detection is working again [#1396](https://github.com/podlove/podlove-publisher/issues/1396)\n- Automatic Numbering: error when selecting a show\n\n= 4.0.1 =\n\n**Enhancements**\n\n- Auphonic: autosave before \"Start Production\" so it is not required to explicitly save before starting\n\n**Bugfixes**\n\n- Auphonic: open productions with missing algorithm information\n- Templates: fix broken core templates `downloads-select` and `related-episodes-list`\n- Classic Editor: display Episode Title Placeholder based on Blog Post Title\n\n= 4.0.0 =\n\nPodlove Publisher 4.0 is here, bringing a spring-clean (in November!) of the episode page. We tore up the foundation to bring you an all-new user interface.\n\n**Warning:** PHP 8.0 and above is now required!\n\n**Highlights**\n\n- **Episode Form** User Interface is modernised and auto-saves, so no work is ever lost.\n- **Auphonic module** includes Multitrack Support.\n- **New Contributors** can be added without leaving the episode page.\n- **Chapters** support images.\n- **REST API V2** is now, including many more endpoints. See the [API documentation](https://docs.podlove.org/podlove-publisher/api) for all the details.\n\n\n**Tidbits**\n\n- file \u201cslug\u201d field is prefixed with the media location so it\u2019s more obvious what it is used for\n- episode duration is always auto-detected and not an input field any more\n- Auphonic Preset can be selected directly in the episode and does not rely on global module setting any more\n- removed module \u201cTwitter Card Integration\u201d (RIP). By the way, if you want to follow us on social media, find us here: https://fosstodon.org/@podlove\n- fix various PHP notices and warnings to be PHP 8.0+ compatible\n\n----\n\nChanges for previous versions can be found in the [`changelog.txt`](https://github.com/podlove/podlove-publisher/blob/master/changelog.txt).\n\n== Upgrade Notice ==\n\n= 4.0.0 =\n\nAn all-new episode creation experience. Requires PHP 8.0 and above.\n"], "fixing_code": ["<?php\n\nnamespace Podlove\\Modules\\ImportExport\\Export;\n\nclass PodcastExporter\n{\n    const XML_NAMESPACE = 'http://podlove.org/podlove-podcast-publisher/export';\n    private $compression = false;\n\n    public function __construct()\n    {\n        add_action('podlove_xml_export', [$this, 'exportEpisodes']);\n        add_action('podlove_xml_export', [$this, 'exportAssets']);\n        add_action('podlove_xml_export', [$this, 'exportFeeds']);\n        add_action('podlove_xml_export', [$this, 'exportFileType']);\n        add_action('podlove_xml_export', [$this, 'exportMediaFile']);\n        add_action('podlove_xml_export', [$this, 'exportTemplates']);\n        add_action('podlove_xml_export', [$this, 'exportTracking']);\n        add_action('podlove_xml_export', [$this, 'exportOptions']);\n\n        if (function_exists('gzencode') && extension_loaded('zlib')) {\n            $this->enableCompression();\n        }\n    }\n\n    public static function init()\n    {\n        if (!is_admin()) {\n            return;\n        }\n\n        if (isset($_GET['podlove_export']) && $_GET['podlove_export']) {\n            if (!current_user_can('administrator')) {\n                return;\n            }\n\n            if (!wp_verify_nonce($_REQUEST['_podlove_nonce'], 'podlove_export')) {\n                return;\n            }\n\n            $exporter = new \\Podlove\\Modules\\ImportExport\\Export\\PodcastExporter();\n            $exporter->download();\n            exit;\n        }\n    }\n\n    public function enableCompression()\n    {\n        $this->compression = true;\n    }\n\n    public function isCompressionEnabled()\n    {\n        return (bool) $this->compression;\n    }\n\n    public function download()\n    {\n        $this->setDownloadHeaders();\n        $xml = $this->getXml();\n\n        if ($this->isCompressionEnabled()) {\n            echo gzencode($xml);\n        } else {\n            echo $xml;\n        }\n        exit;\n    }\n\n    public function exportEpisodes(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'episodes', 'episode', '\\Podlove\\Model\\Episode');\n    }\n\n    public function exportAssets(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'assets', 'asset', '\\Podlove\\Model\\EpisodeAsset');\n    }\n\n    public function exportFeeds(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'feeds', 'feed', '\\Podlove\\Model\\Feed');\n    }\n\n    public function exportFileType(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'filetypes', 'filetype', '\\Podlove\\Model\\FileType');\n    }\n\n    public function exportMediaFile(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'mediafiles', 'mediafile', '\\Podlove\\Model\\MediaFile');\n    }\n\n    public function exportTemplates(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'templates', 'template', '\\Podlove\\Model\\Template');\n    }\n\n    public function exportTracking(\\SimpleXMLElement $xml)\n    {\n        self::exportTable($xml, 'geoareas', 'geoarea', '\\Podlove\\Model\\GeoArea');\n        self::exportTable($xml, 'geoareanames', 'geoareaname', '\\Podlove\\Model\\GeoAreaName');\n        self::exportTable($xml, 'useragents', 'useragent', '\\Podlove\\Model\\UserAgent');\n    }\n\n    public function exportOptions(\\SimpleXMLElement $xml)\n    {\n        global $wpdb;\n        $sql = 'SELECT option_name FROM '.$wpdb->options.' WHERE option_name LIKE \"%podlove%\" AND option_name NOT LIKE \"_transient%\"';\n        $options = $wpdb->get_col($sql);\n\n        $xml_group = $xml->addChild('xmlns:wpe:options');\n        foreach ($options as $option_name) {\n            $value = get_option($option_name);\n            if ($value !== false) {\n                if (is_array($value)) {\n                    foreach ($value as $k => $v) {\n                        // `addChild` does not escape '&', so we need to escape\n                        // it *before* serializing, otherwise deserialization will\n                        // break due to string length mismatch.\n                        if (is_string($v)) {\n                            $value[$k] = htmlspecialchars($v);\n                        }\n                    }\n                    $xml_group->addChild(\"xmlns:wpe:{$option_name}\", serialize($value));\n                } else {\n                    if (is_object($value)) {\n                        $value = maybe_serialize($value);\n                    }\n\n                    $value = htmlspecialchars($value);\n                    $xml_group->addChild(\"xmlns:wpe:{$option_name}\", $value);\n                }\n            }\n        }\n    }\n\n    public static function exportTable(\\SimpleXMLElement $xml, $group_name, $item_name, $table_class)\n    {\n        $xml_group = $xml->addChild(\"xmlns:wpe:{$group_name}\");\n        foreach ($table_class::all() as $mediafile) {\n            $xml_item = $xml_group->addChild(\"xmlns:wpe:{$item_name}\");\n            foreach ($table_class::property_names() as $property_name) {\n                if (strlen($mediafile->{$property_name}) === 0) {\n                    continue;\n                }\n\n                $value = htmlspecialchars($mediafile->{$property_name});\n                $xml_item->addChild(\"xmlns:wpe:{$property_name}\", $value);\n            }\n        }\n    }\n\n    public function getXml()\n    {\n        $xml = new \\SimpleXMLElement('<wpe:export/>', LIBXML_NOERROR | LIBXML_NOWARNING, false, 'wpe', true);\n        // Double xmlns looks strange but is intentionally/required.\n        // See http://stackoverflow.com/a/9391673/72448\n        $xml->addAttribute('xmlns:xmlns:wpe', self::XML_NAMESPACE);\n        $xml->addAttribute('version', '1.0');\n        $xml->addAttribute('podlove-publisher-version', \\Podlove\\get_plugin_header('Version'));\n\n        // add comments\n        $comment = \"\\n\\tExport Date: \".date('r');\n        $comment .= \"\\n\\t\";\n\n        $dom = dom_import_simplexml($xml);\n        $commentElement = $dom->ownerDocument->createComment($comment);\n        $dom->appendChild($commentElement);\n\n        do_action('podlove_xml_export', $xml);\n\n        // return formatted\n        $dom = dom_import_simplexml($xml)->ownerDocument;\n        $dom->formatOutput = true;\n\n        return $dom->saveXML();\n    }\n\n    private function getDownloadFileName()\n    {\n        $sitename = sanitize_key(get_bloginfo('name'));\n\n        if (!empty($sitename)) {\n            $sitename .= '.';\n        }\n\n        $filename = $sitename.'podlove.'.date('Y-m-d').'.xml';\n\n        if ($this->isCompressionEnabled()) {\n            $filename .= '.gz';\n        }\n\n        return $filename;\n    }\n\n    private function setDownloadHeaders()\n    {\n        header('Content-Description: File Transfer');\n        header('Content-Disposition: attachment; filename='.$this->getDownloadFileName());\n        header('Cache-control: private');\n        header('Expires: -1');\n\n        if ($this->isCompressionEnabled()) {\n            // Do *not* send gzip headers. Why? If you set gzip headers, the data is\n            // transferred compressed but unzipped before it's saved to disk. But we\n            // want it to be compressed as a file, not just for transfer.\n\n            // header( 'Content-Encoding: gzip' );\n            // header( 'Content-Type: application/x-gzip; charset=' . get_option( 'blog_charset' ), true );\n        } else {\n            header('Content-Type: text/xml; charset='.get_option('blog_charset'), true);\n        }\n    }\n}\n", "<?php\n\nnamespace Podlove\\Modules\\ImportExport\\Export;\n\nclass TrackingExporter\n{\n    public static function init()\n    {\n        add_action('wp_ajax_podlove-export-tracking', [__CLASS__, 'export_tracking']);\n        add_action('wp_ajax_podlove-export-tracking-status', [__CLASS__, 'export_tracking_status']);\n\n        self::init_download();\n    }\n\n    public static function init_download()\n    {\n        if (!is_admin()) {\n            return;\n        }\n\n        if (isset($_GET['podlove_export_tracking']) && $_GET['podlove_export_tracking']) {\n            if (!current_user_can('administrator')) {\n                exit;\n            }\n\n            if (!wp_verify_nonce($_REQUEST['_podlove_nonce'], 'podlove_export_tracking_download')) {\n                exit;\n            }\n\n            delete_transient('podlove_tracking_export_finished');\n\n            header('Content-Type: application/octet-stream');\n            header('Content-Description: File Transfer');\n            header('Content-Disposition: attachment; filename='.TrackingExporter::getDownloadFileName());\n            header('Cache-control: private');\n            header('Expires: -1');\n\n            readfile(TrackingExporter::get_tracking_export_file_path());\n            exit;\n        }\n    }\n\n    public static function get_tracking_export_file_path()\n    {\n        $upload_dir = wp_upload_dir();\n\n        return $upload_dir['basedir'].DIRECTORY_SEPARATOR.'tracking.tmp';\n    }\n\n    public static function export_tracking()\n    {\n        global $wpdb;\n\n        if (!current_user_can('administrator')) {\n            exit;\n        }\n\n        if (!wp_verify_nonce($_REQUEST['_podlove_nonce'], 'podlove_export_tracking')) {\n            exit;\n        }\n\n        // only one export at a time\n        if (get_option('podlove_tracking_export_all') !== false) {\n            exit;\n        }\n\n        update_option('podlove_tracking_export_all', $wpdb->get_var('SELECT COUNT(*) FROM '.\\Podlove\\Model\\DownloadIntent::table_name()));\n        update_option('podlove_tracking_export_progress', 0);\n\n        $rowsPerQuery = 1000;\n        $lastId = 0;\n        $page = 0;\n\n        $fp = gzopen(self::get_tracking_export_file_path(), 'w');\n\n        do {\n            // Keeping track of the $lastId is (roughly) a bajillion times faster than paging via LIMIT.\n            $sql = '\n\t\t\t\tSELECT\n\t\t\t\t\tid,\n\t\t\t\t\tuser_agent_id,\n\t\t\t\t\tmedia_file_id,\n\t\t\t\t\trequest_id,\n\t\t\t\t\taccessed_at,\n\t\t\t\t\tsource,\n\t\t\t\t\tcontext,\n\t\t\t\t\tgeo_area_id,\n\t\t\t\t\tlat,\n\t\t\t\t\tlng,\n\t\t\t\t\thttprange\n\t\t\t\tFROM\n\t\t\t\t\t'.\\Podlove\\Model\\DownloadIntent::table_name().'\n\t\t\t\t\tWHERE id > '.(int) $lastId.\"\n\t\t\t\tLIMIT 0, {$rowsPerQuery}\";\n            $rows = $wpdb->get_results($sql, ARRAY_A);\n            foreach ($rows as $row) {\n                gzwrite($fp, implode(',', $row).\"\\n\");\n            }\n\n            $lastId = $row['id'];\n            ++$page;\n\n            update_option('podlove_tracking_export_progress', $page * $rowsPerQuery);\n        } while (count($rows) > 0);\n\n        gzclose($fp);\n\n        set_transient('podlove_tracking_export_finished', true, MINUTE_IN_SECONDS * 3);\n        delete_option('podlove_tracking_export_all');\n        delete_option('podlove_tracking_export_progress');\n        exit;\n    }\n\n    public static function export_tracking_status()\n    {\n        echo json_encode([\n            'all' => get_option('podlove_tracking_export_all'),\n            'progress' => get_option('podlove_tracking_export_progress'),\n            'finished' => (bool) get_transient('podlove_tracking_export_finished'),\n        ]);\n        exit;\n    }\n\n    private static function getDownloadFileName()\n    {\n        $sitename = sanitize_key(get_bloginfo('name'));\n\n        if (!empty($sitename)) {\n            $sitename .= '.';\n        }\n\n        return $sitename.'tracking.'.date('Y-m-d').'.csv.gz';\n    }\n}\n", "<?php\n\nnamespace Podlove\\Modules\\ImportExport;\n\nclass Import_Export extends \\Podlove\\Modules\\Base\n{\n    protected $module_name = 'Import &amp; Export';\n    protected $module_description = 'Import &amp; export podlove data for backup or migration to another WordPress instance.';\n    protected $module_group = 'system';\n\n    public function load()\n    {\n        add_action('admin_init', function () {\n            Export\\PodcastExporter::init();\n            Import\\PodcastImporter::init();\n            Export\\TrackingExporter::init();\n            Import\\TrackingImporter::init();\n            $this->register_tools();\n        });\n\n        add_action('admin_enqueue_scripts', function () {\n            if (isset($_REQUEST['page']) && $_REQUEST['page'] === 'podlove_tools_settings_handle') {\n                wp_enqueue_script('podlove_admin_import_script', $this->get_module_url().'/js/import.js', ['jquery'], \\Podlove\\get_plugin_header('Version'));\n            }\n        });\n\n        add_action('admin_notices', function () {\n            if (!isset($_GET['page'])) {\n                return false;\n            }\n\n            if ($_GET['page'] != 'podlove_tools_settings_handle') {\n                return false;\n            }\n\n            if (!isset($_GET['status'])) {\n                return false;\n            } ?>\n\t\t\t<div class=\"updated\">\n\t\t\t\t<p>\n\t\t\t\t\t<?php\n                    switch ($_GET['status']) {\n                        case 'success':\n                            echo __('Import successful. Happy podcasting!');\n\n                            break;\n                        case 'version-warning':\n                            echo __('Heads up: Your export file was exported from a Publisher with a different version. If possible, both Publisher versions should be identical. However, that might not be a problem. Happy podcasting!');\n\n                            break;\n                    } ?>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<?php\n        });\n    }\n\n    public function register_tools()\n    {\n        \\Podlove\\add_tools_section(\n            'import-export',\n            __('Import & Export', 'podlove-podcasting-plugin-for-wordpress'),\n            function () {\n                if (defined('SAVEQUERIES') && SAVEQUERIES) {\n                    ?>\n\t\t\t\t\t<div class=\"error\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<b><?php echo __('Heads up!', 'podlove-podcasting-plugin-for-wordpress'); ?></b>\n\t\t\t\t\t\t\t<?php echo __('The WordPress debug option <code>SAVEQUERIES</code> is active. This might lead to memory issues when exporting or importing tracking data.<br>It is probably defined in <code>wp-config.php</code>. Please turn it off before using the export tool.', 'podlove-podcasting-plugin-for-wordpress'); ?>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<?php\n                }\n            }\n        );\n\n        \\Podlove\\add_tools_field(\n            'export-podcast',\n            __('Podcast Export', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_podcast_export'],\n            'import-export'\n        );\n\n        \\Podlove\\add_tools_field(\n            'export-tracking',\n            __('Tracking Export', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_tracking_export'],\n            'import-export'\n        );\n\n        \\Podlove\\add_tools_field(\n            'import-podcast',\n            __('Podcast Import', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_podcast_import'],\n            'import-export'\n        );\n\n        \\Podlove\\add_tools_field(\n            'import-tracking',\n            __('Tracking Import', 'podlove-podcasting-plugin-for-wordpress'),\n            [$this, 'tools_tracking_import'],\n            'import-export'\n        );\n    }\n\n    public function tools_podcast_export()\n    {\n        echo sprintf(\n            __('This export complements the existing %sWordPress export tool%s. It contains all relevant podcast data to enable you to move from this WordPress instance to another. Step by step:', 'podlove-podcasting-plugin-for-wordpress'),\n            '<a href=\"'.admin_url('export.php').'\">',\n            '</a>'\n        ); ?>\n\t\t<ol>\n\t\t\t<li>\n\t\t\t\t<?php echo sprintf(\n            __('Go to the %sWordPress export tool%s and export all data.', 'podlove-podcasting-plugin-for-wordpress'),\n            '<a href=\"'.admin_url('export.php').'\">',\n            '</a>'\n        ); ?>\n\t\t\t</li>\n\t\t\t<li><?php echo __('Import this file to your new WordPress instance.', 'podlove-podcasting-plugin-for-wordpress'); ?></li>\n\t\t\t<li><?php echo __('Use the button below to export the podcast data file.', 'podlove-podcasting-plugin-for-wordpress'); ?></li>\n\t\t\t<li><?php echo __('In your new WordPress instance, import that file.', 'podlove-podcasting-plugin-for-wordpress'); ?></li>\n\t\t</ol>\n\n\t\t<a href=\"?podlove_export=1&_podlove_nonce=<?php echo wp_create_nonce('podlove_export'); ?>\" class=\"button\"><?php echo __('Export Podcast Data', 'podlove-podcasting-plugin-for-wordpress'); ?></a>\n\t\t<?php\n    }\n\n    public function tools_tracking_export()\n    {\n        ?>\n\t\t<p>\n\t\t\t<?php echo __('Im- and export of tracking data is a separate task. After you have completed the steps above, you can ex- and import tracking data.', 'podlove-podcasting-plugin-for-wordpress'); ?>\n\t\t</p>\n\t\t<p>\n\t\t\t<button id=\"podlove_tracking_export\" class=\"button\"><?php echo __('Export Tracking Data', 'podlove-podcasting-plugin-for-wordpress'); ?></button>\n\t\t\t<span id=\"podlove_tracking_export_status_wrapper\">\n\t\t\t\t<?php echo __('Export', 'podlove-podcasting-plugin-for-wordpress'); ?>: <span id=\"podlove_tracking_export_status\">starting ...</span>\n\t\t\t</span>\n\t\t</p>\n\n\t\t<style type=\"text/css\">\n\t\t#podlove_tracking_export_status_wrapper {\n\t\t\tdisplay: none;\n\t\t}\n\t\t</style>\n\n\t\t<script type=\"text/javascript\">\n\t\t(function($) {\n\n\t\t\tvar timeoutID = null;\n\n\t\t\tvar podlove_check_export_status = function() {\n\n\t\t\t\tif (timeoutID) {\n\t\t\t\t\twindow.clearTimeout(timeoutID);\n\t\t\t\t}\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\tdata: {action: 'podlove-export-tracking-status'},\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tsuccess: function(result) {\n\t\t\t\t\t\tif (result.all && result.progress) {\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export\").attr('disabled', 'disabled');\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export_status\").html((Math.round(1000.0 * (result.progress / result.all))/10.0) + \"%\");\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export_status_wrapper\").show();\n\n\t\t\t\t\t\t\ttimeoutID = window.setTimeout(podlove_check_export_status, 1000);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (result.finished) {\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export\").attr('disabled', false);\n\t\t\t\t\t\t\t$(\"#podlove_tracking_export_status_wrapper\").hide();\n\t\t\t\t\t\t\twindow.location = window.location + \"&podlove_export_tracking=1&_podlove_nonce=<?php echo wp_create_nonce('podlove_export_tracking_download'); ?>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t};\n\n\t\t\t$(\"#podlove_tracking_export\").on(\"click\", function() {\n\n\t\t\t\t$(\"#podlove_tracking_export\").attr('disabled', 'disabled');\n\t\t\t\t$(\"#podlove_tracking_export_status_wrapper\").show();\n\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\tdata: {action: 'podlove-export-tracking', _podlove_nonce: '<?php echo wp_create_nonce('podlove_export_tracking'); ?>'},\n\t\t\t\t\tdataType: 'json'\n\t\t\t\t}).done(function(result) {\n\t\t\t\t\t\tconsole.log(\"tracking export finished\");\n\t\t\t\t    window.setTimeout(podlove_check_export_status, 2000);\n\t\t\t\t});\n\n\t\t\t});\n\n\t\t\t// start immediately, in case the user refreshes the page\n\t\t\tpodlove_check_export_status();\n\t\t}(jQuery));\n\t\t</script>\n\t\t<?php\n    }\n\n    public function tools_podcast_import()\n    {\n        ?>\n\t\t<p>\n\t\t\t<?php echo __('Use this import on <strong>fresh installs only</strong>! Otherwise you may lose data. In any case, you should have backups.', 'podlove-podcasting-plugin-for-wordpress'); ?>\n\t\t</p>\n\n\t\t<form method=\"POST\" enctype=\"multipart/form-data\">\n\t\t\t(<span><?php echo self::get_maximum_upload_size_text(); ?></span>)\n\t\t\t<input type=\"file\" name=\"podlove_import\"/>\n\t\t\t<input type=\"submit\" value=\"<?php echo __('Import Podcast Data', 'podlove-podcasting-plugin-for-wordpress'); ?>\" class=\"button\" />\n\t\t\t<?php wp_nonce_field('podlove_import', '_podlove_nonce'); ?>\n\t\t</form>\n\t\t<?php\n    }\n\n    public function tools_tracking_import()\n    {\n        ?>\n\t\t<form method=\"POST\" enctype=\"multipart/form-data\">\n\t\t\t(<span><?php echo self::get_maximum_upload_size_text(); ?></span>)\n\t\t\t<input type=\"file\" name=\"podlove_import_tracking\"/>\n\t\t\t<input type=\"submit\" value=\"<?php echo __('Import Tracking Data', 'podlove-podcasting-plugin-for-wordpress'); ?>\" class=\"button\" />\n\t\t\t<?php wp_nonce_field('podlove_import_tracking', '_podlove_nonce'); ?>\n\t\t</form>\n\t\t<?php\n    }\n\n    public static function get_maximum_upload_size_text()\n    {\n        // this is exactly the same way it is done in wp_import_upload_form()\n        $bytes = apply_filters('import_upload_size_limit', \\wp_max_upload_size());\n        $size = \\size_format($bytes);\n\n        return sprintf(__('Maximum size: %s'), $size);\n    }\n}\n", "=== Podlove Podcast Publisher ===\nContributors: eteubert\nDonate link: https://opencollective.com/podlove\nTags: podlove, podcast, publishing, rss, feed, audio, mp3, m4a, player, webplayer, iTunes, radio\nTested up to: 6.4.2\nStable tag: 4.0.11\nRequires at least: 4.9.6\nRequires PHP: 8.0\nLicense: MIT\n\nThe one and only next generation podcast publishing system. Seriously. It's magical and sparkles a lot.\n\n== Description ==\n\nWe built the Podlove Podcast Publisher because existing solutions are stuck in the past, complex and unwieldy. The Publisher helps you save time, worry less and provides a cutting edge listening experience for your audience.\n\nOfficial Site: [podlove.org/podlove-podcast-publisher](https://podlove.org/podlove-podcast-publisher)\n\n= Video Tutorial: Getting started with Podlove Publisher =\n\n[youtube http://www.youtube.com/watch?v=Hmrm-jUe6u4]\n\n= Compatible Feeds =\n\nThe Publisher makes it easy to create highly expressive, efficient and super compatible podcast feeds with fine grained control over client behavior (e.g. GUID control to replace faulty episodes and for clients to reload) supporting all important meta data.\n\n= Multi-Format Publishing =\n\nThe Publisher also makes multi-format publishing - embracing all modern and legacy audio and video codecs - a snap. By adopting simple file name conventions, the plugin allows the podcaster to provide individual feeds for certain use cases or audiences without adding work for the podcaster during the publishing process.\n\n= Optimized Web Player =\n\nThe Publisher also comes with integrated with the Podlove Web Player plugin (which you do not need to install separately) and fully support its advanced options including multiple audio (MP4 AAC, MP3, Vorbis, Opus) and video (MP4 H.264, WebM, Theora) format support for web browsers. This Web Player is fully HTML5 compatible (but provides Flash fallback for ancient environments) and is ready for all touch based clients too.\n\n= Chapter Support =\n\nThe Publisher also makes it easy to publish chapter information in the player to make access to structured episodes even easier. Full support for linking directly to any part of your podcast on the web with instant playback included.\n\n= Flexible Templates =\n\nTo round it all up, a flexible template system enables you to published Podcasts in a defined fashion and change the style at any time without having to touch your individual postings later on.\n\nAnd this is just the beginning. We have a rich roadmap that will bring even more interesting features: integration with helpful services, much improved timeline metadata support (show notes) and much more.\n\n= Further Reading =\n\n* [Podlove Publisher](http://publisher.podlove.org/)\n* [Podlove Project](http://podlove.org/)\n* [Podlove Community](https://community.podlove.org/)\n* [Documentation](http://docs.podlove.org/)\n* [Bug Tracker](https://github.com/podlove/podlove-publisher/issues)\n* [Donate](http://podlove.org/donations/)\n\nDevelopment of the plugin is an open process. The current version is available [on GitHub](https://github.com/podlove/podlove-publisher) Feel free to contribute and to fix errors or send improvements via GitHub.\n\nRequires PHP 8.0+\n\n== Frequently Asked Questions ==\n\n### Is Podlove Podcast Publisher free?\n\nYes! The core features of Podlove Podcast Publisher are and always will be free.\n\n### Are there Download Statistics?\n\nYes! Podcast Downloads can be tracked and analyzed. You can easily see how many people downloaded you podcast episodes, which clients they used, if they prefer to subscribe to the feed or listen on your website using the web player\u2014and much more.\n\n### Are there Privacy / GDPR considerations?\n\nPodlove Publisher is GDPR compliant and provides prewritten text snippets for your privacy page. See https://docs.podlove.org/podlove-publisher/guides/dsgvo-gdpr.html\n\n### Where can I host my podcast files?\n\nAny storage where you have control over the file naming is compatible with Podlove Podcast Publisher. You can manage files using a simple FTP/sFTP or use services like Amazon S3.\n\n### Where can I ask questions and get support?\n\nFree support where questions are answered by the community is available in the [Podlove Community Forum](http://community.podlove.org/). There is a German community in the [Sendegate](https://sendegate.de/).\n\n### How can I help the project?\n\nThe continued success of Open Source project relies on the community. There are many ways you can help:\nEpisode title in API now follows the same rules as in RSS feed. There's a new field 'title_clean' for accessing the specifically set plain episode title, but that might be null in some cases, so it's better to default the 'title' attribute to the usual rules.\n- If you enjoy the plugin, please [leave a review](https://wordpress.org/support/plugin/podlove-podcasting-plugin-for-wordpress/reviews/#new-post).\n- You can answer questions of other fellow podcasters in the [Podlove Community](https://community.podlove.org/).\n\n---\n\nThis product includes GeoLite2 data created by MaxMind, available from http://www.maxmind.com.\n\n== Installation ==\n\n1. Download the Podlove Publisher Plugin to your desktop.\n1. If downloaded as a zip archive, extract the Plugin folder to your desktop.\n1. With your FTP program, upload the Plugin folder to the wp-content/plugins folder in your WordPress directory online.\n1. Go to Plugins screen and find the newly uploaded Plugin in the list.\n1. Click Activate Plugin to activate it.\n\n== Screenshots ==\n1. Custom episode post type separates media from your blog content.\n2. Download analytics provide you with all the data you ever wanted.\n3. The Publisher automatically checks the health of your media files.\n4. The mighty template engine gives you full control over the episode presentation.\n5. Includes the Podlove Subscribe Button, the easiest way for listeners to subscribe to your podcast.\n6. Includes the Podlove Web Player. One more thing: you can manage and present all contributors easily.\n\n== Changelog ==\n\n= 4.0.12 =\n\n**Security**\n\n- fix SSRF vulnerability in Slacknotes module\n- add missing capability check and nonce validation to importer functions\n- add missing capability check and nonce validation to exporter functions\n\n= 4.0.11 =\n\n- new: show admin notice when a database migration fails\n- fix bug where tracking data could be lost by disabling a media file checkbox\n- fix bug where imported Hindenburg chapters were not sorted by time\n- fix build script (correctly delete all vendor prefixed dependencies)\n- fix deprecation warnings ([#1431](https://github.com/podlove/podlove-publisher/pull/1431), [#1430](https://github.com/podlove/podlove-publisher/pull/1430))\n- update js dependencies\n- update help text for missing curl module\n\n= 4.0.10 =\n\n- fix security issues (XSS)\n- do not unnecessarily flush rewrite rules ([Issue#1432](https://github.com/podlove/podlove-publisher/issues/1432))\n- fix link to Slacknotes and Subscribe Button documentation\n- fix psr library not removed after prefixing ([Issue#1421](https://github.com/podlove/podlove-publisher/issues/1421))\n\n= 4.0.9 =\n\n**Enhancements**\n\n- trim whitespaces from beginning and end of file slug\n- soundbite: change placeholder to HH:MM:SS to clarify format\n\n**Bugfixes**\n\n- fix division by zero in analytics\n- fix default contributors missing position attribute\n- fix Auphonic chapter timestamp import\n- fix page reload when clicking chapter upload button\n\n= 4.0.8 =\n\n**Bugfixes**\n\n- fix broken analytics episode screen\n\n= 4.0.7 =\n\n**Bugfixes**\n\n- fix media verification not saving\n- fix shownotes unfurling\n- avoid failure during database migration\n\n**Misc**\n\n- update/cleanup various js dependencies\n\n= 4.0.6 =\n\n**Bugfixes**\n\n- Auphonic: saving production not working when slug is not set (bug introduced in 4.0.5)\n\n= 4.0.5 =\n\n**Bugfixes**\n\n\n- Auphonic: restore previous behaviour:\n  - automatically fill in file slug, validate media files and fill in duration when production finishes\n  - use slug as \"output_basename\" if it is set\n\n**Misc**\n\n- cleanup legacy js app (dependency updates, deletion of unused code etc.)\n\n= 4.0.3 / 4.0.4 =\n\n**Enhancements**\n\n- Auphonic: sort presets alphabetically\n- Contributors: make better use of available space\n\n**Bugfixes**\n\n- episode metadata not saving reliably for some people\n- Auphonic: fix chapter time import\n- WordPress File Upload: display slug input (should be filled automatically but does not seem to work reliably)\n\n= 4.0.2 =\n\n**Bugfixes**\n\n- Auphonic: Chapters can be imported from production metadata\n- Contributors: Add support for Gravatar and default contributor image on edit screens\n- Dashboard: Asset Validation / Detection is working again [#1396](https://github.com/podlove/podlove-publisher/issues/1396)\n- Automatic Numbering: error when selecting a show\n\n= 4.0.1 =\n\n**Enhancements**\n\n- Auphonic: autosave before \"Start Production\" so it is not required to explicitly save before starting\n\n**Bugfixes**\n\n- Auphonic: open productions with missing algorithm information\n- Templates: fix broken core templates `downloads-select` and `related-episodes-list`\n- Classic Editor: display Episode Title Placeholder based on Blog Post Title\n\n= 4.0.0 =\n\nPodlove Publisher 4.0 is here, bringing a spring-clean (in November!) of the episode page. We tore up the foundation to bring you an all-new user interface.\n\n**Warning:** PHP 8.0 and above is now required!\n\n**Highlights**\n\n- **Episode Form** User Interface is modernised and auto-saves, so no work is ever lost.\n- **Auphonic module** includes Multitrack Support.\n- **New Contributors** can be added without leaving the episode page.\n- **Chapters** support images.\n- **REST API V2** is now, including many more endpoints. See the [API documentation](https://docs.podlove.org/podlove-publisher/api) for all the details.\n\n\n**Tidbits**\n\n- file \u201cslug\u201d field is prefixed with the media location so it\u2019s more obvious what it is used for\n- episode duration is always auto-detected and not an input field any more\n- Auphonic Preset can be selected directly in the episode and does not rely on global module setting any more\n- removed module \u201cTwitter Card Integration\u201d (RIP). By the way, if you want to follow us on social media, find us here: https://fosstodon.org/@podlove\n- fix various PHP notices and warnings to be PHP 8.0+ compatible\n\n----\n\nChanges for previous versions can be found in the [`changelog.txt`](https://github.com/podlove/podlove-publisher/blob/master/changelog.txt).\n\n== Upgrade Notice ==\n\n= 4.0.0 =\n\nAn all-new episode creation experience. Requires PHP 8.0 and above.\n"], "filenames": ["lib/modules/import_export/export/podcast_exporter.php", "lib/modules/import_export/export/tracking_exporter.php", "lib/modules/import_export/import_export.php", "readme.txt"], "buggy_code_start_loc": [32, 21, 126, 114], "buggy_code_end_loc": [32, 49, 232, 114], "fixing_code_start_loc": [33, 22, 126, 115], "fixing_code_end_loc": [41, 65, 231, 116], "type": "CWE-862", "message": "The Podlove Podcast Publisher plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the init_download() and init() functions in all versions up to, and including, 4.0.11. This makes it possible for unauthenticated attackers to export the plugin's tracking data and podcast information.", "other": {"cve": {"id": "CVE-2024-1109", "sourceIdentifier": "security@wordfence.com", "published": "2024-02-07T11:15:08.683", "lastModified": "2024-02-10T04:13:21.610", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "The Podlove Podcast Publisher plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the init_download() and init() functions in all versions up to, and including, 4.0.11. This makes it possible for unauthenticated attackers to export the plugin's tracking data and podcast information."}, {"lang": "es", "value": "El complemento Podlove Podcast Publisher para WordPress es vulnerable al acceso no autorizado a los datos debido a una falta de verificaci\u00f3n de capacidad en las funciones init_download() e init() en todas las versiones hasta la 4.0.11 incluida. Esto hace posible que atacantes no autenticados exporten los datos de seguimiento del complemento y la informaci\u00f3n del podcast."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}, {"source": "security@wordfence.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 3.9, "impactScore": 1.4}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-862"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:podlove:podlove_podcast_publisher:*:*:*:*:*:wordpress:*:*", "versionEndIncluding": "4.0.11", "matchCriteriaId": "E302ED2F-F761-4E98-BC91-B001D42F9021"}]}]}], "references": [{"url": "https://github.com/podlove/podlove-publisher/commit/0ac83d1955aa964a358833b1b5ce790fff45b3f4", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&old=3032008%40podlove-podcasting-plugin-for-wordpress&new=3032008%40podlove-podcasting-plugin-for-wordpress&sfp_email=&sfph_mail=", "source": "security@wordfence.com", "tags": ["Patch"]}, {"url": "https://www.wordfence.com/threat-intel/vulnerabilities/id/a7b25b66-e9d1-448d-8367-cce4c0dec635?source=cve", "source": "security@wordfence.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/podlove/podlove-publisher/commit/0ac83d1955aa964a358833b1b5ce790fff45b3f4"}}