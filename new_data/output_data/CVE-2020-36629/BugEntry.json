{"buggy_code": ["#!/usr/bin/env node\n\n###\n  HTTPster\n  Copyright(c) 2018 Simeon Bateman <simeon@simb.net>\n  MIT Licensed\n###\n\nfs = require('fs')\nprogram = require('commander')\nexec = require('child_process').exec\nexpress = require('express')\nserveIndex = require('serve-index')\ncors = require('cors')\npath = \"./\"\nport = undefined\nfav = require('./fav')\npack = require('../package.json')\nenv = require('node-env-file')\nbasicAuth = require('basic-auth')\nmorgan = require('morgan')\n\nprogram\n  .version(pack.version)\n  .option('-p, --port <port>', 'Port for server to run on - defaults to 3333')\n  .option('-d, --dir [path]', 'Server directory - defaults to ./')\n  .option('-z, --compress', 'Add support for compression')\n  .option('-s, --pushstate', 'Add support for HTML5 pushstate')\n  .option('-e, --env', 'Add support for setting environmental variables from .env file')\n  .option('-b, --basic_auth', 'Add support for basic auth security. Uses environmental variables HTTPSTER_AUTH_USER and HTTPSTER_AUTH_PASS to authenticate')\n  .option('-c, --cors', 'Add cors support')\n  .parse(process.argv)\n\nif program.env\n  env(fs.realpathSync(path) + \"/.env\")\n\nport = program.port ? 3333\npath = program.dir ? fs.realpathSync(path)\nuseCompress = program.compress ? false\nuseCors = program.cors ? false\nusePushstate = program.pushstate ? false\n\nif program.basic_auth\n  if !process.env.HTTPSTER_AUTH_USER?\n    throw('HTTPSTER Basic Authentication Enabled but no HTTPSTER_AUTH_USER environmental variable was found')\n  if !process.env.HTTPSTER_AUTH_PASS?\n    throw('HTTPSTER Basic Authentication Enabled but no HTTPSTER_AUTH_PASS environmental variable was found')\n\nstartDefaultServer = (port, path) ->\n\n  app = express()\n\n  if useCompress == true\n    app.use express.compress()\n\n  app.use fav(path)\n  app.use basicAuth(process.env.HTTPSTER_AUTH_USER, process.env.HTTPSTER_AUTH_PASS) if program.basic_auth\n  app.use cors() if useCors\n  app.use express.static(path)\n  app.use serveIndex(path)\n  app.use morgan(\"dev\")\n  # app.use express.errorHandler(dumpExceptions: true, showStack: true)\n\n  # pushstate support\n  if usePushstate == true\n    app.all \"/*\", (req, res) ->\n      res.sendfile \"index.html\",\n        root: path\n      return\n\n  # production only\n  if ( app.get('env') == 'production')\n    app.use express.staticCache()\n  \n\n  app.listen(parseInt(port, 10))\n\n  app\n\nconsole.log(\"Starting HTTPster v%s on port %j from %s\", pack.version, port, path)\nstartDefaultServer(port, path)\n"], "fixing_code": ["#!/usr/bin/env node\n\n###\n  HTTPster\n  Copyright(c) 2018 Simeon Bateman <simeon@simb.net>\n  MIT Licensed\n###\n\nfs = require('fs')\nprogram = require('commander')\nexec = require('child_process').exec\nexpress = require('express')\nserveIndex = require('serve-index')\ncors = require('cors')\nfs = require('fs')\npath = \"./\"\nport = undefined\nfav = require('./fav')\npack = require('../package.json')\nenv = require('node-env-file')\nbasicAuth = require('basic-auth')\nmorgan = require('morgan')\n\nprogram\n  .version(pack.version)\n  .option('-p, --port <port>', 'Port for server to run on - defaults to 3333')\n  .option('-d, --dir [path]', 'Server directory - defaults to ./')\n  .option('-z, --compress', 'Add support for compression')\n  .option('-s, --pushstate', 'Add support for HTML5 pushstate')\n  .option('-e, --env', 'Add support for setting environmental variables from .env file')\n  .option('-b, --basic_auth', 'Add support for basic auth security. Uses environmental variables HTTPSTER_AUTH_USER and HTTPSTER_AUTH_PASS to authenticate')\n  .option('-c, --cors', 'Add cors support')\n  .option('-l, --symlink', 'Enable symlink')\n  .parse(process.argv)\n\nif program.env\n  env(fs.realpathSync(path) + \"/.env\")\n\nport = program.port ? 3333\npath = program.dir ? fs.realpathSync(path)\nuseCompress = program.compress ? false\nuseCors = program.cors ? false\nusePushstate = program.pushstate ? false\nuseSymlink = program.symlink ? false\nrouter = express.Router()\n\nif program.basic_auth\n  if !process.env.HTTPSTER_AUTH_USER?\n    throw('HTTPSTER Basic Authentication Enabled but no HTTPSTER_AUTH_USER environmental variable was found')\n  if !process.env.HTTPSTER_AUTH_PASS?\n    throw('HTTPSTER Basic Authentication Enabled but no HTTPSTER_AUTH_PASS environmental variable was found')\n\nrouter.use (req, res, next) ->\n    isSymlink = undefined\n    try\n      fs.lstat req.url.replace('/', './'), (err, stat) ->\n        try\n          isSymlink = stat.isSymbolicLink()\n        catch err\n        try\n          if isSymlink == true and useSymlink == false\n            throw new Error('Symlinks not allowed')\n        catch err\n          next err\n        return\n    catch err\n      next err\n    next()\n    return\n\nstartDefaultServer = (port, path) ->\n\n  app = express()\n\n  if useCompress == true\n    app.use express.compress()\n\n  app.use fav(path)\n  app.use basicAuth(process.env.HTTPSTER_AUTH_USER, process.env.HTTPSTER_AUTH_PASS) if program.basic_auth\n  app.use cors() if useCors\n  app.use router\n  app.use express.static(path)\n  app.use serveIndex(path)\n  app.use morgan(\"dev\")\n  # app.use express.errorHandler(dumpExceptions: true, showStack: true)\n\n  # pushstate support\n  if usePushstate == true\n    app.all \"/*\", (req, res) ->\n      res.sendfile \"index.html\",\n        root: path\n      return\n\n  # production only\n  if ( app.get('env') == 'production')\n    app.use express.staticCache()\n  \n\n  app.listen(parseInt(port, 10))\n\n  app\n\nconsole.log(\"Starting HTTPster v%s on port %j from %s\", pack.version, port, path)\nstartDefaultServer(port, path)\n"], "filenames": ["src/server.coffee"], "buggy_code_start_loc": [14], "buggy_code_end_loc": [58], "fixing_code_start_loc": [15], "fixing_code_end_loc": [82], "type": "CWE-22", "message": "A vulnerability classified as critical was found in SimbCo httpster. This vulnerability affects the function fs.realpathSync of the file src/server.coffee. The manipulation leads to path traversal. The exploit has been disclosed to the public and may be used. The name of the patch is d3055b3e30b40b65d30c5a06d6e053dffa7f35d0. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216748.", "other": {"cve": {"id": "CVE-2020-36629", "sourceIdentifier": "cna@vuldb.com", "published": "2022-12-25T11:15:10.840", "lastModified": "2023-01-04T20:49:04.160", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "A vulnerability classified as critical was found in SimbCo httpster. This vulnerability affects the function fs.realpathSync of the file src/server.coffee. The manipulation leads to path traversal. The exploit has been disclosed to the public and may be used. The name of the patch is d3055b3e30b40b65d30c5a06d6e053dffa7f35d0. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216748."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "NONE", "availabilityImpact": "NONE", "baseScore": 7.5, "baseSeverity": "HIGH"}, "exploitabilityScore": 3.9, "impactScore": 3.6}], "cvssMetricV30": [{"source": "cna@vuldb.com", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:A/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "ADJACENT_NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.5, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.1, "impactScore": 3.4}]}, "weaknesses": [{"source": "cna@vuldb.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-22"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:httpster_project:httpster:*:*:*:*:*:node.js:*:*", "versionEndExcluding": "2020-11-19", "matchCriteriaId": "4BB58B36-F855-4654-8D97-3A6109E525DD"}]}]}], "references": [{"url": "https://github.com/SimbCo/httpster/commit/d3055b3e30b40b65d30c5a06d6e053dffa7f35d0", "source": "cna@vuldb.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/SimbCo/httpster/pull/36", "source": "cna@vuldb.com", "tags": ["Exploit", "Patch", "Third Party Advisory"]}, {"url": "https://vuldb.com/?id.216748", "source": "cna@vuldb.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/SimbCo/httpster/commit/d3055b3e30b40b65d30c5a06d6e053dffa7f35d0"}}