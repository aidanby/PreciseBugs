{"buggy_code": ["/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.security.internal;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\nimport javax.inject.Inject;\nimport javax.inject.Provider;\nimport javax.inject.Singleton;\n\nimport org.slf4j.Logger;\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.security.authorization.Right;\n\nimport com.xpn.xwiki.XWikiContext;\nimport com.xpn.xwiki.XWikiException;\nimport com.xpn.xwiki.doc.MandatoryDocumentInitializer;\nimport com.xpn.xwiki.doc.XWikiDocument;\nimport com.xpn.xwiki.objects.BaseObject;\n\nimport static org.xwiki.security.authorization.Right.DELETE;\nimport static org.xwiki.security.authorization.Right.EDIT;\nimport static org.xwiki.security.authorization.Right.VIEW;\nimport static org.xwiki.security.internal.XWikiConstants.ALLOW_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.GROUPS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LEVELS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LOCAL_CLASS_REFERENCE;\n\n/**\n * Service provided to {@link MandatoryDocumentInitializer}s to initialize documents with the correct rights.\n *\n * @version $Id$\n * @since 14.4.8\n * @since 14.10.5\n * @since 15.1RC1\n */\n@Component(roles = DocumentInitializerRightsManager.class)\n@Singleton\npublic class DocumentInitializerRightsManager\n{\n    private static final String XWIKI_ADMIN_GROUP_DOCUMENT_REFERENCE = \"XWiki.XWikiAdminGroup\";\n\n    @Inject\n    private Provider<XWikiContext> xcontextProvider;\n\n    @Inject\n    private Logger logger;\n\n    /**\n     * Restrict the rights of the provided document so that it can only be viewed, edited and deleted by the\n     * {@code XWiki.XWikiAdminGroup} group. Note that this restriction is only applied if no rights are already applied\n     * on the current document.\n     *\n     * @param document the document to updated rights on\n     * @return {@code true} if the document has been modified, {@code false} otherwise (including if the document hasn't\n     *     been modified because of an error during the modification)\n     */\n    public boolean restrictToAdmin(XWikiDocument document)\n    {\n        boolean updated = false;\n        // If some rights have already been set on the document, we consider that it has already been protected \n        // manually.\n        if (document.getXObjects(LOCAL_CLASS_REFERENCE).isEmpty()) {\n            updated = initializeRights(document, XWIKI_ADMIN_GROUP_DOCUMENT_REFERENCE, List.of(VIEW, EDIT, DELETE));\n        }\n\n        return updated;\n    }\n\n    private boolean initializeRights(XWikiDocument document, String xwikiAdminGroupDocumentReference,\n        List<Right> rights)\n    {\n        boolean updated = false;\n\n        try {\n            XWikiContext xwikiContext = this.xcontextProvider.get();\n            BaseObject object = document.newXObject(LOCAL_CLASS_REFERENCE, xwikiContext);\n            XWikiContext xWikiContext = this.xcontextProvider.get();\n            object.set(GROUPS_FIELD_NAME, xwikiAdminGroupDocumentReference, xWikiContext);\n            object.set(LEVELS_FIELD_NAME, rights.stream().map(Right::getName).collect(Collectors.toList()),\n                xWikiContext);\n            object.set(ALLOW_FIELD_NAME, 1, xWikiContext);\n            updated = true;\n        } catch (XWikiException e) {\n            this.logger.error(String.format(\"Error adding a [%s] object to the document [%s]\", LOCAL_CLASS_REFERENCE,\n                document.getDocumentReference()));\n        }\n\n        return updated;\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.security.internal;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.RegisterExtension;\nimport org.xwiki.model.reference.DocumentReference;\nimport org.xwiki.model.reference.EntityReference;\nimport org.xwiki.test.LogLevel;\nimport org.xwiki.test.annotation.AllComponents;\nimport org.xwiki.test.junit5.LogCaptureExtension;\nimport org.xwiki.test.junit5.mockito.InjectMockComponents;\nimport org.xwiki.test.mockito.MockitoComponentManager;\n\nimport com.xpn.xwiki.XWikiContext;\nimport com.xpn.xwiki.XWikiException;\nimport com.xpn.xwiki.doc.MandatoryDocumentInitializer;\nimport com.xpn.xwiki.doc.XWikiDocument;\nimport com.xpn.xwiki.internal.mandatory.XWikiRightsDocumentInitializer;\nimport com.xpn.xwiki.objects.BaseObject;\nimport com.xpn.xwiki.test.MockitoOldcore;\nimport com.xpn.xwiki.test.junit5.mockito.InjectMockitoOldcore;\nimport com.xpn.xwiki.test.junit5.mockito.OldcoreTest;\n\nimport ch.qos.logback.classic.Level;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.Mockito.doThrow;\nimport static org.mockito.Mockito.spy;\nimport static org.xwiki.security.internal.XWikiConstants.ALLOW_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.GROUPS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LEVELS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LOCAL_CLASS_REFERENCE;\n\n/**\n * Test of {@link DocumentInitializerRightsManager}.\n *\n * @version $Id$\n */\n@OldcoreTest\n@AllComponents\nclass DocumentInitializerRightsManagerTest\n{\n    @InjectMockitoOldcore\n    private MockitoOldcore oldcore;\n\n    @InjectMockComponents\n    private DocumentInitializerRightsManager rightsManager;\n\n    @RegisterExtension\n    private LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);\n\n    private XWikiDocument document;\n\n    private XWikiContext xWikiContext;\n\n    @BeforeEach\n    void setUp(MockitoComponentManager componentManager) throws Exception\n    {\n        this.xWikiContext = this.oldcore.getXWikiContext();\n        String wikiId = this.xWikiContext.getWikiId();\n        this.document = this.oldcore.getSpyXWiki()\n            .getDocument(new DocumentReference(wikiId, \"Space\", \"Page\"), this.xWikiContext);\n        XWikiDocument xWikiRigths = this.oldcore.getSpyXWiki()\n            .getDocument(new DocumentReference(wikiId, \"XWiki\", \"XWikiRights\"), this.xWikiContext);\n        componentManager.<MandatoryDocumentInitializer>getInstance(MandatoryDocumentInitializer.class,\n            XWikiRightsDocumentInitializer.CLASS_REFERENCE_STRING).updateDocument(xWikiRigths);\n        this.oldcore.getSpyXWiki().saveDocument(xWikiRigths, this.xWikiContext);\n    }\n\n    @Test\n    void restrictToAdminSkipWhenAlreadyHasRights() throws Exception\n    {\n        this.document.newXObject(LOCAL_CLASS_REFERENCE, this.xWikiContext);\n        assertFalse(this.rightsManager.restrictToAdmin(this.document));\n    }\n\n    @Test\n    void restrictToAdmin()\n    {\n        assertTrue(this.rightsManager.restrictToAdmin(this.document));\n        assertEquals(1, this.document.getXObjects(LOCAL_CLASS_REFERENCE).size());\n        BaseObject xObject = this.document.getXObject(LOCAL_CLASS_REFERENCE);\n        assertEquals(\"XWiki.XWikiAdminGroup\", xObject.getStringValue(GROUPS_FIELD_NAME));\n        assertEquals(\"view, edit, delete\", xObject.getStringValue(LEVELS_FIELD_NAME));\n        assertEquals(\"1\", xObject.getStringValue(ALLOW_FIELD_NAME));\n    }\n\n    @Test\n    void restrictToAdminWithException() throws XWikiException\n    {\n        this.document = spy(this.document);\n        doThrow(XWikiException.class).when(this.document)\n            .newXObject(any(EntityReference.class), any(XWikiContext.class));\n        assertFalse(this.rightsManager.restrictToAdmin(this.document));\n        assertEquals(0, this.document.getXObjects(LOCAL_CLASS_REFERENCE).size());\n        assertEquals(\"Error adding a [XWiki.XWikiRights] object to the document [xwiki:Space.Page]\",\n            this.logCapture.getMessage(0));\n        assertEquals(Level.ERROR, this.logCapture.getLogEvent(0).getLevel());\n    }\n}\n"], "fixing_code": ["/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.security.internal;\n\nimport java.util.List;\n\nimport javax.inject.Inject;\nimport javax.inject.Provider;\nimport javax.inject.Singleton;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.slf4j.Logger;\nimport org.xwiki.component.annotation.Component;\nimport org.xwiki.security.authorization.Right;\n\nimport com.xpn.xwiki.XWikiContext;\nimport com.xpn.xwiki.XWikiException;\nimport com.xpn.xwiki.doc.MandatoryDocumentInitializer;\nimport com.xpn.xwiki.doc.XWikiDocument;\nimport com.xpn.xwiki.objects.BaseObject;\n\nimport static java.util.stream.Collectors.joining;\nimport static org.xwiki.security.authorization.Right.DELETE;\nimport static org.xwiki.security.authorization.Right.EDIT;\nimport static org.xwiki.security.authorization.Right.VIEW;\nimport static org.xwiki.security.internal.XWikiConstants.ALLOW_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.GROUPS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LEVELS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LOCAL_CLASS_REFERENCE;\n\n/**\n * Service provided to {@link MandatoryDocumentInitializer}s to initialize documents with the correct rights.\n *\n * @version $Id$\n * @since 14.4.8\n * @since 14.10.5\n * @since 15.1RC1\n */\n@Component(roles = DocumentInitializerRightsManager.class)\n@Singleton\npublic class DocumentInitializerRightsManager\n{\n    private static final String XWIKI_ADMIN_GROUP_DOCUMENT_REFERENCE = \"XWiki.XWikiAdminGroup\";\n\n    @Inject\n    private Provider<XWikiContext> xcontextProvider;\n\n    @Inject\n    private Logger logger;\n\n    /**\n     * Restrict the rights of the provided document so that it can only be viewed, edited and deleted by the\n     * {@code XWiki.XWikiAdminGroup} group. Note that this restriction is only applied if no rights are already applied\n     * on the current document.\n     *\n     * @param document the document to updated rights on\n     * @return {@code true} if the document has been modified, {@code false} otherwise (including if the document hasn't\n     *     been modified because of an error during the modification)\n     */\n    public boolean restrictToAdmin(XWikiDocument document)\n    {\n        boolean updated = false;\n        List<Right> rights = List.of(VIEW, EDIT, DELETE);\n\n        if (fixBadlyInitializedRights(document, rights)) {\n            updated = true;\n        }\n\n        // If some rights have already been set on the document, we consider that it has already been protected \n        // manually.\n        if (document.getXObjects(LOCAL_CLASS_REFERENCE).isEmpty()) {\n            updated = updated || initializeRights(document, rights);\n        }\n\n        return updated;\n    }\n\n    private boolean initializeRights(XWikiDocument document, List<Right> rights)\n    {\n        boolean updated = false;\n\n        try {\n            BaseObject object = document.newXObject(LOCAL_CLASS_REFERENCE, this.xcontextProvider.get());\n            setRights(object, rights);\n            updated = true;\n        } catch (XWikiException e) {\n            this.logger.error(String.format(\"Error adding a [%s] object to the document [%s]\", LOCAL_CLASS_REFERENCE,\n                document.getDocumentReference()));\n        }\n\n        return updated;\n    }\n\n    /**\n     * Because of XWIKI-20519, the levels of the rights of {@code XWiki.XWikiAdminGroup} can be badly initialized, and\n     * needs to be fixed. This is the case when upgrading from instances running exactly version 14.10.5 or 15.1-rc-1.\n     *\n     * @param document the document to fix\n     * @param rights the rights to set to the {@code XWiki.XWikiAdminGroup} group\n     */\n    private boolean fixBadlyInitializedRights(XWikiDocument document, List<Right> rights)\n    {\n        boolean updated = false;\n        if (document.getXObjects(LOCAL_CLASS_REFERENCE).size() == 1) {\n            BaseObject object = document.getXObject(LOCAL_CLASS_REFERENCE);\n            if (StringUtils.isEmpty(object.getStringValue(LEVELS_FIELD_NAME))\n                && StringUtils.isEmpty(object.getLargeStringValue(GROUPS_FIELD_NAME)))\n            {\n                setRights(object, rights);\n                updated = true;\n            }\n        }\n        return updated;\n    }\n\n    private void setRights(BaseObject object, List<Right> rights)\n    {\n        object.setLargeStringValue(GROUPS_FIELD_NAME, XWIKI_ADMIN_GROUP_DOCUMENT_REFERENCE);\n        object.setStringValue(LEVELS_FIELD_NAME, rights.stream().map(Right::getName).collect(joining(\",\")));\n        object.setIntValue(ALLOW_FIELD_NAME, 1);\n    }\n}\n", "/*\n * See the NOTICE file distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation; either version 2.1 of\n * the License, or (at your option) any later version.\n *\n * This software is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this software; if not, write to the Free\n * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n */\npackage org.xwiki.security.internal;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.RegisterExtension;\nimport org.xwiki.model.reference.DocumentReference;\nimport org.xwiki.model.reference.EntityReference;\nimport org.xwiki.test.LogLevel;\nimport org.xwiki.test.annotation.AllComponents;\nimport org.xwiki.test.junit5.LogCaptureExtension;\nimport org.xwiki.test.junit5.mockito.InjectMockComponents;\nimport org.xwiki.test.mockito.MockitoComponentManager;\n\nimport com.xpn.xwiki.XWikiContext;\nimport com.xpn.xwiki.XWikiException;\nimport com.xpn.xwiki.doc.MandatoryDocumentInitializer;\nimport com.xpn.xwiki.doc.XWikiDocument;\nimport com.xpn.xwiki.internal.mandatory.XWikiRightsDocumentInitializer;\nimport com.xpn.xwiki.objects.BaseObject;\nimport com.xpn.xwiki.test.MockitoOldcore;\nimport com.xpn.xwiki.test.junit5.mockito.InjectMockitoOldcore;\nimport com.xpn.xwiki.test.junit5.mockito.OldcoreTest;\n\nimport ch.qos.logback.classic.Level;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.junit.jupiter.api.Assertions.assertFalse;\nimport static org.junit.jupiter.api.Assertions.assertTrue;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.Mockito.doThrow;\nimport static org.mockito.Mockito.spy;\nimport static org.xwiki.security.internal.XWikiConstants.ALLOW_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.GROUPS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LEVELS_FIELD_NAME;\nimport static org.xwiki.security.internal.XWikiConstants.LOCAL_CLASS_REFERENCE;\n\n/**\n * Test of {@link DocumentInitializerRightsManager}.\n *\n * @version $Id$\n */\n@OldcoreTest\n@AllComponents\nclass DocumentInitializerRightsManagerTest\n{\n    @InjectMockitoOldcore\n    private MockitoOldcore oldcore;\n\n    @InjectMockComponents\n    private DocumentInitializerRightsManager rightsManager;\n\n    @RegisterExtension\n    private LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);\n\n    private XWikiDocument document;\n\n    private XWikiContext xWikiContext;\n\n    @BeforeEach\n    void setUp(MockitoComponentManager componentManager) throws Exception\n    {\n        this.xWikiContext = this.oldcore.getXWikiContext();\n        String wikiId = this.xWikiContext.getWikiId();\n        this.document = this.oldcore.getSpyXWiki()\n            .getDocument(new DocumentReference(wikiId, \"Space\", \"Page\"), this.xWikiContext);\n        XWikiDocument xWikiRigths = this.oldcore.getSpyXWiki()\n            .getDocument(new DocumentReference(wikiId, \"XWiki\", \"XWikiRights\"), this.xWikiContext);\n        componentManager.<MandatoryDocumentInitializer>getInstance(MandatoryDocumentInitializer.class,\n            XWikiRightsDocumentInitializer.CLASS_REFERENCE_STRING).updateDocument(xWikiRigths);\n        this.oldcore.getSpyXWiki().saveDocument(xWikiRigths, this.xWikiContext);\n    }\n\n    @Test\n    void restrictToAdminSkipWhenAlreadyHasRights() throws Exception\n    {\n        BaseObject baseObject = this.document.newXObject(LOCAL_CLASS_REFERENCE, this.xWikiContext);\n        baseObject.setLargeStringValue(LEVELS_FIELD_NAME, \"edit\");\n        assertFalse(this.rightsManager.restrictToAdmin(this.document));\n    }\n\n    @Test\n    void restrictToAdminBadlyInitialized() throws Exception\n    {\n        BaseObject object = this.document.newXObject(LOCAL_CLASS_REFERENCE, this.xWikiContext);\n        object.setLargeStringValue(GROUPS_FIELD_NAME, \"\");\n        object.setLargeStringValue(LEVELS_FIELD_NAME, \"\");\n        object.setIntValue(ALLOW_FIELD_NAME, 1);\n        assertTrue(this.rightsManager.restrictToAdmin(this.document));\n        BaseObject xObject = this.document.getXObject(LOCAL_CLASS_REFERENCE);\n        assertEquals(\"XWiki.XWikiAdminGroup\", xObject.getStringValue(GROUPS_FIELD_NAME));\n        assertEquals(\"view,edit,delete\", xObject.getStringValue(LEVELS_FIELD_NAME));\n        assertEquals(\"1\", xObject.getStringValue(ALLOW_FIELD_NAME));\n    }\n\n    @Test\n    void restrictToAdmin()\n    {\n        assertTrue(this.rightsManager.restrictToAdmin(this.document));\n        assertEquals(1, this.document.getXObjects(LOCAL_CLASS_REFERENCE).size());\n        BaseObject xObject = this.document.getXObject(LOCAL_CLASS_REFERENCE);\n        assertEquals(\"XWiki.XWikiAdminGroup\", xObject.getStringValue(GROUPS_FIELD_NAME));\n        assertEquals(\"view,edit,delete\", xObject.getStringValue(LEVELS_FIELD_NAME));\n        assertEquals(\"1\", xObject.getStringValue(ALLOW_FIELD_NAME));\n    }\n\n    @Test\n    void restrictToAdminWithException() throws XWikiException\n    {\n        this.document = spy(this.document);\n        doThrow(XWikiException.class).when(this.document)\n            .newXObject(any(EntityReference.class), any(XWikiContext.class));\n        assertFalse(this.rightsManager.restrictToAdmin(this.document));\n        assertEquals(0, this.document.getXObjects(LOCAL_CLASS_REFERENCE).size());\n        assertEquals(\"Error adding a [XWiki.XWikiRights] object to the document [xwiki:Space.Page]\",\n            this.logCapture.getMessage(0));\n        assertEquals(Level.ERROR, this.logCapture.getLogEvent(0).getLevel());\n    }\n}\n"], "filenames": ["xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-bridge/src/main/java/org/xwiki/security/internal/DocumentInitializerRightsManager.java", "xwiki-platform-core/xwiki-platform-security/xwiki-platform-security-authorization/xwiki-platform-security-authorization-bridge/src/test/java/org/xwiki/security/internal/DocumentInitializerRightsManagerTest.java"], "buggy_code_start_loc": [23, 95], "buggy_code_end_loc": [108, 107], "fixing_code_start_loc": [22, 95], "fixing_code_end_loc": [139, 122], "type": "CWE-269", "message": "XWiki Platform is a generic wiki platform. Starting in version 11.8-rc-1 and prior to versions 14.4.8, 14.10.6, and 15.2, `Mail.MailConfig` can be edited by any logged-in user by default. Consequently, they can change the mail obfuscation configuration and view and edit the mail sending configuration, including the smtp domain name and credentials. The problem has been patched in XWiki 14.4.8, 14.10.6, and 15.1. As a workaround, the rights of the `Mail.MailConfig` page can be manually updated so that only a set of trusted users can view, edit and delete it (e.g., the `XWiki.XWikiAdminGroup` group).", "other": {"cve": {"id": "CVE-2023-34465", "sourceIdentifier": "security-advisories@github.com", "published": "2023-06-23T16:15:09.303", "lastModified": "2023-06-30T13:14:05.650", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "XWiki Platform is a generic wiki platform. Starting in version 11.8-rc-1 and prior to versions 14.4.8, 14.10.6, and 15.2, `Mail.MailConfig` can be edited by any logged-in user by default. Consequently, they can change the mail obfuscation configuration and view and edit the mail sending configuration, including the smtp domain name and credentials. The problem has been patched in XWiki 14.4.8, 14.10.6, and 15.1. As a workaround, the rights of the `Mail.MailConfig` page can be manually updated so that only a set of trusted users can view, edit and delete it (e.g., the `XWiki.XWikiAdminGroup` group)."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "NONE", "baseScore": 8.1, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.2}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.9, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 3.1, "impactScore": 6.0}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-269"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "11.8.1", "versionEndExcluding": "14.4.8", "matchCriteriaId": "11E8B480-276E-4E4E-B6D3-F4C302E3CEF8"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:*:*:*:*:*:*:*:*", "versionStartIncluding": "14.10", "versionEndExcluding": "14.10.6", "matchCriteriaId": "F74638E1-2D3D-4FFD-921E-09C383F880DF"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:11.8:milestone1:*:*:*:*:*:*", "matchCriteriaId": "11CE3CBF-482F-4530-A1F5-BDFAE42ED344"}, {"vulnerable": true, "criteria": "cpe:2.3:a:xwiki:xwiki:15.0:*:*:*:*:*:*:*", "matchCriteriaId": "8F9D9551-B148-44B6-A5B3-889E6E7B72E8"}]}]}], "references": [{"url": "https://github.com/xwiki/xwiki-platform/commit/8910b8857d3442d2e8142f655fdc0512930354d1", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/xwiki/xwiki-platform/commit/d28d7739089e1ae8961257d9da7135d1a01cb7d4", "source": "security-advisories@github.com", "tags": ["Patch", "Vendor Advisory"]}, {"url": "https://github.com/xwiki/xwiki-platform/security/advisories/GHSA-g75c-cjr6-39mc", "source": "security-advisories@github.com", "tags": ["Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-20519", "source": "security-advisories@github.com", "tags": ["Issue Tracking", "Patch", "Vendor Advisory"]}, {"url": "https://jira.xwiki.org/browse/XWIKI-20671", "source": "security-advisories@github.com", "tags": ["Exploit", "Issue Tracking", "Patch", "Vendor Advisory"]}]}, "github_commit_url": "https://github.com/xwiki/xwiki-platform/commit/8910b8857d3442d2e8142f655fdc0512930354d1"}}