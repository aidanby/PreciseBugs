{"buggy_code": ["'use strict';\n\nconst socketUser = require('./user');\nconst socketGroup = require('./groups');\nconst image = require('../image');\nconst meta = require('../meta');\n\nconst inProgress = {};\n\nconst uploads = module.exports;\n\nuploads.upload = async function (socket, data) {\n\tconst methodToFunc = {\n\t\t'user.uploadCroppedPicture': socketUser.uploadCroppedPicture,\n\t\t'user.updateCover': socketUser.updateCover,\n\t\t'groups.cover.update': socketGroup.cover.update,\n\t};\n\tif (!socket.uid || !data || !data.chunk || !data.params || !data.params.method || !methodToFunc[data.params.method]) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\n\tinProgress[socket.id] = inProgress[socket.id] || {};\n\tconst socketUploads = inProgress[socket.id];\n\tconst { method } = data.params;\n\n\tsocketUploads[method] = socketUploads[method] || { imageData: '' };\n\tsocketUploads[method].imageData += data.chunk;\n\n\ttry {\n\t\tconst maxSize = data.params.method === 'user.uploadCroppedPicture' ?\n\t\t\tmeta.config.maximumProfileImageSize : meta.config.maximumCoverImageSize;\n\t\tconst size = image.sizeFromBase64(socketUploads[method].imageData);\n\n\t\tif (size > maxSize * 1024) {\n\t\t\tthrow new Error(`[[error:file-too-big, ${maxSize}]]`);\n\t\t}\n\t\tif (socketUploads[method].imageData.length < data.params.size) {\n\t\t\treturn;\n\t\t}\n\t\tdata.params.imageData = socketUploads[method].imageData;\n\t\tconst result = await methodToFunc[data.params.method](socket, data.params);\n\t\tdelete socketUploads[method];\n\t\treturn result;\n\t} catch (err) {\n\t\tdelete inProgress[socket.id];\n\t\tthrow err;\n\t}\n};\n\nuploads.clear = function (sid) {\n\tdelete inProgress[sid];\n};\n"], "fixing_code": ["'use strict';\n\nconst socketUser = require('./user');\nconst socketGroup = require('./groups');\nconst image = require('../image');\nconst meta = require('../meta');\n\nconst inProgress = {};\n\nconst uploads = module.exports;\n\nuploads.upload = async function (socket, data) {\n\tconst methodToFunc = {\n\t\t'user.uploadCroppedPicture': socketUser.uploadCroppedPicture,\n\t\t'user.updateCover': socketUser.updateCover,\n\t\t'groups.cover.update': socketGroup.cover.update,\n\t};\n\tif (!socket.uid || !data || !data.chunk ||\n\t\t!data.params || !data.params.method || !methodToFunc.hasOwnProperty(data.params.method)) {\n\t\tthrow new Error('[[error:invalid-data]]');\n\t}\n\n\tinProgress[socket.id] = inProgress[socket.id] || Object.create(null);\n\tconst socketUploads = inProgress[socket.id];\n\tconst { method } = data.params;\n\n\tsocketUploads[method] = socketUploads[method] || { imageData: '' };\n\tsocketUploads[method].imageData += data.chunk;\n\n\ttry {\n\t\tconst maxSize = data.params.method === 'user.uploadCroppedPicture' ?\n\t\t\tmeta.config.maximumProfileImageSize : meta.config.maximumCoverImageSize;\n\t\tconst size = image.sizeFromBase64(socketUploads[method].imageData);\n\n\t\tif (size > maxSize * 1024) {\n\t\t\tthrow new Error(`[[error:file-too-big, ${maxSize}]]`);\n\t\t}\n\t\tif (socketUploads[method].imageData.length < data.params.size) {\n\t\t\treturn;\n\t\t}\n\t\tdata.params.imageData = socketUploads[method].imageData;\n\t\tconst result = await methodToFunc[data.params.method](socket, data.params);\n\t\tdelete socketUploads[method];\n\t\treturn result;\n\t} catch (err) {\n\t\tdelete inProgress[socket.id];\n\t\tthrow err;\n\t}\n};\n\nuploads.clear = function (sid) {\n\tdelete inProgress[sid];\n};\n"], "filenames": ["src/socket.io/uploads.js"], "buggy_code_start_loc": [18], "buggy_code_end_loc": [23], "fixing_code_start_loc": [18], "fixing_code_end_loc": [24], "type": "CWE-1321", "message": "Nodebb is an open source Node.js based forum software. In affected versions a prototype pollution vulnerability in the uploader module allowed a malicious user to inject arbitrary data (i.e. javascript) into the DOM, theoretically allowing for an account takeover when used in conjunction with a path traversal vulnerability disclosed at the same time as this report. The vulnerability has been patched as of v1.18.5. Users are advised to upgrade as soon as possible.", "other": {"cve": {"id": "CVE-2021-43787", "sourceIdentifier": "security-advisories@github.com", "published": "2021-11-29T20:15:08.190", "lastModified": "2022-10-27T19:45:21.277", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Nodebb is an open source Node.js based forum software. In affected versions a prototype pollution vulnerability in the uploader module allowed a malicious user to inject arbitrary data (i.e. javascript) into the DOM, theoretically allowing for an account takeover when used in conjunction with a path traversal vulnerability disclosed at the same time as this report. The vulnerability has been patched as of v1.18.5. Users are advised to upgrade as soon as possible."}, {"lang": "es", "value": "Nodebb es un software de foros de c\u00f3digo abierto basado en Node.js. En las versiones afectadas, una vulnerabilidad de contaminaci\u00f3n del prototipo en el m\u00f3dulo uploader permit\u00eda a un usuario malicioso inyectar datos arbitrarios (es decir, javascript) en el DOM, te\u00f3ricamente permitiendo una toma de control de la cuenta cuando era usada junto con una vulnerabilidad de salto de ruta revelada al mismo tiempo que este informe. La vulnerabilidad ha sido parcheada a partir de la versi\u00f3n 1.18.5. Se aconseja a usuarios que actualicen lo antes posible"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 9.0, "baseSeverity": "CRITICAL"}, "exploitabilityScore": 2.3, "impactScore": 6.0}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:N/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "NONE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 4.3}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.6, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-1321"}, {"lang": "en", "value": "CWE-79"}]}, {"source": "security-advisories@github.com", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-1321"}, {"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:nodebb:nodebb:*:*:*:*:*:*:*:*", "versionStartIncluding": "1.15.5", "versionEndIncluding": "1.18.4", "matchCriteriaId": "6B1C4028-557A-4F42-B371-0FF7377AE52A"}]}]}], "references": [{"url": "https://blog.sonarsource.com/nodebb-remote-code-execution-with-one-shot/", "source": "security-advisories@github.com", "tags": ["Exploit", "Third Party Advisory"]}, {"url": "https://github.com/NodeBB/NodeBB/commit/1783f918bc19568f421473824461ff2ed7755e4c", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/NodeBB/NodeBB/releases/tag/v1.18.5", "source": "security-advisories@github.com", "tags": ["Patch", "Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/NodeBB/NodeBB/security/advisories/GHSA-wx69-rvg3-x7fc", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/NodeBB/NodeBB/commit/1783f918bc19568f421473824461ff2ed7755e4c"}}