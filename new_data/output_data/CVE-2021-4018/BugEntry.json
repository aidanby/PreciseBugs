{"buggy_code": ["<?php\nnamespace App\\Http\\Transformers;\n\nuse App\\Helpers\\Helper;\nuse App\\Models\\Accessory;\nuse Gate;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Support\\Facades\\Storage;\n\nclass AccessoriesTransformer\n{\n\n    public function transformAccessories (Collection $accessories, $total)\n    {\n        $array = array();\n        foreach ($accessories as $accessory) {\n            $array[] = self::transformAccessory($accessory);\n        }\n        return (new DatatablesTransformer)->transformDatatables($array, $total);\n    }\n\n    public function transformAccessory (Accessory $accessory)\n    {\n        $array = [\n            'id' => $accessory->id,\n            'name' => e($accessory->name),\n            'image' => ($accessory->image) ? Storage::disk('public')->url('accessories/'.e($accessory->image)) : null,\n            'company' => ($accessory->company) ? ['id' => $accessory->company->id,'name'=> e($accessory->company->name)] : null,\n            'manufacturer' => ($accessory->manufacturer) ? ['id' => $accessory->manufacturer->id,'name'=> e($accessory->manufacturer->name)] : null,\n            'supplier' => ($accessory->supplier) ? ['id' => $accessory->supplier->id,'name'=> e($accessory->supplier->name)] : null,\n            'model_number' => ($accessory->model_number) ? e($accessory->model_number) : null,\n            'category' => ($accessory->category) ? ['id' => $accessory->category->id,'name'=> e($accessory->category->name)] : null,\n            'location' => ($accessory->location) ? ['id' => $accessory->location->id,'name'=> e($accessory->location->name)] : null,\n            'notes' => ($accessory->notes) ? e($accessory->notes) : null,\n            'qty' => ($accessory->qty) ? (int) $accessory->qty : null,\n            'purchase_date' => ($accessory->purchase_date) ? Helper::getFormattedDateObject($accessory->purchase_date, 'date') : null,\n            'purchase_cost' => Helper::formatCurrencyOutput($accessory->purchase_cost),\n            'order_number' => ($accessory->order_number) ? e($accessory->order_number) : null,\n            'min_qty' => ($accessory->min_amt) ? (int) $accessory->min_amt : null,\n            'remaining_qty' => $accessory->numRemaining(),\n\n            'created_at' => Helper::getFormattedDateObject($accessory->created_at, 'datetime'),\n            'updated_at' => Helper::getFormattedDateObject($accessory->updated_at, 'datetime'),\n\n        ];\n\n        $permissions_array['available_actions'] = [\n            'checkout' => Gate::allows('checkout', Accessory::class),\n            'checkin' =>  false,\n            'update' => Gate::allows('update', Accessory::class) ,\n            'delete' => Gate::allows('delete', Accessory::class),\n        ];\n\n        $permissions_array['user_can_checkout'] = false;\n\n        if ($accessory->numRemaining() > 0) {\n            $permissions_array['user_can_checkout'] = true;\n        }\n\n        $array += $permissions_array;\n\n        return $array;\n    }\n\n\n    public function transformCheckedoutAccessory ($accessory, $accessory_users, $total)\n    {\n\n\n        $array = array();\n\n\n        foreach ($accessory_users as $user) {\n            \\Log::debug(print_r($user->pivot, true));\n            \\Log::debug(print_r($user->pivot, true));\n            $array[] = [\n\n                'assigned_pivot_id' => $user->pivot->id,\n                'id' => (int) $user->id,\n                'username' => e($user->username),\n                'name' => e($user->getFullNameAttribute()),\n                'first_name'=> e($user->first_name),\n                'last_name'=> e($user->last_name),\n                'employee_number' =>  e($user->employee_num),\n                'checkout_notes' => $user->pivot->note,\n                'last_checkout' => Helper::getFormattedDateObject($user->pivot->created_at, 'datetime'),\n                'type' => 'user',\n                'available_actions' => ['checkin' => true]\n            ];\n\n        }\n\n        return (new DatatablesTransformer)->transformDatatables($array, $total);\n    }\n\n\n\n}\n"], "fixing_code": ["<?php\nnamespace App\\Http\\Transformers;\n\nuse App\\Helpers\\Helper;\nuse App\\Models\\Accessory;\nuse Gate;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Support\\Facades\\Storage;\n\nclass AccessoriesTransformer\n{\n\n    public function transformAccessories (Collection $accessories, $total)\n    {\n        $array = array();\n        foreach ($accessories as $accessory) {\n            $array[] = self::transformAccessory($accessory);\n        }\n        return (new DatatablesTransformer)->transformDatatables($array, $total);\n    }\n\n    public function transformAccessory (Accessory $accessory)\n    {\n        $array = [\n            'id' => $accessory->id,\n            'name' => e($accessory->name),\n            'image' => ($accessory->image) ? Storage::disk('public')->url('accessories/'.e($accessory->image)) : null,\n            'company' => ($accessory->company) ? ['id' => $accessory->company->id,'name'=> e($accessory->company->name)] : null,\n            'manufacturer' => ($accessory->manufacturer) ? ['id' => $accessory->manufacturer->id,'name'=> e($accessory->manufacturer->name)] : null,\n            'supplier' => ($accessory->supplier) ? ['id' => $accessory->supplier->id,'name'=> e($accessory->supplier->name)] : null,\n            'model_number' => ($accessory->model_number) ? e($accessory->model_number) : null,\n            'category' => ($accessory->category) ? ['id' => $accessory->category->id,'name'=> e($accessory->category->name)] : null,\n            'location' => ($accessory->location) ? ['id' => $accessory->location->id,'name'=> e($accessory->location->name)] : null,\n            'notes' => ($accessory->notes) ? e($accessory->notes) : null,\n            'qty' => ($accessory->qty) ? (int) $accessory->qty : null,\n            'purchase_date' => ($accessory->purchase_date) ? Helper::getFormattedDateObject($accessory->purchase_date, 'date') : null,\n            'purchase_cost' => Helper::formatCurrencyOutput($accessory->purchase_cost),\n            'order_number' => ($accessory->order_number) ? e($accessory->order_number) : null,\n            'min_qty' => ($accessory->min_amt) ? (int) $accessory->min_amt : null,\n            'remaining_qty' => $accessory->numRemaining(),\n\n            'created_at' => Helper::getFormattedDateObject($accessory->created_at, 'datetime'),\n            'updated_at' => Helper::getFormattedDateObject($accessory->updated_at, 'datetime'),\n\n        ];\n\n        $permissions_array['available_actions'] = [\n            'checkout' => Gate::allows('checkout', Accessory::class),\n            'checkin' =>  false,\n            'update' => Gate::allows('update', Accessory::class) ,\n            'delete' => Gate::allows('delete', Accessory::class),\n        ];\n\n        $permissions_array['user_can_checkout'] = false;\n\n        if ($accessory->numRemaining() > 0) {\n            $permissions_array['user_can_checkout'] = true;\n        }\n\n        $array += $permissions_array;\n\n        return $array;\n    }\n\n\n    public function transformCheckedoutAccessory ($accessory, $accessory_users, $total)\n    {\n\n\n        $array = array();\n\n\n        foreach ($accessory_users as $user) {\n            \\Log::debug(print_r($user->pivot, true));\n            \\Log::debug(print_r($user->pivot, true));\n            $array[] = [\n\n                'assigned_pivot_id' => $user->pivot->id,\n                'id' => (int) $user->id,\n                'username' => e($user->username),\n                'name' => e($user->getFullNameAttribute()),\n                'first_name'=> e($user->first_name),\n                'last_name'=> e($user->last_name),\n                'employee_number' =>  e($user->employee_num),\n                'checkout_notes' => e($user->pivot->note),\n                'last_checkout' => Helper::getFormattedDateObject($user->pivot->created_at, 'datetime'),\n                'type' => 'user',\n                'available_actions' => ['checkin' => true]\n            ];\n\n        }\n\n        return (new DatatablesTransformer)->transformDatatables($array, $total);\n    }\n\n\n\n}\n"], "filenames": ["app/Http/Transformers/AccessoriesTransformer.php"], "buggy_code_start_loc": [85], "buggy_code_end_loc": [86], "fixing_code_start_loc": [85], "fixing_code_end_loc": [86], "type": "CWE-79", "message": "snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')", "other": {"cve": {"id": "CVE-2021-4018", "sourceIdentifier": "security@huntr.dev", "published": "2021-12-01T10:15:07.730", "lastModified": "2021-12-02T16:41:57.223", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}, {"lang": "es", "value": "snipe-it es vulnerable a una Neutralizaci\u00f3n Inapropiada de Entradas Durante la Generaci\u00f3n de P\u00e1ginas Web (\"Cross-site Scripting\")"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 5.4, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.3, "impactScore": 2.7}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:L", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 6.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 3.4}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:M/Au:S/C:N/I:P/A:N", "accessVector": "NETWORK", "accessComplexity": "MEDIUM", "authentication": "SINGLE", "confidentialityImpact": "NONE", "integrityImpact": "PARTIAL", "availabilityImpact": "NONE", "baseScore": 3.5}, "baseSeverity": "LOW", "exploitabilityScore": 6.8, "impactScore": 2.9, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": true}]}, "weaknesses": [{"source": "nvd@nist.gov", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}, {"source": "security@huntr.dev", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:snipeitapp:snipe-it:*:*:*:*:*:*:*:*", "versionEndExcluding": "5.3.3", "matchCriteriaId": "F5437FBB-7562-45C8-AC63-CA182AA70BE6"}]}]}], "references": [{"url": "https://github.com/snipe/snipe-it/commit/ff81e6d5366c2cfb15618793ad919ae4cbb3ac57", "source": "security@huntr.dev", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://huntr.dev/bounties/c14395f6-bf0d-4b06-b4d1-b509d8a99b54", "source": "security@huntr.dev", "tags": ["Exploit", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/snipe/snipe-it/commit/ff81e6d5366c2cfb15618793ad919ae4cbb3ac57"}}