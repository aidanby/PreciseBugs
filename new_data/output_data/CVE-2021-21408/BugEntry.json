{"buggy_code": ["# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [4.0.2] - 2022-01-10\n\n### Security\n- Prevent arbitrary PHP code execution through maliciously crafted expression for the math function. This addresses CVE-2021-29454\n\n## [4.0.1] - 2022-01-09\n\n### Security\n- Rewrote the mailto function to not use `eval` when encoding with javascript\n\n## [4.0.0] - 2021-11-25\n\n## [4.0.0-rc.0] - 2021-10-13\n\n### Added\n- You can now use `$smarty->muteUndefinedOrNullWarnings()` to activate convert warnings about undefined or null template vars to notices when running PHP8\n\n### Changed\n- Switch CI from Travis to Github CI\n- Updated unit tests to avoid skipped and risky test warnings\n\n### Removed\n- Dropped support for PHP7.0 and below, so Smarty now requires PHP >=7.1\n- Dropped support for php asp tags in templates (removed from php since php7.0)\n- Dropped deprecated API calls that where only accessible through SmartyBC\n- Dropped support for {php} and {include_php} tags and embedded PHP in templates. Embedded PHP will now be passed through as is.\n- Removed all PHP_VERSION_ID and compare_version checks and conditional code blocks that are now no longer required\n- Dropped deprecated SMARTY_RESOURCE_CHAR_SET and SMARTY_RESOURCE_DATE_FORMAT constants\n- Dropped deprecated Smarty::muteExpectedErrors and Smarty::unmuteExpectedErrors API methods\n- Dropped deprecated $smarty->getVariable() method. Use $smarty->getTemplateVars() instead.\n- $smarty->registerResource() no longer accepts an array of callback functions\n\n## [3.1.40] - 2021-10-13\n\n### Changed\n- modifier escape now triggers a E_USER_NOTICE when an unsupported escape type is used https://github.com/smarty-php/smarty/pull/649\n\n### Security\n- More advanced javascript escaping to handle https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements thanks to m-haritonov\n\n## [3.1.39] - 2021-02-17\n\n### Security\n- Prevent access to `$smarty.template_object` in sandbox mode. This addresses CVE-2021-26119.\n- Fixed code injection vulnerability by using illegal function names in `{function name='blah'}{/function}`. This addresses CVE-2021-26120.\n\n## [3.1.38] - 2021-01-08\n\n### Fixed\n- Smarty::SMARTY_VERSION wasn't updated https://github.com/smarty-php/smarty/issues/628\n\n## [3.1.37] - 2021-01-07\n\n### Changed\n- Changed error handlers and handling of undefined constants for php8-compatibility (set $errcontext argument optional) https://github.com/smarty-php/smarty/issues/605\n- Changed expected error levels in unit tests for php8-compatibility\n- Travis unit tests now run for all php versions >= 5.3, including php8\n- Travis runs on Xenial where possible\n\n### Fixed\n- PHP5.3 compatibility fixes\n- Brought lexer source functionally up-to-date with compiled version\n\n## [3.1.36] - 2020-04-14\n\n### Fixed\n - Smarty::SMARTY_VERSION wasn't updated in v3.1.35 https://github.com/smarty-php/smarty/issues/584\n\n## [3.1.35] - 2020-04-14\n - remove whitespaces after comments https://github.com/smarty-php/smarty/issues/447\n - fix foreachelse on arrayiterators https://github.com/smarty-php/smarty/issues/506\n - fix files contained in git export archive for package maintainers https://github.com/smarty-php/smarty/issues/325\n - throw SmartyException when setting caching attributes for cacheable plugin https://github.com/smarty-php/smarty/issues/457\n - fix errors that occured where isset was replaced with null check such as https://github.com/smarty-php/smarty/issues/453\n - unit tests are now in the repository\n\n## 3.1.34 release - 05.11.2019\n13.01.2020\n - fix typo in exception message (JercSi)\n - fix typehint warning with callable (bets4breakfast)\n - add travis badge and compatability info to readme (matks)\n - fix stdClass cast when compiling foreach (carpii)\n - fix wrong set/get methods for memcached (IT-Experte)\n - fix pborm assigning value to object variables in smarty_internal_compile_assign (Hunman)\n - exclude error_reporting.ini from git export (glensc)\n\n## 3.1.34-dev-6 -\n30.10.2018\n - bugfix a nested subblock in an inheritance child template was not replace by\n   outer level block with same name in same child template https://github.com/smarty-php/smarty/issues/500\n\n29.10.2018\n - bugfix Smarty::$php_handling == PHP_PASSTHRU (default) did eat the \"\\n\" (newline) character if it did directly followed\n   a PHP tag like \"?>\" or other https://github.com/smarty-php/smarty/issues/501\n\n14.10.2018\n - bugfix autoloader exit shortcut https://github.com/smarty-php/smarty/issues/467\n\n11.10.2018\n - bugfix {insert} not works when caching is enabled and included template is present\n   https://github.com/smarty-php/smarty/issues/496\n - bugfix in date-format modifier; NULL at date string or default_date did not produce correct output\n   https://github.com/smarty-php/smarty/pull/458\n\n09.10.2018\n - bugfix fix of 26.8.2017 https://github.com/smarty-php/smarty/issues/327\n   modifier is applied to sum expression https://github.com/smarty-php/smarty/issues/491\n - bugfix indexed arrays could not be defined \"array(...)\"\"\n\n18.09.2018\n  - bugfix large plain text template sections without a Smarty tag > 700kB could\n    could fail in version 3.1.32 and 3.1.33 because PHP preg_match() restrictions\n    https://github.com/smarty-php/smarty/issues/488\n\n## 3.1.33 release - 12.09.2018\n## 3.1.33-dev-12 -\n03.09.2018\n  - bugfix {foreach} using new style property access like {$item@property} on\n    Smarty 2 style named foreach loop could produce errors https://github.com/smarty-php/smarty/issues/484\n\n31.08.2018\n  - bugfix some custom left and right delimiters like '{^' '^}' did not work\n    https://github.com/smarty-php/smarty/issues/450 https://github.com/smarty-php/smarty/pull/482\n\n  - reformating for PSR-2 coding standards https://github.com/smarty-php/smarty/pull/483\n\n  - bugfix on Windows absolute filepathes did fail if the drive letter was followed by a linux DIRECTORY_SEPARATOR\n    like C:/  at Smarty > 3.1.33-dev-5 https://github.com/smarty-php/smarty/issues/451\n\n  - PSR-2 code style fixes for config and template file Lexer/Parser generated with\n    the Smarty Lexer/Parser generator from https://github.com/smarty-php/smarty-lexer\n    https://github.com/smarty-php/smarty/pull/483\n\n26.08.2018\n  - bugfix/enhancement {capture} allow variable as capture block name in Smarty special variable\n    like $smarty.capture.$foo https://github.com/smarty-php/smarty/issues/478 https://github.com/smarty-php/smarty/pull/481\n\n## 3.1.33-dev-6 -\n19.08.2018\n  - fix PSR-2 coding standards and PHPDoc blocks https://github.com/smarty-php/smarty/pull/452\n    https://github.com/smarty-php/smarty/pull/475\n    https://github.com/smarty-php/smarty/pull/473\n  - bugfix PHP5.2 compatibility https://github.com/smarty-php/smarty/pull/472\n\n## 3.1.33-dev-4 -\n17.05.2018\n - bugfix strip-block produces different output in Smarty v3.1.32 https://github.com/smarty-php/smarty/issues/436\n - bugfix Smarty::compileAllTemplates ignores `$extension` parameter https://github.com/smarty-php/smarty/issues/437\n   https://github.com/smarty-php/smarty/pull/438\n - improvement do not compute total property in {foreach} if not needed https://github.com/smarty-php/smarty/issues/443\n - bugfix  plugins may not be loaded when setMergeCompiledIncludes is true https://github.com/smarty-php/smarty/issues/435\n\n26.04.2018\n - bugfix  regarding Security Vulnerability did not solve the problem under Linux.\n   Security issue CVE-2018-16831\n\n## 3.1.32 - (24.04.2018)\n24.04.2018\n - bugfix  possible Security Vulnerability in Smarty_Security class.\n\n26.03.2018\n - bugfix plugins may not be loaded if {function} or {block} tags are executed in nocache mode\n   https://github.com/smarty-php/smarty/issues/371\n\n26.03.2018\n - new feature {parent} =  {$smarty.block.parent} {child} =  {$smarty.block.child}\n\n23.03.2018\n - bugfix preg_replace could fail on large content resulting in a blank page https://github.com/smarty-php/smarty/issues/417\n\n21.03.2018\n - bugfix {$smarty.section...} used outside {section}{/section} showed incorrect values if {section}{/section} was called inside\n   another loop https://github.com/smarty-php/smarty/issues/422\n - bugfix short form of {section} attributes did not work https://github.com/smarty-php/smarty/issues/428\n\n17.03.2018\n - improvement Smarty::compileAllTemplates() exit with a non-zero status code if max errors is reached https://github.com/smarty-php/smarty/pull/402\n\n16.03.2018\n - bugfix extends resource did not work with user defined left/right delimiter https://github.com/smarty-php/smarty/issues/419\n\n22.11.2017\n - bugfix {break} and {continue} could fail if {foreach}{/foreach} did contain other\n   looping tags like {for}, {section} and {while} https://github.com/smarty-php/smarty/issues/323\n\n20.11.2017\n  - bugfix rework of newline spacing between tag code and template text.\n    now again identical with Smarty2 (forum topic 26878)\n  - replacement of \" by '\n\n05.11.2017\n  - lexer/parser optimization\n  - code cleanup and optimizations\n  - bugfix {$smarty.section.name.loop} used together with {$smarty.section.name.total} could produce\n    wrong results (forum topic 27041)\n\n26.10.2017\n  - bugfix Smarty version was  not filled in header comment of compiled and cached  files\n  - optimization replace internal Smarty::$ds property by DIRECTORY_SEPARATOR\n  - deprecate functions Smarty::muteExpectedErrors() and Smarty::unmuteExpectedErrors()\n    as Smarty does no longer use error suppression like @filemtime().\n    for backward compatibility code is moved from Smarty class to an external class and still can be\n    called.\n  - correction of PHPDoc blocks\n  - minor code cleanup\n\n21.10.2017\n  - bugfix custom delimiters could fail since modification of  version 3.1.32-dev-23\n    https://github.com/smarty-php/smarty/issues/394\n\n18.10.2017\n  - bugfix fix implementation of unclosed block tag in double quoted string of 12.10.2017\n    https://github.com/smarty-php/smarty/issues/396 https://github.com/smarty-php/smarty/issues/397\n    https://github.com/smarty-php/smarty/issues/391 https://github.com/smarty-php/smarty/issues/392\n\n12.10.2017\n  - bugfix $smarty.block.child and $smarty.block.parent could not be used like any\n    $smarty special variable https://github.com/smarty-php/smarty/issues/393\n  - unclosed block tag in double quoted string must throw compiler exception.\n     https://github.com/smarty-php/smarty/issues/391 https://github.com/smarty-php/smarty/issues/392\n\n07.10.2017\n  - bugfix modification of 9.8.2017 did fail on some recursive\n    tag nesting. https://github.com/smarty-php/smarty/issues/389\n\n26.8.2017\n  - bugfix chained modifier failed when last modifier parameter is a signed value\n    https://github.com/smarty-php/smarty/issues/327\n  - bugfix templates filepath with multibyte characters did not work\n    https://github.com/smarty-php/smarty/issues/385\n  - bugfix {make_nocache} did display code if the template did not contain other nocache code\n    https://github.com/smarty-php/smarty/issues/369\n\n09.8.2017\n  - improvement repeated delimiter like {{ and }} will be treated as literal\n    https://groups.google.com/forum/#!topic/smarty-developers/h9r82Bx4KZw\n\n05.8.2017\n  - bugfix wordwrap modifier could fail if used in nocache code.\n    converted plugin file shared.mb_wordwrap.php into modifier.mb_wordwrap.php\n  - cleanup of _getSmartyObj()\n\n31.7.2017\n  - Call clearstatcache() after mkdir() failure https://github.com/smarty-php/smarty/pull/379\n\n30.7.2017\n  - rewrite mkdir() bugfix to retry automatically see https://github.com/smarty-php/smarty/pull/377\n    https://github.com/smarty-php/smarty/pull/379\n\n21.7.2017\n  - security possible PHP code injection on custom resources at display() or fetch()\n    calls if the resource does not sanitize the template name\n  - bugfix fix 'mkdir(): File exists' error on create directory from parallel\n    processes https://github.com/smarty-php/smarty/pull/377\n  - bugfix solve preg_match() hhvm parameter problem https://github.com/smarty-php/smarty/pull/372\n\n27.5.2017\n  - bugfix change compiled code for registered function and modifiers to called as callable to allow closures\n    https://github.com/smarty-php/smarty/pull/368, https://github.com/smarty-php/smarty/issues/273\n  - bugfix https://github.com/smarty-php/smarty/pull/368 did break the default plugin handler\n  - improvement replace phpversion() by PHP_VERSION constant.\n    https://github.com/smarty-php/smarty/pull/363\n\n21.5.2017\n  - performance store flag for already required shared plugin functions in static variable or\n    Smarty's $_cache to improve performance when plugins are often called\n    https://github.com/smarty-php/smarty/commit/51e0d5cd405d764a4ea257d1bac1fb1205f74528#commitcomment-22280086\n  - bugfix remove special treatment of classes implementing ArrayAccess in {foreach}\n    https://github.com/smarty-php/smarty/issues/332\n  - bugfix remove deleted files by clear_cache() and clear_compiled_template() from\n    ACP cache if present, add some is_file() checks to avoid possible warnings on filemtime()\n    caused by above functions.\n    https://github.com/smarty-php/smarty/issues/341\n  - bugfix version 3.1.31 did fail under PHP 5.2\n    https://github.com/smarty-php/smarty/issues/365\n\n19.5.2017\n  - change properties $accessMap and $obsoleteProperties from private to protected\n    https://github.com/smarty-php/smarty/issues/351\n  - new feature The named capture buffers can now be accessed also as array\n    See NEWS_FEATURES.txt https://github.com/smarty-php/smarty/issues/366\n  - improvement check if ini_get() and ini_set() not disabled\n    https://github.com/smarty-php/smarty/pull/362\n\n24.4.2017\n  - fix spelling https://github.com/smarty-php/smarty/commit/e3eda8a5f5653d8abb960eb1bc47e3eca679b1b4#commitcomment-21803095\n\n17.4.2017\n  - correct generated code on empty() and isset() call, observe change PHP behaviour since PHP 5.5\n    https://github.com/smarty-php/smarty/issues/347\n\n14.4.2017\n  - merge pull requests https://github.com/smarty-php/smarty/pull/349, https://github.com/smarty-php/smarty/pull/322 and    https://github.com/smarty-php/smarty/pull/337 to fix spelling and annotation\n\n13.4.2017\n  - bugfix array_merge() parameter should be checked https://github.com/smarty-php/smarty/issues/350\n\n## 3.1.31 - (14.12.2016)\n  23.11.2016\n   - move template object cache into static variables\n\n  19.11.2016\n  - bugfix inheritance root child templates containing nested {block}{/block} could call sub-bock content from parent\n    template https://github.com/smarty-php/smarty/issues/317\n  - change version checking\n\n 11.11.2016\n  - bugfix when Smarty is using a cached template object on Smarty::fetch() or Smarty::isCached() the inheritance data\n    must be removed https://github.com/smarty-php/smarty/issues/312\n  - smaller speed optimization\n\n 08.11.2016\n  - add bootstrap file to load and register Smarty_Autoloader. Change composer.json to make it known to composer\n\n 07.11.2016\n  - optimization of lexer speed https://github.com/smarty-php/smarty/issues/311\n\n 27.10.2016\n  - bugfix template function definitions array has not been cached between Smarty::fetch() and Smarty::display() calls\n    https://github.com/smarty-php/smarty/issues/301\n\n 23.10.2016\n  - improvement/bugfix when Smarty::fetch() is called on a template object the inheritance and tplFunctions property\n    should be copied to the called template object\n\n 21.10.2016\n  - bugfix for compile locking touched timestamp of old compiled file was not restored on compilation error https://github.com/smarty-php/smarty/issues/308\n\n 20.10.2016\n  - bugfix nocache code was not removed in cache file when subtemplate did contain PHP short tags in text but no other\n    nocache code https://github.com/smarty-php/smarty/issues/300\n\n 19.10.2016\n  - bugfix {make_nocache $var} did fail when variable value did contain '\\' https://github.com/smarty-php/smarty/issues/305\n  - bugfix {make_nocache $var} remove spaces from variable value https://github.com/smarty-php/smarty/issues/304\n\n 12.10.2016\n  - bugfix {include} with template names including variable or constants could fail after bugfix from\n     28.09.2016 https://github.com/smarty-php/smarty/issues/302\n\n 08.10.2016\n  - optimization move runtime extension for template functions into Smarty objects\n\n 29.09.2016\n  - improvement new Smarty::$extends_recursion property to disable execution of {extends} in templates called by extends resource\n     https://github.com/smarty-php/smarty/issues/296\n\n 28.09.2016\n  - bugfix the generated code for calling a subtemplate must pass the template resource name in single quotes https://github.com/smarty-php/smarty/issues/299\n  - bugfix nocache hash was not removed for <?xml ?> tags in subtemplates https://github.com/smarty-php/smarty/issues/300\n\n 27.09.2016\n  - bugfix when Smarty does use an internally cached template object on Smarty::fetch() calls\n           the template and config variables must be cleared https://github.com/smarty-php/smarty/issues/297\n\n 20.09.2016\n  - bugfix some $smarty special template variables are no longer accessed as real variable.\n    using them on calls like {if isset($smarty.foo)} or {if empty($smarty.foo)} will fail\n    http://www.smarty.net/forums/viewtopic.php?t=26222\n  - temporary fix for https://github.com/smarty-php/smarty/issues/293 main reason still under investigation\n  - improvement new tags {block_parent} {block_child} in template inheritance\n\n 19.09.2016\n  - optimization clear compiled and cached folder completely on detected version change\n  - cleanup convert cache resource file method clear into runtime extension\n\n 15.09.2016\n  - bugfix assigning a variable in if condition by function like {if $value = array_shift($array)} the function got called twice https://github.com/smarty-php/smarty/issues/291\n  - bugfix function plugins called with assign attribute like {foo assign='bar'} did not output returned content because\n           because assumption was made that it was assigned to a variable https://github.com/smarty-php/smarty/issues/292\n  - bugfix calling $smarty->isCached() on a not existing cache file with $smarty->cache_locking = true; could cause a 10 second delay http://www.smarty.net/forums/viewtopic.php?t=26282\n  - improvement make Smarty::clearCompiledTemplate() on custom resource independent from changes of templateId computation\n\n 11.09.2016\n  - improvement {math} misleading E_USER_WARNING messages when parameter value = null https://github.com/smarty-php/smarty/issues/288\n  - improvement move often used code snippets into methods\n  - performance Smarty::configLoad() did load unneeded template source object\n\n 09.09.2016\n  - bugfix/optimization {foreach} did not execute the {foreachelse} when iterating empty objects https://github.com/smarty-php/smarty/pull/287\n  - bugfix {foreach} must keep the @properties when restoring a saved $item variable as the properties might be used outside {foreach} https://github.com/smarty-php/smarty/issues/267\n  - improvement {foreach} observe {break n} and {continue n} nesting levels when restoring saved $item and $key variables\n\n 08.09.2016\n  - bugfix implement wrapper for removed method getConfigVariable() https://github.com/smarty-php/smarty/issues/286\n\n 07.09.2016\n  - bugfix using nocache like attribute with value true like {plugin nocache=true} did not work https://github.com/smarty-php/smarty/issues/285\n  - bugfix uppercase TRUE, FALSE and NULL did not work when security was enabled https://github.com/smarty-php/smarty/issues/282\n  - bugfix when {foreach} was looping over an object the total property like {$item@total} did always return 1 https://github.com/smarty-php/smarty/issues/281\n  - bugfix {capture}{/capture} did add in 3.1.30 unintended additional blank lines https://github.com/smarty-php/smarty/issues/268\n\n 01.09.2016\n  - performance require_once should be called only once for shared plugins https://github.com/smarty-php/smarty/issues/280\n\n 26.08.2016\n  - bugfix change of 23.08.2016 failed on linux when use_include_path = true\n\n 23.08.2016\n  - bugfix remove constant DS as shortcut for DIRECTORY_SEPARATOR as the user may have defined it to something else https://github.com/smarty-php/smarty/issues/277\n\n 20.08-2016\n  - bugfix {config_load ... scope=\"global\"} shall not throw an arror but fallback to scope=\"smarty\" https://github.com/smarty-php/smarty/issues/274\n  - bugfix {make_nocache} failed when using composer autoloader https://github.com/smarty-php/smarty/issues/275\n\n 14.08.2016\n  - bugfix $smarty_>debugging = true; did E_NOTICE messages when {eval} tag was used https://github.com/smarty-php/smarty/issues/266\n  - bugfix Class 'Smarty_Internal_Runtime_ValidateCompiled' not found when upgrading from some older Smarty versions with existing\n           compiled or cached template files https://github.com/smarty-php/smarty/issues/269\n  - optimization remove unneeded call to update acopes when {assign} scope and template scope was local (default)\n\n## 3.1.30 - (07.08.2016)\n\n 07.08.2016\n  - bugfix update of 04.08.2016 was incomplete\n\n 05.08.2016\n  - bugfix compiling of templates failed when the Smarty delimiter did contain '/' https://github.com/smarty-php/smarty/issues/264\n  - updated error checking at template and config default handler\n\n 04.08.2016\n  - improvement move template function source parameter into extension\n\n 26.07.2016\n  - optimization unneeded loading of compiled resource\n\n 24.07.2016\n  - regression this->addPluginsDir('/abs/path/to/dir') adding absolute path without trailing '/' did fail https://github.com/smarty-php/smarty/issues/260\n\n 23.07.2016\n  - bugfix setTemplateDir('/') and setTemplateDir('') did create wrong absolute filepath https://github.com/smarty-php/smarty/issues/245\n  - optimization of filepath normalization\n  - improvement remove double function declaration in plugin shared.escape_special_cars.php https://github.com/smarty-php/smarty/issues/229\n\n 19.07.2016\n  - bugfix multiple {include} with relative filepath within {block}{/block} could fail https://github.com/smarty-php/smarty/issues/246\n  - bugfix {math} shell injection vulnerability patch provided by Tim Weber\n\n 18.07.2016\n  - bugfix {foreach} if key variable and item@key attribute have been used both the key variable was not updated https://github.com/smarty-php/smarty/issues/254\n  - bugfix modifier on plugins like {plugin|modifier ... } did fail when the plugin does return an array https://github.com/smarty-php/smarty/issues/228\n  - bugfix avoid opcache_invalidate to result in ErrorException when opcache.restrict_api is not empty https://github.com/smarty-php/smarty/pull/244\n  - bugfix multiple {include} with relative filepath within {block}{/block} could fail https://github.com/smarty-php/smarty/issues/246\n\n 14.07.2016\n  - bugfix wrong parameter on compileAllTemplates() and compileAllConfig() https://github.com/smarty-php/smarty/issues/231\n\n 13.07.2016\n  - bugfix PHP 7 compatibility on registered compiler plugins https://github.com/smarty-php/smarty/issues/241\n  - update testInstall() https://github.com/smarty-php/smarty/issues/248https://github.com/smarty-php/smarty/issues/248\n  - bugfix enable debugging could fail when template objects did already exists https://github.com/smarty-php/smarty/issues/237\n  - bugfix template function data should be merged when loading subtemplate https://github.com/smarty-php/smarty/issues/240\n  - bugfix wrong parameter on compileAllTemplates() https://github.com/smarty-php/smarty/issues/231\n\n 12.07.2016\n  - bugfix {foreach} item variable must be created also on empty from array https://github.com/smarty-php/smarty/issues/238 and https://github.com/smarty-php/smarty/issues/239\n  - bugfix enableSecurity() must init cache flags https://github.com/smarty-php/smarty/issues/247\n\n 27.05.2016\n  - bugfix/improvement of compileAlltemplates() follow symlinks in template folder (PHP >= 5.3.1) https://github.com/smarty-php/smarty/issues/224\n      clear internal cache and expension handler for each template to avoid possible conflicts https://github.com/smarty-php/smarty/issues/231\n\n 16.05.2016\n  - optimization {foreach} compiler and processing\n  - broken PHP 5.3 and 5.4 compatibility\n\n 15.05.2016\n  - optimization and cleanup of resource code\n\n 10.05.2016\n  - optimization of inheritance processing\n\n 07.05.2016\n  -bugfix Only variables should be assigned by reference https://github.com/smarty-php/smarty/issues/227\n\n 02.05.2016\n  - enhancement {block} tag names can now be variable https://github.com/smarty-php/smarty/issues/221\n\n 01.05.2016\n  - bugfix same relative filepath at {include} called from template in different folders could display wrong sub-template\n\n 29.04.2016\n  - bugfix {strip} remove space on linebreak between html tags https://github.com/smarty-php/smarty/issues/213\n\n 24.04.2016\n  - bugfix nested {include} with relative file path could fail when called in {block} ... {/block} https://github.com/smarty-php/smarty/issues/218\n\n 14.04.2016\n  - bugfix special variable {$smarty.capture.name} was not case sensitive on name https://github.com/smarty-php/smarty/issues/210\n  - bugfix the default template handler must calculate the source uid https://github.com/smarty-php/smarty/issues/205\n\n 13.04.2016\n  - bugfix template inheritance status must be saved when calling sub-templates https://github.com/smarty-php/smarty/issues/215\n\n 27.03.2016\n  - bugfix change of 11.03.2016 cause again {capture} data could not been seen in other templates with {$smarty.capture.name} https://github.com/smarty-php/smarty/issues/153\n\n 11.03.2016\n  - optimization of capture and security handling\n  - improvement $smarty->clearCompiledTemplate() should return on recompiled or uncompiled resources\n\n 10.03.2016\n  - optimization of resource processing\n\n 09.03.2016\n  - improvement rework of 'scope' attribute handling see see NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/194\n    https://github.com/smarty-php/smarty/issues/186 https://github.com/smarty-php/smarty/issues/179\n  - bugfix correct Autoloader update of 2.3.2014 https://github.com/smarty-php/smarty/issues/199\n\n 04.03.2016\n  - bugfix change from 01.03.2016 will cause $smarty->isCached(..) failure if called multiple time for same template\n    (forum topic 25935)\n\n 02.03.2016\n  - revert autoloader optimizations because of unexplainable warning when using plugins https://github.com/smarty-php/smarty/issues/199\n\n 01.03.2016\n  - bugfix template objects must be cached on $smarty->fetch('foo.tpl) calls incase the template is fetched\n    multiple times (forum topic 25909)\n\n 25.02.2016\n  - bugfix wrong _realpath with 4 or more parent-directories https://github.com/smarty-php/smarty/issues/190\n  - optimization of _realpath\n  - bugfix instanceof expression in template code must be treated as value https://github.com/smarty-php/smarty/issues/191\n\n 20.02.2016\n  - bugfix {strip} must keep space between hmtl tags. Broken by changes of 10.2.2016 https://github.com/smarty-php/smarty/issues/184\n  - new feature/bugfix  {foreach}{section} add 'properties' attribute to force compilation of loop properties\n    see NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/189\n\n 19.02.2016\n  - revert output buffer flushing on display, echo content again because possible problems when PHP files had\n    characters (newline} after ?> at file end https://github.com/smarty-php/smarty/issues/187\n\n 14.02.2016\n  - new tag {make_nocache} read NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/110\n  - optimization of sub-template processing\n  - bugfix using extendsall as default resource and {include} inside {block} tags could produce unexpected results https://github.com/smarty-php/smarty/issues/183\n  - optimization of tag attribute compiling\n  - optimization make compiler tag object cache static for higher compilation speed\n\n 11.02.2016\n  - improvement added KnockoutJS comments to trimwhitespace outputfilter https://github.com/smarty-php/smarty/issues/82\n    https://github.com/smarty-php/smarty/pull/181\n\n 10.02.2016\n  - bugfix {strip} must keep space on output creating smarty tags within html tags https://github.com/smarty-php/smarty/issues/177\n  - bugfix wrong precedence on special if conditions like '$foo is ... by $bar' could cause wrong code https://github.com/smarty-php/smarty/issues/178\n  - improvement because of ambiguities the inline constant support has been removed from the $foo.bar syntax https://github.com/smarty-php/smarty/issues/149\n  - bugfix other {strip} error with output tags between hmtl https://github.com/smarty-php/smarty/issues/180\n\n 09.02.2016\n  - move some code from parser into compiler\n  - reformat all code for unique style\n  - update/bugfix scope attribute handling reworked. Read the newfeatures.txt file\n\n 05.02.2016\n  - improvement internal compiler changes\n\n 01.02.2016\n  - bugfix {foreach} compilation failed when $smarty->merge_compiled_includes = true and pre-filters are used.\n\n 29.01.2016\n  - bugfix implement replacement code for _tag_stack property https://github.com/smarty-php/smarty/issues/151\n\n 28.01.2016\n  - bugfix allow windows network filepath or wrapper (forum topic 25876) https://github.com/smarty-php/smarty/issues/170\n  - bugfix if fetch('foo.tpl') is called on a template object the $parent parameter should default to the calling template object https://github.com/smarty-php/smarty/issues/152\n\n 27.01.2016\n  - revert bugfix compiling {section} did create warning\n  - bugfix {$smarty.section.customer.loop} did throw compiler error https://github.com/smarty-php/smarty/issues/161\n    update of yesterdays fix\n  - bugfix string resource could inject code at {block} or inline subtemplates through PHP comments https://github.com/smarty-php/smarty/issues/157\t\t\n  - bugfix output filters did not observe nocache code flhttps://github.com/smarty-php/smarty/issues/154g https://github.com/smarty-php/smarty/issues/160\n  - bugfix {extends} with relative file path did not work https://github.com/smarty-php/smarty/issues/154\n    https://github.com/smarty-php/smarty/issues/158\n  - bugfix {capture} data could not been seen in other templates with {$smarty.capture.name} https://github.com/smarty-php/smarty/issues/153\n\n 26.01.2016\n  - improvement observe Smarty::$_CHARSET in debugging console https://github.com/smarty-php/smarty/issues/169\n  - bugfix compiling {section} did create warning\n  - bugfix {$smarty.section.customer.loop} did throw compiler error https://github.com/smarty-php/smarty/issues/161\n\n 02.01.2016\n  - update scope handling\n  - optimize block plugin compiler\n  - improvement runtime checks if registered block plugins are callable\n\n 01.01.2016\n  - remove Smarty::$resource_cache_mode property\n\n 31.12.2015\n  - optimization of {assign}, {if} and {while} compiled code\n\n 30.12.2015\n  - bugfix plugin names starting with \"php\" did not compile https://github.com/smarty-php/smarty/issues/147\n\n 29.12.2015\n  - bugfix Smarty::error_reporting was not observed when display() or fetch() was called on template objects https://github.com/smarty-php/smarty/issues/145\n\n 28.12.2015\n  - optimization of {foreach} code size and processing\n\n 27.12.2015\n  - improve inheritance code\n  - update external methods\n  - code fixes\n  - PHPdoc updates\n\n 25.12.2015\n  - compile {block} tag code and its processing into classes\n  - optimization replace hhvm extension by inline code\n  - new feature If ACP is enabled force an apc_compile_file() when compiled or cached template was updated\n\n 24.12.2015\n  - new feature Compiler does now observe the template_dir setting and will create separate compiled files if required\n  - bugfix post filter did fail on template inheritance https://github.com/smarty-php/smarty/issues/144\n\n 23.12.2015\n  - optimization move internal method decodeProperties back into template object\n  - optimization move subtemplate processing back into template object\n  - new feature Caching does now observe the template_dir setting and will create separate cache files if required\n\n 22.12.2015\n  - change $xxx_dir properties from private to protected in case Smarty class gets extended\n  - code optimizations\n\n 21.12.2015\n  - bugfix a filepath starting with '/' or '\\' on windows should normalize to the root dir\n    of current working drive https://github.com/smarty-php/smarty/issues/134\n  - optimization of filepath normalization\n  - bugfix {strip} must remove all blanks between html tags https://github.com/smarty-php/smarty/issues/136\n\n - 3.1.29 - (21.12.2015)\n 21.12.2015\n  - optimization improve speed of filetime checks on extends and extendsall resource\n\n 20.12.2015\n  - bugfix failure when the default resource type was set to 'extendsall' https://github.com/smarty-php/smarty/issues/123\n  - update compilation of Smarty special variables\n  - bugfix add addition check for OS type on normalization of file path https://github.com/smarty-php/smarty/issues/134\n  - bugfix the source uid of the extendsall resource must contain $template_dir settings https://github.com/smarty-php/smarty/issues/123\n\n 19.12.2015\n  - bugfix using $smarty.capture.foo in expressions could fail https://github.com/smarty-php/smarty/pull/138\n  - bugfix broken PHP 5.2 compatibility https://github.com/smarty-php/smarty/issues/139\n  - remove no longer used code\n  - improvement make sure that compiled and cache templates never can contain a trailing '?>?\n\n 18.12.2015\n  - bugfix regression when modifier parameter was followed by math https://github.com/smarty-php/smarty/issues/132\n\n 17.12.2015\n  - bugfix {$smarty.capture.nameFail} did lowercase capture name https://github.com/smarty-php/smarty/issues/135\n  - bugfix using {block append/prepend} on same block in multiple levels of inheritance templates could fail (forum topic 25827)\n  - bugfix text content consisting of just a single '0' like in {if true}0{/if} was suppressed (forum topic 25834)\n\n 16.12.2015\n  - bugfix {foreach} did fail if from atrribute is a Generator class https://github.com/smarty-php/smarty/issues/128\n  - bugfix direct access $smarty->template_dir = 'foo'; should call Smarty::setTemplateDir() https://github.com/smarty-php/smarty/issues/121\n\n 15.12.2015\n  - bugfix  {$smarty.cookies.foo} did return the $_COOKIE array not the 'foo' value https://github.com/smarty-php/smarty/issues/122\n  - bugfix  a call to clearAllCache() and other should clear all internal template object caches (forum topic 25828)\n\n 14.12.2015\n  - bugfix  {$smarty.config.foo} broken in 3.1.28 https://github.com/smarty-php/smarty/issues/120\n  - bugfix  multiple calls of {section} with same name droped E_NOTICE error https://github.com/smarty-php/smarty/issues/118\n\n - 3.1.28 - (13.12.2015)\n 13.12.2015\n  - bugfix {foreach} and {section} with uppercase characters in name attribute did not work (forum topic 25819)\n  - bugfix $smarty->debugging_ctrl = 'URL' did not work (forum topic 25811)\n  - bugfix Debug Console could display incorrect data when using subtemplates\n\n 09.12.2015\n  - bugfix Smarty did fail under PHP 7.0.0 with use_include_path = true;\n\n 09.12.2015\n  - bugfix {strip} should exclude some html tags from stripping, related to fix for https://github.com/smarty-php/smarty/issues/111\n\n 08.12.2015\n  - bugfix internal template function data got stored in wrong compiled file https://github.com/smarty-php/smarty/issues/114\n\n 05.12.2015\n  -bugfix {strip} should insert a single space https://github.com/smarty-php/smarty/issues/111\n\n 25.11.2015\n  -bugfix a left delimter like '[%' did fail on [%$var_[%$variable%]%] (forum topic 25798)\n\n 02.11.2015\n  - bugfix {include} with variable file name like {include file=\"foo_`$bar`.tpl\"} did fail in 3.1.28-dev https://github.com/smarty-php/smarty/issues/102\n\n 01.11.2015\n  - update config file processing\n\n 31.10.2015\n  - bugfix add missing $trusted_dir property to SmartyBC class (forum topic 25751)\n\n 29.10.2015\n  - improve template scope handling\n\n 24.10.2015\n  - more optimizations of template processing\n  - bugfix Error when using {include} within {capture} https://github.com/smarty-php/smarty/issues/100\n\n 21.10.2015\n  - move some code into runtime extensions\n\n 18.10.2015\n  - optimize filepath normalization\n  - rework of template inheritance\n  - speed and size optimizations\n  - bugfix under HHVM temporary cache file must only be created when caches template was updated\n  - fix compiled code for new {block} assign attribute\n  - update code generated by template function call handler\n\n 18.09.2015\n  - bugfix {if $foo instanceof $bar} failed to compile if 2nd value is a variable https://github.com/smarty-php/smarty/issues/92\n\n 17.09.2015\n  - bugfix {foreach} first attribute was not correctly reset since commit 05a8fa2 of 02.08.2015 https://github.com/smarty-php/smarty/issues/90\n\n 16.09.2015\n  - update compiler by moving no longer needed properties, code optimizations and other\n\n 14.09.2015\n  - optimize autoloader\n  - optimize subtemplate handling\n  - update template inheritance processing\n  - move code of {call} processing back into Smarty_Internal_Template class\n  - improvement invalidate OPCACHE for cleared compiled and cached template files (forum topic 25557)\n  - bugfix unintended multiple debug windows (forum topic 25699)\n\n 30.08.2015\n  - size optimization move some runtime functions into extension\n  - optimize inline template processing\n  - optimization merge inheritance child and parent templates into one compiled template file\n\n 29.08.2015\n  - improvement convert template inheritance into runtime processing\n  - bugfix {$smarty.block.parent} did always reference the root parent block https://github.com/smarty-php/smarty/issues/68\n\n 23.08.2015\n  - introduce Smarty::$resource_cache_mode and cache template object of {include} inside loop\n  - load seldom used Smarty API methods dynamically to reduce memory footprint\n  - cache template object of {include} if same template is included several times\n  - convert debug console processing to object\n  - use output buffers for better performance and less memory usage\n  - optimize nocache hash processing\n  - remove not really needed properties\n  - optimize rendering\n  - move caching to Smarty::_cache\n  - remove properties with redundant content\n  - optimize Smarty::templateExists()\n  - optimize use_include_path processing\n  - relocate properties for size optimization\n  - remove redundant code\n  - bugfix compiling super globals like {$smarty.get.foo} did fail in the master branch https://github.com/smarty-php/smarty/issues/77\n\n 06.08.2015\n  - avoid possible circular object references caused by parser/lexer objects\n  - rewrite compileAll... utility methods\n  - commit several  internal improvements\n  - bugfix Smarty failed when compile_id did contain \"|\"\n\n 03.08.2015\n  - rework clear cache methods\n  - bugfix compileAllConfig() was broken since 3.1.22 because of the changes in config file processing\n  - improve getIncludePath() to return directory if no file was given\n\n 02.08.2015\n  - optimization and code cleanup of {foreach} and {section} compiler\n  - rework {capture} compiler\n\n 01.08.2015\n  - update DateTime object can be instance of DateTimeImmutable since PHP5.5 https://github.com/smarty-php/smarty/pull/75\n  - improvement show resource type and start of template source instead of uid on eval: and string: resource (forum topic 25630)\n\n 31.07.2015\n  - optimize {foreach} and {section} compiler\n\n 29.07.2015\n  - optimize {section} compiler for speed and size of compiled code\n\n 28.07.2015\n  - update for PHP 7 compatibility\n\n 26.07.2015\n  - improvement impement workaround for HHVM PHP incompatibillity https://github.com/facebook/hhvm/issues/4797\n\n 25.07.2015\n  - bugfix parser did hang on text starting <?something https://github.com/smarty-php/smarty/issues/74\n\n 20.07.2015\n  - bugfix config files got recompiled on each request\n  - improvement invalidate PHP 5.5 opcache for recompiled and cached templates  https://github.com/smarty-php/smarty/issues/72\n\n 12.07.2015\n  - optimize {extends} compilation\n\n 10.07.2015\n  - bugfix force file: resource in demo resource.extendsall.php\n\n 08.07.2015\n  - bugfix convert each word of class names to ucfirst in in compiler. (forum topic 25588)\n\n 07.07.2015\n  - improvement allow fetch() or display() called on a template object to get output from other template\n     like $template->fetch('foo.tpl') https://github.com/smarty-php/smarty/issues/70\n  - improvement Added $limit parameter to regex_replace modifier #71\n  - new feature multiple indices on file: resource\n\n 06.07.2015\n  - optimize {block} compilation\n  - optimization get rid of __get and __set in source object\n\n 01.07.2015\n  - optimize compile check handling\n  - update {foreach} compiler\n  - bugfix debugging console did not display string values containing \\n, \\r or \\t correctly https://github.com/smarty-php/smarty/issues/66\n  - optimize source resources\n\n 28.06.2015\n  - move $smarty->enableSecurity() into Smarty_Security class\n  - optimize security isTrustedResourceDir()\n  - move auto load filter methods into extension\n  - move $smarty->getTemplateVars() into extension\n  - move getStreamVariable() into extension\n  - move $smarty->append() and $smarty->appendByRef() into extension\n  - optimize autoloader\n  - optimize file path normalization\n  - bugfix PATH_SEPARATOR was replaced by mistake in autoloader\n  - remove redundant code\n\n 27.06.2015\n  - bugfix resolve naming conflict between custom Smarty delimiter '<%' and PHP ASP tags https://github.com/smarty-php/smarty/issues/64\n  - update $smarty->_realpath for relative path not starting with './'\n  - update Smarty security with new realpath handling\n  - update {include_php} with new realpath handling\n  - move $smarty->loadPlugin() into extension\n  - minor compiler optimizations\n  - bugfix allow function plugins with name ending with 'close' https://github.com/smarty-php/smarty/issues/52\n  - rework of $smarty->clearCompiledTemplate() and move it to its own extension\n\n 19.06.2015\n  - improvement allow closures as callback at $smarty->registerFilter() https://github.com/smarty-php/smarty/issues/59\n\n - 3.1.27- (18.06.2015)\n 18.06.2015\n  - bugfix another update on file path normalization failed on path containing something like \"/.foo/\" https://github.com/smarty-php/smarty/issues/56\n\n - 3.1.26- (18.06.2015)\n 18.06.2015\n  - bugfix file path normalization failed on path containing something like \"/.foo/\" https://github.com/smarty-php/smarty/issues/56\n\n 17.06.2015\n  - bugfix calling a plugin with nocache option but no other attributes like {foo nocache} caused call to undefined function https://github.com/smarty-php/smarty/issues/55\n\n - 3.1.25- (15.06.2015)\n 15.06.2015\n  - optimization of smarty_cachereource_keyvaluestore.php code\n\n 14.06.2015\n  - bugfix a relative sub template path could fail if template_dir path did contain /../ https://github.com/smarty-php/smarty/issues/50\n  - optimization rework of path normalization\n  - bugfix an output tag with variable, modifier followed by an operator like {$foo|modifier+1} did fail https://github.com/smarty-php/smarty/issues/53\n\n 13.06.2015\n  - bugfix a custom cache resource using smarty_cachereource_keyvaluestore.php did fail if php.ini mbstring.func_overload = 2 (forum topic 25568)\n\n 11.06.2015\n  - bugfix the lexer could hang on very large quoted strings (forum topic 25570)\n\n 08.06.2015\n  - bugfix using {$foo} as array index like $bar.{$foo} or in double quoted string like \"some {$foo} thing\" failed https://github.com/smarty-php/smarty/issues/49\n\n 04.06.2015\n  - bugfix possible error message on unset() while compiling {block} tags https://github.com/smarty-php/smarty/issues/46\n\n 01.06.2015\n  - bugfix <?xml ... ?> including template variables broken  since 3.1.22 https://github.com/smarty-php/smarty/issues/47\n\n 27.05.2015\n  - bugfix {include} with variable file name must not create by default individual cache file (since 3.1.22) https://github.com/smarty-php/smarty/issues/43\n\n 24.05.2015\n  - bugfix if condition string 'neq' broken due to a typo https://github.com/smarty-php/smarty/issues/42\n\n - 3.1.24- (23.05.2015)\n 23.05.2015\n  - improvement on php_handling to allow very large PHP sections, better error handling\n  - improvement allow extreme large comment sections (forum 25538)\n\n 21.05.2015\n  - bugfix broken PHP 5.2 compatibility when compiling <?php tags https://github.com/smarty-php/smarty/issues/40\n  - bugfix named {foreach} comparison like $smarty.foreach.foobar.index > 1 did compile into wrong code https://github.com/smarty-php/smarty/issues/41\n\n 19.05.2015\n  - bugfix compiler did overwrite existing variable value when setting the nocache attribute https://github.com/smarty-php/smarty/issues/39\n  - bugfix output filter trimwhitespace could run into the pcre.backtrack_limit on large output (code.google issue 220)\n  - bugfix compiler could run into the pcre.backtrack_limit on larger comment or {php} tag sections (forum 25538)\n\n 18.05.2015\n  - improvement introduce shortcuts in lexer/parser rules for most frequent terms for higher\n    compilation speed\n\n 16.05.2015\n  - bugfix {php}{/php} did work just for single lines https://github.com/smarty-php/smarty/issues/33\n  - improvement remove not needed ?><?php transitions from compiled code\n  - improvement reduce number of lexer tokens on operators and if conditions\n  - improvement higher compilation speed by modified lexer/parser generator at \"smarty/smarty-lexer\"\n\n 13.05.2015\n  - improvement remove not needed ?><?php transitions from compiled code\n  - improvement of debugging:\n      - use fresh Smarty object to display the debug console because of possible problems when the Smarty\n        was extended or Smarty properties had been modified in the class source\n      - display Smarty version number\n      - Truncate lenght of Origin display and extend strin value display to 80 character\n  - bugfix in Smarty_Security  'nl2br' should be a trusted modifier, not PHP function (code.google issue 223)\n\n 12.05.2015\n  - bugfix {$smarty.constant.TEST} did fail  on undefined constant https://github.com/smarty-php/smarty/issues/28\n  - bugfix access to undefined config variable like {#undef#} did fail https://github.com/smarty-php/smarty/issues/29\n  - bugfix in nested {foreach} saved item attributes got overwritten https://github.com/smarty-php/smarty/issues/33\n\n - 3.1.23 - (12.05.2015)\n 12.05.2015\n  - bugfix of smaller performance issue introduce in 3.1.22 when caching is enabled\n  - bugfix missig entry for smarty-temmplate-config in autoloader\n\n - 3.1.22 - tag was deleted because 3.1.22 did fail caused by the missing entry for smarty-temmplate-config in autoloader\n 10.05.2015\n  - bugfix custom cache resource did not observe compile_id and cache_id when $cache_locking == true\n  - bugfix cache lock was not handled correctly after timeout when $cache_locking == true\n  - improvement added constants for $debugging\n\n 07.05.2015\n  - improvement of the debugging console. Read NEW_FEATURES.txt\n  - optimization of resource class loading\n\n 06.05.2015\n  - bugfix in 3.1.22-dev cache resource must not be loaded for subtemplates\n  - bugfix/improvement in 3.1.22-dev cache locking did not work as expected\n\n 05.05.2015\n  - optimization on cache update when main template is modified\n  - optimization move <?php ?> handling from parser to new compiler module\n\n 05.05.2015\n  - bugfix code could be messed up when {tags} are used in multiple attributes https://github.com/smarty-php/smarty/issues/23\n\n 04.05.2015\n  - bugfix Smarty_Resource::parseResourceName incompatible with Google AppEngine (https://github.com/smarty-php/smarty/issues/22)\n  - improvement use is_file() checks to avoid errors suppressed by @ which could still cause problems (https://github.com/smarty-php/smarty/issues/24)\n\n 28.04.2015\n  - bugfix plugins of merged subtemplates not loaded in 3.1.22-dev (forum topic 25508) 2nd fix\n\n 28.04.2015\n  - bugfix plugins of merged subtemplates not loaded in 3.1.22-dev (forum topic 25508)\n\n 23.04.2015\n  - bugfix a nocache template variable used as parameter at {insert} was by mistake cached\n\n 20.04.2015\n  - bugfix at a template function containing nocache code a parmeter could overwrite a template variable of same name\n\n 27.03.2015\n  - bugfix Smarty_Security->allow_constants=false; did also disable true, false and null (change of 16.03.2015)\n  - improvement added a whitelist for trusted constants to security Smarty_Security::$trusted_constants (forum topic 25471)\n\n 20.03.2015\n  - bugfix make sure that function properties get saved only in compiled files containing the fuction definition {forum topic 25452}\n  - bugfix correct update of global variable values on exit of template functions. (reported under Smarty Developers)\n\n 16.03.2015\n - bugfix  problems with {function}{/function} and {call} tags in different subtemplate cache files {forum topic 25452}\n - bugfix  Smarty_Security->allow_constants=false; did not disallow direct usage of defined constants like {SMARTY_DIR} {forum topic 25457}\n - bugfix  {block}{/block} tags did not work inside double quoted strings https://github.com/smarty-php/smarty/issues/18\n\n\n 15.03.2015\n - bugfix  $smarty->compile_check must be restored before rendering of a just updated cache file {forum 25452}\n\n 14.03.2015\n - bugfix  {nocache}  {/nocache} tags corrupted code when used within a nocache section caused by a nocache template variable.\n\n - bugfix  template functions defined with {function} in an included subtemplate could not be called in nocache\n           mode with {call... nocache} if the subtemplate had it's own cache file {forum 25452}\n\n 10.03.2015\n - bugfix {include ... nocache} whith variable file or compile_id attribute was not executed in nocache mode.\n\n 12.02.2015\n - bugfix multiple Smarty::fetch() of same template when $smarty->merge_compiled_includes = true; could cause function already defined error\n\n 11.02.2015\n - bugfix recursive {includes} did create E_NOTICE message when $smarty->merge_compiled_includes = true; (github issue #16)\n\n 22.01.2015\n - new feature security can now control access to static methods and properties\n                see also NEW_FEATURES.txt\n\n 21.01.2015\n - bugfix clearCompiledTemplates(), clearAll() and clear() could try to delete whole drive at wrong path permissions because realpath() fail (forum 25397)\n - bugfix 'self::' and 'parent::' was interpreted in template syntax as static class\n\n 04.01.2015\n - push last weeks changes to github\n\n - different optimizations\n - improvement automatically create different versions of compiled templates and config files depending\n   on property settings.\n - optimization restructure template processing by moving code into classes it better belongs to\n - optimization restructure config file processing\n\n 31.12.2014\n - bugfix use function_exists('mb_get_info') for setting Smarty::$_MBSTRING.\n   Function mb_split could be overloaded depending on php.ini mbstring.func_overload\n\n\n 29.12.2014\n - new feature security can now limit the template nesting level by property $max_template_nesting\n                see also NEW_FEATURES.txt (forum 25370)\n\n 29.12.2014\n - new feature security can now disable special $smarty variables listed in property $disabled_special_smarty_vars\n                see also NEW_FEATURES.txt (forum 25370)\n\n 27.12.2014\n  - bugfix clear internal _is_file_cache when plugins_dir was modified\n\n 13.12.2014\n  - improvement optimization of lexer and parser resulting in a up to 30% higher compiling speed\n\n 11.12.2014\n  - bugfix resolve parser ambiguity between constant print tag {CONST} and other smarty tags after change of 09.12.2014\n\n 09.12.2014\n  - bugfix variables $null, $true and $false did not work after the change of 12.11.2014 (forum 25342)\n  - bugfix call of template function by a variable name did not work after latest changes (forum 25342)\n\n 23.11.2014\n  - bugfix a plugin with attached modifier could fail if the tag was immediately followed by another Smarty tag (since 3.1.21) (forum 25326)\n\n 13.11.2014\n  - improvement move autoload code into Autoloader.php. Use Composer autoloader when possible\n\n 12.11.2014\n - new feature added support of namespaces to template code\n\n 08.11.2014 - 10.11.2014\n - bugfix subtemplate called in nocache mode could be called with wrong compile_id when it did change on one of the calling templates\n - improvement add code of template functions called in nocache mode dynamically to cache file (related to bugfix of 01.11.2014)\n - bugfix Debug Console did not include all data from merged compiled subtemplates\n\n 04.11.2014\n - new feature $smarty->debugging = true; => overwrite existing Debug Console window (old behaviour)\n               $smarty->debugging = 2; => individual Debug Console window by template name\n\n 03.11.2014\n - bugfix Debug Console did not show included subtemplates since 3.1.17 (forum 25301)\n - bugfix Modifier debug_print_var did not limit recursion or prevent recursive object display at Debug Console\n    (ATTENTION: parameter order has changed to be able to specify maximum recursion)\n - bugfix Debug consol did not include subtemplate information with $smarty->merge_compiled_includes = true\n - improvement The template variables are no longer displayed as objects on the Debug Console\n - improvement $smarty->createData($parent = null, $name = null) new optional name parameter for display at Debug Console\n - addition of some hooks for future extension of Debug Console\n\n 01.11.2014\n - bugfix and enhancement on subtemplate {include} and template {function} tags.\n   * Calling a template which has a nocache section could fail if it was called from a cached and a not cached subtemplate.\n   * Calling the same subtemplate cached and not cached with the $smarty->merge_compiled_includes enabled could cause problems\n   * Many smaller related changes\n\n 30.10.2014\n - bugfix access to class constant by object like {$object::CONST} or variable class name {$class::CONST} did not work (forum 25301)\n\n 26.10.2014\n - bugfix E_NOTICE message was created during compilation when ASP tags '<%' or '%>' are in template source text\n - bugfix merge_compiled_includes option failed when caching  enables and same subtemplate was included cached and not cached\n\n - 3.1.21 - (18.10.2014)\n 18.10.2014\n  - composer moved to github\n\n 17.10.2014\n - bugfix on $php_handling security and optimization of smarty_internal_parsetree (Thue Kristensen)\n\n 16.10.2014\n - bugfix composer.json update\n\n 15.10.2014\n - bugfix calling a new created cache file with fetch() and Smarty::CACHING_LIFETIME_SAVED multiple times did fail (forum 22350)\n\n 14.10.2014\n - bugfix any tag placed within \"<script language=php>\" will throw a security exception to close all thinkable holes\n - bugfix classmap in root composer.json should start at \"libs/...\"\n - improvement cache is_file(file_exists) results of loadPlugin() to avoid unnecessary calls during compilation (Issue 201}\n\n 12.10.2014\n - bugfix a comment like \"<script{*foo*} language=php>\" bypassed $php_handling checking (Thue Kristensen)\n - bugfix change of 08.10.2014 could create E_NOTICE meassage when using \"<?php\" tags\n - bugfix \"<script language=php>\" with $php_handling PHP_PASSTHRU was executed in {nocache} sections\n\n - 3.1.20 - (09.10.2014)\n 08.10.2014\n - bugfix security mode of \"<script language=php>\" must be controlled by $php_handling property (Thue Kristensen)\n\n 01.10.2014\n - bugfix template resource of inheritance blocks could get invalid if the default resource type is not 'file'(Issue 202)\n - bugfix existing child {block} tag must override parent {block} tag append / prepend setting (topic 25259)\n\n 02.08.2014\n - bugfix modifier wordwrap did output break string wrong if first word was exceeding length with cut = true (topic 25193)\n\n 24.07.2014\n - bugfix cache clear when cache folder does not exist\n\n 16.07.2014\n - enhancement remove BOM automatically from template source (topic 25161)\n\n 04.07.2014\n - bugfix the bufix of 02.06.2014 broke correct handling of child templates with same name but different template folders in extends resource (issue 194 and topic 25099)\n\n - 3.1.19 - (30.06.2014)\n 20.06.2014\n - bugfix template variables could not be passed as parameter in {include} when the include was in a {nocache} section (topic 25131)\n\n 17.06.2014\n - bugfix large template text of some charsets could cause parsing errors (topic 24630)\n\n 08.06.2014\n - bugfix registered objects did not work after spelling fixes of 06.06.2014\n - bugfix {block} tags within {literal} .. {/literal} got not displayed correctly (topic 25024)\n - bugfix UNC WINDOWS PATH like \"\\\\psf\\path\\to\\dir\" did not work as template directory (Issue 192)\n - bugfix {html_image} security check did fail on files relative to basedir (Issue 191)\n\n 06.06.2014\n - fixed PHPUnit outputFilterTrimWhitespaceTests.php assertion of test result\n - fixed spelling, PHPDoc , minor errors, code cleanup\n\n 02.06.2014\n - using multiple cwd with relative template dirs could result in identical compiled file names. (issue 194 and topic 25099)\n\n 19.04.2014\n - bugfix calling createTemplate(template, data) with empty data array caused notice of array to string conversion (Issue 189)\n - bugfix clearCompiledTemplate() did not delete files on WINDOWS when a compile_id was specified\n\n 18.04.2014\n - revert bugfix of 5.4.2014 because %-e date format is not supported on all operating systems\n\n - 3.1.18 - (07.04.2014)\n 06.04.2014\n - bugfix template inheritance fail when using custom resource after patch of 8.3.2014 (Issue 187)\n - bugfix update of composer file (Issue 168 and 184)\n\n 05.04.2014\n - bugfix default date format leads to extra spaces when displaying dates with single digit days (Issue 165)\n\n 26.03.2014\n - bugfix Smart_Resource_Custom should not lowercase the resource name (Issue 183)\n\n 24.03.2014\n - bugfix using a {foreach} property like @iteration could fail when used in inheritance parent templates (Issue 182)\n\n 20.03.2014\n - bugfix $smarty->auto_literal and mbsting.func_overload 2, 6 or 7 did fail (forum topic 24899)\n\n 18.03.2014\n - revert change of 17.03.2014\n\n17.03.2014\n - bugfix $smarty->auto_literal and mbsting.func_overload 2, 6 or 7 did fail (forum topic 24899)\n\n 15.03.2014\n - bugfix Smarty_CacheResource_Keyvaluestore did use different keys on read/writes and clearCache() calls (Issue 169)\n\n 13.03.2014\n - bugfix clearXxx() change of 27.1.2014 did not work when specifing cache_id or compile_id  (forum topic 24868 and 24867)\n\n - 3.1.17 -\n 08.03.2014\n - bugfix relative file path {include} within {block} of child templates did throw exception on first call (Issue 177)\n\n 17.02.2014\n - bugfix Smarty failed when executing PHP on HHVM (Hip Hop 2.4) because uniqid('',true) does return string with ',' (forum topic 20343)\n\n 16.02.2014\n - bugfix a '//' or '\\\\' in template_dir path could produce wrong path on relative filepath in {include} (Issue 175)\n\n 05.02.2014\n - bugfix shared.literal_compiler_param.php did throw an exception when literal did contain a '-' (smarty-developers group)\n\n 27.01.2014\n - bugfix $smarty->debugging = true; did show the variable of the $smarty object not the variables used in display() call (forum topic 24764)\n - bugfix clearCompiledTemplate(), clearAll() and clear() should use realpath to avoid possible exception from RecursiveDirectoryIterator (Issue 171)\n\n 26.01.2014\n - bugfix  undo block nesting checks for {nocache} for reasons like forum topic 23280 (forum topic 24762)\n\n 18.01.2014\n - bugfix the compiler did fail when using template inheritance and recursive {include} (smarty-developers group)\n\n 11.01.2014\n - bugfix \"* }\" (spaces before right delimiter) was interpreted by mistake as comment end tag (Issue 170)\n - internals  content cache should be clear when updating cache file\n\n 08.01.2014\n - bugfix Smarty_CacheResource_Custom did not handle template resource type specifications on clearCache() calls (Issue 169)\n - bugfix SmartyBC.class.php should use require_once to load Smarty.class.php (forum topic 24683)\n\n - 3.1.16 -\n 15.12.2013\n - bugfix {include} with {block} tag handling (forum topic 24599, 24594, 24682) (Issue 161)\n   Read 3.1.16_RELEASE_NOTES for more details\n - enhancement additional debug output at $smarty->_parserdebug = true;\n\n 07.11.2013\n - bugfix too restrictive handling of {include} within {block} tags. 3.1.15 did throw errors where 3.1.14 did not (forum topic 24599)\n - bugfix compiler could fail if PHP mbstring.func_overload is enabled  (Issue 164)\n\n 28.10.2013\n - bugfix variable resource name at custom resource plugin did not work within {block} tags (Issue 163)\n - bugfix notice \"Trying to get property of non-object\" removed (Issue 163)\n - bugfix correction of modifier capitalize fix from 3.10.2013  (issue 159)\n - bugfix multiple {block}s with same name in parent did not work (forum topic 24631)\n\n 20.10.2013\n - bugfix a variable file name at {extends} tag did fail (forum topic 24618)\n\n 14.10.2013\n - bugfix yesterdays fix could result in an undefined variable\n\n 13.10.2013\n - bugfix variable names on {include} in template inheritance did unextepted error message (forum topic 24594) (Issue 161)\n.- bugfix relative includes with same name like {include './foo.tpl'} from different folder failed (forum topic 24590)(Issue 161)\n\n 04.10.2013\n - bugfix variable file names at {extends} had been disbabled by mistake with the rewrite of\n   template inheritance of 24.08.2013   (forum topic 24585)\n\n03.10.2013\n - bugfix loops using modifier capitalize did eat up memory (issue 159)\n\n - Smarty 3.1.15 -\n01.10.2013\n - use current delimiters in compiler error messages (issue 157)\n - improvement on performance when using error handler and multiple template folders (issue 152)\n\n17.09.2013\n - improvement added patch for additional SmartyCompilerException properties for better access to source information (forum topic 24559)\n\n16.09.2013\n - bugfix recompiled templates did not show on first request with zend opcache cache (forum topic 24320)\n\n13.09.2013\n - bugfix html_select_time defaulting error for the Meridian dropdown (forum topic 24549)\n\n09.09.2012\n- bugfix incorrect compiled code with array(object,method) callback at registered Variable Filter (forum topic 24542)\n\n27.08.2013\n- bugfix delimiter followed by linebreak did not work as auto literal after update from 24.08.2013 (forum topic 24518)\n\n24.08.2013\n- bugfix and enhancement\n  Because several recent problems with template inheritance the {block} tag compiler has been rewriten\n   - Error messages shown now the correct child template file and line number\n   - The compiler could fail on some larger UTF-8 text block (forum topic 24455)\n   - The {strip} tag can now be placed outside {block} tags in child templates (forum topic 24289)\n- change SmartyException::$escape  is now false by default\n- change PHP traceback has been remove for SmartyException and SmartyCompilerException\n\n14.08.2013\n- bugfix compiled filepath of config file did not observe different config_dir (forum topic 24493)\n\n13.08.2013\n- bugfix the internal resource cache did not observe config_dir changes (forum topic 24493)\n\n12.08.2013\n- bugfix internal $tmpx variables must be unique over all inheritance templates (Issue 149)\n\n10.08.2013\n- bugfix a newline was eaten when a <?xml ... ?> was passed by a Smarty variable and caching was enabled (forum topic 24482)\n\n29.07.2013\n- bugfix headers already send warning thrown when using 'SMARTY_DEBUG=on' from URL (Issue 148)\n\n27.07.2013\n- enhancement allow access to properties of registered opjects for Smarty2 BC (forum topic 24344)\n\n26.07.2013\n- bugfix template inheritance nesting problem (forum topic 24387)\n\n15.7.2013\n- update code generated by PSR-2 standards fixer which introduced PHP 5.4 incompatibilities of 14.7.2013\n\n14.7.2013\n- bugfix increase of internal maximum parser stacksize to allow more complex tag code {forum topic 24426}\n- update for PHP 5.4 compatibility\n- reformat source to PSR-2 standard\n\n12.7.2013\n- bugfix Do not remove '//' from file path at normalization (Issue 142)\n\n2.7.2013\n- bugfix trimwhitespace would replace captured items in wrong order (forum topic 24387)\n\n## Smarty-3.1.14 -\n27.06.2013\n- bugfix removed PHP 5.5 deprecated preg_replace /e option in modifier capitalize (forum topic 24389)\n\n17.06.2013\n- fixed spelling in sources and documentation (from smarty-developers forum Veres Lajos)\n- enhancement added constant SMARTY::CLEAR_EXPIRED for the change of 26.05.2013 (forum topic 24310)\n- bugfix added smarty_security.php to composer.json (Issue 135)\n\n26.05.2013\n- enhancement an expire_time of -1 in clearCache() and clearAllCache() will delete outdated cache files\n  by their individual cache_lifetime used at creation (forum topic 24310)\n\n21.05.2013\n- bugfix modifier strip_tags:true was compiled into wrong code (Forum Topic 24287)\n- bugfix /n after ?> in Smarty.class.php did start output buffering (Issue 138)\n\n25.04.2013\n- bugfix escape and wordrap modifier could be compiled into wrong code when used in {nocache}{/nocache}\n  section but caching is disabled  (Forum Topic 24260)\n\n05.04.2013\n- bugfix post filter must not run when compiling inheritance child blocks (Forum Topic 24094)\n- bugfix after the fix for Issue #130 compiler exceptions got double escaped (Forum Topic 24199)\n\n28.02.2013\n- bugfix nocache blocks could be lost when using CACHING_LIFETIME_SAVED (Issue #133)\n- bugfix Compile ID gets nulled when compiling child blocks (Issue #134)\n\n\n24.01.2013\n- bugfix wrong tag type in smarty_internal_templatecompilerbase.php could cause wrong plugin search order (Forum Topic 24028)\n\n## Smarty-3.1.13 -\n13.01.2013\n- enhancement allow to disable exception message escaping by SmartyException::$escape = false;  (Issue #130)\n\n09.01.2013\n- bugfix compilation did fail when a prefilter did modify an {extends} tag c\n- bugfix template inheritance could fail if nested {block} tags in childs did contain {$smarty.block.child} (Issue #127)\n- bugfix template inheritance could fail if {block} tags in childs did have similar name as used plugins (Issue #128)\n- added abstract method declaration doCompile() in Smarty_Internal_TemplateCompilerBase (Forum Topic 23969)\n\n06.01.2013\n- Allow '://' URL syntax in template names of stream resources  (Issue #129)\n\n27.11.2012\n- bugfix wrong variable usage in smarty_internal_utility.php (Issue #125)\n\n26.11.2012\n- bugfix global variable assigned within template function are not seen after template function exit (Forum Topic 23800)\n\n24.11.2012\n- made SmartyBC loadable via composer (Issue #124)\n\n20.11.2012\n- bugfix assignGlobal() called from plugins did not work (Forum Topic 23771)\n\n13.11.2012\n- adding attribute \"strict\" to html_options, html_checkboxes, html_radios to only print disabled/readonly attributes if their values are true or \"disabled\"/\"readonly\" (Issue #120)\n\n01.11.2012\n- bugfix muteExcpetedErrors() would screw up for non-readable paths (Issue #118)\n\n## Smarty-3.1.12  -\n14.09.2012\n- bugfix template inheritance failed to compile with delimiters {/ and /} (Forum Topic 23008)\n\n11.09.2012\n- bugfix escape Smarty exception messages to avoid possible script execution\n\n10.09.2012\n- bugfix tag option flags and shorttag attributes did not work when rdel started with '=' (Forum Topic 22979)\n\n31.08.2012\n- bugfix resolving relative paths broke in some circumstances (Issue #114)\n\n22.08.2012\n- bugfix test MBString availability through mb_split, as it could've been compiled without regex support (--enable-mbregex).\n  Either we get MBstring's full package, or we pretend it's not there at all.\n\n21.08.2012\n- bugfix $auto_literal = false did not work with { block} tags in child templates\n  (problem was reintroduced after fix in 3.1.7)(Forum Topic 20581)\n\n17.08.2012\n- bugfix compiled code of nocache sections could contain wrong escaping (Forum Topic 22810)\n\n15.08.2012\n- bugfix template inheritance did produce wrong code if subtemplates with {block} was\n  included several times (from smarty-developers forum)\n\n14.08.2012\n- bugfix PHP5.2 compatibility compromised by SplFileInfo::getBasename() (Issue 110)\n\n01.08.2012\n- bugfix avoid PHP error on $smarty->configLoad(...) with invalid section specification (Forum Topic 22608)\n\n30.07.2012\n-bugfix {assign} in a nocache section should not overwrite existing variable values\n   during compilation (issue 109)\n\n28.07.2012\n- bugfix array access of config variables did not work (Forum Topic 22527)\n\n19.07.2012\n- bugfix the default plugin handler did create wrong compiled code for static class methods\n  from external script files (issue 108)\n\n## Smarty-3.1.11 -\n30.06.2012\n- bugfix {block.. hide} did not work as nested child (Forum Topic 22216)\n\n25.06.2012\n- bugfix the default plugin handler did not allow static class methods for modifier (issue 85)\n\n24.06.2012\n- bugfix escape modifier support for PHP < 5.2.3 (Forum Topic 21176)\n\n11.06.2012\n- bugfix the patch for Topic 21856 did break tabs between tag attributes (Forum Topic 22124)\n\n## Smarty-3.1.10  -\n09.06.2012\n- bugfix the compiler did ignore registered compiler plugins for closing tags (Forum Topic 22094)\n- bugfix the patch for Topic 21856 did break multiline tags (Forum Topic 22124)\n\n## Smarty-3.1.9 -\n07.06.2012\n- bugfix fetch() and display() with relative paths (Issue 104)\n- bugfix treat \"0000-00-00\" as 0 in modifier.date_format (Issue 103)\n\n24.05.2012\n- bugfix Smarty_Internal_Write_File::writeFile() could cause race-conditions on linux systems (Issue 101)\n- bugfix attribute parameter names of plugins may now contain also \"-\"  and \":\"  (Forum Topic 21856)\n- bugfix add compile_id to cache key of of source (Issue 97)\n\n22.05.2012\n- bugfix recursive {include} within {section} did fail (Smarty developer group)\n\n12.05.2012\n- bugfix {html_options} did not properly escape values (Issue 98)\n\n03.05.2012\n- bugfix make HTTP protocall version variable (issue 96)\n\n02.05.2012\n- bugfix  {nocache}{block}{plugin}... did produce wrong compiled code when caching is disabled (Forum Topic 21572, issue 95)\n\n12.04.2012\n- bugfix Smarty did eat the linebreak after the <?xml...?> closing tag (Issue 93)\n- bugfix concurrent cache updates could create a warning (Forum Topic 21403)\n\n08.04.2012\n- bugfix \"\\\\\" was not escaped correctly when generating nocache code (Forum Topic 21364)\n\n30.03.2012\n- bugfix template inheritance did  not throw exception when a parent template was deleted (issue 90)\n\n27.03.2012\n- bugfix prefilter did run multiple times on inline subtemplates compiled into several main templates (Forum Topic 21325)\n- bugfix implement Smarty2's behaviour of variables assigned by reference in SmartyBC. {assign} will affect all references.\n  (issue 88)\n\n21.03.2012\n- bugfix compileAllTemplates() and compileAllConfig() did not return the number of compiled files (Forum Topic 21286)\n\n13.03.2012\n- correction of yesterdays bugfix (Forum Topic 21175 and 21182)\n\n12.03.2012\n- bugfix a double quoted string of \"$foo\" did not compile into PHP \"$foo\" (Forum Topic 21175)\n- bugfix template inheritance did set $merge_compiled_includes globally true\n\n03.03.2012\n- optimization of compiling speed when same modifier was used several times\n\n02.03.2012\n- enhancement the default plugin handler can now also resolve undefined modifier (Smarty::PLUGIN_MODIFIER)\n  (Issue 85)\n\n## Smarty-3.1.8  -\n19.02.2012\n- bugfix {include} could result in a fatal error if used in appended or prepended nested {block} tags\n  (reported by mh and Issue 83)\n- enhancement added Smarty special variable $smarty.template_object to return the current template object (Forum Topic 20289)\n\n\n07.02.2012\n- bugfix increase entropy of internal function names in compiled and cached template files (Forum Topic 20996)\n- enhancement cacheable parameter added to default plugin handler, same functionality as in registerPlugin (request by calguy1000)\n\n06.02.2012\n- improvement stream_resolve_include_path() added to Smarty_Internal_Get_Include_Path (Forum Topic 20980)\n- bugfix fetch('extends:foo.tpl') always yielded $source->exists == true (Forum Topic 20980)\n- added modifier unescape:\"url\", fix (Forum Topic 20980)\n- improvement replaced some calls of preg_replace with str_replace (Issue 73)\n\n30.01.2012\n- bugfix Smarty_Security internal $_resource_dir cache wasn't properly propagated\n\n27.01.2012\n- bugfix Smarty did not a template name of \"0\" (Forum Topic 20895)\n\n20.01.2012\n- bugfix typo in Smarty_Internal_Get_IncludePath did cause runtime overhead (Issue 74)\n- improvment remove unneeded assigments (Issue 75 and 76)\n- fixed typo in template parser\n- bugfix output filter must not run before writing cache when template does contain nocache code (Issue 71)\n\n02.01.2012\n- bugfix {block foo nocache} did not load plugins within child {block} in nocache mode (Forum Topic 20753)\n\n29.12.2011\n- bugfix enable more entropy in Smarty_Internal_Write_File for \"more uniqueness\" and Cygwin compatibility (Forum Topic 20724)\n- bugfix embedded quotes in single quoted strings did not compile correctly in {nocache} sections (Forum Topic 20730)\n\n28.12.2011\n- bugfix Smarty's internal header code must be excluded from postfilters (issue 71)\n\n22.12.2011\n- bugfix the new lexer of 17.12.2011 did fail if mbstring.func_overload != 0 (issue 70) (Forum Topic 20680)\n- bugfix template inheritace did fail if mbstring.func_overload != 0 (issue 70) (Forum Topic 20680)\n\n20.12.2011\n- bugfix template inheritance: {$smarty.block.child} in nested child {block} tags did not return\n  content after {$smarty.block.child} (Forum Topic 20564)\n\n## Smarty-3.1.7 -\n18.12.2011\n- bugfix strings ending with \" in multiline strings of config files failed to compile (issue #67)\n- added chaining to Smarty_Internal_Templatebase\n- changed unloadFilter() to not return a boolean in favor of chaining and API conformity\n- bugfix unregisterObject() raised notice when object to unregister did not exist\n- changed internals to use Smarty::$_MBSTRING ($_CHARSET, $_DATE_FORMAT) for better unit testing\n- added Smarty::$_UTF8_MODIFIER for proper PCRE charset handling (Forum Topic 20452)\n- added Smarty_Security::isTrustedUri() and Smarty_Security::$trusted_uri to validate\n  remote resource calls through {fetch} and {html_image} (Forum Topic 20627)\n\n17.12.2011\n- improvement of compiling speed by new handling of plain text blocks in the lexer/parser (issue #68)\n\n16.12.2011\n- bugfix the source exits flag and timestamp was not setup when template was in php include path (issue #69)\n\n9.12.2011\n- bugfix {capture} tags around recursive {include} calls did throw exception (Forum Topic 20549)\n- bugfix $auto_literal = false did not work with { block} tags in child templates (Forum Topic 20581)\n- bugfix template inheritance: do not include code of {include} in overloaded {block} into compiled\n  parent template (Issue #66}\n- bugfix template inheritance: {$smarty.block.child} in nested child {block} tags did not return expected\n  result (Forum Topic 20564)\n\n## Smarty-3.1.6  -\n30.11.2011\n- bugfix is_cache() for individual cached subtemplates with $smarty->caching = CACHING_OFF did produce\n  an exception (Forum Topic 20531)\n\n29.11.2011\n- bugfix added exception if the default plugin handler did return a not static callback (Forum Topic 20512)\n\n25.11.2011\n- bugfix {html_select_date} and {html_slecet_time} did not default to current time if \"time\" was not specified\n  since r4432 (issue 60)\n\n24.11.2011\n- bugfix a subtemplate later used as main template did use old variable values\n\n21.11.2011\n- bugfix cache file could include unneeded modifier plugins under certain condition\n\n18.11.2011\n- bugfix declare all directory properties private to map direct access to getter/setter also on extended Smarty class\n\n16.11.2011\n- bugfix Smarty_Resource::load() did not always return a proper resource handler (Forum Topic 20414)\n- added escape argument to html_checkboxes and html_radios (Forum Topic 20425)\n\n## Smarty-3.1.5  -\n14.11.2011\n- bugfix allow space between function name and open bracket (forum topic 20375)\n\n09.11.2011\n- bugfix different behaviour of uniqid() on cygwin. See https://bugs.php.net/bug.php?id=34908\n  (forum topic 20343)\n\n01.11.2011\n- bugfix {if} and {while} tags without condition did not throw a SmartyCompilerException (Issue #57)\n- bugfix multiline strings in config files could fail on longer strings (reopened Issue #55)\n\n22.10.2011\n- bugfix smarty_mb_from_unicode() would not decode unicode-points properly\n- bugfix use catch Exception instead UnexpectedValueException in\n  clearCompiledTemplate to be PHP 5.2 compatible\n\n21.10.2011\n- bugfix apostrophe in plugins_dir path name failed (forum topic 20199)\n- improvement sha1() for array keys longer than 150 characters\n- add Smarty::$allow_ambiguous_resources to activate unique resource handling (Forum Topic 20128)\n\n20.10.2011\n- @silenced unlink() in Smarty_Internal_Write_File since debuggers go haywire without it.\n- bugfix Smarty::clearCompiledTemplate() threw an Exception if $cache_id was not present in $compile_dir when $use_sub_dirs = true.\n- bugfix {html_select_date} and {html_select_time} did not properly handle empty time arguments (Forum Topic 20190)\n- improvement removed unnecessary sha1()\n\n19.10.2011\n- revert PHP4 constructor message\n- fixed PHP4 constructor message\n\n## Smarty-3.1.4 -\n19.10.2011\n- added exception when using PHP4 style constructor\n\n16.10.2011\n- bugfix testInstall() did not propery check cache_dir and compile_dir\n\n15.10.2011\n- bugfix Smarty_Resource and Smarty_CacheResource runtime caching (Forum Post 75264)\n\n14.10.2011\n- bugfix unique_resource did not properly apply to compiled resources (Forum Topic 20128)\n- add locking to custom resources (Forum Post 75252)\n- add Smarty_Internal_Template::clearCache() to accompany isCached() fetch() etc.\n\n13.10.2011\n- add caching for config files in Smarty_Resource\n- bugfix disable of caching after isCached() call did not work (Forum Topic 20131)\n- add concept unique_resource to combat potentially ambiguous template_resource values when custom resource handlers are used (Forum Topic 20128)\n- bugfix multiline strings in config files could fail on longer strings (Issue #55)\n\n11.10.2011\n- add runtime checks for not matching {capture}/{/capture} calls (Forum Topic 20120)\n\n10.10.2011\n- bugfix variable name typo in {html_options} and {html_checkboxes} (Issue #54)\n- bugfix <?xml> tag did create wrong output when caching enabled and the tag was in included subtemplate\n- bugfix Smarty_CacheResource_mysql example was missing strtotime() calls\n\n## Smarty-3.1.3  -\n07.10.2011\n- improvement removed html comments from {mailto} (Forum Topic 20092)\n- bugfix testInstall() would not show path to internal plugins_dir (Forum Post 74627)\n- improvement testInstall() now showing resolved paths and checking the include_path if necessary\n- bugfix html_options plugin did not handle object values properly (Issue #49, Forum Topic 20049)\n- improvement html_checkboxes and html_radios to accept null- and object values, and label_ids attribute\n- improvement removed some unnecessary count()s\n- bugfix parent pointer was not set when fetch() for other template was called on template object\n\n06.10.2011\n- bugfix switch lexer internals depending on mbstring.func_overload\n- bugfix start_year and end_year of {html_select_date} did not use current year as offset base (Issue #53)\n\n05.10.2011\n- bugfix of problem introduced with r4342 by replacing strlen() with isset()\n- add environment configuration issue with mbstring.func_overload Smarty cannot compensate for (Issue #45)\n- bugfix nofilter tag option did not disable default modifier\n- bugfix html_options plugin did not handle null- and object values properly (Issue #49, Forum Topic 20049)\n\n04.10.2011\n- bugfix assign() in plugins called in subtemplates did change value also in parent template\n- bugfix of problem introduced with r4342 on math plugin\n- bugfix output filter should not run on individually cached subtemplates\n- add unloadFilter() method\n- bugfix has_nocache_code flag was not reset before compilation\n\n## Smarty-3.1.2  -\n03.10.2011\n- improvement add internal $joined_template_dir property instead computing it on the fly several times\n\n01.10.2011\n- improvement replaced most in_array() calls by more efficient isset() on array_flip()ed haystacks\n- improvement replaced some strlen($foo) > 3 calls by isset($foo[3])\n- improvement Smarty_Internal_Utility::clearCompiledTemplate() removed redundant strlen()s\n\n29.09.2011\n- improvement of Smarty_Internal_Config::loadConfigVars() dropped the in_array for index look up\n\n28.09.2011\n- bugfix on template functions called nocache calling other template functions\n\n27.09.2011\n- bugfix possible warning \"attempt to modify property of non-object\" in {section} (issue #34)\n- added chaining to Smarty_Internal_Data so $smarty->assign('a',1)->assign('b',2); is possible now\n- bugfix remove race condition when a custom resource did change timestamp during compilation\n- bugfix variable property did not work on objects variable in template\n- bugfix smarty_make_timestamp() failed to process DateTime objects properly\n- bugfix wrong resource could be used on compile check of custom resource\n\n26.09.2011\n- bugfix repeated calls to same subtemplate did not make use of cached template object\n\n24.09.2011\n- removed internal muteExpectedErrors() calls in favor of having the implementor call this once from his application\n- optimized muteExpectedErrors() to pass errors to the latest registered error handler, if appliccable\n- added compile_dir and cache_dir to list of muted directories\n- improvment better error message for undefined templates at {include}\n\n23.09.2011\n- remove unused properties\n- optimization use real function instead anonymous function for preg_replace_callback\n- bugfix a relative {include} in child template blocks failed\n- bugfix direct setting of $template_dir, $config_dir, $plugins_dir in __construct() of an\n  extended Smarty class created problems\n- bugfix error muting was not implemented for cache locking\n\n## Smarty 3.1.1  -\n22.09.2011\n- bugfix {foreachelse} does fail if {section} was nested inside {foreach}\n- bugfix debug.tpl did not display correctly when it was compiled with escape_html = true\n\n21.09.2011\n- bugfix look for mixed case plugin file names as in 3.0 if not found try all lowercase\n- added $error_muting to suppress error messages even for badly implemented error_handlers\n- optimized autoloader\n- reverted ./ and ../ handling in fetch() and display() - they're allowed again\n\n20.09.2011\n- bugfix removed debug echo output while compiling template inheritance\n- bugfix relative paths in $template_dir broke relative path resolving in {include \"../foo.tpl\"}\n- bugfix {include} did not work inside nested {block} tags\n- bugfix {assign} with scope root and global did not work in all cases\n\n19.09.2011\n- bugfix regression in Smarty_CacheReource_KeyValueStore introduced by r4261\n- bugfix output filter shall not run on included subtemplates\n\n18.09.2011\n- bugfix template caching did not care about file.tpl in different template_dir\n- bugfix {include $file} was broken when merge_compiled_incluges = true\n- bugfix {include} was broken when merge_compiled_incluges = true and same indluded template\n  was used in different main templates in one compilation run\n- bugfix for Smarty2 style compiler plugins on unnamed attribute passing like {tag $foo $bar}\n- bugfix debug.tpl did not display correctly when it was compiled with escape_html = true\n\n17.09.2011\n- bugfix lock_id for file resource would create invalid filepath\n- bugfix resource caching did not care about file.tpl in different template_dir\n\n## Smarty 3.1.0  -\n15/09/2011\n- optimization of {foreach}; call internal _count() method only when \"total\" or \"last\" {foreach} properties are used\n\n11/09/2011\n- added  unregisterObject() method\n\n06/09/2011\n- bugfix  isset() did not work in templates on config variables\n\n03/09/2011\n- bugfix createTemplate() must default to cache_id and compile_id of Smarty object\n- bugfix Smarty_CacheResource_KeyValueStore must include $source->uid in cache filepath to keep templates with same\n  name but different folders separated\n- added cacheresource.apc.php example in demo folder\n\n02/09/2011\n- bugfix cache lock file must use absolute filepath\n\n01/09/2011\n- update of cache locking\n\n30/08/2011\n- added locking mechanism to CacheResource API (implemented with File and KeyValueStores)\n\n28/08/2011\n- bugfix clearCompileTemplate() did not work for specific template subfolder or resource\n\n27/08/2011\n- bugfix {$foo|bar+1} did create syntax error\n\n26/08/2011\n- bugfix when generating nocache code which contains double \\\n- bugfix handle race condition if cache file was deleted between filemtime and include\n\n17/08/2011\n- bugfix CacheResource_Custom bad internal fetch() call\n\n15/08/2011\n- bugfix CacheResource would load content twice for KeyValueStore and Custom handlers\n\n06/08/2011\n- bugfix {include} with scope attribute could execute in wrong scope\n- optimization of compile_check processing\n\n03/08/2011\n- allow comment tags to comment {block} tags out in child templates\n\n26/07/2011\n- bugfix experimental getTags() method did not work\n\n24/07/2011\n- sure opened output buffers are closed on exception\n- bugfix {foreach} did not work on IteratorAggregate\n\n22/07/2011\n- clear internal caches on clearAllCache(), clearCache(), clearCompiledTemplate()\n\n21/07/2011\n- bugfix value changes of variable values assigned to Smarty object could not be seen on repeated $smarty->fetch() calls\n\n17/07/2011\n- bugfix {$smarty.block.child} did drop a notice at undefined child\n\n15/07/2011\n- bugfix individual cache_lifetime of {include} did not work correctly inside {block} tags\n- added caches for Smarty_Internal_TemplateSource and Smarty_Internal_TemplateCompiled to reduce I/O for multiple cache_id rendering\n\n14/07/2011\n- made Smarty::loadPlugin() respect the include_path if required\n\n13/07/2011\n- optimized internal file write functionality\n- bugfix PHP did eat line break on nocache sections\n- fixed typo of Smarty_Security properties $allowed_modifiers and $disabled_modifiers\n\n06/07/2011\n- bugfix variable modifier must run befor gereral filtering/escaping\n\n04/07/2011\n- bugfix use (?P<name>) syntax at preg_match as some pcre libraries failed on (?<name>)\n- some performance improvement when using generic getter/setter on template objects\n\n30/06/2011\n- bugfix generic getter/setter of Smarty properties used on template objects did throw exception\n- removed is_dir and is_readable checks from directory setters for better performance\n\n28/06/2011\n- added back support of php template resource as undocumented feature\n- bugfix automatic recompilation on version change could drop undefined index notice on old 3.0 cache and compiled files\n- update of README_3_1_DEV.txt and moved into the distribution folder\n- improvement show first characters of eval and string templates instead sha1 Uid in debug window\n\n## Smarty 3.1-RC1 -\n25/06/2011\n- revert change of 17/06/2011. $_smarty varibale removed. call loadPlugin() from inside plugin code if required\n- code cleanup, remove no longer used properties and methods\n- update of PHPdoc comments\n\n23/06/2011\n- bugfix {html_select_date} would not respect current time zone\n\n19/06/2011\n- added $errors argument to testInstall() functions to suppress output.\n- added plugin-file checks to testInstall()\n\n18/06/2011\n- bugfix mixed use of same subtemplate inline and not inline in same script could cause a warning during compilation\n\n17/06/2011\n- bugfix/change use $_smarty->loadPlugin() when loading nested depending plugins via loadPlugin\n- bugfix {include ... inline} within {block}...{/block} did fail\n\n16/06/2011\n- bugfix do not overwrite '$smarty' template variable when {include ... scope=parent} is called\n- bugfix complete empty inline subtemplates did fail\n\n15/06/2011\n- bugfix template variables where not accessable within inline subtemplates\n\n12/06/2011\n- bugfix removed unneeded merging of template variable when fetching includled subtemplates\n\n10/06/2011\n- made protected properties $template_dir, $plugins_dir, $cache_dir, $compile_dir, $config_dir accessible via magic methods\n\n09/06/2011\n- fix smarty security_policy issue in plugins {html_image} and {fetch}\n\n05/06/2011\n- update of SMARTY_VERSION\n- bugfix made getTags() working again\n\n04/06/2011\n- allow extends resource in file attribute of {extends} tag\n\n03/06/2011\n- added {setfilter} tag to set filters for variable output\n- added escape_html property to control autoescaping of variable output\n\n27/05/2011\n- added allowed/disabled tags and modifiers in security for sandboxing\n\n23/05/2011\n- added base64: and urlencode: arguments to eval and string resource types\n\n22/05/2011\n- made time-attribute of {html_select_date} and {html_select_time} accept arrays as defined by attributes prefix and field_array\n\n13/05/2011\n- remove setOption / getOption calls from SamrtyBC class\n\n02/05/2011\n- removed experimental setOption() getOption() methods\n- output returned content also on opening tag calls of block plugins\n- rewrite of default plugin handler\n- compile code of variable filters for better performance\n\n20/04/2011\n- allow {php} {include_php} tags and PHP_ALLOW handling only with the SmartyBC class\n- removed support of php template resource\n\n20/04/2011\n- added extendsall resource example\n- optimization of template variable access\n- optimization of subtemplate handling {include}\n- optimization of template class\n\n01/04/2011\n- bugfix quote handling in capitalize modifier\n\n28/03/2011\n- bugfix stripslashes() requried when using PCRE e-modifier\n\n04/03/2011\n- upgrade to new PHP_LexerGenerator version 0.4.0 for better performance\n\n27/02/2011\n- ignore .svn folders when clearing cache and compiled files\n- string resources do not need a modify check\n\n26/02/2011\n- replaced smarty_internal_wrapper by SmartyBC class\n- load utility functions as static methods instead through __call()\n- bugfix in extends resource when subresources are used\n- optimization of modify checks\n\n25/02/2011\n- use $smarty->error_unassigned to control NOTICE handling on unassigned variables\n\n21/02/2011\n- added new new compile_check mode COMPILECHECK_CACHEMISS\n- corrected new cloning behaviour of createTemplate()\n- do no longer store the compiler object as property in the compile_tag classes to avoid possible memory leaks\n  during compilation\n\n19/02/2011\n- optimizations on merge_compiled_includes handling\n- a couple of optimizations and bugfixes related to new resource structure\n\n17/02/2011\n- changed ./ and ../ behaviour\n\n14/02/2011\n- added {block ... hide} option to suppress block if no child is defined\n\n13/02/2011\n- update handling of recursive subtemplate calls\n- bugfix replace $smarty->triggerError() by exception in smarty_internal_resource_extends.php\n\n12/02/2011\n- new class Smarty_Internal_TemplateBase with shared methods of Smarty and Template objects\n- optimizations of template processing\n- made register... methods permanet\n- code for default_plugin_handler\n- add automatic recompilation at version change\n\n04/02/2011\n- change in Smarty_CacheResource_Custom\n- bugfix cache_lifetime did not compile correctly at {include} after last update\n- moved isCached processing into CacheResource class\n- bugfix new CacheResource API did not work with disabled compile_check\n\n03/02/2011\n- handle template content as function to improve speed on multiple calls of same subtemplate and isCached()/display() calls\n- bugfixes and improvents in the new resource API\n- optimizations of template class code\n\n25/01/2011\n- optimized function html_select_time\n\n22/01/2011\n- added Smarty::$use_include_path configuration directive for Resource API\n\n21/01/2011\n- optimized function html_select_date\n\n19/01/2011\n- optimized outputfilter trimwhitespace\n\n18/01/2011\n- bugfix Config to use Smarty_Resource to fetch sources\n- optimized Smarty_Security's isTrustedDir() and isTrustedPHPDir()\n\n17/01/2011\n- bugfix HTTP headers for CGI SAPIs\n\n16/01/2011\n- optimized internals of Smarty_Resource and Smarty_CacheResource\n\n14/01/2011\n- added modifiercompiler escape to improve performance of escaping html, htmlall, url, urlpathinfo, quotes, javascript\n- added support to choose template_dir to load from: [index]filename.tpl\n\n12/01/2011\n- added unencode modifier to revert results of encode modifier\n- added to_charset and from_charset modifier for character encoding\n\n11/01/2011\n- added SMARTY_MBSTRING to generalize MBString detection\n- added argument $lc_rest to modifier.capitalize to lower-case anything but the first character of a word\n- changed strip modifier to consider unicode white-space, too\n- changed wordwrap modifier to accept UTF-8 strings\n- changed count_sentences modifier to consider unicode characters and treat sequences delimited by ? and ! as sentences, too\n- added argument $double_encode to modifier.escape (applies to html and htmlall only)\n- changed escape modifier to be UTF-8 compliant\n- changed textformat block to be UTF-8 compliant\n- optimized performance of mailto function\n- fixed spacify modifier so characters are not prepended and appended, made it unicode compatible\n- fixed truncate modifier to properly use mb_string if possible\n- removed UTF-8 frenzy from count_characters modifier\n- fixed count_words modifier to treat \"hello-world\" as a single word like str_count_words() does\n- removed UTF-8 frenzy from upper modifier\n- removed UTF-8 frenzy from lower modifier\n\n01/01/2011\n- optimize smarty_modified_escape for hex, hexentity, decentity.\n\n28/12/2010\n- changed $tpl_vars, $config_vars and $parent to belong to Smarty_Internal_Data\n- added Smarty::registerCacheResource() for dynamic cache resource object registration\n\n27/12/2010\n- added Smarty_CacheResource API and refactored existing cache resources accordingly\n- added Smarty_CacheResource_Custom and Smarty_CacheResource_Mysql\n\n26/12/2010\n- added Smarty_Resource API and refactored existing resources accordingly\n- added Smarty_Resource_Custom and Smarty_Resource_Mysql\n- bugfix Smarty::createTemplate() to return properly cloned template instances\n\n24/12/2010\n- optimize smarty_function_escape_special_chars() for PHP >= 5.2.3\n\n## SVN 3.0 trunk  -\n14/05/2011\n- bugfix error handling at stream resources\n\n13/05/2011\n- bugfix condition starting with \"-\" did fail at {if} and {while} tags\n\n22/04/2011\n- bugfix allow only fixed string as file attribute at {extends} tag\n\n01/04/2011\n- bugfix do not run filters and default modifier when displaying the debug template\n- bugfix of embedded double quotes within multi line strings (\"\"\")\n\n29/03/2011\n- bugfix on error message in smarty_internal_compile_block.php\n- bugfix mb handling in strip modifier\n- bugfix for Smarty2 style registered compiler function on unnamed attribute passing like {tag $foo $bar}\n\n17/03/2011\n- bugfix on default {function} parameters when {function} was used in nocache sections\n- bugfix on compiler object destruction. compiler_object property was by mistake unset.\n\n09/03/2011\n-bugfix a variable filter should run before modifiers on an output tag (see change of 23/07/2010)\n\n08/03/2011\n- bugfix loading config file without section should load only defaults\n\n03/03/2011\n- bugfix \"smarty\" template variable was not recreated when cached templated had expired\n- bugfix internal rendered_content must be cleared after subtemplate was included\n\n01/03/2011\n- bugfix replace modifier did not work in 3.0.7 on systems without multibyte support\n- bugfix {$smarty.template} could return in 3.0.7 parent template name instead of\n         child name when it needed to compile\n\n25/02/2011\n- bugfix for Smarty2 style compiler plugins on unnamed attribute passing like {tag $foo $bar}\n\n24/02/2011\n- bugfix $smarty->clearCache('some.tpl') did by mistake cache the template object\n\n18/02/2011\n- bugfix removed possible race condition when isCached() was called for an individually cached subtemplate\n- bugfix force default debug.tpl to be loaded by the file resource\n\n17/02/2011\n-improvement not to delete files starting with '.' from cache and template_c folders on clearCompiledTemplate() and clearCache()\n\n16/02/2011\n-fixed typo in exception message of Smarty_Internal_Template\n-improvement allow leading spaces on } tag closing if auto_literal is enabled\n\n13/02/2011\n- bufix replace $smarty->triggerError() by exception\n- removed obsolete {popup_init..} plugin from demo templates\n- bugfix replace $smarty->triggerError() by exception in smarty_internal_resource_extends.php\n\n## Smarty 3.0.7  -\n09/02/2011\n- patched vulnerability when using {$smarty.template}\n\n01/02/2011\n- removed assert() from config and template parser\n\n31/01/2011\n- bugfix the lexer/parser did fail on special characters like VT\n\n16/01/2011\n-bugfix of ArrayAccess object handling in internal _count() method\n-bugfix of Iterator object handling in internal _count() method\n\n14/01/2011\n-bugfix removed memory leak while processing compileAllTemplates\n\n12/01/2011\n- bugfix in {if} and {while} tag compiler when using assignments as condition and nocache mode\n\n10/01/2011\n- bugfix when using {$smarty.block.child} and name of {block} was in double quoted string\n- bugfix updateParentVariables() was called twice when leaving {include} processing\n\n- bugfix mb_str_replace in replace and escape modifiers work with utf8\n\n31/12/2010\n- bugfix dynamic configuration of $debugging_crtl did not work\n- bugfix default value of $config_read_hidden changed to false\n- bugfix format of attribute array on compiler plugins\n- bugfix getTemplateVars() could return value from wrong scope\n\n28/12/2010\n- bugfix multiple {append} tags failed to compile.\n\n22/12/2010\n- update do not clone the Smarty object an internal createTemplate() calls to increase performance\n\n21/12/2010\n- update html_options to support class and id attrs\n\n17/12/2010\n- bugfix added missing support of $cache_attrs for registered plugins\n\n15/12/2010\n- bugfix assignment as condition in {while} did drop an E_NOTICE\n\n14/12/2010\n- bugfix when passing an array as default parameter at {function} tag\n\n13/12/2010\n- bugfix {$smarty.template} in child template did not return right content\n- bugfix Smarty3 did not search the PHP include_path for template files\n\n## Smarty 3.0.6  -\n\n12/12/2010\n- bugfix fixed typo regarding yesterdays change to allow streamWrapper\n\n11/12/2010\n- bugfix nested block tags in template inheritance child templates did not work correctly\n- bugfix {$smarty.current_dir} in child template did not point to dir of child template\n- bugfix changed code when writing temporary compiled files to allow stream_wrapper\n\n06/12/2010\n- bugfix getTemplateVars() should return 'null' instead dropping E_NOTICE on an unassigned variable\n\n05/12/2010\n- bugfix missing declaration of $smarty in Smarty class\n- bugfix empty($foo) in {if} did drop a notice when $foo was not assigned\n\n01/12/2010\n- improvement of {debug} tag output\n\n27/11/2010\n-change run output filter before cache file is written. (same as in Smarty2)\n\n24/11/2011\n-bugfix on parser at  !$foo|modifier\n-change parser logic when assignments used as condition in {if] and {while} to allow assign to array element\n\n23/11/2011\n-bugfix allow integer as attribute name in plugin calls\n-change  trimm whitespace from error message, removed long list of expected tokens\n\n22/11/2010\n- bugfix on template inheritance when an {extends} tag was inserted by a prefilter\n- added error message for illegal variable file attributes at {extends...} tags\n\n## Smarty 3.0.5  -\n\n\n19/11/2010\n- bugfix on block plugins with modifiers\n\n18/11/2010\n- change on handling of unassigned template variable -- default will drop E_NOTICE\n- bugfix on Smarty2 wrapper load_filter() did not work\n\n17/11/2010\n- bugfix on {call} with variable function name\n- bugfix on {block} if name did contain '-'\n- bugfix in function.fetch.php , referece to undefined $smarty\n\n16/11/2010\n- bugfix whitespace in front of \"<?php\" in smarty_internal_compile_private_block_plugin.php\n- bugfix {$smarty.now} did compile incorrectly\n- bugfix on reset(),end(),next(),prev(),current() within templates\n- bugfix on default parameter for {function}\n\n15/11/2010\n- bugfix when using {$smarty.session} as object\n- bugfix scoping problem on $smarty object passed to filters\n- bugfix captured content could not be accessed globally\n- bugfix Smarty2 wrapper functions could not be call from within plugins\n\n## Smarty 3.0.4  -\n\n14/11/2010\n- bugfix isset() did not allow multiple parameter\n- improvment of some error messages\n- bugfix html_image did use removed property $request_use_auto_globals\n- small performace patch in Smarty class\n\n13/11/2010\n- bugfix  overloading problem when $smarty->fetch()/display() have been used in plugins\n\t\t\t\t(introduced with 3.0.2)\n- code cleanup\n\t\t\t\t\t\t\t\t\n## Smarty 3.0.3  -\n\n13/11/2010\n- bugfix on {debug}\n- reverted location of loadPlugin() to Smarty class\n- fixed comments in plugins\n- fixed internal_config (removed unwanted code line)\n- improvement  remove last linebreak from {function} definition\n\n## Smarty 3.0.2  -\n\n12/11/2010\n- reactivated $error_reporting property handling\n- fixed typo in compile_continue\n- fixed security in {fetch} plugin\n- changed back plugin parameters to two. second is template object\n  with transparent access to Smarty object\n- fixed {config_load} scoping form compile time to run time\n\n## Smarty 3.0.0  -\n\n\n\n11/11/2010\n- major update including some API changes\n\n10/11/2010\n- observe compile_id also for config files\n\n09/11/2010\n-bugfix on  complex expressions as start value for {for} tag\nrequest_use_auto_globals\n04/11/2010\n- bugfix do not allow access of dynamic and private object members of assigned objects when\n  security is enabled.\n\n01/11/2010\n- bugfix related to E_NOTICE change.  {if empty($foo)} did fail when $foo contained a string\n\n28/10/2010\n- bugfix on compiling modifiers within $smarty special vars like {$smarty.post.{$foo|lower}}\n\n27/10/2010\n- bugfix default parameter values did not work for template functions included with {include}\n\n25/10/2010\n- bugfix for E_NOTICE change, array elements did not work as modifier parameter\n\n20/10/2010\n- bugfix for the E_NOTICE change\n\n19/10/2010\n- change Smarty does no longer mask out E_NOTICE by default during template processing\n\n13/10/2010\n- bugfix removed ambiguity between ternary and stream variable in template syntax\n- bugfix use caching properties of template instead of smarty object when compiling child {block}\n- bugfix {*block}...{/block*} did throw an exception in template inheritance\n- bugfix on template inheritance using nested eval or string resource in {extends} tags\n- bugfix on output buffer handling in isCached() method\n\n##  RC4 -\n\n01/10/2010\n- added {break} and {continue} tags for flow control of {foreach},{section},{for} and {while} loops\n- change of 'string' resource. It's no longer evaluated and compiled files are now stored\n- new 'eval' resource which evaluates a template without saving the compiled file\n- change in isCached() method to allow multiple calls for the same template\n\n25/09/2010\n- bugfix on some compiling modifiers\n\n24/09/2010\n- bugfix merge_compiled_includes flag was not restored correctly in {block} tag\n\n22/09/2010\n- bugfix on default modifier\n\n18/09/2010\n- bugfix untility compileAllConfig() did not create sha1 code for compiled template file names if template_dir was defined with no trailing DS\n- bugfix on templateExists() for extends resource\n\n17/09/2010\n- bugfix {$smarty.template} and {$smarty.current_dir} did not compile correctly within {block} tags\n- bugfix corrected error message on missing template files in extends resource\n- bugfix untility compileAllTemplates() did not create sha1 code for compiled template file names if template_dir was defined with no trailing DS\n\n16/09/2010\n- bugfix when a doublequoted modifier parameter did contain Smarty tags and ':'\n\n15/09/2010\n- bugfix resolving conflict between '<%'/'%>' as custom Smarty delimiter and ASP tags\n- use ucfirst for resource name on internal resource class names\n\n12/09/2010\n- bugfix for change of 08/09/2010 (final {block} tags in subtemplates did not produce correct results)\n\n10/09/2010\n- bugfix for change of 08/09/2010 (final {block} tags in subtemplates did not produce correct results)\n\n08/09/2010\n- allow multiple template inheritance branches starting in subtemplates\n\n07/09/2010\n- bugfix {counter} and {cycle} plugin assigned result to smarty variable not in local(template) scope\n- bugfix templates containing just {strip} {/strip} tags did produce an error\n\n\n23/08/2010\n- fixed E_STRICT errors for uninitialized variables\n\n22/08/2010\n- added attribute cache_id to {include} tag\n\n13/08/2010\n- remove exception_handler property from Smarty class\n- added Smarty's own exceptions SmartyException and SmartyCompilerException\n\n09/08/2010\n- bugfix on modifier with doublequoted strings as parameter containing embedded tags\n\n06/08/2010\n- bugfix when cascading some modifier like |strip|strip_tags modifier\n\n05/08/2010\n- added plugin type modifiercompiler to produce compiled modifier code\n- changed standard modifier plugins to the compiling versions whenever possible\n- bugfix in nocache sections {include} must not cache the subtemplate\n\n02/08/2010\n- bugfix strip did not work correctly in conjunction with comment lines\n\n31/07/2010\n- bugfix on nocache attribute at {assign} and {append}\n\n30/07/2010\n- bugfix passing scope attributes in doublequoted strings did not work at {include} {assign} and {append}\n\n25/07/2010\n- another bugfix of change from 23/07/2010 when compiling modifier\n\n24/07/2010\n- bugfix of change from 23/07/2010 when compiling modifier\n\n23/07/2010\n- changed execution order. A variable filter does now run before modifiers on output of variables\n- bugfix use always { and } as delimiter for debug.tpl\n\n\n22/07/2010\n- bugfix in templateExists() method\n\n20/07/2010\n- fixed handling of { strip } tag with whitespaces\n\n15/07/2010\n- bufix  {$smarty.template} does include now the relative path, not just filename\n\n##  RC3 -\n\n\n\n\n15/07/2010\n- make the date_format modifier work also on objects of the DateTime class\n- implementation of parsetrees in the parser to close security holes and remove unwanted empty line in HTML output\n\n08/07/2010\n- bugfix on assigning multidimensional arrays within templates\n- corrected bugfix for truncate modifier\n\n07/07/2010\n- bugfix the truncate modifier needs to check if the string is utf-8 encoded or not\n- bugfix support of script files relative to trusted_dir\n\n06/07/2010\n- create exception on recursive {extends} calls\n- fixed reported line number at \"unexpected closing tag \" exception\n- bugfix on escape:'mail' modifier\n- drop exception if 'item' variable is equal 'from' variable in {foreach} tag\n\n01/07/2010\n- removed call_user_func_array calls for optimization of compiled code when using registered modifiers and plugins\n\n25/06/2010\n- bugfix escaping \" when block tags are used within doublequoted strings\n\n24/06/2010\n- replace internal get_time() calls with standard PHP5 microtime(true) calls in Smarty_Internal_Utility\n- added $smarty->register->templateClass() and $smarty->unregister->templateClass() methods for supporting static classes with namespace\n\n\n22/06/2010\n- allow spaces between typecast and value in template syntax\n- bugfix get correct count of traversables in {foreach} tag\n\n21/06/2010\n- removed use of PHP shortags SMARTY_PHP_PASSTHRU mode\n- improved speed of cache->clear() when a compile_id was specified and use_sub_dirs is true\n\n20/06/2010\n- replace internal get_time() calls with standard PHP5 microtime(true) calls\n- closed security hole when php.ini asp_tags = on\n\n18/06/2010\n- added __toString method to the Smarty_Variable class\n\n\n14/06/2010\n- make handling of Smarty comments followed by newline BC to Smarty2\n\n\n##  RC2 -\n\n\n\n13/06/2010\n- bugfix Smarty3 did not handle hexadecimals like 0x0F as numerical value\n- bugifx Smarty3 did not accept numerical constants like .1 or 2. (without a leading or trailing digit)\n\n11/06/2010\n- bugfix the lexer did fail on larger {literal} ... {/literal} sections\n\n03/06/2010\n- bugfix on calling template functions like Smarty tags\n\n01/06/2010\n- bugfix on template functions used with template inheritance\n- removed /* vim: set expandtab: */ comments\n- bugfix of auto literal problem introduce with fix of 31/05/2010\n\n31/05/2010\n- bugfix the parser did not allow some smarty variables with special name like $for, $if, $else and others.\n\n27/05/2010\n- bugfix on object chaining using variable properties\n- make scope of {counter} and {cycle} tags again global as in Smarty2\n\n26/05/2010\n- bugfix removed decrepated register_resource call in smarty_internal_template.php\n\n25/05/2010\n- rewrite of template function handling to improve speed\n- bugfix on file dependency when merge_compiled_includes = true\n\n\n16/05/2010\n- bugfix when passing parameter with numeric name like {foo 1='bar' 2='blar'}\n\n14/05/2010\n- bugfix compile new config files if compile_check and force_compile = false\n- added variable static classes names to template syntax\n\n11/05/2010\n- bugfix  make sure that the cache resource is loaded in all conditions when template methods getCached... are called externally\n- reverted the change 0f 30/04/2010. With the exception of forward references template functions can be again called by a standard tag.\n\n10/05/2010\n- bugfix on {foreach} and {for} optimizations of 27/04/2010\n\n09/05/2010\n- update of template and config file parser because of minor parser generator bugs\n\n07/05/2010\n- bugfix on {insert}\n\n06/05/2010\n- bugfix when merging compiled templates and objects are passed as parameter of the {include} tag\n\n05/05/2010\n- bugfix on {insert} to cache parameter\n- implementation of $smarty->default_modifiers as in Smarty2\n- bugfix on getTemplateVars method\n\n01/05/2010\n- bugfix on handling of variable method names at object chaning\n\n30/04/2010\n- bugfix when comparing timestamps in sysplugins/smarty_internal_config.php\n- work around of a substr_compare bug in older PHP5 versions\n- bugfix on template inheritance for tag names starting with \"block\"\n- bugfix on {function} tag with name attribute in doublequoted strings\n- fix to make calling of template functions unambiguously by madatory usage of the {call} tag\n\n##  RC1 -\n\n27/04/2010\n- change default of $debugging_ctrl to 'NONE'\n- optimization of compiled code of {foreach} and {for} loops\n- change of compiler for config variables\n\n27/04/2010\n- bugfix in $smarty->cache->clear() method. (do not cache template object)\n\n\n17/04/2010\n- security fix in {math} plugin\n\n\n12/04/2010\n- bugfix in smarty_internal_templatecompilerbase (overloaded property)\n- removed parser restrictions in using true,false and null as ID\n\n07/04/2010\n- bugfix typo in smarty_internal_templatecompilerbase\n\n31/03/2010\n- compile locking by touching old compiled files to avoid concurrent compilations\n\n29/03/2010\n- bugfix allow array definitions as modifier parameter\n- bugfix observe compile_check property when loading config files\n- added the template object as third filter parameter\n\n25/03/2010\n- change of utility->compileAllTemplates() log messages\n- bugfix on nocache code in {function} tags\n- new method utility->compileAllConfig() to compile all config files\n\n24/03/2010\n- bugfix on register->modifier() error messages\n\n23/03/2010\n- bugfix on template inheritance when calling multiple child/parent relations\n- bugfix on caching mode SMARTY_CACHING_LIFETIME_SAVED and cache_lifetime = 0\n\n22/03/2010\n- bugfix make directory separator operating system independend in compileAllTemplates()\n\n21/03/2010\n- removed unused code in compileAllTemplates()\n\n19/03/2010\n- bugfix for multiple {/block} tags on same line\n\n17/03/2010\n- bugfix make $smarty->cache->clear() function independent from caching status\n\n16/03/2010\n- bugfix on assign attribute at registered template objects\n- make handling of modifiers on expression BC to Smarty2\n\n15/03/2010\n- bugfix on block plugin calls\n\n11/03/2010\n- changed parsing of <?php and ?> back to Smarty2 behaviour\n\n08/03/2010\n- bugfix on uninitialized properties in smarty_internal_template\n- bugfix on $smarty->disableSecurity()\n\n04/03/2010\n- bugfix allow uppercase chars in registered resource names\n- bugfix on accessing chained objects of static classes\n\n01/03/2010\n- bugfix on nocache code in {block} tags if child template was included by {include}\n\n27/02/2010\n- allow block tags inside double quoted string\n\n26/02/2010\n- cache modified check implemented\n- support of access to a class constant from an object (since PHP 5.3)\n\n24/02/2010\n- bugfix on expressions in doublequoted string enclosed in backticks\n- added security property $static_classes for static class security\n\n18/02/2010\n- bugfix on parsing Smarty tags inside <?xml ... ?>\n- bugfix on truncate modifier\n\n17/02/2010\n- removed restriction that modifiers did require surrounding parenthesis in some cases\n- added {$smarty.block.child} special variable for template inheritance\n\n16/02/2010\n- bugfix on <?xml ... ?> tags for all php_handling modes\n- bugfix on parameter of variablefilter.htmlspecialchars.php plugin\n\n14/02/2010\n- added missing _plugins property in smarty.class.php\n- bugfix $smarty.const... inside doublequoted strings and backticks was compiled into wrong PHP code\n\n12/02/2010\n- bugfix on nested {block} tags\n- changed Smarty special variable $smarty.parent to $smarty.block.parent\n- added support of nested {bock} tags\n\n10/02/2010\n- avoid possible notice on $smarty->cache->clear(...), $smarty->clear_cache(....)\n- allow Smarty tags inside <? ... ?> tags in SMARTY_PHP_QUOTE and SMARTY_PHP_PASSTHRU mode\n- bugfix at new \"for\" syntax like {for $x=1 to 10 step 2}\n\n09/02/2010\n- added $smarty->_tag_stack for tracing block tag hierarchy\n\n08/02/2010\n- bugfix  use template fullpath at \u00a7smarty->cache->clear(...), $smarty->clear_cache(....)\n- bugfix of cache filename on extended templates when force_compile=true\n\n07/02/2010\n- bugfix on changes of 05/02/2010\n- preserve line endings type form template source\n- API changes (see README file)\n\n05/02/2010\n- bugfix on modifier and block plugins with same name\n\n02/02/2010\n- retaining newlines at registered functions and function plugins\n\n01/25/2010\n- bugfix cache resource was not loaded when caching was globally off but enabled at a template object\n- added test that $_SERVER['SCRIPT_NAME'] does exist in Smarty.class.php\n\n01/22/2010\n- new method $smarty->createData([$parent]) for creating a data object (required for bugfixes below)\n- bugfix config_load() method now works also on a data object\n- bugfix get_config_vars() method now works also on a data and template objects\n- bugfix clear_config() method now works also on a data and template objects\n\n01/19/2010\n- bugfix on plugins if same plugin was called from a nocache section first and later from a cached section\n\n\n###beta 7###\n\n\n01/17/2010\n- bugfix on $smarty.const... in double quoted strings\n\n01/16/2010\n- internal change of config file lexer/parser on handling of section names\n- bugfix on registered objects (format parameter of register_object was not handled correctly)\n\n01/14/2010\n- bugfix on backslash within single quoted strings\n- bugfix allow absolute filepath for config files\n- bugfix on special Smarty variable $smarty.cookies\n- revert handling of newline on no output tags like {if...}\n- allow special characters in config file section names for Smarty2 BC\n\n01/13/2010\n- bugfix on {if} tags\n\n01/12/2010\n- changed back modifier handling in parser. Some restrictions still apply:\n    if modifiers are used in side {if...} expression or in mathematical expressions\n    parentheses must be used.\n- bugfix the {function..} tag did not accept the name attribute in double quotes\n- closed possible security hole at <?php ... ?> tags\n- bugfix of config file parser on large config files\n\n\n###beta 6####\n\n01/11/2010\n- added \\n to the compiled code of the {if},{else},{elseif},{/if} tags to get output of newlines as expected by the template source\n- added missing support of insert plugins\n- added optional nocache attribute to {block} tags in parent template\n- updated <?php...?> handling supporting now heredocs and newdocs. (thanks to Thue Jnaus Kristensen)\n\n01/09/2010\n- bugfix on nocache {block} tags in parent templates\n\n01/08/2010\n- bugfix on variable filters. filter/nofilter attributes did not work on output statements\n\n01/07/2010\n- bugfix on file dependency at template inheritance\n- bugfix on nocache code at template inheritance\n\n01/06/2010\n- fixed typo in smarty_internal_resource_registered\n- bugfix for custom delimiter at extends resource and {extends} tag\n\n01/05/2010\n- bugfix sha1() calculations at extends resource and some general improvments on sha1() handling\n\n\n01/03/2010\n- internal change on building cache files\n\n01/02/2010\n- update cached_timestamp at the template object after cache file is written to avoid possible side effects\n- use internally always SMARTY_CACHING_LIFETIME_* constants\n\n01/01/2010\n- bugfix for obtaining plugins which must be included (related to change of 12/30/2009)\n- bugfix for {php} tag (trow an exception if allow_php_tag = false)\n\n12/31/2009\n- optimization of generated code for doublequoted strings containing variables\n- rewrite of {function} tag handling\n  - can now be declared in an external subtemplate\n  - can contain nocache sections (nocache_hash handling)\n  - can be called in noccache sections (nocache_hash handling)\n  - new {call..} tag to call template functions with a variable name {call name=$foo}\n- fixed nocache_hash handling in merged compiled templates\n\n12/30/2009\n- bugfix for plugins defined in the script as smarty_function_foo\n\n12/29/2009\n- use sha1() for filepath encoding\n- updates on nocache_hash handling\n- internal change on merging some data\n- fixed cache filename for custom resources\n\n12/28/2009\n- update for security fixes\n- make modifier plugins always trusted\n- fixed bug loading modifiers in child template at template inheritance\n\n12/27/2009\n--- this is a major update with a couple of internal changes ---\n- new config file lexer/parser (thanks to Thue Jnaus Kristensen)\n- template lexer/parser fixes for PHP and {literal} handing (thanks to Thue Jnaus Kristensen)\n- fix on registered plugins with different type but same name\n- rewrite of plugin handling (optimized execution speed)\n- closed a security hole regarding PHP code injection into cache files\n- fixed bug in clear cache handling\n- Renamed a couple of internal classes\n- code cleanup for merging compiled templates\n- couple of runtime optimizations (still not all done)\n- update of getCachedTimestamp()\n- fixed bug on modifier plugins at nocache output\n\n12/19/2009\n- bugfix on comment lines in config files\n\n12/17/2009\n- bugfix of parent/global variable update at included/merged subtemplates\n- encode final template filepath into filename of compiled and cached files\n- fixed {strip} handling in auto literals\n\n12/16/2009\n- update of changelog\n- added {include file='foo.tpl' inline}  inline option to merge compiled code of subtemplate into the calling template\n\n12/14/2009\n- fixed sideefect of last modification (objects in array index did not work anymore)\n\n12/13/2009\n- allow boolean negation (\"!\") as operator on variables outside {if} tag\n\n12/12/2009\n- bugfix on single quotes inside {function} tag\n- fix short append/prepend attributes in {block} tags\n\n12/11/2009\n- bugfix on clear_compiled_tpl (avoid possible warning)\n\n12/10/2009\n- bugfix on {function} tags and template inheritance\n\n12/05/2009\n- fixed problem when a cached file was fetched several times\n- removed unneeded lexer code\n\n12/04/2009\n- added max attribute to for loop\n- added security mode allow_super_globals\n\n12/03/2009\n- template inheritance: child templates can now call functions defined by the {function} tag in the parent template\n- added {for $foo = 1 to 5 step 2}  syntax\n- bugfix for {$foo.$x.$y.$z}\n\n12/01/2009\n- fixed parsing of names of special formated tags like if,elseif,while,for,foreach\n- removed direct access to constants in templates because of some syntax problems\n- removed cache resource plugin for mysql from the distribution\n- replaced most hard errors (exceptions) by softerrors(trigger_error) in plugins\n- use $template_class property for template class name when compiling {include},{eval} and {extends} tags\n\n11/30/2009\n- map 'true' to SMARTY_CACHING_LIFETIME_CURRENT for the $smarty->caching parameter\n- allow {function} tags within {block} tags\n\n11/28/2009\n- ignore compile_id at debug template\n- added direct access to constants in templates\n- some lexer/parser optimizations\n\n11/27/2009\n- added cache resource MYSQL plugin\n\n11/26/2009\n- bugfix on nested doublequoted strings\n- correct line number on unknown tag error message\n- changed {include} compiled code\n- fix on checking dynamic varibales with error_unassigned = true\n\n11/25/2009\n- allow the following writing for boolean: true, TRUE, True, false, FALSE, False\n- {strip} tag functionality rewritten\n\n11/24/2009\n- bugfix for $smarty->config_overwrite = false\n\n11/23/2009\n- suppress warnings on unlink caused by race conditions\n- correct line number on unknown tag error message\n\n------- beta 5\n11/23/2009\n- fixed configfile parser for text starting with a numeric char\n- the default_template_handler_func may now return a filepath to a template source\n\n11/20/2009\n- bugfix for empty config files\n- convert timestamps of registered resources to integer\n\n11/19/2009\n- compiled templates are no longer touched with the filemtime of template source\n\n11/18/2009\n- allow integer as attribute name in plugin calls\n\n------- beta 4\n11/18/2009\n- observe umask settings when setting file permissions\n- avoide unneeded cache file creation for subtemplates which did occur in some situations\n- make $smarty->_current_file available during compilation for Smarty2 BC\n\n11/17/2009\n- sanitize compile_id and cache_id (replace illegal chars with _)\n- use _dir_perms and _file_perms properties at file creation\n- new constant SMARTY_RESOURCE_DATE_FORMAT (default '%b %e, %Y') which is used as default format in modifier date_format\n- added {foreach $array as $key=>$value} syntax\n- renamed extend tag and resource to extends: {extends file='foo.tol'} , $smarty->display('extends:foo.tpl|bar.tpl);\n- bugfix cycle plugin\n\n11/15/2009\n- lexer/parser optimizations on quoted strings\n\n11/14/2009\n- bugfix on merging compiled templates when source files got removed or renamed.\n- bugfix modifiers on registered object tags\n- fixed locaion where outputfilters are running\n- fixed config file definitions at EOF\n- fix on merging compiled templates with nocache sections in nocache includes\n- parser could run into a PHP error on wrong file attribute\n\n11/12/2009\n- fixed variable filenames in {include_php} and {insert}\n- added scope to Smarty variables in the {block} tag compiler\n- fix on nocache code in child {block} tags\n\n11/11/2009\n- fixed {foreachelse}, {forelse}, {sectionelse} compiled code at nocache variables\n- removed checking for reserved variables\n- changed debugging handling\n\n11/10/2009\n- fixed preg_qoute on delimiters\n\n11/09/2009\n- lexer/parser bugfix\n- new SMARTY_SPL_AUTOLOAD constant to control the autoloader option\n- bugfix for {function} block tags in included templates\n\n11/08/2009\n- fixed alphanumeric array index\n- bugfix on complex double quoted strings\n\n11/05/2009\n- config_load method can now be called on data and template objects\n\n11/04/2009\n- added typecasting support for template variables\n- bugfix on complex indexed special Smarty variables\n\n11/03/2009\n- fixed parser error on objects with special smarty vars\n- fixed file dependency for {incude} inside {block} tag\n- fixed not compiling on non existing compiled templates when compile_check = false\n- renamed function names of autoloaded Smarty methods to Smarty_Method_....\n- new security_class property (default is Smarty_Security)\n\n11/02/2009\n- added neq,lte,gte,mod as aliases to if conditions\n- throw exception on illegal Smarty() constructor calls\n\n10/31/2009\n- change of filenames in sysplugins folder for internal spl_autoload function\n- lexer/parser changed for increased compilation speed\n\n10/27/2009\n- fixed missing quotes in include_php.php\n\n10/27/2009\n- fixed typo in method.register_resource\n- pass {} through as literal\n\n10/26/2009\n- merge only compiled subtemplates into the compiled code of the main template\n\n10/24/2009\n- fixed nocache vars at internal block tags\n- fixed merging of recursive includes\n\n10/23/2009\n- fixed nocache var problem\n\n10/22/2009\n- fix trimwhitespace outputfilter parameter\n\n10/21/2009\n- added {$foo++}{$foo--} syntax\n- buxfix changed PHP \"if (..):\" to \"if (..){\" because of possible bad code when concenating PHP tags\n- autoload Smarty internal classes\n- fixed file dependency for config files\n- some code optimizations\n- fixed function definitions on some autoloaded methods\n- fixed nocache variable inside if condition of {if} tag\n\n10/20/2009\n- check at compile time for variable filter to improve rendering speed if no filter is used\n- fixed bug at combination of {elseif} tag and {...} in double quoted strings of static class parameter\n\n10/19/2009\n- fixed compiled template merging on variable double quoted strings as name\n- fixed bug in caching mode 2 and cache_lifetime -1\n- fixed modifier support on block tags\n\n10/17/2009\n- remove ?>\\n<?php and ?><?php sequences from compiled template\n\n10/15/2009\n- buxfix on assigning array elements inside templates\n- parser bugfix on array access\n\n10/15/2009\n- allow bit operator '&' inside {if} tag\n- implementation of ternary operator\n\n10/13/2009\n- do not recompile evaluated templates if reused just with other data\n- recompile config files when config properties did change\n- some lexer/parser otimizations\n\n10/11/2009\n- allow {block} tags inside included templates\n- bugfix for resource plugins in Smarty2 format\n- some optimizations of internal.template.php\n\n10/11/2009\n- fixed bug when template with same name is used with different data objects\n- fixed bug with double quoted name attribute at {insert} tag\n- reenabled assign_by_ref and append_by_ref methods\n\n10/07/2009\n- removed block nesting checks for {capture}\n\n10/05/2009\n- added support of \"isinstance\" to {if} tag\n\n10/03/2009\n- internal changes to improve performance\n- fix registering of filters for classes\n\n10/01/2009\n- removed default timezone setting\n- reactivated PHP resource for simple PHP templates. Must set allow_php_templates = true to enable\n- {PHP} tag can be enabled by allow_php_tag = true\n\n09/30/2009\n- fixed handling template_exits method for all resource types\n- bugfix for other cache resources than file\n- the methods assign_by_ref is now wrapped to assign, append_by_ref to append\n- allow arrays of variables pass in display, fetch and createTemplate calls\n  $data = array('foo'=>'bar','foo2'=>'blar');\n  $smarty->display('my.tpl',$data);\n\n09/29/2009\n- changed {php} tag handling\n- removed support of Smarty::instance()\n- removed support of PHP resource type\n- improved execution speed of {foreach} tags\n- fixed bug in {section} tag\n\n09/23/2009\n- improvements and bugfix on {include} tag handling\nNOTICE: existing compiled template and cache files must be deleted\n\n09/19/2009\n- replace internal \"eval()\" calls by \"include\" during rendering process\n- speed improvment for templates which have included subtemplates\n    the compiled code of included templates is merged into the compiled code of the parent template\n- added logical operator \"xor\" for {if} tag\n- changed parameter ordering for Smarty2 BC\n    fetch($template, $cache_id = null, $compile_id = null, $parent = null)\n    display($template, $cache_id = null, $compile_id = null, $parent = null)\n    createTemplate($template, $cache_id = null, $compile_id = null, $parent = null)\n- property resource_char_set is now replaced by constant SMARTY_RESOURCE_CHAR_SET\n- fixed handling of classes in registered blocks\n- speed improvement of lexer on text sections\n\n09/01/2009\n- dropped nl2br as plugin\n- added '<>' as comparission operator in {if} tags\n- cached caching_lifetime property to cache_liftime for backward compatibility with Smarty2.\n  {include} optional attribute is also now cache_lifetime\n- fixed trigger_error method (moved into Smarty class)\n- version is now  Beta!!!\n\n\n08/30/2009\n- some speed optimizations on loading internal plugins\n\n\n08/29/2009\n- implemented caching of registered Resources\n- new property 'auto_literal'. if true(default)  '{ ' and ' }' interpreted as literal, not as Smarty delimiter\n\n\n08/28/2009\n- Fix on line breaks inside {if} tags\n\n08/26/2009\n- implemented registered resources as in Smarty2. NOTE: caching does not work yet\n- new property 'force_cache'. if true it forces the creation of a new cache file\n- fixed modifiers on arrays\n- some speed optimization on loading internal classes\n\n\n08/24/2009\n- fixed typo in lexer definition for '!==' operator\n- bugfix - the ouput of plugins was not cached\n- added global variable SCRIPT_NAME\n\n08/21/2009\n- fixed problems whitespace in conjuction with custom delimiters\n- Smarty tags can now be used as value anywhere\n\n08/18/2009\n- definition of template class name moded in internal.templatebase.php\n- whitespace parser changes\n\n08/12/2009\n- fixed parser problems\n\n08/11/2009\n- fixed parser problems with custom delimiter\n\n08/10/2009\n- update of mb support in plugins\n\n\n08/09/2009\n- fixed problems with doublequoted strings at name attribute of {block} tag\n- bugfix at scope attribute of {append} tag\n\n08/08/2009\n- removed all internal calls of Smarty::instance()\n- fixed code in double quoted strings\n\n08/05/2009\n- bugfix mb_string support\n- bugfix of \\n.\\t etc in double quoted strings\n\n07/29/2009\n- added syntax for variable config vars  like  #$foo#\n\n07/28/2009\n- fixed parsing of $smarty.session vars containing objects\n\n07/22/2009\n- fix of \"$\" handling in double quoted strings\n\n07/21/2009\n- fix that {$smarty.current_dir} return correct value within {block} tags.\n\n07/20/2009\n- drop error message on unmatched {block} {/block} pairs\n\n07/01/2009\n- fixed smarty_function_html_options call in plugin function.html_select_date.php (missing ,)\n\n06/24/2009\n- fixed smarty_function_html_options call in plugin function.html_select_date.php\n\n06/22/2009\n- fix on \\n and spaces inside smarty tags\n- removed request_use_auto_globals propert as it is no longer needed because Smarty 3 will always run under PHP 5\n\n\n06/18/2009\n- fixed compilation of block plugins when caching enabled\n- added $smarty.current_dir  which returns the current working directory\n\n06/14/2009\n- fixed array access on super globals\n- allow smarty tags within xml tags\n\n06/13/2009\n- bugfix at extend resource: create unique files for compiled template and cache for each combination of template files\n- update extend resource to handle appen and prepend block attributes\n- instantiate classes of plugins instead of calling them static\n\n06/03/2009\n- fixed repeat at block plugins\n\n05/25/2009\n- fixed problem with caching of compiler plugins\n\n05/14/2009\n- fixed directory separator handling\n\n05/09/2009\n- syntax change for stream variables\n- fixed bug when using absolute template filepath and caching\n\n05/08/2009\n- fixed bug of {nocache}  tag in included templates\n\n05/06/2009\n- allow that plugins_dir folder names can end without directory separator\n\n05/05/2009\n- fixed E_STRICT incompabilities\n- {function} tag bug fix\n- security policy definitions have been moved from plugins folder to file Security.class.php in libs folder\n- added allow_super_global configuration to security\n\n04/30/2009\n- functions defined with the {function} tag now always have global scope\n\n04/29/2009\n- fixed problem with directory setter methods\n- allow that cache_dir can end without directory separator\n\n04/28/2009\n- the {function} tag can no longer overwrite standard smarty tags\n- inherit functions defined by the {fuction} tag into subtemplates\n- added {while <statement>} sytax to while tag\n\n04/26/2009\n- added trusted stream checking to security\n- internal changes at file dependency check for caching\n\n04/24/2009\n- changed name of {template} tag to {function}\n- added new {template} tag\n\n04/23/2009\n- fixed access of special smarty variables from included template\n\n04/22/2009\n- unified template stream syntax with standard Smarty resource syntax  $smarty->display('mystream:mytemplate')\n\n04/21/2009\n- change of new style syntax for forach. Now:  {foreach $array as $var}  like in PHP\n\n04/20/2009\n- fixed \"$foo.bar  ...\" variable replacement in double quoted strings\n- fixed error in {include} tag with variable file attribute\n\n04/18/2009\n- added stream resources  ($smarty->display('mystream://mytemplate'))\n- added stream variables  {$mystream:myvar}\n\n04/14/2009\n- fixed compile_id handling on {include} tags\n- fixed append/prepend attributes in {block} tag\n- added  {if  'expression' is in 'array'}  syntax\n- use crc32 as hash for compiled config files.\n\n04/13/2009\n- fixed scope problem with parent variables when appending variables within templates.\n- fixed code for {block} without childs (possible sources for notice errors removed)\n\n04/12/2009\n- added append and prepend attribute to {block} tag\n\n04/11/2009\n- fixed variables in 'file' attribute of {extend} tag\n- fixed problems in modifiers (if mb string functions not present)\n\n04/10/2009\n- check if mb string functions available otherwise fallback to normal string functions\n- added global variable scope SMARTY_GLOBAL_SCOPE\n- enable 'variable' filter by default\n- fixed {$smarty.block.parent.foo}\n- implementation of a 'variable' filter as replacement for default modifier\n\n04/09/2009\n- fixed execution of filters defined by classes\n- compile the always the content of {block} tags to make shure that the filters are running over it\n- syntax corrections on variable object property\n- syntax corrections on array access in dot syntax\n\n04/08/2009\n- allow variable object property\n\n04/07/2009\n- changed variable scopes to SMARTY_LOCAL_SCOPE, SMARTY_PARENT_SCOPE, SMARTY_ROOT_SCOPE to avoid possible conflicts with user constants\n- Smarty variable global attribute replaced with scope attribute\n\n04/06/2009\n- variable scopes LOCAL_SCOPE, PARENT_SCOPE, ROOT_SCOPE\n- more getter/setter methods\n\n04/05/2009\n- replaced new array looping syntax {for $foo in $array} with {foreach $foo in $array} to avoid confusion\n- added append array for short form of assign  {$foo[]='bar'} and allow assignments to nested arrays {$foo['bla']['blue']='bar'}\n\n04/04/2009\n- make output of template default handlers cachable and save compiled source\n- some fixes on yesterdays update\n\n04/03/2006\n- added registerDefaultTemplateHandler method and functionallity\n- added registerDefaultPluginHandler method and functionallity\n- added {append} tag to extend Smarty array variabled\n\n04/02/2009\n- added setter/getter methods\n- added $foo@first and $foo@last properties at {for} tag\n- added $set_timezone (true/false) property to setup optionally the default time zone\n\n03/31/2009\n- bugfix smarty.class and internal.security_handler\n- added compile_check configuration\n- added setter/getter methods\n\n03/30/2009\n- added all major setter/getter methods\n\n03/28/2009\n- {block} tags can be nested now\n- md5 hash function replace with crc32 for speed optimization\n- file order for exted resource inverted\n- clear_compiled_tpl and clear_cache_all will not touch .svn folder any longer\n\n03/27/2009\n- added extend resource\n\n03/26/2009\n- fixed parser not to create error on `word` in double quoted strings\n- allow PHP  array(...)\n- implemented  $smarty.block.name.parent to access parent block content\n- fixed smarty.class\n\n\n03/23/2009\n- fixed {foreachelse} and {forelse} tags\n\n03/22/2009\n- fixed possible sources for notice errors\n- rearrange SVN into distribution and development folders\n\n03/21/2009\n- fixed exceptions in function plugins\n- fixed notice error in Smarty.class.php\n- allow chained objects to span multiple lines\n- fixed error in modifiers\n\n03/20/2009\n- moved /plugins folder into /libs folder\n- added noprint modifier\n- autoappend a directory separator if the xxxxx_dir definition have no trailing one\n\n03/19/2009\n- allow array definition as modifier parameter\n- changed modifier to use multi byte string funktions.\n\n03/17/2009\n- bugfix\n\n03/15/2009\n- added {include_php} tag for BC\n- removed @ error suppression\n- bugfix fetch did always repeat output of first call when calling same template several times\n- PHPunit tests extended\n\n03/13/2009\n- changed block syntax to be Smarty like  {block:titel} -> {block name=titel}\n- compiling of {block} and {extend} tags rewriten for better performance\n- added special Smarty variable block  ($smarty.block.foo} returns the parent definition of block foo\n- optimization of {block} tag compiled code.\n- fixed problem with escaped double quotes in double quoted strings\n\n03/12/2009\n- added support of template inheritance by {extend } and {block } tags.\n- bugfix comments within literals\n- added scope attribuie to {include} tag\n\n03/10/2009\n- couple of bugfixes and improvements\n- PHPunit tests extended\n\n03/09/2009\n- added support for global template vars.  {assign_global...}  $smarty->assign_global(...)\n- added direct_access_security\n- PHPunit tests extended\n- added missing {if} tag conditions like \"is div by\" etc.\n\n03/08/2009\n- splitted up the Compiler class to make it easier to use a coustom compiler\n- made default plugins_dir relative to Smarty root and not current working directory\n- some changes to make the lexer parser better configurable\n- implemented {section} tag for Smarty2 BC\n\n03/07/2009\n- fixed problem with comment tags\n- fixed problem with #xxxx in double quoted string\n- new {while} tag implemented\n- made lexer and paser class configurable as $smarty property\n- Smarty method get_template_vars implemented\n- Smarty method get_registered_object implemented\n- Smarty method trigger_error implemented\n- PHPunit tests extended\n\n03/06/2009\n- final changes on config variable handling\n- parser change - unquoted strings will by be converted into single quoted strings\n- PHPunit tests extended\n- some code cleanup\n- fixed problem on catenate strings with expression\n- update of count_words modifier\n- bugfix on comment tags\n\n\n03/05/2009\n- bugfix on <?xml...> tag with caching enabled\n- changes on exception handling (by Monte)\n\n03/04/2009\n- added support for config variables\n- bugfix on <?xml...> tag\n\n03/02/2009\n- fixed unqouted strings within modifier parameter\n- bugfix parsing of mofifier parameter\n\n03/01/2009\n- modifier chaining works now as in Smarty2\n\n02/28/2009\n- changed handling of unqouted strings\n\n02/26/2009\n- bugfix\n- changed $smarty.capture.foo to be global for Smarty2 BC.\n\n02/24/2009\n- bugfix {php} {/php} tags for backward compatibility\n- bugfix for expressions on arrays\n- fixed usage of \"null\" value\n- added $smarty.foreach.foo.first and $smarty.foreach.foo.last\n\n02/06/2009\n- bugfix for request variables without index  for example $smarty.get\n- experimental solution for variable functions in static class\n\n02/05/2009\n- update of popup plugin\n- added config variables to template parser (load config functions still missing)\n- parser bugfix for empty quoted strings\n\n02/03/2009\n- allow array of objects as static class variabales.\n- use htmlentities at source output at template errors.\n\n02/02/2009\n- changed search order on modifiers to look at plugins folder first\n- parser bug fix for modifier on array elements  $foo.bar|modifier\n- parser bug fix on single quoted srings\n- internal: splitted up compiler plugin files\n\n02/01/2009\n- allow method chaining on static classes\n- special Smarty variables  $smarty.... implemented\n- added {PHP} {/PHP} tags for backward compatibility\n\n01/31/2009\n- added {math} plugin for Smarty2 BC\n- added template_exists method\n- changed Smarty3 method enable_security() to enableSecurity() to follow camelCase standards\n\n01/30/2009\n- bugfix in single quoted strings\n- changed syntax for variable property access from $foo:property to $foo@property because of ambiguous syntax at modifiers\n\n01/29/2009\n- syntax for array definition changed from (1,2,3) to [1,2,3] to remove ambiguous syntax\n- allow  {for $foo in [1,2,3]} syntax\n- bugfix in double quoted strings\n- allow <?xml...?> tags in template even if short_tags are enabled\n\n01/28/2009\n- fixed '!==' if condition.\n\n01/28/2009\n- added support of {strip} {/strip} tag.\n\n01/27/2009\n- bug fix on backticks in double quoted strings at objects\n\n01/25/2009\n- Smarty2 modfiers added to SVN\n\n01/25/2009\n- bugfix allow arrays at object properties in Smarty syntax\n- the template object is now passed as additional parameter at plugin calls\n- clear_compiled_tpl method completed\n\n01/20/2009\n- access to class constants implemented  ( class::CONSTANT )\n- access to static class variables implemented ( class::$variable )\n- call of static class methods implemented ( class::method() )\n\n01/16/2009\n- reallow leading _ in variable names  {$_var}\n- allow array of objects  {$array.index->method()} syntax\n- finished work on clear_cache and clear_cache_all methods\n\n01/11/2009\n- added support of {literal} tag\n- added support of {ldelim} and {rdelim} tags\n- make code compatible to run with E_STRICT error setting\n\n01/08/2009\n- moved clear_assign and clear_all_assign to internal.templatebase.php\n- added assign_by_ref, append and append_by_ref methods\n\n01/02/2009\n- added load_filter method\n- fished work on filter handling\n- optimization of plugin loading\n\n12/30/2008\n- added compiler support of registered object\n- added backtick support in doubled quoted strings for backward compatibility\n- some minor bug fixes and improvments\n\n12/23/2008\n- fixed problem of not working \"not\" operator in if-expressions\n- added handling of compiler function plugins\n- finished work on (un)register_compiler_function method\n- finished work on (un)register_modifier method\n- plugin handling from plugins folder changed for modifier plugins\n  deleted - internal.modifier.php\n- added modifier chaining to parser\n\n12/17/2008\n- finished (un)register_function method\n- finished (un)register_block method\n- added security checking for PHP functions in PHP templates\n- plugin handling from plugins folder rewritten\n  new - internal.plugin_handler.php\n  deleted - internal.block.php\n  deleted - internal.function.php\n- removed plugin checking from security handler\n\n12/16/2008\n\n- new start of this change_log file\n", "/*\n * This file is part of Smarty.\n *\n * (c) 2015 Uwe Tews\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n%stack_size 500\n%name TP_\n%declare_class {\n/**\n* Smarty Template Parser Class\n*\n* This is the template parser.\n* It is generated from the smarty_internal_templateparser.y file\n* \n* @author Uwe Tews <uwe.tews@googlemail.com>\n*/\nclass Smarty_Internal_Templateparser\n}\n%include_class\n{\n    const ERR1 = 'Security error: Call to private object member not allowed';\n    const ERR2 = 'Security error: Call to dynamic object member not allowed';\n\n    /**\n     * result status\n     *\n     * @var bool\n     */\n    public $successful = true;\n\n    /**\n     * return value\n     *\n     * @var mixed\n     */\n    public $retvalue = 0;\n\n    /**\n     * @var\n     */\n    public $yymajor;\n\n    /**\n     * last index of array variable\n     *\n     * @var mixed\n     */\n    public $last_index;\n\n    /**\n     * last variable name\n     *\n     * @var string\n     */\n    public $last_variable;\n\n    /**\n     * root parse tree buffer\n     *\n     * @var Smarty_Internal_ParseTree_Template\n     */\n    public $root_buffer;\n\n    /**\n     * current parse tree object\n     *\n     * @var Smarty_Internal_ParseTree\n     */\n    public $current_buffer;\n\n    /**\n     * lexer object\n     *\n     * @var Smarty_Internal_Templatelexer\n     */\n    public $lex;\n\n    /**\n     * internal error flag\n     *\n     * @var bool\n     */\n    private $internalError = false;\n\n    /**\n     * {strip} status\n     *\n     * @var bool\n     */\n    public $strip = false;\n    /**\n     * compiler object\n     *\n     * @var Smarty_Internal_TemplateCompilerBase\n     */\n    public $compiler = null;\n\n    /**\n     * smarty object\n     *\n     * @var Smarty\n     */\n    public $smarty = null;\n\n    /**\n     * template object\n     *\n     * @var Smarty_Internal_Template\n     */\n    public $template = null;\n\n    /**\n     * block nesting level\n     *\n     * @var int\n     */\n    public $block_nesting_level = 0;\n\n    /**\n     * security object\n     *\n     * @var Smarty_Security\n     */\n    public $security = null;\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_prefix = array();\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_postfix = array();\n\n    /**\n     * constructor\n     *\n     * @param Smarty_Internal_Templatelexer        $lex\n     * @param Smarty_Internal_TemplateCompilerBase $compiler\n     */\n    public function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)\n    {\n        $this->lex = $lex;\n        $this->compiler = $compiler;\n        $this->template = $this->compiler->template;\n        $this->smarty = $this->template->smarty;\n        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;\n        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();\n    }\n\n     /**\n     * insert PHP code in current buffer\n     *\n     * @param string $code\n     */\n    public function insertPhpCode($code)\n    {\n        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));\n    }\n\n    /**\n     * error rundown\n     *\n     */\n    public function errorRunDown()\n    {\n        while ($this->yystack !== array()) {\n            $this->yy_pop_parser_stack();\n        }\n        if (is_resource($this->yyTraceFILE)) {\n            fclose($this->yyTraceFILE);\n        }\n    }\n\n    /**\n     *  merge PHP code with prefix code and return parse tree tag object\n     *\n     * @param string $code\n     *\n     * @return Smarty_Internal_ParseTree_Tag\n     */\n    public function mergePrefixCode($code)\n    {\n        $tmp = '';\n        foreach ($this->compiler->prefix_code as $preCode) {\n            $tmp .= $preCode;\n        }\n        $this->compiler->prefix_code = array();\n        $tmp .= $code;\n        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));\n    }\n\n}\n\n%token_prefix TP_\n\n%parse_accept\n{\n    $this->successful = !$this->internalError;\n    $this->internalError = false;\n    $this->retvalue = $this->_retvalue;\n}\n\n%syntax_error\n{\n    $this->internalError = true;\n    $this->yymajor = $yymajor;\n    $this->compiler->trigger_template_error();\n}\n\n%stack_overflow\n{\n    $this->internalError = true;\n    $this->compiler->trigger_template_error('Stack overflow in template parser');\n}\n\n\n%right VERT.\n%left COLON.\n\n\n    //\n    // complete template\n    //\nstart(res)       ::= template. {\n    $this->root_buffer->prepend_array($this, $this->template_prefix);\n    $this->root_buffer->append_array($this, $this->template_postfix);\n    res = $this->root_buffer->to_smarty_php($this);\n}\n\n                      // template text\ntemplate       ::= template  TEXT(B). {\n         $text = $this->yystack[ $this->yyidx + 0 ]->minor;\n\n         if ((string)$text == '') {\n            $this->current_buffer->append_subtree($this, null);\n         }\n\n         $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($text, $this->strip));\n}\n                      // strip on\ntemplate       ::= template  STRIPON. {\n    $this->strip = true;\n}\n                      // strip off\ntemplate       ::= template STRIPOFF. {\n    $this->strip = false;\n}\n\n                     // Literal\ntemplate       ::= template LITERALSTART literal_e2(B) LITERALEND. {\n       $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text(B));\n}\n\n\nliteral_e2(A) ::= literal_e1(B) LITERALSTART literal_e1(C) LITERALEND. {\n    A = B.C;\n}\nliteral_e2(A) ::= literal_e1(B). {\n    A = B;\n}\n\nliteral_e1(A) ::= literal_e1(B) LITERAL(C). {\n        A = B.C;\n\n}\n\nliteral_e1(A) ::= . {\n    A = '';\n}\n                      // Smarty tag\ntemplate       ::= template smartytag(B). {\n      if ($this->compiler->has_code) {\n          $this->current_buffer->append_subtree($this, $this->mergePrefixCode(B));\n      }\n     $this->compiler->has_variable_string = false;\n     $this->block_nesting_level = count($this->compiler->_tag_stack);\n}\n\n\n                      // empty template\ntemplate       ::= .\n\nsmartytag(A)   ::= SIMPELOUTPUT(B). {\n    $var = trim(substr(B, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    if (preg_match('/^(.*)(\\s+nocache)$/', $var, $match)) {\n        A = $this->compiler->compileTag('private_print_expression',array('nocache'),array('value'=>$this->compiler->compileVariable('\\''.$match[1].'\\'')));\n    } else {\n        A = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->compiler->compileVariable('\\''.$var.'\\'')));\n    }\n}\n\n// simple tag like {name}\nsmartytag(A)::= SIMPLETAG(B). {\n    $tag = trim(substr(B, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()));\n    if ($tag == 'strip') {\n        $this->strip = true;\n        A = null;\n    } else {\n        if (defined($tag)) {\n            if ($this->security) {\n               $this->security->isTrustedConstant($tag, $this->compiler);\n            }\n            A = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$tag));\n        } else {\n            if (preg_match('/^(.*)(\\s+nocache)$/', $tag, $match)) {\n                A = $this->compiler->compileTag($match[1],array('\\'nocache\\''));\n            } else {\n                A = $this->compiler->compileTag($tag,array());\n            }\n        }\n    }\n}\n                  // {$smarty.block.child} or {$smarty.block.parent}\nsmartytag(A)   ::= SMARTYBLOCKCHILDPARENT(i). {\n    $j = strrpos(i,'.');\n    if (i[$j+1] == 'c') {\n        // {$smarty.block.child}\n        A = $this->compiler->compileTag('child',array(),array(i));\n    } else {\n        // {$smarty.block.parent}\n       A = $this->compiler->compileTag('parent',array(),array(i));\n     }\n}\n\nsmartytag(A)   ::= LDEL tagbody(B) RDEL. {\n    A  = B;\n}\n\n smartytag(A)   ::=  tag(B) RDEL. {\n     A  = B;\n }\n                  // output with optional attributes\ntagbody(A) ::= outattr(B). {\n    A = $this->compiler->compileTag('private_print_expression',B[1],array('value'=>B[0]));\n}\n\n//\n// Smarty tags start here\n//\n\n                  // assign new style\ntagbody(A) ::= DOLLARID(B) eqoutattr(C). {\n    A = $this->compiler->compileTag('assign',array_merge(array(array('value'=>C[0]),array('var'=>'\\''.substr(B,1).'\\'')),C[1]));\n}\n\ntagbody(A) ::= varindexed(B) eqoutattr(C). {\n    A = $this->compiler->compileTag('assign',array_merge(array(array('value'=>C[0]),array('var'=>B['var'])),C[1]),array('smarty_internal_index'=>B['smarty_internal_index']));\n}\n\neqoutattr(A) ::= EQUAL outattr(B). {\n       A = B;\n}\n\noutattr(A) ::= output(B) attributes(C). {\n    A = array(B,C);\n}\n\noutput(A) ::= variable(B). {\n    A = B;\n}\noutput(A) ::= value(B). {\n    A = B;\n}\noutput(A) ::= expr(B). {\n    A = B;\n}\n\n                  // tag with optional Smarty2 style attributes\ntag(res)   ::= LDEL ID(i) attributes(a). {\n        if (defined(i)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant(i, $this->compiler);\n            }\n            res = $this->compiler->compileTag('private_print_expression',a,array('value'=>i));\n        } else {\n            res = $this->compiler->compileTag(i,a);\n        }\n}\ntag(res)   ::= LDEL ID(i). {\n        if (defined(i)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant(i, $this->compiler);\n            }\n            res = $this->compiler->compileTag('private_print_expression',array(),array('value'=>i));\n        } else {\n            res = $this->compiler->compileTag(i,array());\n        }\n}\n\n\n                  // tag with modifier and optional Smarty2 style attributes\ntag(res)   ::= LDEL ID(i) modifierlist(l)attributes(a). {\n        if (defined(i)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant(i, $this->compiler);\n            }\n            res = $this->compiler->compileTag('private_print_expression',a,array('value'=>i, 'modifierlist'=>l));\n        } else {\n            res = $this->compiler->compileTag(i,a, array('modifierlist'=>l));\n        }\n}\n\n                  // registered object tag\ntag(res)   ::= LDEL ID(i) PTR ID(m) attributes(a). {\n    res = $this->compiler->compileTag(i,a,array('object_method'=>m));\n}\n\n                  // registered object tag with modifiers\ntag(res)   ::= LDEL ID(i) PTR ID(me) modifierlist(l) attributes(a). {\n    res = $this->compiler->compileTag(i,a,array('modifierlist'=>l, 'object_method'=>me));\n}\n\n                  // nocache tag\ntag(res)   ::= LDELMAKENOCACHE DOLLARID(i). {\n    res = $this->compiler->compileTag('make_nocache',array(array('var'=>'\\''.substr(i,1).'\\'')));\n}\n\n                  // {if}, {elseif} and {while} tag\ntag(res)   ::= LDELIF(i) expr(ie). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength())); \n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>ie));\n}\n\ntag(res)   ::= LDELIF(i) expr(ie) attributes(a). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength()));\n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,a,array('if condition'=>ie));\n}\n\ntag(res)   ::= LDELIF(i) statement(ie). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength()));\n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>ie));\n}\n\ntag(res)   ::= LDELIF(i) statement(ie)  attributes(a). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength()));\n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,a,array('if condition'=>ie));\n}\n\n                  // {for} tag\ntag(res)   ::= LDELFOR statements(st) SEMICOLON expr(ie) SEMICOLON varindexed(v2) foraction(e2) attributes(a). {\n    res = $this->compiler->compileTag('for',array_merge(a,array(array('start'=>st),array('ifexp'=>ie),array('var'=>v2),array('step'=>e2))),1);\n}\n\n  foraction(res)   ::= EQUAL expr(e). {\n    res = '='.e;\n}\n\n  foraction(res)   ::= INCDEC(e). {\n    res = e;\n}\n\ntag(res)   ::= LDELFOR statement(st) TO expr(v) attributes(a). {\n    res = $this->compiler->compileTag('for',array_merge(a,array(array('start'=>st),array('to'=>v))),0);\n}\n\ntag(res)   ::= LDELFOR statement(st) TO expr(v) STEP expr(v2) attributes(a). {\n    res = $this->compiler->compileTag('for',array_merge(a,array(array('start'=>st),array('to'=>v),array('step'=>v2))),0);\n}\n\n                  // {foreach} tag\ntag(res)   ::= LDELFOREACH SPACE expr(e) AS varvar(v0) attributes(a). {\n    res = $this->compiler->compileTag('foreach',array_merge(a,array(array('from'=>e),array('item'=>v0))));\n}\n\ntag(res)   ::= LDELFOREACH SPACE expr(e) AS varvar(v1) APTR varvar(v0) attributes(a). {\n    res = $this->compiler->compileTag('foreach',array_merge(a,array(array('from'=>e),array('item'=>v0),array('key'=>v1))));\n}\ntag(res)   ::= LDELFOREACH attributes(a). {\n    res = $this->compiler->compileTag('foreach',a);\n}\n\n                  // {setfilter}\ntag(res)   ::= LDELSETFILTER ID(m) modparameters(p). {\n    res = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array(m),p))));\n}\n\ntag(res)   ::= LDELSETFILTER ID(m) modparameters(p) modifierlist(l). {\n    res = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array(m),p)),l)));\n}\n\n                  \n                  // end of block tag  {/....}                  \nsmartytag(res)::= CLOSETAG(t). {\n    $tag = trim(substr(t, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' /');\n    if ($tag === 'strip') {\n        $this->strip = false;\n        res = null;\n    } else {\n       res = $this->compiler->compileTag($tag.'close',array());\n    }\n }\ntag(res)   ::= LDELSLASH ID(i). {\n    res = $this->compiler->compileTag(i.'close',array());\n}\n\ntag(res)   ::= LDELSLASH ID(i) modifierlist(l). {\n    res = $this->compiler->compileTag(i.'close',array(),array('modifier_list'=>l));\n}\n\n                  // end of block object tag  {/....}                 \ntag(res)   ::= LDELSLASH ID(i) PTR ID(m). {\n    res = $this->compiler->compileTag(i.'close',array(),array('object_method'=>m));\n}\n\ntag(res)   ::= LDELSLASH ID(i) PTR ID(m) modifierlist(l). {\n    res = $this->compiler->compileTag(i.'close',array(),array('object_method'=>m, 'modifier_list'=>l));\n}\n\n//\n//Attributes of Smarty tags \n//\n                  // list of attributes\nattributes(res)  ::= attributes(a1) attribute(a2). {\n    res = a1;\n    res[] = a2;\n}\n\n                  // single attribute\nattributes(res)  ::= attribute(a). {\n    res = array(a);\n}\n\n                  // no attributes\nattributes(res)  ::= . {\n    res = array();\n}\n                  \n                  // attribute\nattribute(res)   ::= SPACE ID(v) EQUAL ID(id). {\n    if (defined(id)) {\n        if ($this->security) {\n            $this->security->isTrustedConstant(id, $this->compiler);\n        }\n        res = array(v=>id);\n    } else {\n        res = array(v=>'\\''.id.'\\'');\n    }\n}\n\nattribute(res)   ::= ATTR(v) expr(e). {\n    res = array(trim(v,\" =\\n\\r\\t\")=>e);\n}\n\nattribute(res)   ::= ATTR(v) value(e). {\n    res = array(trim(v,\" =\\n\\r\\t\")=>e);\n}\n\nattribute(res)   ::= SPACE ID(v). {\n    res = '\\''.v.'\\'';\n}\n\nattribute(res)   ::= SPACE expr(e). {\n    res = e;\n}\n\nattribute(res)   ::= SPACE value(v). {\n    res = v;\n}\n\nattribute(res)   ::= SPACE INTEGER(i) EQUAL expr(e). {\n    res = array(i=>e);\n}\n\n                  \n\n//\n// statement\n//\nstatements(res)   ::= statement(s). {\n    res = array(s);\n}\n\nstatements(res)   ::= statements(s1) COMMA statement(s). {\n    s1[]=s;\n    res = s1;\n}\n\nstatement(res)    ::= DOLLARID(i) EQUAL INTEGER(e). {\n    res = array('var' => '\\''.substr(i,1).'\\'', 'value'=>e);\n}\nstatement(res)    ::= DOLLARID(i) EQUAL expr(e). {\n    res = array('var' => '\\''.substr(i,1).'\\'', 'value'=>e);\n}\n\nstatement(res)    ::= varindexed(vi) EQUAL expr(e). {\n    res = array('var' => vi, 'value'=>e);\n}\n\nstatement(res)    ::= OPENP statement(st) CLOSEP. {\n    res = st;\n}\n\n\n//\n// expressions\n//\n\n                  // single value\nexpr(res)        ::= value(v). {\n    res = v;\n}\n\n                 // ternary\nexpr(res)        ::= ternary(v). {\n    res = v;\n}\n\n                 // resources/streams\nexpr(res)        ::= DOLLARID(i) COLON ID(i2). {\n    res = '$_smarty_tpl->getStreamVariable(\\''.substr(i,1).'://' . i2 . '\\')';\n}\n\n                  // arithmetic expression\nexpr(res)        ::= expr(e) MATH(m) value(v). {\n    res = e . trim(m) . v;\n}\n\nexpr(res)        ::= expr(e) UNIMATH(m) value(v). {\n    res = e . trim(m) . v;\n}\n\n// if expression\n                    // special conditions\nexpr(res)        ::= expr(e1) tlop(c) value(e2). {\n    res = c['pre']. e1.c['op'].e2 .')';\n}\n                    // simple expression\nexpr(res)        ::= expr(e1) lop(c) expr(e2). {\n    res = e1.c.e2;\n}\n\nexpr(res)        ::= expr(e1) scond(c). {\n    res = c . e1 . ')';\n}\n\nexpr(res)        ::= expr(e1) ISIN array(a).  {\n    res = 'in_array('.e1.','.a.')';\n}\n\nexpr(res)        ::= expr(e1) ISIN value(v).  {\n    res = 'in_array('.e1.',(array)'.v.')';\n}\n\n\n//\n// ternary\n//\nternary(res)        ::= OPENP expr(v) CLOSEP  QMARK DOLLARID(e1) COLON  expr(e2). {\n    res = v.' ? '. $this->compiler->compileVariable('\\''.substr(e1,1).'\\'') . ' : '.e2;\n}\n\nternary(res)        ::= OPENP expr(v) CLOSEP  QMARK  expr(e1) COLON  expr(e2). {\n    res = v.' ? '.e1.' : '.e2;\n}\n\n                 // value\nvalue(res)       ::= variable(v). {\n    res = v;\n}\n\n                  // +/- value\nvalue(res)        ::= UNIMATH(m) value(v). {\n    res = m.v;\n}\n\n                  // logical negation\nvalue(res)       ::= NOT value(v). {\n    res = '!'.v;\n}\n\nvalue(res)       ::= TYPECAST(t) value(v). {\n    res = t.v;\n}\n\nvalue(res)       ::= variable(v) INCDEC(o). {\n    res = v.o;\n}\n\n                 // numeric\nvalue(res)       ::= HEX(n). {\n    res = n;\n}\n\nvalue(res)       ::= INTEGER(n). {\n    res = n;\n}\n\nvalue(res)       ::= INTEGER(n1) DOT INTEGER(n2). {\n    res = n1.'.'.n2;\n}\n\nvalue(res)       ::= INTEGER(n1) DOT. {\n    res = n1.'.';\n}\n\nvalue(res)       ::= DOT INTEGER(n1). {\n    res = '.'.n1;\n}\n\n                 // ID, true, false, null\nvalue(res)       ::= ID(id). {\n    if (defined(id)) {\n        if ($this->security) {\n             $this->security->isTrustedConstant(id, $this->compiler);\n        }\n        res = id;\n    } else {\n        res = '\\''.id.'\\'';\n    }\n}\n\n                  // function call\nvalue(res)       ::= function(f). {\n    res = f;\n}\n\n                  // expression\nvalue(res)       ::= OPENP expr(e) CLOSEP. {\n    res = '('. e .')';\n}\n\nvalue(res)        ::= variable(v1) INSTANCEOF(i) ns1(v2). {\n      res = v1.i.v2;\n}\nvalue(res)        ::= variable(v1) INSTANCEOF(i) variable(v2). {\n      res = v1.i.v2;\n}\n\n                  // singele quoted string\nvalue(res)       ::= SINGLEQUOTESTRING(t). {\n    res = t;\n}\n\n                  // double quoted string\nvalue(res)       ::= doublequoted_with_quotes(s). {\n    res = s;\n}\n\n\nvalue(res)    ::= varindexed(vi) DOUBLECOLON static_class_access(r). {\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    if (vi['var'] === '\\'smarty\\'') {\n        $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \". $this->compiler->compileTag('private_special_variable',array(),vi['smarty_internal_index']).';?>');\n     } else {\n        $this->compiler->appendPrefixCode(\"<?php  {$prefixVar} = \". $this->compiler->compileVariable(vi['var']).vi['smarty_internal_index'].';?>');\n    }\n    res = $prefixVar .'::'.r[0].r[1];\n}\n\n                  // Smarty tag\nvalue(res)       ::= smartytag(st). {\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $tmp = $this->compiler->appendCode('<?php ob_start();?>', st);\n    $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, \"<?php {$prefixVar} = ob_get_clean();?>\"));\n    res = $prefixVar;\n}\n\nvalue(res)       ::= value(v) modifierlist(l). {\n    res = $this->compiler->compileTag('private_modifier',array(),array('value'=>v,'modifierlist'=>l));\n}\n                  // name space constant\nvalue(res)       ::= NAMESPACE(c). {\n    res = c;\n}\n\n                  // array\nvalue(res)       ::= arraydef(a). {\n    res = a;\n}\n                  // static class access\nvalue(res)       ::= ns1(c)DOUBLECOLON static_class_access(s). {\n    if (!in_array(strtolower(c), array('self', 'parent')) && (!$this->security || $this->security->isTrustedStaticClassAccess(c, s, $this->compiler))) {\n        if (isset($this->smarty->registered_classes[c])) {\n            res = $this->smarty->registered_classes[c].'::'.s[0].s[1];\n        } else {\n            res = c.'::'.s[0].s[1];\n        } \n    } else {\n        $this->compiler->trigger_template_error ('static class \\''.c.'\\' is undefined or not allowed by security setting');\n    }\n}\n//\n// namespace stuff\n//\n\nns1(res)           ::= ID(i). {\n    res = i;\n}\n\nns1(res)           ::= NAMESPACE(i). {\n    res = i;\n    }\n\n\n\n\n//\n// variables \n//\n                  // Smarty variable (optional array)\nvariable(res)    ::= DOLLARID(i). {\n   res = $this->compiler->compileVariable('\\''.substr(i,1).'\\'');\n}\nvariable(res)    ::= varindexed(vi). {\n    if (vi['var'] === '\\'smarty\\'') {\n        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),vi['smarty_internal_index']);\n        res = $smarty_var;\n    } else {\n        // used for array reset,next,prev,end,current \n        $this->last_variable = vi['var'];\n        $this->last_index = vi['smarty_internal_index'];\n        res = $this->compiler->compileVariable(vi['var']).vi['smarty_internal_index'];\n    }\n}\n\n                  // variable with property\nvariable(res)    ::= varvar(v) AT ID(p). {\n    res = '$_smarty_tpl->tpl_vars['. v .']->'.p;\n}\n\n                  // object\nvariable(res)    ::= object(o). {\n    res = o;\n}\n\n                  // config variable\nvariable(res)    ::= HATCH ID(i) HATCH. {\n    res = $this->compiler->compileConfigVariable('\\'' . i . '\\'');\n}\n\nvariable(res)    ::= HATCH ID(i) HATCH arrayindex(a). {\n    res = '(is_array($tmp = ' . $this->compiler->compileConfigVariable('\\'' . i . '\\'') . ') ? $tmp'.a.' :null)';\n}\n\nvariable(res)    ::= HATCH variable(v) HATCH. {\n    res = $this->compiler->compileConfigVariable(v);\n}\n\nvariable(res)    ::= HATCH variable(v) HATCH arrayindex(a). {\n    res = '(is_array($tmp = ' . $this->compiler->compileConfigVariable(v) . ') ? $tmp'.a.' : null)';\n}\n\nvarindexed(res)  ::= DOLLARID(i) arrayindex(a). {\n    res = array('var'=>'\\''.substr(i,1).'\\'', 'smarty_internal_index'=>a);\n}\nvarindexed(res)  ::= varvar(v) arrayindex(a). {\n    res = array('var'=>v, 'smarty_internal_index'=>a);\n}\n\n//\n// array index\n//\n                    // multiple array index\narrayindex(res)  ::= arrayindex(a1) indexdef(a2). {\n    res = a1.a2;\n}\n\n                    // no array index\narrayindex        ::= . {\n    return;\n}\n\n// single index definition\n                    // Smarty2 style index \nindexdef(res)    ::= DOT DOLLARID(i).  {\n    res = '['.$this->compiler->compileVariable('\\''.substr(i,1).'\\'').']';\n}\nindexdef(res)    ::= DOT varvar(v).  {\n    res = '['.$this->compiler->compileVariable(v).']';\n}\n\nindexdef(res)    ::= DOT varvar(v) AT ID(p). {\n    res = '['.$this->compiler->compileVariable(v).'->'.p.']';\n}\n\nindexdef(res)   ::= DOT ID(i). {\n    res = '[\\''. i .'\\']';\n}\n\nindexdef(res)   ::= DOT INTEGER(n). {\n    res = '['. n .']';\n}\n\n\nindexdef(res)   ::= DOT LDEL expr(e) RDEL. {\n    res = '['. e .']';\n}\n\n                    // section tag index\nindexdef(res)   ::= OPENB ID(i)CLOSEB. {\n    res = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.i.'\\'][\\'index\\']').']';\n}\n\nindexdef(res)   ::= OPENB ID(i) DOT ID(i2) CLOSEB. {\n    res = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.i.'\\'][\\''.i2.'\\']').']';\n}\nindexdef(res)   ::= OPENB SINGLEQUOTESTRING(s) CLOSEB. {\n    res = '['.s.']';\n}\nindexdef(res)   ::= OPENB INTEGER(n) CLOSEB. {\n    res = '['.n.']';\n}\nindexdef(res)   ::= OPENB DOLLARID(i) CLOSEB. {\n    res = '['.$this->compiler->compileVariable('\\''.substr(i,1).'\\'').']';\n}\nindexdef(res)   ::= OPENB variable(v) CLOSEB. {\n    res = '['.v.']';\n}\nindexdef(res)   ::= OPENB value(v) CLOSEB. {\n    res = '['.v.']';\n}\n\n                    // PHP style index\nindexdef(res)   ::= OPENB expr(e) CLOSEB. {\n    res = '['. e .']';\n}\n\n                    // for assign append array\nindexdef(res)  ::= OPENB CLOSEB. {\n    res = '[]';\n}\n\n\n//\n// variable variable names\n//\n\n                    // singel identifier element\nvarvar(res)      ::= DOLLARID(i). {\n    res = '\\''.substr(i,1).'\\'';\n}\n                    // single $\nvarvar(res)      ::= DOLLAR. {\n    res = '\\'\\'';\n}\n\n                    // sequence of identifier elements\nvarvar(res)      ::= varvar(v1) varvarele(v2). {\n    res = v1.'.'.v2;\n}\n\n                    // fix sections of element\nvarvarele(res)   ::= ID(s). {\n    res = '\\''.s.'\\'';\n}\nvarvarele(res)   ::= SIMPELOUTPUT(i). {\n    $var = trim(substr(i, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    res = $this->compiler->compileVariable('\\''.$var.'\\'');\n}\n\n                    // variable sections of element\nvarvarele(res)   ::= LDEL expr(e) RDEL. {\n    res = '('.e.')';\n}\n\n//\n// objects\n//\nobject(res)    ::= varindexed(vi) objectchain(oc). {\n    if (vi['var'] === '\\'smarty\\'') {\n        res =  $this->compiler->compileTag('private_special_variable',array(),vi['smarty_internal_index']).oc;\n    } else {\n        res = $this->compiler->compileVariable(vi['var']).vi['smarty_internal_index'].oc;\n    }\n}\n\n                    // single element\nobjectchain(res) ::= objectelement(oe). {\n    res  = oe;\n}\n\n                    // chain of elements \nobjectchain(res) ::= objectchain(oc) objectelement(oe). {\n    res  = oc.oe;\n}\n\n                    // variable\nobjectelement(res)::= PTR ID(i) arrayindex(a). {\n    if ($this->security && substr(i,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    res = '->'.i.a;\n}\n\nobjectelement(res)::= PTR varvar(v) arrayindex(a). {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    res = '->{'.$this->compiler->compileVariable(v).a.'}';\n}\n\nobjectelement(res)::= PTR LDEL expr(e) RDEL arrayindex(a). {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    res = '->{'.e.a.'}';\n}\n\nobjectelement(res)::= PTR ID(ii) LDEL expr(e) RDEL arrayindex(a). {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    res = '->{\\''.ii.'\\'.'.e.a.'}';\n}\n\n                    // method\nobjectelement(res)::= PTR method(f).  {\n    res = '->'.f;\n}\n\n\n//\n// function\n//\nfunction(res)     ::= ns1(f) OPENP params(p) CLOSEP. {\n    res = $this->compiler->compilePHPFunctionCall(f, p);\n}\n\n\n//\n// method\n//\nmethod(res)     ::= ID(f) OPENP params(p) CLOSEP. {\n    if ($this->security && substr(f,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    res = f . '('. implode(',',p) .')';\n}\n\nmethod(res)     ::= DOLLARID(f) OPENP params(p) CLOSEP.  {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \".$this->compiler->compileVariable('\\''.substr(f,1).'\\'').';?>');\n    res = $prefixVar .'('. implode(',',p) .')';\n}\n\n// function/method parameter\n                    // multiple parameters\nparams(res)       ::= params(p) COMMA expr(e). {\n    res = array_merge(p,array(e));\n}\n\n                    // single parameter\nparams(res)       ::= expr(e). {\n    res = array(e);\n}\n\n                    // kein parameter\nparams(res)       ::= . {\n    res = array();\n}\n\n//\n// modifier\n// \nmodifierlist(res) ::= modifierlist(l) modifier(m) modparameters(p). {\n    res = array_merge(l,array(array_merge(m,p)));\n}\n\nmodifierlist(res) ::= modifier(m) modparameters(p). {\n    res = array(array_merge(m,p));\n}\n \nmodifier(res)    ::= VERT AT ID(m). {\n    res = array(m);\n}\n\nmodifier(res)    ::= VERT ID(m). {\n    res =  array(m);\n}\n\n//\n// modifier parameter\n//\n                    // multiple parameter\nmodparameters(res) ::= modparameters(mps) modparameter(mp). {\n    res = array_merge(mps,mp);\n}\n\n                    // no parameter\nmodparameters(res)      ::= . {\n    res = array();\n}\n\n                    // parameter expression\nmodparameter(res) ::= COLON value(mp). {\n    res = array(mp);\n}\nmodparameter(res) ::= COLON UNIMATH(m) value(mp). {\n    res = array(trim(m).mp);\n}\n\nmodparameter(res) ::= COLON array(mp). {\n    res = array(mp);\n}\n\n                  // static class methode call\nstatic_class_access(res)       ::= method(m). {\n    res = array(m, '', 'method');\n}\n\n                  // static class methode call with object chainig\nstatic_class_access(res)       ::= method(m) objectchain(oc). {\n    res = array(m, oc, 'method');\n}\n\n                  // static class constant\nstatic_class_access(res)       ::= ID(v). {\n    res = array(v, '');\n}\n\n                  // static class variables\nstatic_class_access(res)       ::=  DOLLARID(v) arrayindex(a). {\n    res = array(v, a, 'property');\n}\n\n                  // static class variables with object chain\nstatic_class_access(res)       ::= DOLLARID(v) arrayindex(a) objectchain(oc). {\n    res = array(v, a.oc, 'property');\n}\n\n\n// if conditions and operators\nlop(res)        ::= LOGOP(o). {\n    res = ' '. trim(o) . ' ';\n}\n\nlop(res)        ::= SLOGOP(o). {\n    static $lops = array(\n        'eq' => ' == ',\n        'ne' => ' != ',\n        'neq' => ' != ',\n        'gt' => ' > ',\n        'ge' => ' >= ',\n        'gte' => ' >= ',\n        'lt' =>  ' < ',\n        'le' =>  ' <= ',\n        'lte' => ' <= ',\n        'mod' =>  ' % ',\n        'and' => ' && ',\n        'or' => ' || ',\n        'xor' => ' xor ',\n         );\n    $op = strtolower(preg_replace('/\\s*/', '', o));\n    res = $lops[$op];\n}\ntlop(res)        ::= TLOGOP(o). {\n     static $tlops = array(\n         'isdivby' => array('op' => ' % ', 'pre' => '!('),\n         'isnotdivby' => array('op' => ' % ', 'pre' => '('),\n         'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         );\n     $op = strtolower(preg_replace('/\\s*/', '', o));\n     res = $tlops[$op];\n }\n\nscond(res)  ::= SINGLECOND(o). {\n        static $scond = array (\n            'iseven' => '!(1 & ',\n            'isnoteven' => '(1 & ',\n            'isodd' => '(1 & ',\n            'isnotodd' => '!(1 & ',\n        );\n   $op = strtolower(str_replace(' ', '', o));\n   res = $scond[$op];\n}\n\n//\n// ARRAY element assignment\n//\narraydef(res)           ::=  OPENB arrayelements(a) CLOSEB.  {\n    res = 'array('.a.')';\n}\narraydef(res)           ::=  ARRAYOPEN arrayelements(a) CLOSEP.  {\n    res = 'array('.a.')';\n}\n\narrayelements(res)   ::=  arrayelement(a).  {\n    res = a;\n}\n\narrayelements(res)   ::=  arrayelements(a1) COMMA arrayelement(a).  {\n    res = a1.','.a;\n}\n\narrayelements        ::=  .  {\n    return;\n}\n\narrayelement(res)    ::=  value(e1) APTR expr(e2). {\n    res = e1.'=>'.e2;\n}\n\narrayelement(res)    ::=  ID(i) APTR expr(e2). { \n    res = '\\''.i.'\\'=>'.e2;\n}\n\narrayelement(res)    ::=  expr(e). {\n    res = e;\n}\n\n\n//\n// double quoted strings\n//\ndoublequoted_with_quotes(res) ::= QUOTE QUOTE. {\n    res = '\\'\\'';\n}\n\ndoublequoted_with_quotes(res) ::= QUOTE doublequoted(s) QUOTE. {\n    $this->compiler->leaveDoubleQuote();\n    res = s->to_smarty_php($this);\n}\n\n\ndoublequoted(res)          ::= doublequoted(o1) doublequotedcontent(o2). {\n    o1->append_subtree($this, o2);\n    res = o1;\n}\n\ndoublequoted(res)          ::= doublequotedcontent(o). {\n    res = new Smarty_Internal_ParseTree_Dq($this, o);\n}\n\ndoublequotedcontent(res)           ::=  BACKTICK variable(v) BACKTICK. {\n    res = new Smarty_Internal_ParseTree_Code('(string)'.v);\n}\n\ndoublequotedcontent(res)           ::=  BACKTICK expr(e) BACKTICK. {\n    res = new Smarty_Internal_ParseTree_Code('(string)('.e.')');\n}\n\ndoublequotedcontent(res)           ::=  DOLLARID(i). {\n    res = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\\''. substr(i,1) .'\\']->value');\n}\n\ndoublequotedcontent(res)           ::=  LDEL variable(v) RDEL. {\n    res = new Smarty_Internal_ParseTree_Code('(string)'.v);\n}\n\ndoublequotedcontent(res)           ::=  LDEL expr(e) RDEL. {\n    res = new Smarty_Internal_ParseTree_Code('(string)('.e.')');\n}\n\ndoublequotedcontent(res)     ::=  smartytag(st). {\n    res = new Smarty_Internal_ParseTree_Tag($this, st);\n}\n\ndoublequotedcontent(res)           ::=  TEXT(o). {\n    res = new Smarty_Internal_ParseTree_DqContent(o);\n}\n\n", "<?php\n\nclass TP_yyStackEntry\n{\n    public $stateno;       /* The state-number */\n    public $major;         /* The major token value.  This is the code\n                     ** number for the token at this stack level */\n    public $minor; /* The user-supplied minor token value.  This\n                     ** is the value of the token  */\n};\n\n\n// line 11 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n/**\n* Smarty Template Parser Class\n*\n* This is the template parser.\n* It is generated from the smarty_internal_templateparser.y file\n* \n* @author Uwe Tews <uwe.tews@googlemail.com>\n*/\nclass Smarty_Internal_Templateparser\n{\n// line 23 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    const ERR1 = 'Security error: Call to private object member not allowed';\n    const ERR2 = 'Security error: Call to dynamic object member not allowed';\n\n    /**\n     * result status\n     *\n     * @var bool\n     */\n    public $successful = true;\n\n    /**\n     * return value\n     *\n     * @var mixed\n     */\n    public $retvalue = 0;\n\n    /**\n     * @var\n     */\n    public $yymajor;\n\n    /**\n     * last index of array variable\n     *\n     * @var mixed\n     */\n    public $last_index;\n\n    /**\n     * last variable name\n     *\n     * @var string\n     */\n    public $last_variable;\n\n    /**\n     * root parse tree buffer\n     *\n     * @var Smarty_Internal_ParseTree_Template\n     */\n    public $root_buffer;\n\n    /**\n     * current parse tree object\n     *\n     * @var Smarty_Internal_ParseTree\n     */\n    public $current_buffer;\n\n    /**\n     * lexer object\n     *\n     * @var Smarty_Internal_Templatelexer\n     */\n    public $lex;\n\n    /**\n     * internal error flag\n     *\n     * @var bool\n     */\n    private $internalError = false;\n\n    /**\n     * {strip} status\n     *\n     * @var bool\n     */\n    public $strip = false;\n    /**\n     * compiler object\n     *\n     * @var Smarty_Internal_TemplateCompilerBase\n     */\n    public $compiler = null;\n\n    /**\n     * smarty object\n     *\n     * @var Smarty\n     */\n    public $smarty = null;\n\n    /**\n     * template object\n     *\n     * @var Smarty_Internal_Template\n     */\n    public $template = null;\n\n    /**\n     * block nesting level\n     *\n     * @var int\n     */\n    public $block_nesting_level = 0;\n\n    /**\n     * security object\n     *\n     * @var Smarty_Security\n     */\n    public $security = null;\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_prefix = array();\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_postfix = array();\n\n    /**\n     * constructor\n     *\n     * @param Smarty_Internal_Templatelexer        $lex\n     * @param Smarty_Internal_TemplateCompilerBase $compiler\n     */\n    public function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)\n    {\n        $this->lex = $lex;\n        $this->compiler = $compiler;\n        $this->template = $this->compiler->template;\n        $this->smarty = $this->template->smarty;\n        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;\n        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();\n    }\n\n     /**\n     * insert PHP code in current buffer\n     *\n     * @param string $code\n     */\n    public function insertPhpCode($code)\n    {\n        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));\n    }\n\n    /**\n     * error rundown\n     *\n     */\n    public function errorRunDown()\n    {\n        while ($this->yystack !== array()) {\n            $this->yy_pop_parser_stack();\n        }\n        if (is_resource($this->yyTraceFILE)) {\n            fclose($this->yyTraceFILE);\n        }\n    }\n\n    /**\n     *  merge PHP code with prefix code and return parse tree tag object\n     *\n     * @param string $code\n     *\n     * @return Smarty_Internal_ParseTree_Tag\n     */\n    public function mergePrefixCode($code)\n    {\n        $tmp = '';\n        foreach ($this->compiler->prefix_code as $preCode) {\n            $tmp .= $preCode;\n        }\n        $this->compiler->prefix_code = array();\n        $tmp .= $code;\n        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));\n    }\n\n\n    const TP_VERT                           =  1;\n    const TP_COLON                          =  2;\n    const TP_TEXT                           =  3;\n    const TP_STRIPON                        =  4;\n    const TP_STRIPOFF                       =  5;\n    const TP_LITERALSTART                   =  6;\n    const TP_LITERALEND                     =  7;\n    const TP_LITERAL                        =  8;\n    const TP_SIMPELOUTPUT                   =  9;\n    const TP_SIMPLETAG                      = 10;\n    const TP_SMARTYBLOCKCHILDPARENT         = 11;\n    const TP_LDEL                           = 12;\n    const TP_RDEL                           = 13;\n    const TP_DOLLARID                       = 14;\n    const TP_EQUAL                          = 15;\n    const TP_ID                             = 16;\n    const TP_PTR                            = 17;\n    const TP_LDELMAKENOCACHE                = 18;\n    const TP_LDELIF                         = 19;\n    const TP_LDELFOR                        = 20;\n    const TP_SEMICOLON                      = 21;\n    const TP_INCDEC                         = 22;\n    const TP_TO                             = 23;\n    const TP_STEP                           = 24;\n    const TP_LDELFOREACH                    = 25;\n    const TP_SPACE                          = 26;\n    const TP_AS                             = 27;\n    const TP_APTR                           = 28;\n    const TP_LDELSETFILTER                  = 29;\n    const TP_CLOSETAG                       = 30;\n    const TP_LDELSLASH                      = 31;\n    const TP_ATTR                           = 32;\n    const TP_INTEGER                        = 33;\n    const TP_COMMA                          = 34;\n    const TP_OPENP                          = 35;\n    const TP_CLOSEP                         = 36;\n    const TP_MATH                           = 37;\n    const TP_UNIMATH                        = 38;\n    const TP_ISIN                           = 39;\n    const TP_QMARK                          = 40;\n    const TP_NOT                            = 41;\n    const TP_TYPECAST                       = 42;\n    const TP_HEX                            = 43;\n    const TP_DOT                            = 44;\n    const TP_INSTANCEOF                     = 45;\n    const TP_SINGLEQUOTESTRING              = 46;\n    const TP_DOUBLECOLON                    = 47;\n    const TP_NAMESPACE                      = 48;\n    const TP_AT                             = 49;\n    const TP_HATCH                          = 50;\n    const TP_OPENB                          = 51;\n    const TP_CLOSEB                         = 52;\n    const TP_DOLLAR                         = 53;\n    const TP_LOGOP                          = 54;\n    const TP_SLOGOP                         = 55;\n    const TP_TLOGOP                         = 56;\n    const TP_SINGLECOND                     = 57;\n    const TP_ARRAYOPEN                      = 58;\n    const TP_QUOTE                          = 59;\n    const TP_BACKTICK                       = 60;\n    const YY_NO_ACTION = 514;\n    const YY_ACCEPT_ACTION = 513;\n    const YY_ERROR_ACTION = 512;\n\n    const YY_SZ_ACTTAB = 1997;\npublic static $yy_action = array(\n    249,  250,  239,    1,   27,  127,  220,  184,  160,  213,\n     11,   54,  278,   10,  173,   34,  108,  387,  282,  279,\n    223,  321,  221,    8,  194,  387,   18,  387,   85,   41,\n    387,  285,   42,   44,  264,  222,  387,  209,  387,  198,\n    387,   52,    5,  307,  288,  288,  164,  283,  224,    4,\n     50,  249,  250,  239,    1,  232,  131,  381,  189,  205,\n    213,   11,   54,   39,   35,  243,   31,  108,   94,   17,\n    381,  223,  321,  221,  439,  226,  381,   33,   49,  426,\n     41,  439,   89,   42,   44,  264,  222,    9,  235,  163,\n    198,  426,   52,    5,  131,  288,  212,  284,  102,  106,\n      4,   50,  249,  250,  239,    1,  232,  129,  426,  189,\n    347,  213,   11,   54,  175,  324,  347,  208,  108,   22,\n    426,  301,  223,  321,  221,  302,  226,  135,   18,   49,\n     52,   41,   26,  288,   42,   44,  264,  222,   16,  235,\n    294,  198,  204,   52,    5,  170,  288,   32,   90,  267,\n    268,    4,   50,  249,  250,  239,    1,   20,  129,  185,\n    179,  255,  213,   11,   54,  455,  288,  192,  455,  108,\n    175,  167,  455,  223,  321,  221,  439,  226,  256,   18,\n     55,  292,   41,  439,  132,   42,   44,  264,  222,  427,\n    235,   12,  198,  165,   52,    5,  232,  288,  288,  347,\n    153,  427,    4,   50,  249,  250,  239,    1,  232,  129,\n    286,  181,  347,  213,   11,   54,   24,   13,  347,   49,\n    108,  232,  320,  426,  223,  321,  221,  195,  201,  173,\n     18,   49,  139,   41,  296,  426,   42,   44,  264,  222,\n      7,  235,  286,  198,   49,   52,    5,  147,  288,  117,\n    150,  317,  263,    4,   50,  249,  250,  239,    1,   95,\n    130,  173,  189,  155,  213,   11,   54,   22,  244,  271,\n    192,  108,  323,  286,  101,  223,  321,  221,  294,  226,\n    204,   18,  348,  257,   41,  166,  283,   42,   44,  264,\n    222,   28,  235,  300,  198,  348,   52,    5,  247,  288,\n    117,  348,   94,  206,    4,   50,  249,  250,  239,    1,\n     95,  129,   22,  189,  277,  213,   11,   54,   91,  274,\n    224,  426,  108,  323,  216,  156,  223,  321,  221,  132,\n    180,  262,   18,  426,  100,   41,   12,  288,   42,   44,\n    264,  222,   15,  235,  216,  198,  254,   52,    5,  233,\n    288,  210,  190,  192,  100,    4,   50,  249,  250,  239,\n      1,    3,  131,   94,  189,  192,  213,   11,   54,  269,\n     10,  204,  290,  108,  325,  216,  224,  223,  321,  221,\n     23,  226,  211,   33,  315,  100,   45,  513,   92,   42,\n     44,  264,  222,  102,  235,  178,  198,  268,   52,    5,\n    275,  288,  161,  192,   37,   25,    4,   50,  249,  250,\n    239,    1,  286,  129,  172,  187,  305,  213,   11,   54,\n    164,  283,  310,  141,  108,  281,  281,  236,  223,  321,\n    221,  169,  226,  230,   18,  122,  171,   41,  225,  175,\n     42,   44,  264,  222,  144,  235,  303,  198,  134,   52,\n      5,  265,  288,  151,  286,  192,  175,    4,   50,  249,\n    250,  239,    1,  286,  128,   94,  189,  143,  213,   11,\n     54,  219,  152,  207,  193,  108,  149,  281,   31,  223,\n    321,  221,  100,  226,   21,    6,  286,  288,   41,  158,\n     16,   42,   44,  264,  222,  102,  235,  238,  198,  286,\n     52,    5,  157,  288,  281,  122,  168,  283,    4,   50,\n    249,  250,  239,    1,   30,   93,  308,   51,  215,  213,\n     11,   54,   53,  251,  140,  248,  108,  245,  304,  116,\n    223,  321,  221,  111,  226,  176,   18,  270,  266,   41,\n    224,  322,   42,   44,  264,  222,    7,  235,  259,  198,\n    147,   52,    5,  257,  288,   43,   40,   38,   83,    4,\n     50,  241,  214,  204,  319,  280,   88,  107,  138,  182,\n     97,   64,  311,  312,  313,  316,   95,  281,  298,  258,\n    142,  234,   94,  105,  272,  197,  231,  482,  237,  323,\n     37,  133,  324,  241,  214,  204,  319,  314,   88,  107,\n    296,  183,   97,   82,   84,   43,   40,   38,   95,  296,\n    296,  258,  296,  296,  296,  159,  272,  197,  231,  296,\n    237,  323,  311,  312,  313,  316,  241,  296,  204,  296,\n    296,  103,  296,  296,  199,  104,   77,  296,  296,  110,\n    296,   95,  296,  296,  258,  278,  296,  296,   34,  272,\n    197,  231,  279,  237,  323,   43,   40,   38,  296,  296,\n    296,  241,   26,  204,  196,  276,  103,  296,   16,  199,\n    104,   77,  311,  312,  313,  316,   95,  192,  296,  258,\n    146,  296,  296,  296,  272,  197,  231,  296,  237,  323,\n    286,  393,   39,   35,  243,  296,  296,  296,  296,  191,\n    276,  296,   26,  318,  252,  253,  126,  296,   16,  249,\n    250,  239,    1,  296,  296,  131,  296,  261,  213,   11,\n     54,  296,  296,  296,  426,  108,  393,  393,  393,  223,\n    321,  221,  241,  296,  204,  299,  426,  103,  107,  296,\n    183,   97,   82,  393,  393,  393,  393,   95,  296,  260,\n    258,   52,  296,  296,  288,  272,  197,  231,  296,  237,\n    323,  293,  296,  296,  296,  296,  296,  249,  250,  239,\n      2,  296,  295,  296,  296,  296,  213,   11,   54,  296,\n    296,  177,  296,  108,  136,  296,  296,  223,  321,  221,\n    296,  296,  296,  293,   43,   40,   38,  296,  296,  249,\n    250,  239,    2,  296,  295,   43,   40,   38,  213,   11,\n     54,  311,  312,  313,  316,  108,  296,  291,   14,  223,\n    321,  221,  311,  312,  313,  316,  296,  296,  241,  296,\n    204,  296,  192,  103,  296,  296,  199,  104,   77,  296,\n    296,  296,  296,   95,  383,  296,  258,  296,  296,  297,\n     14,  272,  197,  231,  296,  237,  323,  383,  296,  296,\n    241,  296,  204,  383,  296,   99,  296,  287,  199,  120,\n     48,  241,  112,  204,  296,   95,  103,  296,  258,  199,\n    120,   74,  296,  272,  197,  231,   95,  237,  323,  258,\n    455,  296,  296,  455,  272,  197,  231,  455,  237,  323,\n    241,  296,  204,  296,  296,  103,  200,  296,  199,  120,\n     74,  296,  296,  296,  296,   95,  296,  296,  258,  278,\n    296,  296,   34,  272,  197,  231,  279,  237,  323,  241,\n    455,  204,  296,  296,   99,  202,  296,  199,  120,   56,\n    241,  211,  204,  296,   95,  103,  296,  258,  199,  120,\n     74,  296,  272,  197,  231,   95,  237,  323,  258,  227,\n    296,  296,  296,  272,  197,  231,  296,  237,  323,  241,\n    296,  204,  148,  296,  103,  203,   86,  199,  120,   73,\n    296,  296,  286,  296,   95,  296,  296,  258,  278,  296,\n    296,   34,  272,  197,  231,  279,  237,  323,  241,  296,\n    204,  175,  296,  103,  296,  296,  199,  120,   75,  241,\n    296,  204,  296,   95,  103,  296,  258,  199,  120,   63,\n    296,  272,  197,  231,   95,  237,  323,  258,  229,  192,\n    296,  296,  272,  197,  231,  296,  237,  323,  241,  296,\n    204,  380,  296,  103,  296,  296,  199,  120,   58,  296,\n    296,  296,  296,   95,  380,  296,  258,  296,  296,  296,\n    380,  272,  197,  231,  296,  237,  323,  241,  296,  204,\n    296,  296,  103,  296,  296,  199,  120,   71,  241,  296,\n    204,  296,   95,  103,  296,  258,  199,  120,   79,  296,\n    272,  197,  231,   95,  237,  323,  258,  296,  296,  296,\n    154,  272,  197,  231,   87,  237,  323,  241,  296,  204,\n    286,  296,  103,  296,  296,  199,  120,   70,  296,  296,\n    296,  296,   95,  296,  296,  258,  296,  296,  296,  175,\n    272,  197,  231,  296,  237,  323,  241,  296,  204,  296,\n    296,  103,  296,  296,  199,  120,   56,  241,  296,  204,\n    296,   95,  103,  296,  258,  199,  120,   46,  296,  272,\n    197,  231,   95,  237,  323,  258,  296,  296,  296,  296,\n    272,  197,  231,  296,  237,  323,  241,  296,  204,  296,\n    296,  103,  296,  296,  199,  120,   78,  296,  296,  296,\n    296,   95,  296,  296,  258,  296,  296,  296,  296,  272,\n    197,  231,  296,  237,  323,  241,  296,  204,  296,  296,\n    103,  296,  296,  199,  120,   66,  241,  296,  204,  296,\n     95,  103,  296,  258,  199,  120,   59,  296,  272,  197,\n    231,   95,  237,  323,  258,  296,  296,  296,  296,  272,\n    197,  231,  296,  237,  323,  241,  296,  204,  296,  296,\n    103,  296,  296,  186,  109,   57,  296,  296,  296,  296,\n     95,  296,  296,  258,  296,  296,  296,  296,  272,  197,\n    231,  296,  237,  323,  241,  296,  204,  296,  296,  103,\n    296,  296,  188,  120,   67,  241,  296,  204,  296,   95,\n    103,  296,  258,  199,   96,   62,  296,  272,  197,  231,\n     95,  237,  323,  258,  296,  296,  296,  296,  272,  197,\n    231,  296,  237,  323,  241,  296,  204,  296,  296,  103,\n    296,  296,  199,  120,   80,  296,  296,  296,  296,   95,\n    296,  296,  258,  296,  296,  296,  296,  272,  197,  231,\n    296,  237,  323,  241,  296,  204,  296,  296,  103,  296,\n    296,  199,  120,   76,  241,  296,  204,  296,   95,  103,\n    296,  258,  199,  120,   81,  296,  272,  197,  231,   95,\n    237,  323,  258,  296,  296,  296,  296,  272,  197,  231,\n    296,  237,  323,  241,  296,  204,  296,  296,  103,  296,\n    296,  199,  120,   65,  296,  296,  296,  296,   95,  296,\n    296,  258,  296,  296,  296,  296,  272,  197,  231,  296,\n    237,  323,  241,  296,  204,  296,  296,  103,  296,  296,\n    199,   96,   68,  241,  296,  204,  296,   95,  103,  296,\n    258,  199,  120,   61,  296,  272,  197,  231,   95,  237,\n    323,  258,  296,  296,  296,  296,  272,  197,  231,  296,\n    237,  323,  241,  296,  204,  296,  296,  103,  296,  296,\n    199,   98,   69,  296,  296,  296,  296,   95,  296,  296,\n    258,  296,  296,  296,  296,  272,  197,  231,  296,  237,\n    323,  241,  296,  204,  296,  296,  103,  296,  296,  199,\n    120,   72,  241,  296,  204,  296,   95,  103,  296,  258,\n    199,  120,   47,  296,  272,  197,  231,   95,  237,  323,\n    258,  296,  296,  296,  296,  272,  197,  231,  296,  237,\n    323,  241,  192,  204,  296,  296,  103,  296,  296,  199,\n    120,   60,  296,  296,  351,  296,   95,  296,  217,  258,\n    296,  296,  296,  296,  272,  197,  231,   26,  237,  323,\n    241,  296,  204,   16,  296,  103,  426,  296,  199,  125,\n    296,  241,  296,  204,  296,   95,  103,  296,  426,  199,\n    118,  296,  242,  272,  197,  231,   95,  237,  323,  296,\n    296,  296,  296,  246,  272,  197,  231,  296,  237,  323,\n    241,  296,  204,  278,  296,  103,   34,  296,  199,  121,\n    279,  296,  296,  296,  296,   95,  296,  296,  296,  296,\n     26,  296,  162,  272,  197,  231,   16,  237,  323,  241,\n    296,  204,  296,  296,  103,  296,  296,  199,  123,  296,\n    241,  296,  204,  296,   95,  103,  296,  296,  199,  114,\n    296,  296,  272,  197,  231,   95,  237,  323,  296,  296,\n    296,  296,  296,  272,  197,  231,  296,  237,  323,  241,\n    296,  204,  296,  145,  103,  296,  296,  199,  124,  296,\n    296,  296,  296,  286,   95,   39,   35,  243,  296,  296,\n    296,  296,  272,  197,  231,  296,  237,  323,  241,  296,\n    204,  296,  296,  103,  296,  296,  199,  115,  296,  241,\n    296,  204,  296,   95,  103,  296,  296,  199,  113,  296,\n    296,  272,  197,  231,   95,  237,  323,  296,  296,  296,\n    296,  296,  272,  197,  231,  228,  237,  323,  241,  296,\n    204,  296,  455,  103,  296,  455,  199,  119,    3,  455,\n    439,  296,  296,   95,  296,  296,  296,  296,  296,  296,\n    296,  272,  197,  231,  228,  237,  323,  296,  296,  296,\n    296,  455,  296,  296,  455,  296,  296,  439,  455,  439,\n    439,  228,  455,  296,  439,  296,  296,  137,  455,  296,\n    296,  455,  296,  296,   32,  455,  439,  286,  296,   39,\n     35,  243,   29,  296,   26,  296,  439,  296,  296,  439,\n     16,  455,  296,  439,  306,   43,   40,   38,  296,  296,\n    296,  296,  296,  439,  296,  296,  439,  296,  455,  296,\n    439,   26,  311,  312,  313,  316,  296,   16,  228,  296,\n    296,  296,   43,   40,   38,  455,  296,  296,  455,  296,\n    296,  296,  455,  439,  296,  296,   19,  296,  296,  311,\n    312,  313,  316,  455,  296,  296,  455,  296,  296,  296,\n    455,  439,  296,  296,  296,   43,   40,   38,  296,  296,\n    439,  296,  296,  439,  174,  455,  296,  439,  296,  240,\n    309,  296,  311,  312,  313,  316,  296,  289,  439,  296,\n     36,  439,  296,  455,  296,  439,  296,  296,   43,   40,\n     38,  296,  296,   43,   40,   38,  296,  296,  296,  296,\n    296,   43,   40,   38,  296,  311,  312,  313,  316,  296,\n    311,  312,  313,  316,  296,   43,   40,   38,  311,  312,\n    313,  316,  273,   43,   40,   38,  296,  296,  296,  296,\n    296,  296,  311,  312,  313,  316,  296,  296,  296,  296,\n    311,  312,  313,  316,  455,  296,  296,  455,   43,   40,\n     38,  455,  439,  218,   43,   40,   38,  296,  296,  296,\n    296,  296,  296,  296,  296,  311,  312,  313,  316,  296,\n    296,  311,  312,  313,  316,  296,  296,  296,  296,  439,\n    296,  296,  439,  296,  455,  296,  439,\n    );\n    public static $yy_lookahead = array(\n      9,   10,   11,   12,   12,   14,   14,   16,   16,   18,\n     19,   20,    9,   34,  102,   12,   25,   13,   70,   16,\n     29,   30,   31,   35,   33,   21,   35,   23,   95,   38,\n     26,   52,   41,   42,   43,   44,   32,   46,   34,   48,\n     36,   50,   51,   52,   53,   53,   98,   99,   44,   58,\n     59,    9,   10,   11,   12,   22,   14,   13,   16,   15,\n     18,   19,   20,   85,   86,   87,   15,   25,   17,   21,\n     26,   29,   30,   31,   44,   33,   32,   35,   45,   35,\n     38,   51,   34,   41,   42,   43,   44,   35,   46,   77,\n     48,   47,   50,   51,   14,   53,   16,   13,   47,   47,\n     58,   59,    9,   10,   11,   12,   22,   14,   35,   16,\n     26,   18,   19,   20,  102,  103,   32,   44,   25,   34,\n     47,   36,   29,   30,   31,   52,   33,   14,   35,   45,\n     50,   38,   26,   53,   41,   42,   43,   44,   32,   46,\n     66,   48,   68,   50,   51,   77,   53,   15,   35,    7,\n      8,   58,   59,    9,   10,   11,   12,   12,   14,   14,\n     16,   16,   18,   19,   20,    9,   53,    1,   12,   25,\n    102,   82,   16,   29,   30,   31,   44,   33,   33,   35,\n    106,  107,   38,   51,   44,   41,   42,   43,   44,   35,\n     46,   51,   48,   82,   50,   51,   22,   53,   53,   13,\n     73,   47,   58,   59,    9,   10,   11,   12,   22,   14,\n     83,   16,   26,   18,   19,   20,   28,   12,   32,   45,\n     25,   22,   70,   35,   29,   30,   31,   65,   33,  102,\n     35,   45,   73,   38,   60,   47,   41,   42,   43,   44,\n     35,   46,   83,   48,   45,   50,   51,   95,   53,   71,\n     95,   52,   74,   58,   59,    9,   10,   11,   12,   81,\n     14,  102,   16,   73,   18,   19,   20,   34,   90,   36,\n      1,   25,   94,   83,   81,   29,   30,   31,   66,   33,\n     68,   35,   13,   96,   38,   98,   99,   41,   42,   43,\n     44,   15,   46,  100,   48,   26,   50,   51,   14,   53,\n     71,   32,   17,   74,   58,   59,    9,   10,   11,   12,\n     81,   14,   34,   16,   36,   18,   19,   20,   82,  107,\n     44,   35,   25,   94,   71,   95,   29,   30,   31,   44,\n     33,   78,   35,   47,   81,   38,   51,   53,   41,   42,\n     43,   44,   15,   46,   71,   48,   16,   50,   51,   22,\n     53,   78,   79,    1,   81,   58,   59,    9,   10,   11,\n     12,   15,   14,   17,   16,    1,   18,   19,   20,   66,\n     34,   68,   36,   25,   16,   71,   44,   29,   30,   31,\n     28,   33,   78,   35,   52,   81,   38,   62,   63,   41,\n     42,   43,   44,   47,   46,    6,   48,    8,   50,   51,\n     16,   53,   73,    1,    2,   40,   58,   59,    9,   10,\n     11,   12,   83,   14,   77,   16,   52,   18,   19,   20,\n     98,   99,   52,   95,   25,   97,   97,   92,   29,   30,\n     31,   77,   33,   49,   35,  100,   14,   38,   16,  102,\n     41,   42,   43,   44,   73,   46,   14,   48,   14,   50,\n     51,   36,   53,   73,   83,    1,  102,   58,   59,    9,\n     10,   11,   12,   83,   14,   17,   16,   50,   18,   19,\n     20,   17,   71,   64,   65,   25,   73,   97,   15,   29,\n     30,   31,   81,   33,   26,   35,   83,   53,   38,   73,\n     32,   41,   42,   43,   44,   47,   46,   92,   48,   83,\n     50,   51,   95,   53,   97,  100,   98,   99,   58,   59,\n      9,   10,   11,   12,   23,   14,   52,   16,   16,   18,\n     19,   20,   16,    7,   50,   16,   25,   13,   13,   16,\n     29,   30,   31,   16,   33,   16,   35,   33,   33,   38,\n     44,   16,   41,   42,   43,   44,   35,   46,   16,   48,\n     95,   50,   51,   96,   53,   37,   38,   39,   81,   58,\n     59,   66,   67,   68,   69,   83,   71,   72,   95,   74,\n     75,   76,   54,   55,   56,   57,   81,   97,   60,   84,\n     95,   13,   17,   80,   89,   90,   91,    1,   93,   94,\n      2,   81,  103,   66,   67,   68,   69,   99,   71,   72,\n    108,   74,   75,   76,   81,   37,   38,   39,   81,  108,\n    108,   84,  108,  108,  108,   95,   89,   90,   91,  108,\n     93,   94,   54,   55,   56,   57,   66,  108,   68,  108,\n    108,   71,  108,  108,   74,   75,   76,  108,  108,   21,\n    108,   81,  108,  108,   84,    9,  108,  108,   12,   89,\n     90,   91,   16,   93,   94,   37,   38,   39,  108,  108,\n    108,   66,   26,   68,  104,  105,   71,  108,   32,   74,\n     75,   76,   54,   55,   56,   57,   81,    1,  108,   84,\n     73,  108,  108,  108,   89,   90,   91,  108,   93,   94,\n     83,    2,   85,   86,   87,  108,  108,  108,  108,  104,\n    105,  108,   26,    3,    4,    5,    6,  108,   32,    9,\n     10,   11,   12,  108,  108,   14,  108,   16,   18,   19,\n     20,  108,  108,  108,   35,   25,   37,   38,   39,   29,\n     30,   31,   66,  108,   68,   69,   47,   71,   72,  108,\n     74,   75,   76,   54,   55,   56,   57,   81,  108,   48,\n     84,   50,  108,  108,   53,   89,   90,   91,  108,   93,\n     94,    3,  108,  108,  108,  108,  108,    9,   10,   11,\n     12,  108,   14,  108,  108,  108,   18,   19,   20,  108,\n    108,   13,  108,   25,   27,  108,  108,   29,   30,   31,\n    108,  108,  108,    3,   37,   38,   39,  108,  108,    9,\n     10,   11,   12,  108,   14,   37,   38,   39,   18,   19,\n     20,   54,   55,   56,   57,   25,  108,   59,   60,   29,\n     30,   31,   54,   55,   56,   57,  108,  108,   66,  108,\n     68,  108,    1,   71,  108,  108,   74,   75,   76,  108,\n    108,  108,  108,   81,   13,  108,   84,  108,  108,   59,\n     60,   89,   90,   91,  108,   93,   94,   26,  108,  108,\n     66,  108,   68,   32,  108,   71,  108,  105,   74,   75,\n     76,   66,   78,   68,  108,   81,   71,  108,   84,   74,\n     75,   76,  108,   89,   90,   91,   81,   93,   94,   84,\n      9,  108,  108,   12,   89,   90,   91,   16,   93,   94,\n     66,  108,   68,  108,  108,   71,  101,  108,   74,   75,\n     76,  108,  108,  108,  108,   81,  108,  108,   84,    9,\n    108,  108,   12,   89,   90,   91,   16,   93,   94,   66,\n     49,   68,  108,  108,   71,  101,  108,   74,   75,   76,\n     66,   78,   68,  108,   81,   71,  108,   84,   74,   75,\n     76,  108,   89,   90,   91,   81,   93,   94,   84,   49,\n    108,  108,  108,   89,   90,   91,  108,   93,   94,   66,\n    108,   68,   73,  108,   71,  101,   77,   74,   75,   76,\n    108,  108,   83,  108,   81,  108,  108,   84,    9,  108,\n    108,   12,   89,   90,   91,   16,   93,   94,   66,  108,\n     68,  102,  108,   71,  108,  108,   74,   75,   76,   66,\n    108,   68,  108,   81,   71,  108,   84,   74,   75,   76,\n    108,   89,   90,   91,   81,   93,   94,   84,   49,    1,\n    108,  108,   89,   90,   91,  108,   93,   94,   66,  108,\n     68,   13,  108,   71,  108,  108,   74,   75,   76,  108,\n    108,  108,  108,   81,   26,  108,   84,  108,  108,  108,\n     32,   89,   90,   91,  108,   93,   94,   66,  108,   68,\n    108,  108,   71,  108,  108,   74,   75,   76,   66,  108,\n     68,  108,   81,   71,  108,   84,   74,   75,   76,  108,\n     89,   90,   91,   81,   93,   94,   84,  108,  108,  108,\n     73,   89,   90,   91,   77,   93,   94,   66,  108,   68,\n     83,  108,   71,  108,  108,   74,   75,   76,  108,  108,\n    108,  108,   81,  108,  108,   84,  108,  108,  108,  102,\n     89,   90,   91,  108,   93,   94,   66,  108,   68,  108,\n    108,   71,  108,  108,   74,   75,   76,   66,  108,   68,\n    108,   81,   71,  108,   84,   74,   75,   76,  108,   89,\n     90,   91,   81,   93,   94,   84,  108,  108,  108,  108,\n     89,   90,   91,  108,   93,   94,   66,  108,   68,  108,\n    108,   71,  108,  108,   74,   75,   76,  108,  108,  108,\n    108,   81,  108,  108,   84,  108,  108,  108,  108,   89,\n     90,   91,  108,   93,   94,   66,  108,   68,  108,  108,\n     71,  108,  108,   74,   75,   76,   66,  108,   68,  108,\n     81,   71,  108,   84,   74,   75,   76,  108,   89,   90,\n     91,   81,   93,   94,   84,  108,  108,  108,  108,   89,\n     90,   91,  108,   93,   94,   66,  108,   68,  108,  108,\n     71,  108,  108,   74,   75,   76,  108,  108,  108,  108,\n     81,  108,  108,   84,  108,  108,  108,  108,   89,   90,\n     91,  108,   93,   94,   66,  108,   68,  108,  108,   71,\n    108,  108,   74,   75,   76,   66,  108,   68,  108,   81,\n     71,  108,   84,   74,   75,   76,  108,   89,   90,   91,\n     81,   93,   94,   84,  108,  108,  108,  108,   89,   90,\n     91,  108,   93,   94,   66,  108,   68,  108,  108,   71,\n    108,  108,   74,   75,   76,  108,  108,  108,  108,   81,\n    108,  108,   84,  108,  108,  108,  108,   89,   90,   91,\n    108,   93,   94,   66,  108,   68,  108,  108,   71,  108,\n    108,   74,   75,   76,   66,  108,   68,  108,   81,   71,\n    108,   84,   74,   75,   76,  108,   89,   90,   91,   81,\n     93,   94,   84,  108,  108,  108,  108,   89,   90,   91,\n    108,   93,   94,   66,  108,   68,  108,  108,   71,  108,\n    108,   74,   75,   76,  108,  108,  108,  108,   81,  108,\n    108,   84,  108,  108,  108,  108,   89,   90,   91,  108,\n     93,   94,   66,  108,   68,  108,  108,   71,  108,  108,\n     74,   75,   76,   66,  108,   68,  108,   81,   71,  108,\n     84,   74,   75,   76,  108,   89,   90,   91,   81,   93,\n     94,   84,  108,  108,  108,  108,   89,   90,   91,  108,\n     93,   94,   66,  108,   68,  108,  108,   71,  108,  108,\n     74,   75,   76,  108,  108,  108,  108,   81,  108,  108,\n     84,  108,  108,  108,  108,   89,   90,   91,  108,   93,\n     94,   66,  108,   68,  108,  108,   71,  108,  108,   74,\n     75,   76,   66,  108,   68,  108,   81,   71,  108,   84,\n     74,   75,   76,  108,   89,   90,   91,   81,   93,   94,\n     84,  108,  108,  108,  108,   89,   90,   91,  108,   93,\n     94,   66,    1,   68,  108,  108,   71,  108,  108,   74,\n     75,   76,  108,  108,   13,  108,   81,  108,   17,   84,\n    108,  108,  108,  108,   89,   90,   91,   26,   93,   94,\n     66,  108,   68,   32,  108,   71,   35,  108,   74,   75,\n    108,   66,  108,   68,  108,   81,   71,  108,   47,   74,\n     75,  108,   88,   89,   90,   91,   81,   93,   94,  108,\n    108,  108,  108,   88,   89,   90,   91,  108,   93,   94,\n     66,  108,   68,    9,  108,   71,   12,  108,   74,   75,\n     16,  108,  108,  108,  108,   81,  108,  108,  108,  108,\n     26,  108,   28,   89,   90,   91,   32,   93,   94,   66,\n    108,   68,  108,  108,   71,  108,  108,   74,   75,  108,\n     66,  108,   68,  108,   81,   71,  108,  108,   74,   75,\n    108,  108,   89,   90,   91,   81,   93,   94,  108,  108,\n    108,  108,  108,   89,   90,   91,  108,   93,   94,   66,\n    108,   68,  108,   73,   71,  108,  108,   74,   75,  108,\n    108,  108,  108,   83,   81,   85,   86,   87,  108,  108,\n    108,  108,   89,   90,   91,  108,   93,   94,   66,  108,\n     68,  108,  108,   71,  108,  108,   74,   75,  108,   66,\n    108,   68,  108,   81,   71,  108,  108,   74,   75,  108,\n    108,   89,   90,   91,   81,   93,   94,  108,  108,  108,\n    108,  108,   89,   90,   91,    2,   93,   94,   66,  108,\n     68,  108,    9,   71,  108,   12,   74,   75,   15,   16,\n     17,  108,  108,   81,  108,  108,  108,  108,  108,  108,\n    108,   89,   90,   91,    2,   93,   94,  108,  108,  108,\n    108,    9,  108,  108,   12,  108,  108,   44,   16,   17,\n     47,    2,   49,  108,   51,  108,  108,   73,    9,  108,\n    108,   12,  108,  108,   15,   16,   17,   83,  108,   85,\n     86,   87,   24,  108,   26,  108,   44,  108,  108,   47,\n     32,   49,  108,   51,   52,   37,   38,   39,  108,  108,\n    108,  108,  108,   44,  108,  108,   47,  108,   49,  108,\n     51,   26,   54,   55,   56,   57,  108,   32,    2,  108,\n    108,  108,   37,   38,   39,    9,  108,  108,   12,  108,\n    108,  108,   16,   17,  108,  108,    2,  108,  108,   54,\n     55,   56,   57,    9,  108,  108,   12,  108,  108,  108,\n     16,   17,  108,  108,  108,   37,   38,   39,  108,  108,\n     44,  108,  108,   47,   13,   49,  108,   51,  108,   13,\n     52,  108,   54,   55,   56,   57,  108,   13,   44,  108,\n      2,   47,  108,   49,  108,   51,  108,  108,   37,   38,\n     39,  108,  108,   37,   38,   39,  108,  108,  108,  108,\n    108,   37,   38,   39,  108,   54,   55,   56,   57,  108,\n     54,   55,   56,   57,  108,   37,   38,   39,   54,   55,\n     56,   57,   36,   37,   38,   39,  108,  108,  108,  108,\n    108,  108,   54,   55,   56,   57,  108,  108,  108,  108,\n     54,   55,   56,   57,    9,  108,  108,   12,   37,   38,\n     39,   16,   17,   36,   37,   38,   39,  108,  108,  108,\n    108,  108,  108,  108,  108,   54,   55,   56,   57,  108,\n    108,   54,   55,   56,   57,  108,  108,  108,  108,   44,\n    108,  108,   47,  108,   49,  108,   51,\n);\n    const YY_SHIFT_USE_DFLT = -22;\n    const YY_SHIFT_MAX = 230;\n    public static $yy_shift_ofst = array(\n    -22,  501,  501,   93,  399,  399,  450,   93,   93,   93,\n    399,  450,   -9,   93,   93,   93,   93,   93,   93,  144,\n     93,  195,   93,   93,   93,  246,  195,   93,   93,   93,\n     93,   93,  297,   93,   93,   93,   93,  348,   42,   42,\n     42,   42,   42,   42,   42,   42, 1768, 1795, 1795,  701,\n    758, 1521,   80,  676,  113,  790, 1927, 1828, 1896,  568,\n    768, 1861,  757, 1866, 1874, 1888,  618,  518, 1921, 1921,\n   1921, 1921, 1921, 1921, 1921, 1921, 1921, 1921, 1921, 1921,\n   1921, 1921, 1921, 1584,  636,  285,  676,  676,  346,  113,\n    113,  402,  700, 1723,   -8,  910,  831,  269, 1028,   51,\n      3,    3,  422,  448,  352,  106,  422,  106,  458,  364,\n    434,  454,  106,  166,  166,  166,  166,  565,  166,  166,\n    166,  586,  565,  166,  166,  -22,  -22, 1752, 1769, 1826,\n   1844, 1945,  145,  979,  156,  132,  284,  106,  140,  106,\n     30,  140,  140,   30,  106,  106,  106,  140,  106,  106,\n    140,  106,  327,  106,  106,  106,  140,  140,  106,  140,\n    205,  106,  284,  166,  565,  588,  565,  588,  565,  166,\n    166,  -12,  166,  -22,  -22,  -22,  -22,  -22,  -22,  689,\n      4,   44,   84,  186,   73,  881,  199,  188,  174,  286,\n     48,  336,  384,  389,  332,  142,  -21,   52,  154,   33,\n     85,  276,  278,  233,  515,  509,  474,  516,  502,  464,\n    491,  415,  417,  432,  514,  370,  463,  506,  365,  513,\n    -12,  517,  504,  519,  505,  511,  496,  525,  532,  330,\n    358,\n);\n    const YY_REDUCE_USE_DFLT = -89;\n    const YY_REDUCE_MAX = 178;\n    public static $yy_reduce_ofst = array(\n    325,  527,  495,  666,  595,  560,  863,  874,  834,  805,\n    762,  794, 1179, 1455, 1208, 1012, 1386, 1139, 1070, 1110,\n   1150, 1219, 1248, 1277, 1288, 1317, 1346, 1357, 1415, 1426,\n   1081, 1041, 1001,  972,  943,  932,  903, 1484, 1495, 1622,\n   1633, 1662, 1593, 1564, 1553, 1524, 1704,  607, 1590,  178,\n     74, 1027,  229,  899,  273,  212,  -22,  -22,  -22,  -22,\n    -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,\n    -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,\n    -22,  -22,  -22,  380,  329,  187,  159,  127,  -52,  253,\n    304,   12,  303,  152,  193,  328,   68,   68,   68,  322,\n    328,  407,  405,  322,   68,  190,  335,  416,  403,   68,\n    401,  354,  371,   68,   68,   68,  337,  322,   68,   68,\n     68,   68,  408,   68,   68,   68,  409,  455,  455,  455,\n    455,  455,  510,  480,  455,  455,  477,  482,  457,  482,\n    473,  457,  457,  485,  482,  482,  482,  457,  482,  482,\n    457,  482,  503,  482,  482,  482,  457,  457,  482,  457,\n    520,  482,  523,  -88,  498,  489,  498,  489,  498,  -88,\n    -88,  -67,  -88,  111,  155,   89,  236,  230,  162,\n);\n    public static $yyExpectedTokens = array(\n         array(),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(24, 26, 32, 37, 38, 39, 54, 55, 56, 57, ),\n         array(26, 32, 37, 38, 39, 54, 55, 56, 57, ),\n         array(26, 32, 37, 38, 39, 54, 55, 56, 57, ),\n         array(14, 16, 48, 50, 53, ),\n         array(3, 9, 10, 11, 12, 14, 18, 19, 20, 25, 29, 30, 31, 59, 60, ),\n         array(1, 13, 17, 26, 32, 35, 47, ),\n         array(14, 16, 50, 53, ),\n         array(1, 26, 32, ),\n         array(14, 35, 53, ),\n         array(3, 9, 10, 11, 12, 14, 18, 19, 20, 25, 29, 30, 31, 59, 60, ),\n         array(36, 37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 52, 54, 55, 56, 57, ),\n         array(36, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(27, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(2, 37, 38, 39, 54, 55, 56, 57, ),\n         array(21, 37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, 60, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(9, 12, 16, 26, 28, 32, ),\n         array(9, 12, 16, 26, 32, ),\n         array(17, 44, 51, ),\n         array(1, 26, 32, ),\n         array(1, 26, 32, ),\n         array(15, 17, 47, ),\n         array(14, 35, 53, ),\n         array(14, 35, 53, ),\n         array(1, 2, ),\n         array(3, 4, 5, 6, 9, 10, 11, 12, 18, 19, 20, 25, 29, 30, 31, ),\n         array(2, 9, 12, 15, 16, 17, 44, 47, 49, 51, ),\n         array(12, 14, 16, 53, ),\n         array(9, 12, 16, 49, ),\n         array(1, 13, 26, 32, ),\n         array(1, 13, 26, 32, ),\n         array(1, 13, 26, 32, ),\n         array(15, 17, 47, ),\n         array(9, 12, 16, ),\n         array(9, 12, 16, ),\n         array(14, 16, ),\n         array(17, 47, ),\n         array(1, 28, ),\n         array(26, 32, ),\n         array(14, 16, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(1, 52, ),\n         array(14, 53, ),\n         array(1, 17, ),\n         array(26, 32, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(17, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(17, ),\n         array(1, ),\n         array(1, ),\n         array(),\n         array(),\n         array(2, 9, 12, 16, 17, 44, 47, 49, 51, 52, ),\n         array(2, 9, 12, 15, 16, 17, 44, 47, 49, 51, ),\n         array(2, 9, 12, 16, 17, 44, 47, 49, 51, ),\n         array(2, 9, 12, 16, 17, 44, 47, 49, 51, ),\n         array(9, 12, 16, 17, 44, 47, 49, 51, ),\n         array(12, 14, 16, 33, 53, ),\n         array(9, 12, 16, 49, ),\n         array(9, 12, 16, ),\n         array(15, 44, 51, ),\n         array(14, 53, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(15, 22, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(12, 35, ),\n         array(26, 32, ),\n         array(14, 53, ),\n         array(1, ),\n         array(17, ),\n         array(2, ),\n         array(17, ),\n         array(2, ),\n         array(17, ),\n         array(1, ),\n         array(1, ),\n         array(35, ),\n         array(1, ),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(2, 35, 37, 38, 39, 47, 54, 55, 56, 57, ),\n         array(13, 21, 23, 26, 32, 34, 36, 44, ),\n         array(13, 15, 26, 32, 35, 47, ),\n         array(13, 22, 26, 32, 45, ),\n         array(13, 22, 26, 32, 45, ),\n         array(35, 44, 47, 52, ),\n         array(9, 12, 16, 49, ),\n         array(22, 45, 52, ),\n         array(28, 35, 47, ),\n         array(22, 45, 60, ),\n         array(35, 47, ),\n         array(21, 34, ),\n         array(34, 36, ),\n         array(16, 49, ),\n         array(6, 8, ),\n         array(44, 52, ),\n         array(7, 8, ),\n         array(34, 52, ),\n         array(35, 47, ),\n         array(35, 47, ),\n         array(22, 45, ),\n         array(34, 36, ),\n         array(15, 44, ),\n         array(34, 36, ),\n         array(34, 36, ),\n         array(13, ),\n         array(16, ),\n         array(50, ),\n         array(7, ),\n         array(16, ),\n         array(52, ),\n         array(23, ),\n         array(36, ),\n         array(50, ),\n         array(14, ),\n         array(13, ),\n         array(52, ),\n         array(15, ),\n         array(16, ),\n         array(40, ),\n         array(16, ),\n         array(35, ),\n         array(16, ),\n         array(33, ),\n         array(16, ),\n         array(33, ),\n         array(35, ),\n         array(44, ),\n         array(16, ),\n         array(16, ),\n         array(16, ),\n         array(16, ),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n);\n    public static $yy_default = array(\n    336,  512,  512,  512,  497,  497,  512,  474,  474,  474,\n    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,\n    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,\n    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,\n    512,  512,  512,  512,  512,  512,  377,  377,  356,  512,\n    512,  413,  512,  377,  512,  512,  512,  512,  512,  512,\n    512,  512,  382,  512,  349,  512,  512,  512,  382,  379,\n    389,  388,  384,  402,  473,  397,  498,  500,  401,  361,\n    472,  499,  349,  377,  377,  487,  377,  377,  429,  512,\n    512,  368,  326,  428,  512,  439,  391,  391,  391,  429,\n    439,  439,  512,  429,  391,  377,  512,  377,  377,  391,\n    512,  371,  358,  395,  394,  396,  373,  429,  400,  404,\n    391,  404,  484,  406,  405,  481,  334,  428,  428,  428,\n    428,  428,  512,  441,  439,  455,  512,  363,  435,  354,\n    434,  437,  433,  432,  359,  357,  364,  436,  353,  367,\n    466,  365,  512,  352,  350,  360,  467,  465,  346,  464,\n    439,  366,  512,  369,  461,  475,  488,  476,  485,  372,\n    422,  439,  374,  480,  439,  480,  480,  439,  334,  413,\n    409,  413,  403,  403,  413,  440,  403,  413,  403,  413,\n    512,  512,  512,  332,  409,  512,  512,  512,  423,  403,\n    512,  409,  512,  512,  512,  512,  512,  512,  512,  418,\n    385,  512,  512,  512,  512,  512,  512,  512,  415,  512,\n    455,  512,  512,  512,  411,  486,  409,  512,  512,  512,\n    512,  419,  407,  362,  445,  418,  425,  424,  420,  339,\n    460,  421,  483,  398,  416,  340,  399,  455,  378,  337,\n    338,  330,  328,  329,  442,  443,  444,  438,  392,  393,\n    427,  426,  386,  417,  408,  390,  410,  331,  333,  335,\n    412,  470,  414,  415,  503,  478,  495,  471,  459,  458,\n    375,  457,  344,  462,  508,  493,  376,  496,  456,  509,\n    494,  501,  504,  511,  510,  507,  505,  502,  506,  345,\n    468,  469,  446,  355,  341,  452,  450,  454,  448,  453,\n    447,  489,  490,  491,  463,  449,  492,  451,  327,  342,\n    343,  370,  430,  431,  479,  477,\n);\n    const YYNOCODE = 109;\n    const YYSTACKDEPTH = 500;\n    const YYNSTATE = 326;\n    const YYNRULE = 186;\n    const YYERRORSYMBOL = 61;\n    const YYERRSYMDT = 'yy0';\n    const YYFALLBACK = 0;\n    public static $yyFallback = array(\n    );\n    public function Trace($TraceFILE, $zTracePrompt)\n    {\n        if (!$TraceFILE) {\n            $zTracePrompt = 0;\n        } elseif (!$zTracePrompt) {\n            $TraceFILE = 0;\n        }\n        $this->yyTraceFILE = $TraceFILE;\n        $this->yyTracePrompt = $zTracePrompt;\n    }\n\n    public function PrintTrace()\n    {\n        $this->yyTraceFILE = fopen('php://output', 'w');\n        $this->yyTracePrompt = '<br>';\n    }\n\n    public $yyTraceFILE;\n    public $yyTracePrompt;\n    public $yyidx;                    /* Index of top element in stack */\n    public $yyerrcnt;                 /* Shifts left before out of the error */\n    public $yystack = array();  /* The parser's stack */\n\n    public $yyTokenName = array(\n  '$',             'VERT',          'COLON',         'TEXT',        \n  'STRIPON',       'STRIPOFF',      'LITERALSTART',  'LITERALEND',  \n  'LITERAL',       'SIMPELOUTPUT',  'SIMPLETAG',     'SMARTYBLOCKCHILDPARENT',\n  'LDEL',          'RDEL',          'DOLLARID',      'EQUAL',       \n  'ID',            'PTR',           'LDELMAKENOCACHE',  'LDELIF',      \n  'LDELFOR',       'SEMICOLON',     'INCDEC',        'TO',          \n  'STEP',          'LDELFOREACH',   'SPACE',         'AS',          \n  'APTR',          'LDELSETFILTER',  'CLOSETAG',      'LDELSLASH',   \n  'ATTR',          'INTEGER',       'COMMA',         'OPENP',       \n  'CLOSEP',        'MATH',          'UNIMATH',       'ISIN',        \n  'QMARK',         'NOT',           'TYPECAST',      'HEX',         \n  'DOT',           'INSTANCEOF',    'SINGLEQUOTESTRING',  'DOUBLECOLON', \n  'NAMESPACE',     'AT',            'HATCH',         'OPENB',       \n  'CLOSEB',        'DOLLAR',        'LOGOP',         'SLOGOP',      \n  'TLOGOP',        'SINGLECOND',    'ARRAYOPEN',     'QUOTE',       \n  'BACKTICK',      'error',         'start',         'template',    \n  'literal_e2',    'literal_e1',    'smartytag',     'tagbody',     \n  'tag',           'outattr',       'eqoutattr',     'varindexed',  \n  'output',        'attributes',    'variable',      'value',       \n  'expr',          'modifierlist',  'statement',     'statements',  \n  'foraction',     'varvar',        'modparameters',  'attribute',   \n  'ternary',       'tlop',          'lop',           'scond',       \n  'array',         'function',      'ns1',           'doublequoted_with_quotes',\n  'static_class_access',  'arraydef',      'object',        'arrayindex',  \n  'indexdef',      'varvarele',     'objectchain',   'objectelement',\n  'method',        'params',        'modifier',      'modparameter',\n  'arrayelements',  'arrayelement',  'doublequoted',  'doublequotedcontent',\n    );\n\n    public static $yyRuleName = array(\n  'start ::= template',\n  'template ::= template TEXT',\n  'template ::= template STRIPON',\n  'template ::= template STRIPOFF',\n  'template ::= template LITERALSTART literal_e2 LITERALEND',\n  'literal_e2 ::= literal_e1 LITERALSTART literal_e1 LITERALEND',\n  'literal_e2 ::= literal_e1',\n  'literal_e1 ::= literal_e1 LITERAL',\n  'literal_e1 ::=',\n  'template ::= template smartytag',\n  'template ::=',\n  'smartytag ::= SIMPELOUTPUT',\n  'smartytag ::= SIMPLETAG',\n  'smartytag ::= SMARTYBLOCKCHILDPARENT',\n  'smartytag ::= LDEL tagbody RDEL',\n  'smartytag ::= tag RDEL',\n  'tagbody ::= outattr',\n  'tagbody ::= DOLLARID eqoutattr',\n  'tagbody ::= varindexed eqoutattr',\n  'eqoutattr ::= EQUAL outattr',\n  'outattr ::= output attributes',\n  'output ::= variable',\n  'output ::= value',\n  'output ::= expr',\n  'tag ::= LDEL ID attributes',\n  'tag ::= LDEL ID',\n  'tag ::= LDEL ID modifierlist attributes',\n  'tag ::= LDEL ID PTR ID attributes',\n  'tag ::= LDEL ID PTR ID modifierlist attributes',\n  'tag ::= LDELMAKENOCACHE DOLLARID',\n  'tag ::= LDELIF expr',\n  'tag ::= LDELIF expr attributes',\n  'tag ::= LDELIF statement',\n  'tag ::= LDELIF statement attributes',\n  'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',\n  'foraction ::= EQUAL expr',\n  'foraction ::= INCDEC',\n  'tag ::= LDELFOR statement TO expr attributes',\n  'tag ::= LDELFOR statement TO expr STEP expr attributes',\n  'tag ::= LDELFOREACH SPACE expr AS varvar attributes',\n  'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',\n  'tag ::= LDELFOREACH attributes',\n  'tag ::= LDELSETFILTER ID modparameters',\n  'tag ::= LDELSETFILTER ID modparameters modifierlist',\n  'smartytag ::= CLOSETAG',\n  'tag ::= LDELSLASH ID',\n  'tag ::= LDELSLASH ID modifierlist',\n  'tag ::= LDELSLASH ID PTR ID',\n  'tag ::= LDELSLASH ID PTR ID modifierlist',\n  'attributes ::= attributes attribute',\n  'attributes ::= attribute',\n  'attributes ::=',\n  'attribute ::= SPACE ID EQUAL ID',\n  'attribute ::= ATTR expr',\n  'attribute ::= ATTR value',\n  'attribute ::= SPACE ID',\n  'attribute ::= SPACE expr',\n  'attribute ::= SPACE value',\n  'attribute ::= SPACE INTEGER EQUAL expr',\n  'statements ::= statement',\n  'statements ::= statements COMMA statement',\n  'statement ::= DOLLARID EQUAL INTEGER',\n  'statement ::= DOLLARID EQUAL expr',\n  'statement ::= varindexed EQUAL expr',\n  'statement ::= OPENP statement CLOSEP',\n  'expr ::= value',\n  'expr ::= ternary',\n  'expr ::= DOLLARID COLON ID',\n  'expr ::= expr MATH value',\n  'expr ::= expr UNIMATH value',\n  'expr ::= expr tlop value',\n  'expr ::= expr lop expr',\n  'expr ::= expr scond',\n  'expr ::= expr ISIN array',\n  'expr ::= expr ISIN value',\n  'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',\n  'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr',\n  'value ::= variable',\n  'value ::= UNIMATH value',\n  'value ::= NOT value',\n  'value ::= TYPECAST value',\n  'value ::= variable INCDEC',\n  'value ::= HEX',\n  'value ::= INTEGER',\n  'value ::= INTEGER DOT INTEGER',\n  'value ::= INTEGER DOT',\n  'value ::= DOT INTEGER',\n  'value ::= ID',\n  'value ::= function',\n  'value ::= OPENP expr CLOSEP',\n  'value ::= variable INSTANCEOF ns1',\n  'value ::= variable INSTANCEOF variable',\n  'value ::= SINGLEQUOTESTRING',\n  'value ::= doublequoted_with_quotes',\n  'value ::= varindexed DOUBLECOLON static_class_access',\n  'value ::= smartytag',\n  'value ::= value modifierlist',\n  'value ::= NAMESPACE',\n  'value ::= arraydef',\n  'value ::= ns1 DOUBLECOLON static_class_access',\n  'ns1 ::= ID',\n  'ns1 ::= NAMESPACE',\n  'variable ::= DOLLARID',\n  'variable ::= varindexed',\n  'variable ::= varvar AT ID',\n  'variable ::= object',\n  'variable ::= HATCH ID HATCH',\n  'variable ::= HATCH ID HATCH arrayindex',\n  'variable ::= HATCH variable HATCH',\n  'variable ::= HATCH variable HATCH arrayindex',\n  'varindexed ::= DOLLARID arrayindex',\n  'varindexed ::= varvar arrayindex',\n  'arrayindex ::= arrayindex indexdef',\n  'arrayindex ::=',\n  'indexdef ::= DOT DOLLARID',\n  'indexdef ::= DOT varvar',\n  'indexdef ::= DOT varvar AT ID',\n  'indexdef ::= DOT ID',\n  'indexdef ::= DOT INTEGER',\n  'indexdef ::= DOT LDEL expr RDEL',\n  'indexdef ::= OPENB ID CLOSEB',\n  'indexdef ::= OPENB ID DOT ID CLOSEB',\n  'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',\n  'indexdef ::= OPENB INTEGER CLOSEB',\n  'indexdef ::= OPENB DOLLARID CLOSEB',\n  'indexdef ::= OPENB variable CLOSEB',\n  'indexdef ::= OPENB value CLOSEB',\n  'indexdef ::= OPENB expr CLOSEB',\n  'indexdef ::= OPENB CLOSEB',\n  'varvar ::= DOLLARID',\n  'varvar ::= DOLLAR',\n  'varvar ::= varvar varvarele',\n  'varvarele ::= ID',\n  'varvarele ::= SIMPELOUTPUT',\n  'varvarele ::= LDEL expr RDEL',\n  'object ::= varindexed objectchain',\n  'objectchain ::= objectelement',\n  'objectchain ::= objectchain objectelement',\n  'objectelement ::= PTR ID arrayindex',\n  'objectelement ::= PTR varvar arrayindex',\n  'objectelement ::= PTR LDEL expr RDEL arrayindex',\n  'objectelement ::= PTR ID LDEL expr RDEL arrayindex',\n  'objectelement ::= PTR method',\n  'function ::= ns1 OPENP params CLOSEP',\n  'method ::= ID OPENP params CLOSEP',\n  'method ::= DOLLARID OPENP params CLOSEP',\n  'params ::= params COMMA expr',\n  'params ::= expr',\n  'params ::=',\n  'modifierlist ::= modifierlist modifier modparameters',\n  'modifierlist ::= modifier modparameters',\n  'modifier ::= VERT AT ID',\n  'modifier ::= VERT ID',\n  'modparameters ::= modparameters modparameter',\n  'modparameters ::=',\n  'modparameter ::= COLON value',\n  'modparameter ::= COLON UNIMATH value',\n  'modparameter ::= COLON array',\n  'static_class_access ::= method',\n  'static_class_access ::= method objectchain',\n  'static_class_access ::= ID',\n  'static_class_access ::= DOLLARID arrayindex',\n  'static_class_access ::= DOLLARID arrayindex objectchain',\n  'lop ::= LOGOP',\n  'lop ::= SLOGOP',\n  'tlop ::= TLOGOP',\n  'scond ::= SINGLECOND',\n  'arraydef ::= OPENB arrayelements CLOSEB',\n  'arraydef ::= ARRAYOPEN arrayelements CLOSEP',\n  'arrayelements ::= arrayelement',\n  'arrayelements ::= arrayelements COMMA arrayelement',\n  'arrayelements ::=',\n  'arrayelement ::= value APTR expr',\n  'arrayelement ::= ID APTR expr',\n  'arrayelement ::= expr',\n  'doublequoted_with_quotes ::= QUOTE QUOTE',\n  'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',\n  'doublequoted ::= doublequoted doublequotedcontent',\n  'doublequoted ::= doublequotedcontent',\n  'doublequotedcontent ::= BACKTICK variable BACKTICK',\n  'doublequotedcontent ::= BACKTICK expr BACKTICK',\n  'doublequotedcontent ::= DOLLARID',\n  'doublequotedcontent ::= LDEL variable RDEL',\n  'doublequotedcontent ::= LDEL expr RDEL',\n  'doublequotedcontent ::= smartytag',\n  'doublequotedcontent ::= TEXT',\n    );\n\n    public function tokenName($tokenType)\n    {\n        if ($tokenType === 0) {\n            return 'End of Input';\n        }\n        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {\n            return $this->yyTokenName[$tokenType];\n        } else {\n            return 'Unknown';\n        }\n    }\n\n    public static function yy_destructor($yymajor, $yypminor)\n    {\n        switch ($yymajor) {\n            default:  break;   /* If no destructor action specified: do nothing */\n        }\n    }\n\n    public function yy_pop_parser_stack()\n    {\n        if (empty($this->yystack)) {\n            return;\n        }\n        $yytos = array_pop($this->yystack);\n        if ($this->yyTraceFILE && $this->yyidx >= 0) {\n            fwrite($this->yyTraceFILE,\n                $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .\n                    \"\\n\");\n        }\n        $yymajor = $yytos->major;\n        self::yy_destructor($yymajor, $yytos->minor);\n        $this->yyidx--;\n\n        return $yymajor;\n    }\n\n    public function __destruct()\n    {\n        while ($this->yystack !== Array()) {\n            $this->yy_pop_parser_stack();\n        }\n        if (is_resource($this->yyTraceFILE)) {\n            fclose($this->yyTraceFILE);\n        }\n    }\n\n    public function yy_get_expected_tokens($token)\n    {\n        static $res3 = array();\n        static $res4 = array();\n        $state = $this->yystack[$this->yyidx]->stateno;\n        $expected = self::$yyExpectedTokens[$state];\n        if (isset($res3[$state][$token])) {\n            if ($res3[$state][$token]) {\n                return $expected;\n            }\n        } else {\n            if ($res3[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {\n                return $expected;\n            }\n        }\n        $stack = $this->yystack;\n        $yyidx = $this->yyidx;\n        do {\n            $yyact = $this->yy_find_shift_action($token);\n            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {\n                // reduce action\n                $done = 0;\n                do {\n                    if ($done++ === 100) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // too much recursion prevents proper detection\n                        // so give up\n                        return array_unique($expected);\n                    }\n                    $yyruleno = $yyact - self::YYNSTATE;\n                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];\n                    $nextstate = $this->yy_find_reduce_action(\n                        $this->yystack[$this->yyidx]->stateno,\n                        self::$yyRuleInfo[$yyruleno][0]);\n                    if (isset(self::$yyExpectedTokens[$nextstate])) {\n                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);\n                        if (isset($res4[$nextstate][$token])) {\n                            if ($res4[$nextstate][$token]) {\n                                $this->yyidx = $yyidx;\n                                $this->yystack = $stack;\n                                return array_unique($expected);\n                            }\n                        } else {\n                            if ($res4[$nextstate][$token] = in_array($token, self::$yyExpectedTokens[$nextstate], true)) {\n                                $this->yyidx = $yyidx;\n                                $this->yystack = $stack;\n                                return array_unique($expected);\n                            }\n                        }\n                    }\n                    if ($nextstate < self::YYNSTATE) {\n                        // we need to shift a non-terminal\n                        $this->yyidx++;\n                        $x = new TP_yyStackEntry;\n                        $x->stateno = $nextstate;\n                        $x->major = self::$yyRuleInfo[$yyruleno][0];\n                        $this->yystack[$this->yyidx] = $x;\n                        continue 2;\n                    } elseif ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // the last token was just ignored, we can't accept\n                        // by ignoring input, this is in essence ignoring a\n                        // syntax error!\n                        return array_unique($expected);\n                    } elseif ($nextstate === self::YY_NO_ACTION) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // input accepted, but not shifted (I guess)\n                        return $expected;\n                    } else {\n                        $yyact = $nextstate;\n                    }\n                } while (true);\n            }\n            break;\n        } while (true);\n    $this->yyidx = $yyidx;\n    $this->yystack = $stack;\n\n        return array_unique($expected);\n    }\n\n    public function yy_is_expected_token($token)\n    {\n        static $res = array();\n        static $res2 = array();\n        if ($token === 0) {\n            return true; // 0 is not part of this\n        }\n        $state = $this->yystack[$this->yyidx]->stateno;\n        if (isset($res[$state][$token])) {\n            if ($res[$state][$token]) {\n                return true;\n            }\n        } else {\n            if ($res[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {\n                return true;\n            }\n       }\n        $stack = $this->yystack;\n        $yyidx = $this->yyidx;\n        do {\n            $yyact = $this->yy_find_shift_action($token);\n            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {\n                // reduce action\n                $done = 0;\n                do {\n                    if ($done++ === 100) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // too much recursion prevents proper detection\n                        // so give up\n                        return true;\n                    }\n                    $yyruleno = $yyact - self::YYNSTATE;\n                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];\n                    $nextstate = $this->yy_find_reduce_action(\n                        $this->yystack[$this->yyidx]->stateno,\n                        self::$yyRuleInfo[$yyruleno][0]);\n                    if (isset($res2[$nextstate][$token])) {\n                        if ($res2[$nextstate][$token]) {\n                            $this->yyidx = $yyidx;\n                            $this->yystack = $stack;\n                            return true;\n                        }\n                    } else {\n                        if ($res2[$nextstate][$token] = (isset(self::$yyExpectedTokens[$nextstate]) && in_array($token, self::$yyExpectedTokens[$nextstate], true))) {\n                            $this->yyidx = $yyidx;\n                            $this->yystack = $stack;\n                            return true;\n                        }\n                    }\n                    if ($nextstate < self::YYNSTATE) {\n                        // we need to shift a non-terminal\n                        $this->yyidx++;\n                        $x = new TP_yyStackEntry;\n                        $x->stateno = $nextstate;\n                        $x->major = self::$yyRuleInfo[$yyruleno][0];\n                        $this->yystack[$this->yyidx] = $x;\n                        continue 2;\n                    } elseif ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        if (!$token) {\n                            // end of input: this is valid\n                            return true;\n                        }\n                        // the last token was just ignored, we can't accept\n                        // by ignoring input, this is in essence ignoring a\n                        // syntax error!\n                        return false;\n                    } elseif ($nextstate === self::YY_NO_ACTION) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // input accepted, but not shifted (I guess)\n                        return true;\n                    } else {\n                        $yyact = $nextstate;\n                    }\n                } while (true);\n            }\n            break;\n        } while (true);\n        $this->yyidx = $yyidx;\n        $this->yystack = $stack;\n\n        return true;\n    }\n\n   public function yy_find_shift_action($iLookAhead)\n    {\n        $stateno = $this->yystack[$this->yyidx]->stateno;\n\n        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */\n        if (!isset(self::$yy_shift_ofst[$stateno])) {\n            // no shift actions\n            return self::$yy_default[$stateno];\n        }\n        $i = self::$yy_shift_ofst[$stateno];\n        if ($i === self::YY_SHIFT_USE_DFLT) {\n            return self::$yy_default[$stateno];\n        }\n        if ($iLookAhead === self::YYNOCODE) {\n            return self::YY_NO_ACTION;\n        }\n        $i += $iLookAhead;\n        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||\n              self::$yy_lookahead[$i] != $iLookAhead) {\n            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)\n                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {\n                if ($this->yyTraceFILE) {\n                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . 'FALLBACK ' .\n                        $this->yyTokenName[$iLookAhead] . ' => ' .\n                        $this->yyTokenName[$iFallback] . \"\\n\");\n                }\n\n                return $this->yy_find_shift_action($iFallback);\n            }\n\n            return self::$yy_default[$stateno];\n        } else {\n            return self::$yy_action[$i];\n        }\n    }\n\n    public function yy_find_reduce_action($stateno, $iLookAhead)\n    {\n        /* $stateno = $this->yystack[$this->yyidx]->stateno; */\n\n        if (!isset(self::$yy_reduce_ofst[$stateno])) {\n            return self::$yy_default[$stateno];\n        }\n        $i = self::$yy_reduce_ofst[$stateno];\n        if ($i === self::YY_REDUCE_USE_DFLT) {\n            return self::$yy_default[$stateno];\n        }\n        if ($iLookAhead === self::YYNOCODE) {\n            return self::YY_NO_ACTION;\n        }\n        $i += $iLookAhead;\n        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||\n              self::$yy_lookahead[$i] != $iLookAhead) {\n            return self::$yy_default[$stateno];\n        } else {\n            return self::$yy_action[$i];\n        }\n    }\n\n    public function yy_shift($yyNewState, $yyMajor, $yypMinor)\n    {\n        $this->yyidx++;\n        if ($this->yyidx >= self::YYSTACKDEPTH) {\n            $this->yyidx--;\n            if ($this->yyTraceFILE) {\n                fprintf($this->yyTraceFILE, \"%sStack Overflow!\\n\", $this->yyTracePrompt);\n            }\n            while ($this->yyidx >= 0) {\n                $this->yy_pop_parser_stack();\n            }\n// line 220 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    $this->internalError = true;\n    $this->compiler->trigger_template_error('Stack overflow in template parser');\n\n            return;\n        }\n        $yytos = new TP_yyStackEntry;\n        $yytos->stateno = $yyNewState;\n        $yytos->major = $yyMajor;\n        $yytos->minor = $yypMinor;\n        $this->yystack[] = $yytos;\n        if ($this->yyTraceFILE && $this->yyidx > 0) {\n            fprintf($this->yyTraceFILE, \"%sShift %d\\n\", $this->yyTracePrompt,\n                $yyNewState);\n            fprintf($this->yyTraceFILE, \"%sStack:\", $this->yyTracePrompt);\n            for ($i = 1; $i <= $this->yyidx; $i++) {\n                fprintf($this->yyTraceFILE, \" %s\",\n                    $this->yyTokenName[$this->yystack[$i]->major]);\n            }\n            fwrite($this->yyTraceFILE,\"\\n\");\n        }\n    }\n\n    public static $yyRuleInfo = array(\n  array( 0 => 62, 1 => 1 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 4 ),\n  array( 0 => 64, 1 => 4 ),\n  array( 0 => 64, 1 => 1 ),\n  array( 0 => 65, 1 => 2 ),\n  array( 0 => 65, 1 => 0 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 0 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 66, 1 => 3 ),\n  array( 0 => 66, 1 => 2 ),\n  array( 0 => 67, 1 => 1 ),\n  array( 0 => 67, 1 => 2 ),\n  array( 0 => 67, 1 => 2 ),\n  array( 0 => 70, 1 => 2 ),\n  array( 0 => 69, 1 => 2 ),\n  array( 0 => 72, 1 => 1 ),\n  array( 0 => 72, 1 => 1 ),\n  array( 0 => 72, 1 => 1 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 4 ),\n  array( 0 => 68, 1 => 5 ),\n  array( 0 => 68, 1 => 6 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 8 ),\n  array( 0 => 80, 1 => 2 ),\n  array( 0 => 80, 1 => 1 ),\n  array( 0 => 68, 1 => 5 ),\n  array( 0 => 68, 1 => 7 ),\n  array( 0 => 68, 1 => 6 ),\n  array( 0 => 68, 1 => 8 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 4 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 4 ),\n  array( 0 => 68, 1 => 5 ),\n  array( 0 => 73, 1 => 2 ),\n  array( 0 => 73, 1 => 1 ),\n  array( 0 => 73, 1 => 0 ),\n  array( 0 => 83, 1 => 4 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 4 ),\n  array( 0 => 79, 1 => 1 ),\n  array( 0 => 79, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 76, 1 => 1 ),\n  array( 0 => 76, 1 => 1 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 2 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 84, 1 => 7 ),\n  array( 0 => 84, 1 => 7 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 90, 1 => 1 ),\n  array( 0 => 90, 1 => 1 ),\n  array( 0 => 74, 1 => 1 ),\n  array( 0 => 74, 1 => 1 ),\n  array( 0 => 74, 1 => 3 ),\n  array( 0 => 74, 1 => 1 ),\n  array( 0 => 74, 1 => 3 ),\n  array( 0 => 74, 1 => 4 ),\n  array( 0 => 74, 1 => 3 ),\n  array( 0 => 74, 1 => 4 ),\n  array( 0 => 71, 1 => 2 ),\n  array( 0 => 71, 1 => 2 ),\n  array( 0 => 95, 1 => 2 ),\n  array( 0 => 95, 1 => 0 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 4 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 4 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 5 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 81, 1 => 1 ),\n  array( 0 => 81, 1 => 1 ),\n  array( 0 => 81, 1 => 2 ),\n  array( 0 => 97, 1 => 1 ),\n  array( 0 => 97, 1 => 1 ),\n  array( 0 => 97, 1 => 3 ),\n  array( 0 => 94, 1 => 2 ),\n  array( 0 => 98, 1 => 1 ),\n  array( 0 => 98, 1 => 2 ),\n  array( 0 => 99, 1 => 3 ),\n  array( 0 => 99, 1 => 3 ),\n  array( 0 => 99, 1 => 5 ),\n  array( 0 => 99, 1 => 6 ),\n  array( 0 => 99, 1 => 2 ),\n  array( 0 => 89, 1 => 4 ),\n  array( 0 => 100, 1 => 4 ),\n  array( 0 => 100, 1 => 4 ),\n  array( 0 => 101, 1 => 3 ),\n  array( 0 => 101, 1 => 1 ),\n  array( 0 => 101, 1 => 0 ),\n  array( 0 => 77, 1 => 3 ),\n  array( 0 => 77, 1 => 2 ),\n  array( 0 => 102, 1 => 3 ),\n  array( 0 => 102, 1 => 2 ),\n  array( 0 => 82, 1 => 2 ),\n  array( 0 => 82, 1 => 0 ),\n  array( 0 => 103, 1 => 2 ),\n  array( 0 => 103, 1 => 3 ),\n  array( 0 => 103, 1 => 2 ),\n  array( 0 => 92, 1 => 1 ),\n  array( 0 => 92, 1 => 2 ),\n  array( 0 => 92, 1 => 1 ),\n  array( 0 => 92, 1 => 2 ),\n  array( 0 => 92, 1 => 3 ),\n  array( 0 => 86, 1 => 1 ),\n  array( 0 => 86, 1 => 1 ),\n  array( 0 => 85, 1 => 1 ),\n  array( 0 => 87, 1 => 1 ),\n  array( 0 => 93, 1 => 3 ),\n  array( 0 => 93, 1 => 3 ),\n  array( 0 => 104, 1 => 1 ),\n  array( 0 => 104, 1 => 3 ),\n  array( 0 => 104, 1 => 0 ),\n  array( 0 => 105, 1 => 3 ),\n  array( 0 => 105, 1 => 3 ),\n  array( 0 => 105, 1 => 1 ),\n  array( 0 => 91, 1 => 2 ),\n  array( 0 => 91, 1 => 3 ),\n  array( 0 => 106, 1 => 2 ),\n  array( 0 => 106, 1 => 1 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 1 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 1 ),\n  array( 0 => 107, 1 => 1 ),\n    );\n\n    public static $yyReduceMap = array(\n        0 => 0,\n        1 => 1,\n        2 => 2,\n        3 => 3,\n        4 => 4,\n        5 => 5,\n        6 => 6,\n        21 => 6,\n        22 => 6,\n        23 => 6,\n        36 => 6,\n        56 => 6,\n        57 => 6,\n        65 => 6,\n        66 => 6,\n        77 => 6,\n        82 => 6,\n        83 => 6,\n        88 => 6,\n        92 => 6,\n        93 => 6,\n        97 => 6,\n        98 => 6,\n        100 => 6,\n        105 => 6,\n        169 => 6,\n        174 => 6,\n        7 => 7,\n        8 => 8,\n        9 => 9,\n        11 => 11,\n        12 => 12,\n        13 => 13,\n        14 => 14,\n        15 => 15,\n        16 => 16,\n        17 => 17,\n        18 => 18,\n        19 => 19,\n        20 => 20,\n        24 => 24,\n        25 => 25,\n        26 => 26,\n        27 => 27,\n        28 => 28,\n        29 => 29,\n        30 => 30,\n        31 => 31,\n        33 => 31,\n        32 => 32,\n        34 => 34,\n        35 => 35,\n        37 => 37,\n        38 => 38,\n        39 => 39,\n        40 => 40,\n        41 => 41,\n        42 => 42,\n        43 => 43,\n        44 => 44,\n        45 => 45,\n        46 => 46,\n        47 => 47,\n        48 => 48,\n        49 => 49,\n        50 => 50,\n        59 => 50,\n        147 => 50,\n        151 => 50,\n        155 => 50,\n        157 => 50,\n        51 => 51,\n        148 => 51,\n        154 => 51,\n        52 => 52,\n        53 => 53,\n        54 => 53,\n        55 => 55,\n        132 => 55,\n        58 => 58,\n        60 => 60,\n        61 => 61,\n        62 => 61,\n        63 => 63,\n        64 => 64,\n        67 => 67,\n        68 => 68,\n        69 => 68,\n        70 => 70,\n        71 => 71,\n        72 => 72,\n        73 => 73,\n        74 => 74,\n        75 => 75,\n        76 => 76,\n        78 => 78,\n        80 => 78,\n        81 => 78,\n        112 => 78,\n        79 => 79,\n        84 => 84,\n        85 => 85,\n        86 => 86,\n        87 => 87,\n        89 => 89,\n        90 => 90,\n        91 => 90,\n        94 => 94,\n        95 => 95,\n        96 => 96,\n        99 => 99,\n        101 => 101,\n        102 => 102,\n        103 => 103,\n        104 => 104,\n        106 => 106,\n        107 => 107,\n        108 => 108,\n        109 => 109,\n        110 => 110,\n        111 => 111,\n        113 => 113,\n        171 => 113,\n        114 => 114,\n        115 => 115,\n        116 => 116,\n        117 => 117,\n        118 => 118,\n        119 => 119,\n        127 => 119,\n        120 => 120,\n        121 => 121,\n        122 => 122,\n        123 => 122,\n        125 => 122,\n        126 => 122,\n        124 => 124,\n        128 => 128,\n        129 => 129,\n        130 => 130,\n        175 => 130,\n        131 => 131,\n        133 => 133,\n        134 => 134,\n        135 => 135,\n        136 => 136,\n        137 => 137,\n        138 => 138,\n        139 => 139,\n        140 => 140,\n        141 => 141,\n        142 => 142,\n        143 => 143,\n        144 => 144,\n        145 => 145,\n        146 => 146,\n        149 => 149,\n        150 => 150,\n        152 => 152,\n        153 => 153,\n        156 => 156,\n        158 => 158,\n        159 => 159,\n        160 => 160,\n        161 => 161,\n        162 => 162,\n        163 => 163,\n        164 => 164,\n        165 => 165,\n        166 => 166,\n        167 => 167,\n        168 => 167,\n        170 => 170,\n        172 => 172,\n        173 => 173,\n        176 => 176,\n        177 => 177,\n        178 => 178,\n        179 => 179,\n        182 => 179,\n        180 => 180,\n        183 => 180,\n        181 => 181,\n        184 => 184,\n        185 => 185,\n    );\n// line 233 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r0(){\n    $this->root_buffer->prepend_array($this, $this->template_prefix);\n    $this->root_buffer->append_array($this, $this->template_postfix);\n    $this->_retvalue = $this->root_buffer->to_smarty_php($this);\n    }\n// line 240 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r1(){\n         $text = $this->yystack[ $this->yyidx + 0 ]->minor;\n\n         if ((string)$text == '') {\n            $this->current_buffer->append_subtree($this, null);\n         }\n\n         $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($text, $this->strip));\n    }\n// line 250 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r2(){\n    $this->strip = true;\n    }\n// line 254 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r3(){\n    $this->strip = false;\n    }\n// line 259 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r4(){\n       $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($this->yystack[$this->yyidx + -1]->minor));\n    }\n// line 264 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r5(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.$this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 267 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r6(){\n    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 271 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r7(){\n        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n\n    }\n// line 276 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r8(){\n    $this->_retvalue = '';\n    }\n// line 280 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r9(){\n      if ($this->compiler->has_code) {\n          $this->current_buffer->append_subtree($this, $this->mergePrefixCode($this->yystack[$this->yyidx + 0]->minor));\n      }\n     $this->compiler->has_variable_string = false;\n     $this->block_nesting_level = count($this->compiler->_tag_stack);\n    }\n// line 292 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r11(){\n    $var = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    if (preg_match('/^(.*)(\\s+nocache)$/', $var, $match)) {\n        $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('nocache'),array('value'=>$this->compiler->compileVariable('\\''.$match[1].'\\'')));\n    } else {\n        $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->compiler->compileVariable('\\''.$var.'\\'')));\n    }\n    }\n// line 302 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r12(){\n    $tag = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()));\n    if ($tag == 'strip') {\n        $this->strip = true;\n        $this->_retvalue = null;\n    } else {\n        if (defined($tag)) {\n            if ($this->security) {\n               $this->security->isTrustedConstant($tag, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$tag));\n        } else {\n            if (preg_match('/^(.*)(\\s+nocache)$/', $tag, $match)) {\n                $this->_retvalue = $this->compiler->compileTag($match[1],array('\\'nocache\\''));\n            } else {\n                $this->_retvalue = $this->compiler->compileTag($tag,array());\n            }\n        }\n    }\n    }\n// line 323 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r13(){\n    $j = strrpos($this->yystack[$this->yyidx + 0]->minor,'.');\n    if ($this->yystack[$this->yyidx + 0]->minor[$j+1] == 'c') {\n        // {$smarty.block.child}\n        $this->_retvalue = $this->compiler->compileTag('child',array(),array($this->yystack[$this->yyidx + 0]->minor));\n    } else {\n        // {$smarty.block.parent}\n       $this->_retvalue = $this->compiler->compileTag('parent',array(),array($this->yystack[$this->yyidx + 0]->minor));\n     }\n    }\n// line 334 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r14(){\n    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 338 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r15(){\n     $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor;\n     }\n// line 342 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r16(){\n    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor[1],array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]));\n    }\n// line 351 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r17(){\n    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]),array('var'=>'\\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\\'')),$this->yystack[$this->yyidx + 0]->minor[1]));\n    }\n// line 355 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r18(){\n    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]),array('var'=>$this->yystack[$this->yyidx + -1]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor[1]),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']));\n    }\n// line 359 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r19(){\n       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 363 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r20(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 378 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r24(){\n        if (defined($this->yystack[$this->yyidx + -1]->minor)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant($this->yystack[$this->yyidx + -1]->minor, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));\n        } else {\n            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);\n        }\n    }\n// line 388 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r25(){\n        if (defined($this->yystack[$this->yyidx + 0]->minor)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor));\n        } else {\n            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array());\n        }\n    }\n// line 401 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r26(){\n        if (defined($this->yystack[$this->yyidx + -2]->minor)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant($this->yystack[$this->yyidx + -2]->minor, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));\n        } else {\n            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor, array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));\n        }\n    }\n// line 413 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r27(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -1]->minor));\n    }\n// line 418 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r28(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor, 'object_method'=>$this->yystack[$this->yyidx + -2]->minor));\n    }\n// line 423 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r29(){\n    $this->_retvalue = $this->compiler->compileTag('make_nocache',array(array('var'=>'\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'')));\n    }\n// line 428 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r30(){\n    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->compiler->getLdelLength())); \n    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 433 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r31(){\n    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->compiler->getLdelLength()));\n    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));\n    }\n// line 438 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r32(){\n    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->compiler->getLdelLength()));\n    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 449 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r34(){\n    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>$this->yystack[$this->yyidx + -2]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),1);\n    }\n// line 453 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r35(){\n    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 461 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r37(){\n    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);\n    }\n// line 465 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r38(){\n    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);\n    }\n// line 470 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r39(){\n    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -3]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));\n    }\n// line 474 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r40(){\n    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -3]->minor))));\n    }\n// line 477 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r41(){\n    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 482 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r42(){\n    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));\n    }\n// line 486 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r43(){\n    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor)));\n    }\n// line 492 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r44(){\n    $tag = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' /');\n    if ($tag === 'strip') {\n        $this->strip = false;\n        $this->_retvalue = null;\n    } else {\n       $this->_retvalue = $this->compiler->compileTag($tag.'close',array());\n    }\n     }\n// line 501 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r45(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());\n    }\n// line 505 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r46(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 510 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r47(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 514 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r48(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 522 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r49(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;\n    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 528 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r50(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 533 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r51(){\n    $this->_retvalue = array();\n    }\n// line 538 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r52(){\n    if (defined($this->yystack[$this->yyidx + 0]->minor)) {\n        if ($this->security) {\n            $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);\n        }\n        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);\n    } else {\n        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'\\''.$this->yystack[$this->yyidx + 0]->minor.'\\'');\n    }\n    }\n// line 549 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r53(){\n    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor,\" =\\n\\r\\t\")=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 557 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r55(){\n    $this->_retvalue = '\\''.$this->yystack[$this->yyidx + 0]->minor.'\\'';\n    }\n// line 569 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r58(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 582 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r60(){\n    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;\n    }\n// line 587 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r61(){\n    $this->_retvalue = array('var' => '\\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'\\'', 'value'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 594 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r63(){\n    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 598 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r64(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 618 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r67(){\n    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'://' . $this->yystack[$this->yyidx + 0]->minor . '\\')';\n    }\n// line 623 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r68(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 633 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r70(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor['pre']. $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor['op'].$this->yystack[$this->yyidx + 0]->minor .')';\n    }\n// line 637 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r71(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 641 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r72(){\n    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor . $this->yystack[$this->yyidx + -1]->minor . ')';\n    }\n// line 645 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r73(){\n    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';\n    }\n// line 649 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r74(){\n    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';\n    }\n// line 657 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r75(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '. $this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'\\'') . ' : '.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 661 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r76(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 671 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r78(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 676 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r79(){\n    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 697 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r84(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 701 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r85(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';\n    }\n// line 705 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r86(){\n    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 710 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r87(){\n    if (defined($this->yystack[$this->yyidx + 0]->minor)) {\n        if ($this->security) {\n             $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);\n        }\n        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n    } else {\n        $this->_retvalue = '\\''.$this->yystack[$this->yyidx + 0]->minor.'\\'';\n    }\n    }\n// line 727 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r89(){\n    $this->_retvalue = '('. $this->yystack[$this->yyidx + -1]->minor .')';\n    }\n// line 731 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r90(){\n      $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 749 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r94(){\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    if ($this->yystack[$this->yyidx + -2]->minor['var'] === '\\'smarty\\'') {\n        $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \". $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).';?>');\n     } else {\n        $this->compiler->appendPrefixCode(\"<?php  {$prefixVar} = \". $this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].';?>');\n    }\n    $this->_retvalue = $prefixVar .'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];\n    }\n// line 760 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r95(){\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[$this->yyidx + 0]->minor);\n    $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, \"<?php {$prefixVar} = ob_get_clean();?>\"));\n    $this->_retvalue = $prefixVar;\n    }\n// line 767 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r96(){\n    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 780 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r99(){\n    if (!in_array(strtolower($this->yystack[$this->yyidx + -2]->minor), array('self', 'parent')) && (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + 0]->minor, $this->compiler))) {\n        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {\n            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];\n        } else {\n            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];\n        } \n    } else {\n        $this->compiler->trigger_template_error ('static class \\''.$this->yystack[$this->yyidx + -2]->minor.'\\' is undefined or not allowed by security setting');\n    }\n    }\n// line 799 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r101(){\n    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n        }\n// line 810 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r102(){\n   $this->_retvalue = $this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'');\n    }\n// line 813 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r103(){\n    if ($this->yystack[$this->yyidx + 0]->minor['var'] === '\\'smarty\\'') {\n        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);\n        $this->_retvalue = $smarty_var;\n    } else {\n        // used for array reset,next,prev,end,current \n        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];\n        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];\n        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];\n    }\n    }\n// line 826 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r104(){\n    $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 836 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r106(){\n    $this->_retvalue = $this->compiler->compileConfigVariable('\\'' . $this->yystack[$this->yyidx + -1]->minor . '\\'');\n    }\n// line 840 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r107(){\n    $this->_retvalue = '(is_array($tmp = ' . $this->compiler->compileConfigVariable('\\'' . $this->yystack[$this->yyidx + -2]->minor . '\\'') . ') ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' :null)';\n    }\n// line 844 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r108(){\n    $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -1]->minor);\n    }\n// line 848 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r109(){\n    $this->_retvalue = '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -2]->minor) . ') ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' : null)';\n    }\n// line 852 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r110(){\n    $this->_retvalue = array('var'=>'\\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\\'', 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 855 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r111(){\n    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 868 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r113(){\n    return;\n    }\n// line 874 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r114(){\n    $this->_retvalue = '['.$this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'').']';\n    }\n// line 877 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r115(){\n    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';\n    }\n// line 881 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r116(){\n    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';\n    }\n// line 885 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r117(){\n    $this->_retvalue = '[\\''. $this->yystack[$this->yyidx + 0]->minor .'\\']';\n    }\n// line 889 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r118(){\n    $this->_retvalue = '['. $this->yystack[$this->yyidx + 0]->minor .']';\n    }\n// line 894 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r119(){\n    $this->_retvalue = '['. $this->yystack[$this->yyidx + -1]->minor .']';\n    }\n// line 899 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r120(){\n    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.$this->yystack[$this->yyidx + -1]->minor.'\\'][\\'index\\']').']';\n    }\n// line 903 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r121(){\n    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.$this->yystack[$this->yyidx + -3]->minor.'\\'][\\''.$this->yystack[$this->yyidx + -1]->minor.'\\']').']';\n    }\n// line 906 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r122(){\n    $this->_retvalue = '['.$this->yystack[$this->yyidx + -1]->minor.']';\n    }\n// line 912 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r124(){\n    $this->_retvalue = '['.$this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\\'').']';\n    }\n// line 928 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r128(){\n    $this->_retvalue = '[]';\n    }\n// line 938 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r129(){\n    $this->_retvalue = '\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'';\n    }\n// line 942 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r130(){\n    $this->_retvalue = '\\'\\'';\n    }\n// line 947 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r131(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 955 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r133(){\n    $var = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    $this->_retvalue = $this->compiler->compileVariable('\\''.$var.'\\'');\n    }\n// line 961 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r134(){\n    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';\n    }\n// line 968 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r135(){\n    if ($this->yystack[$this->yyidx + -1]->minor['var'] === '\\'smarty\\'') {\n        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;\n    } else {\n        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;\n    }\n    }\n// line 977 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r136(){\n    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 982 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r137(){\n    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 987 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r138(){\n    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 994 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r139(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $this->_retvalue = '->{'.$this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';\n    }\n// line 1001 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r140(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';\n    }\n// line 1008 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r141(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $this->_retvalue = '->{\\''.$this->yystack[$this->yyidx + -4]->minor.'\\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';\n    }\n// line 1016 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r142(){\n    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1024 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r143(){\n    $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[$this->yyidx + -3]->minor, $this->yystack[$this->yyidx + -1]->minor);\n    }\n// line 1032 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r144(){\n    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . '('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';\n    }\n// line 1039 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r145(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \".$this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + -3]->minor,1).'\\'').';?>');\n    $this->_retvalue = $prefixVar .'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';\n    }\n// line 1050 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r146(){\n    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 1067 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r149(){\n    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));\n    }\n// line 1071 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r150(){\n    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 1079 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r152(){\n    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1087 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r153(){\n    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1100 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r156(){\n    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1109 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r158(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '', 'method');\n    }\n// line 1114 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r159(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'method');\n    }\n// line 1119 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r160(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '');\n    }\n// line 1124 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r161(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'property');\n    }\n// line 1129 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r162(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor, 'property');\n    }\n// line 1135 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r163(){\n    $this->_retvalue = ' '. trim($this->yystack[$this->yyidx + 0]->minor) . ' ';\n    }\n// line 1139 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r164(){\n    static $lops = array(\n        'eq' => ' == ',\n        'ne' => ' != ',\n        'neq' => ' != ',\n        'gt' => ' > ',\n        'ge' => ' >= ',\n        'gte' => ' >= ',\n        'lt' =>  ' < ',\n        'le' =>  ' <= ',\n        'lte' => ' <= ',\n        'mod' =>  ' % ',\n        'and' => ' && ',\n        'or' => ' || ',\n        'xor' => ' xor ',\n         );\n    $op = strtolower(preg_replace('/\\s*/', '', $this->yystack[$this->yyidx + 0]->minor));\n    $this->_retvalue = $lops[$op];\n    }\n// line 1158 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r165(){\n     static $tlops = array(\n         'isdivby' => array('op' => ' % ', 'pre' => '!('),\n         'isnotdivby' => array('op' => ' % ', 'pre' => '('),\n         'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         );\n     $op = strtolower(preg_replace('/\\s*/', '', $this->yystack[$this->yyidx + 0]->minor));\n     $this->_retvalue = $tlops[$op];\n     }\n// line 1171 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r166(){\n        static $scond = array (\n            'iseven' => '!(1 & ',\n            'isnoteven' => '(1 & ',\n            'isodd' => '(1 & ',\n            'isnotodd' => '!(1 & ',\n        );\n   $op = strtolower(str_replace(' ', '', $this->yystack[$this->yyidx + 0]->minor));\n   $this->_retvalue = $scond[$op];\n    }\n// line 1185 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r167(){\n    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';\n    }\n// line 1196 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r170(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1204 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r172(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1208 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r173(){ \n    $this->_retvalue = '\\''.$this->yystack[$this->yyidx + -2]->minor.'\\'=>'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1224 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r176(){\n    $this->compiler->leaveDoubleQuote();\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php($this);\n    }\n// line 1230 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r177(){\n    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this, $this->yystack[$this->yyidx + 0]->minor);\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 1235 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r178(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1239 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r179(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)'.$this->yystack[$this->yyidx + -1]->minor);\n    }\n// line 1243 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r180(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)('.$this->yystack[$this->yyidx + -1]->minor.')');\n    }\n// line 1247 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r181(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\\']->value');\n    }\n// line 1259 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r184(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1263 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r185(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[$this->yyidx + 0]->minor);\n    }\n\n    private $_retvalue;\n\n    public function yy_reduce($yyruleno)\n    {\n        if ($this->yyTraceFILE && $yyruleno >= 0\n              && $yyruleno < count(self::$yyRuleName)) {\n            fprintf($this->yyTraceFILE, \"%sReduce (%d) [%s].\\n\",\n                $this->yyTracePrompt, $yyruleno,\n                self::$yyRuleName[$yyruleno]);\n        }\n\n        $this->_retvalue = $yy_lefthand_side = null;\n        if (isset(self::$yyReduceMap[$yyruleno])) {\n            // call the action\n            $this->_retvalue = null;\n            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();\n            $yy_lefthand_side = $this->_retvalue;\n        }\n        $yygoto = self::$yyRuleInfo[$yyruleno][0];\n        $yysize = self::$yyRuleInfo[$yyruleno][1];\n        $this->yyidx -= $yysize;\n        for ($i = $yysize; $i; $i--) {\n            // pop all of the right-hand side parameters\n            array_pop($this->yystack);\n        }\n        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);\n        if ($yyact < self::YYNSTATE) {\n            if (!$this->yyTraceFILE && $yysize) {\n                $this->yyidx++;\n                $x = new TP_yyStackEntry;\n                $x->stateno = $yyact;\n                $x->major = $yygoto;\n                $x->minor = $yy_lefthand_side;\n                $this->yystack[$this->yyidx] = $x;\n            } else {\n                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);\n            }\n        } elseif ($yyact === self::YYNSTATE + self::YYNRULE + 1) {\n            $this->yy_accept();\n        }\n    }\n\n    public function yy_parse_failed()\n    {\n        if ($this->yyTraceFILE) {\n            fprintf($this->yyTraceFILE, \"%sFail!\\n\", $this->yyTracePrompt);\n        } while ($this->yyidx >= 0) {\n            $this->yy_pop_parser_stack();\n        }\n    }\n\n    public function yy_syntax_error($yymajor, $TOKEN)\n    {\n// line 213 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    $this->internalError = true;\n    $this->yymajor = $yymajor;\n    $this->compiler->trigger_template_error();\n    }\n\n    public function yy_accept()\n    {\n        if ($this->yyTraceFILE) {\n            fprintf($this->yyTraceFILE, \"%sAccept!\\n\", $this->yyTracePrompt);\n        } while ($this->yyidx >= 0) {\n            $this->yy_pop_parser_stack();\n        }\n// line 206 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    $this->successful = !$this->internalError;\n    $this->internalError = false;\n    $this->retvalue = $this->_retvalue;\n    }\n\n    public function doParse($yymajor, $yytokenvalue)\n    {\n        $yyerrorhit = 0;   /* True if yymajor has invoked an error */\n\n        if ($this->yyidx === null || $this->yyidx < 0) {\n            $this->yyidx = 0;\n            $this->yyerrcnt = -1;\n            $x = new TP_yyStackEntry;\n            $x->stateno = 0;\n            $x->major = 0;\n            $this->yystack = array();\n            $this->yystack[] = $x;\n        }\n        $yyendofinput = ($yymajor==0);\n\n        if ($this->yyTraceFILE) {\n            fprintf($this->yyTraceFILE, \"%sInput %s\\n\",\n                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);\n        }\n\n        do {\n            $yyact = $this->yy_find_shift_action($yymajor);\n            if ($yymajor < self::YYERRORSYMBOL &&\n                  !$this->yy_is_expected_token($yymajor)) {\n                // force a syntax error\n                $yyact = self::YY_ERROR_ACTION;\n            }\n            if ($yyact < self::YYNSTATE) {\n                $this->yy_shift($yyact, $yymajor, $yytokenvalue);\n                $this->yyerrcnt--;\n                if ($yyendofinput && $this->yyidx >= 0) {\n                    $yymajor = 0;\n                } else {\n                    $yymajor = self::YYNOCODE;\n                }\n            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {\n                $this->yy_reduce($yyact - self::YYNSTATE);\n            } elseif ($yyact === self::YY_ERROR_ACTION) {\n                if ($this->yyTraceFILE) {\n                    fprintf($this->yyTraceFILE, \"%sSyntax Error!\\n\",\n                        $this->yyTracePrompt);\n                }\n                if (self::YYERRORSYMBOL) {\n                    if ($this->yyerrcnt < 0) {\n                        $this->yy_syntax_error($yymajor, $yytokenvalue);\n                    }\n                    $yymx = $this->yystack[$this->yyidx]->major;\n                    if ($yymx === self::YYERRORSYMBOL || $yyerrorhit) {\n                        if ($this->yyTraceFILE) {\n                            fprintf($this->yyTraceFILE, \"%sDiscard input token %s\\n\",\n                                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);\n                        }\n                        $this->yy_destructor($yymajor, $yytokenvalue);\n                        $yymajor = self::YYNOCODE;\n                    } else {\n                        while ($this->yyidx >= 0 &&\n                                 $yymx !== self::YYERRORSYMBOL &&\n        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE\n                              ){\n                            $this->yy_pop_parser_stack();\n                        }\n                        if ($this->yyidx < 0 || $yymajor==0) {\n                            $this->yy_destructor($yymajor, $yytokenvalue);\n                            $this->yy_parse_failed();\n                            $yymajor = self::YYNOCODE;\n                        } elseif ($yymx !== self::YYERRORSYMBOL) {\n                            $u2 = 0;\n                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);\n                        }\n                    }\n                    $this->yyerrcnt = 3;\n                    $yyerrorhit = 1;\n                } else {\n                    if ($this->yyerrcnt <= 0) {\n                        $this->yy_syntax_error($yymajor, $yytokenvalue);\n                    }\n                    $this->yyerrcnt = 3;\n                    $this->yy_destructor($yymajor, $yytokenvalue);\n                    if ($yyendofinput) {\n                        $this->yy_parse_failed();\n                    }\n                    $yymajor = self::YYNOCODE;\n                }\n            } else {\n                $this->yy_accept();\n                $yymajor = self::YYNOCODE;\n            }\n        } while ($yymajor !== self::YYNOCODE && $this->yyidx >= 0);\n    }\n}\n\n", "<?php\n/**\n * Smarty PHPunit tests for security\n *\n * @package PHPunit\n * @author  Uwe Tews\n */\n\n/**\n * class for security test\n *\n * @runTestsInSeparateProcess\n * @preserveGlobalState disabled\n * @backupStaticAttributes enabled\n */\nclass SecurityTest extends PHPUnit_Smarty\n{\n    public function setUp(): void\n    {\n        $this->setUpSmarty(dirname(__FILE__));\n\n        $this->smarty->setForceCompile(true);\n        $this->smarty->enableSecurity();\n   }\n   public function testInit()\n    {\n        $this->cleanDirs();\n    }\n\n/**\n * test that security is loaded\n' *'/\n    public function testSecurityReenable()\n    {\n        $this->smarty->disableSecurity();\n        $this->smarty->enableSecurity('Security');\n        $this->smarty->fetch('helloworld.tpl');\n        $this->smarty->disableSecurity();\n        $this->smarty->enableSecurity('Security');\n        $this->smarty->fetch('helloworld.tpl');\n    }\n/**\n* test that security is loaded\n */\n    public function testSecurityLoaded()\n    {\n        $this->assertTrue(is_object($this->smarty->security_policy));\n    }\n\n/**\n * test trusted PHP function\n */\n    public function testTrustedPHPFunction()\n    {\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{count($foo)}'));\n    }\n\n/**\n * test not trusted PHP function\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testNotTrustedPHPFunction()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('PHP function \\'count\\' not allowed by security setting');\n        $this->smarty->security_policy->php_functions = array('null');\n        $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{count($foo)}');\n    }\n\n/**\n * test not trusted PHP function at disabled security\n */\n    public function testDisabledTrustedPHPFunction()\n    {\n        $this->smarty->security_policy->php_functions = array('null');\n        $this->smarty->disableSecurity();\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{count($foo)}'));\n    }\n\n/**\n * test trusted modifier\n */\n    public function testTrustedModifier()\n    {\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{$foo|@count}'));\n    }\n\n/**\n * test not trusted modifier\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n */\n    public function testNotTrustedModifier()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('modifier \\'count\\' not allowed by security setting');\n        $this->smarty->security_policy->php_modifiers = array('null');\n        $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{$foo|@count}');\n    }\n\n/**\n * test not trusted modifier at disabled security\n */\n    public function testDisabledTrustedModifier()\n    {\n        $this->smarty->security_policy->php_modifiers = array('null');\n        $this->smarty->disableSecurity();\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{$foo|@count}'));\n    }\n\n/**\n * test allowed tags\n */\n    public function testAllowedTags1()\n    {\n        $this->smarty->security_policy->allowed_tags = array('counter');\n        $this->assertEquals(\"1\", $this->smarty->fetch('string:{counter start=1}'));\n    }\n\n/**\n * test not allowed tag\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n */\n    public function testNotAllowedTags2()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('tag \\'cycle\\' not allowed by security setting');\n        $this->smarty->security_policy->allowed_tags = array('counter');\n        $this->smarty->fetch('string:{counter}{cycle values=\"1,2\"}');\n    }\n\n/**\n * test disabled tag\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n */\n    public function testDisabledTags()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('tag \\'cycle\\' disabled by security setting');\n        $this->smarty->security_policy->disabled_tags = array('cycle');\n        $this->smarty->fetch('string:{counter}{cycle values=\"1,2\"}');\n    }\n\n/**\n * test allowed modifier\n */\n    public function testAllowedModifier1()\n    {\n        error_reporting(E_ALL  & E_STRICT);\n        $this->smarty->security_policy->allowed_modifiers = array('capitalize');\n        $this->assertEquals(\"Hello World\", $this->smarty->fetch('string:{\"hello world\"|capitalize}'));\n        error_reporting(E_ALL | E_STRICT);\n    }\n\n    public function testAllowedModifier2()\n    {\n        $this->smarty->security_policy->allowed_modifiers = array('upper');\n        $this->assertEquals(\"HELLO WORLD\", $this->smarty->fetch('string:{\"hello world\"|upper}'));\n    }\n\n/**\n * test not allowed modifier\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testNotAllowedModifier()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('modifier \\'lower\\' not allowed by security setting');\n        $this->smarty->security_policy->allowed_modifiers = array('upper');\n        $this->smarty->fetch('string:{\"hello\"|upper}{\"world\"|lower}');\n    }\n\n/**\n * test disabled modifier\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testDisabledModifier()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('modifier \\'lower\\' disabled by security setting');\n        $this->smarty->security_policy->disabled_modifiers = array('lower');\n        $this->smarty->fetch('string:{\"hello\"|upper}{\"world\"|lower}');\n    }\n\n\n/**\n * test Smarty no longer handles embedded PHP\n */\n    public function testSmartyPhpAllow()\n    {\n        $this->assertEquals('<?php echo \"hello world\"; ?>', $this->smarty->fetch('string:<?php echo \"hello world\"; ?>'));\n    }\n\n    public function testSmartyPhpAllow2()\n    {\n        $this->assertEquals('<? echo \"hello world\"; ?>', $this->smarty->fetch('string:<? echo \"hello world\"; ?>'));\n    }\n\n    public function testSmartyPhpAllow3()\n    {\n        $this->assertEquals('<% echo \"hello world\"; %>', $this->smarty->fetch('string:<% echo \"hello world\"; %>'));\n    }\n\n/**\n * test standard directory\n */\n    public function testStandardDirectory()\n    {\n        $content = $this->smarty->fetch('string:{include file=\"helloworld.tpl\"}');\n        $this->assertEquals(\"hello world\", $content);\n    }\n\n/**\n * test trusted directory\n */\n    public function testTrustedDirectory()\n    {\n        $this->smarty->security_policy->secure_dir = array('.' . DIRECTORY_SEPARATOR . 'templates_2' . DIRECTORY_SEPARATOR);\n        $this->assertEquals(\"hello world\", $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}'));\n    }\n\n/**\n * test not trusted directory\n  *\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testNotTrustedDirectory()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('not trusted file path');\n        $this->smarty->security_policy->secure_dir = array(str_replace('\\\\', '/', dirname(__FILE__) . '/templates_3/'));\n        $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}');\n     }\n\n/**\n * test disabled security for not trusted dir\n */\n    public function testDisabledTrustedDirectory()\n    {\n        $this->smarty->disableSecurity();\n        $this->assertEquals(\"hello world\", $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}'));\n    }\n\n/**\n * test trusted static class\n */\n    public function testTrustedStaticClass()\n    {\n        $this->smarty->security_policy->static_classes = array('mysecuritystaticclass');\n        $tpl = $this->smarty->createTemplate('string:{mysecuritystaticclass::square(5)}');\n        $this->assertEquals('25', $this->smarty->fetch($tpl));\n    }\n\n/**\n * test not trusted PHP function\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testNotTrustedStaticClass()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('access to static class \\'mysecuritystaticclass\\' not allowed by security setting');\n        $this->smarty->security_policy->static_classes = array('null');\n        $this->smarty->fetch('string:{mysecuritystaticclass::square(5)}');\n    }\n\n    public function testChangedTrustedDirectory()\n    {\n        $this->smarty->security_policy->secure_dir = array(\n            '.' . DIRECTORY_SEPARATOR . 'templates_2' . DIRECTORY_SEPARATOR,\n        );\n        $this->assertEquals(\"hello world\", $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}'));\n\n        $this->smarty->security_policy->secure_dir = array(\n            '.' . DIRECTORY_SEPARATOR . 'templates_2' . DIRECTORY_SEPARATOR,\n            '.' . DIRECTORY_SEPARATOR . 'templates_3' . DIRECTORY_SEPARATOR,\n        );\n        $this->assertEquals(\"templates_3\", $this->smarty->fetch('string:{include file=\"templates_3/dirname.tpl\"}'));\n    }\n/**\n * test template file exits\n *\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n */\n    public function testTemplateTrustedStream()\n    {\n         stream_wrapper_register(\"global\", \"ResourceStreamSecurity\")\n        or die(\"Failed to register protocol\");\n        $fp = fopen(\"global://mytest\", \"r+\");\n        fwrite($fp, 'hello world {$foo}');\n        fclose($fp);\n        $this->smarty->security_policy->streams= array('global');\n        $tpl = $this->smarty->createTemplate('global:mytest');\n        $this->assertTrue($tpl->source->exists);\n    }\n/**\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n * test template file exits\n */\n    public function testTemplateNotTrustedStream()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('stream \\'global\\' not allowed by security setting');\n        stream_wrapper_register(\"global\", \"ResourceStreamSecurity\")\n        or die(\"Failed to register protocol\");\n        $fp = fopen(\"global://mytest\", \"r+\");\n        fwrite($fp, 'hello world {$foo}');\n        fclose($fp);\n        $this->smarty->security_policy->streams= array('notrusted');\n        $tpl = $this->smarty->createTemplate('global:mytest');\n        $this->assertTrue($tpl->source->exists);\n    }\n/**\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n*/\n    public function testTrustedUri()\n    {\n        $this->smarty->security_policy->trusted_uri = array(\n            '#https://www.smarty.net$#i'\n        );\n        $this->assertStringContainsString('<title>Preface | Smarty</title>', $this->smarty->fetch('string:{fetch file=\"https://www.smarty.net/docs/en/preface.tpl\"}'));\n    }\n\n/**\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n*/\n    public function testNotTrustedUri()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('URI \\'https://www.smarty.net/docs/en/preface.tpl\\' not allowed by security setting');\n        $this->smarty->security_policy->trusted_uri = array();\n        $this->assertStringContainsString('<title>Preface | Smarty</title>', $this->smarty->fetch('string:{fetch file=\"https://www.smarty.net/docs/en/preface.tpl\"}'));\n    }\n\n    /**\n     * In security mode, accessing $smarty.template_object should be illegal.\n     * @expectedException SmartyCompilerException\n     */\n    public function testSmartyTemplateObject() {\n        $this->smarty->display('string:{$smarty.template_object}');\n    }\n\n}\n\nclass mysecuritystaticclass\n{\n    const STATIC_CONSTANT_VALUE = 3;\n    static $static_var = 5;\n\n    static function square($i)\n    {\n        return $i * $i;\n    }\n}\nclass Security extends Smarty_Security\n{\n\n}\nclass ResourceStreamSecurity\n{\n    private $position;\n    private $varname;\n\n    public function stream_open($path, $mode, $options, &$opened_path)\n    {\n        $url = parse_url($path);\n        $this->varname = $url[\"host\"];\n        $this->position = 0;\n\n        return true;\n    }\n\n    public function stream_read($count)\n    {\n        $p = &$this->position;\n        $ret = substr($GLOBALS[$this->varname], $p, $count);\n        $p += strlen($ret);\n\n        return $ret;\n    }\n\n    public function stream_write($data)\n    {\n        $v = &$GLOBALS[$this->varname];\n        $l = strlen($data);\n        $p = &$this->position;\n        $v = substr($v, 0, $p) . $data . substr($v, $p += $l);\n\n        return $l;\n    }\n\n    public function stream_tell()\n    {\n        return $this->position;\n    }\n\n    public function stream_eof()\n    {\n        if (!isset($GLOBALS[$this->varname])) {\n            return true;\n        }\n\n        return $this->position >= strlen($GLOBALS[$this->varname]);\n    }\n\n    public function stream_seek($offset, $whence)\n    {\n        $l = strlen($GLOBALS[$this->varname]);\n        $p = &$this->position;\n        switch ($whence) {\n            case SEEK_SET:\n                $newPos = $offset;\n                break;\n            case SEEK_CUR:\n                $newPos = $p + $offset;\n                break;\n            case SEEK_END:\n                $newPos = $l + $offset;\n                break;\n            default:\n                return false;\n        }\n        $ret = ($newPos >= 0 && $newPos <= $l);\n        if ($ret) {\n            $p = $newPos;\n        }\n        return $ret;\n    }\n}\n"], "fixing_code": ["# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Security\n- Prevent evasion of the `static_classes` security policy. This addresses CVE-2021-21408\n\n## [4.0.2] - 2022-01-10\n\n### Security\n- Prevent arbitrary PHP code execution through maliciously crafted expression for the math function. This addresses CVE-2021-29454\n\n## [4.0.1] - 2022-01-09\n\n### Security\n- Rewrote the mailto function to not use `eval` when encoding with javascript\n\n## [4.0.0] - 2021-11-25\n\n## [4.0.0-rc.0] - 2021-10-13\n\n### Added\n- You can now use `$smarty->muteUndefinedOrNullWarnings()` to activate convert warnings about undefined or null template vars to notices when running PHP8\n\n### Changed\n- Switch CI from Travis to Github CI\n- Updated unit tests to avoid skipped and risky test warnings\n\n### Removed\n- Dropped support for PHP7.0 and below, so Smarty now requires PHP >=7.1\n- Dropped support for php asp tags in templates (removed from php since php7.0)\n- Dropped deprecated API calls that where only accessible through SmartyBC\n- Dropped support for {php} and {include_php} tags and embedded PHP in templates. Embedded PHP will now be passed through as is.\n- Removed all PHP_VERSION_ID and compare_version checks and conditional code blocks that are now no longer required\n- Dropped deprecated SMARTY_RESOURCE_CHAR_SET and SMARTY_RESOURCE_DATE_FORMAT constants\n- Dropped deprecated Smarty::muteExpectedErrors and Smarty::unmuteExpectedErrors API methods\n- Dropped deprecated $smarty->getVariable() method. Use $smarty->getTemplateVars() instead.\n- $smarty->registerResource() no longer accepts an array of callback functions\n\n## [3.1.40] - 2021-10-13\n\n### Changed\n- modifier escape now triggers a E_USER_NOTICE when an unsupported escape type is used https://github.com/smarty-php/smarty/pull/649\n\n### Security\n- More advanced javascript escaping to handle https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements thanks to m-haritonov\n\n## [3.1.39] - 2021-02-17\n\n### Security\n- Prevent access to `$smarty.template_object` in sandbox mode. This addresses CVE-2021-26119.\n- Fixed code injection vulnerability by using illegal function names in `{function name='blah'}{/function}`. This addresses CVE-2021-26120.\n\n## [3.1.38] - 2021-01-08\n\n### Fixed\n- Smarty::SMARTY_VERSION wasn't updated https://github.com/smarty-php/smarty/issues/628\n\n## [3.1.37] - 2021-01-07\n\n### Changed\n- Changed error handlers and handling of undefined constants for php8-compatibility (set $errcontext argument optional) https://github.com/smarty-php/smarty/issues/605\n- Changed expected error levels in unit tests for php8-compatibility\n- Travis unit tests now run for all php versions >= 5.3, including php8\n- Travis runs on Xenial where possible\n\n### Fixed\n- PHP5.3 compatibility fixes\n- Brought lexer source functionally up-to-date with compiled version\n\n## [3.1.36] - 2020-04-14\n\n### Fixed\n - Smarty::SMARTY_VERSION wasn't updated in v3.1.35 https://github.com/smarty-php/smarty/issues/584\n\n## [3.1.35] - 2020-04-14\n - remove whitespaces after comments https://github.com/smarty-php/smarty/issues/447\n - fix foreachelse on arrayiterators https://github.com/smarty-php/smarty/issues/506\n - fix files contained in git export archive for package maintainers https://github.com/smarty-php/smarty/issues/325\n - throw SmartyException when setting caching attributes for cacheable plugin https://github.com/smarty-php/smarty/issues/457\n - fix errors that occured where isset was replaced with null check such as https://github.com/smarty-php/smarty/issues/453\n - unit tests are now in the repository\n\n## 3.1.34 release - 05.11.2019\n13.01.2020\n - fix typo in exception message (JercSi)\n - fix typehint warning with callable (bets4breakfast)\n - add travis badge and compatability info to readme (matks)\n - fix stdClass cast when compiling foreach (carpii)\n - fix wrong set/get methods for memcached (IT-Experte)\n - fix pborm assigning value to object variables in smarty_internal_compile_assign (Hunman)\n - exclude error_reporting.ini from git export (glensc)\n\n## 3.1.34-dev-6 -\n30.10.2018\n - bugfix a nested subblock in an inheritance child template was not replace by\n   outer level block with same name in same child template https://github.com/smarty-php/smarty/issues/500\n\n29.10.2018\n - bugfix Smarty::$php_handling == PHP_PASSTHRU (default) did eat the \"\\n\" (newline) character if it did directly followed\n   a PHP tag like \"?>\" or other https://github.com/smarty-php/smarty/issues/501\n\n14.10.2018\n - bugfix autoloader exit shortcut https://github.com/smarty-php/smarty/issues/467\n\n11.10.2018\n - bugfix {insert} not works when caching is enabled and included template is present\n   https://github.com/smarty-php/smarty/issues/496\n - bugfix in date-format modifier; NULL at date string or default_date did not produce correct output\n   https://github.com/smarty-php/smarty/pull/458\n\n09.10.2018\n - bugfix fix of 26.8.2017 https://github.com/smarty-php/smarty/issues/327\n   modifier is applied to sum expression https://github.com/smarty-php/smarty/issues/491\n - bugfix indexed arrays could not be defined \"array(...)\"\"\n\n18.09.2018\n  - bugfix large plain text template sections without a Smarty tag > 700kB could\n    could fail in version 3.1.32 and 3.1.33 because PHP preg_match() restrictions\n    https://github.com/smarty-php/smarty/issues/488\n\n## 3.1.33 release - 12.09.2018\n## 3.1.33-dev-12 -\n03.09.2018\n  - bugfix {foreach} using new style property access like {$item@property} on\n    Smarty 2 style named foreach loop could produce errors https://github.com/smarty-php/smarty/issues/484\n\n31.08.2018\n  - bugfix some custom left and right delimiters like '{^' '^}' did not work\n    https://github.com/smarty-php/smarty/issues/450 https://github.com/smarty-php/smarty/pull/482\n\n  - reformating for PSR-2 coding standards https://github.com/smarty-php/smarty/pull/483\n\n  - bugfix on Windows absolute filepathes did fail if the drive letter was followed by a linux DIRECTORY_SEPARATOR\n    like C:/  at Smarty > 3.1.33-dev-5 https://github.com/smarty-php/smarty/issues/451\n\n  - PSR-2 code style fixes for config and template file Lexer/Parser generated with\n    the Smarty Lexer/Parser generator from https://github.com/smarty-php/smarty-lexer\n    https://github.com/smarty-php/smarty/pull/483\n\n26.08.2018\n  - bugfix/enhancement {capture} allow variable as capture block name in Smarty special variable\n    like $smarty.capture.$foo https://github.com/smarty-php/smarty/issues/478 https://github.com/smarty-php/smarty/pull/481\n\n## 3.1.33-dev-6 -\n19.08.2018\n  - fix PSR-2 coding standards and PHPDoc blocks https://github.com/smarty-php/smarty/pull/452\n    https://github.com/smarty-php/smarty/pull/475\n    https://github.com/smarty-php/smarty/pull/473\n  - bugfix PHP5.2 compatibility https://github.com/smarty-php/smarty/pull/472\n\n## 3.1.33-dev-4 -\n17.05.2018\n - bugfix strip-block produces different output in Smarty v3.1.32 https://github.com/smarty-php/smarty/issues/436\n - bugfix Smarty::compileAllTemplates ignores `$extension` parameter https://github.com/smarty-php/smarty/issues/437\n   https://github.com/smarty-php/smarty/pull/438\n - improvement do not compute total property in {foreach} if not needed https://github.com/smarty-php/smarty/issues/443\n - bugfix  plugins may not be loaded when setMergeCompiledIncludes is true https://github.com/smarty-php/smarty/issues/435\n\n26.04.2018\n - bugfix  regarding Security Vulnerability did not solve the problem under Linux.\n   Security issue CVE-2018-16831\n\n## 3.1.32 - (24.04.2018)\n24.04.2018\n - bugfix  possible Security Vulnerability in Smarty_Security class.\n\n26.03.2018\n - bugfix plugins may not be loaded if {function} or {block} tags are executed in nocache mode\n   https://github.com/smarty-php/smarty/issues/371\n\n26.03.2018\n - new feature {parent} =  {$smarty.block.parent} {child} =  {$smarty.block.child}\n\n23.03.2018\n - bugfix preg_replace could fail on large content resulting in a blank page https://github.com/smarty-php/smarty/issues/417\n\n21.03.2018\n - bugfix {$smarty.section...} used outside {section}{/section} showed incorrect values if {section}{/section} was called inside\n   another loop https://github.com/smarty-php/smarty/issues/422\n - bugfix short form of {section} attributes did not work https://github.com/smarty-php/smarty/issues/428\n\n17.03.2018\n - improvement Smarty::compileAllTemplates() exit with a non-zero status code if max errors is reached https://github.com/smarty-php/smarty/pull/402\n\n16.03.2018\n - bugfix extends resource did not work with user defined left/right delimiter https://github.com/smarty-php/smarty/issues/419\n\n22.11.2017\n - bugfix {break} and {continue} could fail if {foreach}{/foreach} did contain other\n   looping tags like {for}, {section} and {while} https://github.com/smarty-php/smarty/issues/323\n\n20.11.2017\n  - bugfix rework of newline spacing between tag code and template text.\n    now again identical with Smarty2 (forum topic 26878)\n  - replacement of \" by '\n\n05.11.2017\n  - lexer/parser optimization\n  - code cleanup and optimizations\n  - bugfix {$smarty.section.name.loop} used together with {$smarty.section.name.total} could produce\n    wrong results (forum topic 27041)\n\n26.10.2017\n  - bugfix Smarty version was  not filled in header comment of compiled and cached  files\n  - optimization replace internal Smarty::$ds property by DIRECTORY_SEPARATOR\n  - deprecate functions Smarty::muteExpectedErrors() and Smarty::unmuteExpectedErrors()\n    as Smarty does no longer use error suppression like @filemtime().\n    for backward compatibility code is moved from Smarty class to an external class and still can be\n    called.\n  - correction of PHPDoc blocks\n  - minor code cleanup\n\n21.10.2017\n  - bugfix custom delimiters could fail since modification of  version 3.1.32-dev-23\n    https://github.com/smarty-php/smarty/issues/394\n\n18.10.2017\n  - bugfix fix implementation of unclosed block tag in double quoted string of 12.10.2017\n    https://github.com/smarty-php/smarty/issues/396 https://github.com/smarty-php/smarty/issues/397\n    https://github.com/smarty-php/smarty/issues/391 https://github.com/smarty-php/smarty/issues/392\n\n12.10.2017\n  - bugfix $smarty.block.child and $smarty.block.parent could not be used like any\n    $smarty special variable https://github.com/smarty-php/smarty/issues/393\n  - unclosed block tag in double quoted string must throw compiler exception.\n     https://github.com/smarty-php/smarty/issues/391 https://github.com/smarty-php/smarty/issues/392\n\n07.10.2017\n  - bugfix modification of 9.8.2017 did fail on some recursive\n    tag nesting. https://github.com/smarty-php/smarty/issues/389\n\n26.8.2017\n  - bugfix chained modifier failed when last modifier parameter is a signed value\n    https://github.com/smarty-php/smarty/issues/327\n  - bugfix templates filepath with multibyte characters did not work\n    https://github.com/smarty-php/smarty/issues/385\n  - bugfix {make_nocache} did display code if the template did not contain other nocache code\n    https://github.com/smarty-php/smarty/issues/369\n\n09.8.2017\n  - improvement repeated delimiter like {{ and }} will be treated as literal\n    https://groups.google.com/forum/#!topic/smarty-developers/h9r82Bx4KZw\n\n05.8.2017\n  - bugfix wordwrap modifier could fail if used in nocache code.\n    converted plugin file shared.mb_wordwrap.php into modifier.mb_wordwrap.php\n  - cleanup of _getSmartyObj()\n\n31.7.2017\n  - Call clearstatcache() after mkdir() failure https://github.com/smarty-php/smarty/pull/379\n\n30.7.2017\n  - rewrite mkdir() bugfix to retry automatically see https://github.com/smarty-php/smarty/pull/377\n    https://github.com/smarty-php/smarty/pull/379\n\n21.7.2017\n  - security possible PHP code injection on custom resources at display() or fetch()\n    calls if the resource does not sanitize the template name\n  - bugfix fix 'mkdir(): File exists' error on create directory from parallel\n    processes https://github.com/smarty-php/smarty/pull/377\n  - bugfix solve preg_match() hhvm parameter problem https://github.com/smarty-php/smarty/pull/372\n\n27.5.2017\n  - bugfix change compiled code for registered function and modifiers to called as callable to allow closures\n    https://github.com/smarty-php/smarty/pull/368, https://github.com/smarty-php/smarty/issues/273\n  - bugfix https://github.com/smarty-php/smarty/pull/368 did break the default plugin handler\n  - improvement replace phpversion() by PHP_VERSION constant.\n    https://github.com/smarty-php/smarty/pull/363\n\n21.5.2017\n  - performance store flag for already required shared plugin functions in static variable or\n    Smarty's $_cache to improve performance when plugins are often called\n    https://github.com/smarty-php/smarty/commit/51e0d5cd405d764a4ea257d1bac1fb1205f74528#commitcomment-22280086\n  - bugfix remove special treatment of classes implementing ArrayAccess in {foreach}\n    https://github.com/smarty-php/smarty/issues/332\n  - bugfix remove deleted files by clear_cache() and clear_compiled_template() from\n    ACP cache if present, add some is_file() checks to avoid possible warnings on filemtime()\n    caused by above functions.\n    https://github.com/smarty-php/smarty/issues/341\n  - bugfix version 3.1.31 did fail under PHP 5.2\n    https://github.com/smarty-php/smarty/issues/365\n\n19.5.2017\n  - change properties $accessMap and $obsoleteProperties from private to protected\n    https://github.com/smarty-php/smarty/issues/351\n  - new feature The named capture buffers can now be accessed also as array\n    See NEWS_FEATURES.txt https://github.com/smarty-php/smarty/issues/366\n  - improvement check if ini_get() and ini_set() not disabled\n    https://github.com/smarty-php/smarty/pull/362\n\n24.4.2017\n  - fix spelling https://github.com/smarty-php/smarty/commit/e3eda8a5f5653d8abb960eb1bc47e3eca679b1b4#commitcomment-21803095\n\n17.4.2017\n  - correct generated code on empty() and isset() call, observe change PHP behaviour since PHP 5.5\n    https://github.com/smarty-php/smarty/issues/347\n\n14.4.2017\n  - merge pull requests https://github.com/smarty-php/smarty/pull/349, https://github.com/smarty-php/smarty/pull/322 and    https://github.com/smarty-php/smarty/pull/337 to fix spelling and annotation\n\n13.4.2017\n  - bugfix array_merge() parameter should be checked https://github.com/smarty-php/smarty/issues/350\n\n## 3.1.31 - (14.12.2016)\n  23.11.2016\n   - move template object cache into static variables\n\n  19.11.2016\n  - bugfix inheritance root child templates containing nested {block}{/block} could call sub-bock content from parent\n    template https://github.com/smarty-php/smarty/issues/317\n  - change version checking\n\n 11.11.2016\n  - bugfix when Smarty is using a cached template object on Smarty::fetch() or Smarty::isCached() the inheritance data\n    must be removed https://github.com/smarty-php/smarty/issues/312\n  - smaller speed optimization\n\n 08.11.2016\n  - add bootstrap file to load and register Smarty_Autoloader. Change composer.json to make it known to composer\n\n 07.11.2016\n  - optimization of lexer speed https://github.com/smarty-php/smarty/issues/311\n\n 27.10.2016\n  - bugfix template function definitions array has not been cached between Smarty::fetch() and Smarty::display() calls\n    https://github.com/smarty-php/smarty/issues/301\n\n 23.10.2016\n  - improvement/bugfix when Smarty::fetch() is called on a template object the inheritance and tplFunctions property\n    should be copied to the called template object\n\n 21.10.2016\n  - bugfix for compile locking touched timestamp of old compiled file was not restored on compilation error https://github.com/smarty-php/smarty/issues/308\n\n 20.10.2016\n  - bugfix nocache code was not removed in cache file when subtemplate did contain PHP short tags in text but no other\n    nocache code https://github.com/smarty-php/smarty/issues/300\n\n 19.10.2016\n  - bugfix {make_nocache $var} did fail when variable value did contain '\\' https://github.com/smarty-php/smarty/issues/305\n  - bugfix {make_nocache $var} remove spaces from variable value https://github.com/smarty-php/smarty/issues/304\n\n 12.10.2016\n  - bugfix {include} with template names including variable or constants could fail after bugfix from\n     28.09.2016 https://github.com/smarty-php/smarty/issues/302\n\n 08.10.2016\n  - optimization move runtime extension for template functions into Smarty objects\n\n 29.09.2016\n  - improvement new Smarty::$extends_recursion property to disable execution of {extends} in templates called by extends resource\n     https://github.com/smarty-php/smarty/issues/296\n\n 28.09.2016\n  - bugfix the generated code for calling a subtemplate must pass the template resource name in single quotes https://github.com/smarty-php/smarty/issues/299\n  - bugfix nocache hash was not removed for <?xml ?> tags in subtemplates https://github.com/smarty-php/smarty/issues/300\n\n 27.09.2016\n  - bugfix when Smarty does use an internally cached template object on Smarty::fetch() calls\n           the template and config variables must be cleared https://github.com/smarty-php/smarty/issues/297\n\n 20.09.2016\n  - bugfix some $smarty special template variables are no longer accessed as real variable.\n    using them on calls like {if isset($smarty.foo)} or {if empty($smarty.foo)} will fail\n    http://www.smarty.net/forums/viewtopic.php?t=26222\n  - temporary fix for https://github.com/smarty-php/smarty/issues/293 main reason still under investigation\n  - improvement new tags {block_parent} {block_child} in template inheritance\n\n 19.09.2016\n  - optimization clear compiled and cached folder completely on detected version change\n  - cleanup convert cache resource file method clear into runtime extension\n\n 15.09.2016\n  - bugfix assigning a variable in if condition by function like {if $value = array_shift($array)} the function got called twice https://github.com/smarty-php/smarty/issues/291\n  - bugfix function plugins called with assign attribute like {foo assign='bar'} did not output returned content because\n           because assumption was made that it was assigned to a variable https://github.com/smarty-php/smarty/issues/292\n  - bugfix calling $smarty->isCached() on a not existing cache file with $smarty->cache_locking = true; could cause a 10 second delay http://www.smarty.net/forums/viewtopic.php?t=26282\n  - improvement make Smarty::clearCompiledTemplate() on custom resource independent from changes of templateId computation\n\n 11.09.2016\n  - improvement {math} misleading E_USER_WARNING messages when parameter value = null https://github.com/smarty-php/smarty/issues/288\n  - improvement move often used code snippets into methods\n  - performance Smarty::configLoad() did load unneeded template source object\n\n 09.09.2016\n  - bugfix/optimization {foreach} did not execute the {foreachelse} when iterating empty objects https://github.com/smarty-php/smarty/pull/287\n  - bugfix {foreach} must keep the @properties when restoring a saved $item variable as the properties might be used outside {foreach} https://github.com/smarty-php/smarty/issues/267\n  - improvement {foreach} observe {break n} and {continue n} nesting levels when restoring saved $item and $key variables\n\n 08.09.2016\n  - bugfix implement wrapper for removed method getConfigVariable() https://github.com/smarty-php/smarty/issues/286\n\n 07.09.2016\n  - bugfix using nocache like attribute with value true like {plugin nocache=true} did not work https://github.com/smarty-php/smarty/issues/285\n  - bugfix uppercase TRUE, FALSE and NULL did not work when security was enabled https://github.com/smarty-php/smarty/issues/282\n  - bugfix when {foreach} was looping over an object the total property like {$item@total} did always return 1 https://github.com/smarty-php/smarty/issues/281\n  - bugfix {capture}{/capture} did add in 3.1.30 unintended additional blank lines https://github.com/smarty-php/smarty/issues/268\n\n 01.09.2016\n  - performance require_once should be called only once for shared plugins https://github.com/smarty-php/smarty/issues/280\n\n 26.08.2016\n  - bugfix change of 23.08.2016 failed on linux when use_include_path = true\n\n 23.08.2016\n  - bugfix remove constant DS as shortcut for DIRECTORY_SEPARATOR as the user may have defined it to something else https://github.com/smarty-php/smarty/issues/277\n\n 20.08-2016\n  - bugfix {config_load ... scope=\"global\"} shall not throw an arror but fallback to scope=\"smarty\" https://github.com/smarty-php/smarty/issues/274\n  - bugfix {make_nocache} failed when using composer autoloader https://github.com/smarty-php/smarty/issues/275\n\n 14.08.2016\n  - bugfix $smarty_>debugging = true; did E_NOTICE messages when {eval} tag was used https://github.com/smarty-php/smarty/issues/266\n  - bugfix Class 'Smarty_Internal_Runtime_ValidateCompiled' not found when upgrading from some older Smarty versions with existing\n           compiled or cached template files https://github.com/smarty-php/smarty/issues/269\n  - optimization remove unneeded call to update acopes when {assign} scope and template scope was local (default)\n\n## 3.1.30 - (07.08.2016)\n\n 07.08.2016\n  - bugfix update of 04.08.2016 was incomplete\n\n 05.08.2016\n  - bugfix compiling of templates failed when the Smarty delimiter did contain '/' https://github.com/smarty-php/smarty/issues/264\n  - updated error checking at template and config default handler\n\n 04.08.2016\n  - improvement move template function source parameter into extension\n\n 26.07.2016\n  - optimization unneeded loading of compiled resource\n\n 24.07.2016\n  - regression this->addPluginsDir('/abs/path/to/dir') adding absolute path without trailing '/' did fail https://github.com/smarty-php/smarty/issues/260\n\n 23.07.2016\n  - bugfix setTemplateDir('/') and setTemplateDir('') did create wrong absolute filepath https://github.com/smarty-php/smarty/issues/245\n  - optimization of filepath normalization\n  - improvement remove double function declaration in plugin shared.escape_special_cars.php https://github.com/smarty-php/smarty/issues/229\n\n 19.07.2016\n  - bugfix multiple {include} with relative filepath within {block}{/block} could fail https://github.com/smarty-php/smarty/issues/246\n  - bugfix {math} shell injection vulnerability patch provided by Tim Weber\n\n 18.07.2016\n  - bugfix {foreach} if key variable and item@key attribute have been used both the key variable was not updated https://github.com/smarty-php/smarty/issues/254\n  - bugfix modifier on plugins like {plugin|modifier ... } did fail when the plugin does return an array https://github.com/smarty-php/smarty/issues/228\n  - bugfix avoid opcache_invalidate to result in ErrorException when opcache.restrict_api is not empty https://github.com/smarty-php/smarty/pull/244\n  - bugfix multiple {include} with relative filepath within {block}{/block} could fail https://github.com/smarty-php/smarty/issues/246\n\n 14.07.2016\n  - bugfix wrong parameter on compileAllTemplates() and compileAllConfig() https://github.com/smarty-php/smarty/issues/231\n\n 13.07.2016\n  - bugfix PHP 7 compatibility on registered compiler plugins https://github.com/smarty-php/smarty/issues/241\n  - update testInstall() https://github.com/smarty-php/smarty/issues/248https://github.com/smarty-php/smarty/issues/248\n  - bugfix enable debugging could fail when template objects did already exists https://github.com/smarty-php/smarty/issues/237\n  - bugfix template function data should be merged when loading subtemplate https://github.com/smarty-php/smarty/issues/240\n  - bugfix wrong parameter on compileAllTemplates() https://github.com/smarty-php/smarty/issues/231\n\n 12.07.2016\n  - bugfix {foreach} item variable must be created also on empty from array https://github.com/smarty-php/smarty/issues/238 and https://github.com/smarty-php/smarty/issues/239\n  - bugfix enableSecurity() must init cache flags https://github.com/smarty-php/smarty/issues/247\n\n 27.05.2016\n  - bugfix/improvement of compileAlltemplates() follow symlinks in template folder (PHP >= 5.3.1) https://github.com/smarty-php/smarty/issues/224\n      clear internal cache and expension handler for each template to avoid possible conflicts https://github.com/smarty-php/smarty/issues/231\n\n 16.05.2016\n  - optimization {foreach} compiler and processing\n  - broken PHP 5.3 and 5.4 compatibility\n\n 15.05.2016\n  - optimization and cleanup of resource code\n\n 10.05.2016\n  - optimization of inheritance processing\n\n 07.05.2016\n  -bugfix Only variables should be assigned by reference https://github.com/smarty-php/smarty/issues/227\n\n 02.05.2016\n  - enhancement {block} tag names can now be variable https://github.com/smarty-php/smarty/issues/221\n\n 01.05.2016\n  - bugfix same relative filepath at {include} called from template in different folders could display wrong sub-template\n\n 29.04.2016\n  - bugfix {strip} remove space on linebreak between html tags https://github.com/smarty-php/smarty/issues/213\n\n 24.04.2016\n  - bugfix nested {include} with relative file path could fail when called in {block} ... {/block} https://github.com/smarty-php/smarty/issues/218\n\n 14.04.2016\n  - bugfix special variable {$smarty.capture.name} was not case sensitive on name https://github.com/smarty-php/smarty/issues/210\n  - bugfix the default template handler must calculate the source uid https://github.com/smarty-php/smarty/issues/205\n\n 13.04.2016\n  - bugfix template inheritance status must be saved when calling sub-templates https://github.com/smarty-php/smarty/issues/215\n\n 27.03.2016\n  - bugfix change of 11.03.2016 cause again {capture} data could not been seen in other templates with {$smarty.capture.name} https://github.com/smarty-php/smarty/issues/153\n\n 11.03.2016\n  - optimization of capture and security handling\n  - improvement $smarty->clearCompiledTemplate() should return on recompiled or uncompiled resources\n\n 10.03.2016\n  - optimization of resource processing\n\n 09.03.2016\n  - improvement rework of 'scope' attribute handling see see NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/194\n    https://github.com/smarty-php/smarty/issues/186 https://github.com/smarty-php/smarty/issues/179\n  - bugfix correct Autoloader update of 2.3.2014 https://github.com/smarty-php/smarty/issues/199\n\n 04.03.2016\n  - bugfix change from 01.03.2016 will cause $smarty->isCached(..) failure if called multiple time for same template\n    (forum topic 25935)\n\n 02.03.2016\n  - revert autoloader optimizations because of unexplainable warning when using plugins https://github.com/smarty-php/smarty/issues/199\n\n 01.03.2016\n  - bugfix template objects must be cached on $smarty->fetch('foo.tpl) calls incase the template is fetched\n    multiple times (forum topic 25909)\n\n 25.02.2016\n  - bugfix wrong _realpath with 4 or more parent-directories https://github.com/smarty-php/smarty/issues/190\n  - optimization of _realpath\n  - bugfix instanceof expression in template code must be treated as value https://github.com/smarty-php/smarty/issues/191\n\n 20.02.2016\n  - bugfix {strip} must keep space between hmtl tags. Broken by changes of 10.2.2016 https://github.com/smarty-php/smarty/issues/184\n  - new feature/bugfix  {foreach}{section} add 'properties' attribute to force compilation of loop properties\n    see NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/189\n\n 19.02.2016\n  - revert output buffer flushing on display, echo content again because possible problems when PHP files had\n    characters (newline} after ?> at file end https://github.com/smarty-php/smarty/issues/187\n\n 14.02.2016\n  - new tag {make_nocache} read NEW_FEATURES.txt https://github.com/smarty-php/smarty/issues/110\n  - optimization of sub-template processing\n  - bugfix using extendsall as default resource and {include} inside {block} tags could produce unexpected results https://github.com/smarty-php/smarty/issues/183\n  - optimization of tag attribute compiling\n  - optimization make compiler tag object cache static for higher compilation speed\n\n 11.02.2016\n  - improvement added KnockoutJS comments to trimwhitespace outputfilter https://github.com/smarty-php/smarty/issues/82\n    https://github.com/smarty-php/smarty/pull/181\n\n 10.02.2016\n  - bugfix {strip} must keep space on output creating smarty tags within html tags https://github.com/smarty-php/smarty/issues/177\n  - bugfix wrong precedence on special if conditions like '$foo is ... by $bar' could cause wrong code https://github.com/smarty-php/smarty/issues/178\n  - improvement because of ambiguities the inline constant support has been removed from the $foo.bar syntax https://github.com/smarty-php/smarty/issues/149\n  - bugfix other {strip} error with output tags between hmtl https://github.com/smarty-php/smarty/issues/180\n\n 09.02.2016\n  - move some code from parser into compiler\n  - reformat all code for unique style\n  - update/bugfix scope attribute handling reworked. Read the newfeatures.txt file\n\n 05.02.2016\n  - improvement internal compiler changes\n\n 01.02.2016\n  - bugfix {foreach} compilation failed when $smarty->merge_compiled_includes = true and pre-filters are used.\n\n 29.01.2016\n  - bugfix implement replacement code for _tag_stack property https://github.com/smarty-php/smarty/issues/151\n\n 28.01.2016\n  - bugfix allow windows network filepath or wrapper (forum topic 25876) https://github.com/smarty-php/smarty/issues/170\n  - bugfix if fetch('foo.tpl') is called on a template object the $parent parameter should default to the calling template object https://github.com/smarty-php/smarty/issues/152\n\n 27.01.2016\n  - revert bugfix compiling {section} did create warning\n  - bugfix {$smarty.section.customer.loop} did throw compiler error https://github.com/smarty-php/smarty/issues/161\n    update of yesterdays fix\n  - bugfix string resource could inject code at {block} or inline subtemplates through PHP comments https://github.com/smarty-php/smarty/issues/157\t\t\n  - bugfix output filters did not observe nocache code flhttps://github.com/smarty-php/smarty/issues/154g https://github.com/smarty-php/smarty/issues/160\n  - bugfix {extends} with relative file path did not work https://github.com/smarty-php/smarty/issues/154\n    https://github.com/smarty-php/smarty/issues/158\n  - bugfix {capture} data could not been seen in other templates with {$smarty.capture.name} https://github.com/smarty-php/smarty/issues/153\n\n 26.01.2016\n  - improvement observe Smarty::$_CHARSET in debugging console https://github.com/smarty-php/smarty/issues/169\n  - bugfix compiling {section} did create warning\n  - bugfix {$smarty.section.customer.loop} did throw compiler error https://github.com/smarty-php/smarty/issues/161\n\n 02.01.2016\n  - update scope handling\n  - optimize block plugin compiler\n  - improvement runtime checks if registered block plugins are callable\n\n 01.01.2016\n  - remove Smarty::$resource_cache_mode property\n\n 31.12.2015\n  - optimization of {assign}, {if} and {while} compiled code\n\n 30.12.2015\n  - bugfix plugin names starting with \"php\" did not compile https://github.com/smarty-php/smarty/issues/147\n\n 29.12.2015\n  - bugfix Smarty::error_reporting was not observed when display() or fetch() was called on template objects https://github.com/smarty-php/smarty/issues/145\n\n 28.12.2015\n  - optimization of {foreach} code size and processing\n\n 27.12.2015\n  - improve inheritance code\n  - update external methods\n  - code fixes\n  - PHPdoc updates\n\n 25.12.2015\n  - compile {block} tag code and its processing into classes\n  - optimization replace hhvm extension by inline code\n  - new feature If ACP is enabled force an apc_compile_file() when compiled or cached template was updated\n\n 24.12.2015\n  - new feature Compiler does now observe the template_dir setting and will create separate compiled files if required\n  - bugfix post filter did fail on template inheritance https://github.com/smarty-php/smarty/issues/144\n\n 23.12.2015\n  - optimization move internal method decodeProperties back into template object\n  - optimization move subtemplate processing back into template object\n  - new feature Caching does now observe the template_dir setting and will create separate cache files if required\n\n 22.12.2015\n  - change $xxx_dir properties from private to protected in case Smarty class gets extended\n  - code optimizations\n\n 21.12.2015\n  - bugfix a filepath starting with '/' or '\\' on windows should normalize to the root dir\n    of current working drive https://github.com/smarty-php/smarty/issues/134\n  - optimization of filepath normalization\n  - bugfix {strip} must remove all blanks between html tags https://github.com/smarty-php/smarty/issues/136\n\n - 3.1.29 - (21.12.2015)\n 21.12.2015\n  - optimization improve speed of filetime checks on extends and extendsall resource\n\n 20.12.2015\n  - bugfix failure when the default resource type was set to 'extendsall' https://github.com/smarty-php/smarty/issues/123\n  - update compilation of Smarty special variables\n  - bugfix add addition check for OS type on normalization of file path https://github.com/smarty-php/smarty/issues/134\n  - bugfix the source uid of the extendsall resource must contain $template_dir settings https://github.com/smarty-php/smarty/issues/123\n\n 19.12.2015\n  - bugfix using $smarty.capture.foo in expressions could fail https://github.com/smarty-php/smarty/pull/138\n  - bugfix broken PHP 5.2 compatibility https://github.com/smarty-php/smarty/issues/139\n  - remove no longer used code\n  - improvement make sure that compiled and cache templates never can contain a trailing '?>?\n\n 18.12.2015\n  - bugfix regression when modifier parameter was followed by math https://github.com/smarty-php/smarty/issues/132\n\n 17.12.2015\n  - bugfix {$smarty.capture.nameFail} did lowercase capture name https://github.com/smarty-php/smarty/issues/135\n  - bugfix using {block append/prepend} on same block in multiple levels of inheritance templates could fail (forum topic 25827)\n  - bugfix text content consisting of just a single '0' like in {if true}0{/if} was suppressed (forum topic 25834)\n\n 16.12.2015\n  - bugfix {foreach} did fail if from atrribute is a Generator class https://github.com/smarty-php/smarty/issues/128\n  - bugfix direct access $smarty->template_dir = 'foo'; should call Smarty::setTemplateDir() https://github.com/smarty-php/smarty/issues/121\n\n 15.12.2015\n  - bugfix  {$smarty.cookies.foo} did return the $_COOKIE array not the 'foo' value https://github.com/smarty-php/smarty/issues/122\n  - bugfix  a call to clearAllCache() and other should clear all internal template object caches (forum topic 25828)\n\n 14.12.2015\n  - bugfix  {$smarty.config.foo} broken in 3.1.28 https://github.com/smarty-php/smarty/issues/120\n  - bugfix  multiple calls of {section} with same name droped E_NOTICE error https://github.com/smarty-php/smarty/issues/118\n\n - 3.1.28 - (13.12.2015)\n 13.12.2015\n  - bugfix {foreach} and {section} with uppercase characters in name attribute did not work (forum topic 25819)\n  - bugfix $smarty->debugging_ctrl = 'URL' did not work (forum topic 25811)\n  - bugfix Debug Console could display incorrect data when using subtemplates\n\n 09.12.2015\n  - bugfix Smarty did fail under PHP 7.0.0 with use_include_path = true;\n\n 09.12.2015\n  - bugfix {strip} should exclude some html tags from stripping, related to fix for https://github.com/smarty-php/smarty/issues/111\n\n 08.12.2015\n  - bugfix internal template function data got stored in wrong compiled file https://github.com/smarty-php/smarty/issues/114\n\n 05.12.2015\n  -bugfix {strip} should insert a single space https://github.com/smarty-php/smarty/issues/111\n\n 25.11.2015\n  -bugfix a left delimter like '[%' did fail on [%$var_[%$variable%]%] (forum topic 25798)\n\n 02.11.2015\n  - bugfix {include} with variable file name like {include file=\"foo_`$bar`.tpl\"} did fail in 3.1.28-dev https://github.com/smarty-php/smarty/issues/102\n\n 01.11.2015\n  - update config file processing\n\n 31.10.2015\n  - bugfix add missing $trusted_dir property to SmartyBC class (forum topic 25751)\n\n 29.10.2015\n  - improve template scope handling\n\n 24.10.2015\n  - more optimizations of template processing\n  - bugfix Error when using {include} within {capture} https://github.com/smarty-php/smarty/issues/100\n\n 21.10.2015\n  - move some code into runtime extensions\n\n 18.10.2015\n  - optimize filepath normalization\n  - rework of template inheritance\n  - speed and size optimizations\n  - bugfix under HHVM temporary cache file must only be created when caches template was updated\n  - fix compiled code for new {block} assign attribute\n  - update code generated by template function call handler\n\n 18.09.2015\n  - bugfix {if $foo instanceof $bar} failed to compile if 2nd value is a variable https://github.com/smarty-php/smarty/issues/92\n\n 17.09.2015\n  - bugfix {foreach} first attribute was not correctly reset since commit 05a8fa2 of 02.08.2015 https://github.com/smarty-php/smarty/issues/90\n\n 16.09.2015\n  - update compiler by moving no longer needed properties, code optimizations and other\n\n 14.09.2015\n  - optimize autoloader\n  - optimize subtemplate handling\n  - update template inheritance processing\n  - move code of {call} processing back into Smarty_Internal_Template class\n  - improvement invalidate OPCACHE for cleared compiled and cached template files (forum topic 25557)\n  - bugfix unintended multiple debug windows (forum topic 25699)\n\n 30.08.2015\n  - size optimization move some runtime functions into extension\n  - optimize inline template processing\n  - optimization merge inheritance child and parent templates into one compiled template file\n\n 29.08.2015\n  - improvement convert template inheritance into runtime processing\n  - bugfix {$smarty.block.parent} did always reference the root parent block https://github.com/smarty-php/smarty/issues/68\n\n 23.08.2015\n  - introduce Smarty::$resource_cache_mode and cache template object of {include} inside loop\n  - load seldom used Smarty API methods dynamically to reduce memory footprint\n  - cache template object of {include} if same template is included several times\n  - convert debug console processing to object\n  - use output buffers for better performance and less memory usage\n  - optimize nocache hash processing\n  - remove not really needed properties\n  - optimize rendering\n  - move caching to Smarty::_cache\n  - remove properties with redundant content\n  - optimize Smarty::templateExists()\n  - optimize use_include_path processing\n  - relocate properties for size optimization\n  - remove redundant code\n  - bugfix compiling super globals like {$smarty.get.foo} did fail in the master branch https://github.com/smarty-php/smarty/issues/77\n\n 06.08.2015\n  - avoid possible circular object references caused by parser/lexer objects\n  - rewrite compileAll... utility methods\n  - commit several  internal improvements\n  - bugfix Smarty failed when compile_id did contain \"|\"\n\n 03.08.2015\n  - rework clear cache methods\n  - bugfix compileAllConfig() was broken since 3.1.22 because of the changes in config file processing\n  - improve getIncludePath() to return directory if no file was given\n\n 02.08.2015\n  - optimization and code cleanup of {foreach} and {section} compiler\n  - rework {capture} compiler\n\n 01.08.2015\n  - update DateTime object can be instance of DateTimeImmutable since PHP5.5 https://github.com/smarty-php/smarty/pull/75\n  - improvement show resource type and start of template source instead of uid on eval: and string: resource (forum topic 25630)\n\n 31.07.2015\n  - optimize {foreach} and {section} compiler\n\n 29.07.2015\n  - optimize {section} compiler for speed and size of compiled code\n\n 28.07.2015\n  - update for PHP 7 compatibility\n\n 26.07.2015\n  - improvement impement workaround for HHVM PHP incompatibillity https://github.com/facebook/hhvm/issues/4797\n\n 25.07.2015\n  - bugfix parser did hang on text starting <?something https://github.com/smarty-php/smarty/issues/74\n\n 20.07.2015\n  - bugfix config files got recompiled on each request\n  - improvement invalidate PHP 5.5 opcache for recompiled and cached templates  https://github.com/smarty-php/smarty/issues/72\n\n 12.07.2015\n  - optimize {extends} compilation\n\n 10.07.2015\n  - bugfix force file: resource in demo resource.extendsall.php\n\n 08.07.2015\n  - bugfix convert each word of class names to ucfirst in in compiler. (forum topic 25588)\n\n 07.07.2015\n  - improvement allow fetch() or display() called on a template object to get output from other template\n     like $template->fetch('foo.tpl') https://github.com/smarty-php/smarty/issues/70\n  - improvement Added $limit parameter to regex_replace modifier #71\n  - new feature multiple indices on file: resource\n\n 06.07.2015\n  - optimize {block} compilation\n  - optimization get rid of __get and __set in source object\n\n 01.07.2015\n  - optimize compile check handling\n  - update {foreach} compiler\n  - bugfix debugging console did not display string values containing \\n, \\r or \\t correctly https://github.com/smarty-php/smarty/issues/66\n  - optimize source resources\n\n 28.06.2015\n  - move $smarty->enableSecurity() into Smarty_Security class\n  - optimize security isTrustedResourceDir()\n  - move auto load filter methods into extension\n  - move $smarty->getTemplateVars() into extension\n  - move getStreamVariable() into extension\n  - move $smarty->append() and $smarty->appendByRef() into extension\n  - optimize autoloader\n  - optimize file path normalization\n  - bugfix PATH_SEPARATOR was replaced by mistake in autoloader\n  - remove redundant code\n\n 27.06.2015\n  - bugfix resolve naming conflict between custom Smarty delimiter '<%' and PHP ASP tags https://github.com/smarty-php/smarty/issues/64\n  - update $smarty->_realpath for relative path not starting with './'\n  - update Smarty security with new realpath handling\n  - update {include_php} with new realpath handling\n  - move $smarty->loadPlugin() into extension\n  - minor compiler optimizations\n  - bugfix allow function plugins with name ending with 'close' https://github.com/smarty-php/smarty/issues/52\n  - rework of $smarty->clearCompiledTemplate() and move it to its own extension\n\n 19.06.2015\n  - improvement allow closures as callback at $smarty->registerFilter() https://github.com/smarty-php/smarty/issues/59\n\n - 3.1.27- (18.06.2015)\n 18.06.2015\n  - bugfix another update on file path normalization failed on path containing something like \"/.foo/\" https://github.com/smarty-php/smarty/issues/56\n\n - 3.1.26- (18.06.2015)\n 18.06.2015\n  - bugfix file path normalization failed on path containing something like \"/.foo/\" https://github.com/smarty-php/smarty/issues/56\n\n 17.06.2015\n  - bugfix calling a plugin with nocache option but no other attributes like {foo nocache} caused call to undefined function https://github.com/smarty-php/smarty/issues/55\n\n - 3.1.25- (15.06.2015)\n 15.06.2015\n  - optimization of smarty_cachereource_keyvaluestore.php code\n\n 14.06.2015\n  - bugfix a relative sub template path could fail if template_dir path did contain /../ https://github.com/smarty-php/smarty/issues/50\n  - optimization rework of path normalization\n  - bugfix an output tag with variable, modifier followed by an operator like {$foo|modifier+1} did fail https://github.com/smarty-php/smarty/issues/53\n\n 13.06.2015\n  - bugfix a custom cache resource using smarty_cachereource_keyvaluestore.php did fail if php.ini mbstring.func_overload = 2 (forum topic 25568)\n\n 11.06.2015\n  - bugfix the lexer could hang on very large quoted strings (forum topic 25570)\n\n 08.06.2015\n  - bugfix using {$foo} as array index like $bar.{$foo} or in double quoted string like \"some {$foo} thing\" failed https://github.com/smarty-php/smarty/issues/49\n\n 04.06.2015\n  - bugfix possible error message on unset() while compiling {block} tags https://github.com/smarty-php/smarty/issues/46\n\n 01.06.2015\n  - bugfix <?xml ... ?> including template variables broken  since 3.1.22 https://github.com/smarty-php/smarty/issues/47\n\n 27.05.2015\n  - bugfix {include} with variable file name must not create by default individual cache file (since 3.1.22) https://github.com/smarty-php/smarty/issues/43\n\n 24.05.2015\n  - bugfix if condition string 'neq' broken due to a typo https://github.com/smarty-php/smarty/issues/42\n\n - 3.1.24- (23.05.2015)\n 23.05.2015\n  - improvement on php_handling to allow very large PHP sections, better error handling\n  - improvement allow extreme large comment sections (forum 25538)\n\n 21.05.2015\n  - bugfix broken PHP 5.2 compatibility when compiling <?php tags https://github.com/smarty-php/smarty/issues/40\n  - bugfix named {foreach} comparison like $smarty.foreach.foobar.index > 1 did compile into wrong code https://github.com/smarty-php/smarty/issues/41\n\n 19.05.2015\n  - bugfix compiler did overwrite existing variable value when setting the nocache attribute https://github.com/smarty-php/smarty/issues/39\n  - bugfix output filter trimwhitespace could run into the pcre.backtrack_limit on large output (code.google issue 220)\n  - bugfix compiler could run into the pcre.backtrack_limit on larger comment or {php} tag sections (forum 25538)\n\n 18.05.2015\n  - improvement introduce shortcuts in lexer/parser rules for most frequent terms for higher\n    compilation speed\n\n 16.05.2015\n  - bugfix {php}{/php} did work just for single lines https://github.com/smarty-php/smarty/issues/33\n  - improvement remove not needed ?><?php transitions from compiled code\n  - improvement reduce number of lexer tokens on operators and if conditions\n  - improvement higher compilation speed by modified lexer/parser generator at \"smarty/smarty-lexer\"\n\n 13.05.2015\n  - improvement remove not needed ?><?php transitions from compiled code\n  - improvement of debugging:\n      - use fresh Smarty object to display the debug console because of possible problems when the Smarty\n        was extended or Smarty properties had been modified in the class source\n      - display Smarty version number\n      - Truncate lenght of Origin display and extend strin value display to 80 character\n  - bugfix in Smarty_Security  'nl2br' should be a trusted modifier, not PHP function (code.google issue 223)\n\n 12.05.2015\n  - bugfix {$smarty.constant.TEST} did fail  on undefined constant https://github.com/smarty-php/smarty/issues/28\n  - bugfix access to undefined config variable like {#undef#} did fail https://github.com/smarty-php/smarty/issues/29\n  - bugfix in nested {foreach} saved item attributes got overwritten https://github.com/smarty-php/smarty/issues/33\n\n - 3.1.23 - (12.05.2015)\n 12.05.2015\n  - bugfix of smaller performance issue introduce in 3.1.22 when caching is enabled\n  - bugfix missig entry for smarty-temmplate-config in autoloader\n\n - 3.1.22 - tag was deleted because 3.1.22 did fail caused by the missing entry for smarty-temmplate-config in autoloader\n 10.05.2015\n  - bugfix custom cache resource did not observe compile_id and cache_id when $cache_locking == true\n  - bugfix cache lock was not handled correctly after timeout when $cache_locking == true\n  - improvement added constants for $debugging\n\n 07.05.2015\n  - improvement of the debugging console. Read NEW_FEATURES.txt\n  - optimization of resource class loading\n\n 06.05.2015\n  - bugfix in 3.1.22-dev cache resource must not be loaded for subtemplates\n  - bugfix/improvement in 3.1.22-dev cache locking did not work as expected\n\n 05.05.2015\n  - optimization on cache update when main template is modified\n  - optimization move <?php ?> handling from parser to new compiler module\n\n 05.05.2015\n  - bugfix code could be messed up when {tags} are used in multiple attributes https://github.com/smarty-php/smarty/issues/23\n\n 04.05.2015\n  - bugfix Smarty_Resource::parseResourceName incompatible with Google AppEngine (https://github.com/smarty-php/smarty/issues/22)\n  - improvement use is_file() checks to avoid errors suppressed by @ which could still cause problems (https://github.com/smarty-php/smarty/issues/24)\n\n 28.04.2015\n  - bugfix plugins of merged subtemplates not loaded in 3.1.22-dev (forum topic 25508) 2nd fix\n\n 28.04.2015\n  - bugfix plugins of merged subtemplates not loaded in 3.1.22-dev (forum topic 25508)\n\n 23.04.2015\n  - bugfix a nocache template variable used as parameter at {insert} was by mistake cached\n\n 20.04.2015\n  - bugfix at a template function containing nocache code a parmeter could overwrite a template variable of same name\n\n 27.03.2015\n  - bugfix Smarty_Security->allow_constants=false; did also disable true, false and null (change of 16.03.2015)\n  - improvement added a whitelist for trusted constants to security Smarty_Security::$trusted_constants (forum topic 25471)\n\n 20.03.2015\n  - bugfix make sure that function properties get saved only in compiled files containing the fuction definition {forum topic 25452}\n  - bugfix correct update of global variable values on exit of template functions. (reported under Smarty Developers)\n\n 16.03.2015\n - bugfix  problems with {function}{/function} and {call} tags in different subtemplate cache files {forum topic 25452}\n - bugfix  Smarty_Security->allow_constants=false; did not disallow direct usage of defined constants like {SMARTY_DIR} {forum topic 25457}\n - bugfix  {block}{/block} tags did not work inside double quoted strings https://github.com/smarty-php/smarty/issues/18\n\n\n 15.03.2015\n - bugfix  $smarty->compile_check must be restored before rendering of a just updated cache file {forum 25452}\n\n 14.03.2015\n - bugfix  {nocache}  {/nocache} tags corrupted code when used within a nocache section caused by a nocache template variable.\n\n - bugfix  template functions defined with {function} in an included subtemplate could not be called in nocache\n           mode with {call... nocache} if the subtemplate had it's own cache file {forum 25452}\n\n 10.03.2015\n - bugfix {include ... nocache} whith variable file or compile_id attribute was not executed in nocache mode.\n\n 12.02.2015\n - bugfix multiple Smarty::fetch() of same template when $smarty->merge_compiled_includes = true; could cause function already defined error\n\n 11.02.2015\n - bugfix recursive {includes} did create E_NOTICE message when $smarty->merge_compiled_includes = true; (github issue #16)\n\n 22.01.2015\n - new feature security can now control access to static methods and properties\n                see also NEW_FEATURES.txt\n\n 21.01.2015\n - bugfix clearCompiledTemplates(), clearAll() and clear() could try to delete whole drive at wrong path permissions because realpath() fail (forum 25397)\n - bugfix 'self::' and 'parent::' was interpreted in template syntax as static class\n\n 04.01.2015\n - push last weeks changes to github\n\n - different optimizations\n - improvement automatically create different versions of compiled templates and config files depending\n   on property settings.\n - optimization restructure template processing by moving code into classes it better belongs to\n - optimization restructure config file processing\n\n 31.12.2014\n - bugfix use function_exists('mb_get_info') for setting Smarty::$_MBSTRING.\n   Function mb_split could be overloaded depending on php.ini mbstring.func_overload\n\n\n 29.12.2014\n - new feature security can now limit the template nesting level by property $max_template_nesting\n                see also NEW_FEATURES.txt (forum 25370)\n\n 29.12.2014\n - new feature security can now disable special $smarty variables listed in property $disabled_special_smarty_vars\n                see also NEW_FEATURES.txt (forum 25370)\n\n 27.12.2014\n  - bugfix clear internal _is_file_cache when plugins_dir was modified\n\n 13.12.2014\n  - improvement optimization of lexer and parser resulting in a up to 30% higher compiling speed\n\n 11.12.2014\n  - bugfix resolve parser ambiguity between constant print tag {CONST} and other smarty tags after change of 09.12.2014\n\n 09.12.2014\n  - bugfix variables $null, $true and $false did not work after the change of 12.11.2014 (forum 25342)\n  - bugfix call of template function by a variable name did not work after latest changes (forum 25342)\n\n 23.11.2014\n  - bugfix a plugin with attached modifier could fail if the tag was immediately followed by another Smarty tag (since 3.1.21) (forum 25326)\n\n 13.11.2014\n  - improvement move autoload code into Autoloader.php. Use Composer autoloader when possible\n\n 12.11.2014\n - new feature added support of namespaces to template code\n\n 08.11.2014 - 10.11.2014\n - bugfix subtemplate called in nocache mode could be called with wrong compile_id when it did change on one of the calling templates\n - improvement add code of template functions called in nocache mode dynamically to cache file (related to bugfix of 01.11.2014)\n - bugfix Debug Console did not include all data from merged compiled subtemplates\n\n 04.11.2014\n - new feature $smarty->debugging = true; => overwrite existing Debug Console window (old behaviour)\n               $smarty->debugging = 2; => individual Debug Console window by template name\n\n 03.11.2014\n - bugfix Debug Console did not show included subtemplates since 3.1.17 (forum 25301)\n - bugfix Modifier debug_print_var did not limit recursion or prevent recursive object display at Debug Console\n    (ATTENTION: parameter order has changed to be able to specify maximum recursion)\n - bugfix Debug consol did not include subtemplate information with $smarty->merge_compiled_includes = true\n - improvement The template variables are no longer displayed as objects on the Debug Console\n - improvement $smarty->createData($parent = null, $name = null) new optional name parameter for display at Debug Console\n - addition of some hooks for future extension of Debug Console\n\n 01.11.2014\n - bugfix and enhancement on subtemplate {include} and template {function} tags.\n   * Calling a template which has a nocache section could fail if it was called from a cached and a not cached subtemplate.\n   * Calling the same subtemplate cached and not cached with the $smarty->merge_compiled_includes enabled could cause problems\n   * Many smaller related changes\n\n 30.10.2014\n - bugfix access to class constant by object like {$object::CONST} or variable class name {$class::CONST} did not work (forum 25301)\n\n 26.10.2014\n - bugfix E_NOTICE message was created during compilation when ASP tags '<%' or '%>' are in template source text\n - bugfix merge_compiled_includes option failed when caching  enables and same subtemplate was included cached and not cached\n\n - 3.1.21 - (18.10.2014)\n 18.10.2014\n  - composer moved to github\n\n 17.10.2014\n - bugfix on $php_handling security and optimization of smarty_internal_parsetree (Thue Kristensen)\n\n 16.10.2014\n - bugfix composer.json update\n\n 15.10.2014\n - bugfix calling a new created cache file with fetch() and Smarty::CACHING_LIFETIME_SAVED multiple times did fail (forum 22350)\n\n 14.10.2014\n - bugfix any tag placed within \"<script language=php>\" will throw a security exception to close all thinkable holes\n - bugfix classmap in root composer.json should start at \"libs/...\"\n - improvement cache is_file(file_exists) results of loadPlugin() to avoid unnecessary calls during compilation (Issue 201}\n\n 12.10.2014\n - bugfix a comment like \"<script{*foo*} language=php>\" bypassed $php_handling checking (Thue Kristensen)\n - bugfix change of 08.10.2014 could create E_NOTICE meassage when using \"<?php\" tags\n - bugfix \"<script language=php>\" with $php_handling PHP_PASSTHRU was executed in {nocache} sections\n\n - 3.1.20 - (09.10.2014)\n 08.10.2014\n - bugfix security mode of \"<script language=php>\" must be controlled by $php_handling property (Thue Kristensen)\n\n 01.10.2014\n - bugfix template resource of inheritance blocks could get invalid if the default resource type is not 'file'(Issue 202)\n - bugfix existing child {block} tag must override parent {block} tag append / prepend setting (topic 25259)\n\n 02.08.2014\n - bugfix modifier wordwrap did output break string wrong if first word was exceeding length with cut = true (topic 25193)\n\n 24.07.2014\n - bugfix cache clear when cache folder does not exist\n\n 16.07.2014\n - enhancement remove BOM automatically from template source (topic 25161)\n\n 04.07.2014\n - bugfix the bufix of 02.06.2014 broke correct handling of child templates with same name but different template folders in extends resource (issue 194 and topic 25099)\n\n - 3.1.19 - (30.06.2014)\n 20.06.2014\n - bugfix template variables could not be passed as parameter in {include} when the include was in a {nocache} section (topic 25131)\n\n 17.06.2014\n - bugfix large template text of some charsets could cause parsing errors (topic 24630)\n\n 08.06.2014\n - bugfix registered objects did not work after spelling fixes of 06.06.2014\n - bugfix {block} tags within {literal} .. {/literal} got not displayed correctly (topic 25024)\n - bugfix UNC WINDOWS PATH like \"\\\\psf\\path\\to\\dir\" did not work as template directory (Issue 192)\n - bugfix {html_image} security check did fail on files relative to basedir (Issue 191)\n\n 06.06.2014\n - fixed PHPUnit outputFilterTrimWhitespaceTests.php assertion of test result\n - fixed spelling, PHPDoc , minor errors, code cleanup\n\n 02.06.2014\n - using multiple cwd with relative template dirs could result in identical compiled file names. (issue 194 and topic 25099)\n\n 19.04.2014\n - bugfix calling createTemplate(template, data) with empty data array caused notice of array to string conversion (Issue 189)\n - bugfix clearCompiledTemplate() did not delete files on WINDOWS when a compile_id was specified\n\n 18.04.2014\n - revert bugfix of 5.4.2014 because %-e date format is not supported on all operating systems\n\n - 3.1.18 - (07.04.2014)\n 06.04.2014\n - bugfix template inheritance fail when using custom resource after patch of 8.3.2014 (Issue 187)\n - bugfix update of composer file (Issue 168 and 184)\n\n 05.04.2014\n - bugfix default date format leads to extra spaces when displaying dates with single digit days (Issue 165)\n\n 26.03.2014\n - bugfix Smart_Resource_Custom should not lowercase the resource name (Issue 183)\n\n 24.03.2014\n - bugfix using a {foreach} property like @iteration could fail when used in inheritance parent templates (Issue 182)\n\n 20.03.2014\n - bugfix $smarty->auto_literal and mbsting.func_overload 2, 6 or 7 did fail (forum topic 24899)\n\n 18.03.2014\n - revert change of 17.03.2014\n\n17.03.2014\n - bugfix $smarty->auto_literal and mbsting.func_overload 2, 6 or 7 did fail (forum topic 24899)\n\n 15.03.2014\n - bugfix Smarty_CacheResource_Keyvaluestore did use different keys on read/writes and clearCache() calls (Issue 169)\n\n 13.03.2014\n - bugfix clearXxx() change of 27.1.2014 did not work when specifing cache_id or compile_id  (forum topic 24868 and 24867)\n\n - 3.1.17 -\n 08.03.2014\n - bugfix relative file path {include} within {block} of child templates did throw exception on first call (Issue 177)\n\n 17.02.2014\n - bugfix Smarty failed when executing PHP on HHVM (Hip Hop 2.4) because uniqid('',true) does return string with ',' (forum topic 20343)\n\n 16.02.2014\n - bugfix a '//' or '\\\\' in template_dir path could produce wrong path on relative filepath in {include} (Issue 175)\n\n 05.02.2014\n - bugfix shared.literal_compiler_param.php did throw an exception when literal did contain a '-' (smarty-developers group)\n\n 27.01.2014\n - bugfix $smarty->debugging = true; did show the variable of the $smarty object not the variables used in display() call (forum topic 24764)\n - bugfix clearCompiledTemplate(), clearAll() and clear() should use realpath to avoid possible exception from RecursiveDirectoryIterator (Issue 171)\n\n 26.01.2014\n - bugfix  undo block nesting checks for {nocache} for reasons like forum topic 23280 (forum topic 24762)\n\n 18.01.2014\n - bugfix the compiler did fail when using template inheritance and recursive {include} (smarty-developers group)\n\n 11.01.2014\n - bugfix \"* }\" (spaces before right delimiter) was interpreted by mistake as comment end tag (Issue 170)\n - internals  content cache should be clear when updating cache file\n\n 08.01.2014\n - bugfix Smarty_CacheResource_Custom did not handle template resource type specifications on clearCache() calls (Issue 169)\n - bugfix SmartyBC.class.php should use require_once to load Smarty.class.php (forum topic 24683)\n\n - 3.1.16 -\n 15.12.2013\n - bugfix {include} with {block} tag handling (forum topic 24599, 24594, 24682) (Issue 161)\n   Read 3.1.16_RELEASE_NOTES for more details\n - enhancement additional debug output at $smarty->_parserdebug = true;\n\n 07.11.2013\n - bugfix too restrictive handling of {include} within {block} tags. 3.1.15 did throw errors where 3.1.14 did not (forum topic 24599)\n - bugfix compiler could fail if PHP mbstring.func_overload is enabled  (Issue 164)\n\n 28.10.2013\n - bugfix variable resource name at custom resource plugin did not work within {block} tags (Issue 163)\n - bugfix notice \"Trying to get property of non-object\" removed (Issue 163)\n - bugfix correction of modifier capitalize fix from 3.10.2013  (issue 159)\n - bugfix multiple {block}s with same name in parent did not work (forum topic 24631)\n\n 20.10.2013\n - bugfix a variable file name at {extends} tag did fail (forum topic 24618)\n\n 14.10.2013\n - bugfix yesterdays fix could result in an undefined variable\n\n 13.10.2013\n - bugfix variable names on {include} in template inheritance did unextepted error message (forum topic 24594) (Issue 161)\n.- bugfix relative includes with same name like {include './foo.tpl'} from different folder failed (forum topic 24590)(Issue 161)\n\n 04.10.2013\n - bugfix variable file names at {extends} had been disbabled by mistake with the rewrite of\n   template inheritance of 24.08.2013   (forum topic 24585)\n\n03.10.2013\n - bugfix loops using modifier capitalize did eat up memory (issue 159)\n\n - Smarty 3.1.15 -\n01.10.2013\n - use current delimiters in compiler error messages (issue 157)\n - improvement on performance when using error handler and multiple template folders (issue 152)\n\n17.09.2013\n - improvement added patch for additional SmartyCompilerException properties for better access to source information (forum topic 24559)\n\n16.09.2013\n - bugfix recompiled templates did not show on first request with zend opcache cache (forum topic 24320)\n\n13.09.2013\n - bugfix html_select_time defaulting error for the Meridian dropdown (forum topic 24549)\n\n09.09.2012\n- bugfix incorrect compiled code with array(object,method) callback at registered Variable Filter (forum topic 24542)\n\n27.08.2013\n- bugfix delimiter followed by linebreak did not work as auto literal after update from 24.08.2013 (forum topic 24518)\n\n24.08.2013\n- bugfix and enhancement\n  Because several recent problems with template inheritance the {block} tag compiler has been rewriten\n   - Error messages shown now the correct child template file and line number\n   - The compiler could fail on some larger UTF-8 text block (forum topic 24455)\n   - The {strip} tag can now be placed outside {block} tags in child templates (forum topic 24289)\n- change SmartyException::$escape  is now false by default\n- change PHP traceback has been remove for SmartyException and SmartyCompilerException\n\n14.08.2013\n- bugfix compiled filepath of config file did not observe different config_dir (forum topic 24493)\n\n13.08.2013\n- bugfix the internal resource cache did not observe config_dir changes (forum topic 24493)\n\n12.08.2013\n- bugfix internal $tmpx variables must be unique over all inheritance templates (Issue 149)\n\n10.08.2013\n- bugfix a newline was eaten when a <?xml ... ?> was passed by a Smarty variable and caching was enabled (forum topic 24482)\n\n29.07.2013\n- bugfix headers already send warning thrown when using 'SMARTY_DEBUG=on' from URL (Issue 148)\n\n27.07.2013\n- enhancement allow access to properties of registered opjects for Smarty2 BC (forum topic 24344)\n\n26.07.2013\n- bugfix template inheritance nesting problem (forum topic 24387)\n\n15.7.2013\n- update code generated by PSR-2 standards fixer which introduced PHP 5.4 incompatibilities of 14.7.2013\n\n14.7.2013\n- bugfix increase of internal maximum parser stacksize to allow more complex tag code {forum topic 24426}\n- update for PHP 5.4 compatibility\n- reformat source to PSR-2 standard\n\n12.7.2013\n- bugfix Do not remove '//' from file path at normalization (Issue 142)\n\n2.7.2013\n- bugfix trimwhitespace would replace captured items in wrong order (forum topic 24387)\n\n## Smarty-3.1.14 -\n27.06.2013\n- bugfix removed PHP 5.5 deprecated preg_replace /e option in modifier capitalize (forum topic 24389)\n\n17.06.2013\n- fixed spelling in sources and documentation (from smarty-developers forum Veres Lajos)\n- enhancement added constant SMARTY::CLEAR_EXPIRED for the change of 26.05.2013 (forum topic 24310)\n- bugfix added smarty_security.php to composer.json (Issue 135)\n\n26.05.2013\n- enhancement an expire_time of -1 in clearCache() and clearAllCache() will delete outdated cache files\n  by their individual cache_lifetime used at creation (forum topic 24310)\n\n21.05.2013\n- bugfix modifier strip_tags:true was compiled into wrong code (Forum Topic 24287)\n- bugfix /n after ?> in Smarty.class.php did start output buffering (Issue 138)\n\n25.04.2013\n- bugfix escape and wordrap modifier could be compiled into wrong code when used in {nocache}{/nocache}\n  section but caching is disabled  (Forum Topic 24260)\n\n05.04.2013\n- bugfix post filter must not run when compiling inheritance child blocks (Forum Topic 24094)\n- bugfix after the fix for Issue #130 compiler exceptions got double escaped (Forum Topic 24199)\n\n28.02.2013\n- bugfix nocache blocks could be lost when using CACHING_LIFETIME_SAVED (Issue #133)\n- bugfix Compile ID gets nulled when compiling child blocks (Issue #134)\n\n\n24.01.2013\n- bugfix wrong tag type in smarty_internal_templatecompilerbase.php could cause wrong plugin search order (Forum Topic 24028)\n\n## Smarty-3.1.13 -\n13.01.2013\n- enhancement allow to disable exception message escaping by SmartyException::$escape = false;  (Issue #130)\n\n09.01.2013\n- bugfix compilation did fail when a prefilter did modify an {extends} tag c\n- bugfix template inheritance could fail if nested {block} tags in childs did contain {$smarty.block.child} (Issue #127)\n- bugfix template inheritance could fail if {block} tags in childs did have similar name as used plugins (Issue #128)\n- added abstract method declaration doCompile() in Smarty_Internal_TemplateCompilerBase (Forum Topic 23969)\n\n06.01.2013\n- Allow '://' URL syntax in template names of stream resources  (Issue #129)\n\n27.11.2012\n- bugfix wrong variable usage in smarty_internal_utility.php (Issue #125)\n\n26.11.2012\n- bugfix global variable assigned within template function are not seen after template function exit (Forum Topic 23800)\n\n24.11.2012\n- made SmartyBC loadable via composer (Issue #124)\n\n20.11.2012\n- bugfix assignGlobal() called from plugins did not work (Forum Topic 23771)\n\n13.11.2012\n- adding attribute \"strict\" to html_options, html_checkboxes, html_radios to only print disabled/readonly attributes if their values are true or \"disabled\"/\"readonly\" (Issue #120)\n\n01.11.2012\n- bugfix muteExcpetedErrors() would screw up for non-readable paths (Issue #118)\n\n## Smarty-3.1.12  -\n14.09.2012\n- bugfix template inheritance failed to compile with delimiters {/ and /} (Forum Topic 23008)\n\n11.09.2012\n- bugfix escape Smarty exception messages to avoid possible script execution\n\n10.09.2012\n- bugfix tag option flags and shorttag attributes did not work when rdel started with '=' (Forum Topic 22979)\n\n31.08.2012\n- bugfix resolving relative paths broke in some circumstances (Issue #114)\n\n22.08.2012\n- bugfix test MBString availability through mb_split, as it could've been compiled without regex support (--enable-mbregex).\n  Either we get MBstring's full package, or we pretend it's not there at all.\n\n21.08.2012\n- bugfix $auto_literal = false did not work with { block} tags in child templates\n  (problem was reintroduced after fix in 3.1.7)(Forum Topic 20581)\n\n17.08.2012\n- bugfix compiled code of nocache sections could contain wrong escaping (Forum Topic 22810)\n\n15.08.2012\n- bugfix template inheritance did produce wrong code if subtemplates with {block} was\n  included several times (from smarty-developers forum)\n\n14.08.2012\n- bugfix PHP5.2 compatibility compromised by SplFileInfo::getBasename() (Issue 110)\n\n01.08.2012\n- bugfix avoid PHP error on $smarty->configLoad(...) with invalid section specification (Forum Topic 22608)\n\n30.07.2012\n-bugfix {assign} in a nocache section should not overwrite existing variable values\n   during compilation (issue 109)\n\n28.07.2012\n- bugfix array access of config variables did not work (Forum Topic 22527)\n\n19.07.2012\n- bugfix the default plugin handler did create wrong compiled code for static class methods\n  from external script files (issue 108)\n\n## Smarty-3.1.11 -\n30.06.2012\n- bugfix {block.. hide} did not work as nested child (Forum Topic 22216)\n\n25.06.2012\n- bugfix the default plugin handler did not allow static class methods for modifier (issue 85)\n\n24.06.2012\n- bugfix escape modifier support for PHP < 5.2.3 (Forum Topic 21176)\n\n11.06.2012\n- bugfix the patch for Topic 21856 did break tabs between tag attributes (Forum Topic 22124)\n\n## Smarty-3.1.10  -\n09.06.2012\n- bugfix the compiler did ignore registered compiler plugins for closing tags (Forum Topic 22094)\n- bugfix the patch for Topic 21856 did break multiline tags (Forum Topic 22124)\n\n## Smarty-3.1.9 -\n07.06.2012\n- bugfix fetch() and display() with relative paths (Issue 104)\n- bugfix treat \"0000-00-00\" as 0 in modifier.date_format (Issue 103)\n\n24.05.2012\n- bugfix Smarty_Internal_Write_File::writeFile() could cause race-conditions on linux systems (Issue 101)\n- bugfix attribute parameter names of plugins may now contain also \"-\"  and \":\"  (Forum Topic 21856)\n- bugfix add compile_id to cache key of of source (Issue 97)\n\n22.05.2012\n- bugfix recursive {include} within {section} did fail (Smarty developer group)\n\n12.05.2012\n- bugfix {html_options} did not properly escape values (Issue 98)\n\n03.05.2012\n- bugfix make HTTP protocall version variable (issue 96)\n\n02.05.2012\n- bugfix  {nocache}{block}{plugin}... did produce wrong compiled code when caching is disabled (Forum Topic 21572, issue 95)\n\n12.04.2012\n- bugfix Smarty did eat the linebreak after the <?xml...?> closing tag (Issue 93)\n- bugfix concurrent cache updates could create a warning (Forum Topic 21403)\n\n08.04.2012\n- bugfix \"\\\\\" was not escaped correctly when generating nocache code (Forum Topic 21364)\n\n30.03.2012\n- bugfix template inheritance did  not throw exception when a parent template was deleted (issue 90)\n\n27.03.2012\n- bugfix prefilter did run multiple times on inline subtemplates compiled into several main templates (Forum Topic 21325)\n- bugfix implement Smarty2's behaviour of variables assigned by reference in SmartyBC. {assign} will affect all references.\n  (issue 88)\n\n21.03.2012\n- bugfix compileAllTemplates() and compileAllConfig() did not return the number of compiled files (Forum Topic 21286)\n\n13.03.2012\n- correction of yesterdays bugfix (Forum Topic 21175 and 21182)\n\n12.03.2012\n- bugfix a double quoted string of \"$foo\" did not compile into PHP \"$foo\" (Forum Topic 21175)\n- bugfix template inheritance did set $merge_compiled_includes globally true\n\n03.03.2012\n- optimization of compiling speed when same modifier was used several times\n\n02.03.2012\n- enhancement the default plugin handler can now also resolve undefined modifier (Smarty::PLUGIN_MODIFIER)\n  (Issue 85)\n\n## Smarty-3.1.8  -\n19.02.2012\n- bugfix {include} could result in a fatal error if used in appended or prepended nested {block} tags\n  (reported by mh and Issue 83)\n- enhancement added Smarty special variable $smarty.template_object to return the current template object (Forum Topic 20289)\n\n\n07.02.2012\n- bugfix increase entropy of internal function names in compiled and cached template files (Forum Topic 20996)\n- enhancement cacheable parameter added to default plugin handler, same functionality as in registerPlugin (request by calguy1000)\n\n06.02.2012\n- improvement stream_resolve_include_path() added to Smarty_Internal_Get_Include_Path (Forum Topic 20980)\n- bugfix fetch('extends:foo.tpl') always yielded $source->exists == true (Forum Topic 20980)\n- added modifier unescape:\"url\", fix (Forum Topic 20980)\n- improvement replaced some calls of preg_replace with str_replace (Issue 73)\n\n30.01.2012\n- bugfix Smarty_Security internal $_resource_dir cache wasn't properly propagated\n\n27.01.2012\n- bugfix Smarty did not a template name of \"0\" (Forum Topic 20895)\n\n20.01.2012\n- bugfix typo in Smarty_Internal_Get_IncludePath did cause runtime overhead (Issue 74)\n- improvment remove unneeded assigments (Issue 75 and 76)\n- fixed typo in template parser\n- bugfix output filter must not run before writing cache when template does contain nocache code (Issue 71)\n\n02.01.2012\n- bugfix {block foo nocache} did not load plugins within child {block} in nocache mode (Forum Topic 20753)\n\n29.12.2011\n- bugfix enable more entropy in Smarty_Internal_Write_File for \"more uniqueness\" and Cygwin compatibility (Forum Topic 20724)\n- bugfix embedded quotes in single quoted strings did not compile correctly in {nocache} sections (Forum Topic 20730)\n\n28.12.2011\n- bugfix Smarty's internal header code must be excluded from postfilters (issue 71)\n\n22.12.2011\n- bugfix the new lexer of 17.12.2011 did fail if mbstring.func_overload != 0 (issue 70) (Forum Topic 20680)\n- bugfix template inheritace did fail if mbstring.func_overload != 0 (issue 70) (Forum Topic 20680)\n\n20.12.2011\n- bugfix template inheritance: {$smarty.block.child} in nested child {block} tags did not return\n  content after {$smarty.block.child} (Forum Topic 20564)\n\n## Smarty-3.1.7 -\n18.12.2011\n- bugfix strings ending with \" in multiline strings of config files failed to compile (issue #67)\n- added chaining to Smarty_Internal_Templatebase\n- changed unloadFilter() to not return a boolean in favor of chaining and API conformity\n- bugfix unregisterObject() raised notice when object to unregister did not exist\n- changed internals to use Smarty::$_MBSTRING ($_CHARSET, $_DATE_FORMAT) for better unit testing\n- added Smarty::$_UTF8_MODIFIER for proper PCRE charset handling (Forum Topic 20452)\n- added Smarty_Security::isTrustedUri() and Smarty_Security::$trusted_uri to validate\n  remote resource calls through {fetch} and {html_image} (Forum Topic 20627)\n\n17.12.2011\n- improvement of compiling speed by new handling of plain text blocks in the lexer/parser (issue #68)\n\n16.12.2011\n- bugfix the source exits flag and timestamp was not setup when template was in php include path (issue #69)\n\n9.12.2011\n- bugfix {capture} tags around recursive {include} calls did throw exception (Forum Topic 20549)\n- bugfix $auto_literal = false did not work with { block} tags in child templates (Forum Topic 20581)\n- bugfix template inheritance: do not include code of {include} in overloaded {block} into compiled\n  parent template (Issue #66}\n- bugfix template inheritance: {$smarty.block.child} in nested child {block} tags did not return expected\n  result (Forum Topic 20564)\n\n## Smarty-3.1.6  -\n30.11.2011\n- bugfix is_cache() for individual cached subtemplates with $smarty->caching = CACHING_OFF did produce\n  an exception (Forum Topic 20531)\n\n29.11.2011\n- bugfix added exception if the default plugin handler did return a not static callback (Forum Topic 20512)\n\n25.11.2011\n- bugfix {html_select_date} and {html_slecet_time} did not default to current time if \"time\" was not specified\n  since r4432 (issue 60)\n\n24.11.2011\n- bugfix a subtemplate later used as main template did use old variable values\n\n21.11.2011\n- bugfix cache file could include unneeded modifier plugins under certain condition\n\n18.11.2011\n- bugfix declare all directory properties private to map direct access to getter/setter also on extended Smarty class\n\n16.11.2011\n- bugfix Smarty_Resource::load() did not always return a proper resource handler (Forum Topic 20414)\n- added escape argument to html_checkboxes and html_radios (Forum Topic 20425)\n\n## Smarty-3.1.5  -\n14.11.2011\n- bugfix allow space between function name and open bracket (forum topic 20375)\n\n09.11.2011\n- bugfix different behaviour of uniqid() on cygwin. See https://bugs.php.net/bug.php?id=34908\n  (forum topic 20343)\n\n01.11.2011\n- bugfix {if} and {while} tags without condition did not throw a SmartyCompilerException (Issue #57)\n- bugfix multiline strings in config files could fail on longer strings (reopened Issue #55)\n\n22.10.2011\n- bugfix smarty_mb_from_unicode() would not decode unicode-points properly\n- bugfix use catch Exception instead UnexpectedValueException in\n  clearCompiledTemplate to be PHP 5.2 compatible\n\n21.10.2011\n- bugfix apostrophe in plugins_dir path name failed (forum topic 20199)\n- improvement sha1() for array keys longer than 150 characters\n- add Smarty::$allow_ambiguous_resources to activate unique resource handling (Forum Topic 20128)\n\n20.10.2011\n- @silenced unlink() in Smarty_Internal_Write_File since debuggers go haywire without it.\n- bugfix Smarty::clearCompiledTemplate() threw an Exception if $cache_id was not present in $compile_dir when $use_sub_dirs = true.\n- bugfix {html_select_date} and {html_select_time} did not properly handle empty time arguments (Forum Topic 20190)\n- improvement removed unnecessary sha1()\n\n19.10.2011\n- revert PHP4 constructor message\n- fixed PHP4 constructor message\n\n## Smarty-3.1.4 -\n19.10.2011\n- added exception when using PHP4 style constructor\n\n16.10.2011\n- bugfix testInstall() did not propery check cache_dir and compile_dir\n\n15.10.2011\n- bugfix Smarty_Resource and Smarty_CacheResource runtime caching (Forum Post 75264)\n\n14.10.2011\n- bugfix unique_resource did not properly apply to compiled resources (Forum Topic 20128)\n- add locking to custom resources (Forum Post 75252)\n- add Smarty_Internal_Template::clearCache() to accompany isCached() fetch() etc.\n\n13.10.2011\n- add caching for config files in Smarty_Resource\n- bugfix disable of caching after isCached() call did not work (Forum Topic 20131)\n- add concept unique_resource to combat potentially ambiguous template_resource values when custom resource handlers are used (Forum Topic 20128)\n- bugfix multiline strings in config files could fail on longer strings (Issue #55)\n\n11.10.2011\n- add runtime checks for not matching {capture}/{/capture} calls (Forum Topic 20120)\n\n10.10.2011\n- bugfix variable name typo in {html_options} and {html_checkboxes} (Issue #54)\n- bugfix <?xml> tag did create wrong output when caching enabled and the tag was in included subtemplate\n- bugfix Smarty_CacheResource_mysql example was missing strtotime() calls\n\n## Smarty-3.1.3  -\n07.10.2011\n- improvement removed html comments from {mailto} (Forum Topic 20092)\n- bugfix testInstall() would not show path to internal plugins_dir (Forum Post 74627)\n- improvement testInstall() now showing resolved paths and checking the include_path if necessary\n- bugfix html_options plugin did not handle object values properly (Issue #49, Forum Topic 20049)\n- improvement html_checkboxes and html_radios to accept null- and object values, and label_ids attribute\n- improvement removed some unnecessary count()s\n- bugfix parent pointer was not set when fetch() for other template was called on template object\n\n06.10.2011\n- bugfix switch lexer internals depending on mbstring.func_overload\n- bugfix start_year and end_year of {html_select_date} did not use current year as offset base (Issue #53)\n\n05.10.2011\n- bugfix of problem introduced with r4342 by replacing strlen() with isset()\n- add environment configuration issue with mbstring.func_overload Smarty cannot compensate for (Issue #45)\n- bugfix nofilter tag option did not disable default modifier\n- bugfix html_options plugin did not handle null- and object values properly (Issue #49, Forum Topic 20049)\n\n04.10.2011\n- bugfix assign() in plugins called in subtemplates did change value also in parent template\n- bugfix of problem introduced with r4342 on math plugin\n- bugfix output filter should not run on individually cached subtemplates\n- add unloadFilter() method\n- bugfix has_nocache_code flag was not reset before compilation\n\n## Smarty-3.1.2  -\n03.10.2011\n- improvement add internal $joined_template_dir property instead computing it on the fly several times\n\n01.10.2011\n- improvement replaced most in_array() calls by more efficient isset() on array_flip()ed haystacks\n- improvement replaced some strlen($foo) > 3 calls by isset($foo[3])\n- improvement Smarty_Internal_Utility::clearCompiledTemplate() removed redundant strlen()s\n\n29.09.2011\n- improvement of Smarty_Internal_Config::loadConfigVars() dropped the in_array for index look up\n\n28.09.2011\n- bugfix on template functions called nocache calling other template functions\n\n27.09.2011\n- bugfix possible warning \"attempt to modify property of non-object\" in {section} (issue #34)\n- added chaining to Smarty_Internal_Data so $smarty->assign('a',1)->assign('b',2); is possible now\n- bugfix remove race condition when a custom resource did change timestamp during compilation\n- bugfix variable property did not work on objects variable in template\n- bugfix smarty_make_timestamp() failed to process DateTime objects properly\n- bugfix wrong resource could be used on compile check of custom resource\n\n26.09.2011\n- bugfix repeated calls to same subtemplate did not make use of cached template object\n\n24.09.2011\n- removed internal muteExpectedErrors() calls in favor of having the implementor call this once from his application\n- optimized muteExpectedErrors() to pass errors to the latest registered error handler, if appliccable\n- added compile_dir and cache_dir to list of muted directories\n- improvment better error message for undefined templates at {include}\n\n23.09.2011\n- remove unused properties\n- optimization use real function instead anonymous function for preg_replace_callback\n- bugfix a relative {include} in child template blocks failed\n- bugfix direct setting of $template_dir, $config_dir, $plugins_dir in __construct() of an\n  extended Smarty class created problems\n- bugfix error muting was not implemented for cache locking\n\n## Smarty 3.1.1  -\n22.09.2011\n- bugfix {foreachelse} does fail if {section} was nested inside {foreach}\n- bugfix debug.tpl did not display correctly when it was compiled with escape_html = true\n\n21.09.2011\n- bugfix look for mixed case plugin file names as in 3.0 if not found try all lowercase\n- added $error_muting to suppress error messages even for badly implemented error_handlers\n- optimized autoloader\n- reverted ./ and ../ handling in fetch() and display() - they're allowed again\n\n20.09.2011\n- bugfix removed debug echo output while compiling template inheritance\n- bugfix relative paths in $template_dir broke relative path resolving in {include \"../foo.tpl\"}\n- bugfix {include} did not work inside nested {block} tags\n- bugfix {assign} with scope root and global did not work in all cases\n\n19.09.2011\n- bugfix regression in Smarty_CacheReource_KeyValueStore introduced by r4261\n- bugfix output filter shall not run on included subtemplates\n\n18.09.2011\n- bugfix template caching did not care about file.tpl in different template_dir\n- bugfix {include $file} was broken when merge_compiled_incluges = true\n- bugfix {include} was broken when merge_compiled_incluges = true and same indluded template\n  was used in different main templates in one compilation run\n- bugfix for Smarty2 style compiler plugins on unnamed attribute passing like {tag $foo $bar}\n- bugfix debug.tpl did not display correctly when it was compiled with escape_html = true\n\n17.09.2011\n- bugfix lock_id for file resource would create invalid filepath\n- bugfix resource caching did not care about file.tpl in different template_dir\n\n## Smarty 3.1.0  -\n15/09/2011\n- optimization of {foreach}; call internal _count() method only when \"total\" or \"last\" {foreach} properties are used\n\n11/09/2011\n- added  unregisterObject() method\n\n06/09/2011\n- bugfix  isset() did not work in templates on config variables\n\n03/09/2011\n- bugfix createTemplate() must default to cache_id and compile_id of Smarty object\n- bugfix Smarty_CacheResource_KeyValueStore must include $source->uid in cache filepath to keep templates with same\n  name but different folders separated\n- added cacheresource.apc.php example in demo folder\n\n02/09/2011\n- bugfix cache lock file must use absolute filepath\n\n01/09/2011\n- update of cache locking\n\n30/08/2011\n- added locking mechanism to CacheResource API (implemented with File and KeyValueStores)\n\n28/08/2011\n- bugfix clearCompileTemplate() did not work for specific template subfolder or resource\n\n27/08/2011\n- bugfix {$foo|bar+1} did create syntax error\n\n26/08/2011\n- bugfix when generating nocache code which contains double \\\n- bugfix handle race condition if cache file was deleted between filemtime and include\n\n17/08/2011\n- bugfix CacheResource_Custom bad internal fetch() call\n\n15/08/2011\n- bugfix CacheResource would load content twice for KeyValueStore and Custom handlers\n\n06/08/2011\n- bugfix {include} with scope attribute could execute in wrong scope\n- optimization of compile_check processing\n\n03/08/2011\n- allow comment tags to comment {block} tags out in child templates\n\n26/07/2011\n- bugfix experimental getTags() method did not work\n\n24/07/2011\n- sure opened output buffers are closed on exception\n- bugfix {foreach} did not work on IteratorAggregate\n\n22/07/2011\n- clear internal caches on clearAllCache(), clearCache(), clearCompiledTemplate()\n\n21/07/2011\n- bugfix value changes of variable values assigned to Smarty object could not be seen on repeated $smarty->fetch() calls\n\n17/07/2011\n- bugfix {$smarty.block.child} did drop a notice at undefined child\n\n15/07/2011\n- bugfix individual cache_lifetime of {include} did not work correctly inside {block} tags\n- added caches for Smarty_Internal_TemplateSource and Smarty_Internal_TemplateCompiled to reduce I/O for multiple cache_id rendering\n\n14/07/2011\n- made Smarty::loadPlugin() respect the include_path if required\n\n13/07/2011\n- optimized internal file write functionality\n- bugfix PHP did eat line break on nocache sections\n- fixed typo of Smarty_Security properties $allowed_modifiers and $disabled_modifiers\n\n06/07/2011\n- bugfix variable modifier must run befor gereral filtering/escaping\n\n04/07/2011\n- bugfix use (?P<name>) syntax at preg_match as some pcre libraries failed on (?<name>)\n- some performance improvement when using generic getter/setter on template objects\n\n30/06/2011\n- bugfix generic getter/setter of Smarty properties used on template objects did throw exception\n- removed is_dir and is_readable checks from directory setters for better performance\n\n28/06/2011\n- added back support of php template resource as undocumented feature\n- bugfix automatic recompilation on version change could drop undefined index notice on old 3.0 cache and compiled files\n- update of README_3_1_DEV.txt and moved into the distribution folder\n- improvement show first characters of eval and string templates instead sha1 Uid in debug window\n\n## Smarty 3.1-RC1 -\n25/06/2011\n- revert change of 17/06/2011. $_smarty varibale removed. call loadPlugin() from inside plugin code if required\n- code cleanup, remove no longer used properties and methods\n- update of PHPdoc comments\n\n23/06/2011\n- bugfix {html_select_date} would not respect current time zone\n\n19/06/2011\n- added $errors argument to testInstall() functions to suppress output.\n- added plugin-file checks to testInstall()\n\n18/06/2011\n- bugfix mixed use of same subtemplate inline and not inline in same script could cause a warning during compilation\n\n17/06/2011\n- bugfix/change use $_smarty->loadPlugin() when loading nested depending plugins via loadPlugin\n- bugfix {include ... inline} within {block}...{/block} did fail\n\n16/06/2011\n- bugfix do not overwrite '$smarty' template variable when {include ... scope=parent} is called\n- bugfix complete empty inline subtemplates did fail\n\n15/06/2011\n- bugfix template variables where not accessable within inline subtemplates\n\n12/06/2011\n- bugfix removed unneeded merging of template variable when fetching includled subtemplates\n\n10/06/2011\n- made protected properties $template_dir, $plugins_dir, $cache_dir, $compile_dir, $config_dir accessible via magic methods\n\n09/06/2011\n- fix smarty security_policy issue in plugins {html_image} and {fetch}\n\n05/06/2011\n- update of SMARTY_VERSION\n- bugfix made getTags() working again\n\n04/06/2011\n- allow extends resource in file attribute of {extends} tag\n\n03/06/2011\n- added {setfilter} tag to set filters for variable output\n- added escape_html property to control autoescaping of variable output\n\n27/05/2011\n- added allowed/disabled tags and modifiers in security for sandboxing\n\n23/05/2011\n- added base64: and urlencode: arguments to eval and string resource types\n\n22/05/2011\n- made time-attribute of {html_select_date} and {html_select_time} accept arrays as defined by attributes prefix and field_array\n\n13/05/2011\n- remove setOption / getOption calls from SamrtyBC class\n\n02/05/2011\n- removed experimental setOption() getOption() methods\n- output returned content also on opening tag calls of block plugins\n- rewrite of default plugin handler\n- compile code of variable filters for better performance\n\n20/04/2011\n- allow {php} {include_php} tags and PHP_ALLOW handling only with the SmartyBC class\n- removed support of php template resource\n\n20/04/2011\n- added extendsall resource example\n- optimization of template variable access\n- optimization of subtemplate handling {include}\n- optimization of template class\n\n01/04/2011\n- bugfix quote handling in capitalize modifier\n\n28/03/2011\n- bugfix stripslashes() requried when using PCRE e-modifier\n\n04/03/2011\n- upgrade to new PHP_LexerGenerator version 0.4.0 for better performance\n\n27/02/2011\n- ignore .svn folders when clearing cache and compiled files\n- string resources do not need a modify check\n\n26/02/2011\n- replaced smarty_internal_wrapper by SmartyBC class\n- load utility functions as static methods instead through __call()\n- bugfix in extends resource when subresources are used\n- optimization of modify checks\n\n25/02/2011\n- use $smarty->error_unassigned to control NOTICE handling on unassigned variables\n\n21/02/2011\n- added new new compile_check mode COMPILECHECK_CACHEMISS\n- corrected new cloning behaviour of createTemplate()\n- do no longer store the compiler object as property in the compile_tag classes to avoid possible memory leaks\n  during compilation\n\n19/02/2011\n- optimizations on merge_compiled_includes handling\n- a couple of optimizations and bugfixes related to new resource structure\n\n17/02/2011\n- changed ./ and ../ behaviour\n\n14/02/2011\n- added {block ... hide} option to suppress block if no child is defined\n\n13/02/2011\n- update handling of recursive subtemplate calls\n- bugfix replace $smarty->triggerError() by exception in smarty_internal_resource_extends.php\n\n12/02/2011\n- new class Smarty_Internal_TemplateBase with shared methods of Smarty and Template objects\n- optimizations of template processing\n- made register... methods permanet\n- code for default_plugin_handler\n- add automatic recompilation at version change\n\n04/02/2011\n- change in Smarty_CacheResource_Custom\n- bugfix cache_lifetime did not compile correctly at {include} after last update\n- moved isCached processing into CacheResource class\n- bugfix new CacheResource API did not work with disabled compile_check\n\n03/02/2011\n- handle template content as function to improve speed on multiple calls of same subtemplate and isCached()/display() calls\n- bugfixes and improvents in the new resource API\n- optimizations of template class code\n\n25/01/2011\n- optimized function html_select_time\n\n22/01/2011\n- added Smarty::$use_include_path configuration directive for Resource API\n\n21/01/2011\n- optimized function html_select_date\n\n19/01/2011\n- optimized outputfilter trimwhitespace\n\n18/01/2011\n- bugfix Config to use Smarty_Resource to fetch sources\n- optimized Smarty_Security's isTrustedDir() and isTrustedPHPDir()\n\n17/01/2011\n- bugfix HTTP headers for CGI SAPIs\n\n16/01/2011\n- optimized internals of Smarty_Resource and Smarty_CacheResource\n\n14/01/2011\n- added modifiercompiler escape to improve performance of escaping html, htmlall, url, urlpathinfo, quotes, javascript\n- added support to choose template_dir to load from: [index]filename.tpl\n\n12/01/2011\n- added unencode modifier to revert results of encode modifier\n- added to_charset and from_charset modifier for character encoding\n\n11/01/2011\n- added SMARTY_MBSTRING to generalize MBString detection\n- added argument $lc_rest to modifier.capitalize to lower-case anything but the first character of a word\n- changed strip modifier to consider unicode white-space, too\n- changed wordwrap modifier to accept UTF-8 strings\n- changed count_sentences modifier to consider unicode characters and treat sequences delimited by ? and ! as sentences, too\n- added argument $double_encode to modifier.escape (applies to html and htmlall only)\n- changed escape modifier to be UTF-8 compliant\n- changed textformat block to be UTF-8 compliant\n- optimized performance of mailto function\n- fixed spacify modifier so characters are not prepended and appended, made it unicode compatible\n- fixed truncate modifier to properly use mb_string if possible\n- removed UTF-8 frenzy from count_characters modifier\n- fixed count_words modifier to treat \"hello-world\" as a single word like str_count_words() does\n- removed UTF-8 frenzy from upper modifier\n- removed UTF-8 frenzy from lower modifier\n\n01/01/2011\n- optimize smarty_modified_escape for hex, hexentity, decentity.\n\n28/12/2010\n- changed $tpl_vars, $config_vars and $parent to belong to Smarty_Internal_Data\n- added Smarty::registerCacheResource() for dynamic cache resource object registration\n\n27/12/2010\n- added Smarty_CacheResource API and refactored existing cache resources accordingly\n- added Smarty_CacheResource_Custom and Smarty_CacheResource_Mysql\n\n26/12/2010\n- added Smarty_Resource API and refactored existing resources accordingly\n- added Smarty_Resource_Custom and Smarty_Resource_Mysql\n- bugfix Smarty::createTemplate() to return properly cloned template instances\n\n24/12/2010\n- optimize smarty_function_escape_special_chars() for PHP >= 5.2.3\n\n## SVN 3.0 trunk  -\n14/05/2011\n- bugfix error handling at stream resources\n\n13/05/2011\n- bugfix condition starting with \"-\" did fail at {if} and {while} tags\n\n22/04/2011\n- bugfix allow only fixed string as file attribute at {extends} tag\n\n01/04/2011\n- bugfix do not run filters and default modifier when displaying the debug template\n- bugfix of embedded double quotes within multi line strings (\"\"\")\n\n29/03/2011\n- bugfix on error message in smarty_internal_compile_block.php\n- bugfix mb handling in strip modifier\n- bugfix for Smarty2 style registered compiler function on unnamed attribute passing like {tag $foo $bar}\n\n17/03/2011\n- bugfix on default {function} parameters when {function} was used in nocache sections\n- bugfix on compiler object destruction. compiler_object property was by mistake unset.\n\n09/03/2011\n-bugfix a variable filter should run before modifiers on an output tag (see change of 23/07/2010)\n\n08/03/2011\n- bugfix loading config file without section should load only defaults\n\n03/03/2011\n- bugfix \"smarty\" template variable was not recreated when cached templated had expired\n- bugfix internal rendered_content must be cleared after subtemplate was included\n\n01/03/2011\n- bugfix replace modifier did not work in 3.0.7 on systems without multibyte support\n- bugfix {$smarty.template} could return in 3.0.7 parent template name instead of\n         child name when it needed to compile\n\n25/02/2011\n- bugfix for Smarty2 style compiler plugins on unnamed attribute passing like {tag $foo $bar}\n\n24/02/2011\n- bugfix $smarty->clearCache('some.tpl') did by mistake cache the template object\n\n18/02/2011\n- bugfix removed possible race condition when isCached() was called for an individually cached subtemplate\n- bugfix force default debug.tpl to be loaded by the file resource\n\n17/02/2011\n-improvement not to delete files starting with '.' from cache and template_c folders on clearCompiledTemplate() and clearCache()\n\n16/02/2011\n-fixed typo in exception message of Smarty_Internal_Template\n-improvement allow leading spaces on } tag closing if auto_literal is enabled\n\n13/02/2011\n- bufix replace $smarty->triggerError() by exception\n- removed obsolete {popup_init..} plugin from demo templates\n- bugfix replace $smarty->triggerError() by exception in smarty_internal_resource_extends.php\n\n## Smarty 3.0.7  -\n09/02/2011\n- patched vulnerability when using {$smarty.template}\n\n01/02/2011\n- removed assert() from config and template parser\n\n31/01/2011\n- bugfix the lexer/parser did fail on special characters like VT\n\n16/01/2011\n-bugfix of ArrayAccess object handling in internal _count() method\n-bugfix of Iterator object handling in internal _count() method\n\n14/01/2011\n-bugfix removed memory leak while processing compileAllTemplates\n\n12/01/2011\n- bugfix in {if} and {while} tag compiler when using assignments as condition and nocache mode\n\n10/01/2011\n- bugfix when using {$smarty.block.child} and name of {block} was in double quoted string\n- bugfix updateParentVariables() was called twice when leaving {include} processing\n\n- bugfix mb_str_replace in replace and escape modifiers work with utf8\n\n31/12/2010\n- bugfix dynamic configuration of $debugging_crtl did not work\n- bugfix default value of $config_read_hidden changed to false\n- bugfix format of attribute array on compiler plugins\n- bugfix getTemplateVars() could return value from wrong scope\n\n28/12/2010\n- bugfix multiple {append} tags failed to compile.\n\n22/12/2010\n- update do not clone the Smarty object an internal createTemplate() calls to increase performance\n\n21/12/2010\n- update html_options to support class and id attrs\n\n17/12/2010\n- bugfix added missing support of $cache_attrs for registered plugins\n\n15/12/2010\n- bugfix assignment as condition in {while} did drop an E_NOTICE\n\n14/12/2010\n- bugfix when passing an array as default parameter at {function} tag\n\n13/12/2010\n- bugfix {$smarty.template} in child template did not return right content\n- bugfix Smarty3 did not search the PHP include_path for template files\n\n## Smarty 3.0.6  -\n\n12/12/2010\n- bugfix fixed typo regarding yesterdays change to allow streamWrapper\n\n11/12/2010\n- bugfix nested block tags in template inheritance child templates did not work correctly\n- bugfix {$smarty.current_dir} in child template did not point to dir of child template\n- bugfix changed code when writing temporary compiled files to allow stream_wrapper\n\n06/12/2010\n- bugfix getTemplateVars() should return 'null' instead dropping E_NOTICE on an unassigned variable\n\n05/12/2010\n- bugfix missing declaration of $smarty in Smarty class\n- bugfix empty($foo) in {if} did drop a notice when $foo was not assigned\n\n01/12/2010\n- improvement of {debug} tag output\n\n27/11/2010\n-change run output filter before cache file is written. (same as in Smarty2)\n\n24/11/2011\n-bugfix on parser at  !$foo|modifier\n-change parser logic when assignments used as condition in {if] and {while} to allow assign to array element\n\n23/11/2011\n-bugfix allow integer as attribute name in plugin calls\n-change  trimm whitespace from error message, removed long list of expected tokens\n\n22/11/2010\n- bugfix on template inheritance when an {extends} tag was inserted by a prefilter\n- added error message for illegal variable file attributes at {extends...} tags\n\n## Smarty 3.0.5  -\n\n\n19/11/2010\n- bugfix on block plugins with modifiers\n\n18/11/2010\n- change on handling of unassigned template variable -- default will drop E_NOTICE\n- bugfix on Smarty2 wrapper load_filter() did not work\n\n17/11/2010\n- bugfix on {call} with variable function name\n- bugfix on {block} if name did contain '-'\n- bugfix in function.fetch.php , referece to undefined $smarty\n\n16/11/2010\n- bugfix whitespace in front of \"<?php\" in smarty_internal_compile_private_block_plugin.php\n- bugfix {$smarty.now} did compile incorrectly\n- bugfix on reset(),end(),next(),prev(),current() within templates\n- bugfix on default parameter for {function}\n\n15/11/2010\n- bugfix when using {$smarty.session} as object\n- bugfix scoping problem on $smarty object passed to filters\n- bugfix captured content could not be accessed globally\n- bugfix Smarty2 wrapper functions could not be call from within plugins\n\n## Smarty 3.0.4  -\n\n14/11/2010\n- bugfix isset() did not allow multiple parameter\n- improvment of some error messages\n- bugfix html_image did use removed property $request_use_auto_globals\n- small performace patch in Smarty class\n\n13/11/2010\n- bugfix  overloading problem when $smarty->fetch()/display() have been used in plugins\n\t\t\t\t(introduced with 3.0.2)\n- code cleanup\n\t\t\t\t\t\t\t\t\n## Smarty 3.0.3  -\n\n13/11/2010\n- bugfix on {debug}\n- reverted location of loadPlugin() to Smarty class\n- fixed comments in plugins\n- fixed internal_config (removed unwanted code line)\n- improvement  remove last linebreak from {function} definition\n\n## Smarty 3.0.2  -\n\n12/11/2010\n- reactivated $error_reporting property handling\n- fixed typo in compile_continue\n- fixed security in {fetch} plugin\n- changed back plugin parameters to two. second is template object\n  with transparent access to Smarty object\n- fixed {config_load} scoping form compile time to run time\n\n## Smarty 3.0.0  -\n\n\n\n11/11/2010\n- major update including some API changes\n\n10/11/2010\n- observe compile_id also for config files\n\n09/11/2010\n-bugfix on  complex expressions as start value for {for} tag\nrequest_use_auto_globals\n04/11/2010\n- bugfix do not allow access of dynamic and private object members of assigned objects when\n  security is enabled.\n\n01/11/2010\n- bugfix related to E_NOTICE change.  {if empty($foo)} did fail when $foo contained a string\n\n28/10/2010\n- bugfix on compiling modifiers within $smarty special vars like {$smarty.post.{$foo|lower}}\n\n27/10/2010\n- bugfix default parameter values did not work for template functions included with {include}\n\n25/10/2010\n- bugfix for E_NOTICE change, array elements did not work as modifier parameter\n\n20/10/2010\n- bugfix for the E_NOTICE change\n\n19/10/2010\n- change Smarty does no longer mask out E_NOTICE by default during template processing\n\n13/10/2010\n- bugfix removed ambiguity between ternary and stream variable in template syntax\n- bugfix use caching properties of template instead of smarty object when compiling child {block}\n- bugfix {*block}...{/block*} did throw an exception in template inheritance\n- bugfix on template inheritance using nested eval or string resource in {extends} tags\n- bugfix on output buffer handling in isCached() method\n\n##  RC4 -\n\n01/10/2010\n- added {break} and {continue} tags for flow control of {foreach},{section},{for} and {while} loops\n- change of 'string' resource. It's no longer evaluated and compiled files are now stored\n- new 'eval' resource which evaluates a template without saving the compiled file\n- change in isCached() method to allow multiple calls for the same template\n\n25/09/2010\n- bugfix on some compiling modifiers\n\n24/09/2010\n- bugfix merge_compiled_includes flag was not restored correctly in {block} tag\n\n22/09/2010\n- bugfix on default modifier\n\n18/09/2010\n- bugfix untility compileAllConfig() did not create sha1 code for compiled template file names if template_dir was defined with no trailing DS\n- bugfix on templateExists() for extends resource\n\n17/09/2010\n- bugfix {$smarty.template} and {$smarty.current_dir} did not compile correctly within {block} tags\n- bugfix corrected error message on missing template files in extends resource\n- bugfix untility compileAllTemplates() did not create sha1 code for compiled template file names if template_dir was defined with no trailing DS\n\n16/09/2010\n- bugfix when a doublequoted modifier parameter did contain Smarty tags and ':'\n\n15/09/2010\n- bugfix resolving conflict between '<%'/'%>' as custom Smarty delimiter and ASP tags\n- use ucfirst for resource name on internal resource class names\n\n12/09/2010\n- bugfix for change of 08/09/2010 (final {block} tags in subtemplates did not produce correct results)\n\n10/09/2010\n- bugfix for change of 08/09/2010 (final {block} tags in subtemplates did not produce correct results)\n\n08/09/2010\n- allow multiple template inheritance branches starting in subtemplates\n\n07/09/2010\n- bugfix {counter} and {cycle} plugin assigned result to smarty variable not in local(template) scope\n- bugfix templates containing just {strip} {/strip} tags did produce an error\n\n\n23/08/2010\n- fixed E_STRICT errors for uninitialized variables\n\n22/08/2010\n- added attribute cache_id to {include} tag\n\n13/08/2010\n- remove exception_handler property from Smarty class\n- added Smarty's own exceptions SmartyException and SmartyCompilerException\n\n09/08/2010\n- bugfix on modifier with doublequoted strings as parameter containing embedded tags\n\n06/08/2010\n- bugfix when cascading some modifier like |strip|strip_tags modifier\n\n05/08/2010\n- added plugin type modifiercompiler to produce compiled modifier code\n- changed standard modifier plugins to the compiling versions whenever possible\n- bugfix in nocache sections {include} must not cache the subtemplate\n\n02/08/2010\n- bugfix strip did not work correctly in conjunction with comment lines\n\n31/07/2010\n- bugfix on nocache attribute at {assign} and {append}\n\n30/07/2010\n- bugfix passing scope attributes in doublequoted strings did not work at {include} {assign} and {append}\n\n25/07/2010\n- another bugfix of change from 23/07/2010 when compiling modifier\n\n24/07/2010\n- bugfix of change from 23/07/2010 when compiling modifier\n\n23/07/2010\n- changed execution order. A variable filter does now run before modifiers on output of variables\n- bugfix use always { and } as delimiter for debug.tpl\n\n\n22/07/2010\n- bugfix in templateExists() method\n\n20/07/2010\n- fixed handling of { strip } tag with whitespaces\n\n15/07/2010\n- bufix  {$smarty.template} does include now the relative path, not just filename\n\n##  RC3 -\n\n\n\n\n15/07/2010\n- make the date_format modifier work also on objects of the DateTime class\n- implementation of parsetrees in the parser to close security holes and remove unwanted empty line in HTML output\n\n08/07/2010\n- bugfix on assigning multidimensional arrays within templates\n- corrected bugfix for truncate modifier\n\n07/07/2010\n- bugfix the truncate modifier needs to check if the string is utf-8 encoded or not\n- bugfix support of script files relative to trusted_dir\n\n06/07/2010\n- create exception on recursive {extends} calls\n- fixed reported line number at \"unexpected closing tag \" exception\n- bugfix on escape:'mail' modifier\n- drop exception if 'item' variable is equal 'from' variable in {foreach} tag\n\n01/07/2010\n- removed call_user_func_array calls for optimization of compiled code when using registered modifiers and plugins\n\n25/06/2010\n- bugfix escaping \" when block tags are used within doublequoted strings\n\n24/06/2010\n- replace internal get_time() calls with standard PHP5 microtime(true) calls in Smarty_Internal_Utility\n- added $smarty->register->templateClass() and $smarty->unregister->templateClass() methods for supporting static classes with namespace\n\n\n22/06/2010\n- allow spaces between typecast and value in template syntax\n- bugfix get correct count of traversables in {foreach} tag\n\n21/06/2010\n- removed use of PHP shortags SMARTY_PHP_PASSTHRU mode\n- improved speed of cache->clear() when a compile_id was specified and use_sub_dirs is true\n\n20/06/2010\n- replace internal get_time() calls with standard PHP5 microtime(true) calls\n- closed security hole when php.ini asp_tags = on\n\n18/06/2010\n- added __toString method to the Smarty_Variable class\n\n\n14/06/2010\n- make handling of Smarty comments followed by newline BC to Smarty2\n\n\n##  RC2 -\n\n\n\n13/06/2010\n- bugfix Smarty3 did not handle hexadecimals like 0x0F as numerical value\n- bugifx Smarty3 did not accept numerical constants like .1 or 2. (without a leading or trailing digit)\n\n11/06/2010\n- bugfix the lexer did fail on larger {literal} ... {/literal} sections\n\n03/06/2010\n- bugfix on calling template functions like Smarty tags\n\n01/06/2010\n- bugfix on template functions used with template inheritance\n- removed /* vim: set expandtab: */ comments\n- bugfix of auto literal problem introduce with fix of 31/05/2010\n\n31/05/2010\n- bugfix the parser did not allow some smarty variables with special name like $for, $if, $else and others.\n\n27/05/2010\n- bugfix on object chaining using variable properties\n- make scope of {counter} and {cycle} tags again global as in Smarty2\n\n26/05/2010\n- bugfix removed decrepated register_resource call in smarty_internal_template.php\n\n25/05/2010\n- rewrite of template function handling to improve speed\n- bugfix on file dependency when merge_compiled_includes = true\n\n\n16/05/2010\n- bugfix when passing parameter with numeric name like {foo 1='bar' 2='blar'}\n\n14/05/2010\n- bugfix compile new config files if compile_check and force_compile = false\n- added variable static classes names to template syntax\n\n11/05/2010\n- bugfix  make sure that the cache resource is loaded in all conditions when template methods getCached... are called externally\n- reverted the change 0f 30/04/2010. With the exception of forward references template functions can be again called by a standard tag.\n\n10/05/2010\n- bugfix on {foreach} and {for} optimizations of 27/04/2010\n\n09/05/2010\n- update of template and config file parser because of minor parser generator bugs\n\n07/05/2010\n- bugfix on {insert}\n\n06/05/2010\n- bugfix when merging compiled templates and objects are passed as parameter of the {include} tag\n\n05/05/2010\n- bugfix on {insert} to cache parameter\n- implementation of $smarty->default_modifiers as in Smarty2\n- bugfix on getTemplateVars method\n\n01/05/2010\n- bugfix on handling of variable method names at object chaning\n\n30/04/2010\n- bugfix when comparing timestamps in sysplugins/smarty_internal_config.php\n- work around of a substr_compare bug in older PHP5 versions\n- bugfix on template inheritance for tag names starting with \"block\"\n- bugfix on {function} tag with name attribute in doublequoted strings\n- fix to make calling of template functions unambiguously by madatory usage of the {call} tag\n\n##  RC1 -\n\n27/04/2010\n- change default of $debugging_ctrl to 'NONE'\n- optimization of compiled code of {foreach} and {for} loops\n- change of compiler for config variables\n\n27/04/2010\n- bugfix in $smarty->cache->clear() method. (do not cache template object)\n\n\n17/04/2010\n- security fix in {math} plugin\n\n\n12/04/2010\n- bugfix in smarty_internal_templatecompilerbase (overloaded property)\n- removed parser restrictions in using true,false and null as ID\n\n07/04/2010\n- bugfix typo in smarty_internal_templatecompilerbase\n\n31/03/2010\n- compile locking by touching old compiled files to avoid concurrent compilations\n\n29/03/2010\n- bugfix allow array definitions as modifier parameter\n- bugfix observe compile_check property when loading config files\n- added the template object as third filter parameter\n\n25/03/2010\n- change of utility->compileAllTemplates() log messages\n- bugfix on nocache code in {function} tags\n- new method utility->compileAllConfig() to compile all config files\n\n24/03/2010\n- bugfix on register->modifier() error messages\n\n23/03/2010\n- bugfix on template inheritance when calling multiple child/parent relations\n- bugfix on caching mode SMARTY_CACHING_LIFETIME_SAVED and cache_lifetime = 0\n\n22/03/2010\n- bugfix make directory separator operating system independend in compileAllTemplates()\n\n21/03/2010\n- removed unused code in compileAllTemplates()\n\n19/03/2010\n- bugfix for multiple {/block} tags on same line\n\n17/03/2010\n- bugfix make $smarty->cache->clear() function independent from caching status\n\n16/03/2010\n- bugfix on assign attribute at registered template objects\n- make handling of modifiers on expression BC to Smarty2\n\n15/03/2010\n- bugfix on block plugin calls\n\n11/03/2010\n- changed parsing of <?php and ?> back to Smarty2 behaviour\n\n08/03/2010\n- bugfix on uninitialized properties in smarty_internal_template\n- bugfix on $smarty->disableSecurity()\n\n04/03/2010\n- bugfix allow uppercase chars in registered resource names\n- bugfix on accessing chained objects of static classes\n\n01/03/2010\n- bugfix on nocache code in {block} tags if child template was included by {include}\n\n27/02/2010\n- allow block tags inside double quoted string\n\n26/02/2010\n- cache modified check implemented\n- support of access to a class constant from an object (since PHP 5.3)\n\n24/02/2010\n- bugfix on expressions in doublequoted string enclosed in backticks\n- added security property $static_classes for static class security\n\n18/02/2010\n- bugfix on parsing Smarty tags inside <?xml ... ?>\n- bugfix on truncate modifier\n\n17/02/2010\n- removed restriction that modifiers did require surrounding parenthesis in some cases\n- added {$smarty.block.child} special variable for template inheritance\n\n16/02/2010\n- bugfix on <?xml ... ?> tags for all php_handling modes\n- bugfix on parameter of variablefilter.htmlspecialchars.php plugin\n\n14/02/2010\n- added missing _plugins property in smarty.class.php\n- bugfix $smarty.const... inside doublequoted strings and backticks was compiled into wrong PHP code\n\n12/02/2010\n- bugfix on nested {block} tags\n- changed Smarty special variable $smarty.parent to $smarty.block.parent\n- added support of nested {bock} tags\n\n10/02/2010\n- avoid possible notice on $smarty->cache->clear(...), $smarty->clear_cache(....)\n- allow Smarty tags inside <? ... ?> tags in SMARTY_PHP_QUOTE and SMARTY_PHP_PASSTHRU mode\n- bugfix at new \"for\" syntax like {for $x=1 to 10 step 2}\n\n09/02/2010\n- added $smarty->_tag_stack for tracing block tag hierarchy\n\n08/02/2010\n- bugfix  use template fullpath at \u00a7smarty->cache->clear(...), $smarty->clear_cache(....)\n- bugfix of cache filename on extended templates when force_compile=true\n\n07/02/2010\n- bugfix on changes of 05/02/2010\n- preserve line endings type form template source\n- API changes (see README file)\n\n05/02/2010\n- bugfix on modifier and block plugins with same name\n\n02/02/2010\n- retaining newlines at registered functions and function plugins\n\n01/25/2010\n- bugfix cache resource was not loaded when caching was globally off but enabled at a template object\n- added test that $_SERVER['SCRIPT_NAME'] does exist in Smarty.class.php\n\n01/22/2010\n- new method $smarty->createData([$parent]) for creating a data object (required for bugfixes below)\n- bugfix config_load() method now works also on a data object\n- bugfix get_config_vars() method now works also on a data and template objects\n- bugfix clear_config() method now works also on a data and template objects\n\n01/19/2010\n- bugfix on plugins if same plugin was called from a nocache section first and later from a cached section\n\n\n###beta 7###\n\n\n01/17/2010\n- bugfix on $smarty.const... in double quoted strings\n\n01/16/2010\n- internal change of config file lexer/parser on handling of section names\n- bugfix on registered objects (format parameter of register_object was not handled correctly)\n\n01/14/2010\n- bugfix on backslash within single quoted strings\n- bugfix allow absolute filepath for config files\n- bugfix on special Smarty variable $smarty.cookies\n- revert handling of newline on no output tags like {if...}\n- allow special characters in config file section names for Smarty2 BC\n\n01/13/2010\n- bugfix on {if} tags\n\n01/12/2010\n- changed back modifier handling in parser. Some restrictions still apply:\n    if modifiers are used in side {if...} expression or in mathematical expressions\n    parentheses must be used.\n- bugfix the {function..} tag did not accept the name attribute in double quotes\n- closed possible security hole at <?php ... ?> tags\n- bugfix of config file parser on large config files\n\n\n###beta 6####\n\n01/11/2010\n- added \\n to the compiled code of the {if},{else},{elseif},{/if} tags to get output of newlines as expected by the template source\n- added missing support of insert plugins\n- added optional nocache attribute to {block} tags in parent template\n- updated <?php...?> handling supporting now heredocs and newdocs. (thanks to Thue Jnaus Kristensen)\n\n01/09/2010\n- bugfix on nocache {block} tags in parent templates\n\n01/08/2010\n- bugfix on variable filters. filter/nofilter attributes did not work on output statements\n\n01/07/2010\n- bugfix on file dependency at template inheritance\n- bugfix on nocache code at template inheritance\n\n01/06/2010\n- fixed typo in smarty_internal_resource_registered\n- bugfix for custom delimiter at extends resource and {extends} tag\n\n01/05/2010\n- bugfix sha1() calculations at extends resource and some general improvments on sha1() handling\n\n\n01/03/2010\n- internal change on building cache files\n\n01/02/2010\n- update cached_timestamp at the template object after cache file is written to avoid possible side effects\n- use internally always SMARTY_CACHING_LIFETIME_* constants\n\n01/01/2010\n- bugfix for obtaining plugins which must be included (related to change of 12/30/2009)\n- bugfix for {php} tag (trow an exception if allow_php_tag = false)\n\n12/31/2009\n- optimization of generated code for doublequoted strings containing variables\n- rewrite of {function} tag handling\n  - can now be declared in an external subtemplate\n  - can contain nocache sections (nocache_hash handling)\n  - can be called in noccache sections (nocache_hash handling)\n  - new {call..} tag to call template functions with a variable name {call name=$foo}\n- fixed nocache_hash handling in merged compiled templates\n\n12/30/2009\n- bugfix for plugins defined in the script as smarty_function_foo\n\n12/29/2009\n- use sha1() for filepath encoding\n- updates on nocache_hash handling\n- internal change on merging some data\n- fixed cache filename for custom resources\n\n12/28/2009\n- update for security fixes\n- make modifier plugins always trusted\n- fixed bug loading modifiers in child template at template inheritance\n\n12/27/2009\n--- this is a major update with a couple of internal changes ---\n- new config file lexer/parser (thanks to Thue Jnaus Kristensen)\n- template lexer/parser fixes for PHP and {literal} handing (thanks to Thue Jnaus Kristensen)\n- fix on registered plugins with different type but same name\n- rewrite of plugin handling (optimized execution speed)\n- closed a security hole regarding PHP code injection into cache files\n- fixed bug in clear cache handling\n- Renamed a couple of internal classes\n- code cleanup for merging compiled templates\n- couple of runtime optimizations (still not all done)\n- update of getCachedTimestamp()\n- fixed bug on modifier plugins at nocache output\n\n12/19/2009\n- bugfix on comment lines in config files\n\n12/17/2009\n- bugfix of parent/global variable update at included/merged subtemplates\n- encode final template filepath into filename of compiled and cached files\n- fixed {strip} handling in auto literals\n\n12/16/2009\n- update of changelog\n- added {include file='foo.tpl' inline}  inline option to merge compiled code of subtemplate into the calling template\n\n12/14/2009\n- fixed sideefect of last modification (objects in array index did not work anymore)\n\n12/13/2009\n- allow boolean negation (\"!\") as operator on variables outside {if} tag\n\n12/12/2009\n- bugfix on single quotes inside {function} tag\n- fix short append/prepend attributes in {block} tags\n\n12/11/2009\n- bugfix on clear_compiled_tpl (avoid possible warning)\n\n12/10/2009\n- bugfix on {function} tags and template inheritance\n\n12/05/2009\n- fixed problem when a cached file was fetched several times\n- removed unneeded lexer code\n\n12/04/2009\n- added max attribute to for loop\n- added security mode allow_super_globals\n\n12/03/2009\n- template inheritance: child templates can now call functions defined by the {function} tag in the parent template\n- added {for $foo = 1 to 5 step 2}  syntax\n- bugfix for {$foo.$x.$y.$z}\n\n12/01/2009\n- fixed parsing of names of special formated tags like if,elseif,while,for,foreach\n- removed direct access to constants in templates because of some syntax problems\n- removed cache resource plugin for mysql from the distribution\n- replaced most hard errors (exceptions) by softerrors(trigger_error) in plugins\n- use $template_class property for template class name when compiling {include},{eval} and {extends} tags\n\n11/30/2009\n- map 'true' to SMARTY_CACHING_LIFETIME_CURRENT for the $smarty->caching parameter\n- allow {function} tags within {block} tags\n\n11/28/2009\n- ignore compile_id at debug template\n- added direct access to constants in templates\n- some lexer/parser optimizations\n\n11/27/2009\n- added cache resource MYSQL plugin\n\n11/26/2009\n- bugfix on nested doublequoted strings\n- correct line number on unknown tag error message\n- changed {include} compiled code\n- fix on checking dynamic varibales with error_unassigned = true\n\n11/25/2009\n- allow the following writing for boolean: true, TRUE, True, false, FALSE, False\n- {strip} tag functionality rewritten\n\n11/24/2009\n- bugfix for $smarty->config_overwrite = false\n\n11/23/2009\n- suppress warnings on unlink caused by race conditions\n- correct line number on unknown tag error message\n\n------- beta 5\n11/23/2009\n- fixed configfile parser for text starting with a numeric char\n- the default_template_handler_func may now return a filepath to a template source\n\n11/20/2009\n- bugfix for empty config files\n- convert timestamps of registered resources to integer\n\n11/19/2009\n- compiled templates are no longer touched with the filemtime of template source\n\n11/18/2009\n- allow integer as attribute name in plugin calls\n\n------- beta 4\n11/18/2009\n- observe umask settings when setting file permissions\n- avoide unneeded cache file creation for subtemplates which did occur in some situations\n- make $smarty->_current_file available during compilation for Smarty2 BC\n\n11/17/2009\n- sanitize compile_id and cache_id (replace illegal chars with _)\n- use _dir_perms and _file_perms properties at file creation\n- new constant SMARTY_RESOURCE_DATE_FORMAT (default '%b %e, %Y') which is used as default format in modifier date_format\n- added {foreach $array as $key=>$value} syntax\n- renamed extend tag and resource to extends: {extends file='foo.tol'} , $smarty->display('extends:foo.tpl|bar.tpl);\n- bugfix cycle plugin\n\n11/15/2009\n- lexer/parser optimizations on quoted strings\n\n11/14/2009\n- bugfix on merging compiled templates when source files got removed or renamed.\n- bugfix modifiers on registered object tags\n- fixed locaion where outputfilters are running\n- fixed config file definitions at EOF\n- fix on merging compiled templates with nocache sections in nocache includes\n- parser could run into a PHP error on wrong file attribute\n\n11/12/2009\n- fixed variable filenames in {include_php} and {insert}\n- added scope to Smarty variables in the {block} tag compiler\n- fix on nocache code in child {block} tags\n\n11/11/2009\n- fixed {foreachelse}, {forelse}, {sectionelse} compiled code at nocache variables\n- removed checking for reserved variables\n- changed debugging handling\n\n11/10/2009\n- fixed preg_qoute on delimiters\n\n11/09/2009\n- lexer/parser bugfix\n- new SMARTY_SPL_AUTOLOAD constant to control the autoloader option\n- bugfix for {function} block tags in included templates\n\n11/08/2009\n- fixed alphanumeric array index\n- bugfix on complex double quoted strings\n\n11/05/2009\n- config_load method can now be called on data and template objects\n\n11/04/2009\n- added typecasting support for template variables\n- bugfix on complex indexed special Smarty variables\n\n11/03/2009\n- fixed parser error on objects with special smarty vars\n- fixed file dependency for {incude} inside {block} tag\n- fixed not compiling on non existing compiled templates when compile_check = false\n- renamed function names of autoloaded Smarty methods to Smarty_Method_....\n- new security_class property (default is Smarty_Security)\n\n11/02/2009\n- added neq,lte,gte,mod as aliases to if conditions\n- throw exception on illegal Smarty() constructor calls\n\n10/31/2009\n- change of filenames in sysplugins folder for internal spl_autoload function\n- lexer/parser changed for increased compilation speed\n\n10/27/2009\n- fixed missing quotes in include_php.php\n\n10/27/2009\n- fixed typo in method.register_resource\n- pass {} through as literal\n\n10/26/2009\n- merge only compiled subtemplates into the compiled code of the main template\n\n10/24/2009\n- fixed nocache vars at internal block tags\n- fixed merging of recursive includes\n\n10/23/2009\n- fixed nocache var problem\n\n10/22/2009\n- fix trimwhitespace outputfilter parameter\n\n10/21/2009\n- added {$foo++}{$foo--} syntax\n- buxfix changed PHP \"if (..):\" to \"if (..){\" because of possible bad code when concenating PHP tags\n- autoload Smarty internal classes\n- fixed file dependency for config files\n- some code optimizations\n- fixed function definitions on some autoloaded methods\n- fixed nocache variable inside if condition of {if} tag\n\n10/20/2009\n- check at compile time for variable filter to improve rendering speed if no filter is used\n- fixed bug at combination of {elseif} tag and {...} in double quoted strings of static class parameter\n\n10/19/2009\n- fixed compiled template merging on variable double quoted strings as name\n- fixed bug in caching mode 2 and cache_lifetime -1\n- fixed modifier support on block tags\n\n10/17/2009\n- remove ?>\\n<?php and ?><?php sequences from compiled template\n\n10/15/2009\n- buxfix on assigning array elements inside templates\n- parser bugfix on array access\n\n10/15/2009\n- allow bit operator '&' inside {if} tag\n- implementation of ternary operator\n\n10/13/2009\n- do not recompile evaluated templates if reused just with other data\n- recompile config files when config properties did change\n- some lexer/parser otimizations\n\n10/11/2009\n- allow {block} tags inside included templates\n- bugfix for resource plugins in Smarty2 format\n- some optimizations of internal.template.php\n\n10/11/2009\n- fixed bug when template with same name is used with different data objects\n- fixed bug with double quoted name attribute at {insert} tag\n- reenabled assign_by_ref and append_by_ref methods\n\n10/07/2009\n- removed block nesting checks for {capture}\n\n10/05/2009\n- added support of \"isinstance\" to {if} tag\n\n10/03/2009\n- internal changes to improve performance\n- fix registering of filters for classes\n\n10/01/2009\n- removed default timezone setting\n- reactivated PHP resource for simple PHP templates. Must set allow_php_templates = true to enable\n- {PHP} tag can be enabled by allow_php_tag = true\n\n09/30/2009\n- fixed handling template_exits method for all resource types\n- bugfix for other cache resources than file\n- the methods assign_by_ref is now wrapped to assign, append_by_ref to append\n- allow arrays of variables pass in display, fetch and createTemplate calls\n  $data = array('foo'=>'bar','foo2'=>'blar');\n  $smarty->display('my.tpl',$data);\n\n09/29/2009\n- changed {php} tag handling\n- removed support of Smarty::instance()\n- removed support of PHP resource type\n- improved execution speed of {foreach} tags\n- fixed bug in {section} tag\n\n09/23/2009\n- improvements and bugfix on {include} tag handling\nNOTICE: existing compiled template and cache files must be deleted\n\n09/19/2009\n- replace internal \"eval()\" calls by \"include\" during rendering process\n- speed improvment for templates which have included subtemplates\n    the compiled code of included templates is merged into the compiled code of the parent template\n- added logical operator \"xor\" for {if} tag\n- changed parameter ordering for Smarty2 BC\n    fetch($template, $cache_id = null, $compile_id = null, $parent = null)\n    display($template, $cache_id = null, $compile_id = null, $parent = null)\n    createTemplate($template, $cache_id = null, $compile_id = null, $parent = null)\n- property resource_char_set is now replaced by constant SMARTY_RESOURCE_CHAR_SET\n- fixed handling of classes in registered blocks\n- speed improvement of lexer on text sections\n\n09/01/2009\n- dropped nl2br as plugin\n- added '<>' as comparission operator in {if} tags\n- cached caching_lifetime property to cache_liftime for backward compatibility with Smarty2.\n  {include} optional attribute is also now cache_lifetime\n- fixed trigger_error method (moved into Smarty class)\n- version is now  Beta!!!\n\n\n08/30/2009\n- some speed optimizations on loading internal plugins\n\n\n08/29/2009\n- implemented caching of registered Resources\n- new property 'auto_literal'. if true(default)  '{ ' and ' }' interpreted as literal, not as Smarty delimiter\n\n\n08/28/2009\n- Fix on line breaks inside {if} tags\n\n08/26/2009\n- implemented registered resources as in Smarty2. NOTE: caching does not work yet\n- new property 'force_cache'. if true it forces the creation of a new cache file\n- fixed modifiers on arrays\n- some speed optimization on loading internal classes\n\n\n08/24/2009\n- fixed typo in lexer definition for '!==' operator\n- bugfix - the ouput of plugins was not cached\n- added global variable SCRIPT_NAME\n\n08/21/2009\n- fixed problems whitespace in conjuction with custom delimiters\n- Smarty tags can now be used as value anywhere\n\n08/18/2009\n- definition of template class name moded in internal.templatebase.php\n- whitespace parser changes\n\n08/12/2009\n- fixed parser problems\n\n08/11/2009\n- fixed parser problems with custom delimiter\n\n08/10/2009\n- update of mb support in plugins\n\n\n08/09/2009\n- fixed problems with doublequoted strings at name attribute of {block} tag\n- bugfix at scope attribute of {append} tag\n\n08/08/2009\n- removed all internal calls of Smarty::instance()\n- fixed code in double quoted strings\n\n08/05/2009\n- bugfix mb_string support\n- bugfix of \\n.\\t etc in double quoted strings\n\n07/29/2009\n- added syntax for variable config vars  like  #$foo#\n\n07/28/2009\n- fixed parsing of $smarty.session vars containing objects\n\n07/22/2009\n- fix of \"$\" handling in double quoted strings\n\n07/21/2009\n- fix that {$smarty.current_dir} return correct value within {block} tags.\n\n07/20/2009\n- drop error message on unmatched {block} {/block} pairs\n\n07/01/2009\n- fixed smarty_function_html_options call in plugin function.html_select_date.php (missing ,)\n\n06/24/2009\n- fixed smarty_function_html_options call in plugin function.html_select_date.php\n\n06/22/2009\n- fix on \\n and spaces inside smarty tags\n- removed request_use_auto_globals propert as it is no longer needed because Smarty 3 will always run under PHP 5\n\n\n06/18/2009\n- fixed compilation of block plugins when caching enabled\n- added $smarty.current_dir  which returns the current working directory\n\n06/14/2009\n- fixed array access on super globals\n- allow smarty tags within xml tags\n\n06/13/2009\n- bugfix at extend resource: create unique files for compiled template and cache for each combination of template files\n- update extend resource to handle appen and prepend block attributes\n- instantiate classes of plugins instead of calling them static\n\n06/03/2009\n- fixed repeat at block plugins\n\n05/25/2009\n- fixed problem with caching of compiler plugins\n\n05/14/2009\n- fixed directory separator handling\n\n05/09/2009\n- syntax change for stream variables\n- fixed bug when using absolute template filepath and caching\n\n05/08/2009\n- fixed bug of {nocache}  tag in included templates\n\n05/06/2009\n- allow that plugins_dir folder names can end without directory separator\n\n05/05/2009\n- fixed E_STRICT incompabilities\n- {function} tag bug fix\n- security policy definitions have been moved from plugins folder to file Security.class.php in libs folder\n- added allow_super_global configuration to security\n\n04/30/2009\n- functions defined with the {function} tag now always have global scope\n\n04/29/2009\n- fixed problem with directory setter methods\n- allow that cache_dir can end without directory separator\n\n04/28/2009\n- the {function} tag can no longer overwrite standard smarty tags\n- inherit functions defined by the {fuction} tag into subtemplates\n- added {while <statement>} sytax to while tag\n\n04/26/2009\n- added trusted stream checking to security\n- internal changes at file dependency check for caching\n\n04/24/2009\n- changed name of {template} tag to {function}\n- added new {template} tag\n\n04/23/2009\n- fixed access of special smarty variables from included template\n\n04/22/2009\n- unified template stream syntax with standard Smarty resource syntax  $smarty->display('mystream:mytemplate')\n\n04/21/2009\n- change of new style syntax for forach. Now:  {foreach $array as $var}  like in PHP\n\n04/20/2009\n- fixed \"$foo.bar  ...\" variable replacement in double quoted strings\n- fixed error in {include} tag with variable file attribute\n\n04/18/2009\n- added stream resources  ($smarty->display('mystream://mytemplate'))\n- added stream variables  {$mystream:myvar}\n\n04/14/2009\n- fixed compile_id handling on {include} tags\n- fixed append/prepend attributes in {block} tag\n- added  {if  'expression' is in 'array'}  syntax\n- use crc32 as hash for compiled config files.\n\n04/13/2009\n- fixed scope problem with parent variables when appending variables within templates.\n- fixed code for {block} without childs (possible sources for notice errors removed)\n\n04/12/2009\n- added append and prepend attribute to {block} tag\n\n04/11/2009\n- fixed variables in 'file' attribute of {extend} tag\n- fixed problems in modifiers (if mb string functions not present)\n\n04/10/2009\n- check if mb string functions available otherwise fallback to normal string functions\n- added global variable scope SMARTY_GLOBAL_SCOPE\n- enable 'variable' filter by default\n- fixed {$smarty.block.parent.foo}\n- implementation of a 'variable' filter as replacement for default modifier\n\n04/09/2009\n- fixed execution of filters defined by classes\n- compile the always the content of {block} tags to make shure that the filters are running over it\n- syntax corrections on variable object property\n- syntax corrections on array access in dot syntax\n\n04/08/2009\n- allow variable object property\n\n04/07/2009\n- changed variable scopes to SMARTY_LOCAL_SCOPE, SMARTY_PARENT_SCOPE, SMARTY_ROOT_SCOPE to avoid possible conflicts with user constants\n- Smarty variable global attribute replaced with scope attribute\n\n04/06/2009\n- variable scopes LOCAL_SCOPE, PARENT_SCOPE, ROOT_SCOPE\n- more getter/setter methods\n\n04/05/2009\n- replaced new array looping syntax {for $foo in $array} with {foreach $foo in $array} to avoid confusion\n- added append array for short form of assign  {$foo[]='bar'} and allow assignments to nested arrays {$foo['bla']['blue']='bar'}\n\n04/04/2009\n- make output of template default handlers cachable and save compiled source\n- some fixes on yesterdays update\n\n04/03/2006\n- added registerDefaultTemplateHandler method and functionallity\n- added registerDefaultPluginHandler method and functionallity\n- added {append} tag to extend Smarty array variabled\n\n04/02/2009\n- added setter/getter methods\n- added $foo@first and $foo@last properties at {for} tag\n- added $set_timezone (true/false) property to setup optionally the default time zone\n\n03/31/2009\n- bugfix smarty.class and internal.security_handler\n- added compile_check configuration\n- added setter/getter methods\n\n03/30/2009\n- added all major setter/getter methods\n\n03/28/2009\n- {block} tags can be nested now\n- md5 hash function replace with crc32 for speed optimization\n- file order for exted resource inverted\n- clear_compiled_tpl and clear_cache_all will not touch .svn folder any longer\n\n03/27/2009\n- added extend resource\n\n03/26/2009\n- fixed parser not to create error on `word` in double quoted strings\n- allow PHP  array(...)\n- implemented  $smarty.block.name.parent to access parent block content\n- fixed smarty.class\n\n\n03/23/2009\n- fixed {foreachelse} and {forelse} tags\n\n03/22/2009\n- fixed possible sources for notice errors\n- rearrange SVN into distribution and development folders\n\n03/21/2009\n- fixed exceptions in function plugins\n- fixed notice error in Smarty.class.php\n- allow chained objects to span multiple lines\n- fixed error in modifiers\n\n03/20/2009\n- moved /plugins folder into /libs folder\n- added noprint modifier\n- autoappend a directory separator if the xxxxx_dir definition have no trailing one\n\n03/19/2009\n- allow array definition as modifier parameter\n- changed modifier to use multi byte string funktions.\n\n03/17/2009\n- bugfix\n\n03/15/2009\n- added {include_php} tag for BC\n- removed @ error suppression\n- bugfix fetch did always repeat output of first call when calling same template several times\n- PHPunit tests extended\n\n03/13/2009\n- changed block syntax to be Smarty like  {block:titel} -> {block name=titel}\n- compiling of {block} and {extend} tags rewriten for better performance\n- added special Smarty variable block  ($smarty.block.foo} returns the parent definition of block foo\n- optimization of {block} tag compiled code.\n- fixed problem with escaped double quotes in double quoted strings\n\n03/12/2009\n- added support of template inheritance by {extend } and {block } tags.\n- bugfix comments within literals\n- added scope attribuie to {include} tag\n\n03/10/2009\n- couple of bugfixes and improvements\n- PHPunit tests extended\n\n03/09/2009\n- added support for global template vars.  {assign_global...}  $smarty->assign_global(...)\n- added direct_access_security\n- PHPunit tests extended\n- added missing {if} tag conditions like \"is div by\" etc.\n\n03/08/2009\n- splitted up the Compiler class to make it easier to use a coustom compiler\n- made default plugins_dir relative to Smarty root and not current working directory\n- some changes to make the lexer parser better configurable\n- implemented {section} tag for Smarty2 BC\n\n03/07/2009\n- fixed problem with comment tags\n- fixed problem with #xxxx in double quoted string\n- new {while} tag implemented\n- made lexer and paser class configurable as $smarty property\n- Smarty method get_template_vars implemented\n- Smarty method get_registered_object implemented\n- Smarty method trigger_error implemented\n- PHPunit tests extended\n\n03/06/2009\n- final changes on config variable handling\n- parser change - unquoted strings will by be converted into single quoted strings\n- PHPunit tests extended\n- some code cleanup\n- fixed problem on catenate strings with expression\n- update of count_words modifier\n- bugfix on comment tags\n\n\n03/05/2009\n- bugfix on <?xml...> tag with caching enabled\n- changes on exception handling (by Monte)\n\n03/04/2009\n- added support for config variables\n- bugfix on <?xml...> tag\n\n03/02/2009\n- fixed unqouted strings within modifier parameter\n- bugfix parsing of mofifier parameter\n\n03/01/2009\n- modifier chaining works now as in Smarty2\n\n02/28/2009\n- changed handling of unqouted strings\n\n02/26/2009\n- bugfix\n- changed $smarty.capture.foo to be global for Smarty2 BC.\n\n02/24/2009\n- bugfix {php} {/php} tags for backward compatibility\n- bugfix for expressions on arrays\n- fixed usage of \"null\" value\n- added $smarty.foreach.foo.first and $smarty.foreach.foo.last\n\n02/06/2009\n- bugfix for request variables without index  for example $smarty.get\n- experimental solution for variable functions in static class\n\n02/05/2009\n- update of popup plugin\n- added config variables to template parser (load config functions still missing)\n- parser bugfix for empty quoted strings\n\n02/03/2009\n- allow array of objects as static class variabales.\n- use htmlentities at source output at template errors.\n\n02/02/2009\n- changed search order on modifiers to look at plugins folder first\n- parser bug fix for modifier on array elements  $foo.bar|modifier\n- parser bug fix on single quoted srings\n- internal: splitted up compiler plugin files\n\n02/01/2009\n- allow method chaining on static classes\n- special Smarty variables  $smarty.... implemented\n- added {PHP} {/PHP} tags for backward compatibility\n\n01/31/2009\n- added {math} plugin for Smarty2 BC\n- added template_exists method\n- changed Smarty3 method enable_security() to enableSecurity() to follow camelCase standards\n\n01/30/2009\n- bugfix in single quoted strings\n- changed syntax for variable property access from $foo:property to $foo@property because of ambiguous syntax at modifiers\n\n01/29/2009\n- syntax for array definition changed from (1,2,3) to [1,2,3] to remove ambiguous syntax\n- allow  {for $foo in [1,2,3]} syntax\n- bugfix in double quoted strings\n- allow <?xml...?> tags in template even if short_tags are enabled\n\n01/28/2009\n- fixed '!==' if condition.\n\n01/28/2009\n- added support of {strip} {/strip} tag.\n\n01/27/2009\n- bug fix on backticks in double quoted strings at objects\n\n01/25/2009\n- Smarty2 modfiers added to SVN\n\n01/25/2009\n- bugfix allow arrays at object properties in Smarty syntax\n- the template object is now passed as additional parameter at plugin calls\n- clear_compiled_tpl method completed\n\n01/20/2009\n- access to class constants implemented  ( class::CONSTANT )\n- access to static class variables implemented ( class::$variable )\n- call of static class methods implemented ( class::method() )\n\n01/16/2009\n- reallow leading _ in variable names  {$_var}\n- allow array of objects  {$array.index->method()} syntax\n- finished work on clear_cache and clear_cache_all methods\n\n01/11/2009\n- added support of {literal} tag\n- added support of {ldelim} and {rdelim} tags\n- make code compatible to run with E_STRICT error setting\n\n01/08/2009\n- moved clear_assign and clear_all_assign to internal.templatebase.php\n- added assign_by_ref, append and append_by_ref methods\n\n01/02/2009\n- added load_filter method\n- fished work on filter handling\n- optimization of plugin loading\n\n12/30/2008\n- added compiler support of registered object\n- added backtick support in doubled quoted strings for backward compatibility\n- some minor bug fixes and improvments\n\n12/23/2008\n- fixed problem of not working \"not\" operator in if-expressions\n- added handling of compiler function plugins\n- finished work on (un)register_compiler_function method\n- finished work on (un)register_modifier method\n- plugin handling from plugins folder changed for modifier plugins\n  deleted - internal.modifier.php\n- added modifier chaining to parser\n\n12/17/2008\n- finished (un)register_function method\n- finished (un)register_block method\n- added security checking for PHP functions in PHP templates\n- plugin handling from plugins folder rewritten\n  new - internal.plugin_handler.php\n  deleted - internal.block.php\n  deleted - internal.function.php\n- removed plugin checking from security handler\n\n12/16/2008\n\n- new start of this change_log file\n", "/*\n * This file is part of Smarty.\n *\n * (c) 2015 Uwe Tews\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n%stack_size 500\n%name TP_\n%declare_class {\n/**\n* Smarty Template Parser Class\n*\n* This is the template parser.\n* It is generated from the smarty_internal_templateparser.y file\n* \n* @author Uwe Tews <uwe.tews@googlemail.com>\n*/\nclass Smarty_Internal_Templateparser\n}\n%include_class\n{\n    const ERR1 = 'Security error: Call to private object member not allowed';\n    const ERR2 = 'Security error: Call to dynamic object member not allowed';\n\n    /**\n     * result status\n     *\n     * @var bool\n     */\n    public $successful = true;\n\n    /**\n     * return value\n     *\n     * @var mixed\n     */\n    public $retvalue = 0;\n\n    /**\n     * @var\n     */\n    public $yymajor;\n\n    /**\n     * last index of array variable\n     *\n     * @var mixed\n     */\n    public $last_index;\n\n    /**\n     * last variable name\n     *\n     * @var string\n     */\n    public $last_variable;\n\n    /**\n     * root parse tree buffer\n     *\n     * @var Smarty_Internal_ParseTree_Template\n     */\n    public $root_buffer;\n\n    /**\n     * current parse tree object\n     *\n     * @var Smarty_Internal_ParseTree\n     */\n    public $current_buffer;\n\n    /**\n     * lexer object\n     *\n     * @var Smarty_Internal_Templatelexer\n     */\n    public $lex;\n\n    /**\n     * internal error flag\n     *\n     * @var bool\n     */\n    private $internalError = false;\n\n    /**\n     * {strip} status\n     *\n     * @var bool\n     */\n    public $strip = false;\n    /**\n     * compiler object\n     *\n     * @var Smarty_Internal_TemplateCompilerBase\n     */\n    public $compiler = null;\n\n    /**\n     * smarty object\n     *\n     * @var Smarty\n     */\n    public $smarty = null;\n\n    /**\n     * template object\n     *\n     * @var Smarty_Internal_Template\n     */\n    public $template = null;\n\n    /**\n     * block nesting level\n     *\n     * @var int\n     */\n    public $block_nesting_level = 0;\n\n    /**\n     * security object\n     *\n     * @var Smarty_Security\n     */\n    public $security = null;\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_prefix = array();\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_postfix = array();\n\n    /**\n     * constructor\n     *\n     * @param Smarty_Internal_Templatelexer        $lex\n     * @param Smarty_Internal_TemplateCompilerBase $compiler\n     */\n    public function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)\n    {\n        $this->lex = $lex;\n        $this->compiler = $compiler;\n        $this->template = $this->compiler->template;\n        $this->smarty = $this->template->smarty;\n        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;\n        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();\n    }\n\n     /**\n     * insert PHP code in current buffer\n     *\n     * @param string $code\n     */\n    public function insertPhpCode($code)\n    {\n        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));\n    }\n\n    /**\n     * error rundown\n     *\n     */\n    public function errorRunDown()\n    {\n        while ($this->yystack !== array()) {\n            $this->yy_pop_parser_stack();\n        }\n        if (is_resource($this->yyTraceFILE)) {\n            fclose($this->yyTraceFILE);\n        }\n    }\n\n    /**\n     *  merge PHP code with prefix code and return parse tree tag object\n     *\n     * @param string $code\n     *\n     * @return Smarty_Internal_ParseTree_Tag\n     */\n    public function mergePrefixCode($code)\n    {\n        $tmp = '';\n        foreach ($this->compiler->prefix_code as $preCode) {\n            $tmp .= $preCode;\n        }\n        $this->compiler->prefix_code = array();\n        $tmp .= $code;\n        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));\n    }\n\n}\n\n%token_prefix TP_\n\n%parse_accept\n{\n    $this->successful = !$this->internalError;\n    $this->internalError = false;\n    $this->retvalue = $this->_retvalue;\n}\n\n%syntax_error\n{\n    $this->internalError = true;\n    $this->yymajor = $yymajor;\n    $this->compiler->trigger_template_error();\n}\n\n%stack_overflow\n{\n    $this->internalError = true;\n    $this->compiler->trigger_template_error('Stack overflow in template parser');\n}\n\n\n%right VERT.\n%left COLON.\n\n\n    //\n    // complete template\n    //\nstart(res)       ::= template. {\n    $this->root_buffer->prepend_array($this, $this->template_prefix);\n    $this->root_buffer->append_array($this, $this->template_postfix);\n    res = $this->root_buffer->to_smarty_php($this);\n}\n\n                      // template text\ntemplate       ::= template  TEXT(B). {\n         $text = $this->yystack[ $this->yyidx + 0 ]->minor;\n\n         if ((string)$text == '') {\n            $this->current_buffer->append_subtree($this, null);\n         }\n\n         $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($text, $this->strip));\n}\n                      // strip on\ntemplate       ::= template  STRIPON. {\n    $this->strip = true;\n}\n                      // strip off\ntemplate       ::= template STRIPOFF. {\n    $this->strip = false;\n}\n\n                     // Literal\ntemplate       ::= template LITERALSTART literal_e2(B) LITERALEND. {\n       $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text(B));\n}\n\n\nliteral_e2(A) ::= literal_e1(B) LITERALSTART literal_e1(C) LITERALEND. {\n    A = B.C;\n}\nliteral_e2(A) ::= literal_e1(B). {\n    A = B;\n}\n\nliteral_e1(A) ::= literal_e1(B) LITERAL(C). {\n        A = B.C;\n\n}\n\nliteral_e1(A) ::= . {\n    A = '';\n}\n                      // Smarty tag\ntemplate       ::= template smartytag(B). {\n      if ($this->compiler->has_code) {\n          $this->current_buffer->append_subtree($this, $this->mergePrefixCode(B));\n      }\n     $this->compiler->has_variable_string = false;\n     $this->block_nesting_level = count($this->compiler->_tag_stack);\n}\n\n\n                      // empty template\ntemplate       ::= .\n\nsmartytag(A)   ::= SIMPELOUTPUT(B). {\n    $var = trim(substr(B, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    if (preg_match('/^(.*)(\\s+nocache)$/', $var, $match)) {\n        A = $this->compiler->compileTag('private_print_expression',array('nocache'),array('value'=>$this->compiler->compileVariable('\\''.$match[1].'\\'')));\n    } else {\n        A = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->compiler->compileVariable('\\''.$var.'\\'')));\n    }\n}\n\n// simple tag like {name}\nsmartytag(A)::= SIMPLETAG(B). {\n    $tag = trim(substr(B, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()));\n    if ($tag == 'strip') {\n        $this->strip = true;\n        A = null;\n    } else {\n        if (defined($tag)) {\n            if ($this->security) {\n               $this->security->isTrustedConstant($tag, $this->compiler);\n            }\n            A = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$tag));\n        } else {\n            if (preg_match('/^(.*)(\\s+nocache)$/', $tag, $match)) {\n                A = $this->compiler->compileTag($match[1],array('\\'nocache\\''));\n            } else {\n                A = $this->compiler->compileTag($tag,array());\n            }\n        }\n    }\n}\n                  // {$smarty.block.child} or {$smarty.block.parent}\nsmartytag(A)   ::= SMARTYBLOCKCHILDPARENT(i). {\n    $j = strrpos(i,'.');\n    if (i[$j+1] == 'c') {\n        // {$smarty.block.child}\n        A = $this->compiler->compileTag('child',array(),array(i));\n    } else {\n        // {$smarty.block.parent}\n       A = $this->compiler->compileTag('parent',array(),array(i));\n     }\n}\n\nsmartytag(A)   ::= LDEL tagbody(B) RDEL. {\n    A  = B;\n}\n\n smartytag(A)   ::=  tag(B) RDEL. {\n     A  = B;\n }\n                  // output with optional attributes\ntagbody(A) ::= outattr(B). {\n    A = $this->compiler->compileTag('private_print_expression',B[1],array('value'=>B[0]));\n}\n\n//\n// Smarty tags start here\n//\n\n                  // assign new style\ntagbody(A) ::= DOLLARID(B) eqoutattr(C). {\n    A = $this->compiler->compileTag('assign',array_merge(array(array('value'=>C[0]),array('var'=>'\\''.substr(B,1).'\\'')),C[1]));\n}\n\ntagbody(A) ::= varindexed(B) eqoutattr(C). {\n    A = $this->compiler->compileTag('assign',array_merge(array(array('value'=>C[0]),array('var'=>B['var'])),C[1]),array('smarty_internal_index'=>B['smarty_internal_index']));\n}\n\neqoutattr(A) ::= EQUAL outattr(B). {\n       A = B;\n}\n\noutattr(A) ::= output(B) attributes(C). {\n    A = array(B,C);\n}\n\noutput(A) ::= variable(B). {\n    A = B;\n}\noutput(A) ::= value(B). {\n    A = B;\n}\noutput(A) ::= expr(B). {\n    A = B;\n}\n\n                  // tag with optional Smarty2 style attributes\ntag(res)   ::= LDEL ID(i) attributes(a). {\n        if (defined(i)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant(i, $this->compiler);\n            }\n            res = $this->compiler->compileTag('private_print_expression',a,array('value'=>i));\n        } else {\n            res = $this->compiler->compileTag(i,a);\n        }\n}\ntag(res)   ::= LDEL ID(i). {\n        if (defined(i)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant(i, $this->compiler);\n            }\n            res = $this->compiler->compileTag('private_print_expression',array(),array('value'=>i));\n        } else {\n            res = $this->compiler->compileTag(i,array());\n        }\n}\n\n\n                  // tag with modifier and optional Smarty2 style attributes\ntag(res)   ::= LDEL ID(i) modifierlist(l)attributes(a). {\n        if (defined(i)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant(i, $this->compiler);\n            }\n            res = $this->compiler->compileTag('private_print_expression',a,array('value'=>i, 'modifierlist'=>l));\n        } else {\n            res = $this->compiler->compileTag(i,a, array('modifierlist'=>l));\n        }\n}\n\n                  // registered object tag\ntag(res)   ::= LDEL ID(i) PTR ID(m) attributes(a). {\n    res = $this->compiler->compileTag(i,a,array('object_method'=>m));\n}\n\n                  // registered object tag with modifiers\ntag(res)   ::= LDEL ID(i) PTR ID(me) modifierlist(l) attributes(a). {\n    res = $this->compiler->compileTag(i,a,array('modifierlist'=>l, 'object_method'=>me));\n}\n\n                  // nocache tag\ntag(res)   ::= LDELMAKENOCACHE DOLLARID(i). {\n    res = $this->compiler->compileTag('make_nocache',array(array('var'=>'\\''.substr(i,1).'\\'')));\n}\n\n                  // {if}, {elseif} and {while} tag\ntag(res)   ::= LDELIF(i) expr(ie). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength())); \n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>ie));\n}\n\ntag(res)   ::= LDELIF(i) expr(ie) attributes(a). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength()));\n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,a,array('if condition'=>ie));\n}\n\ntag(res)   ::= LDELIF(i) statement(ie). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength()));\n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>ie));\n}\n\ntag(res)   ::= LDELIF(i) statement(ie)  attributes(a). {\n    $tag = trim(substr(i,$this->compiler->getLdelLength()));\n    res = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,a,array('if condition'=>ie));\n}\n\n                  // {for} tag\ntag(res)   ::= LDELFOR statements(st) SEMICOLON expr(ie) SEMICOLON varindexed(v2) foraction(e2) attributes(a). {\n    res = $this->compiler->compileTag('for',array_merge(a,array(array('start'=>st),array('ifexp'=>ie),array('var'=>v2),array('step'=>e2))),1);\n}\n\n  foraction(res)   ::= EQUAL expr(e). {\n    res = '='.e;\n}\n\n  foraction(res)   ::= INCDEC(e). {\n    res = e;\n}\n\ntag(res)   ::= LDELFOR statement(st) TO expr(v) attributes(a). {\n    res = $this->compiler->compileTag('for',array_merge(a,array(array('start'=>st),array('to'=>v))),0);\n}\n\ntag(res)   ::= LDELFOR statement(st) TO expr(v) STEP expr(v2) attributes(a). {\n    res = $this->compiler->compileTag('for',array_merge(a,array(array('start'=>st),array('to'=>v),array('step'=>v2))),0);\n}\n\n                  // {foreach} tag\ntag(res)   ::= LDELFOREACH SPACE expr(e) AS varvar(v0) attributes(a). {\n    res = $this->compiler->compileTag('foreach',array_merge(a,array(array('from'=>e),array('item'=>v0))));\n}\n\ntag(res)   ::= LDELFOREACH SPACE expr(e) AS varvar(v1) APTR varvar(v0) attributes(a). {\n    res = $this->compiler->compileTag('foreach',array_merge(a,array(array('from'=>e),array('item'=>v0),array('key'=>v1))));\n}\ntag(res)   ::= LDELFOREACH attributes(a). {\n    res = $this->compiler->compileTag('foreach',a);\n}\n\n                  // {setfilter}\ntag(res)   ::= LDELSETFILTER ID(m) modparameters(p). {\n    res = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array(m),p))));\n}\n\ntag(res)   ::= LDELSETFILTER ID(m) modparameters(p) modifierlist(l). {\n    res = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array(m),p)),l)));\n}\n\n                  \n                  // end of block tag  {/....}                  \nsmartytag(res)::= CLOSETAG(t). {\n    $tag = trim(substr(t, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' /');\n    if ($tag === 'strip') {\n        $this->strip = false;\n        res = null;\n    } else {\n       res = $this->compiler->compileTag($tag.'close',array());\n    }\n }\ntag(res)   ::= LDELSLASH ID(i). {\n    res = $this->compiler->compileTag(i.'close',array());\n}\n\ntag(res)   ::= LDELSLASH ID(i) modifierlist(l). {\n    res = $this->compiler->compileTag(i.'close',array(),array('modifier_list'=>l));\n}\n\n                  // end of block object tag  {/....}                 \ntag(res)   ::= LDELSLASH ID(i) PTR ID(m). {\n    res = $this->compiler->compileTag(i.'close',array(),array('object_method'=>m));\n}\n\ntag(res)   ::= LDELSLASH ID(i) PTR ID(m) modifierlist(l). {\n    res = $this->compiler->compileTag(i.'close',array(),array('object_method'=>m, 'modifier_list'=>l));\n}\n\n//\n//Attributes of Smarty tags \n//\n                  // list of attributes\nattributes(res)  ::= attributes(a1) attribute(a2). {\n    res = a1;\n    res[] = a2;\n}\n\n                  // single attribute\nattributes(res)  ::= attribute(a). {\n    res = array(a);\n}\n\n                  // no attributes\nattributes(res)  ::= . {\n    res = array();\n}\n                  \n                  // attribute\nattribute(res)   ::= SPACE ID(v) EQUAL ID(id). {\n    if (defined(id)) {\n        if ($this->security) {\n            $this->security->isTrustedConstant(id, $this->compiler);\n        }\n        res = array(v=>id);\n    } else {\n        res = array(v=>'\\''.id.'\\'');\n    }\n}\n\nattribute(res)   ::= ATTR(v) expr(e). {\n    res = array(trim(v,\" =\\n\\r\\t\")=>e);\n}\n\nattribute(res)   ::= ATTR(v) value(e). {\n    res = array(trim(v,\" =\\n\\r\\t\")=>e);\n}\n\nattribute(res)   ::= SPACE ID(v). {\n    res = '\\''.v.'\\'';\n}\n\nattribute(res)   ::= SPACE expr(e). {\n    res = e;\n}\n\nattribute(res)   ::= SPACE value(v). {\n    res = v;\n}\n\nattribute(res)   ::= SPACE INTEGER(i) EQUAL expr(e). {\n    res = array(i=>e);\n}\n\n                  \n\n//\n// statement\n//\nstatements(res)   ::= statement(s). {\n    res = array(s);\n}\n\nstatements(res)   ::= statements(s1) COMMA statement(s). {\n    s1[]=s;\n    res = s1;\n}\n\nstatement(res)    ::= DOLLARID(i) EQUAL INTEGER(e). {\n    res = array('var' => '\\''.substr(i,1).'\\'', 'value'=>e);\n}\nstatement(res)    ::= DOLLARID(i) EQUAL expr(e). {\n    res = array('var' => '\\''.substr(i,1).'\\'', 'value'=>e);\n}\n\nstatement(res)    ::= varindexed(vi) EQUAL expr(e). {\n    res = array('var' => vi, 'value'=>e);\n}\n\nstatement(res)    ::= OPENP statement(st) CLOSEP. {\n    res = st;\n}\n\n\n//\n// expressions\n//\n\n                  // single value\nexpr(res)        ::= value(v). {\n    res = v;\n}\n\n                 // ternary\nexpr(res)        ::= ternary(v). {\n    res = v;\n}\n\n                 // resources/streams\nexpr(res)        ::= DOLLARID(i) COLON ID(i2). {\n    res = '$_smarty_tpl->getStreamVariable(\\''.substr(i,1).'://' . i2 . '\\')';\n}\n\n                  // arithmetic expression\nexpr(res)        ::= expr(e) MATH(m) value(v). {\n    res = e . trim(m) . v;\n}\n\nexpr(res)        ::= expr(e) UNIMATH(m) value(v). {\n    res = e . trim(m) . v;\n}\n\n// if expression\n                    // special conditions\nexpr(res)        ::= expr(e1) tlop(c) value(e2). {\n    res = c['pre']. e1.c['op'].e2 .')';\n}\n                    // simple expression\nexpr(res)        ::= expr(e1) lop(c) expr(e2). {\n    res = e1.c.e2;\n}\n\nexpr(res)        ::= expr(e1) scond(c). {\n    res = c . e1 . ')';\n}\n\nexpr(res)        ::= expr(e1) ISIN array(a).  {\n    res = 'in_array('.e1.','.a.')';\n}\n\nexpr(res)        ::= expr(e1) ISIN value(v).  {\n    res = 'in_array('.e1.',(array)'.v.')';\n}\n\n\n//\n// ternary\n//\nternary(res)        ::= OPENP expr(v) CLOSEP  QMARK DOLLARID(e1) COLON  expr(e2). {\n    res = v.' ? '. $this->compiler->compileVariable('\\''.substr(e1,1).'\\'') . ' : '.e2;\n}\n\nternary(res)        ::= OPENP expr(v) CLOSEP  QMARK  expr(e1) COLON  expr(e2). {\n    res = v.' ? '.e1.' : '.e2;\n}\n\n                 // value\nvalue(res)       ::= variable(v). {\n    res = v;\n}\n\n                  // +/- value\nvalue(res)        ::= UNIMATH(m) value(v). {\n    res = m.v;\n}\n\n                  // logical negation\nvalue(res)       ::= NOT value(v). {\n    res = '!'.v;\n}\n\nvalue(res)       ::= TYPECAST(t) value(v). {\n    res = t.v;\n}\n\nvalue(res)       ::= variable(v) INCDEC(o). {\n    res = v.o;\n}\n\n                 // numeric\nvalue(res)       ::= HEX(n). {\n    res = n;\n}\n\nvalue(res)       ::= INTEGER(n). {\n    res = n;\n}\n\nvalue(res)       ::= INTEGER(n1) DOT INTEGER(n2). {\n    res = n1.'.'.n2;\n}\n\nvalue(res)       ::= INTEGER(n1) DOT. {\n    res = n1.'.';\n}\n\nvalue(res)       ::= DOT INTEGER(n1). {\n    res = '.'.n1;\n}\n\n                 // ID, true, false, null\nvalue(res)       ::= ID(id). {\n    if (defined(id)) {\n        if ($this->security) {\n             $this->security->isTrustedConstant(id, $this->compiler);\n        }\n        res = id;\n    } else {\n        res = '\\''.id.'\\'';\n    }\n}\n\n                  // function call\nvalue(res)       ::= function(f). {\n    res = f;\n}\n\n                  // expression\nvalue(res)       ::= OPENP expr(e) CLOSEP. {\n    res = '('. e .')';\n}\n\nvalue(res)        ::= variable(v1) INSTANCEOF(i) ns1(v2). {\n      res = v1.i.v2;\n}\nvalue(res)        ::= variable(v1) INSTANCEOF(i) variable(v2). {\n      res = v1.i.v2;\n}\n\n                  // singele quoted string\nvalue(res)       ::= SINGLEQUOTESTRING(t). {\n    res = t;\n}\n\n                  // double quoted string\nvalue(res)       ::= doublequoted_with_quotes(s). {\n    res = s;\n}\n\n\nvalue(res)    ::= varindexed(vi) DOUBLECOLON static_class_access(r). {\n    if ($this->security && $this->security->static_classes !== array()) {\n        $this->compiler->trigger_template_error('dynamic static class not allowed by security setting');\n    }\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    if (vi['var'] === '\\'smarty\\'') {\n        $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \". $this->compiler->compileTag('private_special_variable',array(),vi['smarty_internal_index']).';?>');\n     } else {\n        $this->compiler->appendPrefixCode(\"<?php  {$prefixVar} = \". $this->compiler->compileVariable(vi['var']).vi['smarty_internal_index'].';?>');\n    }\n    res = $prefixVar .'::'.r[0].r[1];\n}\n\n                  // Smarty tag\nvalue(res)       ::= smartytag(st). {\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $tmp = $this->compiler->appendCode('<?php ob_start();?>', st);\n    $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, \"<?php {$prefixVar} = ob_get_clean();?>\"));\n    res = $prefixVar;\n}\n\nvalue(res)       ::= value(v) modifierlist(l). {\n    res = $this->compiler->compileTag('private_modifier',array(),array('value'=>v,'modifierlist'=>l));\n}\n                  // name space constant\nvalue(res)       ::= NAMESPACE(c). {\n    res = c;\n}\n\n                  // array\nvalue(res)       ::= arraydef(a). {\n    res = a;\n}\n                  // static class access\nvalue(res)       ::= ns1(c)DOUBLECOLON static_class_access(s). {\n    if (!in_array(strtolower(c), array('self', 'parent')) && (!$this->security || $this->security->isTrustedStaticClassAccess(c, s, $this->compiler))) {\n        if (isset($this->smarty->registered_classes[c])) {\n            res = $this->smarty->registered_classes[c].'::'.s[0].s[1];\n        } else {\n            res = c.'::'.s[0].s[1];\n        } \n    } else {\n        $this->compiler->trigger_template_error ('static class \\''.c.'\\' is undefined or not allowed by security setting');\n    }\n}\n//\n// namespace stuff\n//\n\nns1(res)           ::= ID(i). {\n    res = i;\n}\n\nns1(res)           ::= NAMESPACE(i). {\n    res = i;\n    }\n\n\n\n\n//\n// variables \n//\n                  // Smarty variable (optional array)\nvariable(res)    ::= DOLLARID(i). {\n   res = $this->compiler->compileVariable('\\''.substr(i,1).'\\'');\n}\nvariable(res)    ::= varindexed(vi). {\n    if (vi['var'] === '\\'smarty\\'') {\n        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),vi['smarty_internal_index']);\n        res = $smarty_var;\n    } else {\n        // used for array reset,next,prev,end,current \n        $this->last_variable = vi['var'];\n        $this->last_index = vi['smarty_internal_index'];\n        res = $this->compiler->compileVariable(vi['var']).vi['smarty_internal_index'];\n    }\n}\n\n                  // variable with property\nvariable(res)    ::= varvar(v) AT ID(p). {\n    res = '$_smarty_tpl->tpl_vars['. v .']->'.p;\n}\n\n                  // object\nvariable(res)    ::= object(o). {\n    res = o;\n}\n\n                  // config variable\nvariable(res)    ::= HATCH ID(i) HATCH. {\n    res = $this->compiler->compileConfigVariable('\\'' . i . '\\'');\n}\n\nvariable(res)    ::= HATCH ID(i) HATCH arrayindex(a). {\n    res = '(is_array($tmp = ' . $this->compiler->compileConfigVariable('\\'' . i . '\\'') . ') ? $tmp'.a.' :null)';\n}\n\nvariable(res)    ::= HATCH variable(v) HATCH. {\n    res = $this->compiler->compileConfigVariable(v);\n}\n\nvariable(res)    ::= HATCH variable(v) HATCH arrayindex(a). {\n    res = '(is_array($tmp = ' . $this->compiler->compileConfigVariable(v) . ') ? $tmp'.a.' : null)';\n}\n\nvarindexed(res)  ::= DOLLARID(i) arrayindex(a). {\n    res = array('var'=>'\\''.substr(i,1).'\\'', 'smarty_internal_index'=>a);\n}\nvarindexed(res)  ::= varvar(v) arrayindex(a). {\n    res = array('var'=>v, 'smarty_internal_index'=>a);\n}\n\n//\n// array index\n//\n                    // multiple array index\narrayindex(res)  ::= arrayindex(a1) indexdef(a2). {\n    res = a1.a2;\n}\n\n                    // no array index\narrayindex        ::= . {\n    return;\n}\n\n// single index definition\n                    // Smarty2 style index \nindexdef(res)    ::= DOT DOLLARID(i).  {\n    res = '['.$this->compiler->compileVariable('\\''.substr(i,1).'\\'').']';\n}\nindexdef(res)    ::= DOT varvar(v).  {\n    res = '['.$this->compiler->compileVariable(v).']';\n}\n\nindexdef(res)    ::= DOT varvar(v) AT ID(p). {\n    res = '['.$this->compiler->compileVariable(v).'->'.p.']';\n}\n\nindexdef(res)   ::= DOT ID(i). {\n    res = '[\\''. i .'\\']';\n}\n\nindexdef(res)   ::= DOT INTEGER(n). {\n    res = '['. n .']';\n}\n\n\nindexdef(res)   ::= DOT LDEL expr(e) RDEL. {\n    res = '['. e .']';\n}\n\n                    // section tag index\nindexdef(res)   ::= OPENB ID(i)CLOSEB. {\n    res = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.i.'\\'][\\'index\\']').']';\n}\n\nindexdef(res)   ::= OPENB ID(i) DOT ID(i2) CLOSEB. {\n    res = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.i.'\\'][\\''.i2.'\\']').']';\n}\nindexdef(res)   ::= OPENB SINGLEQUOTESTRING(s) CLOSEB. {\n    res = '['.s.']';\n}\nindexdef(res)   ::= OPENB INTEGER(n) CLOSEB. {\n    res = '['.n.']';\n}\nindexdef(res)   ::= OPENB DOLLARID(i) CLOSEB. {\n    res = '['.$this->compiler->compileVariable('\\''.substr(i,1).'\\'').']';\n}\nindexdef(res)   ::= OPENB variable(v) CLOSEB. {\n    res = '['.v.']';\n}\nindexdef(res)   ::= OPENB value(v) CLOSEB. {\n    res = '['.v.']';\n}\n\n                    // PHP style index\nindexdef(res)   ::= OPENB expr(e) CLOSEB. {\n    res = '['. e .']';\n}\n\n                    // for assign append array\nindexdef(res)  ::= OPENB CLOSEB. {\n    res = '[]';\n}\n\n\n//\n// variable variable names\n//\n\n                    // singel identifier element\nvarvar(res)      ::= DOLLARID(i). {\n    res = '\\''.substr(i,1).'\\'';\n}\n                    // single $\nvarvar(res)      ::= DOLLAR. {\n    res = '\\'\\'';\n}\n\n                    // sequence of identifier elements\nvarvar(res)      ::= varvar(v1) varvarele(v2). {\n    res = v1.'.'.v2;\n}\n\n                    // fix sections of element\nvarvarele(res)   ::= ID(s). {\n    res = '\\''.s.'\\'';\n}\nvarvarele(res)   ::= SIMPELOUTPUT(i). {\n    $var = trim(substr(i, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    res = $this->compiler->compileVariable('\\''.$var.'\\'');\n}\n\n                    // variable sections of element\nvarvarele(res)   ::= LDEL expr(e) RDEL. {\n    res = '('.e.')';\n}\n\n//\n// objects\n//\nobject(res)    ::= varindexed(vi) objectchain(oc). {\n    if (vi['var'] === '\\'smarty\\'') {\n        res =  $this->compiler->compileTag('private_special_variable',array(),vi['smarty_internal_index']).oc;\n    } else {\n        res = $this->compiler->compileVariable(vi['var']).vi['smarty_internal_index'].oc;\n    }\n}\n\n                    // single element\nobjectchain(res) ::= objectelement(oe). {\n    res  = oe;\n}\n\n                    // chain of elements \nobjectchain(res) ::= objectchain(oc) objectelement(oe). {\n    res  = oc.oe;\n}\n\n                    // variable\nobjectelement(res)::= PTR ID(i) arrayindex(a). {\n    if ($this->security && substr(i,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    res = '->'.i.a;\n}\n\nobjectelement(res)::= PTR varvar(v) arrayindex(a). {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    res = '->{'.$this->compiler->compileVariable(v).a.'}';\n}\n\nobjectelement(res)::= PTR LDEL expr(e) RDEL arrayindex(a). {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    res = '->{'.e.a.'}';\n}\n\nobjectelement(res)::= PTR ID(ii) LDEL expr(e) RDEL arrayindex(a). {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    res = '->{\\''.ii.'\\'.'.e.a.'}';\n}\n\n                    // method\nobjectelement(res)::= PTR method(f).  {\n    res = '->'.f;\n}\n\n\n//\n// function\n//\nfunction(res)     ::= ns1(f) OPENP params(p) CLOSEP. {\n    res = $this->compiler->compilePHPFunctionCall(f, p);\n}\n\n\n//\n// method\n//\nmethod(res)     ::= ID(f) OPENP params(p) CLOSEP. {\n    if ($this->security && substr(f,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    res = f . '('. implode(',',p) .')';\n}\n\nmethod(res)     ::= DOLLARID(f) OPENP params(p) CLOSEP.  {\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \".$this->compiler->compileVariable('\\''.substr(f,1).'\\'').';?>');\n    res = $prefixVar .'('. implode(',',p) .')';\n}\n\n// function/method parameter\n                    // multiple parameters\nparams(res)       ::= params(p) COMMA expr(e). {\n    res = array_merge(p,array(e));\n}\n\n                    // single parameter\nparams(res)       ::= expr(e). {\n    res = array(e);\n}\n\n                    // kein parameter\nparams(res)       ::= . {\n    res = array();\n}\n\n//\n// modifier\n// \nmodifierlist(res) ::= modifierlist(l) modifier(m) modparameters(p). {\n    res = array_merge(l,array(array_merge(m,p)));\n}\n\nmodifierlist(res) ::= modifier(m) modparameters(p). {\n    res = array(array_merge(m,p));\n}\n \nmodifier(res)    ::= VERT AT ID(m). {\n    res = array(m);\n}\n\nmodifier(res)    ::= VERT ID(m). {\n    res =  array(m);\n}\n\n//\n// modifier parameter\n//\n                    // multiple parameter\nmodparameters(res) ::= modparameters(mps) modparameter(mp). {\n    res = array_merge(mps,mp);\n}\n\n                    // no parameter\nmodparameters(res)      ::= . {\n    res = array();\n}\n\n                    // parameter expression\nmodparameter(res) ::= COLON value(mp). {\n    res = array(mp);\n}\nmodparameter(res) ::= COLON UNIMATH(m) value(mp). {\n    res = array(trim(m).mp);\n}\n\nmodparameter(res) ::= COLON array(mp). {\n    res = array(mp);\n}\n\n                  // static class methode call\nstatic_class_access(res)       ::= method(m). {\n    res = array(m, '', 'method');\n}\n\n                  // static class methode call with object chainig\nstatic_class_access(res)       ::= method(m) objectchain(oc). {\n    res = array(m, oc, 'method');\n}\n\n                  // static class constant\nstatic_class_access(res)       ::= ID(v). {\n    res = array(v, '');\n}\n\n                  // static class variables\nstatic_class_access(res)       ::=  DOLLARID(v) arrayindex(a). {\n    res = array(v, a, 'property');\n}\n\n                  // static class variables with object chain\nstatic_class_access(res)       ::= DOLLARID(v) arrayindex(a) objectchain(oc). {\n    res = array(v, a.oc, 'property');\n}\n\n\n// if conditions and operators\nlop(res)        ::= LOGOP(o). {\n    res = ' '. trim(o) . ' ';\n}\n\nlop(res)        ::= SLOGOP(o). {\n    static $lops = array(\n        'eq' => ' == ',\n        'ne' => ' != ',\n        'neq' => ' != ',\n        'gt' => ' > ',\n        'ge' => ' >= ',\n        'gte' => ' >= ',\n        'lt' =>  ' < ',\n        'le' =>  ' <= ',\n        'lte' => ' <= ',\n        'mod' =>  ' % ',\n        'and' => ' && ',\n        'or' => ' || ',\n        'xor' => ' xor ',\n         );\n    $op = strtolower(preg_replace('/\\s*/', '', o));\n    res = $lops[$op];\n}\ntlop(res)        ::= TLOGOP(o). {\n     static $tlops = array(\n         'isdivby' => array('op' => ' % ', 'pre' => '!('),\n         'isnotdivby' => array('op' => ' % ', 'pre' => '('),\n         'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         );\n     $op = strtolower(preg_replace('/\\s*/', '', o));\n     res = $tlops[$op];\n }\n\nscond(res)  ::= SINGLECOND(o). {\n        static $scond = array (\n            'iseven' => '!(1 & ',\n            'isnoteven' => '(1 & ',\n            'isodd' => '(1 & ',\n            'isnotodd' => '!(1 & ',\n        );\n   $op = strtolower(str_replace(' ', '', o));\n   res = $scond[$op];\n}\n\n//\n// ARRAY element assignment\n//\narraydef(res)           ::=  OPENB arrayelements(a) CLOSEB.  {\n    res = 'array('.a.')';\n}\narraydef(res)           ::=  ARRAYOPEN arrayelements(a) CLOSEP.  {\n    res = 'array('.a.')';\n}\n\narrayelements(res)   ::=  arrayelement(a).  {\n    res = a;\n}\n\narrayelements(res)   ::=  arrayelements(a1) COMMA arrayelement(a).  {\n    res = a1.','.a;\n}\n\narrayelements        ::=  .  {\n    return;\n}\n\narrayelement(res)    ::=  value(e1) APTR expr(e2). {\n    res = e1.'=>'.e2;\n}\n\narrayelement(res)    ::=  ID(i) APTR expr(e2). { \n    res = '\\''.i.'\\'=>'.e2;\n}\n\narrayelement(res)    ::=  expr(e). {\n    res = e;\n}\n\n\n//\n// double quoted strings\n//\ndoublequoted_with_quotes(res) ::= QUOTE QUOTE. {\n    res = '\\'\\'';\n}\n\ndoublequoted_with_quotes(res) ::= QUOTE doublequoted(s) QUOTE. {\n    $this->compiler->leaveDoubleQuote();\n    res = s->to_smarty_php($this);\n}\n\n\ndoublequoted(res)          ::= doublequoted(o1) doublequotedcontent(o2). {\n    o1->append_subtree($this, o2);\n    res = o1;\n}\n\ndoublequoted(res)          ::= doublequotedcontent(o). {\n    res = new Smarty_Internal_ParseTree_Dq($this, o);\n}\n\ndoublequotedcontent(res)           ::=  BACKTICK variable(v) BACKTICK. {\n    res = new Smarty_Internal_ParseTree_Code('(string)'.v);\n}\n\ndoublequotedcontent(res)           ::=  BACKTICK expr(e) BACKTICK. {\n    res = new Smarty_Internal_ParseTree_Code('(string)('.e.')');\n}\n\ndoublequotedcontent(res)           ::=  DOLLARID(i). {\n    res = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\\''. substr(i,1) .'\\']->value');\n}\n\ndoublequotedcontent(res)           ::=  LDEL variable(v) RDEL. {\n    res = new Smarty_Internal_ParseTree_Code('(string)'.v);\n}\n\ndoublequotedcontent(res)           ::=  LDEL expr(e) RDEL. {\n    res = new Smarty_Internal_ParseTree_Code('(string)('.e.')');\n}\n\ndoublequotedcontent(res)     ::=  smartytag(st). {\n    res = new Smarty_Internal_ParseTree_Tag($this, st);\n}\n\ndoublequotedcontent(res)           ::=  TEXT(o). {\n    res = new Smarty_Internal_ParseTree_DqContent(o);\n}\n\n", "<?php\n\nclass TP_yyStackEntry\n{\n    public $stateno;       /* The state-number */\n    public $major;         /* The major token value.  This is the code\n                     ** number for the token at this stack level */\n    public $minor; /* The user-supplied minor token value.  This\n                     ** is the value of the token  */\n};\n\n\n// line 11 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n/**\n* Smarty Template Parser Class\n*\n* This is the template parser.\n* It is generated from the smarty_internal_templateparser.y file\n* \n* @author Uwe Tews <uwe.tews@googlemail.com>\n*/\nclass Smarty_Internal_Templateparser\n{\n// line 23 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    const ERR1 = 'Security error: Call to private object member not allowed';\n    const ERR2 = 'Security error: Call to dynamic object member not allowed';\n\n    /**\n     * result status\n     *\n     * @var bool\n     */\n    public $successful = true;\n\n    /**\n     * return value\n     *\n     * @var mixed\n     */\n    public $retvalue = 0;\n\n    /**\n     * @var\n     */\n    public $yymajor;\n\n    /**\n     * last index of array variable\n     *\n     * @var mixed\n     */\n    public $last_index;\n\n    /**\n     * last variable name\n     *\n     * @var string\n     */\n    public $last_variable;\n\n    /**\n     * root parse tree buffer\n     *\n     * @var Smarty_Internal_ParseTree_Template\n     */\n    public $root_buffer;\n\n    /**\n     * current parse tree object\n     *\n     * @var Smarty_Internal_ParseTree\n     */\n    public $current_buffer;\n\n    /**\n     * lexer object\n     *\n     * @var Smarty_Internal_Templatelexer\n     */\n    public $lex;\n\n    /**\n     * internal error flag\n     *\n     * @var bool\n     */\n    private $internalError = false;\n\n    /**\n     * {strip} status\n     *\n     * @var bool\n     */\n    public $strip = false;\n    /**\n     * compiler object\n     *\n     * @var Smarty_Internal_TemplateCompilerBase\n     */\n    public $compiler = null;\n\n    /**\n     * smarty object\n     *\n     * @var Smarty\n     */\n    public $smarty = null;\n\n    /**\n     * template object\n     *\n     * @var Smarty_Internal_Template\n     */\n    public $template = null;\n\n    /**\n     * block nesting level\n     *\n     * @var int\n     */\n    public $block_nesting_level = 0;\n\n    /**\n     * security object\n     *\n     * @var Smarty_Security\n     */\n    public $security = null;\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_prefix = array();\n\n    /**\n     * template prefix array\n     *\n     * @var \\Smarty_Internal_ParseTree[]\n     */\n    public $template_postfix = array();\n\n    /**\n     * constructor\n     *\n     * @param Smarty_Internal_Templatelexer        $lex\n     * @param Smarty_Internal_TemplateCompilerBase $compiler\n     */\n    public function __construct(Smarty_Internal_Templatelexer $lex, Smarty_Internal_TemplateCompilerBase $compiler)\n    {\n        $this->lex = $lex;\n        $this->compiler = $compiler;\n        $this->template = $this->compiler->template;\n        $this->smarty = $this->template->smarty;\n        $this->security = isset($this->smarty->security_policy) ? $this->smarty->security_policy : false;\n        $this->current_buffer = $this->root_buffer = new Smarty_Internal_ParseTree_Template();\n    }\n\n     /**\n     * insert PHP code in current buffer\n     *\n     * @param string $code\n     */\n    public function insertPhpCode($code)\n    {\n        $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Tag($this, $code));\n    }\n\n    /**\n     * error rundown\n     *\n     */\n    public function errorRunDown()\n    {\n        while ($this->yystack !== array()) {\n            $this->yy_pop_parser_stack();\n        }\n        if (is_resource($this->yyTraceFILE)) {\n            fclose($this->yyTraceFILE);\n        }\n    }\n\n    /**\n     *  merge PHP code with prefix code and return parse tree tag object\n     *\n     * @param string $code\n     *\n     * @return Smarty_Internal_ParseTree_Tag\n     */\n    public function mergePrefixCode($code)\n    {\n        $tmp = '';\n        foreach ($this->compiler->prefix_code as $preCode) {\n            $tmp .= $preCode;\n        }\n        $this->compiler->prefix_code = array();\n        $tmp .= $code;\n        return new Smarty_Internal_ParseTree_Tag($this, $this->compiler->processNocacheCode($tmp, true));\n    }\n\n\n    const TP_VERT                           =  1;\n    const TP_COLON                          =  2;\n    const TP_TEXT                           =  3;\n    const TP_STRIPON                        =  4;\n    const TP_STRIPOFF                       =  5;\n    const TP_LITERALSTART                   =  6;\n    const TP_LITERALEND                     =  7;\n    const TP_LITERAL                        =  8;\n    const TP_SIMPELOUTPUT                   =  9;\n    const TP_SIMPLETAG                      = 10;\n    const TP_SMARTYBLOCKCHILDPARENT         = 11;\n    const TP_LDEL                           = 12;\n    const TP_RDEL                           = 13;\n    const TP_DOLLARID                       = 14;\n    const TP_EQUAL                          = 15;\n    const TP_ID                             = 16;\n    const TP_PTR                            = 17;\n    const TP_LDELMAKENOCACHE                = 18;\n    const TP_LDELIF                         = 19;\n    const TP_LDELFOR                        = 20;\n    const TP_SEMICOLON                      = 21;\n    const TP_INCDEC                         = 22;\n    const TP_TO                             = 23;\n    const TP_STEP                           = 24;\n    const TP_LDELFOREACH                    = 25;\n    const TP_SPACE                          = 26;\n    const TP_AS                             = 27;\n    const TP_APTR                           = 28;\n    const TP_LDELSETFILTER                  = 29;\n    const TP_CLOSETAG                       = 30;\n    const TP_LDELSLASH                      = 31;\n    const TP_ATTR                           = 32;\n    const TP_INTEGER                        = 33;\n    const TP_COMMA                          = 34;\n    const TP_OPENP                          = 35;\n    const TP_CLOSEP                         = 36;\n    const TP_MATH                           = 37;\n    const TP_UNIMATH                        = 38;\n    const TP_ISIN                           = 39;\n    const TP_QMARK                          = 40;\n    const TP_NOT                            = 41;\n    const TP_TYPECAST                       = 42;\n    const TP_HEX                            = 43;\n    const TP_DOT                            = 44;\n    const TP_INSTANCEOF                     = 45;\n    const TP_SINGLEQUOTESTRING              = 46;\n    const TP_DOUBLECOLON                    = 47;\n    const TP_NAMESPACE                      = 48;\n    const TP_AT                             = 49;\n    const TP_HATCH                          = 50;\n    const TP_OPENB                          = 51;\n    const TP_CLOSEB                         = 52;\n    const TP_DOLLAR                         = 53;\n    const TP_LOGOP                          = 54;\n    const TP_SLOGOP                         = 55;\n    const TP_TLOGOP                         = 56;\n    const TP_SINGLECOND                     = 57;\n    const TP_ARRAYOPEN                      = 58;\n    const TP_QUOTE                          = 59;\n    const TP_BACKTICK                       = 60;\n    const YY_NO_ACTION = 514;\n    const YY_ACCEPT_ACTION = 513;\n    const YY_ERROR_ACTION = 512;\n\n    const YY_SZ_ACTTAB = 1997;\npublic static $yy_action = array(\n    249,  250,  239,    1,   27,  127,  220,  184,  160,  213,\n     11,   54,  278,   10,  173,   34,  108,  387,  282,  279,\n    223,  321,  221,    8,  194,  387,   18,  387,   85,   41,\n    387,  285,   42,   44,  264,  222,  387,  209,  387,  198,\n    387,   52,    5,  307,  288,  288,  164,  283,  224,    4,\n     50,  249,  250,  239,    1,  232,  131,  381,  189,  205,\n    213,   11,   54,   39,   35,  243,   31,  108,   94,   17,\n    381,  223,  321,  221,  439,  226,  381,   33,   49,  426,\n     41,  439,   89,   42,   44,  264,  222,    9,  235,  163,\n    198,  426,   52,    5,  131,  288,  212,  284,  102,  106,\n      4,   50,  249,  250,  239,    1,  232,  129,  426,  189,\n    347,  213,   11,   54,  175,  324,  347,  208,  108,   22,\n    426,  301,  223,  321,  221,  302,  226,  135,   18,   49,\n     52,   41,   26,  288,   42,   44,  264,  222,   16,  235,\n    294,  198,  204,   52,    5,  170,  288,   32,   90,  267,\n    268,    4,   50,  249,  250,  239,    1,   20,  129,  185,\n    179,  255,  213,   11,   54,  455,  288,  192,  455,  108,\n    175,  167,  455,  223,  321,  221,  439,  226,  256,   18,\n     55,  292,   41,  439,  132,   42,   44,  264,  222,  427,\n    235,   12,  198,  165,   52,    5,  232,  288,  288,  347,\n    153,  427,    4,   50,  249,  250,  239,    1,  232,  129,\n    286,  181,  347,  213,   11,   54,   24,   13,  347,   49,\n    108,  232,  320,  426,  223,  321,  221,  195,  201,  173,\n     18,   49,  139,   41,  296,  426,   42,   44,  264,  222,\n      7,  235,  286,  198,   49,   52,    5,  147,  288,  117,\n    150,  317,  263,    4,   50,  249,  250,  239,    1,   95,\n    130,  173,  189,  155,  213,   11,   54,   22,  244,  271,\n    192,  108,  323,  286,  101,  223,  321,  221,  294,  226,\n    204,   18,  348,  257,   41,  166,  283,   42,   44,  264,\n    222,   28,  235,  300,  198,  348,   52,    5,  247,  288,\n    117,  348,   94,  206,    4,   50,  249,  250,  239,    1,\n     95,  129,   22,  189,  277,  213,   11,   54,   91,  274,\n    224,  426,  108,  323,  216,  156,  223,  321,  221,  132,\n    180,  262,   18,  426,  100,   41,   12,  288,   42,   44,\n    264,  222,   15,  235,  216,  198,  254,   52,    5,  233,\n    288,  210,  190,  192,  100,    4,   50,  249,  250,  239,\n      1,    3,  131,   94,  189,  192,  213,   11,   54,  269,\n     10,  204,  290,  108,  325,  216,  224,  223,  321,  221,\n     23,  226,  211,   33,  315,  100,   45,  513,   92,   42,\n     44,  264,  222,  102,  235,  178,  198,  268,   52,    5,\n    275,  288,  161,  192,   37,   25,    4,   50,  249,  250,\n    239,    1,  286,  129,  172,  187,  305,  213,   11,   54,\n    164,  283,  310,  141,  108,  281,  281,  236,  223,  321,\n    221,  169,  226,  230,   18,  122,  171,   41,  225,  175,\n     42,   44,  264,  222,  144,  235,  303,  198,  134,   52,\n      5,  265,  288,  151,  286,  192,  175,    4,   50,  249,\n    250,  239,    1,  286,  128,   94,  189,  143,  213,   11,\n     54,  219,  152,  207,  193,  108,  149,  281,   31,  223,\n    321,  221,  100,  226,   21,    6,  286,  288,   41,  158,\n     16,   42,   44,  264,  222,  102,  235,  238,  198,  286,\n     52,    5,  157,  288,  281,  122,  168,  283,    4,   50,\n    249,  250,  239,    1,   30,   93,  308,   51,  215,  213,\n     11,   54,   53,  251,  140,  248,  108,  245,  304,  116,\n    223,  321,  221,  111,  226,  176,   18,  270,  266,   41,\n    224,  322,   42,   44,  264,  222,    7,  235,  259,  198,\n    147,   52,    5,  257,  288,   43,   40,   38,   83,    4,\n     50,  241,  214,  204,  319,  280,   88,  107,  138,  182,\n     97,   64,  311,  312,  313,  316,   95,  281,  298,  258,\n    142,  234,   94,  105,  272,  197,  231,  482,  237,  323,\n     37,  133,  324,  241,  214,  204,  319,  314,   88,  107,\n    296,  183,   97,   82,   84,   43,   40,   38,   95,  296,\n    296,  258,  296,  296,  296,  159,  272,  197,  231,  296,\n    237,  323,  311,  312,  313,  316,  241,  296,  204,  296,\n    296,  103,  296,  296,  199,  104,   77,  296,  296,  110,\n    296,   95,  296,  296,  258,  278,  296,  296,   34,  272,\n    197,  231,  279,  237,  323,   43,   40,   38,  296,  296,\n    296,  241,   26,  204,  196,  276,  103,  296,   16,  199,\n    104,   77,  311,  312,  313,  316,   95,  192,  296,  258,\n    146,  296,  296,  296,  272,  197,  231,  296,  237,  323,\n    286,  393,   39,   35,  243,  296,  296,  296,  296,  191,\n    276,  296,   26,  318,  252,  253,  126,  296,   16,  249,\n    250,  239,    1,  296,  296,  131,  296,  261,  213,   11,\n     54,  296,  296,  296,  426,  108,  393,  393,  393,  223,\n    321,  221,  241,  296,  204,  299,  426,  103,  107,  296,\n    183,   97,   82,  393,  393,  393,  393,   95,  296,  260,\n    258,   52,  296,  296,  288,  272,  197,  231,  296,  237,\n    323,  293,  296,  296,  296,  296,  296,  249,  250,  239,\n      2,  296,  295,  296,  296,  296,  213,   11,   54,  296,\n    296,  177,  296,  108,  136,  296,  296,  223,  321,  221,\n    296,  296,  296,  293,   43,   40,   38,  296,  296,  249,\n    250,  239,    2,  296,  295,   43,   40,   38,  213,   11,\n     54,  311,  312,  313,  316,  108,  296,  291,   14,  223,\n    321,  221,  311,  312,  313,  316,  296,  296,  241,  296,\n    204,  296,  192,  103,  296,  296,  199,  104,   77,  296,\n    296,  296,  296,   95,  383,  296,  258,  296,  296,  297,\n     14,  272,  197,  231,  296,  237,  323,  383,  296,  296,\n    241,  296,  204,  383,  296,   99,  296,  287,  199,  120,\n     48,  241,  112,  204,  296,   95,  103,  296,  258,  199,\n    120,   74,  296,  272,  197,  231,   95,  237,  323,  258,\n    455,  296,  296,  455,  272,  197,  231,  455,  237,  323,\n    241,  296,  204,  296,  296,  103,  200,  296,  199,  120,\n     74,  296,  296,  296,  296,   95,  296,  296,  258,  278,\n    296,  296,   34,  272,  197,  231,  279,  237,  323,  241,\n    455,  204,  296,  296,   99,  202,  296,  199,  120,   56,\n    241,  211,  204,  296,   95,  103,  296,  258,  199,  120,\n     74,  296,  272,  197,  231,   95,  237,  323,  258,  227,\n    296,  296,  296,  272,  197,  231,  296,  237,  323,  241,\n    296,  204,  148,  296,  103,  203,   86,  199,  120,   73,\n    296,  296,  286,  296,   95,  296,  296,  258,  278,  296,\n    296,   34,  272,  197,  231,  279,  237,  323,  241,  296,\n    204,  175,  296,  103,  296,  296,  199,  120,   75,  241,\n    296,  204,  296,   95,  103,  296,  258,  199,  120,   63,\n    296,  272,  197,  231,   95,  237,  323,  258,  229,  192,\n    296,  296,  272,  197,  231,  296,  237,  323,  241,  296,\n    204,  380,  296,  103,  296,  296,  199,  120,   58,  296,\n    296,  296,  296,   95,  380,  296,  258,  296,  296,  296,\n    380,  272,  197,  231,  296,  237,  323,  241,  296,  204,\n    296,  296,  103,  296,  296,  199,  120,   71,  241,  296,\n    204,  296,   95,  103,  296,  258,  199,  120,   79,  296,\n    272,  197,  231,   95,  237,  323,  258,  296,  296,  296,\n    154,  272,  197,  231,   87,  237,  323,  241,  296,  204,\n    286,  296,  103,  296,  296,  199,  120,   70,  296,  296,\n    296,  296,   95,  296,  296,  258,  296,  296,  296,  175,\n    272,  197,  231,  296,  237,  323,  241,  296,  204,  296,\n    296,  103,  296,  296,  199,  120,   56,  241,  296,  204,\n    296,   95,  103,  296,  258,  199,  120,   46,  296,  272,\n    197,  231,   95,  237,  323,  258,  296,  296,  296,  296,\n    272,  197,  231,  296,  237,  323,  241,  296,  204,  296,\n    296,  103,  296,  296,  199,  120,   78,  296,  296,  296,\n    296,   95,  296,  296,  258,  296,  296,  296,  296,  272,\n    197,  231,  296,  237,  323,  241,  296,  204,  296,  296,\n    103,  296,  296,  199,  120,   66,  241,  296,  204,  296,\n     95,  103,  296,  258,  199,  120,   59,  296,  272,  197,\n    231,   95,  237,  323,  258,  296,  296,  296,  296,  272,\n    197,  231,  296,  237,  323,  241,  296,  204,  296,  296,\n    103,  296,  296,  186,  109,   57,  296,  296,  296,  296,\n     95,  296,  296,  258,  296,  296,  296,  296,  272,  197,\n    231,  296,  237,  323,  241,  296,  204,  296,  296,  103,\n    296,  296,  188,  120,   67,  241,  296,  204,  296,   95,\n    103,  296,  258,  199,   96,   62,  296,  272,  197,  231,\n     95,  237,  323,  258,  296,  296,  296,  296,  272,  197,\n    231,  296,  237,  323,  241,  296,  204,  296,  296,  103,\n    296,  296,  199,  120,   80,  296,  296,  296,  296,   95,\n    296,  296,  258,  296,  296,  296,  296,  272,  197,  231,\n    296,  237,  323,  241,  296,  204,  296,  296,  103,  296,\n    296,  199,  120,   76,  241,  296,  204,  296,   95,  103,\n    296,  258,  199,  120,   81,  296,  272,  197,  231,   95,\n    237,  323,  258,  296,  296,  296,  296,  272,  197,  231,\n    296,  237,  323,  241,  296,  204,  296,  296,  103,  296,\n    296,  199,  120,   65,  296,  296,  296,  296,   95,  296,\n    296,  258,  296,  296,  296,  296,  272,  197,  231,  296,\n    237,  323,  241,  296,  204,  296,  296,  103,  296,  296,\n    199,   96,   68,  241,  296,  204,  296,   95,  103,  296,\n    258,  199,  120,   61,  296,  272,  197,  231,   95,  237,\n    323,  258,  296,  296,  296,  296,  272,  197,  231,  296,\n    237,  323,  241,  296,  204,  296,  296,  103,  296,  296,\n    199,   98,   69,  296,  296,  296,  296,   95,  296,  296,\n    258,  296,  296,  296,  296,  272,  197,  231,  296,  237,\n    323,  241,  296,  204,  296,  296,  103,  296,  296,  199,\n    120,   72,  241,  296,  204,  296,   95,  103,  296,  258,\n    199,  120,   47,  296,  272,  197,  231,   95,  237,  323,\n    258,  296,  296,  296,  296,  272,  197,  231,  296,  237,\n    323,  241,  192,  204,  296,  296,  103,  296,  296,  199,\n    120,   60,  296,  296,  351,  296,   95,  296,  217,  258,\n    296,  296,  296,  296,  272,  197,  231,   26,  237,  323,\n    241,  296,  204,   16,  296,  103,  426,  296,  199,  125,\n    296,  241,  296,  204,  296,   95,  103,  296,  426,  199,\n    118,  296,  242,  272,  197,  231,   95,  237,  323,  296,\n    296,  296,  296,  246,  272,  197,  231,  296,  237,  323,\n    241,  296,  204,  278,  296,  103,   34,  296,  199,  121,\n    279,  296,  296,  296,  296,   95,  296,  296,  296,  296,\n     26,  296,  162,  272,  197,  231,   16,  237,  323,  241,\n    296,  204,  296,  296,  103,  296,  296,  199,  123,  296,\n    241,  296,  204,  296,   95,  103,  296,  296,  199,  114,\n    296,  296,  272,  197,  231,   95,  237,  323,  296,  296,\n    296,  296,  296,  272,  197,  231,  296,  237,  323,  241,\n    296,  204,  296,  145,  103,  296,  296,  199,  124,  296,\n    296,  296,  296,  286,   95,   39,   35,  243,  296,  296,\n    296,  296,  272,  197,  231,  296,  237,  323,  241,  296,\n    204,  296,  296,  103,  296,  296,  199,  115,  296,  241,\n    296,  204,  296,   95,  103,  296,  296,  199,  113,  296,\n    296,  272,  197,  231,   95,  237,  323,  296,  296,  296,\n    296,  296,  272,  197,  231,  228,  237,  323,  241,  296,\n    204,  296,  455,  103,  296,  455,  199,  119,    3,  455,\n    439,  296,  296,   95,  296,  296,  296,  296,  296,  296,\n    296,  272,  197,  231,  228,  237,  323,  296,  296,  296,\n    296,  455,  296,  296,  455,  296,  296,  439,  455,  439,\n    439,  228,  455,  296,  439,  296,  296,  137,  455,  296,\n    296,  455,  296,  296,   32,  455,  439,  286,  296,   39,\n     35,  243,   29,  296,   26,  296,  439,  296,  296,  439,\n     16,  455,  296,  439,  306,   43,   40,   38,  296,  296,\n    296,  296,  296,  439,  296,  296,  439,  296,  455,  296,\n    439,   26,  311,  312,  313,  316,  296,   16,  228,  296,\n    296,  296,   43,   40,   38,  455,  296,  296,  455,  296,\n    296,  296,  455,  439,  296,  296,   19,  296,  296,  311,\n    312,  313,  316,  455,  296,  296,  455,  296,  296,  296,\n    455,  439,  296,  296,  296,   43,   40,   38,  296,  296,\n    439,  296,  296,  439,  174,  455,  296,  439,  296,  240,\n    309,  296,  311,  312,  313,  316,  296,  289,  439,  296,\n     36,  439,  296,  455,  296,  439,  296,  296,   43,   40,\n     38,  296,  296,   43,   40,   38,  296,  296,  296,  296,\n    296,   43,   40,   38,  296,  311,  312,  313,  316,  296,\n    311,  312,  313,  316,  296,   43,   40,   38,  311,  312,\n    313,  316,  273,   43,   40,   38,  296,  296,  296,  296,\n    296,  296,  311,  312,  313,  316,  296,  296,  296,  296,\n    311,  312,  313,  316,  455,  296,  296,  455,   43,   40,\n     38,  455,  439,  218,   43,   40,   38,  296,  296,  296,\n    296,  296,  296,  296,  296,  311,  312,  313,  316,  296,\n    296,  311,  312,  313,  316,  296,  296,  296,  296,  439,\n    296,  296,  439,  296,  455,  296,  439,\n    );\n    public static $yy_lookahead = array(\n      9,   10,   11,   12,   12,   14,   14,   16,   16,   18,\n     19,   20,    9,   34,  102,   12,   25,   13,   70,   16,\n     29,   30,   31,   35,   33,   21,   35,   23,   95,   38,\n     26,   52,   41,   42,   43,   44,   32,   46,   34,   48,\n     36,   50,   51,   52,   53,   53,   98,   99,   44,   58,\n     59,    9,   10,   11,   12,   22,   14,   13,   16,   15,\n     18,   19,   20,   85,   86,   87,   15,   25,   17,   21,\n     26,   29,   30,   31,   44,   33,   32,   35,   45,   35,\n     38,   51,   34,   41,   42,   43,   44,   35,   46,   77,\n     48,   47,   50,   51,   14,   53,   16,   13,   47,   47,\n     58,   59,    9,   10,   11,   12,   22,   14,   35,   16,\n     26,   18,   19,   20,  102,  103,   32,   44,   25,   34,\n     47,   36,   29,   30,   31,   52,   33,   14,   35,   45,\n     50,   38,   26,   53,   41,   42,   43,   44,   32,   46,\n     66,   48,   68,   50,   51,   77,   53,   15,   35,    7,\n      8,   58,   59,    9,   10,   11,   12,   12,   14,   14,\n     16,   16,   18,   19,   20,    9,   53,    1,   12,   25,\n    102,   82,   16,   29,   30,   31,   44,   33,   33,   35,\n    106,  107,   38,   51,   44,   41,   42,   43,   44,   35,\n     46,   51,   48,   82,   50,   51,   22,   53,   53,   13,\n     73,   47,   58,   59,    9,   10,   11,   12,   22,   14,\n     83,   16,   26,   18,   19,   20,   28,   12,   32,   45,\n     25,   22,   70,   35,   29,   30,   31,   65,   33,  102,\n     35,   45,   73,   38,   60,   47,   41,   42,   43,   44,\n     35,   46,   83,   48,   45,   50,   51,   95,   53,   71,\n     95,   52,   74,   58,   59,    9,   10,   11,   12,   81,\n     14,  102,   16,   73,   18,   19,   20,   34,   90,   36,\n      1,   25,   94,   83,   81,   29,   30,   31,   66,   33,\n     68,   35,   13,   96,   38,   98,   99,   41,   42,   43,\n     44,   15,   46,  100,   48,   26,   50,   51,   14,   53,\n     71,   32,   17,   74,   58,   59,    9,   10,   11,   12,\n     81,   14,   34,   16,   36,   18,   19,   20,   82,  107,\n     44,   35,   25,   94,   71,   95,   29,   30,   31,   44,\n     33,   78,   35,   47,   81,   38,   51,   53,   41,   42,\n     43,   44,   15,   46,   71,   48,   16,   50,   51,   22,\n     53,   78,   79,    1,   81,   58,   59,    9,   10,   11,\n     12,   15,   14,   17,   16,    1,   18,   19,   20,   66,\n     34,   68,   36,   25,   16,   71,   44,   29,   30,   31,\n     28,   33,   78,   35,   52,   81,   38,   62,   63,   41,\n     42,   43,   44,   47,   46,    6,   48,    8,   50,   51,\n     16,   53,   73,    1,    2,   40,   58,   59,    9,   10,\n     11,   12,   83,   14,   77,   16,   52,   18,   19,   20,\n     98,   99,   52,   95,   25,   97,   97,   92,   29,   30,\n     31,   77,   33,   49,   35,  100,   14,   38,   16,  102,\n     41,   42,   43,   44,   73,   46,   14,   48,   14,   50,\n     51,   36,   53,   73,   83,    1,  102,   58,   59,    9,\n     10,   11,   12,   83,   14,   17,   16,   50,   18,   19,\n     20,   17,   71,   64,   65,   25,   73,   97,   15,   29,\n     30,   31,   81,   33,   26,   35,   83,   53,   38,   73,\n     32,   41,   42,   43,   44,   47,   46,   92,   48,   83,\n     50,   51,   95,   53,   97,  100,   98,   99,   58,   59,\n      9,   10,   11,   12,   23,   14,   52,   16,   16,   18,\n     19,   20,   16,    7,   50,   16,   25,   13,   13,   16,\n     29,   30,   31,   16,   33,   16,   35,   33,   33,   38,\n     44,   16,   41,   42,   43,   44,   35,   46,   16,   48,\n     95,   50,   51,   96,   53,   37,   38,   39,   81,   58,\n     59,   66,   67,   68,   69,   83,   71,   72,   95,   74,\n     75,   76,   54,   55,   56,   57,   81,   97,   60,   84,\n     95,   13,   17,   80,   89,   90,   91,    1,   93,   94,\n      2,   81,  103,   66,   67,   68,   69,   99,   71,   72,\n    108,   74,   75,   76,   81,   37,   38,   39,   81,  108,\n    108,   84,  108,  108,  108,   95,   89,   90,   91,  108,\n     93,   94,   54,   55,   56,   57,   66,  108,   68,  108,\n    108,   71,  108,  108,   74,   75,   76,  108,  108,   21,\n    108,   81,  108,  108,   84,    9,  108,  108,   12,   89,\n     90,   91,   16,   93,   94,   37,   38,   39,  108,  108,\n    108,   66,   26,   68,  104,  105,   71,  108,   32,   74,\n     75,   76,   54,   55,   56,   57,   81,    1,  108,   84,\n     73,  108,  108,  108,   89,   90,   91,  108,   93,   94,\n     83,    2,   85,   86,   87,  108,  108,  108,  108,  104,\n    105,  108,   26,    3,    4,    5,    6,  108,   32,    9,\n     10,   11,   12,  108,  108,   14,  108,   16,   18,   19,\n     20,  108,  108,  108,   35,   25,   37,   38,   39,   29,\n     30,   31,   66,  108,   68,   69,   47,   71,   72,  108,\n     74,   75,   76,   54,   55,   56,   57,   81,  108,   48,\n     84,   50,  108,  108,   53,   89,   90,   91,  108,   93,\n     94,    3,  108,  108,  108,  108,  108,    9,   10,   11,\n     12,  108,   14,  108,  108,  108,   18,   19,   20,  108,\n    108,   13,  108,   25,   27,  108,  108,   29,   30,   31,\n    108,  108,  108,    3,   37,   38,   39,  108,  108,    9,\n     10,   11,   12,  108,   14,   37,   38,   39,   18,   19,\n     20,   54,   55,   56,   57,   25,  108,   59,   60,   29,\n     30,   31,   54,   55,   56,   57,  108,  108,   66,  108,\n     68,  108,    1,   71,  108,  108,   74,   75,   76,  108,\n    108,  108,  108,   81,   13,  108,   84,  108,  108,   59,\n     60,   89,   90,   91,  108,   93,   94,   26,  108,  108,\n     66,  108,   68,   32,  108,   71,  108,  105,   74,   75,\n     76,   66,   78,   68,  108,   81,   71,  108,   84,   74,\n     75,   76,  108,   89,   90,   91,   81,   93,   94,   84,\n      9,  108,  108,   12,   89,   90,   91,   16,   93,   94,\n     66,  108,   68,  108,  108,   71,  101,  108,   74,   75,\n     76,  108,  108,  108,  108,   81,  108,  108,   84,    9,\n    108,  108,   12,   89,   90,   91,   16,   93,   94,   66,\n     49,   68,  108,  108,   71,  101,  108,   74,   75,   76,\n     66,   78,   68,  108,   81,   71,  108,   84,   74,   75,\n     76,  108,   89,   90,   91,   81,   93,   94,   84,   49,\n    108,  108,  108,   89,   90,   91,  108,   93,   94,   66,\n    108,   68,   73,  108,   71,  101,   77,   74,   75,   76,\n    108,  108,   83,  108,   81,  108,  108,   84,    9,  108,\n    108,   12,   89,   90,   91,   16,   93,   94,   66,  108,\n     68,  102,  108,   71,  108,  108,   74,   75,   76,   66,\n    108,   68,  108,   81,   71,  108,   84,   74,   75,   76,\n    108,   89,   90,   91,   81,   93,   94,   84,   49,    1,\n    108,  108,   89,   90,   91,  108,   93,   94,   66,  108,\n     68,   13,  108,   71,  108,  108,   74,   75,   76,  108,\n    108,  108,  108,   81,   26,  108,   84,  108,  108,  108,\n     32,   89,   90,   91,  108,   93,   94,   66,  108,   68,\n    108,  108,   71,  108,  108,   74,   75,   76,   66,  108,\n     68,  108,   81,   71,  108,   84,   74,   75,   76,  108,\n     89,   90,   91,   81,   93,   94,   84,  108,  108,  108,\n     73,   89,   90,   91,   77,   93,   94,   66,  108,   68,\n     83,  108,   71,  108,  108,   74,   75,   76,  108,  108,\n    108,  108,   81,  108,  108,   84,  108,  108,  108,  102,\n     89,   90,   91,  108,   93,   94,   66,  108,   68,  108,\n    108,   71,  108,  108,   74,   75,   76,   66,  108,   68,\n    108,   81,   71,  108,   84,   74,   75,   76,  108,   89,\n     90,   91,   81,   93,   94,   84,  108,  108,  108,  108,\n     89,   90,   91,  108,   93,   94,   66,  108,   68,  108,\n    108,   71,  108,  108,   74,   75,   76,  108,  108,  108,\n    108,   81,  108,  108,   84,  108,  108,  108,  108,   89,\n     90,   91,  108,   93,   94,   66,  108,   68,  108,  108,\n     71,  108,  108,   74,   75,   76,   66,  108,   68,  108,\n     81,   71,  108,   84,   74,   75,   76,  108,   89,   90,\n     91,   81,   93,   94,   84,  108,  108,  108,  108,   89,\n     90,   91,  108,   93,   94,   66,  108,   68,  108,  108,\n     71,  108,  108,   74,   75,   76,  108,  108,  108,  108,\n     81,  108,  108,   84,  108,  108,  108,  108,   89,   90,\n     91,  108,   93,   94,   66,  108,   68,  108,  108,   71,\n    108,  108,   74,   75,   76,   66,  108,   68,  108,   81,\n     71,  108,   84,   74,   75,   76,  108,   89,   90,   91,\n     81,   93,   94,   84,  108,  108,  108,  108,   89,   90,\n     91,  108,   93,   94,   66,  108,   68,  108,  108,   71,\n    108,  108,   74,   75,   76,  108,  108,  108,  108,   81,\n    108,  108,   84,  108,  108,  108,  108,   89,   90,   91,\n    108,   93,   94,   66,  108,   68,  108,  108,   71,  108,\n    108,   74,   75,   76,   66,  108,   68,  108,   81,   71,\n    108,   84,   74,   75,   76,  108,   89,   90,   91,   81,\n     93,   94,   84,  108,  108,  108,  108,   89,   90,   91,\n    108,   93,   94,   66,  108,   68,  108,  108,   71,  108,\n    108,   74,   75,   76,  108,  108,  108,  108,   81,  108,\n    108,   84,  108,  108,  108,  108,   89,   90,   91,  108,\n     93,   94,   66,  108,   68,  108,  108,   71,  108,  108,\n     74,   75,   76,   66,  108,   68,  108,   81,   71,  108,\n     84,   74,   75,   76,  108,   89,   90,   91,   81,   93,\n     94,   84,  108,  108,  108,  108,   89,   90,   91,  108,\n     93,   94,   66,  108,   68,  108,  108,   71,  108,  108,\n     74,   75,   76,  108,  108,  108,  108,   81,  108,  108,\n     84,  108,  108,  108,  108,   89,   90,   91,  108,   93,\n     94,   66,  108,   68,  108,  108,   71,  108,  108,   74,\n     75,   76,   66,  108,   68,  108,   81,   71,  108,   84,\n     74,   75,   76,  108,   89,   90,   91,   81,   93,   94,\n     84,  108,  108,  108,  108,   89,   90,   91,  108,   93,\n     94,   66,    1,   68,  108,  108,   71,  108,  108,   74,\n     75,   76,  108,  108,   13,  108,   81,  108,   17,   84,\n    108,  108,  108,  108,   89,   90,   91,   26,   93,   94,\n     66,  108,   68,   32,  108,   71,   35,  108,   74,   75,\n    108,   66,  108,   68,  108,   81,   71,  108,   47,   74,\n     75,  108,   88,   89,   90,   91,   81,   93,   94,  108,\n    108,  108,  108,   88,   89,   90,   91,  108,   93,   94,\n     66,  108,   68,    9,  108,   71,   12,  108,   74,   75,\n     16,  108,  108,  108,  108,   81,  108,  108,  108,  108,\n     26,  108,   28,   89,   90,   91,   32,   93,   94,   66,\n    108,   68,  108,  108,   71,  108,  108,   74,   75,  108,\n     66,  108,   68,  108,   81,   71,  108,  108,   74,   75,\n    108,  108,   89,   90,   91,   81,   93,   94,  108,  108,\n    108,  108,  108,   89,   90,   91,  108,   93,   94,   66,\n    108,   68,  108,   73,   71,  108,  108,   74,   75,  108,\n    108,  108,  108,   83,   81,   85,   86,   87,  108,  108,\n    108,  108,   89,   90,   91,  108,   93,   94,   66,  108,\n     68,  108,  108,   71,  108,  108,   74,   75,  108,   66,\n    108,   68,  108,   81,   71,  108,  108,   74,   75,  108,\n    108,   89,   90,   91,   81,   93,   94,  108,  108,  108,\n    108,  108,   89,   90,   91,    2,   93,   94,   66,  108,\n     68,  108,    9,   71,  108,   12,   74,   75,   15,   16,\n     17,  108,  108,   81,  108,  108,  108,  108,  108,  108,\n    108,   89,   90,   91,    2,   93,   94,  108,  108,  108,\n    108,    9,  108,  108,   12,  108,  108,   44,   16,   17,\n     47,    2,   49,  108,   51,  108,  108,   73,    9,  108,\n    108,   12,  108,  108,   15,   16,   17,   83,  108,   85,\n     86,   87,   24,  108,   26,  108,   44,  108,  108,   47,\n     32,   49,  108,   51,   52,   37,   38,   39,  108,  108,\n    108,  108,  108,   44,  108,  108,   47,  108,   49,  108,\n     51,   26,   54,   55,   56,   57,  108,   32,    2,  108,\n    108,  108,   37,   38,   39,    9,  108,  108,   12,  108,\n    108,  108,   16,   17,  108,  108,    2,  108,  108,   54,\n     55,   56,   57,    9,  108,  108,   12,  108,  108,  108,\n     16,   17,  108,  108,  108,   37,   38,   39,  108,  108,\n     44,  108,  108,   47,   13,   49,  108,   51,  108,   13,\n     52,  108,   54,   55,   56,   57,  108,   13,   44,  108,\n      2,   47,  108,   49,  108,   51,  108,  108,   37,   38,\n     39,  108,  108,   37,   38,   39,  108,  108,  108,  108,\n    108,   37,   38,   39,  108,   54,   55,   56,   57,  108,\n     54,   55,   56,   57,  108,   37,   38,   39,   54,   55,\n     56,   57,   36,   37,   38,   39,  108,  108,  108,  108,\n    108,  108,   54,   55,   56,   57,  108,  108,  108,  108,\n     54,   55,   56,   57,    9,  108,  108,   12,   37,   38,\n     39,   16,   17,   36,   37,   38,   39,  108,  108,  108,\n    108,  108,  108,  108,  108,   54,   55,   56,   57,  108,\n    108,   54,   55,   56,   57,  108,  108,  108,  108,   44,\n    108,  108,   47,  108,   49,  108,   51,\n);\n    const YY_SHIFT_USE_DFLT = -22;\n    const YY_SHIFT_MAX = 230;\n    public static $yy_shift_ofst = array(\n    -22,  501,  501,   93,  399,  399,  450,   93,   93,   93,\n    399,  450,   -9,   93,   93,   93,   93,   93,   93,  144,\n     93,  195,   93,   93,   93,  246,  195,   93,   93,   93,\n     93,   93,  297,   93,   93,   93,   93,  348,   42,   42,\n     42,   42,   42,   42,   42,   42, 1768, 1795, 1795,  701,\n    758, 1521,   80,  676,  113,  790, 1927, 1828, 1896,  568,\n    768, 1861,  757, 1866, 1874, 1888,  618,  518, 1921, 1921,\n   1921, 1921, 1921, 1921, 1921, 1921, 1921, 1921, 1921, 1921,\n   1921, 1921, 1921, 1584,  636,  285,  676,  676,  346,  113,\n    113,  402,  700, 1723,   -8,  910,  831,  269, 1028,   51,\n      3,    3,  422,  448,  352,  106,  422,  106,  458,  364,\n    434,  454,  106,  166,  166,  166,  166,  565,  166,  166,\n    166,  586,  565,  166,  166,  -22,  -22, 1752, 1769, 1826,\n   1844, 1945,  145,  979,  156,  132,  284,  106,  140,  106,\n     30,  140,  140,   30,  106,  106,  106,  140,  106,  106,\n    140,  106,  327,  106,  106,  106,  140,  140,  106,  140,\n    205,  106,  284,  166,  565,  588,  565,  588,  565,  166,\n    166,  -12,  166,  -22,  -22,  -22,  -22,  -22,  -22,  689,\n      4,   44,   84,  186,   73,  881,  199,  188,  174,  286,\n     48,  336,  384,  389,  332,  142,  -21,   52,  154,   33,\n     85,  276,  278,  233,  515,  509,  474,  516,  502,  464,\n    491,  415,  417,  432,  514,  370,  463,  506,  365,  513,\n    -12,  517,  504,  519,  505,  511,  496,  525,  532,  330,\n    358,\n);\n    const YY_REDUCE_USE_DFLT = -89;\n    const YY_REDUCE_MAX = 178;\n    public static $yy_reduce_ofst = array(\n    325,  527,  495,  666,  595,  560,  863,  874,  834,  805,\n    762,  794, 1179, 1455, 1208, 1012, 1386, 1139, 1070, 1110,\n   1150, 1219, 1248, 1277, 1288, 1317, 1346, 1357, 1415, 1426,\n   1081, 1041, 1001,  972,  943,  932,  903, 1484, 1495, 1622,\n   1633, 1662, 1593, 1564, 1553, 1524, 1704,  607, 1590,  178,\n     74, 1027,  229,  899,  273,  212,  -22,  -22,  -22,  -22,\n    -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,\n    -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,  -22,\n    -22,  -22,  -22,  380,  329,  187,  159,  127,  -52,  253,\n    304,   12,  303,  152,  193,  328,   68,   68,   68,  322,\n    328,  407,  405,  322,   68,  190,  335,  416,  403,   68,\n    401,  354,  371,   68,   68,   68,  337,  322,   68,   68,\n     68,   68,  408,   68,   68,   68,  409,  455,  455,  455,\n    455,  455,  510,  480,  455,  455,  477,  482,  457,  482,\n    473,  457,  457,  485,  482,  482,  482,  457,  482,  482,\n    457,  482,  503,  482,  482,  482,  457,  457,  482,  457,\n    520,  482,  523,  -88,  498,  489,  498,  489,  498,  -88,\n    -88,  -67,  -88,  111,  155,   89,  236,  230,  162,\n);\n    public static $yyExpectedTokens = array(\n         array(),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(9, 10, 11, 12, 14, 16, 18, 19, 20, 25, 29, 30, 31, 33, 35, 38, 41, 42, 43, 44, 46, 48, 50, 51, 53, 58, 59, ),\n         array(24, 26, 32, 37, 38, 39, 54, 55, 56, 57, ),\n         array(26, 32, 37, 38, 39, 54, 55, 56, 57, ),\n         array(26, 32, 37, 38, 39, 54, 55, 56, 57, ),\n         array(14, 16, 48, 50, 53, ),\n         array(3, 9, 10, 11, 12, 14, 18, 19, 20, 25, 29, 30, 31, 59, 60, ),\n         array(1, 13, 17, 26, 32, 35, 47, ),\n         array(14, 16, 50, 53, ),\n         array(1, 26, 32, ),\n         array(14, 35, 53, ),\n         array(3, 9, 10, 11, 12, 14, 18, 19, 20, 25, 29, 30, 31, 59, 60, ),\n         array(36, 37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 52, 54, 55, 56, 57, ),\n         array(36, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(27, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(13, 37, 38, 39, 54, 55, 56, 57, ),\n         array(2, 37, 38, 39, 54, 55, 56, 57, ),\n         array(21, 37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, 60, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(37, 38, 39, 54, 55, 56, 57, ),\n         array(9, 12, 16, 26, 28, 32, ),\n         array(9, 12, 16, 26, 32, ),\n         array(17, 44, 51, ),\n         array(1, 26, 32, ),\n         array(1, 26, 32, ),\n         array(15, 17, 47, ),\n         array(14, 35, 53, ),\n         array(14, 35, 53, ),\n         array(1, 2, ),\n         array(3, 4, 5, 6, 9, 10, 11, 12, 18, 19, 20, 25, 29, 30, 31, ),\n         array(2, 9, 12, 15, 16, 17, 44, 47, 49, 51, ),\n         array(12, 14, 16, 53, ),\n         array(9, 12, 16, 49, ),\n         array(1, 13, 26, 32, ),\n         array(1, 13, 26, 32, ),\n         array(1, 13, 26, 32, ),\n         array(15, 17, 47, ),\n         array(9, 12, 16, ),\n         array(9, 12, 16, ),\n         array(14, 16, ),\n         array(17, 47, ),\n         array(1, 28, ),\n         array(26, 32, ),\n         array(14, 16, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(1, 52, ),\n         array(14, 53, ),\n         array(1, 17, ),\n         array(26, 32, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(17, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(1, ),\n         array(17, ),\n         array(1, ),\n         array(1, ),\n         array(),\n         array(),\n         array(2, 9, 12, 16, 17, 44, 47, 49, 51, 52, ),\n         array(2, 9, 12, 15, 16, 17, 44, 47, 49, 51, ),\n         array(2, 9, 12, 16, 17, 44, 47, 49, 51, ),\n         array(2, 9, 12, 16, 17, 44, 47, 49, 51, ),\n         array(9, 12, 16, 17, 44, 47, 49, 51, ),\n         array(12, 14, 16, 33, 53, ),\n         array(9, 12, 16, 49, ),\n         array(9, 12, 16, ),\n         array(15, 44, 51, ),\n         array(14, 53, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(15, 22, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(44, 51, ),\n         array(26, 32, ),\n         array(44, 51, ),\n         array(12, 35, ),\n         array(26, 32, ),\n         array(14, 53, ),\n         array(1, ),\n         array(17, ),\n         array(2, ),\n         array(17, ),\n         array(2, ),\n         array(17, ),\n         array(1, ),\n         array(1, ),\n         array(35, ),\n         array(1, ),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(2, 35, 37, 38, 39, 47, 54, 55, 56, 57, ),\n         array(13, 21, 23, 26, 32, 34, 36, 44, ),\n         array(13, 15, 26, 32, 35, 47, ),\n         array(13, 22, 26, 32, 45, ),\n         array(13, 22, 26, 32, 45, ),\n         array(35, 44, 47, 52, ),\n         array(9, 12, 16, 49, ),\n         array(22, 45, 52, ),\n         array(28, 35, 47, ),\n         array(22, 45, 60, ),\n         array(35, 47, ),\n         array(21, 34, ),\n         array(34, 36, ),\n         array(16, 49, ),\n         array(6, 8, ),\n         array(44, 52, ),\n         array(7, 8, ),\n         array(34, 52, ),\n         array(35, 47, ),\n         array(35, 47, ),\n         array(22, 45, ),\n         array(34, 36, ),\n         array(15, 44, ),\n         array(34, 36, ),\n         array(34, 36, ),\n         array(13, ),\n         array(16, ),\n         array(50, ),\n         array(7, ),\n         array(16, ),\n         array(52, ),\n         array(23, ),\n         array(36, ),\n         array(50, ),\n         array(14, ),\n         array(13, ),\n         array(52, ),\n         array(15, ),\n         array(16, ),\n         array(40, ),\n         array(16, ),\n         array(35, ),\n         array(16, ),\n         array(33, ),\n         array(16, ),\n         array(33, ),\n         array(35, ),\n         array(44, ),\n         array(16, ),\n         array(16, ),\n         array(16, ),\n         array(16, ),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n         array(),\n);\n    public static $yy_default = array(\n    336,  512,  512,  512,  497,  497,  512,  474,  474,  474,\n    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,\n    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,\n    512,  512,  512,  512,  512,  512,  512,  512,  512,  512,\n    512,  512,  512,  512,  512,  512,  377,  377,  356,  512,\n    512,  413,  512,  377,  512,  512,  512,  512,  512,  512,\n    512,  512,  382,  512,  349,  512,  512,  512,  382,  379,\n    389,  388,  384,  402,  473,  397,  498,  500,  401,  361,\n    472,  499,  349,  377,  377,  487,  377,  377,  429,  512,\n    512,  368,  326,  428,  512,  439,  391,  391,  391,  429,\n    439,  439,  512,  429,  391,  377,  512,  377,  377,  391,\n    512,  371,  358,  395,  394,  396,  373,  429,  400,  404,\n    391,  404,  484,  406,  405,  481,  334,  428,  428,  428,\n    428,  428,  512,  441,  439,  455,  512,  363,  435,  354,\n    434,  437,  433,  432,  359,  357,  364,  436,  353,  367,\n    466,  365,  512,  352,  350,  360,  467,  465,  346,  464,\n    439,  366,  512,  369,  461,  475,  488,  476,  485,  372,\n    422,  439,  374,  480,  439,  480,  480,  439,  334,  413,\n    409,  413,  403,  403,  413,  440,  403,  413,  403,  413,\n    512,  512,  512,  332,  409,  512,  512,  512,  423,  403,\n    512,  409,  512,  512,  512,  512,  512,  512,  512,  418,\n    385,  512,  512,  512,  512,  512,  512,  512,  415,  512,\n    455,  512,  512,  512,  411,  486,  409,  512,  512,  512,\n    512,  419,  407,  362,  445,  418,  425,  424,  420,  339,\n    460,  421,  483,  398,  416,  340,  399,  455,  378,  337,\n    338,  330,  328,  329,  442,  443,  444,  438,  392,  393,\n    427,  426,  386,  417,  408,  390,  410,  331,  333,  335,\n    412,  470,  414,  415,  503,  478,  495,  471,  459,  458,\n    375,  457,  344,  462,  508,  493,  376,  496,  456,  509,\n    494,  501,  504,  511,  510,  507,  505,  502,  506,  345,\n    468,  469,  446,  355,  341,  452,  450,  454,  448,  453,\n    447,  489,  490,  491,  463,  449,  492,  451,  327,  342,\n    343,  370,  430,  431,  479,  477,\n);\n    const YYNOCODE = 109;\n    const YYSTACKDEPTH = 500;\n    const YYNSTATE = 326;\n    const YYNRULE = 186;\n    const YYERRORSYMBOL = 61;\n    const YYERRSYMDT = 'yy0';\n    const YYFALLBACK = 0;\n    public static $yyFallback = array(\n    );\n    public function Trace($TraceFILE, $zTracePrompt)\n    {\n        if (!$TraceFILE) {\n            $zTracePrompt = 0;\n        } elseif (!$zTracePrompt) {\n            $TraceFILE = 0;\n        }\n        $this->yyTraceFILE = $TraceFILE;\n        $this->yyTracePrompt = $zTracePrompt;\n    }\n\n    public function PrintTrace()\n    {\n        $this->yyTraceFILE = fopen('php://output', 'w');\n        $this->yyTracePrompt = '<br>';\n    }\n\n    public $yyTraceFILE;\n    public $yyTracePrompt;\n    public $yyidx;                    /* Index of top element in stack */\n    public $yyerrcnt;                 /* Shifts left before out of the error */\n    public $yystack = array();  /* The parser's stack */\n\n    public $yyTokenName = array(\n  '$',             'VERT',          'COLON',         'TEXT',        \n  'STRIPON',       'STRIPOFF',      'LITERALSTART',  'LITERALEND',  \n  'LITERAL',       'SIMPELOUTPUT',  'SIMPLETAG',     'SMARTYBLOCKCHILDPARENT',\n  'LDEL',          'RDEL',          'DOLLARID',      'EQUAL',       \n  'ID',            'PTR',           'LDELMAKENOCACHE',  'LDELIF',      \n  'LDELFOR',       'SEMICOLON',     'INCDEC',        'TO',          \n  'STEP',          'LDELFOREACH',   'SPACE',         'AS',          \n  'APTR',          'LDELSETFILTER',  'CLOSETAG',      'LDELSLASH',   \n  'ATTR',          'INTEGER',       'COMMA',         'OPENP',       \n  'CLOSEP',        'MATH',          'UNIMATH',       'ISIN',        \n  'QMARK',         'NOT',           'TYPECAST',      'HEX',         \n  'DOT',           'INSTANCEOF',    'SINGLEQUOTESTRING',  'DOUBLECOLON', \n  'NAMESPACE',     'AT',            'HATCH',         'OPENB',       \n  'CLOSEB',        'DOLLAR',        'LOGOP',         'SLOGOP',      \n  'TLOGOP',        'SINGLECOND',    'ARRAYOPEN',     'QUOTE',       \n  'BACKTICK',      'error',         'start',         'template',    \n  'literal_e2',    'literal_e1',    'smartytag',     'tagbody',     \n  'tag',           'outattr',       'eqoutattr',     'varindexed',  \n  'output',        'attributes',    'variable',      'value',       \n  'expr',          'modifierlist',  'statement',     'statements',  \n  'foraction',     'varvar',        'modparameters',  'attribute',   \n  'ternary',       'tlop',          'lop',           'scond',       \n  'array',         'function',      'ns1',           'doublequoted_with_quotes',\n  'static_class_access',  'arraydef',      'object',        'arrayindex',  \n  'indexdef',      'varvarele',     'objectchain',   'objectelement',\n  'method',        'params',        'modifier',      'modparameter',\n  'arrayelements',  'arrayelement',  'doublequoted',  'doublequotedcontent',\n    );\n\n    public static $yyRuleName = array(\n  'start ::= template',\n  'template ::= template TEXT',\n  'template ::= template STRIPON',\n  'template ::= template STRIPOFF',\n  'template ::= template LITERALSTART literal_e2 LITERALEND',\n  'literal_e2 ::= literal_e1 LITERALSTART literal_e1 LITERALEND',\n  'literal_e2 ::= literal_e1',\n  'literal_e1 ::= literal_e1 LITERAL',\n  'literal_e1 ::=',\n  'template ::= template smartytag',\n  'template ::=',\n  'smartytag ::= SIMPELOUTPUT',\n  'smartytag ::= SIMPLETAG',\n  'smartytag ::= SMARTYBLOCKCHILDPARENT',\n  'smartytag ::= LDEL tagbody RDEL',\n  'smartytag ::= tag RDEL',\n  'tagbody ::= outattr',\n  'tagbody ::= DOLLARID eqoutattr',\n  'tagbody ::= varindexed eqoutattr',\n  'eqoutattr ::= EQUAL outattr',\n  'outattr ::= output attributes',\n  'output ::= variable',\n  'output ::= value',\n  'output ::= expr',\n  'tag ::= LDEL ID attributes',\n  'tag ::= LDEL ID',\n  'tag ::= LDEL ID modifierlist attributes',\n  'tag ::= LDEL ID PTR ID attributes',\n  'tag ::= LDEL ID PTR ID modifierlist attributes',\n  'tag ::= LDELMAKENOCACHE DOLLARID',\n  'tag ::= LDELIF expr',\n  'tag ::= LDELIF expr attributes',\n  'tag ::= LDELIF statement',\n  'tag ::= LDELIF statement attributes',\n  'tag ::= LDELFOR statements SEMICOLON expr SEMICOLON varindexed foraction attributes',\n  'foraction ::= EQUAL expr',\n  'foraction ::= INCDEC',\n  'tag ::= LDELFOR statement TO expr attributes',\n  'tag ::= LDELFOR statement TO expr STEP expr attributes',\n  'tag ::= LDELFOREACH SPACE expr AS varvar attributes',\n  'tag ::= LDELFOREACH SPACE expr AS varvar APTR varvar attributes',\n  'tag ::= LDELFOREACH attributes',\n  'tag ::= LDELSETFILTER ID modparameters',\n  'tag ::= LDELSETFILTER ID modparameters modifierlist',\n  'smartytag ::= CLOSETAG',\n  'tag ::= LDELSLASH ID',\n  'tag ::= LDELSLASH ID modifierlist',\n  'tag ::= LDELSLASH ID PTR ID',\n  'tag ::= LDELSLASH ID PTR ID modifierlist',\n  'attributes ::= attributes attribute',\n  'attributes ::= attribute',\n  'attributes ::=',\n  'attribute ::= SPACE ID EQUAL ID',\n  'attribute ::= ATTR expr',\n  'attribute ::= ATTR value',\n  'attribute ::= SPACE ID',\n  'attribute ::= SPACE expr',\n  'attribute ::= SPACE value',\n  'attribute ::= SPACE INTEGER EQUAL expr',\n  'statements ::= statement',\n  'statements ::= statements COMMA statement',\n  'statement ::= DOLLARID EQUAL INTEGER',\n  'statement ::= DOLLARID EQUAL expr',\n  'statement ::= varindexed EQUAL expr',\n  'statement ::= OPENP statement CLOSEP',\n  'expr ::= value',\n  'expr ::= ternary',\n  'expr ::= DOLLARID COLON ID',\n  'expr ::= expr MATH value',\n  'expr ::= expr UNIMATH value',\n  'expr ::= expr tlop value',\n  'expr ::= expr lop expr',\n  'expr ::= expr scond',\n  'expr ::= expr ISIN array',\n  'expr ::= expr ISIN value',\n  'ternary ::= OPENP expr CLOSEP QMARK DOLLARID COLON expr',\n  'ternary ::= OPENP expr CLOSEP QMARK expr COLON expr',\n  'value ::= variable',\n  'value ::= UNIMATH value',\n  'value ::= NOT value',\n  'value ::= TYPECAST value',\n  'value ::= variable INCDEC',\n  'value ::= HEX',\n  'value ::= INTEGER',\n  'value ::= INTEGER DOT INTEGER',\n  'value ::= INTEGER DOT',\n  'value ::= DOT INTEGER',\n  'value ::= ID',\n  'value ::= function',\n  'value ::= OPENP expr CLOSEP',\n  'value ::= variable INSTANCEOF ns1',\n  'value ::= variable INSTANCEOF variable',\n  'value ::= SINGLEQUOTESTRING',\n  'value ::= doublequoted_with_quotes',\n  'value ::= varindexed DOUBLECOLON static_class_access',\n  'value ::= smartytag',\n  'value ::= value modifierlist',\n  'value ::= NAMESPACE',\n  'value ::= arraydef',\n  'value ::= ns1 DOUBLECOLON static_class_access',\n  'ns1 ::= ID',\n  'ns1 ::= NAMESPACE',\n  'variable ::= DOLLARID',\n  'variable ::= varindexed',\n  'variable ::= varvar AT ID',\n  'variable ::= object',\n  'variable ::= HATCH ID HATCH',\n  'variable ::= HATCH ID HATCH arrayindex',\n  'variable ::= HATCH variable HATCH',\n  'variable ::= HATCH variable HATCH arrayindex',\n  'varindexed ::= DOLLARID arrayindex',\n  'varindexed ::= varvar arrayindex',\n  'arrayindex ::= arrayindex indexdef',\n  'arrayindex ::=',\n  'indexdef ::= DOT DOLLARID',\n  'indexdef ::= DOT varvar',\n  'indexdef ::= DOT varvar AT ID',\n  'indexdef ::= DOT ID',\n  'indexdef ::= DOT INTEGER',\n  'indexdef ::= DOT LDEL expr RDEL',\n  'indexdef ::= OPENB ID CLOSEB',\n  'indexdef ::= OPENB ID DOT ID CLOSEB',\n  'indexdef ::= OPENB SINGLEQUOTESTRING CLOSEB',\n  'indexdef ::= OPENB INTEGER CLOSEB',\n  'indexdef ::= OPENB DOLLARID CLOSEB',\n  'indexdef ::= OPENB variable CLOSEB',\n  'indexdef ::= OPENB value CLOSEB',\n  'indexdef ::= OPENB expr CLOSEB',\n  'indexdef ::= OPENB CLOSEB',\n  'varvar ::= DOLLARID',\n  'varvar ::= DOLLAR',\n  'varvar ::= varvar varvarele',\n  'varvarele ::= ID',\n  'varvarele ::= SIMPELOUTPUT',\n  'varvarele ::= LDEL expr RDEL',\n  'object ::= varindexed objectchain',\n  'objectchain ::= objectelement',\n  'objectchain ::= objectchain objectelement',\n  'objectelement ::= PTR ID arrayindex',\n  'objectelement ::= PTR varvar arrayindex',\n  'objectelement ::= PTR LDEL expr RDEL arrayindex',\n  'objectelement ::= PTR ID LDEL expr RDEL arrayindex',\n  'objectelement ::= PTR method',\n  'function ::= ns1 OPENP params CLOSEP',\n  'method ::= ID OPENP params CLOSEP',\n  'method ::= DOLLARID OPENP params CLOSEP',\n  'params ::= params COMMA expr',\n  'params ::= expr',\n  'params ::=',\n  'modifierlist ::= modifierlist modifier modparameters',\n  'modifierlist ::= modifier modparameters',\n  'modifier ::= VERT AT ID',\n  'modifier ::= VERT ID',\n  'modparameters ::= modparameters modparameter',\n  'modparameters ::=',\n  'modparameter ::= COLON value',\n  'modparameter ::= COLON UNIMATH value',\n  'modparameter ::= COLON array',\n  'static_class_access ::= method',\n  'static_class_access ::= method objectchain',\n  'static_class_access ::= ID',\n  'static_class_access ::= DOLLARID arrayindex',\n  'static_class_access ::= DOLLARID arrayindex objectchain',\n  'lop ::= LOGOP',\n  'lop ::= SLOGOP',\n  'tlop ::= TLOGOP',\n  'scond ::= SINGLECOND',\n  'arraydef ::= OPENB arrayelements CLOSEB',\n  'arraydef ::= ARRAYOPEN arrayelements CLOSEP',\n  'arrayelements ::= arrayelement',\n  'arrayelements ::= arrayelements COMMA arrayelement',\n  'arrayelements ::=',\n  'arrayelement ::= value APTR expr',\n  'arrayelement ::= ID APTR expr',\n  'arrayelement ::= expr',\n  'doublequoted_with_quotes ::= QUOTE QUOTE',\n  'doublequoted_with_quotes ::= QUOTE doublequoted QUOTE',\n  'doublequoted ::= doublequoted doublequotedcontent',\n  'doublequoted ::= doublequotedcontent',\n  'doublequotedcontent ::= BACKTICK variable BACKTICK',\n  'doublequotedcontent ::= BACKTICK expr BACKTICK',\n  'doublequotedcontent ::= DOLLARID',\n  'doublequotedcontent ::= LDEL variable RDEL',\n  'doublequotedcontent ::= LDEL expr RDEL',\n  'doublequotedcontent ::= smartytag',\n  'doublequotedcontent ::= TEXT',\n    );\n\n    public function tokenName($tokenType)\n    {\n        if ($tokenType === 0) {\n            return 'End of Input';\n        }\n        if ($tokenType > 0 && $tokenType < count($this->yyTokenName)) {\n            return $this->yyTokenName[$tokenType];\n        } else {\n            return 'Unknown';\n        }\n    }\n\n    public static function yy_destructor($yymajor, $yypminor)\n    {\n        switch ($yymajor) {\n            default:  break;   /* If no destructor action specified: do nothing */\n        }\n    }\n\n    public function yy_pop_parser_stack()\n    {\n        if (empty($this->yystack)) {\n            return;\n        }\n        $yytos = array_pop($this->yystack);\n        if ($this->yyTraceFILE && $this->yyidx >= 0) {\n            fwrite($this->yyTraceFILE,\n                $this->yyTracePrompt . 'Popping ' . $this->yyTokenName[$yytos->major] .\n                    \"\\n\");\n        }\n        $yymajor = $yytos->major;\n        self::yy_destructor($yymajor, $yytos->minor);\n        $this->yyidx--;\n\n        return $yymajor;\n    }\n\n    public function __destruct()\n    {\n        while ($this->yystack !== Array()) {\n            $this->yy_pop_parser_stack();\n        }\n        if (is_resource($this->yyTraceFILE)) {\n            fclose($this->yyTraceFILE);\n        }\n    }\n\n    public function yy_get_expected_tokens($token)\n    {\n        static $res3 = array();\n        static $res4 = array();\n        $state = $this->yystack[$this->yyidx]->stateno;\n        $expected = self::$yyExpectedTokens[$state];\n        if (isset($res3[$state][$token])) {\n            if ($res3[$state][$token]) {\n                return $expected;\n            }\n        } else {\n            if ($res3[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {\n                return $expected;\n            }\n        }\n        $stack = $this->yystack;\n        $yyidx = $this->yyidx;\n        do {\n            $yyact = $this->yy_find_shift_action($token);\n            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {\n                // reduce action\n                $done = 0;\n                do {\n                    if ($done++ === 100) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // too much recursion prevents proper detection\n                        // so give up\n                        return array_unique($expected);\n                    }\n                    $yyruleno = $yyact - self::YYNSTATE;\n                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];\n                    $nextstate = $this->yy_find_reduce_action(\n                        $this->yystack[$this->yyidx]->stateno,\n                        self::$yyRuleInfo[$yyruleno][0]);\n                    if (isset(self::$yyExpectedTokens[$nextstate])) {\n                $expected = array_merge($expected, self::$yyExpectedTokens[$nextstate]);\n                        if (isset($res4[$nextstate][$token])) {\n                            if ($res4[$nextstate][$token]) {\n                                $this->yyidx = $yyidx;\n                                $this->yystack = $stack;\n                                return array_unique($expected);\n                            }\n                        } else {\n                            if ($res4[$nextstate][$token] = in_array($token, self::$yyExpectedTokens[$nextstate], true)) {\n                                $this->yyidx = $yyidx;\n                                $this->yystack = $stack;\n                                return array_unique($expected);\n                            }\n                        }\n                    }\n                    if ($nextstate < self::YYNSTATE) {\n                        // we need to shift a non-terminal\n                        $this->yyidx++;\n                        $x = new TP_yyStackEntry;\n                        $x->stateno = $nextstate;\n                        $x->major = self::$yyRuleInfo[$yyruleno][0];\n                        $this->yystack[$this->yyidx] = $x;\n                        continue 2;\n                    } elseif ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // the last token was just ignored, we can't accept\n                        // by ignoring input, this is in essence ignoring a\n                        // syntax error!\n                        return array_unique($expected);\n                    } elseif ($nextstate === self::YY_NO_ACTION) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // input accepted, but not shifted (I guess)\n                        return $expected;\n                    } else {\n                        $yyact = $nextstate;\n                    }\n                } while (true);\n            }\n            break;\n        } while (true);\n    $this->yyidx = $yyidx;\n    $this->yystack = $stack;\n\n        return array_unique($expected);\n    }\n\n    public function yy_is_expected_token($token)\n    {\n        static $res = array();\n        static $res2 = array();\n        if ($token === 0) {\n            return true; // 0 is not part of this\n        }\n        $state = $this->yystack[$this->yyidx]->stateno;\n        if (isset($res[$state][$token])) {\n            if ($res[$state][$token]) {\n                return true;\n            }\n        } else {\n            if ($res[$state][$token] = in_array($token, self::$yyExpectedTokens[$state], true)) {\n                return true;\n            }\n       }\n        $stack = $this->yystack;\n        $yyidx = $this->yyidx;\n        do {\n            $yyact = $this->yy_find_shift_action($token);\n            if ($yyact >= self::YYNSTATE && $yyact < self::YYNSTATE + self::YYNRULE) {\n                // reduce action\n                $done = 0;\n                do {\n                    if ($done++ === 100) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // too much recursion prevents proper detection\n                        // so give up\n                        return true;\n                    }\n                    $yyruleno = $yyact - self::YYNSTATE;\n                    $this->yyidx -= self::$yyRuleInfo[$yyruleno][1];\n                    $nextstate = $this->yy_find_reduce_action(\n                        $this->yystack[$this->yyidx]->stateno,\n                        self::$yyRuleInfo[$yyruleno][0]);\n                    if (isset($res2[$nextstate][$token])) {\n                        if ($res2[$nextstate][$token]) {\n                            $this->yyidx = $yyidx;\n                            $this->yystack = $stack;\n                            return true;\n                        }\n                    } else {\n                        if ($res2[$nextstate][$token] = (isset(self::$yyExpectedTokens[$nextstate]) && in_array($token, self::$yyExpectedTokens[$nextstate], true))) {\n                            $this->yyidx = $yyidx;\n                            $this->yystack = $stack;\n                            return true;\n                        }\n                    }\n                    if ($nextstate < self::YYNSTATE) {\n                        // we need to shift a non-terminal\n                        $this->yyidx++;\n                        $x = new TP_yyStackEntry;\n                        $x->stateno = $nextstate;\n                        $x->major = self::$yyRuleInfo[$yyruleno][0];\n                        $this->yystack[$this->yyidx] = $x;\n                        continue 2;\n                    } elseif ($nextstate === self::YYNSTATE + self::YYNRULE + 1) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        if (!$token) {\n                            // end of input: this is valid\n                            return true;\n                        }\n                        // the last token was just ignored, we can't accept\n                        // by ignoring input, this is in essence ignoring a\n                        // syntax error!\n                        return false;\n                    } elseif ($nextstate === self::YY_NO_ACTION) {\n                        $this->yyidx = $yyidx;\n                        $this->yystack = $stack;\n                        // input accepted, but not shifted (I guess)\n                        return true;\n                    } else {\n                        $yyact = $nextstate;\n                    }\n                } while (true);\n            }\n            break;\n        } while (true);\n        $this->yyidx = $yyidx;\n        $this->yystack = $stack;\n\n        return true;\n    }\n\n   public function yy_find_shift_action($iLookAhead)\n    {\n        $stateno = $this->yystack[$this->yyidx]->stateno;\n\n        /* if ($this->yyidx < 0) return self::YY_NO_ACTION;  */\n        if (!isset(self::$yy_shift_ofst[$stateno])) {\n            // no shift actions\n            return self::$yy_default[$stateno];\n        }\n        $i = self::$yy_shift_ofst[$stateno];\n        if ($i === self::YY_SHIFT_USE_DFLT) {\n            return self::$yy_default[$stateno];\n        }\n        if ($iLookAhead === self::YYNOCODE) {\n            return self::YY_NO_ACTION;\n        }\n        $i += $iLookAhead;\n        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||\n              self::$yy_lookahead[$i] != $iLookAhead) {\n            if (count(self::$yyFallback) && $iLookAhead < count(self::$yyFallback)\n                   && ($iFallback = self::$yyFallback[$iLookAhead]) != 0) {\n                if ($this->yyTraceFILE) {\n                    fwrite($this->yyTraceFILE, $this->yyTracePrompt . 'FALLBACK ' .\n                        $this->yyTokenName[$iLookAhead] . ' => ' .\n                        $this->yyTokenName[$iFallback] . \"\\n\");\n                }\n\n                return $this->yy_find_shift_action($iFallback);\n            }\n\n            return self::$yy_default[$stateno];\n        } else {\n            return self::$yy_action[$i];\n        }\n    }\n\n    public function yy_find_reduce_action($stateno, $iLookAhead)\n    {\n        /* $stateno = $this->yystack[$this->yyidx]->stateno; */\n\n        if (!isset(self::$yy_reduce_ofst[$stateno])) {\n            return self::$yy_default[$stateno];\n        }\n        $i = self::$yy_reduce_ofst[$stateno];\n        if ($i === self::YY_REDUCE_USE_DFLT) {\n            return self::$yy_default[$stateno];\n        }\n        if ($iLookAhead === self::YYNOCODE) {\n            return self::YY_NO_ACTION;\n        }\n        $i += $iLookAhead;\n        if ($i < 0 || $i >= self::YY_SZ_ACTTAB ||\n              self::$yy_lookahead[$i] != $iLookAhead) {\n            return self::$yy_default[$stateno];\n        } else {\n            return self::$yy_action[$i];\n        }\n    }\n\n    public function yy_shift($yyNewState, $yyMajor, $yypMinor)\n    {\n        $this->yyidx++;\n        if ($this->yyidx >= self::YYSTACKDEPTH) {\n            $this->yyidx--;\n            if ($this->yyTraceFILE) {\n                fprintf($this->yyTraceFILE, \"%sStack Overflow!\\n\", $this->yyTracePrompt);\n            }\n            while ($this->yyidx >= 0) {\n                $this->yy_pop_parser_stack();\n            }\n// line 220 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    $this->internalError = true;\n    $this->compiler->trigger_template_error('Stack overflow in template parser');\n\n            return;\n        }\n        $yytos = new TP_yyStackEntry;\n        $yytos->stateno = $yyNewState;\n        $yytos->major = $yyMajor;\n        $yytos->minor = $yypMinor;\n        $this->yystack[] = $yytos;\n        if ($this->yyTraceFILE && $this->yyidx > 0) {\n            fprintf($this->yyTraceFILE, \"%sShift %d\\n\", $this->yyTracePrompt,\n                $yyNewState);\n            fprintf($this->yyTraceFILE, \"%sStack:\", $this->yyTracePrompt);\n            for ($i = 1; $i <= $this->yyidx; $i++) {\n                fprintf($this->yyTraceFILE, \" %s\",\n                    $this->yyTokenName[$this->yystack[$i]->major]);\n            }\n            fwrite($this->yyTraceFILE,\"\\n\");\n        }\n    }\n\n    public static $yyRuleInfo = array(\n  array( 0 => 62, 1 => 1 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 4 ),\n  array( 0 => 64, 1 => 4 ),\n  array( 0 => 64, 1 => 1 ),\n  array( 0 => 65, 1 => 2 ),\n  array( 0 => 65, 1 => 0 ),\n  array( 0 => 63, 1 => 2 ),\n  array( 0 => 63, 1 => 0 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 66, 1 => 3 ),\n  array( 0 => 66, 1 => 2 ),\n  array( 0 => 67, 1 => 1 ),\n  array( 0 => 67, 1 => 2 ),\n  array( 0 => 67, 1 => 2 ),\n  array( 0 => 70, 1 => 2 ),\n  array( 0 => 69, 1 => 2 ),\n  array( 0 => 72, 1 => 1 ),\n  array( 0 => 72, 1 => 1 ),\n  array( 0 => 72, 1 => 1 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 4 ),\n  array( 0 => 68, 1 => 5 ),\n  array( 0 => 68, 1 => 6 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 8 ),\n  array( 0 => 80, 1 => 2 ),\n  array( 0 => 80, 1 => 1 ),\n  array( 0 => 68, 1 => 5 ),\n  array( 0 => 68, 1 => 7 ),\n  array( 0 => 68, 1 => 6 ),\n  array( 0 => 68, 1 => 8 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 4 ),\n  array( 0 => 66, 1 => 1 ),\n  array( 0 => 68, 1 => 2 ),\n  array( 0 => 68, 1 => 3 ),\n  array( 0 => 68, 1 => 4 ),\n  array( 0 => 68, 1 => 5 ),\n  array( 0 => 73, 1 => 2 ),\n  array( 0 => 73, 1 => 1 ),\n  array( 0 => 73, 1 => 0 ),\n  array( 0 => 83, 1 => 4 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 2 ),\n  array( 0 => 83, 1 => 4 ),\n  array( 0 => 79, 1 => 1 ),\n  array( 0 => 79, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 78, 1 => 3 ),\n  array( 0 => 76, 1 => 1 ),\n  array( 0 => 76, 1 => 1 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 2 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 76, 1 => 3 ),\n  array( 0 => 84, 1 => 7 ),\n  array( 0 => 84, 1 => 7 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 2 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 1 ),\n  array( 0 => 75, 1 => 3 ),\n  array( 0 => 90, 1 => 1 ),\n  array( 0 => 90, 1 => 1 ),\n  array( 0 => 74, 1 => 1 ),\n  array( 0 => 74, 1 => 1 ),\n  array( 0 => 74, 1 => 3 ),\n  array( 0 => 74, 1 => 1 ),\n  array( 0 => 74, 1 => 3 ),\n  array( 0 => 74, 1 => 4 ),\n  array( 0 => 74, 1 => 3 ),\n  array( 0 => 74, 1 => 4 ),\n  array( 0 => 71, 1 => 2 ),\n  array( 0 => 71, 1 => 2 ),\n  array( 0 => 95, 1 => 2 ),\n  array( 0 => 95, 1 => 0 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 4 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 96, 1 => 4 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 5 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 3 ),\n  array( 0 => 96, 1 => 2 ),\n  array( 0 => 81, 1 => 1 ),\n  array( 0 => 81, 1 => 1 ),\n  array( 0 => 81, 1 => 2 ),\n  array( 0 => 97, 1 => 1 ),\n  array( 0 => 97, 1 => 1 ),\n  array( 0 => 97, 1 => 3 ),\n  array( 0 => 94, 1 => 2 ),\n  array( 0 => 98, 1 => 1 ),\n  array( 0 => 98, 1 => 2 ),\n  array( 0 => 99, 1 => 3 ),\n  array( 0 => 99, 1 => 3 ),\n  array( 0 => 99, 1 => 5 ),\n  array( 0 => 99, 1 => 6 ),\n  array( 0 => 99, 1 => 2 ),\n  array( 0 => 89, 1 => 4 ),\n  array( 0 => 100, 1 => 4 ),\n  array( 0 => 100, 1 => 4 ),\n  array( 0 => 101, 1 => 3 ),\n  array( 0 => 101, 1 => 1 ),\n  array( 0 => 101, 1 => 0 ),\n  array( 0 => 77, 1 => 3 ),\n  array( 0 => 77, 1 => 2 ),\n  array( 0 => 102, 1 => 3 ),\n  array( 0 => 102, 1 => 2 ),\n  array( 0 => 82, 1 => 2 ),\n  array( 0 => 82, 1 => 0 ),\n  array( 0 => 103, 1 => 2 ),\n  array( 0 => 103, 1 => 3 ),\n  array( 0 => 103, 1 => 2 ),\n  array( 0 => 92, 1 => 1 ),\n  array( 0 => 92, 1 => 2 ),\n  array( 0 => 92, 1 => 1 ),\n  array( 0 => 92, 1 => 2 ),\n  array( 0 => 92, 1 => 3 ),\n  array( 0 => 86, 1 => 1 ),\n  array( 0 => 86, 1 => 1 ),\n  array( 0 => 85, 1 => 1 ),\n  array( 0 => 87, 1 => 1 ),\n  array( 0 => 93, 1 => 3 ),\n  array( 0 => 93, 1 => 3 ),\n  array( 0 => 104, 1 => 1 ),\n  array( 0 => 104, 1 => 3 ),\n  array( 0 => 104, 1 => 0 ),\n  array( 0 => 105, 1 => 3 ),\n  array( 0 => 105, 1 => 3 ),\n  array( 0 => 105, 1 => 1 ),\n  array( 0 => 91, 1 => 2 ),\n  array( 0 => 91, 1 => 3 ),\n  array( 0 => 106, 1 => 2 ),\n  array( 0 => 106, 1 => 1 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 1 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 3 ),\n  array( 0 => 107, 1 => 1 ),\n  array( 0 => 107, 1 => 1 ),\n    );\n\n    public static $yyReduceMap = array(\n        0 => 0,\n        1 => 1,\n        2 => 2,\n        3 => 3,\n        4 => 4,\n        5 => 5,\n        6 => 6,\n        21 => 6,\n        22 => 6,\n        23 => 6,\n        36 => 6,\n        56 => 6,\n        57 => 6,\n        65 => 6,\n        66 => 6,\n        77 => 6,\n        82 => 6,\n        83 => 6,\n        88 => 6,\n        92 => 6,\n        93 => 6,\n        97 => 6,\n        98 => 6,\n        100 => 6,\n        105 => 6,\n        169 => 6,\n        174 => 6,\n        7 => 7,\n        8 => 8,\n        9 => 9,\n        11 => 11,\n        12 => 12,\n        13 => 13,\n        14 => 14,\n        15 => 15,\n        16 => 16,\n        17 => 17,\n        18 => 18,\n        19 => 19,\n        20 => 20,\n        24 => 24,\n        25 => 25,\n        26 => 26,\n        27 => 27,\n        28 => 28,\n        29 => 29,\n        30 => 30,\n        31 => 31,\n        33 => 31,\n        32 => 32,\n        34 => 34,\n        35 => 35,\n        37 => 37,\n        38 => 38,\n        39 => 39,\n        40 => 40,\n        41 => 41,\n        42 => 42,\n        43 => 43,\n        44 => 44,\n        45 => 45,\n        46 => 46,\n        47 => 47,\n        48 => 48,\n        49 => 49,\n        50 => 50,\n        59 => 50,\n        147 => 50,\n        151 => 50,\n        155 => 50,\n        157 => 50,\n        51 => 51,\n        148 => 51,\n        154 => 51,\n        52 => 52,\n        53 => 53,\n        54 => 53,\n        55 => 55,\n        132 => 55,\n        58 => 58,\n        60 => 60,\n        61 => 61,\n        62 => 61,\n        63 => 63,\n        64 => 64,\n        67 => 67,\n        68 => 68,\n        69 => 68,\n        70 => 70,\n        71 => 71,\n        72 => 72,\n        73 => 73,\n        74 => 74,\n        75 => 75,\n        76 => 76,\n        78 => 78,\n        80 => 78,\n        81 => 78,\n        112 => 78,\n        79 => 79,\n        84 => 84,\n        85 => 85,\n        86 => 86,\n        87 => 87,\n        89 => 89,\n        90 => 90,\n        91 => 90,\n        94 => 94,\n        95 => 95,\n        96 => 96,\n        99 => 99,\n        101 => 101,\n        102 => 102,\n        103 => 103,\n        104 => 104,\n        106 => 106,\n        107 => 107,\n        108 => 108,\n        109 => 109,\n        110 => 110,\n        111 => 111,\n        113 => 113,\n        171 => 113,\n        114 => 114,\n        115 => 115,\n        116 => 116,\n        117 => 117,\n        118 => 118,\n        119 => 119,\n        127 => 119,\n        120 => 120,\n        121 => 121,\n        122 => 122,\n        123 => 122,\n        125 => 122,\n        126 => 122,\n        124 => 124,\n        128 => 128,\n        129 => 129,\n        130 => 130,\n        175 => 130,\n        131 => 131,\n        133 => 133,\n        134 => 134,\n        135 => 135,\n        136 => 136,\n        137 => 137,\n        138 => 138,\n        139 => 139,\n        140 => 140,\n        141 => 141,\n        142 => 142,\n        143 => 143,\n        144 => 144,\n        145 => 145,\n        146 => 146,\n        149 => 149,\n        150 => 150,\n        152 => 152,\n        153 => 153,\n        156 => 156,\n        158 => 158,\n        159 => 159,\n        160 => 160,\n        161 => 161,\n        162 => 162,\n        163 => 163,\n        164 => 164,\n        165 => 165,\n        166 => 166,\n        167 => 167,\n        168 => 167,\n        170 => 170,\n        172 => 172,\n        173 => 173,\n        176 => 176,\n        177 => 177,\n        178 => 178,\n        179 => 179,\n        182 => 179,\n        180 => 180,\n        183 => 180,\n        181 => 181,\n        184 => 184,\n        185 => 185,\n    );\n// line 233 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r0(){\n    $this->root_buffer->prepend_array($this, $this->template_prefix);\n    $this->root_buffer->append_array($this, $this->template_postfix);\n    $this->_retvalue = $this->root_buffer->to_smarty_php($this);\n    }\n// line 240 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r1(){\n         $text = $this->yystack[ $this->yyidx + 0 ]->minor;\n\n         if ((string)$text == '') {\n            $this->current_buffer->append_subtree($this, null);\n         }\n\n         $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($text, $this->strip));\n    }\n// line 250 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r2(){\n    $this->strip = true;\n    }\n// line 254 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r3(){\n    $this->strip = false;\n    }\n// line 259 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r4(){\n       $this->current_buffer->append_subtree($this, new Smarty_Internal_ParseTree_Text($this->yystack[$this->yyidx + -1]->minor));\n    }\n// line 264 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r5(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor.$this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 267 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r6(){\n    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 271 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r7(){\n        $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n\n    }\n// line 276 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r8(){\n    $this->_retvalue = '';\n    }\n// line 280 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r9(){\n      if ($this->compiler->has_code) {\n          $this->current_buffer->append_subtree($this, $this->mergePrefixCode($this->yystack[$this->yyidx + 0]->minor));\n      }\n     $this->compiler->has_variable_string = false;\n     $this->block_nesting_level = count($this->compiler->_tag_stack);\n    }\n// line 292 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r11(){\n    $var = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    if (preg_match('/^(.*)(\\s+nocache)$/', $var, $match)) {\n        $this->_retvalue = $this->compiler->compileTag('private_print_expression',array('nocache'),array('value'=>$this->compiler->compileVariable('\\''.$match[1].'\\'')));\n    } else {\n        $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->compiler->compileVariable('\\''.$var.'\\'')));\n    }\n    }\n// line 302 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r12(){\n    $tag = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()));\n    if ($tag == 'strip') {\n        $this->strip = true;\n        $this->_retvalue = null;\n    } else {\n        if (defined($tag)) {\n            if ($this->security) {\n               $this->security->isTrustedConstant($tag, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$tag));\n        } else {\n            if (preg_match('/^(.*)(\\s+nocache)$/', $tag, $match)) {\n                $this->_retvalue = $this->compiler->compileTag($match[1],array('\\'nocache\\''));\n            } else {\n                $this->_retvalue = $this->compiler->compileTag($tag,array());\n            }\n        }\n    }\n    }\n// line 323 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r13(){\n    $j = strrpos($this->yystack[$this->yyidx + 0]->minor,'.');\n    if ($this->yystack[$this->yyidx + 0]->minor[$j+1] == 'c') {\n        // {$smarty.block.child}\n        $this->_retvalue = $this->compiler->compileTag('child',array(),array($this->yystack[$this->yyidx + 0]->minor));\n    } else {\n        // {$smarty.block.parent}\n       $this->_retvalue = $this->compiler->compileTag('parent',array(),array($this->yystack[$this->yyidx + 0]->minor));\n     }\n    }\n// line 334 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r14(){\n    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 338 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r15(){\n     $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor;\n     }\n// line 342 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r16(){\n    $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor[1],array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]));\n    }\n// line 351 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r17(){\n    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]),array('var'=>'\\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\\'')),$this->yystack[$this->yyidx + 0]->minor[1]));\n    }\n// line 355 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r18(){\n    $this->_retvalue = $this->compiler->compileTag('assign',array_merge(array(array('value'=>$this->yystack[$this->yyidx + 0]->minor[0]),array('var'=>$this->yystack[$this->yyidx + -1]->minor['var'])),$this->yystack[$this->yyidx + 0]->minor[1]),array('smarty_internal_index'=>$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']));\n    }\n// line 359 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r19(){\n       $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 363 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r20(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 378 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r24(){\n        if (defined($this->yystack[$this->yyidx + -1]->minor)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant($this->yystack[$this->yyidx + -1]->minor, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -1]->minor));\n        } else {\n            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);\n        }\n    }\n// line 388 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r25(){\n        if (defined($this->yystack[$this->yyidx + 0]->minor)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',array(),array('value'=>$this->yystack[$this->yyidx + 0]->minor));\n        } else {\n            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor,array());\n        }\n    }\n// line 401 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r26(){\n        if (defined($this->yystack[$this->yyidx + -2]->minor)) {\n            if ($this->security) {\n                $this->security->isTrustedConstant($this->yystack[$this->yyidx + -2]->minor, $this->compiler);\n            }\n            $this->_retvalue = $this->compiler->compileTag('private_print_expression',$this->yystack[$this->yyidx + 0]->minor,array('value'=>$this->yystack[$this->yyidx + -2]->minor, 'modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));\n        } else {\n            $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor,$this->yystack[$this->yyidx + 0]->minor, array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor));\n        }\n    }\n// line 413 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r27(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor,$this->yystack[$this->yyidx + 0]->minor,array('object_method'=>$this->yystack[$this->yyidx + -1]->minor));\n    }\n// line 418 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r28(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -4]->minor,$this->yystack[$this->yyidx + 0]->minor,array('modifierlist'=>$this->yystack[$this->yyidx + -1]->minor, 'object_method'=>$this->yystack[$this->yyidx + -2]->minor));\n    }\n// line 423 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r29(){\n    $this->_retvalue = $this->compiler->compileTag('make_nocache',array(array('var'=>'\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'')));\n    }\n// line 428 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r30(){\n    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->compiler->getLdelLength())); \n    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 433 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r31(){\n    $tag = trim(substr($this->yystack[$this->yyidx + -2]->minor,$this->compiler->getLdelLength()));\n    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,$this->yystack[$this->yyidx + 0]->minor,array('if condition'=>$this->yystack[$this->yyidx + -1]->minor));\n    }\n// line 438 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r32(){\n    $tag = trim(substr($this->yystack[$this->yyidx + -1]->minor,$this->compiler->getLdelLength()));\n    $this->_retvalue = $this->compiler->compileTag(($tag === 'else if')? 'elseif' : $tag,array(),array('if condition'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 449 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r34(){\n    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -6]->minor),array('ifexp'=>$this->yystack[$this->yyidx + -4]->minor),array('var'=>$this->yystack[$this->yyidx + -2]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),1);\n    }\n// line 453 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r35(){\n    $this->_retvalue = '='.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 461 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r37(){\n    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -3]->minor),array('to'=>$this->yystack[$this->yyidx + -1]->minor))),0);\n    }\n// line 465 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r38(){\n    $this->_retvalue = $this->compiler->compileTag('for',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('start'=>$this->yystack[$this->yyidx + -5]->minor),array('to'=>$this->yystack[$this->yyidx + -3]->minor),array('step'=>$this->yystack[$this->yyidx + -1]->minor))),0);\n    }\n// line 470 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r39(){\n    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -3]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor))));\n    }\n// line 474 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r40(){\n    $this->_retvalue = $this->compiler->compileTag('foreach',array_merge($this->yystack[$this->yyidx + 0]->minor,array(array('from'=>$this->yystack[$this->yyidx + -5]->minor),array('item'=>$this->yystack[$this->yyidx + -1]->minor),array('key'=>$this->yystack[$this->yyidx + -3]->minor))));\n    }\n// line 477 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r41(){\n    $this->_retvalue = $this->compiler->compileTag('foreach',$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 482 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r42(){\n    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array(array_merge(array($this->yystack[$this->yyidx + -1]->minor),$this->yystack[$this->yyidx + 0]->minor))));\n    }\n// line 486 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r43(){\n    $this->_retvalue = $this->compiler->compileTag('setfilter',array(),array('modifier_list'=>array_merge(array(array_merge(array($this->yystack[$this->yyidx + -2]->minor),$this->yystack[$this->yyidx + -1]->minor)),$this->yystack[$this->yyidx + 0]->minor)));\n    }\n// line 492 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r44(){\n    $tag = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' /');\n    if ($tag === 'strip') {\n        $this->strip = false;\n        $this->_retvalue = null;\n    } else {\n       $this->_retvalue = $this->compiler->compileTag($tag.'close',array());\n    }\n     }\n// line 501 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r45(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + 0]->minor.'close',array());\n    }\n// line 505 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r46(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -1]->minor.'close',array(),array('modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 510 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r47(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -2]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 514 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r48(){\n    $this->_retvalue = $this->compiler->compileTag($this->yystack[$this->yyidx + -3]->minor.'close',array(),array('object_method'=>$this->yystack[$this->yyidx + -1]->minor, 'modifier_list'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 522 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r49(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;\n    $this->_retvalue[] = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 528 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r50(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 533 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r51(){\n    $this->_retvalue = array();\n    }\n// line 538 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r52(){\n    if (defined($this->yystack[$this->yyidx + 0]->minor)) {\n        if ($this->security) {\n            $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);\n        }\n        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);\n    } else {\n        $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>'\\''.$this->yystack[$this->yyidx + 0]->minor.'\\'');\n    }\n    }\n// line 549 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r53(){\n    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor,\" =\\n\\r\\t\")=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 557 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r55(){\n    $this->_retvalue = '\\''.$this->yystack[$this->yyidx + 0]->minor.'\\'';\n    }\n// line 569 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r58(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 582 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r60(){\n    $this->yystack[$this->yyidx + -2]->minor[]=$this->yystack[$this->yyidx + 0]->minor;\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor;\n    }\n// line 587 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r61(){\n    $this->_retvalue = array('var' => '\\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'\\'', 'value'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 594 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r63(){\n    $this->_retvalue = array('var' => $this->yystack[$this->yyidx + -2]->minor, 'value'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 598 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r64(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 618 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r67(){\n    $this->_retvalue = '$_smarty_tpl->getStreamVariable(\\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'://' . $this->yystack[$this->yyidx + 0]->minor . '\\')';\n    }\n// line 623 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r68(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor . trim($this->yystack[$this->yyidx + -1]->minor) . $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 633 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r70(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor['pre']. $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor['op'].$this->yystack[$this->yyidx + 0]->minor .')';\n    }\n// line 637 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r71(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 641 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r72(){\n    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor . $this->yystack[$this->yyidx + -1]->minor . ')';\n    }\n// line 645 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r73(){\n    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor.')';\n    }\n// line 649 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r74(){\n    $this->_retvalue = 'in_array('.$this->yystack[$this->yyidx + -2]->minor.',(array)'.$this->yystack[$this->yyidx + 0]->minor.')';\n    }\n// line 657 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r75(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '. $this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + -2]->minor,1).'\\'') . ' : '.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 661 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r76(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -5]->minor.' ? '.$this->yystack[$this->yyidx + -2]->minor.' : '.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 671 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r78(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 676 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r79(){\n    $this->_retvalue = '!'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 697 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r84(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 701 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r85(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.';\n    }\n// line 705 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r86(){\n    $this->_retvalue = '.'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 710 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r87(){\n    if (defined($this->yystack[$this->yyidx + 0]->minor)) {\n        if ($this->security) {\n             $this->security->isTrustedConstant($this->yystack[$this->yyidx + 0]->minor, $this->compiler);\n        }\n        $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n    } else {\n        $this->_retvalue = '\\''.$this->yystack[$this->yyidx + 0]->minor.'\\'';\n    }\n    }\n// line 727 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r89(){\n    $this->_retvalue = '('. $this->yystack[$this->yyidx + -1]->minor .')';\n    }\n// line 731 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r90(){\n      $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 749 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r94(){\n\t    if ($this->security && $this->security->static_classes !== array()) {\n\t\t    $this->compiler->trigger_template_error('dynamic static class not allowed by security setting');\n\t    }\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    if ($this->yystack[$this->yyidx + -2]->minor['var'] === '\\'smarty\\'') {\n        $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \". $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index']).';?>');\n     } else {\n        $this->compiler->appendPrefixCode(\"<?php  {$prefixVar} = \". $this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor['var']).$this->yystack[$this->yyidx + -2]->minor['smarty_internal_index'].';?>');\n    }\n    $this->_retvalue = $prefixVar .'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];\n    }\n// line 760 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r95(){\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $tmp = $this->compiler->appendCode('<?php ob_start();?>', $this->yystack[$this->yyidx + 0]->minor);\n    $this->compiler->appendPrefixCode($this->compiler->appendCode($tmp, \"<?php {$prefixVar} = ob_get_clean();?>\"));\n    $this->_retvalue = $prefixVar;\n    }\n// line 767 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r96(){\n    $this->_retvalue = $this->compiler->compileTag('private_modifier',array(),array('value'=>$this->yystack[$this->yyidx + -1]->minor,'modifierlist'=>$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 780 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r99(){\n    if (!in_array(strtolower($this->yystack[$this->yyidx + -2]->minor), array('self', 'parent')) && (!$this->security || $this->security->isTrustedStaticClassAccess($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + 0]->minor, $this->compiler))) {\n        if (isset($this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor])) {\n            $this->_retvalue = $this->smarty->registered_classes[$this->yystack[$this->yyidx + -2]->minor].'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];\n        } else {\n            $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'::'.$this->yystack[$this->yyidx + 0]->minor[0].$this->yystack[$this->yyidx + 0]->minor[1];\n        } \n    } else {\n        $this->compiler->trigger_template_error ('static class \\''.$this->yystack[$this->yyidx + -2]->minor.'\\' is undefined or not allowed by security setting');\n    }\n    }\n// line 799 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r101(){\n    $this->_retvalue = $this->yystack[$this->yyidx + 0]->minor;\n        }\n// line 810 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r102(){\n   $this->_retvalue = $this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'');\n    }\n// line 813 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r103(){\n    if ($this->yystack[$this->yyidx + 0]->minor['var'] === '\\'smarty\\'') {\n        $smarty_var = $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index']);\n        $this->_retvalue = $smarty_var;\n    } else {\n        // used for array reset,next,prev,end,current \n        $this->last_variable = $this->yystack[$this->yyidx + 0]->minor['var'];\n        $this->last_index = $this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];\n        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor['var']).$this->yystack[$this->yyidx + 0]->minor['smarty_internal_index'];\n    }\n    }\n// line 826 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r104(){\n    $this->_retvalue = '$_smarty_tpl->tpl_vars['. $this->yystack[$this->yyidx + -2]->minor .']->'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 836 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r106(){\n    $this->_retvalue = $this->compiler->compileConfigVariable('\\'' . $this->yystack[$this->yyidx + -1]->minor . '\\'');\n    }\n// line 840 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r107(){\n    $this->_retvalue = '(is_array($tmp = ' . $this->compiler->compileConfigVariable('\\'' . $this->yystack[$this->yyidx + -2]->minor . '\\'') . ') ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' :null)';\n    }\n// line 844 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r108(){\n    $this->_retvalue = $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -1]->minor);\n    }\n// line 848 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r109(){\n    $this->_retvalue = '(is_array($tmp = ' . $this->compiler->compileConfigVariable($this->yystack[$this->yyidx + -2]->minor) . ') ? $tmp'.$this->yystack[$this->yyidx + 0]->minor.' : null)';\n    }\n// line 852 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r110(){\n    $this->_retvalue = array('var'=>'\\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\\'', 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 855 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r111(){\n    $this->_retvalue = array('var'=>$this->yystack[$this->yyidx + -1]->minor, 'smarty_internal_index'=>$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 868 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r113(){\n    return;\n    }\n// line 874 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r114(){\n    $this->_retvalue = '['.$this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'').']';\n    }\n// line 877 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r115(){\n    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + 0]->minor).']';\n    }\n// line 881 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r116(){\n    $this->_retvalue = '['.$this->compiler->compileVariable($this->yystack[$this->yyidx + -2]->minor).'->'.$this->yystack[$this->yyidx + 0]->minor.']';\n    }\n// line 885 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r117(){\n    $this->_retvalue = '[\\''. $this->yystack[$this->yyidx + 0]->minor .'\\']';\n    }\n// line 889 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r118(){\n    $this->_retvalue = '['. $this->yystack[$this->yyidx + 0]->minor .']';\n    }\n// line 894 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r119(){\n    $this->_retvalue = '['. $this->yystack[$this->yyidx + -1]->minor .']';\n    }\n// line 899 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r120(){\n    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.$this->yystack[$this->yyidx + -1]->minor.'\\'][\\'index\\']').']';\n    }\n// line 903 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r121(){\n    $this->_retvalue = '['.$this->compiler->compileTag('private_special_variable',array(),'[\\'section\\'][\\''.$this->yystack[$this->yyidx + -3]->minor.'\\'][\\''.$this->yystack[$this->yyidx + -1]->minor.'\\']').']';\n    }\n// line 906 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r122(){\n    $this->_retvalue = '['.$this->yystack[$this->yyidx + -1]->minor.']';\n    }\n// line 912 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r124(){\n    $this->_retvalue = '['.$this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + -1]->minor,1).'\\'').']';\n    }\n// line 928 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r128(){\n    $this->_retvalue = '[]';\n    }\n// line 938 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r129(){\n    $this->_retvalue = '\\''.substr($this->yystack[$this->yyidx + 0]->minor,1).'\\'';\n    }\n// line 942 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r130(){\n    $this->_retvalue = '\\'\\'';\n    }\n// line 947 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r131(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor.'.'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 955 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r133(){\n    $var = trim(substr($this->yystack[$this->yyidx + 0]->minor, $this->compiler->getLdelLength(), -$this->compiler->getRdelLength()), ' $');\n    $this->_retvalue = $this->compiler->compileVariable('\\''.$var.'\\'');\n    }\n// line 961 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r134(){\n    $this->_retvalue = '('.$this->yystack[$this->yyidx + -1]->minor.')';\n    }\n// line 968 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r135(){\n    if ($this->yystack[$this->yyidx + -1]->minor['var'] === '\\'smarty\\'') {\n        $this->_retvalue =  $this->compiler->compileTag('private_special_variable',array(),$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index']).$this->yystack[$this->yyidx + 0]->minor;\n    } else {\n        $this->_retvalue = $this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor['var']).$this->yystack[$this->yyidx + -1]->minor['smarty_internal_index'].$this->yystack[$this->yyidx + 0]->minor;\n    }\n    }\n// line 977 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r136(){\n    $this->_retvalue  = $this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 982 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r137(){\n    $this->_retvalue  = $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 987 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r138(){\n    if ($this->security && substr($this->yystack[$this->yyidx + -1]->minor,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    $this->_retvalue = '->'.$this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 994 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r139(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $this->_retvalue = '->{'.$this->compiler->compileVariable($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor.'}';\n    }\n// line 1001 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r140(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $this->_retvalue = '->{'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';\n    }\n// line 1008 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r141(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $this->_retvalue = '->{\\''.$this->yystack[$this->yyidx + -4]->minor.'\\'.'.$this->yystack[$this->yyidx + -2]->minor.$this->yystack[$this->yyidx + 0]->minor.'}';\n    }\n// line 1016 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r142(){\n    $this->_retvalue = '->'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1024 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r143(){\n    $this->_retvalue = $this->compiler->compilePHPFunctionCall($this->yystack[$this->yyidx + -3]->minor, $this->yystack[$this->yyidx + -1]->minor);\n    }\n// line 1032 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r144(){\n    if ($this->security && substr($this->yystack[$this->yyidx + -3]->minor,0,1) === '_') {\n        $this->compiler->trigger_template_error (self::ERR1);\n    }\n    $this->_retvalue = $this->yystack[$this->yyidx + -3]->minor . '('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';\n    }\n// line 1039 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r145(){\n    if ($this->security) {\n        $this->compiler->trigger_template_error (self::ERR2);\n    }\n    $prefixVar = $this->compiler->getNewPrefixVariable();\n    $this->compiler->appendPrefixCode(\"<?php {$prefixVar} = \".$this->compiler->compileVariable('\\''.substr($this->yystack[$this->yyidx + -3]->minor,1).'\\'').';?>');\n    $this->_retvalue = $prefixVar .'('. implode(',',$this->yystack[$this->yyidx + -1]->minor) .')';\n    }\n// line 1050 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r146(){\n    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array($this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 1067 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r149(){\n    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -2]->minor,array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor)));\n    }\n// line 1071 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r150(){\n    $this->_retvalue = array(array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor));\n    }\n// line 1079 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r152(){\n    $this->_retvalue =  array($this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1087 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r153(){\n    $this->_retvalue = array_merge($this->yystack[$this->yyidx + -1]->minor,$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1100 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r156(){\n    $this->_retvalue = array(trim($this->yystack[$this->yyidx + -1]->minor).$this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1109 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r158(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '', 'method');\n    }\n// line 1114 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r159(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'method');\n    }\n// line 1119 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r160(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + 0]->minor, '');\n    }\n// line 1124 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r161(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -1]->minor, $this->yystack[$this->yyidx + 0]->minor, 'property');\n    }\n// line 1129 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r162(){\n    $this->_retvalue = array($this->yystack[$this->yyidx + -2]->minor, $this->yystack[$this->yyidx + -1]->minor.$this->yystack[$this->yyidx + 0]->minor, 'property');\n    }\n// line 1135 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r163(){\n    $this->_retvalue = ' '. trim($this->yystack[$this->yyidx + 0]->minor) . ' ';\n    }\n// line 1139 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r164(){\n    static $lops = array(\n        'eq' => ' == ',\n        'ne' => ' != ',\n        'neq' => ' != ',\n        'gt' => ' > ',\n        'ge' => ' >= ',\n        'gte' => ' >= ',\n        'lt' =>  ' < ',\n        'le' =>  ' <= ',\n        'lte' => ' <= ',\n        'mod' =>  ' % ',\n        'and' => ' && ',\n        'or' => ' || ',\n        'xor' => ' xor ',\n         );\n    $op = strtolower(preg_replace('/\\s*/', '', $this->yystack[$this->yyidx + 0]->minor));\n    $this->_retvalue = $lops[$op];\n    }\n// line 1158 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r165(){\n     static $tlops = array(\n         'isdivby' => array('op' => ' % ', 'pre' => '!('),\n         'isnotdivby' => array('op' => ' % ', 'pre' => '('),\n         'isevenby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         'isnotevenby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isoddby' => array('op' => ' / ', 'pre' => '(1 & '),\n         'isnotoddby' => array('op' => ' / ', 'pre' => '!(1 & '),\n         );\n     $op = strtolower(preg_replace('/\\s*/', '', $this->yystack[$this->yyidx + 0]->minor));\n     $this->_retvalue = $tlops[$op];\n     }\n// line 1171 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r166(){\n        static $scond = array (\n            'iseven' => '!(1 & ',\n            'isnoteven' => '(1 & ',\n            'isodd' => '(1 & ',\n            'isnotodd' => '!(1 & ',\n        );\n   $op = strtolower(str_replace(' ', '', $this->yystack[$this->yyidx + 0]->minor));\n   $this->_retvalue = $scond[$op];\n    }\n// line 1185 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r167(){\n    $this->_retvalue = 'array('.$this->yystack[$this->yyidx + -1]->minor.')';\n    }\n// line 1196 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r170(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.','.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1204 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r172(){\n    $this->_retvalue = $this->yystack[$this->yyidx + -2]->minor.'=>'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1208 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r173(){ \n    $this->_retvalue = '\\''.$this->yystack[$this->yyidx + -2]->minor.'\\'=>'.$this->yystack[$this->yyidx + 0]->minor;\n    }\n// line 1224 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r176(){\n    $this->compiler->leaveDoubleQuote();\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor->to_smarty_php($this);\n    }\n// line 1230 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r177(){\n    $this->yystack[$this->yyidx + -1]->minor->append_subtree($this, $this->yystack[$this->yyidx + 0]->minor);\n    $this->_retvalue = $this->yystack[$this->yyidx + -1]->minor;\n    }\n// line 1235 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r178(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Dq($this, $this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1239 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r179(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)'.$this->yystack[$this->yyidx + -1]->minor);\n    }\n// line 1243 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r180(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)('.$this->yystack[$this->yyidx + -1]->minor.')');\n    }\n// line 1247 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r181(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Code('(string)$_smarty_tpl->tpl_vars[\\''. substr($this->yystack[$this->yyidx + 0]->minor,1) .'\\']->value');\n    }\n// line 1259 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r184(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_Tag($this, $this->yystack[$this->yyidx + 0]->minor);\n    }\n// line 1263 \"../smarty/lexer/smarty_internal_templateparser.y\"\n    public function yy_r185(){\n    $this->_retvalue = new Smarty_Internal_ParseTree_DqContent($this->yystack[$this->yyidx + 0]->minor);\n    }\n\n    private $_retvalue;\n\n    public function yy_reduce($yyruleno)\n    {\n        if ($this->yyTraceFILE && $yyruleno >= 0\n              && $yyruleno < count(self::$yyRuleName)) {\n            fprintf($this->yyTraceFILE, \"%sReduce (%d) [%s].\\n\",\n                $this->yyTracePrompt, $yyruleno,\n                self::$yyRuleName[$yyruleno]);\n        }\n\n        $this->_retvalue = $yy_lefthand_side = null;\n        if (isset(self::$yyReduceMap[$yyruleno])) {\n            // call the action\n            $this->_retvalue = null;\n            $this->{'yy_r' . self::$yyReduceMap[$yyruleno]}();\n            $yy_lefthand_side = $this->_retvalue;\n        }\n        $yygoto = self::$yyRuleInfo[$yyruleno][0];\n        $yysize = self::$yyRuleInfo[$yyruleno][1];\n        $this->yyidx -= $yysize;\n        for ($i = $yysize; $i; $i--) {\n            // pop all of the right-hand side parameters\n            array_pop($this->yystack);\n        }\n        $yyact = $this->yy_find_reduce_action($this->yystack[$this->yyidx]->stateno, $yygoto);\n        if ($yyact < self::YYNSTATE) {\n            if (!$this->yyTraceFILE && $yysize) {\n                $this->yyidx++;\n                $x = new TP_yyStackEntry;\n                $x->stateno = $yyact;\n                $x->major = $yygoto;\n                $x->minor = $yy_lefthand_side;\n                $this->yystack[$this->yyidx] = $x;\n            } else {\n                $this->yy_shift($yyact, $yygoto, $yy_lefthand_side);\n            }\n        } elseif ($yyact === self::YYNSTATE + self::YYNRULE + 1) {\n            $this->yy_accept();\n        }\n    }\n\n    public function yy_parse_failed()\n    {\n        if ($this->yyTraceFILE) {\n            fprintf($this->yyTraceFILE, \"%sFail!\\n\", $this->yyTracePrompt);\n        } while ($this->yyidx >= 0) {\n            $this->yy_pop_parser_stack();\n        }\n    }\n\n    public function yy_syntax_error($yymajor, $TOKEN)\n    {\n// line 213 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    $this->internalError = true;\n    $this->yymajor = $yymajor;\n    $this->compiler->trigger_template_error();\n    }\n\n    public function yy_accept()\n    {\n        if ($this->yyTraceFILE) {\n            fprintf($this->yyTraceFILE, \"%sAccept!\\n\", $this->yyTracePrompt);\n        } while ($this->yyidx >= 0) {\n            $this->yy_pop_parser_stack();\n        }\n// line 206 \"../smarty/lexer/smarty_internal_templateparser.y\"\n\n    $this->successful = !$this->internalError;\n    $this->internalError = false;\n    $this->retvalue = $this->_retvalue;\n    }\n\n    public function doParse($yymajor, $yytokenvalue)\n    {\n        $yyerrorhit = 0;   /* True if yymajor has invoked an error */\n\n        if ($this->yyidx === null || $this->yyidx < 0) {\n            $this->yyidx = 0;\n            $this->yyerrcnt = -1;\n            $x = new TP_yyStackEntry;\n            $x->stateno = 0;\n            $x->major = 0;\n            $this->yystack = array();\n            $this->yystack[] = $x;\n        }\n        $yyendofinput = ($yymajor==0);\n\n        if ($this->yyTraceFILE) {\n            fprintf($this->yyTraceFILE, \"%sInput %s\\n\",\n                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);\n        }\n\n        do {\n            $yyact = $this->yy_find_shift_action($yymajor);\n            if ($yymajor < self::YYERRORSYMBOL &&\n                  !$this->yy_is_expected_token($yymajor)) {\n                // force a syntax error\n                $yyact = self::YY_ERROR_ACTION;\n            }\n            if ($yyact < self::YYNSTATE) {\n                $this->yy_shift($yyact, $yymajor, $yytokenvalue);\n                $this->yyerrcnt--;\n                if ($yyendofinput && $this->yyidx >= 0) {\n                    $yymajor = 0;\n                } else {\n                    $yymajor = self::YYNOCODE;\n                }\n            } elseif ($yyact < self::YYNSTATE + self::YYNRULE) {\n                $this->yy_reduce($yyact - self::YYNSTATE);\n            } elseif ($yyact === self::YY_ERROR_ACTION) {\n                if ($this->yyTraceFILE) {\n                    fprintf($this->yyTraceFILE, \"%sSyntax Error!\\n\",\n                        $this->yyTracePrompt);\n                }\n                if (self::YYERRORSYMBOL) {\n                    if ($this->yyerrcnt < 0) {\n                        $this->yy_syntax_error($yymajor, $yytokenvalue);\n                    }\n                    $yymx = $this->yystack[$this->yyidx]->major;\n                    if ($yymx === self::YYERRORSYMBOL || $yyerrorhit) {\n                        if ($this->yyTraceFILE) {\n                            fprintf($this->yyTraceFILE, \"%sDiscard input token %s\\n\",\n                                $this->yyTracePrompt, $this->yyTokenName[$yymajor]);\n                        }\n                        $this->yy_destructor($yymajor, $yytokenvalue);\n                        $yymajor = self::YYNOCODE;\n                    } else {\n                        while ($this->yyidx >= 0 &&\n                                 $yymx !== self::YYERRORSYMBOL &&\n        ($yyact = $this->yy_find_shift_action(self::YYERRORSYMBOL)) >= self::YYNSTATE\n                              ){\n                            $this->yy_pop_parser_stack();\n                        }\n                        if ($this->yyidx < 0 || $yymajor==0) {\n                            $this->yy_destructor($yymajor, $yytokenvalue);\n                            $this->yy_parse_failed();\n                            $yymajor = self::YYNOCODE;\n                        } elseif ($yymx !== self::YYERRORSYMBOL) {\n                            $u2 = 0;\n                            $this->yy_shift($yyact, self::YYERRORSYMBOL, $u2);\n                        }\n                    }\n                    $this->yyerrcnt = 3;\n                    $yyerrorhit = 1;\n                } else {\n                    if ($this->yyerrcnt <= 0) {\n                        $this->yy_syntax_error($yymajor, $yytokenvalue);\n                    }\n                    $this->yyerrcnt = 3;\n                    $this->yy_destructor($yymajor, $yytokenvalue);\n                    if ($yyendofinput) {\n                        $this->yy_parse_failed();\n                    }\n                    $yymajor = self::YYNOCODE;\n                }\n            } else {\n                $this->yy_accept();\n                $yymajor = self::YYNOCODE;\n            }\n        } while ($yymajor !== self::YYNOCODE && $this->yyidx >= 0);\n    }\n}\n\n", "<?php\n/**\n * Smarty PHPunit tests for security\n *\n * @package PHPunit\n * @author  Uwe Tews\n */\n\n/**\n * class for security test\n *\n * @runTestsInSeparateProcess\n * @preserveGlobalState disabled\n * @backupStaticAttributes enabled\n */\nclass SecurityTest extends PHPUnit_Smarty\n{\n    public function setUp(): void\n    {\n        $this->setUpSmarty(dirname(__FILE__));\n\n        $this->smarty->setForceCompile(true);\n        $this->smarty->enableSecurity();\n   }\n   public function testInit()\n    {\n        $this->cleanDirs();\n    }\n\n/**\n * test that security is loaded\n' *'/\n    public function testSecurityReenable()\n    {\n        $this->smarty->disableSecurity();\n        $this->smarty->enableSecurity('Security');\n        $this->smarty->fetch('helloworld.tpl');\n        $this->smarty->disableSecurity();\n        $this->smarty->enableSecurity('Security');\n        $this->smarty->fetch('helloworld.tpl');\n    }\n/**\n* test that security is loaded\n */\n    public function testSecurityLoaded()\n    {\n        $this->assertTrue(is_object($this->smarty->security_policy));\n    }\n\n/**\n * test trusted PHP function\n */\n    public function testTrustedPHPFunction()\n    {\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{count($foo)}'));\n    }\n\n/**\n * test not trusted PHP function\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testNotTrustedPHPFunction()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('PHP function \\'count\\' not allowed by security setting');\n        $this->smarty->security_policy->php_functions = array('null');\n        $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{count($foo)}');\n    }\n\n/**\n * test not trusted PHP function at disabled security\n */\n    public function testDisabledTrustedPHPFunction()\n    {\n        $this->smarty->security_policy->php_functions = array('null');\n        $this->smarty->disableSecurity();\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{count($foo)}'));\n    }\n\n/**\n * test trusted modifier\n */\n    public function testTrustedModifier()\n    {\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{$foo|@count}'));\n    }\n\n/**\n * test not trusted modifier\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n */\n    public function testNotTrustedModifier()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('modifier \\'count\\' not allowed by security setting');\n        $this->smarty->security_policy->php_modifiers = array('null');\n        $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{$foo|@count}');\n    }\n\n/**\n * test not trusted modifier at disabled security\n */\n    public function testDisabledTrustedModifier()\n    {\n        $this->smarty->security_policy->php_modifiers = array('null');\n        $this->smarty->disableSecurity();\n        $this->assertEquals(\"5\", $this->smarty->fetch('string:{assign var=foo value=[1,2,3,4,5]}{$foo|@count}'));\n    }\n\n/**\n * test allowed tags\n */\n    public function testAllowedTags1()\n    {\n        $this->smarty->security_policy->allowed_tags = array('counter');\n        $this->assertEquals(\"1\", $this->smarty->fetch('string:{counter start=1}'));\n    }\n\n/**\n * test not allowed tag\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n */\n    public function testNotAllowedTags2()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('tag \\'cycle\\' not allowed by security setting');\n        $this->smarty->security_policy->allowed_tags = array('counter');\n        $this->smarty->fetch('string:{counter}{cycle values=\"1,2\"}');\n    }\n\n/**\n * test disabled tag\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n */\n    public function testDisabledTags()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('tag \\'cycle\\' disabled by security setting');\n        $this->smarty->security_policy->disabled_tags = array('cycle');\n        $this->smarty->fetch('string:{counter}{cycle values=\"1,2\"}');\n    }\n\n/**\n * test allowed modifier\n */\n    public function testAllowedModifier1()\n    {\n        error_reporting(E_ALL  & E_STRICT);\n        $this->smarty->security_policy->allowed_modifiers = array('capitalize');\n        $this->assertEquals(\"Hello World\", $this->smarty->fetch('string:{\"hello world\"|capitalize}'));\n        error_reporting(E_ALL | E_STRICT);\n    }\n\n    public function testAllowedModifier2()\n    {\n        $this->smarty->security_policy->allowed_modifiers = array('upper');\n        $this->assertEquals(\"HELLO WORLD\", $this->smarty->fetch('string:{\"hello world\"|upper}'));\n    }\n\n/**\n * test not allowed modifier\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testNotAllowedModifier()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('modifier \\'lower\\' not allowed by security setting');\n        $this->smarty->security_policy->allowed_modifiers = array('upper');\n        $this->smarty->fetch('string:{\"hello\"|upper}{\"world\"|lower}');\n    }\n\n/**\n * test disabled modifier\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testDisabledModifier()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('modifier \\'lower\\' disabled by security setting');\n        $this->smarty->security_policy->disabled_modifiers = array('lower');\n        $this->smarty->fetch('string:{\"hello\"|upper}{\"world\"|lower}');\n    }\n\n\n/**\n * test Smarty no longer handles embedded PHP\n */\n    public function testSmartyPhpAllow()\n    {\n        $this->assertEquals('<?php echo \"hello world\"; ?>', $this->smarty->fetch('string:<?php echo \"hello world\"; ?>'));\n    }\n\n    public function testSmartyPhpAllow2()\n    {\n        $this->assertEquals('<? echo \"hello world\"; ?>', $this->smarty->fetch('string:<? echo \"hello world\"; ?>'));\n    }\n\n    public function testSmartyPhpAllow3()\n    {\n        $this->assertEquals('<% echo \"hello world\"; %>', $this->smarty->fetch('string:<% echo \"hello world\"; %>'));\n    }\n\n/**\n * test standard directory\n */\n    public function testStandardDirectory()\n    {\n        $content = $this->smarty->fetch('string:{include file=\"helloworld.tpl\"}');\n        $this->assertEquals(\"hello world\", $content);\n    }\n\n/**\n * test trusted directory\n */\n    public function testTrustedDirectory()\n    {\n        $this->smarty->security_policy->secure_dir = array('.' . DIRECTORY_SEPARATOR . 'templates_2' . DIRECTORY_SEPARATOR);\n        $this->assertEquals(\"hello world\", $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}'));\n    }\n\n/**\n * test not trusted directory\n  *\n  * @runInSeparateProcess\n  * @preserveGlobalState disabled\n  */\n    public function testNotTrustedDirectory()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('not trusted file path');\n        $this->smarty->security_policy->secure_dir = array(str_replace('\\\\', '/', dirname(__FILE__) . '/templates_3/'));\n        $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}');\n     }\n\n/**\n * test disabled security for not trusted dir\n */\n    public function testDisabledTrustedDirectory()\n    {\n        $this->smarty->disableSecurity();\n        $this->assertEquals(\"hello world\", $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}'));\n    }\n\n/**\n * test trusted static class\n */\n    public function testTrustedStaticClass()\n    {\n        $this->smarty->security_policy->static_classes = array('mysecuritystaticclass');\n        $tpl = $this->smarty->createTemplate('string:{mysecuritystaticclass::square(5)}');\n        $this->assertEquals('25', $this->smarty->fetch($tpl));\n    }\n\n\t/**\n\t * test not trusted PHP function\n\t * @runInSeparateProcess\n\t * @preserveGlobalState disabled\n\t */\n\tpublic function testNotTrustedStaticClass()\n\t{\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('access to static class \\'mysecuritystaticclass\\' not allowed by security setting');\n        $this->smarty->security_policy->static_classes = array('null');\n        $this->smarty->fetch('string:{mysecuritystaticclass::square(5)}');\n    }\n\n\t/**\n\t * test not trusted PHP function\n\t */\n\tpublic function testNotTrustedStaticClassEval()\n\t{\n\t\t$this->expectException('SmartyException');\n\t\t$this->expectExceptionMessage('dynamic static class not allowed by security setting');\n\t\t$this->smarty->security_policy->static_classes = array('null');\n\t\t$this->smarty->fetch('string:{$test = \"mysecuritystaticclass\"}{$test::square(5)}');\n\t}\n\n\t/**\n\t * test not trusted PHP function\n\t */\n\tpublic function testNotTrustedStaticClassSmartyVar()\n\t{\n\t\t$this->expectException('SmartyException');\n\t\t$this->expectExceptionMessage('dynamic static class not allowed by security setting');\n\t\t$this->smarty->security_policy->static_classes = array('null');\n\t\t$this->smarty->fetch('string:{$smarty.template_object::square(5)}');\n\t}\n\n    public function testChangedTrustedDirectory()\n    {\n        $this->smarty->security_policy->secure_dir = array(\n            '.' . DIRECTORY_SEPARATOR . 'templates_2' . DIRECTORY_SEPARATOR,\n        );\n        $this->assertEquals(\"hello world\", $this->smarty->fetch('string:{include file=\"templates_2/hello.tpl\"}'));\n\n        $this->smarty->security_policy->secure_dir = array(\n            '.' . DIRECTORY_SEPARATOR . 'templates_2' . DIRECTORY_SEPARATOR,\n            '.' . DIRECTORY_SEPARATOR . 'templates_3' . DIRECTORY_SEPARATOR,\n        );\n        $this->assertEquals(\"templates_3\", $this->smarty->fetch('string:{include file=\"templates_3/dirname.tpl\"}'));\n    }\n/**\n * test template file exits\n *\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n */\n    public function testTemplateTrustedStream()\n    {\n         stream_wrapper_register(\"global\", \"ResourceStreamSecurity\")\n        or die(\"Failed to register protocol\");\n        $fp = fopen(\"global://mytest\", \"r+\");\n        fwrite($fp, 'hello world {$foo}');\n        fclose($fp);\n        $this->smarty->security_policy->streams= array('global');\n        $tpl = $this->smarty->createTemplate('global:mytest');\n        $this->assertTrue($tpl->source->exists);\n    }\n/**\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n * test template file exits\n */\n    public function testTemplateNotTrustedStream()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('stream \\'global\\' not allowed by security setting');\n        stream_wrapper_register(\"global\", \"ResourceStreamSecurity\")\n        or die(\"Failed to register protocol\");\n        $fp = fopen(\"global://mytest\", \"r+\");\n        fwrite($fp, 'hello world {$foo}');\n        fclose($fp);\n        $this->smarty->security_policy->streams= array('notrusted');\n        $tpl = $this->smarty->createTemplate('global:mytest');\n        $this->assertTrue($tpl->source->exists);\n    }\n/**\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n*/\n    public function testTrustedUri()\n    {\n        $this->smarty->security_policy->trusted_uri = array(\n            '#https://www.smarty.net$#i'\n        );\n        $this->assertStringContainsString('<title>Preface | Smarty</title>', $this->smarty->fetch('string:{fetch file=\"https://www.smarty.net/docs/en/preface.tpl\"}'));\n    }\n\n/**\n * @runInSeparateProcess\n * @preserveGlobalState disabled\n*/\n    public function testNotTrustedUri()\n    {\n        $this->expectException('SmartyException');\n        $this->expectExceptionMessage('URI \\'https://www.smarty.net/docs/en/preface.tpl\\' not allowed by security setting');\n        $this->smarty->security_policy->trusted_uri = array();\n        $this->assertStringContainsString('<title>Preface | Smarty</title>', $this->smarty->fetch('string:{fetch file=\"https://www.smarty.net/docs/en/preface.tpl\"}'));\n    }\n\n    /**\n     * In security mode, accessing $smarty.template_object should be illegal.\n     * @expectedException SmartyCompilerException\n     */\n    public function testSmartyTemplateObject() {\n        $this->smarty->display('string:{$smarty.template_object}');\n    }\n\n}\n\nclass mysecuritystaticclass\n{\n    const STATIC_CONSTANT_VALUE = 3;\n    static $static_var = 5;\n\n    static function square($i)\n    {\n        return $i * $i;\n    }\n}\nclass Security extends Smarty_Security\n{\n\n}\nclass ResourceStreamSecurity\n{\n    private $position;\n    private $varname;\n\n    public function stream_open($path, $mode, $options, &$opened_path)\n    {\n        $url = parse_url($path);\n        $this->varname = $url[\"host\"];\n        $this->position = 0;\n\n        return true;\n    }\n\n    public function stream_read($count)\n    {\n        $p = &$this->position;\n        $ret = substr($GLOBALS[$this->varname], $p, $count);\n        $p += strlen($ret);\n\n        return $ret;\n    }\n\n    public function stream_write($data)\n    {\n        $v = &$GLOBALS[$this->varname];\n        $l = strlen($data);\n        $p = &$this->position;\n        $v = substr($v, 0, $p) . $data . substr($v, $p += $l);\n\n        return $l;\n    }\n\n    public function stream_tell()\n    {\n        return $this->position;\n    }\n\n    public function stream_eof()\n    {\n        if (!isset($GLOBALS[$this->varname])) {\n            return true;\n        }\n\n        return $this->position >= strlen($GLOBALS[$this->varname]);\n    }\n\n    public function stream_seek($offset, $whence)\n    {\n        $l = strlen($GLOBALS[$this->varname]);\n        $p = &$this->position;\n        switch ($whence) {\n            case SEEK_SET:\n                $newPos = $offset;\n                break;\n            case SEEK_CUR:\n                $newPos = $p + $offset;\n                break;\n            case SEEK_END:\n                $newPos = $l + $offset;\n                break;\n            default:\n                return false;\n        }\n        $ret = ($newPos >= 0 && $newPos <= $l);\n        if ($ret) {\n            $p = $newPos;\n        }\n        return $ret;\n    }\n}\n"], "filenames": ["CHANGELOG.md", "lexer/smarty_internal_templateparser.y", "libs/sysplugins/smarty_internal_templateparser.php", "tests/UnitTests/SecurityTests/SecurityTest.php"], "buggy_code_start_loc": [7, 749, 2399, 260], "buggy_code_end_loc": [7, 749, 2399, 271], "fixing_code_start_loc": [8, 750, 2400, 260], "fixing_code_end_loc": [11, 753, 2403, 294], "type": "CWE-20", "message": "Smarty is a template engine for PHP, facilitating the separation of presentation (HTML/CSS) from application logic. Prior to versions 3.1.43 and 4.0.3, template authors could run restricted static php methods. Users should upgrade to version 3.1.43 or 4.0.3 to receive a patch.", "other": {"cve": {"id": "CVE-2021-21408", "sourceIdentifier": "security-advisories@github.com", "published": "2022-01-10T20:15:07.913", "lastModified": "2022-12-08T22:22:26.837", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Smarty is a template engine for PHP, facilitating the separation of presentation (HTML/CSS) from application logic. Prior to versions 3.1.43 and 4.0.3, template authors could run restricted static php methods. Users should upgrade to version 3.1.43 or 4.0.3 to receive a patch."}, {"lang": "es", "value": "Smarty es un motor de plantillas para PHP que facilita la separaci\u00f3n de la presentaci\u00f3n (HTML/CSS) de la l\u00f3gica de la aplicaci\u00f3n. Antes de las versiones 3.1.43 y 4.0.3, los autores de plantillas pod\u00edan ejecutar m\u00e9todos est\u00e1ticos restringidos de php. Los usuarios deben actualizar a la versi\u00f3n 3.1.43 o 4.0.3 para recibir el parche"}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV2": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "2.0", "vectorString": "AV:N/AC:L/Au:S/C:P/I:P/A:P", "accessVector": "NETWORK", "accessComplexity": "LOW", "authentication": "SINGLE", "confidentialityImpact": "PARTIAL", "integrityImpact": "PARTIAL", "availabilityImpact": "PARTIAL", "baseScore": 6.5}, "baseSeverity": "MEDIUM", "exploitabilityScore": 8.0, "impactScore": 6.4, "acInsufInfo": false, "obtainAllPrivilege": false, "obtainUserPrivilege": false, "obtainOtherPrivilege": false, "userInteractionRequired": false}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-20"}]}, {"source": "nvd@nist.gov", "type": "Secondary", "description": [{"lang": "en", "value": "CWE-20"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:smarty:smarty:*:*:*:*:*:*:*:*", "versionEndExcluding": "3.1.43", "matchCriteriaId": "BB541921-C8E7-479B-9CA1-9C3F136C412A"}, {"vulnerable": true, "criteria": "cpe:2.3:a:smarty:smarty:*:*:*:*:*:*:*:*", "versionStartIncluding": "4.0.0", "versionEndExcluding": "4.0.3", "matchCriteriaId": "8AB12C55-A7CF-495E-B2F8-761BF5912943"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:9.0:*:*:*:*:*:*:*", "matchCriteriaId": "DEECE5FC-CACF-4496-A3E7-164736409252"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}, {"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:11.0:*:*:*:*:*:*:*", "matchCriteriaId": "FA6FEEC2-9F11-4643-8827-749718254FED"}]}]}, {"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:36:*:*:*:*:*:*:*", "matchCriteriaId": "5C675112-476C-4D7C-BCB9-A2FB2D0BC9FD"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*", "matchCriteriaId": "E30D0E6F-4AE8-4284-8716-991DFA48CC5D"}]}]}], "references": [{"url": "https://github.com/smarty-php/smarty/commit/19ae410bf56007a5ef24441cdc6414619cfaf664", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/smarty-php/smarty/releases/tag/v3.1.43", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/smarty-php/smarty/releases/tag/v4.0.3", "source": "security-advisories@github.com", "tags": ["Release Notes", "Third Party Advisory"]}, {"url": "https://github.com/smarty-php/smarty/security/advisories/GHSA-4h9c-v5vg-5m6m", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2022/05/msg00005.html", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/BRAJVDRGCIY5UZ2PQHKDTT7RMKG6WJQQ/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/L777JIBIWJV34HS7LXPIDWASG7TT4LNI/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://security.gentoo.org/glsa/202209-09", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.debian.org/security/2022/dsa-5151", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/smarty-php/smarty/commit/19ae410bf56007a5ef24441cdc6414619cfaf664"}}