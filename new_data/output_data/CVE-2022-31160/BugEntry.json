{"buggy_code": ["<!doctype html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<title>jQuery UI Checkboxradio Test Suite</title>\n\n\t<script src=\"../../../external/requirejs/require.js\"></script>\n\t<script src=\"../../lib/css.js\" data-modules=\"core button checkboxradio\"></script>\n\t<script src=\"../../lib/bootstrap.js\" data-widget=\"button\"></script>\n</head>\n<body>\n\n<div id=\"qunit\"></div>\n<div id=\"qunit-fixture\">\n\n<div id=\"radio0\">\n\t<input type=\"radio\" id=\"radio01\" name=\"radio\" checked=\"checked\"><label for=\"radio01\">Choice 1</label>\n\t<input type=\"radio\" id=\"radio02\" name=\"radio\"><label for=\"radio02\">Choice 2</label>\n\t<input type=\"radio\" id=\"radio03\" name=\"radio\"><label for=\"radio03\">Choice 3</label>\n</div>\n<form id=\"form1\">\n\t<div id=\"radio1\">\n\t\t<input type=\"radio\" id=\"radio11\" name=\"radio\"><label for=\"radio11\">Choice 1</label>\n\t\t<input type=\"radio\" id=\"radio12\" name=\"radio\"><label for=\"radio12\">Choice 2</label>\n\t\t<input type=\"radio\" id=\"radio13\" name=\"radio\" checked=\"checked\"><label for=\"radio13\">Choice 3</label>\n\t</div>\n</form>\n<form id=\"form2\">\n\t<div id=\"radio2\">\n\t\t<input type=\"radio\" id=\"radio21\" name=\"radio\"><label for=\"radio21\">Choice 1</label>\n\t\t<input type=\"radio\" id=\"radio22\" name=\"radio\"><label for=\"radio22\">Choice 2</label>\n\t\t<input type=\"radio\" id=\"radio23\" name=\"radio\" checked=\"checked\"><label for=\"radio23\">Choice 3</label>\n\t</div>\n</form>\n<form>\n\t<div id=\"radio3\">\n\t\t<input type=\"radio\" id=\"radio31\" name=\"data['Page']['parse']\"><label for=\"radio31\">Choice 1</label>\n\t\t<input type=\"radio\" id=\"radio32\" name=\"data['Page']['parse']\" checked=\"checked\"><label for=\"radio32\">Choice 2</label>\n\t\t<input type=\"radio\" id=\"radio33\" name=\"data['Page']['parse']\"><label for=\"radio33\">Choice 3</label>\n\t</div>\n</form>\n\n<input type=\"checkbox\" id=\"check\"><label for=\"check\">Toggle</label>\n<input type=\"checkbox\" id=\"check2\"><label for=\"check2\">Checkbox</label>\n<label for=\"checkbox-method-refresh\" id=\"checkbox-method-refresh-label\">checkbox refresh</label>\n<input type=\"checkbox\" id=\"checkbox-method-refresh\"/>\n<label for=\"checkbox-method-destroy\" class=\"bar\" id=\"checkbox-method-destroy-label\">checkbox refresh</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-method-destroy\"/>\n<label for=\"checkbox-method-disable\">checkbox refresh</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-method-disable\"/>\n\n<label for=\"radio-method-refresh\" id=\"radio-method-refresh-label\">radio refresh</label>\n<input type=\"radio\" id=\"radio-method-refresh\"/>\n<label for=\"radio-method-destroy\" class=\"bar\" id=\"radio-method-destroy-label\">radio refresh</label>\n<input type=\"radio\" class=\"foo\" id=\"radio-method-destroy\"/>\n<label for=\"radio-method-disable\">radio refresh</label>\n<input type=\"radio\" class=\"foo\" id=\"radio-method-disable\"/>\n\n<label for=\"checkbox-option-disabled\">checkbox disabled</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-option-disabled\"/>\n<label for=\"checkbox-option-icon\">checkbox icon</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-option-icon\"/>\n<label for=\"checkbox-option-label\">checkbox label<input type=\"checkbox\" class=\"foo\" id=\"checkbox-option-label\"/></label>\n<label>\n\t<input type=\"checkbox\" id=\"label-with-no-for\"/>\n</label>\n\n<form id=\"form3\"></form>\n<input type=\"radio\" name=\"crazy-form\" id=\"crazy-form-1\" form=\"form3\" checked=\"checked\">\n<label for=\"crazy-form-1\">Choice 1</label>\n<input type=\"radio\" name=\"crazy-form\" id=\"crazy-form-2\" form=\"form3\">\n<label for=\"crazy-form-2\">Choice 2</label>\n\n</div>\n</body>\n</html>\n", "define( [\n\t\"qunit\",\n\t\"jquery\",\n\t\"lib/helper\",\n\t\"ui/widgets/checkboxradio\"\n], function( QUnit, $, helper ) {\n\"use strict\";\n\nQUnit.module( \"Checkboxradio: core\", { afterEach: helper.moduleAfterEach }  );\n\nQUnit.test( \"Checkbox - Initial class structure\", function( assert ) {\n\tassert.expect( 2 );\n\tvar input = $( \"#check\" ),\n\t\tlabel = $( \"label[for=check]\" );\n\n\tinput.checkboxradio();\n\tassert.hasClasses( input, \"ui-helper-hidden-accessible ui-checkboxradio\" );\n\tassert.hasClasses( label, \"ui-button ui-widget ui-checkboxradio-label ui-corner-all\" );\n} );\n\nQUnit.test( \"Radios - Initial class structure\", function( assert ) {\n\tassert.expect( 6 );\n\tvar inputs = $( \"#radio0 input\" ),\n\t\tlabels = $( \"#radio0 label\" );\n\n\tinputs.checkboxradio();\n\tinputs.each( function() {\n\t\tassert.hasClasses( this, \"ui-helper-hidden-accessible\" );\n\t} );\n\tlabels.each( function() {\n\t\tassert.hasClasses( this, \"ui-button\" );\n\t} );\n} );\n\nQUnit.test( \"Ensure checked after single click on checkbox label button\", function( assert ) {\n\tvar ready = assert.async();\n\tassert.expect( 2 );\n\n\t$( \"#check2\" ).checkboxradio().on( \"change\", function() {\n\t\tvar label = $( this ).checkboxradio( \"widget\" );\n\t\tassert.ok( this.checked, \"checked ok\" );\n\n\t\tassert.hasClasses( label, \"ui-state-active\" );\n\t} );\n\n\t// Support: Opera\n\t// Opera doesn't trigger a change event when this is done synchronously.\n\t// This seems to be a side effect of another test, but until that can be\n\t// tracked down, this delay will have to do.\n\tsetTimeout( function() {\n\t\t$( \"#check2\" ).checkboxradio( \"widget\" ).simulate( \"click\" );\n\t\tready();\n\t} );\n} );\n\nQUnit.test( \"Handle form association via form attribute\", function( assert ) {\n\tassert.expect( 4 );\n\n\tvar radio1 = $( \"#crazy-form-1\" ).checkboxradio();\n\tvar radio1Label = radio1.checkboxradio( \"widget\" );\n\tvar radio2 = $( \"#crazy-form-2\" ).checkboxradio();\n\tvar radio2Label = radio2.checkboxradio( \"widget\" );\n\n\tradio2.on( \"change\", function() {\n\t\tassert.ok( this.checked, \"#2 checked\" );\n\t\tassert.ok( !radio1[ 0 ].checked, \"#1 not checked\" );\n\n\t\tassert.hasClasses( radio2Label, \"ui-state-active\" );\n\t\tassert.lacksClasses( radio1Label, \"ui-state-active\" );\n\t} );\n\n\tradio2Label.simulate( \"click\" );\n} );\n\nQUnit.test( \"Checkbox creation requires a label, and finds it in all cases\", function( assert ) {\n\tassert.expect( 7 );\n\tvar groups = [\n\t\t\"<span><label for='t7092a'></label><input type='checkbox' id='t7092a'></span>\",\n\t\t\"<span><input type='checkbox' id='t7092b'><label for='t7092b'></label></span>\",\n\t\t\"<span><span><input type='checkbox' id='t7092c'></span><label for='t7092c'></label></span>\",\n\t\t\"<span><input type='checkbox' id='t7092d'></span><span><label for='t7092d'></label></span>\",\n\t\t\"<span><input type='checkbox' id='t7092e'><span><label for='t7092e'></label></span></span>\",\n\t\t\"<span><label><input type='checkbox' id='t7092f'></label></span>\",\n\t\t\"<span><input type='checkbox' id='check:7534'><label for='check:7534'>Label</label></span>\"\n\t];\n\n\t$.each( groups, function( index, markup ) {\n\t\tvar group = $( markup );\n\n\t\tgroup.find( \"input[type=checkbox]\" ).checkboxradio();\n\t\tassert.hasClasses( group.find( \"label\" ), \"ui-button\" );\n\t} );\n} );\n\nQUnit.test( \"Calling checkboxradio on an unsupported element throws an error\", function( assert ) {\n\tassert.expect( 2 );\n\n\tvar error = new Error(\n\t\t\"Can't create checkboxradio on element.nodeName=div and element.type=undefined\"\n\t);\n\tassert.raises(\n\t\tfunction() {\n\t\t\t$( \"<div>\" ).checkboxradio();\n\t\t},\n\t\terror,\n\t\t\"Proper error thrown\"\n\t);\n\n\terror = new Error(\n\t\t\"Can't create checkboxradio on element.nodeName=input and element.type=button\"\n\t);\n\tassert.raises(\n\t\tfunction() {\n\t\t\t$( \"<input type='button'>\" ).checkboxradio();\n\t\t},\n\t\terror,\n\t\t\"Proper error thrown\"\n\t);\n} );\n\nQUnit.test( \"Calling checkboxradio on an input with no label throws an error\", function( assert ) {\n\tassert.expect( 1 );\n\n\tvar error = new Error( \"No label found for checkboxradio widget\" );\n\tassert.raises(\n\t\tfunction() {\n\t\t\t$( \"<input type='checkbox'>\" ).checkboxradio();\n\t\t},\n\t\terror,\n\t\t\"Proper error thrown\"\n\t);\n} );\n\n} );\n", "define( [\n\t\"qunit\",\n\t\"jquery\",\n\t\"lib/helper\",\n\t\"ui/widgets/checkboxradio\"\n], function( QUnit, $, helper ) {\n\"use strict\";\n\nQUnit.module( \"Checkboxradio: methods\", { afterEach: helper.moduleAfterEach }  );\n\n$.each( [ \"checkbox\", \"radio\" ], function( index, value ) {\n\tQUnit.test( value + \": refresh\", function( assert ) {\n\t\tvar widget, icon,\n\t\t\tcheckbox = value === \"checkbox\",\n\t\t\tinput = $( \"#\" + value + \"-method-refresh\" );\n\n\t\tassert.expect( checkbox ? 11 : 8 );\n\n\t\tinput.checkboxradio();\n\n\t\twidget = input.checkboxradio( \"widget\" );\n\t\ticon = widget.find( \".ui-icon\" );\n\t\tassert.strictEqual( icon.length, 1,\n\t\t\t\"There is initally one icon\" );\n\n\t\ticon.remove();\n\t\tinput.checkboxradio( \"refresh\" );\n\t\ticon = widget.find( \".ui-icon\" );\n\t\tassert.strictEqual( icon.length, 1,\n\t\t\t\"Icon is recreated on refresh if absent\" );\n\t\tassert.hasClasses( icon, \"ui-icon-blank\" );\n\t\tif ( checkbox ) {\n\t\t\tassert.lacksClasses( icon, \"ui-icon-check\" );\n\t\t}\n\t\tassert.lacksClasses( widget, \"ui-checkboxradio-checked\" );\n\n\t\tinput.prop( \"checked\", true );\n\t\tinput.checkboxradio( \"refresh\" );\n\t\tif ( checkbox ) {\n\t\t\tassert.hasClasses( icon, \"ui-icon-check\" );\n\t\t}\n\t\tassert[ !checkbox ? \"hasClasses\" : \"lacksClasses\" ]( icon, \"ui-icon-blank\" );\n\t\tassert.hasClasses( widget, \"ui-checkboxradio-checked\" );\n\n\t\tinput.prop( \"checked\", false );\n\t\tinput.checkboxradio( \"refresh\" );\n\t\tassert.hasClasses( icon, \"ui-icon-blank\" );\n\t\tif ( checkbox ) {\n\t\t\tassert.lacksClasses( icon, \"ui-icon-check\" );\n\t\t}\n\t\tassert.lacksClasses( widget, \"ui-checkboxradio-checked\" );\n\t} );\n\n\tQUnit.test( value + \": destroy\", function( assert ) {\n\t\tassert.expect( 1 );\n\t\tassert.domEqual( \"#\" + value + \"-method-destroy\", function() {\n\t\t\t$( \"#\" + value + \"-method-destroy\" ).checkboxradio().checkboxradio( \"destroy\" );\n\t\t} );\n\t} );\n\n\tQUnit.test( value + \": disable / enable\", function( assert ) {\n\t\tassert.expect( 4 );\n\t\tvar input = $( \"#\" + value + \"-method-disable\" ),\n\t\t\twidget = input.checkboxradio().checkboxradio( \"widget\" );\n\n\t\tinput.checkboxradio( \"disable\" );\n\t\tassert.hasClasses( widget, \"ui-state-disabled\" );\n\t\tassert.strictEqual( input.is( \":disabled\" ), true,\n\t\t\tvalue + \" is disabled when disable is called\" );\n\n\t\tinput.checkboxradio( \"enable\" );\n\t\tassert.lacksClasses( widget, \"ui-state-disabled\" );\n\t\tassert.strictEqual( input.is( \":disabled\" ), false,\n\t\t\tvalue + \" has disabled prop removed when enable is called\" );\n\t} );\n\n\tQUnit.test(  value + \": widget returns the label\", function( assert ) {\n\t\tassert.expect( 1 );\n\n\t\tvar input = $( \"#\" + value + \"-method-refresh\" ),\n\t\t\tlabel = $( \"#\" + value + \"-method-refresh-label\" );\n\n\t\tinput.checkboxradio();\n\t\tassert.strictEqual( input.checkboxradio( \"widget\" )[ 0 ], label[ 0 ],\n\t\t\t\"widget method returns label\" );\n\t} );\n} );\n\nQUnit.test( \"Input wrapped in a label preserved on refresh\", function( assert ) {\n\tvar input = $( \"#label-with-no-for\" ).checkboxradio(),\n\t\telement = input.checkboxradio( \"widget\" );\n\n\tassert.expect( 1 );\n\n\tinput.checkboxradio( \"refresh\" );\n\tassert.strictEqual( input.parent()[ 0 ], element[ 0 ], \"Input preserved\" );\n} );\n\n} );\n", "/*!\n * jQuery UI Checkboxradio @VERSION\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Checkboxradio\n//>>group: Widgets\n//>>description: Enhances a form with multiple themeable checkboxes or radio buttons.\n//>>docs: http://api.jqueryui.com/checkboxradio/\n//>>demos: http://jqueryui.com/checkboxradio/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/button.css\n//>>css.structure: ../../themes/base/checkboxradio.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"../form-reset-mixin\",\n\t\t\t\"../labels\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\n$.widget( \"ui.checkboxradio\", [ $.ui.formResetMixin, {\n\tversion: \"@VERSION\",\n\toptions: {\n\t\tdisabled: null,\n\t\tlabel: null,\n\t\ticon: true,\n\t\tclasses: {\n\t\t\t\"ui-checkboxradio-label\": \"ui-corner-all\",\n\t\t\t\"ui-checkboxradio-icon\": \"ui-corner-all\"\n\t\t}\n\t},\n\n\t_getCreateOptions: function() {\n\t\tvar disabled, labels;\n\t\tvar that = this;\n\t\tvar options = this._super() || {};\n\n\t\t// We read the type here, because it makes more sense to throw a element type error first,\n\t\t// rather then the error for lack of a label. Often if its the wrong type, it\n\t\t// won't have a label (e.g. calling on a div, btn, etc)\n\t\tthis._readType();\n\n\t\tlabels = this.element.labels();\n\n\t\t// If there are multiple labels, use the last one\n\t\tthis.label = $( labels[ labels.length - 1 ] );\n\t\tif ( !this.label.length ) {\n\t\t\t$.error( \"No label found for checkboxradio widget\" );\n\t\t}\n\n\t\tthis.originalLabel = \"\";\n\n\t\t// We need to get the label text but this may also need to make sure it does not contain the\n\t\t// input itself.\n\t\tthis.label.contents().not( this.element[ 0 ] ).each( function() {\n\n\t\t\t// The label contents could be text, html, or a mix. We concat each element to get a\n\t\t\t// string representation of the label, without the input as part of it.\n\t\t\tthat.originalLabel += this.nodeType === 3 ? $( this ).text() : this.outerHTML;\n\t\t} );\n\n\t\t// Set the label option if we found label text\n\t\tif ( this.originalLabel ) {\n\t\t\toptions.label = this.originalLabel;\n\t\t}\n\n\t\tdisabled = this.element[ 0 ].disabled;\n\t\tif ( disabled != null ) {\n\t\t\toptions.disabled = disabled;\n\t\t}\n\t\treturn options;\n\t},\n\n\t_create: function() {\n\t\tvar checked = this.element[ 0 ].checked;\n\n\t\tthis._bindFormResetHandler();\n\n\t\tif ( this.options.disabled == null ) {\n\t\t\tthis.options.disabled = this.element[ 0 ].disabled;\n\t\t}\n\n\t\tthis._setOption( \"disabled\", this.options.disabled );\n\t\tthis._addClass( \"ui-checkboxradio\", \"ui-helper-hidden-accessible\" );\n\t\tthis._addClass( this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\" );\n\n\t\tif ( this.type === \"radio\" ) {\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-radio-label\" );\n\t\t}\n\n\t\tif ( this.options.label && this.options.label !== this.originalLabel ) {\n\t\t\tthis._updateLabel();\n\t\t} else if ( this.originalLabel ) {\n\t\t\tthis.options.label = this.originalLabel;\n\t\t}\n\n\t\tthis._enhance();\n\n\t\tif ( checked ) {\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\" );\n\t\t}\n\n\t\tthis._on( {\n\t\t\tchange: \"_toggleClasses\",\n\t\t\tfocus: function() {\n\t\t\t\tthis._addClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tthis._removeClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_readType: function() {\n\t\tvar nodeName = this.element[ 0 ].nodeName.toLowerCase();\n\t\tthis.type = this.element[ 0 ].type;\n\t\tif ( nodeName !== \"input\" || !/radio|checkbox/.test( this.type ) ) {\n\t\t\t$.error( \"Can't create checkboxradio on element.nodeName=\" + nodeName +\n\t\t\t\t\" and element.type=\" + this.type );\n\t\t}\n\t},\n\n\t// Support jQuery Mobile enhanced option\n\t_enhance: function() {\n\t\tthis._updateIcon( this.element[ 0 ].checked );\n\t},\n\n\twidget: function() {\n\t\treturn this.label;\n\t},\n\n\t_getRadioGroup: function() {\n\t\tvar group;\n\t\tvar name = this.element[ 0 ].name;\n\t\tvar nameSelector = \"input[name='\" + $.escapeSelector( name ) + \"']\";\n\n\t\tif ( !name ) {\n\t\t\treturn $( [] );\n\t\t}\n\n\t\tif ( this.form.length ) {\n\t\t\tgroup = $( this.form[ 0 ].elements ).filter( nameSelector );\n\t\t} else {\n\n\t\t\t// Not inside a form, check all inputs that also are not inside a form\n\t\t\tgroup = $( nameSelector ).filter( function() {\n\t\t\t\treturn $( this )._form().length === 0;\n\t\t\t} );\n\t\t}\n\n\t\treturn group.not( this.element );\n\t},\n\n\t_toggleClasses: function() {\n\t\tvar checked = this.element[ 0 ].checked;\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\n\n\t\tif ( this.options.icon && this.type === \"checkbox\" ) {\n\t\t\tthis._toggleClass( this.icon, null, \"ui-icon-check ui-state-checked\", checked )\n\t\t\t\t._toggleClass( this.icon, null, \"ui-icon-blank\", !checked );\n\t\t}\n\n\t\tif ( this.type === \"radio\" ) {\n\t\t\tthis._getRadioGroup()\n\t\t\t\t.each( function() {\n\t\t\t\t\tvar instance = $( this ).checkboxradio( \"instance\" );\n\n\t\t\t\t\tif ( instance ) {\n\t\t\t\t\t\tinstance._removeClass( instance.label,\n\t\t\t\t\t\t\t\"ui-checkboxradio-checked\", \"ui-state-active\" );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t},\n\n\t_destroy: function() {\n\t\tthis._unbindFormResetHandler();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.icon.remove();\n\t\t\tthis.iconSpace.remove();\n\t\t}\n\t},\n\n\t_setOption: function( key, value ) {\n\n\t\t// We don't allow the value to be set to nothing\n\t\tif ( key === \"label\" && !value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._super( key, value );\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\tthis._toggleClass( this.label, null, \"ui-state-disabled\", value );\n\t\t\tthis.element[ 0 ].disabled = value;\n\n\t\t\t// Don't refresh when setting disabled\n\t\t\treturn;\n\t\t}\n\t\tthis.refresh();\n\t},\n\n\t_updateIcon: function( checked ) {\n\t\tvar toAdd = \"ui-icon ui-icon-background \";\n\n\t\tif ( this.options.icon ) {\n\t\t\tif ( !this.icon ) {\n\t\t\t\tthis.icon = $( \"<span>\" );\n\t\t\t\tthis.iconSpace = $( \"<span> </span>\" );\n\t\t\t\tthis._addClass( this.iconSpace, \"ui-checkboxradio-icon-space\" );\n\t\t\t}\n\n\t\t\tif ( this.type === \"checkbox\" ) {\n\t\t\t\ttoAdd += checked ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\";\n\t\t\t\tthis._removeClass( this.icon, null, checked ? \"ui-icon-blank\" : \"ui-icon-check\" );\n\t\t\t} else {\n\t\t\t\ttoAdd += \"ui-icon-blank\";\n\t\t\t}\n\t\t\tthis._addClass( this.icon, \"ui-checkboxradio-icon\", toAdd );\n\t\t\tif ( !checked ) {\n\t\t\t\tthis._removeClass( this.icon, null, \"ui-icon-check ui-state-checked\" );\n\t\t\t}\n\t\t\tthis.icon.prependTo( this.label ).after( this.iconSpace );\n\t\t} else if ( this.icon !== undefined ) {\n\t\t\tthis.icon.remove();\n\t\t\tthis.iconSpace.remove();\n\t\t\tdelete this.icon;\n\t\t}\n\t},\n\n\t_updateLabel: function() {\n\n\t\t// Remove the contents of the label ( minus the icon, icon space, and input )\n\t\tvar contents = this.label.contents().not( this.element[ 0 ] );\n\t\tif ( this.icon ) {\n\t\t\tcontents = contents.not( this.icon[ 0 ] );\n\t\t}\n\t\tif ( this.iconSpace ) {\n\t\t\tcontents = contents.not( this.iconSpace[ 0 ] );\n\t\t}\n\t\tcontents.remove();\n\n\t\tthis.label.append( this.options.label );\n\t},\n\n\trefresh: function() {\n\t\tvar checked = this.element[ 0 ].checked,\n\t\t\tisDisabled = this.element[ 0 ].disabled;\n\n\t\tthis._updateIcon( checked );\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\n\t\tif ( this.options.label !== null ) {\n\t\t\tthis._updateLabel();\n\t\t}\n\n\t\tif ( isDisabled !== this.options.disabled ) {\n\t\t\tthis._setOptions( { \"disabled\": isDisabled } );\n\t\t}\n\t}\n\n} ] );\n\nreturn $.ui.checkboxradio;\n\n} );\n"], "fixing_code": ["<!doctype html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"utf-8\">\n\t<title>jQuery UI Checkboxradio Test Suite</title>\n\n\t<script src=\"../../../external/requirejs/require.js\"></script>\n\t<script src=\"../../lib/css.js\" data-modules=\"core button checkboxradio\"></script>\n\t<script src=\"../../lib/bootstrap.js\" data-widget=\"button\"></script>\n</head>\n<body>\n\n<div id=\"qunit\"></div>\n<div id=\"qunit-fixture\">\n\n<div id=\"radio0\">\n\t<input type=\"radio\" id=\"radio01\" name=\"radio\" checked=\"checked\"><label for=\"radio01\">Choice 1</label>\n\t<input type=\"radio\" id=\"radio02\" name=\"radio\"><label for=\"radio02\">Choice 2</label>\n\t<input type=\"radio\" id=\"radio03\" name=\"radio\"><label for=\"radio03\">Choice 3</label>\n</div>\n<form id=\"form1\">\n\t<div id=\"radio1\">\n\t\t<input type=\"radio\" id=\"radio11\" name=\"radio\"><label for=\"radio11\">Choice 1</label>\n\t\t<input type=\"radio\" id=\"radio12\" name=\"radio\"><label for=\"radio12\">Choice 2</label>\n\t\t<input type=\"radio\" id=\"radio13\" name=\"radio\" checked=\"checked\"><label for=\"radio13\">Choice 3</label>\n\t</div>\n</form>\n<form id=\"form2\">\n\t<div id=\"radio2\">\n\t\t<input type=\"radio\" id=\"radio21\" name=\"radio\"><label for=\"radio21\">Choice 1</label>\n\t\t<input type=\"radio\" id=\"radio22\" name=\"radio\"><label for=\"radio22\">Choice 2</label>\n\t\t<input type=\"radio\" id=\"radio23\" name=\"radio\" checked=\"checked\"><label for=\"radio23\">Choice 3</label>\n\t</div>\n</form>\n<form>\n\t<div id=\"radio3\">\n\t\t<input type=\"radio\" id=\"radio31\" name=\"data['Page']['parse']\"><label for=\"radio31\">Choice 1</label>\n\t\t<input type=\"radio\" id=\"radio32\" name=\"data['Page']['parse']\" checked=\"checked\"><label for=\"radio32\">Choice 2</label>\n\t\t<input type=\"radio\" id=\"radio33\" name=\"data['Page']['parse']\"><label for=\"radio33\">Choice 3</label>\n\t</div>\n</form>\n\n<input type=\"checkbox\" id=\"check\"><label for=\"check\">Toggle</label>\n<input type=\"checkbox\" id=\"check2\"><label for=\"check2\">Checkbox</label>\n<label for=\"checkbox-method-refresh\" id=\"checkbox-method-refresh-label\">checkbox refresh</label>\n<input type=\"checkbox\" id=\"checkbox-method-refresh\"/>\n<label for=\"checkbox-method-destroy\" class=\"bar\" id=\"checkbox-method-destroy-label\">checkbox refresh</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-method-destroy\"/>\n<label for=\"checkbox-method-disable\">checkbox refresh</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-method-disable\"/>\n\n<label for=\"radio-method-refresh\" id=\"radio-method-refresh-label\">radio refresh</label>\n<input type=\"radio\" id=\"radio-method-refresh\"/>\n<label for=\"radio-method-destroy\" class=\"bar\" id=\"radio-method-destroy-label\">radio refresh</label>\n<input type=\"radio\" class=\"foo\" id=\"radio-method-destroy\"/>\n<label for=\"radio-method-disable\">radio refresh</label>\n<input type=\"radio\" class=\"foo\" id=\"radio-method-disable\"/>\n\n<label for=\"checkbox-option-disabled\">checkbox disabled</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-option-disabled\"/>\n<label for=\"checkbox-option-icon\">checkbox icon</label>\n<input type=\"checkbox\" class=\"foo\" id=\"checkbox-option-icon\"/>\n<label for=\"checkbox-option-label\">checkbox label<input type=\"checkbox\" class=\"foo\" id=\"checkbox-option-label\"/></label>\n<label>\n\t<input type=\"checkbox\" id=\"label-with-no-for\"/>\n</label>\n<label>\n\t<input type=\"checkbox\" id=\"label-with-no-for-with-html\"/>\n\t<strong>Hi</strong>, <em>I'm a label</em>\n</label>\n<label>\n\t<input type=\"checkbox\" id=\"label-with-no-for-with-text\"/>\n\tHi, I'm a label\n</label>\n<label>\n\t<input type=\"checkbox\" id=\"label-with-no-for-with-html-like-text\"/>\n\t&lt;em&gt;Hi, I'm a label&lt;/em&gt;\n</label>\n\n<form id=\"form3\"></form>\n<input type=\"radio\" name=\"crazy-form\" id=\"crazy-form-1\" form=\"form3\" checked=\"checked\">\n<label for=\"crazy-form-1\">Choice 1</label>\n<input type=\"radio\" name=\"crazy-form\" id=\"crazy-form-2\" form=\"form3\">\n<label for=\"crazy-form-2\">Choice 2</label>\n\n</div>\n</body>\n</html>\n", "define( [\n\t\"qunit\",\n\t\"jquery\",\n\t\"lib/helper\",\n\t\"ui/widgets/checkboxradio\"\n], function( QUnit, $, helper ) {\n\"use strict\";\n\nQUnit.module( \"Checkboxradio: core\", { afterEach: helper.moduleAfterEach }  );\n\nQUnit.test( \"Checkbox - Initial class structure\", function( assert ) {\n\tassert.expect( 2 );\n\tvar input = $( \"#check\" ),\n\t\tlabel = $( \"label[for=check]\" );\n\n\tinput.checkboxradio();\n\tassert.hasClasses( input, \"ui-helper-hidden-accessible ui-checkboxradio\" );\n\tassert.hasClasses( label, \"ui-button ui-widget ui-checkboxradio-label ui-corner-all\" );\n} );\n\nQUnit.test( \"Radios - Initial class structure\", function( assert ) {\n\tassert.expect( 6 );\n\tvar inputs = $( \"#radio0 input\" ),\n\t\tlabels = $( \"#radio0 label\" );\n\n\tinputs.checkboxradio();\n\tinputs.each( function() {\n\t\tassert.hasClasses( this, \"ui-helper-hidden-accessible\" );\n\t} );\n\tlabels.each( function() {\n\t\tassert.hasClasses( this, \"ui-button\" );\n\t} );\n} );\n\nQUnit.test( \"Ensure checked after single click on checkbox label button\", function( assert ) {\n\tvar ready = assert.async();\n\tassert.expect( 2 );\n\n\t$( \"#check2\" ).checkboxradio().on( \"change\", function() {\n\t\tvar label = $( this ).checkboxradio( \"widget\" );\n\t\tassert.ok( this.checked, \"checked ok\" );\n\n\t\tassert.hasClasses( label, \"ui-state-active\" );\n\t} );\n\n\t// Support: Opera\n\t// Opera doesn't trigger a change event when this is done synchronously.\n\t// This seems to be a side effect of another test, but until that can be\n\t// tracked down, this delay will have to do.\n\tsetTimeout( function() {\n\t\t$( \"#check2\" ).checkboxradio( \"widget\" ).simulate( \"click\" );\n\t\tready();\n\t} );\n} );\n\nQUnit.test( \"Handle form association via form attribute\", function( assert ) {\n\tassert.expect( 4 );\n\n\tvar radio1 = $( \"#crazy-form-1\" ).checkboxradio();\n\tvar radio1Label = radio1.checkboxradio( \"widget\" );\n\tvar radio2 = $( \"#crazy-form-2\" ).checkboxradio();\n\tvar radio2Label = radio2.checkboxradio( \"widget\" );\n\n\tradio2.on( \"change\", function() {\n\t\tassert.ok( this.checked, \"#2 checked\" );\n\t\tassert.ok( !radio1[ 0 ].checked, \"#1 not checked\" );\n\n\t\tassert.hasClasses( radio2Label, \"ui-state-active\" );\n\t\tassert.lacksClasses( radio1Label, \"ui-state-active\" );\n\t} );\n\n\tradio2Label.simulate( \"click\" );\n} );\n\nQUnit.test( \"Checkbox creation requires a label, and finds it in all cases\", function( assert ) {\n\tassert.expect( 7 );\n\tvar groups = [\n\t\t\"<span><label for='t7092a'></label><input type='checkbox' id='t7092a'></span>\",\n\t\t\"<span><input type='checkbox' id='t7092b'><label for='t7092b'></label></span>\",\n\t\t\"<span><span><input type='checkbox' id='t7092c'></span><label for='t7092c'></label></span>\",\n\t\t\"<span><input type='checkbox' id='t7092d'></span><span><label for='t7092d'></label></span>\",\n\t\t\"<span><input type='checkbox' id='t7092e'><span><label for='t7092e'></label></span></span>\",\n\t\t\"<span><label><input type='checkbox' id='t7092f'></label></span>\",\n\t\t\"<span><input type='checkbox' id='check:7534'><label for='check:7534'>Label</label></span>\"\n\t];\n\n\t$.each( groups, function( index, markup ) {\n\t\tvar group = $( markup );\n\n\t\tgroup.find( \"input[type=checkbox]\" ).checkboxradio();\n\t\tassert.hasClasses( group.find( \"label\" ), \"ui-button\" );\n\t} );\n} );\n\nQUnit.test( \"Calling checkboxradio on an unsupported element throws an error\", function( assert ) {\n\tassert.expect( 2 );\n\n\tvar error = new Error(\n\t\t\"Can't create checkboxradio on element.nodeName=div and element.type=undefined\"\n\t);\n\tassert.raises(\n\t\tfunction() {\n\t\t\t$( \"<div>\" ).checkboxradio();\n\t\t},\n\t\terror,\n\t\t\"Proper error thrown\"\n\t);\n\n\terror = new Error(\n\t\t\"Can't create checkboxradio on element.nodeName=input and element.type=button\"\n\t);\n\tassert.raises(\n\t\tfunction() {\n\t\t\t$( \"<input type='button'>\" ).checkboxradio();\n\t\t},\n\t\terror,\n\t\t\"Proper error thrown\"\n\t);\n} );\n\nQUnit.test( \"Calling checkboxradio on an input with no label throws an error\", function( assert ) {\n\tassert.expect( 1 );\n\n\tvar error = new Error( \"No label found for checkboxradio widget\" );\n\tassert.raises(\n\t\tfunction() {\n\t\t\t$( \"<input type='checkbox'>\" ).checkboxradio();\n\t\t},\n\t\terror,\n\t\t\"Proper error thrown\"\n\t);\n} );\n\nQUnit.test( \"Inheriting label from initial HTML\", function( assert ) {\n\tvar tests = [\n\t\t{\n\t\t\tid: \"label-with-no-for-with-html\",\n\t\t\texpectedLabel: \"<strong>Hi</strong>, <em>I'm a label</em>\"\n\t\t},\n\t\t{\n\t\t\tid: \"label-with-no-for-with-text\",\n\t\t\texpectedLabel: \"Hi, I'm a label\"\n\t\t},\n\t\t{\n\t\t\tid: \"label-with-no-for-with-html-like-text\",\n\t\t\texpectedLabel: \"&lt;em&gt;Hi, I'm a label&lt;/em&gt;\"\n\t\t}\n\t];\n\n\tassert.expect( tests.length );\n\n\ttests.forEach( function( testData ) {\n\t\tvar id = testData.id;\n\t\tvar expectedLabel = testData.expectedLabel;\n\t\tvar inputElem = $( \"#\" + id );\n\t\tvar labelElem = inputElem.parent();\n\n\t\tinputElem.checkboxradio( { icon: false } );\n\n\t\tvar labelWithoutInput = labelElem.clone();\n\t\tlabelWithoutInput.find( \"input\" ).remove();\n\n\t\tassert.strictEqual(\n\t\t\tlabelWithoutInput.html().trim(),\n\t\t\texpectedLabel.trim(),\n\t\t\t\"Label correct [\" + id + \"]\"\n\t\t);\n\t} );\n} );\n\n} );\n", "define( [\n\t\"qunit\",\n\t\"jquery\",\n\t\"lib/helper\",\n\t\"ui/widgets/checkboxradio\"\n], function( QUnit, $, helper ) {\n\"use strict\";\n\nQUnit.module( \"Checkboxradio: methods\", { afterEach: helper.moduleAfterEach }  );\n\n$.each( [ \"checkbox\", \"radio\" ], function( index, value ) {\n\tQUnit.test( value + \": refresh\", function( assert ) {\n\t\tvar widget, icon,\n\t\t\tcheckbox = value === \"checkbox\",\n\t\t\tinput = $( \"#\" + value + \"-method-refresh\" );\n\n\t\tassert.expect( checkbox ? 11 : 8 );\n\n\t\tinput.checkboxradio();\n\n\t\twidget = input.checkboxradio( \"widget\" );\n\t\ticon = widget.find( \".ui-icon\" );\n\t\tassert.strictEqual( icon.length, 1,\n\t\t\t\"There is initally one icon\" );\n\n\t\ticon.remove();\n\t\tinput.checkboxradio( \"refresh\" );\n\t\ticon = widget.find( \".ui-icon\" );\n\t\tassert.strictEqual( icon.length, 1,\n\t\t\t\"Icon is recreated on refresh if absent\" );\n\t\tassert.hasClasses( icon, \"ui-icon-blank\" );\n\t\tif ( checkbox ) {\n\t\t\tassert.lacksClasses( icon, \"ui-icon-check\" );\n\t\t}\n\t\tassert.lacksClasses( widget, \"ui-checkboxradio-checked\" );\n\n\t\tinput.prop( \"checked\", true );\n\t\tinput.checkboxradio( \"refresh\" );\n\t\tif ( checkbox ) {\n\t\t\tassert.hasClasses( icon, \"ui-icon-check\" );\n\t\t}\n\t\tassert[ !checkbox ? \"hasClasses\" : \"lacksClasses\" ]( icon, \"ui-icon-blank\" );\n\t\tassert.hasClasses( widget, \"ui-checkboxradio-checked\" );\n\n\t\tinput.prop( \"checked\", false );\n\t\tinput.checkboxradio( \"refresh\" );\n\t\tassert.hasClasses( icon, \"ui-icon-blank\" );\n\t\tif ( checkbox ) {\n\t\t\tassert.lacksClasses( icon, \"ui-icon-check\" );\n\t\t}\n\t\tassert.lacksClasses( widget, \"ui-checkboxradio-checked\" );\n\t} );\n\n\tQUnit.test( value + \": destroy\", function( assert ) {\n\t\tassert.expect( 1 );\n\t\tassert.domEqual( \"#\" + value + \"-method-destroy\", function() {\n\t\t\t$( \"#\" + value + \"-method-destroy\" ).checkboxradio().checkboxradio( \"destroy\" );\n\t\t} );\n\t} );\n\n\tQUnit.test( value + \": disable / enable\", function( assert ) {\n\t\tassert.expect( 4 );\n\t\tvar input = $( \"#\" + value + \"-method-disable\" ),\n\t\t\twidget = input.checkboxradio().checkboxradio( \"widget\" );\n\n\t\tinput.checkboxradio( \"disable\" );\n\t\tassert.hasClasses( widget, \"ui-state-disabled\" );\n\t\tassert.strictEqual( input.is( \":disabled\" ), true,\n\t\t\tvalue + \" is disabled when disable is called\" );\n\n\t\tinput.checkboxradio( \"enable\" );\n\t\tassert.lacksClasses( widget, \"ui-state-disabled\" );\n\t\tassert.strictEqual( input.is( \":disabled\" ), false,\n\t\t\tvalue + \" has disabled prop removed when enable is called\" );\n\t} );\n\n\tQUnit.test(  value + \": widget returns the label\", function( assert ) {\n\t\tassert.expect( 1 );\n\n\t\tvar input = $( \"#\" + value + \"-method-refresh\" ),\n\t\t\tlabel = $( \"#\" + value + \"-method-refresh-label\" );\n\n\t\tinput.checkboxradio();\n\t\tassert.strictEqual( input.checkboxradio( \"widget\" )[ 0 ], label[ 0 ],\n\t\t\t\"widget method returns label\" );\n\t} );\n} );\n\nQUnit.test( \"Input wrapped in a label preserved on refresh\", function( assert ) {\n\tvar input = $( \"#label-with-no-for\" ).checkboxradio(),\n\t\telement = input.checkboxradio( \"widget\" );\n\n\tassert.expect( 1 );\n\n\tinput.checkboxradio( \"refresh\" );\n\tassert.strictEqual( input.parent()[ 0 ], element[ 0 ], \"Input preserved\" );\n} );\n\nQUnit.test( \"Initial text label not turned to HTML on refresh\", function( assert ) {\n\tvar tests = [\n\t\t{\n\t\t\tid: \"label-with-no-for-with-html\",\n\t\t\texpectedLabel: \"<strong>Hi</strong>, <em>I'm a label</em>\"\n\t\t},\n\t\t{\n\t\t\tid: \"label-with-no-for-with-text\",\n\t\t\texpectedLabel: \"Hi, I'm a label\"\n\t\t},\n\t\t{\n\t\t\tid: \"label-with-no-for-with-html-like-text\",\n\t\t\texpectedLabel: \"&lt;em&gt;Hi, I'm a label&lt;/em&gt;\"\n\t\t}\n\t];\n\n\tassert.expect( tests.length );\n\n\ttests.forEach( function( testData ) {\n\t\tvar id = testData.id;\n\t\tvar expectedLabel = testData.expectedLabel;\n\t\tvar inputElem = $( \"#\" + id );\n\t\tvar labelElem = inputElem.parent();\n\n\t\tinputElem.checkboxradio( { icon: false } );\n\t\tinputElem.checkboxradio( \"refresh\" );\n\n\t\tvar labelWithoutInput = labelElem.clone();\n\t\tlabelWithoutInput.find( \"input\" ).remove();\n\n\t\tassert.strictEqual(\n\t\t\tlabelWithoutInput.html().trim(),\n\t\t\texpectedLabel.trim(),\n\t\t\t\"Label correct [\" + id + \"]\"\n\t\t);\n\t} );\n} );\n\n} );\n", "/*!\n * jQuery UI Checkboxradio @VERSION\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Checkboxradio\n//>>group: Widgets\n//>>description: Enhances a form with multiple themeable checkboxes or radio buttons.\n//>>docs: http://api.jqueryui.com/checkboxradio/\n//>>demos: http://jqueryui.com/checkboxradio/\n//>>css.structure: ../../themes/base/core.css\n//>>css.structure: ../../themes/base/button.css\n//>>css.structure: ../../themes/base/checkboxradio.css\n//>>css.theme: ../../themes/base/theme.css\n\n( function( factory ) {\n\t\"use strict\";\n\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [\n\t\t\t\"jquery\",\n\t\t\t\"../form-reset-mixin\",\n\t\t\t\"../labels\",\n\t\t\t\"../widget\"\n\t\t], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n} )( function( $ ) {\n\"use strict\";\n\n$.widget( \"ui.checkboxradio\", [ $.ui.formResetMixin, {\n\tversion: \"@VERSION\",\n\toptions: {\n\t\tdisabled: null,\n\t\tlabel: null,\n\t\ticon: true,\n\t\tclasses: {\n\t\t\t\"ui-checkboxradio-label\": \"ui-corner-all\",\n\t\t\t\"ui-checkboxradio-icon\": \"ui-corner-all\"\n\t\t}\n\t},\n\n\t_getCreateOptions: function() {\n\t\tvar disabled, labels, labelContents;\n\t\tvar options = this._super() || {};\n\n\t\t// We read the type here, because it makes more sense to throw a element type error first,\n\t\t// rather then the error for lack of a label. Often if its the wrong type, it\n\t\t// won't have a label (e.g. calling on a div, btn, etc)\n\t\tthis._readType();\n\n\t\tlabels = this.element.labels();\n\n\t\t// If there are multiple labels, use the last one\n\t\tthis.label = $( labels[ labels.length - 1 ] );\n\t\tif ( !this.label.length ) {\n\t\t\t$.error( \"No label found for checkboxradio widget\" );\n\t\t}\n\n\t\tthis.originalLabel = \"\";\n\n\t\t// We need to get the label text but this may also need to make sure it does not contain the\n\t\t// input itself.\n\t\t// The label contents could be text, html, or a mix. We wrap all elements\n\t\t// and read the wrapper's `innerHTML` to get a string representation of\n\t\t// the label, without the input as part of it.\n\t\tlabelContents = this.label.contents().not( this.element[ 0 ] );\n\n\t\tif ( labelContents.length ) {\n\t\t\tthis.originalLabel += labelContents\n\t\t\t\t.clone()\n\t\t\t\t.wrapAll( \"<div></div>\" )\n\t\t\t\t.parent()\n\t\t\t\t.html();\n\t\t}\n\n\t\t// Set the label option if we found label text\n\t\tif ( this.originalLabel ) {\n\t\t\toptions.label = this.originalLabel;\n\t\t}\n\n\t\tdisabled = this.element[ 0 ].disabled;\n\t\tif ( disabled != null ) {\n\t\t\toptions.disabled = disabled;\n\t\t}\n\t\treturn options;\n\t},\n\n\t_create: function() {\n\t\tvar checked = this.element[ 0 ].checked;\n\n\t\tthis._bindFormResetHandler();\n\n\t\tif ( this.options.disabled == null ) {\n\t\t\tthis.options.disabled = this.element[ 0 ].disabled;\n\t\t}\n\n\t\tthis._setOption( \"disabled\", this.options.disabled );\n\t\tthis._addClass( \"ui-checkboxradio\", \"ui-helper-hidden-accessible\" );\n\t\tthis._addClass( this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\" );\n\n\t\tif ( this.type === \"radio\" ) {\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-radio-label\" );\n\t\t}\n\n\t\tif ( this.options.label && this.options.label !== this.originalLabel ) {\n\t\t\tthis._updateLabel();\n\t\t} else if ( this.originalLabel ) {\n\t\t\tthis.options.label = this.originalLabel;\n\t\t}\n\n\t\tthis._enhance();\n\n\t\tif ( checked ) {\n\t\t\tthis._addClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\" );\n\t\t}\n\n\t\tthis._on( {\n\t\t\tchange: \"_toggleClasses\",\n\t\t\tfocus: function() {\n\t\t\t\tthis._addClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\n\t\t\t},\n\t\t\tblur: function() {\n\t\t\t\tthis._removeClass( this.label, null, \"ui-state-focus ui-visual-focus\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_readType: function() {\n\t\tvar nodeName = this.element[ 0 ].nodeName.toLowerCase();\n\t\tthis.type = this.element[ 0 ].type;\n\t\tif ( nodeName !== \"input\" || !/radio|checkbox/.test( this.type ) ) {\n\t\t\t$.error( \"Can't create checkboxradio on element.nodeName=\" + nodeName +\n\t\t\t\t\" and element.type=\" + this.type );\n\t\t}\n\t},\n\n\t// Support jQuery Mobile enhanced option\n\t_enhance: function() {\n\t\tthis._updateIcon( this.element[ 0 ].checked );\n\t},\n\n\twidget: function() {\n\t\treturn this.label;\n\t},\n\n\t_getRadioGroup: function() {\n\t\tvar group;\n\t\tvar name = this.element[ 0 ].name;\n\t\tvar nameSelector = \"input[name='\" + $.escapeSelector( name ) + \"']\";\n\n\t\tif ( !name ) {\n\t\t\treturn $( [] );\n\t\t}\n\n\t\tif ( this.form.length ) {\n\t\t\tgroup = $( this.form[ 0 ].elements ).filter( nameSelector );\n\t\t} else {\n\n\t\t\t// Not inside a form, check all inputs that also are not inside a form\n\t\t\tgroup = $( nameSelector ).filter( function() {\n\t\t\t\treturn $( this )._form().length === 0;\n\t\t\t} );\n\t\t}\n\n\t\treturn group.not( this.element );\n\t},\n\n\t_toggleClasses: function() {\n\t\tvar checked = this.element[ 0 ].checked;\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\n\n\t\tif ( this.options.icon && this.type === \"checkbox\" ) {\n\t\t\tthis._toggleClass( this.icon, null, \"ui-icon-check ui-state-checked\", checked )\n\t\t\t\t._toggleClass( this.icon, null, \"ui-icon-blank\", !checked );\n\t\t}\n\n\t\tif ( this.type === \"radio\" ) {\n\t\t\tthis._getRadioGroup()\n\t\t\t\t.each( function() {\n\t\t\t\t\tvar instance = $( this ).checkboxradio( \"instance\" );\n\n\t\t\t\t\tif ( instance ) {\n\t\t\t\t\t\tinstance._removeClass( instance.label,\n\t\t\t\t\t\t\t\"ui-checkboxradio-checked\", \"ui-state-active\" );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}\n\t},\n\n\t_destroy: function() {\n\t\tthis._unbindFormResetHandler();\n\n\t\tif ( this.icon ) {\n\t\t\tthis.icon.remove();\n\t\t\tthis.iconSpace.remove();\n\t\t}\n\t},\n\n\t_setOption: function( key, value ) {\n\n\t\t// We don't allow the value to be set to nothing\n\t\tif ( key === \"label\" && !value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._super( key, value );\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\tthis._toggleClass( this.label, null, \"ui-state-disabled\", value );\n\t\t\tthis.element[ 0 ].disabled = value;\n\n\t\t\t// Don't refresh when setting disabled\n\t\t\treturn;\n\t\t}\n\t\tthis.refresh();\n\t},\n\n\t_updateIcon: function( checked ) {\n\t\tvar toAdd = \"ui-icon ui-icon-background \";\n\n\t\tif ( this.options.icon ) {\n\t\t\tif ( !this.icon ) {\n\t\t\t\tthis.icon = $( \"<span>\" );\n\t\t\t\tthis.iconSpace = $( \"<span> </span>\" );\n\t\t\t\tthis._addClass( this.iconSpace, \"ui-checkboxradio-icon-space\" );\n\t\t\t}\n\n\t\t\tif ( this.type === \"checkbox\" ) {\n\t\t\t\ttoAdd += checked ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\";\n\t\t\t\tthis._removeClass( this.icon, null, checked ? \"ui-icon-blank\" : \"ui-icon-check\" );\n\t\t\t} else {\n\t\t\t\ttoAdd += \"ui-icon-blank\";\n\t\t\t}\n\t\t\tthis._addClass( this.icon, \"ui-checkboxradio-icon\", toAdd );\n\t\t\tif ( !checked ) {\n\t\t\t\tthis._removeClass( this.icon, null, \"ui-icon-check ui-state-checked\" );\n\t\t\t}\n\t\t\tthis.icon.prependTo( this.label ).after( this.iconSpace );\n\t\t} else if ( this.icon !== undefined ) {\n\t\t\tthis.icon.remove();\n\t\t\tthis.iconSpace.remove();\n\t\t\tdelete this.icon;\n\t\t}\n\t},\n\n\t_updateLabel: function() {\n\n\t\t// Remove the contents of the label ( minus the icon, icon space, and input )\n\t\tvar contents = this.label.contents().not( this.element[ 0 ] );\n\t\tif ( this.icon ) {\n\t\t\tcontents = contents.not( this.icon[ 0 ] );\n\t\t}\n\t\tif ( this.iconSpace ) {\n\t\t\tcontents = contents.not( this.iconSpace[ 0 ] );\n\t\t}\n\t\tcontents.remove();\n\n\t\tthis.label.append( this.options.label );\n\t},\n\n\trefresh: function() {\n\t\tvar checked = this.element[ 0 ].checked,\n\t\t\tisDisabled = this.element[ 0 ].disabled;\n\n\t\tthis._updateIcon( checked );\n\t\tthis._toggleClass( this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", checked );\n\t\tif ( this.options.label !== null ) {\n\t\t\tthis._updateLabel();\n\t\t}\n\n\t\tif ( isDisabled !== this.options.disabled ) {\n\t\t\tthis._setOptions( { \"disabled\": isDisabled } );\n\t\t}\n\t}\n\n} ] );\n\nreturn $.ui.checkboxradio;\n\n} );\n"], "filenames": ["tests/unit/checkboxradio/checkboxradio.html", "tests/unit/checkboxradio/core.js", "tests/unit/checkboxradio/methods.js", "ui/widgets/checkboxradio.js"], "buggy_code_start_loc": [66, 133, 98, 53], "buggy_code_end_loc": [66, 134, 99, 80], "fixing_code_start_loc": [67, 134, 99, 53], "fixing_code_end_loc": [79, 172, 138, 85], "type": "CWE-79", "message": "jQuery UI is a curated set of user interface interactions, effects, widgets, and themes built on top of jQuery. Versions prior to 1.13.2 are potentially vulnerable to cross-site scripting. Initializing a checkboxradio widget on an input enclosed within a label makes that parent label contents considered as the input label. Calling `.checkboxradio( \"refresh\" )` on such a widget and the initial HTML contained encoded HTML entities will make them erroneously get decoded. This can lead to potentially executing JavaScript code. The bug has been patched in jQuery UI 1.13.2. To remediate the issue, someone who can change the initial HTML can wrap all the non-input contents of the `label` in a `span`.", "other": {"cve": {"id": "CVE-2022-31160", "sourceIdentifier": "security-advisories@github.com", "published": "2022-07-20T20:15:08.053", "lastModified": "2023-02-10T16:32:21.530", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "jQuery UI is a curated set of user interface interactions, effects, widgets, and themes built on top of jQuery. Versions prior to 1.13.2 are potentially vulnerable to cross-site scripting. Initializing a checkboxradio widget on an input enclosed within a label makes that parent label contents considered as the input label. Calling `.checkboxradio( \"refresh\" )` on such a widget and the initial HTML contained encoded HTML entities will make them erroneously get decoded. This can lead to potentially executing JavaScript code. The bug has been patched in jQuery UI 1.13.2. To remediate the issue, someone who can change the initial HTML can wrap all the non-input contents of the `label` in a `span`."}, {"lang": "es", "value": "jQuery UI es un conjunto curado de interacciones de interfaz de usuario, efectos, widgets y temas construidos sobre jQuery. Las versiones anteriores a 1.13.2, son potencialmente vulnerables a un ataque de tipo cross-site scripting. La inicializaci\u00f3n de un widget checkboxradio en una entrada encerrada dentro de una etiqueta hace que el contenido de la etiqueta padre sea considerado como la etiqueta de entrada. Llamar a \".checkboxradio(\"refresh\" )\" en un widget de este tipo y que el HTML inicial contenga entidades HTML codificadas har\u00e1 que sean decodificadas err\u00f3neamente. Esto puede conllevar a una posible ejecuci\u00f3n de c\u00f3digo JavaScript. El error ha sido parcheado en jQuery UI 1.13.2. Para remediar el problema, alguien que pueda cambiar el HTML inicial puede envolver todo el contenido que no sea de entrada de la \"label\" en un \"span\""}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}, {"source": "security-advisories@github.com", "type": "Secondary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "NONE", "userInteraction": "REQUIRED", "scope": "CHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "NONE", "baseScore": 6.1, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 2.8, "impactScore": 2.7}]}, "weaknesses": [{"source": "security-advisories@github.com", "type": "Primary", "description": [{"lang": "en", "value": "CWE-79"}]}], "configurations": [{"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:jqueryui:jquery_ui:*:*:*:*:*:jquery:*:*", "versionEndExcluding": "1.13.2", "matchCriteriaId": "420AC18F-8048-435E-B72E-6364C54B6334"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:netapp:h300s_firmware:-:*:*:*:*:*:*:*", "matchCriteriaId": "6770B6C3-732E-4E22-BF1C-2D2FD610061C"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:h:netapp:h300s:-:*:*:*:*:*:*:*", "matchCriteriaId": "9F9C8C20-42EB-4AB5-BD97-212DEB070C43"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:netapp:h500s_firmware:-:*:*:*:*:*:*:*", "matchCriteriaId": "7FFF7106-ED78-49BA-9EC5-B889E3685D53"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:h:netapp:h500s:-:*:*:*:*:*:*:*", "matchCriteriaId": "E63D8B0F-006E-4801-BF9D-1C001BBFB4F9"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:netapp:h700s_firmware:-:*:*:*:*:*:*:*", "matchCriteriaId": "56409CEC-5A1E-4450-AA42-641E459CC2AF"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:h:netapp:h700s:-:*:*:*:*:*:*:*", "matchCriteriaId": "B06F4839-D16A-4A61-9BB5-55B13F41E47F"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:netapp:h410s_firmware:-:*:*:*:*:*:*:*", "matchCriteriaId": "D0B4AD8A-F172-4558-AEC6-FF424BA2D912"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:h:netapp:h410s:-:*:*:*:*:*:*:*", "matchCriteriaId": "8497A4C9-8474-4A62-8331-3FE862ED4098"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:netapp:h410c_firmware:-:*:*:*:*:*:*:*", "matchCriteriaId": "234DEFE0-5CE5-4B0A-96B8-5D227CB8ED31"}]}, {"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": false, "criteria": "cpe:2.3:h:netapp:h410c:-:*:*:*:*:*:*:*", "matchCriteriaId": "CDDF61B7-EC5C-467C-B710-B89F502CD04F"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:netapp:oncommand_insight:-:*:*:*:*:*:*:*", "matchCriteriaId": "F1BE6C1F-2565-4E97-92AA-16563E5660A5"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:drupal:jquery_ui_checkboxradio:8.x-1.0:*:*:*:*:drupal:*:*", "matchCriteriaId": "8F79CB90-5BF1-41EF-8A42-63C21A53469C"}, {"vulnerable": true, "criteria": "cpe:2.3:a:drupal:jquery_ui_checkboxradio:8.x-1.1:*:*:*:*:drupal:*:*", "matchCriteriaId": "F3B3EB6E-0BF5-4B2A-A393-906EB34A8054"}, {"vulnerable": true, "criteria": "cpe:2.3:a:drupal:jquery_ui_checkboxradio:8.x-1.2:*:*:*:*:drupal:*:*", "matchCriteriaId": "E1F20BEE-5672-422D-B519-287FA8418384"}, {"vulnerable": true, "criteria": "cpe:2.3:a:drupal:jquery_ui_checkboxradio:8.x-1.3:*:*:*:*:drupal:*:*", "matchCriteriaId": "40ACFA48-4E82-4B93-AF97-FF963C680513"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:35:*:*:*:*:*:*:*", "matchCriteriaId": "80E516C0-98A4-4ADE-B69F-66A772E2BAAA"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:36:*:*:*:*:*:*:*", "matchCriteriaId": "5C675112-476C-4D7C-BCB9-A2FB2D0BC9FD"}, {"vulnerable": true, "criteria": "cpe:2.3:o:fedoraproject:fedora:37:*:*:*:*:*:*:*", "matchCriteriaId": "E30D0E6F-4AE8-4284-8716-991DFA48CC5D"}]}]}, {"operator": "AND", "nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:o:debian:debian_linux:10.0:*:*:*:*:*:*:*", "matchCriteriaId": "07B237A9-69A3-4A9C-9DA0-4E06BD37AE73"}]}]}], "references": [{"url": "https://blog.jqueryui.com/2022/07/jquery-ui-1-13-2-released/", "source": "security-advisories@github.com", "tags": ["Release Notes", "Vendor Advisory"]}, {"url": "https://github.com/jquery/jquery-ui/commit/8cc5bae1caa1fcf96bf5862c5646c787020ba3f9", "source": "security-advisories@github.com", "tags": ["Patch", "Third Party Advisory"]}, {"url": "https://github.com/jquery/jquery-ui/security/advisories/GHSA-h6gj-6jjq-h8g9", "source": "security-advisories@github.com", "tags": ["Exploit", "Mitigation", "Release Notes", "Third Party Advisory"]}, {"url": "https://lists.debian.org/debian-lts-announce/2022/12/msg00015.html", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/6XBR3G3JR5ZIOJDO4224M3INXDS2VFDD/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/J5LGNTICB5BRFAG3DHVVELS6H3CZSQMO/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QB2FJQXCNHO32VGVOC6DY6IPGVE4VDU6/", "source": "security-advisories@github.com", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://security.netapp.com/advisory/ntap-20220909-0007/", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}, {"url": "https://www.drupal.org/sa-contrib-2022-052", "source": "security-advisories@github.com", "tags": ["Third Party Advisory"]}]}, "github_commit_url": "https://github.com/jquery/jquery-ui/commit/8cc5bae1caa1fcf96bf5862c5646c787020ba3f9"}}