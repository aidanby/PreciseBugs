{"buggy_code": ["# Release Notes\n\n## 2.3.7 (2023-01-31)\n\n- Batch update collection items state\n- Add state filter to collection items view\n- Fix possible infinite content population loop\n- Fix filter option for collection link field\n- Add content view aside event triggers\n- Deep clone data object for preview interpolation\n- Update vendor libs\n\n## 2.3.6 (2023-01-03)\n\n- Fix tree model nesting items\n- Fix table preview for repeatable wysiwyg fields\n- Fix clearing readonly fields\n- Fix filter option for collection link field\n- Update vendor libs\n\n## 2.3.5 (2022-12-15)\n\n- Fix getallheaders keys\n- Improve assets api error message on missing parameters\n- Add placeholder container if empty nav field\n- Add autofocus to app search field on show\n- Add current locale context to fields in fields renderer component\n- Invalidate opcache for edited php files via finder\n- Remove avif support due to unpredictable server configurations\n- Fix PHP 8.2 related issues\n- Fix `maxlevel` meta property if value is 0\n- Define default sorting of items in collection model meta settings\n- Auto-resolve $DATE() values in db queries\n\n## 2.3.4 (2022-11-25)\n\n- Fix user settings updating for users without admin role\n- Update vendor libs\n- Update Vue to 3.2.45\n- Cache loaded icons in admin view\n- Add drag'n drop upload of files support (finder module)\n- Fix cross-origin error (content previews) @isemog\n\n## 2.3.3 (2022-11-02)\n\n- Add ESC + auto focus support for dialogs\n- Update Vue to 3.2.41\n- Add finder module (only for super admin users)\n- Set default value to false for boolean fields\n- Update vendor libs\n\n## 2.3.2 (2022-10-24)\n\n- Add clear cache action\n- Fix spaces load error if spaces folder does not exists\n\n\n## 2.3.1 (2022-10-21)\n\n- Fix return type for Utils::parseSize\n- Update Uppy.js to v3.0.1\n- Resolve nested linked content items on content item population\n- Auto-populate content item for content previews\n- Fix response cache\n- Fix time field error (list option)\n- Refactor CORS preflight handling\n- Add spaces feature (beta)\n\n## 2.3.0 (2022-09-16)\n\n- Update vendor libs\n- Fix field-object js error\n- Don't apply default content fields on update (saveItem)\n- Fix GraphQL error when numeric field names are used\n- Fix wysiwyg field (Safari) #24\n- Fix enter on selected result in app search\n- Update Vue to 3.2.39\n- Improve custom api endpoint resolving\n- Fix updating items via API #27 @o-\n\n\n## 2.2.2 (2022-08-20)\n\n- Add `./tower app:update` cli command to update Cockpit to the latest or specific version\n- Fix exposing 2FA secret in JWT token on login\n- Enable keyboard navigation in search modal #14 @raffaelj\n- Prevent double loading of field-code.js #15 @raffaelj\n- Fix 2fa for login modal #13 @raffaelj\n\n## 2.2.1 (2022-08-10)\n\n- Fix linked tree content item display resolver\n- Refactor content models index page\n\n## 2.2.0 (2022-08-08)\n\n- Add create|update|delete endpoints content item to REST API\n- Add GraphQL mutation saveContentItem to create|update content items\n- Add GraphQL mutation deleteContentItem to delete content items\n- Add app side panel (admin layout)\n- Stop execution of code after redirecting\n\n## 2.1.2 (2022-08-04)\n\n- \ud83d\udea8 Fix typo field-contentItemtLink -> Need to re-assign field type contentItemLink \ud83d\udea8\n- General cleanup + fix typos\n- Add content tree items reorder permission\n- Refactor app layout header\n- Show more detailed error message if saving user settings fail\n- Hide publish state configuration ui if missing permission to mange publish state\n- Fix selected item link of tree model\n- Fix missing assets folders permission checks\n\n## 2.1.1 (2022-08-02)\n\n- Fix tree model route in app search results\n- Fix loosing nested level on saving tree item\n\n## 2.1.0 (2022-08-01)\n\n- Add initial global app search implementation (alt|option + f)\n- Minor fixes on closing html tag + uninitialized variable #11 @remluben\n- Update lib/vendor\n- Update vendor assets sortablejs v1.15, uppy v2.13.1, tinyMCE v6.1.2\n- Add model type tree - organize content items as tree\n\n## 2.0.2 (2022-07-20)\n\n- Fix select boxes in dark theme (chrome on windows) #8\n- Change login (noun) to log in (verb)\n- Fix required field check on nested repeatable items\n- Enable picking item by clicking on empty placeholder area (Asset + Content Link field)\n- Open api playground with preselected api key\n- Enable clear field function also in nested fields\n- Make fields-manger + fields-renderer component available by default\n- Set content model icon\n\n## 2.0.1 (2022-07-17)\n\n- Refactor admin ui localization\n- Object.freeze App._vars + App._paths\n- Make logged in user information available on the client side (App.user)\n- Update .htaccess file to deny public access to php files except router entry index.php\n- Add visual hover state to content item tables\n\n## 2.0.0 (2022-07-13)\n\n- Initial release \ud83c\udf7e\ud83e\udd73", "<?php\n\nnamespace System\\Controller;\n\nuse App\\Controller\\App;\n\nclass Users extends App {\n\n    protected function before() {\n\n        // is account view\n        if ($this->context['action'] == 'user' && !count($this->context['params'])) {\n            return true;\n        }\n\n        // update current user profile\n        if ($this->context['action'] == 'save') {\n\n            $user = $this->param('user');\n\n            if (isset($user['_id']) && $user['_id'] === $this->user['_id']) {\n                return true;\n            }\n        }\n\n        // check general permission to manage users\n        if (!$this->isAllowed('app/users/manage')) {\n            return $this->stop(401);\n        }\n    }\n\n    public function index() {\n\n        return $this->render('system:views/users/index.php');\n    }\n\n    public function user($id = null) {\n\n        $isAccountView = !$id;\n\n        if (!$id) {\n            $id = $this->user['_id'];\n        }\n\n        $this->checkAndLockResource($id);\n\n        $user = $this->app->dataStorage->findOne('system/users', ['_id' => $id]);\n\n        if (!$user) {\n            return false;\n        }\n\n        unset($user[\"password\"]);\n\n        $languages = $this->geti18n();\n\n        return $this->render('system:views/users/user.php', compact('user', 'isAccountView', 'languages'));\n    }\n\n    public function create() {\n\n        $user = [\n            'active' => true,\n            'user'   => '',\n            'email'  => '',\n            'role'   => 'admin',\n            'theme'  => 'auto',\n            'i18n'   => $this->app->helper('i18n')->locale\n        ];\n\n        $isAccountView = false;\n        $languages = $this->geti18n();\n\n        return $this->render('system:views/users/user.php', compact('user', 'isAccountView', 'languages'));\n    }\n\n    public function save() {\n\n        $user = $this->param('user');\n\n        if (!$user) {\n            return $this->stop(['error' => 'User data is missing'], 412);\n        }\n\n        $user['_modified'] = time();\n        $isUpdate = isset($user['_id']);\n\n        if (!$isUpdate) {\n\n            // new user needs a password\n            if (!isset($user['password']) || !trim($user['password'])) {\n                return $this->stop(['error' => 'User password required'], 412);\n            }\n\n            if (!isset($user['user']) || !trim($user['user'])) {\n                return $this->stop(['error' => 'Username required'], 412);\n            }\n\n            $user['_created'] = $user['_modified'];\n        }\n\n        if (isset($user['password'])) {\n\n            if (strlen($user['password'])){\n                $user['password'] = $this->app->hash($user['password']);\n            } else {\n                unset($user['password']);\n            }\n        }\n\n        if (isset($user['email']) && !$this->helper('utils')->isEmail($user['email'])) {\n            return $this->stop(['error' => 'Valid email required'], 412);\n        }\n\n        if (isset($user['user']) && !trim($user['user'])) {\n            return $this->stop(['error' => 'Username cannot be empty!'], 412);\n        }\n\n        if (isset($user['name']) && !trim($user['name'])) {\n            return $this->stop(['error' => 'Name cannot be empty!'], 412);\n        }\n\n        foreach (['name', 'user', 'email'] as $key) {\n            $user[$key] = strip_tags(trim($user[$key]));\n        }\n\n        // unique check\n\n        $_user = $this->app->dataStorage->findOne('system/users', ['user' => $user['user']]);\n\n        if ($_user && (!isset($user['_id']) || $user['_id'] != $_user['_id'])) {\n            return $this->app->stop(['error' =>  'Username is already used!'], 412);\n        }\n\n        $_user = $this->app->dataStorage->findOne('system/users', ['email'  => $user['email']]);\n\n        if ($_user && (!isset($user['_id']) || $user['_id'] != $_user['_id'])) {\n            return $this->app->stop(['error' =>  'Email is already used!'], 412);\n        }\n        // --\n\n        $this->app->trigger('app.users.save', [&$user, $isUpdate]);\n        $this->app->dataStorage->save('system/users', $user);\n\n        $user = $this->app->dataStorage->findOne('system/users', ['_id' => $user['_id']]);\n\n        unset($user['password'], $user['_reset_token']);\n\n        if ($user['_id'] == $this->user['_id']) {\n            $this->helper('auth')->setUser($user);\n        }\n\n        return $user;\n    }\n\n    public function remove() {\n\n        $user = $this->param('user');\n\n        if (!$user || !isset($user['_id'])) {\n            return $this->stop(['error' => 'User is missing'], 412);\n        }\n\n        if ($user['_id'] == $this->user['_id']) {\n            return $this->stop(['error' => \"User can't delete himself\"], 412);\n        }\n\n        $this->app->dataStorage->remove('system/users', ['_id' => $user['_id']]);\n\n        return ['success' => true];\n    }\n\n    public function load() {\n\n        $this->helper('session')->close();\n\n        $options = array_merge([\n            'sort'   => ['user' => 1],\n            'limit'  => 1\n        ], $this->param('options', []));\n\n        if (isset($options['filter']) && $options['filter'] && is_string($options['filter'])) {\n\n            $filter = null;\n\n            if (\\preg_match('/^\\{(.*)\\}$/', $options['filter'])) {\n\n                try {\n                    $filter = json5_decode($options['filter'], true);\n                } catch (\\Exception $e) {}\n            }\n\n            if (!$filter) {\n                $filter = [\n                    '$or' => [\n                        ['name' => ['$regex' => $options['filter']]],\n                        ['user' => ['$regex' => $options['filter']]],\n                        ['email' => ['$regex' => $options['filter']]],\n                    ]\n                ];\n            }\n\n            $options['filter'] = $filter;\n        }\n\n        $users = $this->app->dataStorage->find('system/users', $options)->toArray();\n        $count = (!isset($options['skip']) && !isset($options['limit'])) ? count($users) : $this->app->dataStorage->count('system/users', isset($options['filter']) ? $options['filter'] : []);\n        $pages = isset($options['limit']) ? ceil($count / $options['limit']) : 1;\n        $page  = 1;\n\n        if ($pages > 1 && isset($options['skip'])) {\n            $page = ceil($options['skip'] / $options['limit']) + 1;\n        }\n\n        foreach ($users as &$user) {\n            $this->app->trigger('app.user.disguise', [&$user]);\n        }\n\n        return compact('users', 'count', 'pages', 'page');\n    }\n\n    public function getSecretQRCode($secret = null, $size = 150) {\n\n        $this->helper('session')->close();\n\n        if (!$secret) {\n            return false;\n        }\n\n        $this->app->response->mime = 'svg';\n\n        return $this->helper('twfa')->getQRCodeImage($secret, intval($size));\n    }\n\n    protected function geti18n() {\n\n        $languages = [['i18n' => 'en', 'language' => 'English']];\n\n        foreach ($this->app->helper('fs')->ls('*.php', '#config:i18n/App') as $file) {\n\n            $lang     = include($file->getRealPath());\n            $i18n     = $file->getBasename('.php');\n            $language = $lang['@meta']['language'] ?? $i18n;\n\n            $languages[] = ['i18n' => $i18n, 'language'=> $language];\n        }\n\n        return $languages;\n    }\n}\n"], "fixing_code": ["# Release Notes\n\n## WIP\n\n- Fix not allowed user role modification by intercepting request\n\n## 2.3.7 (2023-01-31)\n\n- Batch update collection items state\n- Add state filter to collection items view\n- Fix possible infinite content population loop\n- Fix filter option for collection link field\n- Add content view aside event triggers\n- Deep clone data object for preview interpolation\n- Update vendor libs\n\n## 2.3.6 (2023-01-03)\n\n- Fix tree model nesting items\n- Fix table preview for repeatable wysiwyg fields\n- Fix clearing readonly fields\n- Fix filter option for collection link field\n- Update vendor libs\n\n## 2.3.5 (2022-12-15)\n\n- Fix getallheaders keys\n- Improve assets api error message on missing parameters\n- Add placeholder container if empty nav field\n- Add autofocus to app search field on show\n- Add current locale context to fields in fields renderer component\n- Invalidate opcache for edited php files via finder\n- Remove avif support due to unpredictable server configurations\n- Fix PHP 8.2 related issues\n- Fix `maxlevel` meta property if value is 0\n- Define default sorting of items in collection model meta settings\n- Auto-resolve $DATE() values in db queries\n\n## 2.3.4 (2022-11-25)\n\n- Fix user settings updating for users without admin role\n- Update vendor libs\n- Update Vue to 3.2.45\n- Cache loaded icons in admin view\n- Add drag'n drop upload of files support (finder module)\n- Fix cross-origin error (content previews) @isemog\n\n## 2.3.3 (2022-11-02)\n\n- Add ESC + auto focus support for dialogs\n- Update Vue to 3.2.41\n- Add finder module (only for super admin users)\n- Set default value to false for boolean fields\n- Update vendor libs\n\n## 2.3.2 (2022-10-24)\n\n- Add clear cache action\n- Fix spaces load error if spaces folder does not exists\n\n\n## 2.3.1 (2022-10-21)\n\n- Fix return type for Utils::parseSize\n- Update Uppy.js to v3.0.1\n- Resolve nested linked content items on content item population\n- Auto-populate content item for content previews\n- Fix response cache\n- Fix time field error (list option)\n- Refactor CORS preflight handling\n- Add spaces feature (beta)\n\n## 2.3.0 (2022-09-16)\n\n- Update vendor libs\n- Fix field-object js error\n- Don't apply default content fields on update (saveItem)\n- Fix GraphQL error when numeric field names are used\n- Fix wysiwyg field (Safari) #24\n- Fix enter on selected result in app search\n- Update Vue to 3.2.39\n- Improve custom api endpoint resolving\n- Fix updating items via API #27 @o-\n\n\n## 2.2.2 (2022-08-20)\n\n- Add `./tower app:update` cli command to update Cockpit to the latest or specific version\n- Fix exposing 2FA secret in JWT token on login\n- Enable keyboard navigation in search modal #14 @raffaelj\n- Prevent double loading of field-code.js #15 @raffaelj\n- Fix 2fa for login modal #13 @raffaelj\n\n## 2.2.1 (2022-08-10)\n\n- Fix linked tree content item display resolver\n- Refactor content models index page\n\n## 2.2.0 (2022-08-08)\n\n- Add create|update|delete endpoints content item to REST API\n- Add GraphQL mutation saveContentItem to create|update content items\n- Add GraphQL mutation deleteContentItem to delete content items\n- Add app side panel (admin layout)\n- Stop execution of code after redirecting\n\n## 2.1.2 (2022-08-04)\n\n- \ud83d\udea8 Fix typo field-contentItemtLink -> Need to re-assign field type contentItemLink \ud83d\udea8\n- General cleanup + fix typos\n- Add content tree items reorder permission\n- Refactor app layout header\n- Show more detailed error message if saving user settings fail\n- Hide publish state configuration ui if missing permission to mange publish state\n- Fix selected item link of tree model\n- Fix missing assets folders permission checks\n\n## 2.1.1 (2022-08-02)\n\n- Fix tree model route in app search results\n- Fix loosing nested level on saving tree item\n\n## 2.1.0 (2022-08-01)\n\n- Add initial global app search implementation (alt|option + f)\n- Minor fixes on closing html tag + uninitialized variable #11 @remluben\n- Update lib/vendor\n- Update vendor assets sortablejs v1.15, uppy v2.13.1, tinyMCE v6.1.2\n- Add model type tree - organize content items as tree\n\n## 2.0.2 (2022-07-20)\n\n- Fix select boxes in dark theme (chrome on windows) #8\n- Change login (noun) to log in (verb)\n- Fix required field check on nested repeatable items\n- Enable picking item by clicking on empty placeholder area (Asset + Content Link field)\n- Open api playground with preselected api key\n- Enable clear field function also in nested fields\n- Make fields-manger + fields-renderer component available by default\n- Set content model icon\n\n## 2.0.1 (2022-07-17)\n\n- Refactor admin ui localization\n- Object.freeze App._vars + App._paths\n- Make logged in user information available on the client side (App.user)\n- Update .htaccess file to deny public access to php files except router entry index.php\n- Add visual hover state to content item tables\n\n## 2.0.0 (2022-07-13)\n\n- Initial release \ud83c\udf7e\ud83e\udd73", "<?php\n\nnamespace System\\Controller;\n\nuse App\\Controller\\App;\n\nclass Users extends App {\n\n    protected function before() {\n\n        // is account view\n        if ($this->context['action'] == 'user' && !count($this->context['params'])) {\n            return true;\n        }\n\n        // update current user profile\n        if ($this->context['action'] == 'save') {\n\n            $user = $this->param('user');\n\n            if (isset($user['_id']) && $user['_id'] === $this->user['_id']) {\n                return true;\n            }\n        }\n\n        // check general permission to manage users\n        if (!$this->isAllowed('app/users/manage')) {\n            return $this->stop(401);\n        }\n    }\n\n    public function index() {\n\n        return $this->render('system:views/users/index.php');\n    }\n\n    public function user($id = null) {\n\n        $isAccountView = !$id;\n\n        if (!$id) {\n            $id = $this->user['_id'];\n        }\n\n        $this->checkAndLockResource($id);\n\n        $user = $this->app->dataStorage->findOne('system/users', ['_id' => $id]);\n\n        if (!$user) {\n            return false;\n        }\n\n        unset($user[\"password\"]);\n\n        $languages = $this->geti18n();\n\n        return $this->render('system:views/users/user.php', compact('user', 'isAccountView', 'languages'));\n    }\n\n    public function create() {\n\n        $user = [\n            'active' => true,\n            'user'   => '',\n            'email'  => '',\n            'role'   => 'admin',\n            'theme'  => 'auto',\n            'i18n'   => $this->app->helper('i18n')->locale\n        ];\n\n        $isAccountView = false;\n        $languages = $this->geti18n();\n\n        return $this->render('system:views/users/user.php', compact('user', 'isAccountView', 'languages'));\n    }\n\n    public function save() {\n\n        $user = $this->param('user');\n\n        if (!$user) {\n            return $this->stop(['error' => 'User data is missing'], 412);\n        }\n\n        // don't allow to change role if not allowed\n        if (isset($user['role']) && !$this->isAllowed('app/users/manage')) {\n            unset($user['role']);\n        }\n\n        $user['_modified'] = time();\n        $isUpdate = isset($user['_id']);\n\n        if (!$isUpdate) {\n\n            // new user needs a password\n            if (!isset($user['password']) || !trim($user['password'])) {\n                return $this->stop(['error' => 'User password required'], 412);\n            }\n\n            if (!isset($user['user']) || !trim($user['user'])) {\n                return $this->stop(['error' => 'Username required'], 412);\n            }\n\n            $user['_created'] = $user['_modified'];\n        }\n\n        if (isset($user['password'])) {\n\n            if (strlen($user['password'])){\n                $user['password'] = $this->app->hash($user['password']);\n            } else {\n                unset($user['password']);\n            }\n        }\n\n        if (isset($user['email']) && !$this->helper('utils')->isEmail($user['email'])) {\n            return $this->stop(['error' => 'Valid email required'], 412);\n        }\n\n        if (isset($user['user']) && !trim($user['user'])) {\n            return $this->stop(['error' => 'Username cannot be empty!'], 412);\n        }\n\n        if (isset($user['name']) && !trim($user['name'])) {\n            return $this->stop(['error' => 'Name cannot be empty!'], 412);\n        }\n\n        foreach (['name', 'user', 'email'] as $key) {\n            $user[$key] = strip_tags(trim($user[$key]));\n        }\n\n        // unique check\n\n        $_user = $this->app->dataStorage->findOne('system/users', ['user' => $user['user']]);\n\n        if ($_user && (!isset($user['_id']) || $user['_id'] != $_user['_id'])) {\n            return $this->app->stop(['error' =>  'Username is already used!'], 412);\n        }\n\n        $_user = $this->app->dataStorage->findOne('system/users', ['email'  => $user['email']]);\n\n        if ($_user && (!isset($user['_id']) || $user['_id'] != $_user['_id'])) {\n            return $this->app->stop(['error' =>  'Email is already used!'], 412);\n        }\n        // --\n\n        $this->app->trigger('app.users.save', [&$user, $isUpdate]);\n        $this->app->dataStorage->save('system/users', $user);\n\n        $user = $this->app->dataStorage->findOne('system/users', ['_id' => $user['_id']]);\n\n        unset($user['password'], $user['_reset_token']);\n\n        if ($user['_id'] == $this->user['_id']) {\n            $this->helper('auth')->setUser($user);\n        }\n\n        return $user;\n    }\n\n    public function remove() {\n\n        $user = $this->param('user');\n\n        if (!$user || !isset($user['_id'])) {\n            return $this->stop(['error' => 'User is missing'], 412);\n        }\n\n        if ($user['_id'] == $this->user['_id']) {\n            return $this->stop(['error' => \"User can't delete himself\"], 412);\n        }\n\n        $this->app->dataStorage->remove('system/users', ['_id' => $user['_id']]);\n\n        return ['success' => true];\n    }\n\n    public function load() {\n\n        $this->helper('session')->close();\n\n        $options = array_merge([\n            'sort'   => ['user' => 1],\n            'limit'  => 1\n        ], $this->param('options', []));\n\n        if (isset($options['filter']) && $options['filter'] && is_string($options['filter'])) {\n\n            $filter = null;\n\n            if (\\preg_match('/^\\{(.*)\\}$/', $options['filter'])) {\n\n                try {\n                    $filter = json5_decode($options['filter'], true);\n                } catch (\\Exception $e) {}\n            }\n\n            if (!$filter) {\n                $filter = [\n                    '$or' => [\n                        ['name' => ['$regex' => $options['filter']]],\n                        ['user' => ['$regex' => $options['filter']]],\n                        ['email' => ['$regex' => $options['filter']]],\n                    ]\n                ];\n            }\n\n            $options['filter'] = $filter;\n        }\n\n        $users = $this->app->dataStorage->find('system/users', $options)->toArray();\n        $count = (!isset($options['skip']) && !isset($options['limit'])) ? count($users) : $this->app->dataStorage->count('system/users', isset($options['filter']) ? $options['filter'] : []);\n        $pages = isset($options['limit']) ? ceil($count / $options['limit']) : 1;\n        $page  = 1;\n\n        if ($pages > 1 && isset($options['skip'])) {\n            $page = ceil($options['skip'] / $options['limit']) + 1;\n        }\n\n        foreach ($users as &$user) {\n            $this->app->trigger('app.user.disguise', [&$user]);\n        }\n\n        return compact('users', 'count', 'pages', 'page');\n    }\n\n    public function getSecretQRCode($secret = null, $size = 150) {\n\n        $this->helper('session')->close();\n\n        if (!$secret) {\n            return false;\n        }\n\n        $this->app->response->mime = 'svg';\n\n        return $this->helper('twfa')->getQRCodeImage($secret, intval($size));\n    }\n\n    protected function geti18n() {\n\n        $languages = [['i18n' => 'en', 'language' => 'English']];\n\n        foreach ($this->app->helper('fs')->ls('*.php', '#config:i18n/App') as $file) {\n\n            $lang     = include($file->getRealPath());\n            $i18n     = $file->getBasename('.php');\n            $language = $lang['@meta']['language'] ?? $i18n;\n\n            $languages[] = ['i18n' => $i18n, 'language'=> $language];\n        }\n\n        return $languages;\n    }\n}\n"], "filenames": ["CHANGELOG.md", "modules/System/Controller/Users.php"], "buggy_code_start_loc": [1, 84], "buggy_code_end_loc": [1, 84], "fixing_code_start_loc": [2, 85], "fixing_code_end_loc": [6, 90], "type": "CWE-268", "message": "Privilege Chaining in GitHub repository cockpit-hq/cockpit prior to 2.3.8.", "other": {"cve": {"id": "CVE-2023-0759", "sourceIdentifier": "security@huntr.dev", "published": "2023-02-09T14:15:24.510", "lastModified": "2023-02-16T14:44:58.117", "vulnStatus": "Analyzed", "descriptions": [{"lang": "en", "value": "Privilege Chaining in GitHub repository cockpit-hq/cockpit prior to 2.3.8."}], "metrics": {"cvssMetricV31": [{"source": "nvd@nist.gov", "type": "Primary", "cvssData": {"version": "3.1", "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H", "attackVector": "NETWORK", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "HIGH", "integrityImpact": "HIGH", "availabilityImpact": "HIGH", "baseScore": 8.8, "baseSeverity": "HIGH"}, "exploitabilityScore": 2.8, "impactScore": 5.9}], "cvssMetricV30": [{"source": "security@huntr.dev", "type": "Secondary", "cvssData": {"version": "3.0", "vectorString": "CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L", "attackVector": "LOCAL", "attackComplexity": "LOW", "privilegesRequired": "LOW", "userInteraction": "NONE", "scope": "UNCHANGED", "confidentialityImpact": "LOW", "integrityImpact": "LOW", "availabilityImpact": "LOW", "baseScore": 5.3, "baseSeverity": "MEDIUM"}, "exploitabilityScore": 1.8, "impactScore": 3.4}]}, "weaknesses": [{"source": "security@huntr.dev", "type": "Primary", "description": [{"lang": "en", "value": "CWE-268"}]}], "configurations": [{"nodes": [{"operator": "OR", "negate": false, "cpeMatch": [{"vulnerable": true, "criteria": "cpe:2.3:a:agentejo:cockpit:*:*:*:*:*:*:*:*", "versionEndExcluding": "2.3.8", "matchCriteriaId": "9DE9300E-C610-41F7-BF2C-C708C740F196"}]}]}], "references": [{"url": "https://github.com/cockpit-hq/cockpit/commit/78d6ed3bf093ee11356ba66320c628c727068714", "source": "security@huntr.dev", "tags": ["Patch"]}, {"url": "https://huntr.dev/bounties/49e2cccc-bb56-4633-ba6a-b3803e251347", "source": "security@huntr.dev", "tags": ["Exploit", "Issue Tracking", "Patch", "Third Party Advisory"]}]}, "github_commit_url": "https://github.com/cockpit-hq/cockpit/commit/78d6ed3bf093ee11356ba66320c628c727068714"}}